%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[112.90842438 587.87341309]
[117.25691223 573.30773926]
[126.85231781 561.51806641]
[140.23139954 554.30218506]
[138.67088318 539.38360596]
[137.11035156 524.46496582]
[135.54983521 509.54638672]
[133.98931885 494.62777710]
[132.31776428 479.72119141]
[130.53530884 464.82748413]
[128.42068481 449.97729492]
[125.97495270 435.17800903]
[123.41912079 420.39736938]
[120.75332642 405.63613892]
[118.08753204 390.87490845]
[104.02412415 385.96713257]
[94.24041748 374.60339355]
[91.43985748 359.77020264]
[96.47296143 345.43267822]
[108.08251190 335.47448730]
[105.41671753 320.71328735]
[102.75092316 305.95205688]
[94.27042389 318.32464600]
[79.85530090 322.47244263]
[66.09595490 316.49914551]
[59.28297806 303.13565063]
[62.53116226 288.49154663]
[74.35549164 279.26196289]
[89.35003662 279.66650391]
[100.66039276 289.52188110]
[99.54474640 274.56341553]
[98.42910004 259.60498047]
[87.27169037 254.82087708]
[79.15908813 245.69297791]
[75.67672729 233.91273499]
[77.54431152 221.69833374]
[84.46808624 211.37699890]
[95.18508148 204.94163513]
[94.51529694 189.95660400]
[93.84551239 174.97155762]
[90.98810577 171.14477539]
[90.50431824 165.48236084]
[93.38560486 159.53175354]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[89.21504211 67.19918823]
[88.18125153 63.39185715]
[88.41844177 59.84514618]
[89.68170166 56.93468475]
[91.62718201 54.91645813]
[92.07379150 39.92310715]
[92.52039337 24.92975807]
[80.88846588 34.40066910]
[65.95307922 33.00983810]
[56.26991653 21.55399704]
[57.38592529 6.59557056]
[68.66180420 -3.29657483]
[83.63822174 -2.45576859]
[93.73567963 8.63544464]
[95.51814270 -6.25827217]
[97.30060577 -21.15198898]
[99.08307648 -36.04570770]
[100.86553955 -50.93942261]
[94.82295227 -65.56124878]
[104.01782227 -77.27890778]
[105.68936157 -92.18548584]
[106.24757385 -107.17509460]
[105.80097198 -122.16844177]
[105.35436249 -137.16178894]
[104.90776062 -152.15513611]
[104.46115112 -167.14849854]
[101.07762146 -175.63316345]
[104.12118530 -182.36802673]
[103.89785767 -197.36636353]
[103.67453003 -212.36470032]
[87.96084595 -219.29071045]
[76.89111328 -232.34646606]
[72.65553284 -248.87399292]
[76.05937958 -265.53616333]
[86.37040710 -278.99038696]
[101.47575378 -286.55929565]
[100.80596924 -301.54434204]
[90.53849030 -316.83029175]
[99.22705841 -332.07742310]
[98.33424377 -347.05084229]
[97.44142914 -362.02426147]
[96.54861450 -376.99765015]
[95.65579987 -391.97106934]
[94.76298523 -406.94445801]
[80.03865051 -410.31652832]
[66.86144257 -417.70150757]
[56.29958725 -428.50076294]
[49.20927811 -441.83883667]
[46.16529846 -456.63446045]
[47.41440964 -471.68823242]
[52.85534668 -485.77984619]
[62.04704285 -497.76687622]
[74.24436951 -506.67767334]
[88.45854187 -511.78979492]
[103.53727722 -512.68890381]
[118.25821686 -509.30206299]
[131.42799377 -501.90383911]
[141.97898865 -491.09399414]
[149.05590820 -477.74880981]
[152.08502197 -462.95010376]
[150.82078552 -447.89758301]
[145.36569214 -433.81146240]
[136.16195679 -421.83364868]
[123.95568848 -412.93515015]
[109.73638916 -407.83728027]
[110.62920380 -392.86386108]
[111.52201843 -377.89047241]
[112.41483307 -362.91705322]
[113.30764771 -347.94366455]
[114.20046997 -332.97024536]
[123.03679657 -324.70913696]
[123.90316010 -312.24185181]
[115.79100800 -302.21411133]
[116.46079254 -287.22906494]
[128.78144836 -283.11264038]
[138.99502563 -275.03442383]
[145.87239075 -263.93896484]
[148.57647705 -251.13545227]
[146.76423645 -238.14335632]
[140.62985229 -226.51205444]
[130.88427734 -217.63612366]
[118.67287445 -212.58802795]
[118.89620209 -197.58969116]
[119.11952972 -182.59135437]
[119.45450592 -167.59509277]
[119.90110779 -152.60174561]
[120.34771729 -137.60839844]
[120.79431915 -122.61505127]
[121.24092865 -107.62169647]
[130.20314026 -119.64994812]
[144.20780945 -125.02294922]
[158.91543579 -122.07582855]
[169.76870728 -111.72177124]
[173.40461731 -97.16910553]
[168.69654846 -82.92712402]
[157.10331726 -73.40886688]
[142.21725464 -71.56366730]
[128.65092468 -77.96327972]
[120.60797119 -90.62496185]
[123.03854370 -83.64540863]
[118.91154480 -75.49644470]
[125.08162689 -61.93991852]
[115.75925446 -49.15695953]
[113.97679138 -34.26324081]
[112.19432831 -19.36952400]
[110.41185760 -4.47580624]
[108.62939453 10.41791058]
[107.51374817 25.37636375]
[107.06713867 40.36971283]
[106.62053680 55.36306381]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[108.38394165 159.30842590]
[108.83055115 174.30177307]
[109.50033569 189.28681946]
[110.17012024 204.27185059]
[125.59140778 213.80819702]
[132.14367676 230.54579163]
[127.37918854 247.71409607]
[113.38755035 258.48931885]
[114.50319672 273.44778442]
[115.61885071 288.40621948]
[117.51213837 303.28625488]
[120.17793274 318.04748535]
[122.84373474 332.80868530]
[137.20310974 338.07702637]
[146.93327332 349.74838257]
[149.49798584 364.62417603]
[144.30714417 378.69226074]
[132.84873962 388.20913696]
[135.51454163 402.97033691]
[138.18034363 417.73156738]
[142.78506470 425.62045288]
[140.77423096 432.73226929]
[143.21995544 447.53155518]
[146.53338623 451.56494141]
[147.83792114 456.02044678]
[147.30915833 460.06216431]
[145.42901611 463.04501343]
[147.21148682 477.93872070]
[151.33848572 486.08770752]
[148.90791321 493.06726074]
[150.46844482 507.98583984]
[152.02896118 522.90447998]
[153.58947754 537.82305908]
[155.15000916 552.74163818]
[169.73274231 557.03265381]
[181.56019592 566.58142090]
[188.82879639 579.93194580]
[190.43009949 595.04827881]
[186.11994934 609.62536621]
[176.55560303 621.44024658]
[163.19554138 628.69128418]
[148.07708740 630.27270508]
[133.50570679 625.94342041]
[121.70340729 616.36352539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 194]
[10 193]
[11 189]
[12 188]
[13 186]
[14 185]
[15 184]
[20 179]
[21 178]
[22 177]
[30 176]
[31 175]
[32 174]
[38 170]
[39 169]
[40 168]
[43 167]
[44 166]
[45 165]
[46 164]
[48 161]
[49 160]
[54 159]
[55 158]
[56 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[69 150]
[70 148]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[77 133]
[78 132]
[79 131]
[85 123]
[86 122]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
