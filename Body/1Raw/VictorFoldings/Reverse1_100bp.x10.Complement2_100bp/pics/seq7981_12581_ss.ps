%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[162.11802673 676.02514648]
[163.38615417 661.04187012]
[167.16838074 646.48840332]
[173.35591125 632.78356934]
[181.77070618 620.32165527]
[192.17066956 609.46124268]
[204.25654602 600.51477051]
[217.68061829 593.73962402]
[213.27963257 579.39978027]
[208.87863159 565.05993652]
[198.34240723 559.11730957]
[194.55850220 547.20660400]
[200.07522583 535.54772949]
[195.88821411 521.14398193]
[191.70120239 506.74017334]
[187.51419067 492.33639526]
[183.83444214 489.29196167]
[182.02812195 483.90362549]
[183.42382812 477.44116211]
[179.66752625 462.91909790]
[175.91122437 448.39703369]
[162.98690796 441.08279419]
[158.97061157 426.40887451]
[166.73008728 412.90228271]
[162.97378540 398.38021851]
[159.21748352 383.85815430]
[148.95712280 377.45101929]
[145.70883179 365.38317871]
[151.74064636 353.98229980]
[148.20097351 339.40591431]
[144.66130066 324.82955933]
[141.12162781 310.25317383]
[137.58197021 295.67678833]
[123.25370789 295.29171753]
[109.50302124 291.20349121]
[97.27102661 283.68539429]
[87.39662933 273.24566650]
[80.55894470 260.59310913]
[77.23061371 246.58911133]
[77.64511108 232.18884277]
[81.78041840 218.37622070]
[89.36005402 206.09663391]
[99.87159729 196.19223022]
[112.60127258 189.34417725]
[109.27900696 174.71672058]
[105.95674896 160.08926392]
[102.63449097 145.46180725]
[99.31223297 130.83433533]
[86.12832642 127.54644012]
[75.63680267 118.91201019]
[69.87396240 106.60691833]
[69.95832825 93.01948547]
[75.87352753 80.78690338]
[86.47146606 72.28342438]
[83.36735535 57.60812378]
[80.26324463 42.93282318]
[69.83761597 31.03253746]
[74.77364349 16.97960281]
[71.66953278 2.30430126]
[68.17929077 -1.57710719]
[66.67711639 -5.96991539]
[67.02488708 -10.03120899]
[68.76995087 -13.09504414]
[66.32422638 -27.89431572]
[63.87849808 -42.69358444]
[61.43276978 -57.49285507]
[53.53083420 -44.74297714]
[39.68785095 -38.96614456]
[25.06690979 -42.31697083]
[15.12125778 -53.54568481]
[13.56037998 -68.46425629]
[20.96644402 -81.50841522]
[34.57717133 -87.81302643]
[49.31609726 -85.02661896]
[59.68647766 -74.18740082]
[59.01669312 -89.17243958]
[58.34690857 -104.15747833]
[43.57464981 -107.13507080]
[29.95260048 -113.55784607]
[18.27073669 -123.04853821]
[9.20536709 -135.05209351]
[3.27998590 -148.86814880]
[0.83503640 -163.69187927]
[2.00835538 -178.66088867]
[6.72741079 -192.90542603]
[14.71376991 -205.59880066]
[25.49952126 -216.00550842]
[38.45469284 -223.52372742]
[52.82403564 -227.72018433]
[52.15425110 -242.70523071]
[51.48446274 -257.69027710]
[43.13867188 -271.13119507]
[50.29995346 -284.19125366]
[49.63016510 -299.17630005]
[48.96038055 -314.16131592]
[48.29059601 -329.14636230]
[33.89771271 -333.96398926]
[22.21956444 -343.65856934]
[14.83552742 -356.91906738]
[12.74423122 -371.95205688]
[16.22850609 -386.72445679]
[24.81713295 -399.23846436]
[37.34857178 -407.80160522]
[52.12804413 -411.25582886]
[67.15675354 -409.13394165]
[80.40218353 -401.72293091]
[90.07300568 -390.02508545]
[94.86132050 -375.62243652]
[94.11953735 -360.46279907]
[87.94799042 -346.59643555]
[77.18132019 -335.89862061]
[63.27563477 -329.81616211]
[63.94541931 -314.83111572]
[64.61520386 -299.84606934]
[65.28498840 -284.86105347]
[73.58287811 -272.49194336]
[66.46950531 -258.36004639]
[67.13928986 -243.37501526]
[67.80907440 -228.38996887]
[82.49550629 -225.49220276]
[96.06975555 -219.15977478]
[107.74094391 -209.75683594]
[116.82790375 -197.82656860]
[122.79897308 -184.05986023]
[125.30308533 -169.25521851]
[124.19039154 -154.27246094]
[119.52124786 -139.98287964]
[111.56292725 -127.21841431]
[100.77436829 -116.72336578]
[87.77964783 -109.11090088]
[73.33194733 -104.82726288]
[74.00173187 -89.84222412]
[74.67151642 -74.85718536]
[76.23204041 -59.93858337]
[78.67776489 -45.13931274]
[81.12349701 -30.34004211]
[83.56922150 -15.54077148]
[86.34483337 -0.79980892]
[89.44894409 13.87549305]
[99.65254974 24.72610283]
[94.93855286 39.82871246]
[98.04266357 54.50401306]
[101.14676666 69.17931366]
[116.49444580 73.93924713]
[127.36476135 85.77327728]
[130.80700684 101.46910858]
[125.88678741 116.76615143]
[113.93968964 127.51208496]
[117.26194763 142.13954163]
[120.58421326 156.76699829]
[123.90647125 171.39445496]
[127.22872925 186.02192688]
[142.92881775 186.94184875]
[157.72142029 192.23915100]
[170.41294861 201.47775269]
[179.98179626 213.90383911]
[185.66056824 228.50749207]
[186.99761963 244.10470581]
[183.89295959 259.43334961]
[176.60569763 273.25534058]
[165.73240662 284.45666504]
[152.15834045 292.13711548]
[155.69801331 306.71350098]
[159.23768616 321.28988647]
[162.77735901 335.86624146]
[166.31703186 350.44262695]
[179.33305359 363.46817017]
[173.73954773 380.10186768]
[177.49584961 394.62393188]
[181.25213623 409.14596558]
[194.58752441 417.19616699]
[198.19007874 431.97711182]
[190.43327332 444.64074707]
[194.18957520 459.16278076]
[197.94587708 473.68484497]
[201.91796875 488.14938354]
[206.10498047 502.55316162]
[210.29199219 516.95697021]
[214.47900391 531.36071777]
[228.06367493 543.79205322]
[223.21847534 560.65893555]
[227.61947632 574.99877930]
[232.02047729 589.33862305]
[246.93403625 587.41674805]
[261.95788574 588.04302979]
[276.65972900 591.19958496]
[290.61657715 596.79547119]
[303.42687988 604.66973877]
[314.72204590 614.59582520]
[324.17712402 626.28808594]
[331.51998901 639.41021729]
[336.53945923 653.58459473]
[339.09106445 668.40344238]
[339.10144043 683.44030762]
[336.57022095 698.26263428]
[331.57028198 712.44390869]
[324.24545288 725.57611084]
[314.80648804 737.28143311]
[303.52499390 747.22302246]
[290.72555542 755.11492920]
[276.77639771 760.73004150]
[262.07891846 763.90679932]
[247.05595398 764.55377197]
[232.13975525 762.65240479]
[217.75950623 758.25738525]
[204.32893372 751.49511719]
[192.23448181 742.56024170]
[181.82411194 731.70977783]
[173.39736938 719.25598145]
[167.19670105 705.55706787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[13 179]
[14 178]
[15 177]
[16 176]
[19 175]
[20 174]
[21 173]
[24 170]
[25 169]
[26 168]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[54 143]
[55 142]
[56 141]
[58 139]
[59 138]
[63 137]
[64 136]
[65 135]
[66 134]
[75 133]
[76 132]
[77 131]
[89 119]
[90 118]
[91 117]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
