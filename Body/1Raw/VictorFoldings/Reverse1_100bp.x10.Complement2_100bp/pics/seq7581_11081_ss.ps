%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[98.50575256 636.40936279]
[84.97676086 629.85070801]
[72.71190643 621.15454102]
[62.04578018 610.55816650]
[53.26935577 598.35058594]
[46.62206268 584.86492920]
[42.28524780 570.46899414]
[40.37721634 555.55560303]
[40.95002365 540.53161621]
[43.98804474 525.80676270]
[49.40840149 511.78286743]
[57.06321716 498.84249878]
[66.74366760 487.33862305]
[78.18566132 477.58514404]
[91.07704926 469.84808350]
[105.06614685 464.33856201]
[119.77132416 461.20684814]
[111.47344208 448.83776855]
[118.58681488 434.70587158]
[117.91703033 419.72082520]
[117.24724579 404.73577881]
[116.57746124 389.75073242]
[115.90766907 374.76571655]
[107.60978699 362.39660645]
[114.72315979 348.26470947]
[114.05337524 333.27966309]
[113.27204895 318.30004883]
[102.83320618 304.19338989]
[111.21149445 287.79565430]
[110.09584808 272.83718872]
[108.98019409 257.87875366]
[107.86454773 242.92028809]
[106.74890137 227.96183777]
[105.63324738 213.00338745]
[104.18383026 198.07357788]
[102.40136719 183.17985535]
[100.61889648 168.28614807]
[98.83643341 153.39242554]
[97.05397034 138.49870300]
[95.27149963 123.60499573]
[79.50153351 112.62407684]
[76.79249573 93.59952545]
[88.87049103 78.65313721]
[86.42476654 63.85387039]
[83.97903442 49.05459976]
[79.89936829 34.62004471]
[74.23658752 20.73001862]
[68.57379913 6.83999205]
[62.91101074 -7.05003500]
[57.24822617 -20.94006157]
[51.58543777 -34.83008957]
[50.10658646 -19.90316772]
[44.14507294 -6.13870716]
[34.26911163 5.15135050]
[21.42001534 12.89090919]
[6.82248163 16.34228325]
[-8.13214874 15.17651081]
[-22.01849556 9.50470448]
[-33.51300049 -0.13253450]
[-41.52008057 -12.81664562]
[-45.27655029 -27.33866119]
[-44.42436600 -42.31443405]
[-39.04475784 -56.31657028]
[-29.65047455 -68.01047516]
[-17.13691521 -76.28156281]
[-2.69679403 -80.34147644]
[12.29354668 -79.80326080]
[26.40532494 -74.71820831]
[38.29349518 -65.57100677]
[46.82544708 -53.23246765]
[45.04298019 -68.12618256]
[43.26051331 -83.01990509]
[33.93814850 -95.80286407]
[40.10823059 -109.35939026]
[38.32576370 -124.25310516]
[36.54329681 -139.14682007]
[34.76083374 -154.04054260]
[31.11037064 -159.55285645]
[30.83331108 -165.22914124]
[33.15384293 -169.40338135]
[31.81560707 -184.34356689]
[27.93306160 -192.61178589]
[30.57036400 -199.51588440]
[29.45471573 -214.47433472]
[28.33906746 -229.43278503]
[27.22341728 -244.39123535]
[26.10776901 -259.34970093]
[24.76953506 -274.28988647]
[23.20901299 -289.20849609]
[21.64848900 -304.12707520]
[20.08796692 -319.04568481]
[5.20445967 -321.57232666]
[-8.44495964 -328.02178955]
[-19.84741402 -337.91555786]
[-28.15676689 -350.51943970]
[-32.75640488 -364.89810181]
[-33.30501175 -379.98455811]
[-29.76186943 -394.65933228]
[-22.38990784 -407.83340454]
[-11.73617363 -418.52923584]
[1.40875578 -425.95306396]
[16.06943893 -429.55404663]
[31.15795517 -429.06491089]
[45.55463791 -424.52200317]
[58.19115448 -416.26239014]
[68.12979889 -404.89904785]
[74.63304901 -391.27514648]
[77.21832275 -376.40170288]
[75.69377899 -361.38244629]
[70.17254639 -347.33187866]
[61.06433487 -335.29263306]
[49.04504013 -326.15814209]
[35.00657272 -320.60620117]
[36.56709290 -305.68762207]
[38.12761688 -290.76901245]
[39.68814087 -275.85040283]
[42.76825714 -272.20046997]
[43.58821487 -266.57690430]
[41.06622314 -260.46533203]
[42.18187332 -245.50688171]
[43.29751968 -230.54843140]
[44.41316986 -215.58998108]
[45.52881622 -200.63153076]
[46.75579453 -185.68179321]
[48.09402847 -170.74160767]
[49.65454865 -155.82299805]
[51.43701553 -140.92929077]
[53.21948242 -126.03556824]
[55.00194931 -111.14185333]
[64.19682312 -99.42419434]
[58.15423203 -84.80236816]
[59.93669891 -69.90865326]
[61.71916580 -55.01493454]
[65.47546387 -40.49287415]
[71.13825226 -26.60284805]
[76.80104065 -12.71282196]
[82.46382141 1.17720544]
[88.12660980 15.06723213]
[93.78939819 28.95726013]
[95.74228668 14.08492851]
[102.87177277 0.88756275]
[114.23984528 -8.89849758]
[128.35083008 -13.98572922]
[143.34820557 -13.70481777]
[157.25878906 -8.09272194]
[168.25241089 2.11218905]
[174.88267517 15.56728458]
[176.27725220 30.50231552]
[172.25267029 44.95232391]
[163.33840942 57.01615524]
[150.70732117 65.10661316]
[136.02122498 68.15925598]
[121.21233368 65.77245331]
[108.22901917 58.26023865]
[98.77830505 46.60887146]
[101.22403717 61.40814209]
[103.66976166 76.20741272]
[113.16232300 79.84292603]
[120.30824280 87.07213593]
[123.83351135 96.60617828]
[123.10964203 106.74529266]
[118.26567078 115.68182373]
[110.16522217 121.82252502]
[111.94768524 136.71624756]
[113.73014832 151.60995483]
[115.51261902 166.50367737]
[117.29508209 181.39739990]
[119.07755280 196.29110718]
[122.20758820 200.46842957]
[123.31186676 204.97773743]
[122.60314941 208.99180603]
[120.59170532 211.88774109]
[121.70735168 226.84619141]
[122.82299805 241.80464172]
[123.93865204 256.76309204]
[125.05429840 271.72155762]
[126.16994476 286.67999268]
[135.41622925 295.67272949]
[136.03750610 308.15463257]
[128.24545288 317.40722656]
[131.88011169 325.78738403]
[129.03840637 332.60989380]
[129.70820618 347.59494019]
[138.05398560 361.03585815]
[130.89271545 374.09591675]
[131.56250000 389.08096313]
[132.23228455 404.06600952]
[132.90206909 419.05102539]
[133.57185364 434.03607178]
[141.91764832 447.47698975]
[134.75636292 460.53704834]
[149.68229675 462.34436035]
[164.10714722 466.58386230]
[177.63740540 473.13995361]
[189.90393066 481.83374023]
[200.57209778 492.42807007]
[209.35087585 504.63394165]
[216.00076294 518.11834717]
[220.34036255 532.51336670]
[222.25126648 547.42639160]
[221.68135071 562.45056152]
[218.64616394 577.17596436]
[213.22851562 591.20092773]
[205.57618713 604.14276123]
[195.89794922 615.64849854]
[184.45783997 625.40417480]
[171.56794739 633.14373779]
[157.57991028 638.65594482]
[142.87533569 641.79052734]
[127.85536957 642.46185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 191]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[25 183]
[26 182]
[27 180]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[43 157]
[44 156]
[45 155]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[70 133]
[71 132]
[72 131]
[74 129]
[75 128]
[76 127]
[77 126]
[80 125]
[81 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
