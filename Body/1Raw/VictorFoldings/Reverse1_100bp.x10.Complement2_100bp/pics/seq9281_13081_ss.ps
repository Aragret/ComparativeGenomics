%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[94.59116364 663.23089600]
[79.65724182 661.43707275]
[65.28368378 657.00531006]
[51.93252945 650.07806396]
[40.03296661 640.87805176]
[29.96751595 629.70098877]
[22.05974388 616.90618896]
[16.56385040 602.90496826]
[13.65650558 588.14733887]
[13.43116856 573.10778809]
[15.89508343 558.26971436]
[20.96904373 544.11004639]
[28.48994637 531.08410645]
[38.21602249 519.61053467]
[49.83461761 510.05813599]
[62.97224426 502.73403931]
[77.20658875 497.87362671]
[92.08006287 495.63320923]
[92.52666473 480.63986206]
[92.97327423 465.64651489]
[93.41987610 450.65316772]
[93.86648560 435.65982056]
[86.51155090 422.70782471]
[94.65630341 409.14413452]
[95.10291290 394.15078735]
[92.15995789 387.37133789]
[95.66943359 378.93798828]
[96.33921814 363.95294189]
[97.00900269 348.96789551]
[97.67878723 333.98287964]
[98.23699951 318.99325562]
[98.68360138 303.99990845]
[99.13021088 289.00656128]
[99.57681274 274.01321411]
[100.02342224 259.01986694]
[100.47003174 244.02650452]
[100.91663361 229.03315735]
[101.36324310 214.03981018]
[101.80984497 199.04646301]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[96.57006836 139.30104065]
[87.55067444 127.44777679]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[82.14009094 75.72264099]
[88.51132965 62.25948715]
[86.95080566 47.34088135]
[85.39028168 32.42227554]
[83.71874237 17.51570129]
[81.93627930 2.62198448]
[80.15380859 -12.27173233]
[70.51520538 -20.84261894]
[69.33720398 -33.28432465]
[76.70832825 -42.87562943]
[75.14780426 -57.79423141]
[73.58728027 -72.71283722]
[69.58206177 -80.92234802]
[72.11627960 -87.86493683]
[70.77804565 -102.80512238]
[69.43981171 -117.74530792]
[58.50001907 -132.55754089]
[66.49910736 -148.17745972]
[64.93858337 -163.09605408]
[63.37805939 -178.01466370]
[61.81753540 -192.93327332]
[46.80833817 -192.73522949]
[31.84331703 -193.90287781]
[17.04648209 -196.42655945]
[2.54044628 -200.28533936]
[-11.55458641 -205.44723511]
[-25.12181854 -211.86950684]
[-38.04882431 -219.49890137]
[-50.22848511 -228.27223206]
[-61.55987167 -238.11676025]
[-71.94908905 -248.95094299]
[-81.31005096 -260.68496704]
[-89.56518555 -273.22164917]
[-96.64608002 -286.45706177]
[-102.49406433 -300.28152466]
[-107.06068420 -314.58053589]
[-110.30809021 -329.23556519]
[-112.20937347 -344.12515259]
[-112.74877930 -359.12597656]
[-111.92184448 -374.11367798]
[-109.73542023 -388.96408081]
[-106.20761108 -403.55413818]
[-101.36766815 -417.76296997]
[-95.25568390 -431.47277832]
[-87.92231750 -444.56997681]
[-79.42832184 -456.94604492]
[-69.84410095 -468.49844360]
[-59.24905396 -479.13143921]
[-47.73099136 -488.75689697]
[-35.38534927 -497.29507446]
[-22.31443405 -504.67520142]
[-8.62655640 -510.83615112]
[5.56485987 -515.72686768]
[20.14221764 -519.30676270]
[34.98472214 -521.54626465]
[49.96937943 -522.42675781]
[64.97202301 -521.94097900]
[79.86832428 -520.09295654]
[94.53485870 -516.89794922]
[108.85008240 -512.38244629]
[122.69538116 -506.58392334]
[135.95602417 -499.55035400]
[148.52210999 -491.34008789]
[160.28953552 -482.02114868]
[171.16078186 -471.67071533]
[181.04574585 -460.37457275]
[189.86254883 -448.22634888]
[197.53810120 -435.32669067]
[204.00881958 -421.78250122]
[209.22106934 -407.70602417]
[213.13168335 -393.21386719]
[215.70822144 -378.42614746]
[216.92935181 -363.46539307]
[216.78497314 -348.45559692]
[215.27624512 -333.52108765]
[212.41569519 -318.78567505]
[208.22702026 -304.37145996]
[202.74493408 -290.39782715]
[196.01484680 -276.98062134]
[188.09255981 -264.23101807]
[179.04368591 -252.25466919]
[168.94322205 -241.15078735]
[157.87487793 -231.01141357]
[145.93035889 -221.92056274]
[133.20864868 -213.95355225]
[119.81515503 -207.17640686]
[105.86087036 -201.64530945]
[91.46142578 -197.40605164]
[76.73613739 -194.49378967]
[78.29666138 -179.57518005]
[79.85718536 -164.65658569]
[81.41770935 -149.73797607]
[90.61410522 -141.87968445]
[92.03630066 -129.46351624]
[84.37999725 -119.08354187]
[85.71823120 -104.14335632]
[87.05646515 -89.20317078]
[88.50588226 -74.27336121]
[90.06640625 -59.35475540]
[91.62693024 -44.43614960]
[102.68525696 -30.80969238]
[95.04753113 -14.05419827]
[96.82999420 0.83951867]
[98.61245728 15.73323631]
[102.52852631 22.00110817]
[100.30889130 30.86175346]
[101.86940765 45.78035736]
[103.42993164 60.69896317]
[112.44932556 72.55222321]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[117.85990906 124.27735901]
[111.48867035 137.74050903]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[124.21300507 169.83482361]
[137.77926636 163.43507385]
[152.66535950 165.28013611]
[164.25866699 174.79827881]
[168.96688843 189.04022217]
[165.33111572 203.59291077]
[154.47793579 213.94708252]
[139.77033997 216.89434814]
[125.76560974 211.52146912]
[116.80319977 199.49307251]
[116.35659027 214.48641968]
[115.90998077 229.47976685]
[115.46337891 244.47311401]
[115.01676941 259.46646118]
[114.57016754 274.45980835]
[114.12355804 289.45315552]
[113.67695618 304.44650269]
[113.23034668 319.43988037]
[116.10285950 328.11087036]
[112.66382599 334.65264893]
[111.99404144 349.63769531]
[111.32425690 364.62274170]
[110.65447235 379.60775757]
[110.09626007 394.59738159]
[109.64965057 409.59072876]
[116.97264099 423.61514282]
[108.85983276 436.10641479]
[108.41323090 451.09976196]
[107.96662140 466.09310913]
[107.52001190 481.08645630]
[107.07341003 496.07980347]
[121.78716278 499.20156860]
[135.70697021 504.90057373]
[148.38536072 512.99365234]
[159.41479492 523.22064209]
[168.44070435 535.25280762]
[175.17295837 548.70330811]
[179.39512634 563.13983154]
[180.97149658 578.09826660]
[179.85137939 593.09777832]
[176.07080078 607.65618896]
[169.75128174 621.30548096]
[161.09597778 633.60693359]
[150.38310242 644.16503906]
[137.95704651 652.64050293]
[124.21723938 658.76074219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[24 189]
[25 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 164]
[41 163]
[42 162]
[43 161]
[45 159]
[47 157]
[49 155]
[50 154]
[51 153]
[52 151]
[53 150]
[54 149]
[57 147]
[58 146]
[59 145]
[61 144]
[62 143]
[63 142]
[65 139]
[66 138]
[67 137]
[68 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
