%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[181.51135254 194.84098816]
[187.22882080 180.96377563]
[194.08746338 167.61366272]
[181.36543274 159.66697693]
[168.64338684 151.72029114]
[153.74987793 151.53993225]
[146.14451599 137.66661072]
[133.42248535 129.71992493]
[118.52896881 129.53956604]
[110.92360687 115.66623688]
[96.78273773 118.82566071]
[84.49365234 111.14941406]
[81.12970734 97.05579376]
[68.40766907 89.10911560]
[55.68563461 81.16242981]
[42.96360016 73.21574402]
[30.24156189 65.26905823]
[17.51952553 57.32237625]
[4.79749012 49.37569046]
[-7.92454624 41.42900467]
[-20.64658165 33.48232269]
[-35.86068726 36.82428741]
[-48.64944077 28.58398819]
[-51.74173355 14.05906773]
[-64.46376801 6.11238337]
[-82.87670898 5.90003204]
[-90.50730133 -9.90316296]
[-103.34624481 -17.65955353]
[-116.18518829 -25.41594505]
[-124.87237549 -13.17911911]
[-134.43957520 -1.61728525]
[-144.83451843 9.20641041]
[-156.00042725 19.23285103]
[-167.87634277 28.40727425]
[-180.39736938 36.67957306]
[-193.49514771 44.00456619]
[-207.09812927 50.34224701]
[-221.13201904 55.65800095]
[-235.52015686 59.92279816]
[-250.18397522 63.11333847]
[-265.04339600 65.21219635]
[-280.01721191 66.20791626]
[-295.02371216 66.09505463]
[-309.98086548 64.87422943]
[-324.80703735 62.55210876]
[-339.42120361 59.14137268]
[-353.74359131 54.66065216]
[-367.69592285 49.13441849]
[-381.20202637 42.59285355]
[-394.18817139 35.07168579]
[-406.58334351 26.61199570]
[-418.31991577 17.25998497]
[-429.33377075 7.06673479]
[-439.56475830 -3.91208482]
[-448.95697021 -15.61650944]
[-457.45910645 -27.98261452]
[-465.02478027 -40.94285583]
[-471.61264038 -54.42645645]
[-477.18670654 -68.35976410]
[-481.71652222 -82.66667938]
[-485.17736816 -97.26907349]
[-487.55032349 -112.08718109]
[-488.82244873 -127.04006958]
[-488.98678589 -142.04606628]
[-488.04244995 -157.02323914]
[-485.99456787 -171.88975525]
[-482.85433960 -186.56443787]
[-478.63891602 -200.96713257]
[-473.37133789 -215.01916504]
[-467.08035278 -228.64379883]
[-459.80032349 -241.76663208]
[-451.57101440 -254.31596375]
[-442.43737793 -266.22326660]
[-432.44931030 -277.42352295]
[-421.66134644 -287.85552979]
[-410.13238525 -297.46231079]
[-397.92541504 -306.19143677]
[-385.10714722 -313.99517822]
[-371.74752808 -320.83096313]
[-357.91955566 -326.66143799]
[-343.69873047 -331.45474243]
[-329.16275024 -335.18469238]
[-314.39102173 -337.83096313]
[-299.46417236 -339.37905884]
[-284.46374512 -339.82052612]
[-269.47171021 -339.15298462]
[-254.56990051 -337.38003540]
[-239.83972168 -334.51141357]
[-225.36163330 -330.56274414]
[-211.21469116 -325.55560303]
[-197.47618103 -319.51733398]
[-184.22113037 -312.48092651]
[-171.52194214 -304.48483276]
[-159.44795227 -295.57269287]
[-148.06513977 -285.79318237]
[-137.43565369 -275.19973755]
[-127.61754608 -263.85018921]
[-118.66445160 -251.80654907]
[-110.62526703 -239.13459778]
[-103.54389191 -225.90351868]
[-97.45901489 -212.18559265]
[-92.40386200 -198.05574036]
[-88.40604401 -183.59114075]
[-85.48739624 -168.87078857]
[-83.66385651 -153.97508240]
[-82.94539642 -138.98538208]
[-83.33592224 -123.98356628]
[-84.83331299 -109.05155182]
[-87.42938995 -94.27090454]
[-91.10997009 -79.72234344]
[-95.85495758 -65.48533630]
[-101.63842773 -51.63764191]
[-108.42879486 -38.25488663]
[-95.58985138 -30.49849510]
[-82.75091553 -22.74210358]
[-70.93551636 -25.33495522]
[-60.17570114 -18.97805405]
[-56.51708221 -6.60965300]
[-43.79504776 1.33703148]
[-29.38575172 -2.25570774]
[-16.37059402 5.62212992]
[-12.69989777 20.76028633]
[0.02213828 28.70697021]
[12.74417496 36.65365601]
[25.46621132 44.60033798]
[38.18824768 52.54702377]
[50.91028214 60.49370575]
[63.63232040 68.44039154]
[76.35435486 76.38707733]
[89.07639313 84.33376312]
[103.21726227 81.17433929]
[115.50634766 88.85058594]
[118.87029266 102.94420624]
[134.67376709 103.69296265]
[141.36917114 116.99788666]
[154.09120178 124.94457245]
[169.89468384 125.69332886]
[176.59007263 138.99824524]
[189.31211853 146.94493103]
[202.03414917 154.89161682]
[211.02255249 142.87182617]
[220.98521423 131.64633179]
[231.85227966 121.29386902]
[243.54750061 111.88705444]
[255.98886108 103.49186707]
[269.08908081 96.16719818]
[282.75628662 89.96443176]
[296.89456177 84.92706299]
[311.40481567 81.09043121]
[326.18518066 78.48145294]
[341.13204956 77.11842346]
[356.14053345 77.01091003]
[371.10540771 78.15965271]
[385.92166138 80.55661011]
[400.48535156 84.18495941]
[414.69436646 89.01925659]
[428.44903564 95.02558899]
[441.65283203 102.16181946]
[454.21319580 110.37789917]
[466.04199219 119.61619568]
[477.05627441 129.81190491]
[487.17874146 140.89352417]
[496.33840942 152.78329468]
[504.47103882 165.39784241]
[511.51959229 178.64868164]
[517.43463135 192.44285583]
[522.17462158 206.68360901]
[525.70629883 221.27104187]
[528.00500488 236.10285950]
[529.05450439 251.07499695]
[528.84753418 266.08245850]
[527.38543701 281.01995850]
[524.67852783 295.78271484]
[520.74578857 310.26718140]
[515.61480713 324.37179565]
[509.32156372 337.99755859]
[501.91021729 351.04895020]
[493.43273926 363.43435669]
[483.94860840 375.06698608]
[473.52432251 385.86517334]
[462.23303223 395.75320435]
[450.15393066 404.66171265]
[437.37173462 412.52822876]
[423.97610474 419.29754639]
[410.06100464 424.92221069]
[395.72406006 429.36276245]
[381.06579590 432.58801270]
[366.18908691 434.57540894]
[351.19824219 435.31094360]
[336.19842529 434.78952026]
[321.29483032 433.01473999]
[306.59204102 429.99905396]
[292.19314575 425.76367188]
[278.19915771 420.33825684]
[264.70825195 413.76086426]
[251.81506348 406.07763672]
[239.61000061 397.34249878]
[228.17868042 387.61666870]
[217.60130310 376.96841431]
[207.95204163 365.47238159]
[199.29859924 353.20925903]
[191.70166016 340.26501465]
[185.21453857 326.73049927]
[179.88270569 312.70059204]
[175.74356079 298.27374268]
[172.82617188 283.55111694]
[171.15097046 268.63601685]
[170.72972107 253.63305664]
[171.56536865 238.64746094]
[173.65205383 223.78433228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[7 136]
[8 135]
[10 133]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[24 119]
[25 118]
[27 115]
[28 114]
[29 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
