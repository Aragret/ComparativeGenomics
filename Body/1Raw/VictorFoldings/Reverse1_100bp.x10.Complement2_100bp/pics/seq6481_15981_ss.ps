%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[89.06768799 614.39678955]
[76.16638184 606.40179443]
[67.02754211 594.28375244]
[62.88711929 579.68164062]
[64.30506897 564.57025146]
[71.08963013 550.99328613]
[82.32324219 540.78692627]
[96.48665619 535.33142090]
[88.74935913 522.60418701]
[96.48665619 508.80398560]
[96.48665619 493.80398560]
[96.48665619 478.80398560]
[96.48665619 463.80398560]
[88.15769958 455.03158569]
[88.03494263 442.53485107]
[96.72956848 433.00772095]
[96.95289612 418.00936890]
[97.17622375 403.01104736]
[81.73789978 396.77294922]
[69.85356140 385.05783081]
[63.36618423 369.64276123]
[63.29702759 352.88156128]
[69.68494415 337.34548950]
[81.57609558 325.42855835]
[97.16629028 318.97894287]
[96.94296265 303.98059082]
[96.71963501 288.98223877]
[96.49630737 273.98391724]
[96.27297974 258.98556519]
[96.04965210 243.98724365]
[81.03517914 239.52719116]
[68.11783600 230.63462830]
[58.56889725 218.17015076]
[53.33264542 203.34660339]
[52.93297577 187.61103821]
[57.42102432 172.50352478]
[66.36896515 159.50633240]
[78.91078949 149.89857483]
[93.82607269 144.63027954]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[84.95262909 106.16082764]
[84.69254303 94.51721954]
[92.28604126 85.68658447]
[92.06271362 70.68824768]
[91.39292908 55.70320892]
[90.27727509 40.74475479]
[78.58485413 30.45276642]
[77.66651917 15.26687431]
[87.55041504 4.18336296]
[86.43476868 -10.77509022]
[84.32014465 -25.62528801]
[81.21603394 -40.30059052]
[78.11192322 -54.97589111]
[75.00781250 -69.65119171]
[59.55558395 -69.43392944]
[44.36078262 -72.22554016]
[30.00348854 -77.91761780]
[17.03145218 -86.29105377]
[5.93919230 -97.02448273]
[-2.85084724 -109.70661926]
[-9.00439358 -123.85200500]
[-12.28805161 -138.91960144]
[-12.57815933 -154.33346558]
[-9.86544037 -169.50482178]
[-4.25529480 -183.85443115]
[4.03630209 -196.83486938]
[14.69110775 -207.95126343]
[27.30082893 -216.78025818]
[41.38276672 -222.98606873]
[38.06050873 -237.61354065]
[34.73825073 -252.24099731]
[31.41598892 -266.86846924]
[28.35441399 -269.94754028]
[26.60758209 -273.48492432]
[26.15812683 -277.01101685]
[26.83796310 -280.11013794]
[28.35890579 -282.46487427]
[25.91317940 -297.26416016]
[23.46745110 -312.06341553]
[21.02172470 -326.86270142]
[18.57599640 -341.66195679]
[3.53936434 -341.74975586]
[-11.26611233 -344.37765503]
[-25.41445160 -349.47006226]
[-38.49857712 -356.88043213]
[-50.14202881 -366.39556885]
[-60.00980759 -377.74172974]
[-67.81799316 -390.59240723]
[-73.34193420 -404.57791138]
[-76.42268372 -419.29580688]
[-76.97161865 -434.32269287]
[-74.97293091 -449.22616577]
[-70.48413849 -463.57742310]
[-63.63438416 -476.96356201]
[-54.62075043 -488.99945068]
[-43.70258331 -499.33877563]
[-31.19401169 -507.68405151]
[-17.45493889 -513.79516602]
[-2.88066125 -517.49633789]
[12.10948753 -518.68096924]
[27.08421135 -517.31512451]
[41.61265945 -513.43798828]
[55.27681732 -507.16110229]
[67.68354034 -498.66516113]
[78.47586060 -488.19454956]
[87.34326935 -476.05053711]
[94.03062439 -462.58251953]
[98.34552002 -448.17800903]
[100.16381073 -433.25146484]
[99.43317413 -418.23233032]
[96.17463684 -403.55276489]
[90.48195648 -389.63510132]
[82.51892090 -376.87979126]
[72.51463318 -365.65380859]
[60.75695419 -356.28018188]
[47.58415985 -349.02859497]
[33.37526703 -344.10769653]
[35.82099533 -329.30841064]
[38.26672363 -314.50915527]
[40.71244812 -299.70986938]
[43.15817642 -284.91061401]
[46.04344940 -270.19070435]
[49.36570740 -255.56324768]
[52.68796921 -240.93579102]
[56.01022720 -226.30833435]
[70.57589722 -226.84394836]
[84.99480438 -224.68502808]
[98.77261353 -219.90402222]
[111.43669891 -212.66334534]
[122.55233765 -203.20980835]
[131.73762512 -191.86619568]
[138.67662048 -179.02027893]
[143.13021851 -165.11152649]
[144.94433594 -150.61608887]
[144.05531311 -136.03053284]
[140.49209595 -121.85474396]
[134.37528992 -108.57488251]
[125.91316223 -96.64663696]
[115.39442444 -86.47966003]
[103.17848206 -78.42343903]
[89.68311310 -72.75530243]
[92.78722382 -58.08000183]
[95.89133453 -43.40470123]
[98.99544525 -28.72939873]
[105.67733002 -42.15893173]
[118.50417328 -49.93531036]
[133.50143433 -49.64893723]
[146.02206421 -41.38854599]
[152.18638611 -27.71371269]
[150.08433533 -12.86173058]
[140.36724854 -1.43464887]
[126.04606628 3.02672744]
[111.55837250 -0.86000818]
[101.39321899 -11.89073849]
[102.50886536 3.06771445]
[113.92755127 12.56241131]
[115.27206421 27.71651840]
[105.23573303 39.62910461]
[106.35137939 54.58755875]
[108.38504028 56.51690292]
[109.77700043 59.36805344]
[110.17231750 62.90063477]
[109.30956268 66.75033569]
[107.06105042 70.46492004]
[107.28437805 85.46325684]
[116.25568390 99.63689423]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.81941986 144.18368530]
[122.71169281 147.96461487]
[134.96151733 155.49951172]
[144.58030701 166.16973877]
[150.79478455 179.10411072]
[153.10916138 193.24995422]
[151.34461975 207.45881653]
[145.65313721 220.57966614]
[136.50444031 231.55216980]
[124.64724731 239.49237061]
[111.04798889 243.76391602]
[111.27131653 258.76223755]
[111.49464417 273.76058960]
[111.71797180 288.75891113]
[111.94129944 303.75726318]
[112.16462708 318.75561523]
[124.91519928 323.00787354]
[135.71673584 330.96865845]
[143.52641296 341.85192871]
[147.59562683 354.59039307]
[147.54174805 367.94009399]
[143.38404846 380.60202026]
[135.54049683 391.34829712]
[124.78572083 399.14141846]
[112.17456818 403.23437500]
[111.95124054 418.23269653]
[111.72791290 433.23104858]
[121.06735229 449.10104370]
[111.48665619 463.80398560]
[111.48665619 478.80398560]
[111.48665619 493.80398560]
[111.48665619 508.80398560]
[119.22396088 522.60418701]
[111.48665619 535.33142090]
[125.65007019 540.78692627]
[136.88368225 550.99328613]
[143.66824341 564.57025146]
[145.08619690 579.68164062]
[140.94577026 594.28375244]
[131.80693054 606.40179443]
[118.90563202 614.39678955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[10 201]
[11 200]
[12 199]
[13 198]
[16 196]
[17 195]
[18 194]
[25 185]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[39 170]
[40 169]
[41 168]
[44 166]
[45 165]
[46 160]
[47 159]
[50 156]
[51 155]
[52 145]
[53 144]
[54 143]
[55 142]
[70 126]
[71 125]
[72 124]
[73 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
