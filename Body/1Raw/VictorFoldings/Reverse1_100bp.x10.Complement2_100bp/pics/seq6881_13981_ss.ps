%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[197.58432007 502.74560547]
[192.83613586 488.51028442]
[189.10392761 473.97552490]
[186.40629578 459.21368408]
[184.75666809 444.29833984]
[184.16326904 429.30377197]
[184.62905884 414.30471802]
[186.15170288 399.37585449]
[188.72363281 384.59161377]
[192.33201599 370.02560425]
[196.95889282 355.75042725]
[202.58120728 341.83718872]
[209.17094421 328.35519409]
[216.69528198 315.37161255]
[225.11672974 302.95111084]
[234.39332581 291.15563965]
[223.28608704 281.07449341]
[212.17886353 270.99334717]
[201.07162476 260.91220093]
[189.96438599 250.83106995]
[178.85716248 240.74993896]
[167.74992371 230.66879272]
[156.64268494 220.58766174]
[145.53546143 210.50651550]
[151.04013062 224.45996094]
[153.56584167 239.24578857]
[153.00518799 254.23530579]
[149.38201904 268.79116821]
[142.85037231 282.29440308]
[133.68800354 294.17089844]
[122.28448486 303.91561890]
[109.12471008 311.11425781]
[94.76822662 315.46069336]
[79.82549286 316.77011108]
[64.93186951 314.98684692]
[50.72064590 310.18670654]
[37.79609299 302.57385254]
[26.70776749 292.47189331]
[17.92714882 280.31045532]
[11.82759571 266.60662842]
[8.66846371 251.94305420]
[8.58407974 236.94329834]
[11.57803249 222.24511719]
[17.52301788 208.47351074]
[26.16625214 196.21405029]
[37.14022064 185.98800659]
[49.97830200 178.23019409]
[64.13462067 173.27047729]
[79.00723267 171.31976318]
[93.96376038 172.46098328]
[108.36823273 176.64561462]
[121.60816956 183.69572449]
[133.12072754 193.31166077]
[127.04689026 179.59640503]
[120.97305298 165.88113403]
[114.89922333 152.16586304]
[102.67105865 143.66168213]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[76.05323029 64.44809723]
[69.97939301 50.73283386]
[57.31679153 41.24763489]
[59.23784256 26.47743607]
[54.13072586 22.27876091]
[52.20043564 16.93357468]
[53.19412231 12.26221085]
[47.53133392 -1.62781572]
[41.86854935 -15.51784229]
[36.20576096 -29.40786934]
[21.59960175 -25.86983109]
[6.62925291 -24.54834747]
[-8.37084007 -25.47293854]
[-23.06556892 -28.62295151]
[-37.12665176 -33.92801285]
[-50.23995209 -41.26960373]
[-62.11251831 -50.48371124]
[-72.47911835 -61.36449051]
[-81.10814667 -73.66886139]
[-87.80683136 -87.12194061]
[-92.42552948 -101.42317200]
[-94.86104584 -116.25306702]
[-95.05897522 -131.28033447]
[-93.01490021 -146.16923523]
[-88.77448273 -160.58715820]
[-82.43245697 -174.21199036]
[-74.13050079 -186.73937988]
[-64.05408478 -197.88941956]
[-52.42832184 -207.41304016]
[-39.51293945 -215.09747314]
[-25.59646225 -220.77104187]
[-10.98979855 -224.30699158]
[3.98073864 -225.62634277]
[18.98069954 -224.69961548]
[33.67498016 -221.54751587]
[47.73530579 -216.24044800]
[60.84756088 -208.89698792]
[72.71881866 -199.68119812]
[83.08386230 -188.79893494]
[91.71113586 -176.49333191]
[98.40791321 -163.03930664]
[103.02456665 -148.73741150]
[105.45797729 -133.90716553]
[105.65377045 -118.87988281]
[103.60757446 -103.99127197]
[99.36509705 -89.57395172]
[93.02113342 -75.95001984]
[84.71739197 -63.42382050]
[74.63938904 -52.27521133]
[63.01226807 -42.75324631]
[50.09579086 -35.07065582]
[55.75857544 -21.18062973]
[61.42136383 -7.29060221]
[67.08415222 6.59942436]
[72.95310974 20.40360069]
[85.18127441 28.90779114]
[83.69466400 44.65900040]
[89.76849365 58.37426758]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[130.53553772 131.32182312]
[128.61448669 146.09202576]
[134.68832397 159.80729675]
[140.76216125 173.52256775]
[146.83598328 187.23783875]
[155.61659241 199.39929199]
[166.72383118 209.48042297]
[177.83105469 219.56156921]
[188.93829346 229.64270020]
[200.04553223 239.72384644]
[211.15275574 249.80497742]
[222.25999451 259.88610840]
[233.36723328 269.96725464]
[244.47445679 280.04840088]
[255.31838989 269.67544556]
[266.86700439 260.09323120]
[279.06274414 251.34953308]
[291.84490967 243.48789978]
[305.14978027 236.54748535]
[318.91107178 230.56288147]
[333.06024170 225.56388855]
[347.52679443 221.57542419]
[362.23867798 218.61735535]
[377.12252808 216.70442200]
[392.10427856 215.84616089]
[407.10922241 216.04681396]
[422.06265259 217.30541992]
[436.89004517 219.61570740]
[451.51751709 222.96614075]
[465.87225342 227.34004211]
[479.88265991 232.71560669]
[493.47900391 239.06608582]
[506.59353638 246.35981750]
[519.16088867 254.56047058]
[531.11846924 263.62716675]
[542.40667725 273.51477051]
[552.96929932 284.17401123]
[562.75378418 295.55178833]
[571.71124268 307.59140015]
[579.79718018 320.23287964]
[586.97119141 333.41323853]
[593.19763184 347.06683350]
[598.44549561 361.12561035]
[602.68853760 375.51956177]
[605.90563965 390.17694092]
[608.08087158 405.02474976]
[609.20330811 419.98901367]
[609.26733398 434.99517822]
[608.27276611 449.96847534]
[606.22442627 464.83432007]
[603.13250732 479.51861572]
[599.01257324 493.94827271]
[593.88494873 508.05136108]
[587.77532959 521.75762939]
[580.71411133 534.99871826]
[572.73645020 547.70880127]
[563.88208008 559.82446289]
[554.19512939 571.28540039]
[543.72387695 582.03442383]
[532.52050781 592.01806641]
[520.64080811 601.18652344]
[508.14392090 609.49420166]
[495.09216309 616.89965820]
[481.55053711 623.36596680]
[467.58654785 628.86102295]
[453.26968384 633.35729980]
[438.67132568 636.83251953]
[423.86422729 639.26934814]
[408.92208862 640.65557861]
[393.91940308 640.98437500]
[378.93087769 640.25402832]
[364.03121948 638.46826172]
[349.29464722 635.63592529]
[334.79455566 631.77111816]
[320.60321045 626.89312744]
[306.79132080 621.02624512]
[293.42767334 614.19970703]
[280.57882690 606.44750977]
[268.30886841 597.80828857]
[256.67886353 588.32501221]
[245.74674988 578.04504395]
[235.56703186 567.01953125]
[226.19039917 555.30340576]
[217.66357422 542.95501709]
[210.02903748 530.03594971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 131]
[53 130]
[54 129]
[55 128]
[56 127]
[58 125]
[59 124]
[61 122]
[62 121]
[63 120]
[64 119]
[66 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
