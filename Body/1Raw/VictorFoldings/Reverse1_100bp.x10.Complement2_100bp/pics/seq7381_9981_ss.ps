%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[97.80702972 665.91149902]
[82.85480499 667.56848145]
[67.85271454 666.44958496]
[53.31172180 662.59289551]
[39.72708893 656.12976074]
[27.56150436 647.28027344]
[17.22932053 636.34588623]
[9.08244801 623.69903564]
[3.39836693 609.77044678]
[0.37067553 595.03448486]
[0.10249543 579.99310303]
[2.60296082 565.15863037]
[7.78690672 551.03625488]
[15.47776985 538.10699463]
[25.41360283 526.81127930]
[37.25599289 517.53375244]
[50.60159683 510.59042358]
[64.99586487 506.21783447]
[79.94853210 504.56484985]
[81.06417847 489.60638428]
[82.17982483 474.64794922]
[82.62643433 459.65460205]
[82.40310669 444.65625000]
[74.47717285 432.04559326]
[82.00815582 418.13174438]
[81.78482819 403.13342285]
[79.04261780 399.22323608]
[78.72764587 393.54895020]
[81.78482819 387.68676758]
[82.00815582 372.68841553]
[82.23148346 357.69009399]
[82.45481110 342.69174194]
[82.67813873 327.69342041]
[82.90146637 312.69506836]
[83.12479401 297.69671631]
[83.34812164 282.69839478]
[70.30347443 280.03900146]
[57.92543793 275.12756348]
[46.59964371 268.11563110]
[36.67919159 259.22021484]
[28.47365189 248.71710205]
[22.23939323 236.93223572]
[18.17158699 224.23164368]
[16.39809036 211.01008606]
[16.97542381 197.67874146]
[19.88698006 184.65248108]
[25.04349518 172.33686829]
[32.28577423 161.11563110]
[41.38962936 151.33862305]
[52.07279587 143.31098938]
[64.00369263 137.28356934]
[76.81171417 133.44509888]
[90.09874725 131.91632080]
[91.21439362 116.95787048]
[81.83895111 105.91037750]
[82.91663361 91.46098328]
[93.82714844 81.92647552]
[94.94279480 66.96802521]
[96.05844879 52.00957108]
[87.68016052 35.61183167]
[98.11900330 21.50518608]
[99.01181793 6.53177977]
[92.10964203 -7.70445776]
[100.59075928 -19.94863319]
[101.48358154 -34.92203903]
[102.37639618 -49.89544296]
[99.76332092 -58.64813995]
[103.39560699 -65.08461761]
[104.51125336 -80.04307556]
[91.60986328 -93.91637421]
[92.92343140 -112.49559021]
[107.15202332 -124.01353455]
[107.82180786 -138.99858093]
[108.49159241 -153.98361206]
[109.16137695 -168.96865845]
[94.29913330 -171.08270264]
[79.71030426 -174.62129211]
[65.53112030 -179.55142212]
[51.89395523 -185.82704163]
[38.92615128 -193.38954163]
[26.74878120 -202.16833496]
[15.47554779 -212.08145142]
[5.21170807 -223.03631592]
[-3.94690537 -234.93066406]
[-11.91477871 -247.65341187]
[-18.61751556 -261.08578491]
[-23.99253464 -275.10238647]
[-27.98964882 -289.57229614]
[-30.57153511 -304.36044312]
[-31.71409035 -319.32876587]
[-31.40664291 -334.33746338]
[-29.65206528 -349.24639893]
[-26.46673965 -363.91641235]
[-21.88040733 -378.21051025]
[-15.93589115 -391.99520874]
[-8.68869400 -405.14184570]
[-0.20648254 -417.52761841]
[9.43154430 -429.03692627]
[20.13539696 -439.56228638]
[31.80513573 -449.00540161]
[44.33179855 -457.27813721]
[57.59842300 -464.30325317]
[71.48114777 -470.01513672]
[85.85033417 -474.36047363]
[100.57183838 -477.29864502]
[115.50818634 -478.80227661]
[130.51992798 -478.85729980]
[145.46690369 -477.46322632]
[160.20954895 -474.63302612]
[174.61021423 -470.39315796]
[188.53443909 -464.78320312]
[201.85220337 -457.85556030]
[214.43917847 -449.67486572]
[226.17784119 -440.31753540]
[236.95855713 -429.87094116]
[246.68070984 -418.43261719]
[255.25349426 -406.10934448]
[262.59686279 -393.01620483]
[268.64227295 -379.27545166]
[273.33328247 -365.01535034]
[276.62606812 -350.36911011]
[278.48989868 -335.47341919]
[278.90737915 -320.46737671]
[277.87457275 -305.49108887]
[275.40118408 -290.68441772]
[271.51025391 -276.18557739]
[266.23812866 -262.12997437]
[259.63406372 -248.64880371]
[251.75965881 -235.86798096]
[242.68849182 -223.90681458]
[232.50524902 -212.87699890]
[221.30499268 -202.88150024]
[209.19230652 -194.01367188]
[196.28028870 -186.35630798]
[182.68949890 -179.98088074]
[168.54684448 -174.94694519]
[153.98434448 -171.30148315]
[139.13800049 -169.07853699]
[124.14641571 -168.29887390]
[123.47663116 -153.31382751]
[122.80684662 -138.32879639]
[122.13706207 -123.34375000]
[131.47805786 -116.79303741]
[136.54939270 -106.43943024]
[135.98728943 -94.80422211]
[129.81584167 -84.78353882]
[119.46971130 -78.92742920]
[118.35405731 -63.96897125]
[117.34980011 -49.00262833]
[116.45698547 -34.02922058]
[115.56417084 -19.05581665]
[122.53021240 -5.89057732]
[113.98522949 7.42459583]
[113.09240723 22.39800072]
[120.88446045 31.65059853]
[120.26318359 44.13249588]
[111.01689911 53.12522125]
[109.90125275 68.08367157]
[108.78560638 83.04212952]
[118.16104889 94.08962250]
[117.08336639 108.53901672]
[106.17285156 118.07352448]
[105.05720520 133.03196716]
[121.15781403 137.76831055]
[135.81652832 145.92747498]
[148.31649780 157.10729980]
[158.04714966 170.75793457]
[164.53398132 186.20895386]
[167.46176147 202.70225525]
[166.68975830 219.42927551]
[162.25860596 235.57058716]
[154.38807678 250.33609009]
[143.46624756 263.00363159]
[130.03034973 272.95443726]
[114.74034119 279.70315552]
[98.34645844 282.92172241]
[98.12313080 297.92004395]
[97.89980316 312.91839600]
[97.67647552 327.91674805]
[97.45314789 342.91506958]
[97.22982025 357.91342163]
[97.00649261 372.91174316]
[96.78316498 387.91009521]
[96.78316498 402.91009521]
[97.00649261 417.90841675]
[104.94839478 431.59185791]
[97.40144348 444.43292236]
[97.62477112 459.43127441]
[108.82220459 449.45040894]
[123.80479431 450.17294312]
[133.98982239 461.18499756]
[133.54286194 476.17831421]
[122.71994019 486.56408691]
[107.72091675 486.39285278]
[97.13828278 475.76358032]
[96.02263641 490.72204590]
[94.90698242 505.68048096]
[109.44901276 509.53329468]
[123.03539276 515.99279785]
[135.20335388 524.83898926]
[145.53849792 535.77056885]
[153.68876648 548.41522217]
[159.37660217 562.34228516]
[162.40827942 577.07739258]
[162.68051147 592.11871338]
[160.18403625 606.95385742]
[155.00390625 621.07763672]
[147.31652832 634.00897217]
[137.38372803 645.30737305]
[125.54384613 654.58807373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[22 188]
[23 187]
[25 185]
[26 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[53 163]
[54 162]
[57 159]
[58 158]
[59 157]
[61 154]
[62 153]
[64 151]
[65 150]
[66 149]
[68 148]
[69 147]
[72 142]
[73 141]
[74 140]
[75 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
