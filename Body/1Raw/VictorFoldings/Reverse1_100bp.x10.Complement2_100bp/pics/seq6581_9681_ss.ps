%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[85.58357239 626.11145020]
[75.86529541 614.63128662]
[68.35324860 601.60021973]
[63.28890610 587.43713379]
[60.83507156 572.59741211]
[61.07062912 557.55798340]
[63.98799896 542.80230713]
[69.49340057 528.80480957]
[77.40986633 516.01538086]
[87.48291016 504.84518433]
[99.38871765 495.65325928]
[112.74457550 488.73510742]
[127.12114716 484.31311035]
[125.33867645 469.41940308]
[123.55621338 454.52566528]
[121.77375031 439.63195801]
[119.99127960 424.73825073]
[118.20881653 409.84451294]
[107.02703857 419.84292603]
[92.21347809 417.48526001]
[84.68814850 404.50955200]
[89.99843597 390.48098755]
[104.22978973 385.74090576]
[116.89051819 393.78210449]
[116.10919952 378.80249023]
[115.21638489 363.82907104]
[114.32356262 348.85565186]
[113.43074799 333.88226318]
[112.53793335 318.90884399]
[111.64511871 303.93545532]
[110.41814423 288.98571777]
[108.85762024 274.06710815]
[107.29709625 259.14849854]
[105.07197571 244.31445312]
[102.18670654 229.59457397]
[99.30143738 214.87467957]
[96.41616058 200.15478516]
[93.53089142 185.43489075]
[90.64561462 170.71499634]
[86.19830322 185.04055786]
[77.39369202 197.18464661]
[65.16096497 205.86567688]
[50.79105759 210.16751099]
[35.80047226 209.63618469]
[21.77119446 204.32775879]
[10.18376923 194.80245972]
[2.26104593 182.06547546]
[-1.16087270 167.46101379]
[0.27913696 152.53028870]
[6.42910719 138.84899902]
[16.64001656 127.86094666]
[29.83428383 120.72573090]
[44.61948776 118.19635010]
[59.43531036 120.53973389]
[72.71820068 127.50858307]
[83.06638336 138.36744690]
[89.38784027 151.97056580]
[90.28065491 136.99716187]
[91.17347717 122.02375793]
[92.06629181 107.05035400]
[92.06629181 92.05035400]
[91.17347717 77.07695007]
[90.28065491 62.10354233]
[89.38784027 47.13013840]
[88.27219391 32.17168427]
[79.33455658 19.11682892]
[85.90553284 5.75002146]
[84.56729889 -9.19016361]
[83.22906494 -24.13034821]
[81.89083099 -39.07053375]
[80.55259705 -54.01071930]
[67.39972687 -62.02996063]
[61.55913162 -76.09199524]
[65.07708740 -90.72373962]
[76.40069580 -100.36293030]
[75.06246185 -115.30311584]
[73.72422791 -130.24330139]
[72.38599396 -145.18348694]
[70.93657684 -160.11329651]
[69.15410614 -175.00700378]
[67.15009308 -189.87254333]
[65.14608002 -204.73806763]
[63.03145981 -219.58827209]
[60.80634308 -234.42230225]
[58.58122253 -249.25634766]
[43.54849243 -249.96575928]
[28.94308472 -253.59455872]
[15.32638741 -260.00329590]
[3.22179317 -268.94561768]
[-6.90542984 -280.07778931]
[-14.66601753 -292.97195435]
[-19.76167488 -307.13247681]
[-21.99653816 -322.01507568]
[-21.28470421 -337.04769897]
[-17.65353584 -351.65252686]
[-11.24260330 -365.26818848]
[-2.29832697 -377.37130737]
[8.83549881 -387.49673462]
[21.73092079 -395.25524902]
[35.89227295 -400.34860229]
[50.77522659 -402.58105469]
[65.80772400 -401.86679077]
[80.41196442 -398.23327637]
[94.02658081 -391.82012939]
[106.12828064 -382.87390137]
[116.25189972 -371.73843384]
[124.00831604 -358.84173584]
[129.09938049 -344.67956543]
[131.32943726 -329.79626465]
[130.61273193 -314.76388550]
[126.97683716 -300.16021729]
[120.56149292 -286.54663086]
[111.61330414 -274.44638062]
[100.47619629 -264.32458496]
[87.57826996 -256.57025146]
[73.41526794 -251.48147583]
[75.64038849 -236.64743042]
[77.86550140 -221.81338501]
[81.96644592 -215.66488647]
[80.01161194 -206.74208069]
[82.01562500 -191.87655640]
[84.01963806 -177.01101685]
[87.20706177 -173.45442200]
[88.19409180 -167.85775757]
[85.85517883 -161.67381287]
[89.67749023 -155.34832764]
[87.32617950 -146.52171326]
[88.66441345 -131.58152771]
[90.00264740 -116.64134979]
[91.34088135 -101.70116425]
[104.19730377 -94.22785187]
[110.25961304 -80.45423126]
[107.01109314 -65.57806396]
[95.49278259 -55.34895325]
[96.83101654 -40.40876770]
[98.16925049 -25.46858215]
[99.50748444 -10.52839756]
[100.84571838 4.41178703]
[109.68763733 16.39801979]
[103.21237946 30.83344841]
[106.23780823 34.52882385]
[106.97395325 40.16399384]
[104.36124420 46.23731995]
[105.25406647 61.21072769]
[106.14688110 76.18413544]
[107.03969574 91.15753937]
[116.22518158 79.29891968]
[130.59403992 74.99358368]
[144.78704834 79.84732056]
[153.51054382 92.04979706]
[153.51091003 107.04979706]
[144.78797913 119.25269318]
[130.59521484 124.10710144]
[116.22614288 119.80245209]
[107.03969574 107.94316864]
[106.14688110 122.91657257]
[105.25406647 137.88998413]
[104.36124420 152.86338806]
[105.36550903 167.82972717]
[108.25077820 182.54962158]
[111.13605499 197.26951599]
[114.02132416 211.98941040]
[116.90660095 226.70928955]
[119.79187012 241.42918396]
[129.03726196 229.61720276]
[143.90974426 227.66555786]
[155.88970947 236.69221497]
[158.11447144 251.52630615]
[149.30958557 263.67019653]
[134.51890564 266.16729736]
[122.21569824 257.58798218]
[123.77622223 272.50659180]
[125.33674622 287.42520142]
[128.40423584 291.64865112]
[129.44126892 296.17388916]
[128.67286682 300.17697144]
[126.61852264 303.04263306]
[127.51133728 318.01605225]
[128.40415955 332.98944092]
[129.29696655 347.96286011]
[130.18978882 362.93624878]
[131.08259583 377.90966797]
[134.71725464 386.28982544]
[131.87556458 393.11233521]
[133.10253906 408.06207275]
[134.88499451 422.95578003]
[136.66746521 437.84948730]
[138.44993591 452.74322510]
[140.23239136 467.63693237]
[142.01486206 482.53063965]
[157.02891541 483.43521118]
[171.64010620 487.00628662]
[185.37876892 493.12908936]
[197.80325317 501.60684204]
[208.51417542 512.16693115]
[217.16720581 524.46997070]
[223.48419189 538.12048340]
[227.26206970 552.67956543]
[228.37939453 567.67926025]
[226.80024719 582.63739014]
[222.57540894 597.07318115]
[215.84066772 610.52239990]
[206.81251526 622.55291748]
[195.78118896 632.77783203]
[183.10128784 640.86859131]
[169.18043518 646.56500244]
[154.46609497 649.68402100]
[139.43130493 650.12536621]
[124.55935669 647.87481689]
[110.32832336 643.00476074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[24 184]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 173]
[32 172]
[33 171]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 146]
[62 145]
[63 144]
[64 143]
[65 140]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[75 130]
[76 129]
[77 128]
[78 127]
[79 125]
[80 122]
[81 121]
[82 120]
[83 118]
[84 117]
[85 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
