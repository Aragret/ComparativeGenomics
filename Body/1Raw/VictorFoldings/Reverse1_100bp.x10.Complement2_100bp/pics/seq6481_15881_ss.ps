%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[252.51550293 431.71633911]
[257.71279907 417.63015747]
[264.37792969 404.17623901]
[272.43539429 391.50701904]
[281.79388428 379.76602173]
[292.34738159 369.08633423]
[282.85848999 357.46905518]
[273.36956787 345.85180664]
[263.88067627 334.23455811]
[254.39178467 322.61727905]
[244.90289307 311.00003052]
[233.38447571 315.12127686]
[221.13273621 315.51089478]
[209.32876587 312.11636353]
[199.11511230 305.25061035]
[191.48512268 295.56335449]
[187.18646240 283.97955322]
[186.64773560 271.61114502]
[189.93588257 259.65032959]
[196.74826050 249.25456238]
[187.78755188 237.22518921]
[178.82685852 225.19581604]
[169.86616516 213.16644287]
[159.66340637 212.60371399]
[151.27851868 206.38743591]
[147.62391663 196.37623596]
[150.13299561 185.79260254]
[141.53443909 173.50177002]
[132.93586731 161.21092224]
[124.33730316 148.92008972]
[115.73873901 136.62925720]
[107.14017487 124.33841705]
[102.67658997 122.63976288]
[99.23269653 118.11907196]
[98.47499847 111.55116272]
[98.59397888 126.55068970]
[92.27152252 140.15313721]
[80.72839355 149.73208618]
[66.19338989 153.43798828]
[51.47299576 150.55528259]
[39.40948486 141.64059448]
[32.33213425 128.41520691]
[31.60746574 113.43271637]
[37.37540436 99.58602905]
[48.52225494 89.54870605]
[62.89572906 85.25881195]
[77.72053528 87.54464722]
[90.13511658 95.96578979]
[84.26615143 82.16161346]
[78.39719391 68.35743713]
[72.52822876 54.55325699]
[66.65927124 40.74908066]
[55.01135254 35.20933533]
[50.40726852 23.59097862]
[54.80814743 12.32337761]
[49.14536285 -1.56664908]
[43.48257446 -15.45667648]
[37.81978989 -29.34670258]
[35.37338638 -14.54754353]
[27.18728065 -1.97823024]
[14.64096737 6.24308681]
[-0.15127456 8.73097134]
[-14.69669437 5.06617022]
[-26.54413223 -4.13373184]
[-33.69709015 -17.31838989]
[-34.95016479 -32.26596069]
[-30.09219170 -46.45750809]
[-19.94182587 -57.50151825]
[-6.20958281 -63.53686905]
[8.79041386 -63.54650879]
[22.53040123 -57.52880859]
[32.69580078 -46.49642944]
[29.81052780 -61.21632004]
[26.59725380 -75.86811066]
[23.05758095 -90.44448090]
[19.51791000 -105.02085876]
[15.97823715 -119.59723663]
[12.43856430 -134.17361450]
[1.66323888 -145.75820923]
[6.17866707 -159.95187378]
[2.63899446 -174.52824402]
[-12.38309479 -173.72109985]
[-27.29768562 -175.68823242]
[-41.59679413 -180.36265564]
[-54.79339600 -187.58514404]
[-66.43802643 -197.10969543]
[-76.13406372 -208.61193848]
[-83.55126953 -221.70008850]
[-88.43701172 -235.92837524]
[-90.62489319 -250.81219482]
[-90.04039001 -265.84457397]
[-86.70341492 -280.51358032]
[-80.72761536 -294.31951904]
[-72.31652832 -306.79223633]
[-61.75663376 -317.50686646]
[-49.40759659 -326.09848022]
[-35.69002151 -332.27447510]
[-21.07112503 -335.82446289]
[-6.04881811 -336.62756348]
[8.86524200 -334.65640259]
[23.16308975 -329.97814941]
[36.35774612 -322.75210571]
[47.99980545 -313.22439575]
[57.69274139 -301.71954346]
[65.10641479 -288.62939453]
[69.98832703 -274.39978027]
[72.17219543 -259.51538086]
[71.58364105 -244.48315430]
[68.24271393 -229.81506348]
[62.26319122 -216.01072693]
[53.84874344 -203.54028320]
[43.28596115 -192.82850647]
[30.93460846 -184.24020386]
[17.21537018 -178.06791687]
[20.75504303 -163.49154663]
[31.27718735 -152.94955444]
[27.01494026 -137.71328735]
[30.55461311 -123.13690948]
[34.09428406 -108.56053162]
[37.63395691 -93.98415375]
[41.17362976 -79.40778351]
[43.97834396 -77.27098083]
[45.88742447 -73.66952515]
[46.22375488 -69.03917694]
[44.53041840 -64.10159302]
[47.41569138 -49.38170242]
[51.70981598 -35.00949097]
[57.37260056 -21.11946297]
[63.03538895 -7.22943592]
[68.69817352 6.66059113]
[83.12056732 16.65867043]
[80.46344757 34.88011932]
[86.33240509 48.68429565]
[92.20137024 62.48847580]
[98.07032776 76.29264832]
[103.93929291 90.09682465]
[111.01639557 103.32235718]
[119.43101501 115.73985291]
[128.02958679 128.03068542]
[136.62814331 140.32153320]
[145.22669983 152.61236572]
[153.82527161 164.90319824]
[162.42382812 177.19404602]
[181.05628967 184.88780212]
[181.89553833 204.20573425]
[190.85623169 216.23512268]
[199.81694031 228.26449585]
[208.77763367 240.29386902]
[226.30831909 236.39019775]
[243.72850037 240.53755188]
[257.53744507 251.85484314]
[264.98101807 268.02490234]
[264.60092163 285.76892090]
[256.52014160 301.51110840]
[266.00906372 313.12838745]
[275.49795532 324.74563599]
[284.98684692 336.36291504]
[294.47573853 347.98016357]
[303.96463013 359.59744263]
[316.53634644 351.38864136]
[329.90939331 344.56265259]
[343.93222046 339.19683838]
[358.44598389 335.35198975]
[373.28622437 333.07168579]
[388.28475952 332.38171387]
[403.27163696 333.28991699]
[418.07711792 335.78604126]
[432.53335571 339.84173584]
[446.47662354 345.41110229]
[459.74887085 352.43103027]
[472.19976807 360.82196045]
[483.68817139 370.48880005]
[494.08398438 381.32205200]
[503.26937866 393.19897461]
[511.14025879 405.98495483]
[517.60748291 419.53512573]
[522.59771729 433.69598389]
[526.05444336 448.30703735]
[527.93853760 463.20275879]
[528.22857666 478.21432495]
[526.92132568 493.17172241]
[524.03161621 507.90539551]
[519.59216309 522.24847412]
[513.65319824 536.03833008]
[506.28213501 549.11883545]
[497.56240845 561.34173584]
[487.59286499 572.56848145]
[476.48645020 582.67193604]
[464.36898804 591.53753662]
[451.37780762 599.06494141]
[437.66012573 605.16882324]
[423.37133789 609.77996826]
[408.67337036 612.84613037]
[393.73272705 614.33264160]
[378.71875000 614.22259521]
[363.80151367 612.51721191]
[349.15005493 609.23590088]
[334.93038940 604.41583252]
[321.30364990 598.11157227]
[308.42419434 590.39453125]
[296.43801880 581.35223389]
[285.48089600 571.08703613]
[275.67700195 559.71533203]
[267.13739014 547.36596680]
[259.95883179 534.17883301]
[254.22268677 520.30334473]
[249.99392700 505.89678955]
[247.32048035 491.12231445]
[246.23263550 476.14736938]
[246.74272156 461.14166260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[20 148]
[21 147]
[22 146]
[23 145]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[35 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[55 130]
[56 129]
[57 128]
[58 127]
[72 126]
[73 125]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
