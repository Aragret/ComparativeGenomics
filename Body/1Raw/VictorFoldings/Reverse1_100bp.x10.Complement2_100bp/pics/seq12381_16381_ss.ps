%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[26.16920471 647.26788330]
[13.65573025 638.95874023]
[2.30757141 629.11761475]
[-7.68892384 617.90612793]
[-16.16960335 605.50830078]
[-22.99520874 592.12768555]
[-28.05365372 577.98413086]
[-31.26187897 563.30981445]
[-32.56719971 548.34570312]
[-31.94817924 533.33752441]
[-29.41498566 518.53173828]
[-25.00921631 504.17147827]
[-18.80321693 490.49252319]
[-10.89889526 477.71951294]
[-1.42604756 466.06216431]
[9.45977306 455.71194458]
[21.57981110 446.83877563]
[34.73504639 439.58840942]
[48.70945358 434.07983398]
[63.27356720 430.40356445]
[61.49110031 415.50985718]
[59.70863342 400.61611938]
[55.79256821 394.34826660]
[58.01220703 385.48760986]
[56.45168304 370.56900024]
[54.89115906 355.65039062]
[53.33063507 340.73181152]
[51.24043274 338.86386108]
[49.76420593 336.05541992]
[49.26388168 332.53616333]
[50.01163101 328.66250610]
[52.14855194 324.88259888]
[51.47876740 309.89758301]
[50.80898285 294.91253662]
[44.50089645 308.52163696]
[34.50639343 319.70690918]
[21.69010353 327.50067139]
[7.16075897 331.22869873]
[-7.82470417 330.56845093]
[-21.96989441 325.57711792]
[-34.05110931 316.68643188]
[-43.02320480 304.66555786]
[-48.11000443 290.55441284]
[-48.87145233 275.57373047]
[-45.24166870 261.01953125]
[-37.53467178 248.15089417]
[-26.41719055 238.08105469]
[-12.85100079 231.68116760]
[1.99028766 229.50489807]
[16.82275391 231.74050903]
[30.36324310 238.19458008]
[41.44036484 248.30880737]
[49.09584045 261.20816040]
[52.66706467 275.77325439]
[56.20673752 261.19689941]
[59.74641037 246.62051392]
[63.28608322 232.04414368]
[49.91870117 221.71102905]
[42.38815689 206.52470398]
[42.25287247 189.51896667]
[49.58845139 174.11479187]
[62.96275711 163.43211365]
[79.71524048 159.65798950]
[82.81935120 144.98269653]
[85.92346191 130.30738831]
[89.02757263 115.63208771]
[81.21212769 103.43105316]
[84.21060181 89.25518036]
[96.29712677 81.26380157]
[99.40123749 66.58850098]
[102.50534821 51.91320038]
[97.79135132 36.81059265]
[107.99495697 25.95998192]
[111.09906769 11.28468037]
[113.32418060 -3.54936337]
[114.66241455 -18.48954773]
[116.00064850 -33.42973328]
[117.22762299 -48.37946701]
[118.34327698 -63.33792114]
[119.45892334 -78.29637146]
[120.24024200 -93.27600861]
[120.68685150 -108.26936340]
[121.13345337 -123.26271057]
[121.58006287 -138.25605774]
[122.02666473 -153.24940491]
[122.36164093 -168.24566650]
[122.58496857 -183.24400330]
[122.80829620 -198.24234009]
[123.03162384 -213.24067688]
[108.27302551 -216.14302063]
[94.26991272 -221.63415527]
[81.47242737 -229.53758240]
[70.29195404 -239.59922791]
[61.08790588 -251.49566650]
[54.15614319 -264.84445190]
[49.71950531 -279.21652222]
[47.92060471 -294.14984131]
[48.81726837 -309.16433716]
[52.38067627 -323.77743530]
[58.49627686 -337.51928711]
[66.96747589 -349.94824219]
[77.52197266 -360.66470337]
[89.82046509 -369.32418823]
[103.46762085 -375.64834595]
[118.02473450 -379.43386841]
[133.02386475 -380.55908203]
[147.98283386 -378.98779297]
[162.42077637 -374.77050781]
[175.87359619 -368.04284668]
[187.90881348 -359.02102661]
[198.13955688 -347.99505615]
[206.23693848 -335.31942749]
[211.94068909 -321.40155029]
[215.06742859 -306.68884277]
[215.51666260 -291.65429688]
[213.27392578 -276.78115845]
[208.41134644 -262.54757690]
[201.08522034 -249.41108704]
[191.53105164 -237.79396057]
[180.05595398 -228.06965637]
[167.02882385 -220.55076599]
[152.86843872 -215.47897339]
[138.02996826 -213.01734924]
[137.80664062 -198.01901245]
[137.58331299 -183.02067566]
[137.35998535 -168.02233887]
[140.40354919 -161.28747559]
[137.02001953 -152.80281067]
[136.57341003 -137.80944824]
[136.12680054 -122.81610870]
[135.68020630 -107.82275391]
[135.23359680 -92.82940674]
[137.37234497 -90.02617645]
[138.25958252 -86.04775238]
[137.35775757 -81.49363708]
[134.41737366 -77.18072510]
[133.30172729 -62.22227097]
[132.18608093 -47.26381683]
[134.82337952 -40.35972977]
[130.94084167 -32.09149933]
[129.60260010 -17.15131378]
[128.26437378 -2.21112919]
[139.10734558 -12.57596016]
[153.95588684 -14.70216846]
[167.27185059 -7.79672956]
[174.08871460 5.56479788]
[171.86395264 20.39889526]
[161.42735291 31.17280960]
[146.67149353 33.86813736]
[133.09996033 27.47958946]
[125.77436829 14.38879013]
[122.67025757 29.06409264]
[127.60627747 43.11702728]
[117.18064880 55.01731110]
[114.07653809 69.69261169]
[110.97242737 84.36791229]
[118.78787231 96.56894684]
[115.78939819 110.74481964]
[103.70287323 118.73619843]
[100.59876251 133.41149902]
[97.49465179 148.08679199]
[94.39054108 162.76210022]
[105.40290833 170.06480408]
[113.25918579 180.64956665]
[117.04172516 193.24362183]
[116.32108307 206.34169006]
[111.20470428 218.38597107]
[102.32154846 227.95137024]
[90.74485016 233.91412354]
[77.86245728 235.58381653]
[74.32278442 250.16018677]
[70.78311157 264.73657227]
[67.24343872 279.31292725]
[65.79402161 294.24273682]
[66.46380615 309.22778320]
[67.13359070 324.21282959]
[68.24924469 339.17126465]
[69.80976105 354.08987427]
[71.37028503 369.00848389]
[72.93080902 383.92709351]
[74.60234833 398.83367920]
[76.38481903 413.72738647]
[78.16728210 428.62109375]
[93.18759918 428.75674438]
[108.06724548 430.81207275]
[122.56188965 434.75335693]
[136.43351746 440.51583862]
[149.45433044 448.00494385]
[161.41052246 457.09768677]
[172.10575867 467.64471436]
[181.36442566 479.47290039]
[189.03448486 492.38793945]
[194.98997498 506.17779541]
[199.13311768 520.61602783]
[201.39585876 535.46557617]
[201.74107361 550.48254395]
[200.16305542 565.42034912]
[196.68772888 580.03369141]
[191.37217712 594.08264160]
[184.30368042 607.33654785]
[175.59829712 619.57763672]
[165.39900208 630.60498047]
[153.87324524 640.23748779]
[141.21031189 648.31701660]
[127.61813354 654.71081543]
[113.31990051 659.31396484]
[98.55041504 662.05084229]
[83.55219269 662.87652588]
[68.57153320 661.77746582]
[53.85441208 658.77166748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 183]
[21 182]
[22 181]
[24 180]
[25 179]
[26 178]
[27 177]
[32 176]
[33 175]
[34 174]
[54 173]
[55 172]
[56 171]
[57 170]
[63 162]
[64 161]
[65 160]
[66 159]
[69 156]
[70 155]
[71 154]
[73 152]
[74 151]
[75 142]
[76 141]
[77 140]
[78 138]
[79 137]
[80 136]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 126]
[87 125]
[88 124]
[89 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
