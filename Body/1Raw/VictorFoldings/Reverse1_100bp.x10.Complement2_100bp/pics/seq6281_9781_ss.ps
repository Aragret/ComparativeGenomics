%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[89.61263275 801.84405518]
[74.90235138 798.83489990]
[60.60366058 794.25292969]
[46.88419342 788.15185547]
[33.90481186 780.60314941]
[21.81769180 771.69531250]
[10.76454735 761.53289795]
[0.87497097 750.23492432]
[-7.73508739 737.93395996]
[-14.96467876 724.77416992]
[-20.72904015 710.90985107]
[-24.96058655 696.50354004]
[-27.60970497 681.72418213]
[-28.64533806 666.74505615]
[-28.05534172 651.74176025]
[-25.84663391 636.89019775]
[-22.04511070 622.36450195]
[-16.69534302 608.33502197]
[-9.86005497 594.96612549]
[-1.61938429 582.41473389]
[7.93004942 570.82781982]
[18.67628479 560.34136963]
[30.49332619 551.07830811]
[43.24262619 543.14721680]
[56.77470779 536.64105225]
[70.93090820 531.63610840]
[85.54525757 528.19110107]
[100.44641876 526.34643555]
[100.22309113 511.34811401]
[99.99976349 496.34976196]
[99.77643585 481.35144043]
[99.55310822 466.35308838]
[99.32977295 451.35476685]
[99.10644531 436.35641479]
[95.86370850 429.71514893]
[98.99311829 421.13351440]
[98.99311829 406.13351440]
[98.99311829 391.13351440]
[91.25582123 378.40625000]
[98.99311829 364.60607910]
[98.99311829 349.60607910]
[83.40936279 345.26782227]
[69.66109467 336.71734619]
[58.86071396 324.63720703]
[51.88470459 309.99597168]
[49.30248260 293.97048950]
[51.32995605 277.85134888]
[57.81147003 262.93890381]
[68.23174286 250.43840027]
[81.75682068 241.36250305]
[97.30081177 236.44934082]
[96.85420227 221.45599365]
[96.40760040 206.46264648]
[95.84938812 191.47303772]
[95.17960358 176.48800659]
[84.54755402 169.20864868]
[79.98127747 156.95175171]
[83.35781860 144.11395264]
[93.66117096 135.43894958]
[93.21456909 120.44560242]
[92.76795959 105.45225525]
[90.36415100 102.43661499]
[89.30126953 98.37605286]
[90.01617432 93.89320374]
[92.65130615 89.78273773]
[92.87463379 74.78440094]
[93.09796143 59.78606033]
[93.32128906 44.78772354]
[85.79030609 30.87388420]
[93.71623993 18.26321983]
[93.93956757 3.26488233]
[82.44993591 12.90792656]
[67.49550629 11.73961544]
[57.64285278 0.42921087]
[58.53602600 -14.54417324]
[69.66337585 -24.60310364]
[84.65065002 -23.98536682]
[94.91211700 -13.04571915]
[96.47264099 -27.96432304]
[98.03316498 -42.88292694]
[99.59368896 -57.80153275]
[101.15421295 -72.72013855]
[99.02712250 -77.48695374]
[98.94900513 -82.12885284]
[100.52916718 -85.88626099]
[103.13206482 -88.26477051]
[105.35717773 -103.09880829]
[106.02696991 -118.08384705]
[105.13414764 -133.05725098]
[104.24133301 -148.03065491]
[93.74740601 -163.16204834]
[102.20800781 -178.53688049]
[101.09236145 -193.49533081]
[99.97670746 -208.45378113]
[98.86106110 -223.41223145]
[84.33112335 -227.79917908]
[72.36950684 -237.14176941]
[64.59392548 -250.17652893]
[62.05596924 -265.14059448]
[65.09886932 -280.01019287]
[73.31110382 -292.77435303]
[85.58202362 -301.70681763]
[100.25210571 -305.59954834]
[115.33732605 -303.92605591]
[128.79754639 -296.91271973]
[138.81236267 -285.50799561]
[144.02737427 -271.25427246]
[143.73727417 -256.07928467]
[137.98132324 -242.03530884]
[127.53793335 -231.02166748]
[113.81951141 -224.52787781]
[114.93516541 -209.56942749]
[116.05081177 -194.61097717]
[117.16645813 -179.65252686]
[126.12480927 -171.52389526]
[127.17669678 -159.07089233]
[119.21473694 -148.92347717]
[120.10755920 -133.95007324]
[121.00037384 -118.97666168]
[127.83714294 -132.32801819]
[139.21289062 -142.10514832]
[153.44009399 -146.85768127]
[168.40823364 -145.88059998]
[181.89688110 -139.31886292]
[191.90507507 -128.14584351]
[196.94813538 -114.01901245]
[196.27798462 -99.03398895]
[189.99401855 -85.41371918]
[179.02844238 -75.17868805]
[165.00791931 -69.84719086]
[150.01229858 -70.21014404]
[136.26612854 -76.21368408]
[125.80854034 -86.96723938]
[120.19122314 -100.87369537]
[117.96611023 -86.03964996]
[116.07281494 -71.15961456]
[114.51229095 -56.24100876]
[112.95176697 -41.32240677]
[111.39124298 -26.40380096]
[109.83072662 -11.48519611]
[108.93790436 3.48820996]
[108.71457672 18.48654747]
[116.26153564 31.32760620]
[108.31962585 45.01105118]
[108.09629822 60.00938797]
[107.87297058 75.00772858]
[107.64964294 90.00606537]
[107.76130676 105.00564575]
[108.20791626 119.99900055]
[108.65451813 134.99235535]
[121.60456848 146.75311279]
[122.03371429 163.90335083]
[110.16464233 175.81822205]
[110.83442688 190.80325317]
[114.34390259 199.23660278]
[111.40094757 206.01603699]
[111.84755707 221.00939941]
[112.29415894 236.00274658]
[125.82633972 239.10380554]
[138.20991516 245.35748291]
[148.72315979 254.39398193]
[156.75465393 265.68145752]
[161.83879089 278.55737305]
[163.68278503 292.26733398]
[162.18359375 306.00933838]
[157.43354797 318.98056030]
[149.71479797 330.42446899]
[139.48246765 339.67474365]
[127.33786011 346.19424438]
[113.99311829 349.60607910]
[113.99311829 364.60607910]
[121.73042297 378.40625000]
[113.99311829 391.13351440]
[113.99311829 406.13351440]
[113.99311829 421.13351440]
[114.10478973 436.13308716]
[114.32811737 451.13143921]
[114.55144501 466.12976074]
[114.77477264 481.12811279]
[114.99810028 496.12643433]
[115.22142792 511.12478638]
[115.44475555 526.12310791]
[130.39422607 527.52331543]
[145.10466003 530.53167725]
[159.40361023 535.11285400]
[173.12339783 541.21325684]
[186.10319519 548.76123047]
[198.19078064 557.66839600]
[209.24447632 567.83026123]
[219.13465881 579.12762451]
[227.74537659 591.42816162]
[234.97567749 604.58758545]
[240.74078369 618.45159912]
[244.97311401 632.85766602]
[247.62303162 647.63684082]
[248.65946960 662.61596680]
[248.07028198 677.61926270]
[245.86236572 692.47094727]
[242.06163025 706.99682617]
[236.71261597 721.02667236]
[229.87803650 734.39587402]
[221.63804626 746.94775391]
[212.08923340 758.53515625]
[201.34356689 769.02215576]
[189.52702332 778.28588867]
[176.77815247 786.21771240]
[163.24641418 792.72454834]
[149.09048462 797.73022461]
[134.47631836 801.17602539]
[119.57526398 803.02148438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[36 175]
[37 174]
[38 173]
[40 171]
[41 170]
[51 158]
[52 157]
[53 156]
[54 154]
[55 153]
[59 150]
[60 149]
[61 148]
[65 147]
[66 146]
[67 145]
[68 144]
[70 142]
[71 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[86 135]
[87 134]
[88 119]
[89 118]
[90 117]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
