%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[104.47418976 561.40307617]
[95.36875153 549.46697998]
[87.49702454 536.68359375]
[80.93724060 523.17999268]
[75.75460052 509.09033203]
[72.00061035 494.55462646]
[69.71258545 479.71740723]
[68.91326141 464.72607422]
[69.61058044 449.72967529]
[71.79761505 434.87722778]
[75.45262909 420.31631470]
[80.53929901 406.19171143]
[87.00705719 392.64376831]
[94.79164124 379.80715942]
[103.81566620 367.80941772]
[113.98945618 356.76983643]
[125.21189117 346.79809570]
[137.37142944 337.99331665]
[150.34724426 330.44302368]
[164.01034546 324.22219849]
[159.18434143 310.01974487]
[154.35833740 295.81729126]
[149.53234863 281.61483765]
[144.70634460 267.41238403]
[139.88035583 253.20993042]
[135.05435181 239.00747681]
[130.22836304 224.80502319]
[125.40235901 210.60256958]
[120.57636261 196.40011597]
[117.59219360 194.52206421]
[115.36942291 191.10528564]
[114.62133026 186.52340698]
[115.86740875 181.45443726]
[111.68039703 167.05065918]
[107.49338531 152.64688110]
[103.30637360 138.24308777]
[99.11936188 123.83930969]
[94.93235016 109.43553162]
[88.85851288 95.72026062]
[81.00675964 82.93942261]
[73.15500641 70.15857697]
[65.30324554 57.37773514]
[57.45149231 44.59689331]
[49.59973907 31.81604958]
[41.74798203 19.03520775]
[33.61276627 6.43289518]
[25.19814873 -5.98460054]
[16.78352928 -18.40209579]
[3.70620751 -11.03709888]
[-9.93464947 -4.77718210]
[-24.04585838 0.33489189]
[-38.53102493 4.26420212]
[-53.29119873 6.98390675]
[-68.22555542 8.47542763]
[-83.23206329 8.72857475]
[-98.20822906 7.74162102]
[-113.05173492 5.52130651]
[-127.66119385 2.08279920]
[-141.93679810 -2.55041194]
[-155.78103638 -8.34667683]
[-169.09933472 -15.26640129]
[-181.80070496 -23.26231575]
[-193.79838562 -32.27979660]
[-205.01043701 -42.25724792]
[-215.36024475 -53.12651443]
[-224.77713013 -64.81333923]
[-233.19674683 -77.23789215]
[-240.56158447 -90.31529999]
[-246.82135010 -103.95623779]
[-251.93325806 -118.06750488]
[-255.86238098 -132.55271912]
[-258.58190918 -147.31292725]
[-260.07327271 -162.24729919]
[-260.32623291 -177.25381470]
[-259.33908081 -192.22996521]
[-257.11859131 -207.07344055]
[-253.67991638 -221.68286133]
[-249.04653931 -235.95840454]
[-243.25010681 -249.80258179]
[-236.33023071 -263.12078857]
[-228.33416748 -275.82205200]
[-219.31654358 -287.81964111]
[-209.33895874 -299.03158569]
[-198.46955872 -309.38125610]
[-186.78262329 -318.79800415]
[-174.35797119 -327.21746826]
[-161.28047180 -334.58215332]
[-147.63946533 -340.84173584]
[-133.52813721 -345.95349121]
[-119.04287720 -349.88244629]
[-104.28263855 -352.60180664]
[-89.34825134 -354.09295654]
[-74.34172821 -354.34576416]
[-59.36558914 -353.35845947]
[-44.52213287 -351.13778687]
[-29.91276169 -347.69891357]
[-15.63726616 -343.06536865]
[-1.79316962 -337.26876831]
[11.52495956 -330.34872437]
[24.22614288 -322.35250854]
[36.22361755 -313.33474731]
[47.43542480 -303.35702515]
[57.78498077 -292.48751831]
[67.20158386 -280.80047607]
[75.62090302 -268.37570190]
[82.98543549 -255.29812622]
[89.24486542 -241.65704346]
[94.35643005 -227.54565430]
[98.28522491 -213.06034851]
[101.00440216 -198.30007935]
[102.49539185 -183.36567688]
[102.74800110 -168.35914612]
[101.76051331 -153.38302612]
[99.53966522 -138.53959656]
[96.10063171 -123.93025970]
[91.46691132 -109.65482330]
[85.67015076 -95.81079102]
[78.74995422 -82.49274445]
[70.75358582 -69.79165649]
[61.73567200 -57.79429245]
[51.75782013 -46.58260345]
[40.88818741 -36.23317719]
[29.20102501 -26.81671524]
[37.61564255 -14.39921856]
[46.03026199 -1.98172343]
[49.40522003 -0.96093875]
[52.45342636 1.74525380]
[54.38812256 5.96547413]
[54.52882385 11.18345165]
[62.38058090 23.96429443]
[70.23233795 36.74513626]
[78.08409119 49.52597809]
[85.93584442 62.30681992]
[93.78760529 75.08766174]
[101.63935852 87.86850739]
[100.66461182 72.90021515]
[104.30207062 58.34793091]
[112.20504761 45.59869766]
[123.62026978 35.86768341]
[137.45971680 30.08238792]
[152.40431213 28.79422951]
[167.02960205 32.12598801]
[179.94163513 39.76010132]
[189.90968323 50.96893311]
[195.98367310 64.68412781]
[197.58467102 79.59844208]
[194.56008911 94.29034424]
[187.19818115 107.35948181]
[176.20066833 117.56020355]
[162.61575317 123.92022705]
[147.73825073 125.83336639]
[132.98620605 123.11727142]
[119.76568604 116.03081512]
[109.33612823 105.24851990]
[113.52313995 119.65229797]
[117.71015167 134.05607605]
[121.89716339 148.45986938]
[126.08417511 162.86364746]
[130.27119446 177.26742554]
[134.77880859 191.57411194]
[139.60481262 205.77656555]
[144.43081665 219.97901917]
[149.25680542 234.18148804]
[154.08280945 248.38394165]
[158.90879822 262.58639526]
[163.73480225 276.78884888]
[168.56080627 290.99130249]
[173.38679504 305.19375610]
[178.21279907 319.39620972]
[192.83734131 316.00485229]
[207.72688293 314.08651733]
[222.73344421 313.66024780]
[237.70788574 314.73028564]
[252.50135803 317.28601074]
[266.96685791 321.30197144]
[280.96060181 326.73834229]
[294.34350586 333.54101562]
[306.98257446 341.64239502]
[318.75216675 350.96200562]
[329.53533936 361.40716553]
[339.22491455 372.87411499]
[347.72457886 385.24887085]
[354.94989014 398.40841675]
[360.82897949 412.22198486]
[365.30346680 426.55230713]
[368.32882690 441.25689697]
[369.87506104 456.18966675]
[369.92675781 471.20220947]
[368.48339844 486.14526367]
[365.55935669 500.87039185]
[361.18368530 515.23114014]
[355.39987183 529.08489990]
[348.26538086 542.29388428]
[339.85113525 554.72686768]
[330.24075317 566.26025391]
[319.52978516 576.77947998]
[307.82461548 586.17993164]
[295.24166870 594.36816406]
[281.90591431 601.26281738]
[267.94995117 606.79541016]
[253.51245117 610.91094971]
[238.73693848 613.56848145]
[223.77021790 614.74163818]
[208.76107788 614.41870117]
[193.85867310 612.60296631]
[179.21112061 609.31237793]
[164.96398926 604.57977295]
[151.25889587 598.45202637]
[138.23202515 590.99017334]
[126.01286316 582.26831055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 135]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
[46 125]
[47 124]
[48 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
