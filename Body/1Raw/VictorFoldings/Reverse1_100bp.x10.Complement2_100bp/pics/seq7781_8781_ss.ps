%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[171.49398804 483.35342407]
[168.95475769 468.54354858]
[168.54914856 453.52301025]
[170.28538513 438.59765625]
[174.12812805 424.07131958]
[179.99914551 410.23977661]
[187.77891541 397.38458252]
[197.30905151 385.76745605]
[208.39552307 375.62493896]
[220.81262207 367.16348267]
[234.30757141 360.55538940]
[229.69357300 346.28265381]
[225.07955933 332.00991821]
[220.46554565 317.73718262]
[215.85153198 303.46444702]
[211.23753357 289.19171143]
[205.26596069 275.43161011]
[197.99273682 262.31292725]
[190.71951294 249.19422913]
[182.86775208 236.41337585]
[174.45314026 223.99588013]
[166.03851318 211.57838440]
[152.49365234 205.38276672]
[151.15728760 189.61810303]
[142.74267578 177.20060730]
[134.32806396 164.78311157]
[125.91343689 152.36561584]
[117.49881744 139.94812012]
[105.68273926 137.35836792]
[98.57075500 127.08200836]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[71.48155212 75.91143799]
[70.54946899 68.57979584]
[62.50829697 55.91726685]
[56.83484268 52.52264023]
[54.13300323 47.52293396]
[54.42273712 42.75584793]
[46.76214218 29.85952187]
[39.10154343 16.96319580]
[31.44094467 4.06686831]
[23.78034782 -8.82945824]
[16.11975098 -21.72578430]
[8.45915318 -34.62211227]
[9.60213757 -19.66572189]
[7.18121672 -4.86237335]
[1.33330595 8.95073414]
[-7.61086750 20.99240112]
[-19.14546776 30.58161545]
[-32.61815643 37.17605591]
[-47.26698685 40.40277863]
[-62.26350021 40.07929993]
[-76.75956726 36.22390366]
[-89.93536377 29.05464172]
[-101.04573822 18.97696495]
[-109.46234894 6.56081724]
[-114.70918274 -7.49160910]
[-116.48951721 -22.38558197]
[-114.70266724 -37.27877426]
[-109.44967651 -51.32890320]
[-101.02763367 -63.74136353]
[-89.91284943 -73.81417847]
[-76.73390961 -80.97766876]
[-62.23616028 -84.82672119]
[-47.23950958 -85.14363861]
[-32.59209061 -81.91049957]
[-19.12228966 -75.31015778]
[-7.59188938 -65.71589661]
[1.34754467 -53.66938400]
[-1.31825078 -68.43060303]
[-3.98404622 -83.19181824]
[-6.64984179 -97.95303345]
[-14.36107349 -85.08692169]
[-28.11651421 -79.10462952]
[-42.78572464 -82.23739624]
[-52.89745331 -93.31679535]
[-54.68027115 -108.21047211]
[-47.46923828 -121.36344910]
[-33.95388412 -127.87001038]
[-19.17510796 -125.30334473]
[-8.64449596 -114.61973572]
[-9.53731251 -129.59313965]
[-10.43012810 -144.56654358]
[-22.18719482 -135.25143433]
[-36.83415985 -138.48661804]
[-43.57382202 -151.88725281]
[-37.43795776 -165.57487488]
[-22.94969368 -169.45948792]
[-10.79003525 -160.67895508]
[-10.56670761 -175.67729187]
[-10.34337997 -190.67562866]
[-10.12005234 -205.67396545]
[-9.89672470 -220.67230225]
[-9.67339706 -235.67063904]
[-9.45006943 -250.66897583]
[-23.70396996 -255.77828979]
[-35.52500534 -265.24093628]
[-43.63091660 -278.03048706]
[-47.14243698 -292.75964355]
[-45.67866516 -307.83068848]
[-39.39837646 -321.60882568]
[-28.98280907 -332.59948730]
[-15.56177044 -339.61050415]
[-0.59107029 -341.88137817]
[14.30537987 -339.16577148]
[27.51172638 -331.75827026]
[37.59543991 -320.46237183]
[43.46271896 -306.50335693]
[44.47712326 -291.39541626]
[40.52861786 -276.77734375]
[32.04550552 -264.23480225]
[19.94797134 -255.12829590]
[5.54826784 -250.44564819]
[5.32494020 -235.44731140]
[5.10161257 -220.44897461]
[4.87828493 -205.45063782]
[4.65495729 -190.45230103]
[4.43162918 -175.45396423]
[4.20830154 -160.45562744]
[4.54327774 -145.45936584]
[5.43609381 -130.48596191]
[6.32890940 -115.51255035]
[8.11137581 -100.61883545]
[10.77717113 -85.85761261]
[13.44296646 -71.09639740]
[16.10876274 -56.33518219]
[21.35548019 -42.28271103]
[29.01607704 -29.38638306]
[36.67667389 -16.49005508]
[44.33727264 -3.59372878]
[51.99787140 9.30259800]
[59.65846634 22.19892502]
[67.31906128 35.09525299]
[75.17082214 47.87609482]
[83.21199036 60.53862000]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[129.59953308 113.98736572]
[129.91632080 131.53349304]
[138.33093262 143.95098877]
[146.74554443 156.36848450]
[155.16017151 168.78598022]
[163.57478333 181.20347595]
[177.72152710 188.28729248]
[178.45600891 203.16377258]
[186.87063599 215.58126831]
[195.28524780 227.99876404]
[199.17198181 213.51106262]
[212.09519958 205.89591980]
[226.65190125 209.51564026]
[234.50335693 222.29666138]
[231.15187073 236.91746521]
[218.51734924 245.00256348]
[203.83819580 241.92098999]
[211.11143494 255.03968811]
[218.38465881 268.15838623]
[219.05513000 253.17337036]
[225.68960571 239.72035217]
[237.17007446 230.06640625]
[251.56187439 225.83836365]
[266.43972778 227.74874878]
[279.29644775 235.47563171]
[287.96545410 247.71687317]
[290.98590088 262.40963745]
[287.84875488 277.07791138]
[279.08267212 289.24981689]
[266.16491699 296.87423706]
[251.27235413 298.66625977]
[236.91462708 294.32394409]
[225.51026917 284.57769775]
[230.12426758 298.85043335]
[234.73828125 313.12316895]
[239.35229492 327.39590454]
[243.96629333 341.66864014]
[248.58030701 355.94137573]
[263.38973999 353.39941406]
[278.41018677 352.99099731]
[293.33587646 354.72445679]
[307.86291504 358.56451416]
[321.69555664 364.43295288]
[334.55218506 372.21032715]
[346.17108154 381.73831177]
[356.31564331 392.82290649]
[364.77941895 405.23843384]
[371.39001465 418.73217773]
[376.01290894 433.02935791]
[378.55395508 447.83892822]
[378.96145630 462.85940552]
[377.22705078 477.78497314]
[373.38610840 492.31179810]
[367.51681519 506.14407349]
[359.73861694 519.00024414]
[350.20993042 530.61853027]
[339.12472534 540.76239014]
[326.70864868 549.22540283]
[313.21453857 555.83520508]
[298.91705322 560.45721436]
[284.10729980 562.99731445]
[269.08679199 563.40386963]
[254.16134644 561.66857910]
[239.63478088 557.82672119]
[225.80285645 551.95654297]
[212.94718933 544.17761230]
[201.32948303 534.64819336]
[191.18627930 523.56231689]
[182.72406006 511.14575195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 160]
[18 159]
[19 158]
[20 151]
[21 150]
[22 149]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[31 141]
[33 139]
[34 138]
[36 137]
[37 136]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[71 128]
[72 127]
[73 126]
[74 125]
[83 124]
[84 123]
[85 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
