%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[4.67217636 478.09515381]
[3.81620526 493.08795166]
[1.22542834 507.88000488]
[-3.06511688 522.27124023]
[-8.99740601 536.06707764]
[-16.49121094 549.08087158]
[-25.44518852 561.13665771]
[-35.73824310 572.07147217]
[-47.23117447 581.73736572]
[-59.76855850 590.00360107]
[-73.18083191 596.75836182]
[-87.28661346 601.91040039]
[-101.89514160 605.38995361]
[-116.80885315 607.15002441]
[-131.82604980 607.16680908]
[-146.74365234 605.44000244]
[-161.35989380 601.99304199]
[-175.47714233 596.87249756]
[-188.90444946 590.14758301]
[-201.46023560 581.90936279]
[-212.97470093 572.26916504]
[-223.29211426 561.35736084]
[-232.27296448 549.32153320]
[-239.79577637 536.32446289]
[-245.75881958 522.54193115]
[-250.08146667 508.16027832]
[-252.70523071 493.37405396]
[-253.59463501 478.38320923]
[-252.73765564 463.39047241]
[-250.14590454 448.59860229]
[-245.85440063 434.20764160]
[-239.92118835 420.41223145]
[-232.42651367 407.39892578]
[-223.47172546 395.34368896]
[-213.17794800 384.40960693]
[-201.68437195 374.74447632]
[-189.14643860 366.47909546]
[-175.73370361 359.72518921]
[-161.62757874 354.57409668]
[-147.01881409 351.09548950]
[-132.10499573 349.33642578]
[-117.08779144 349.32067871]
[-102.17031097 351.04846191]
[-87.55429077 354.49642944]
[-73.43739319 359.61791992]
[-60.01053238 366.34368896]
[-51.78172302 353.80230713]
[-43.55291367 341.26089478]
[-35.32410812 328.71948242]
[-27.09529877 316.17810059]
[-31.45423508 304.05252075]
[-27.98155022 291.44210815]
[-17.72905922 283.01022339]
[-4.29736280 282.00817871]
[4.11725569 269.59066772]
[12.53187466 257.17318726]
[13.26635742 242.29669189]
[27.41309547 235.21287537]
[34.88083649 222.20393372]
[41.36033249 208.67558289]
[47.83982849 195.14723206]
[54.31932449 181.61889648]
[60.79882050 168.09054565]
[67.17742920 154.51434326]
[73.45478821 140.89102173]
[70.90645599 123.52804565]
[86.03017426 113.02306366]
[80.90879822 99.46881104]
[86.77592468 86.22029877]
[100.25456238 80.90310669]
[106.32839203 67.18783569]
[112.40222931 53.47256851]
[118.37379456 39.71246719]
[124.24275208 25.90829086]
[130.11170959 12.10411358]
[135.98066711 -1.70006371]
[141.84963989 -15.50424099]
[147.71859741 -29.30841827]
[152.65019226 -43.47455215]
[156.62228394 -57.93907547]
[160.59437561 -72.40360260]
[164.56648254 -86.86812592]
[168.43078613 -101.36181641]
[172.18708801 -115.88387299]
[175.94338989 -130.40592957]
[167.81729126 -141.14750671]
[167.36798096 -154.41432190]
[174.53555298 -165.35543823]
[186.51580811 -170.09918213]
[190.48791504 -184.56370544]
[194.46000671 -199.02822876]
[198.43209839 -213.49275208]
[202.40419006 -227.95727539]
[206.37629700 -242.42179871]
[210.34838867 -256.88632202]
[212.35240173 -271.75186157]
[212.35240173 -286.75186157]
[212.35240173 -301.75186157]
[198.29521179 -307.53665161]
[187.52534485 -318.26409912]
[181.68510437 -332.29837036]
[181.66511536 -347.49926758]
[187.46839905 -361.54885864]
[198.21002197 -372.30459595]
[212.25193787 -378.12637329]
[227.45286560 -378.12637329]
[241.49479675 -372.30459595]
[252.23640442 -361.54885864]
[258.03970337 -347.49926758]
[258.01968384 -332.29837036]
[252.17945862 -318.26409912]
[241.40959167 -307.53665161]
[227.35240173 -301.75186157]
[227.35240173 -286.75186157]
[227.35240173 -271.75186157]
[234.35702515 -285.01589966]
[245.07374573 -295.51123047]
[258.48110962 -302.23748779]
[273.30123901 -304.55355835]
[288.12152100 -302.23867798]
[301.52944946 -295.51351929]
[312.24700928 -285.01907349]
[319.25268555 -271.75555420]
[321.87878418 -256.98721313]
[319.87493896 -242.12167358]
[313.43215942 -228.57580566]
[303.16458130 -217.64070129]
[290.05078125 -210.35864258]
[275.34069824 -207.42372131]
[260.43643188 -209.11564636]
[246.75852966 -215.27317810]
[235.61070251 -225.30940247]
[228.05548096 -238.26774597]
[224.81291199 -252.91423035]
[220.84082031 -238.44970703]
[216.86871338 -223.98518372]
[212.89662170 -209.52066040]
[208.92453003 -195.05613708]
[204.95243835 -180.59161377]
[200.98033142 -166.12709045]
[209.91566467 -151.87933350]
[205.69868469 -135.25007629]
[190.46543884 -126.64963531]
[186.70913696 -112.12757874]
[182.95285034 -97.60551453]
[184.32116699 -90.34263611]
[179.03100586 -82.89602661]
[175.05889893 -68.43150330]
[171.08680725 -53.96697998]
[167.11471558 -39.50245667]
[179.21157837 -48.37182999]
[194.17634583 -49.39939880]
[207.37200928 -42.26675797]
[214.70974731 -29.18403816]
[213.91589355 -14.20506001]
[205.23641968 -1.97122288]
[191.36076355 3.72668552]
[176.58843994 1.12310612]
[165.49682617 -8.97521305]
[161.52276611 -23.43945694]
[155.65380859 -9.63527966]
[149.78485107 4.16889715]
[143.91589355 17.97307396]
[138.04693604 31.77725029]
[132.17796326 45.58142853]
[132.45376587 52.96693420]
[126.11749268 59.54640579]
[120.04366302 73.26167297]
[113.96982574 86.97693634]
[119.09120178 100.53118896]
[113.22407532 113.77970123]
[99.74543762 119.09689331]
[103.65507507 131.38825989]
[98.31380463 142.68669128]
[87.07810211 147.16838074]
[80.80074310 160.79170227]
[80.05159760 169.89535522]
[74.32716370 174.57003784]
[67.84767151 188.09838867]
[61.36817551 201.62673950]
[54.88867950 215.15507507]
[48.40918350 228.68342590]
[61.62209320 221.58279419]
[76.61781311 221.94111633]
[89.47649384 229.66473389]
[96.83691406 242.73471069]
[96.77507019 257.73458862]
[89.30713654 270.74340820]
[76.38520050 278.36074829]
[61.38703918 278.59539795]
[48.23312378 271.38607788]
[40.36186600 258.61721802]
[39.83059311 243.62750244]
[38.49423981 259.39215088]
[24.94936943 265.58779907]
[16.53475189 278.00527954]
[8.12013245 290.42279053]
[11.73512268 307.53860474]
[2.04375744 321.69461060]
[-14.55389881 324.40689087]
[-22.78270721 336.94830322]
[-31.01151466 349.48971558]
[-39.24032211 362.03109741]
[-47.46913147 374.57250977]
[-35.95402145 384.21194458]
[-25.63587570 395.12304688]
[-16.65422630 407.15826416]
[-9.13054562 420.15484619]
[-3.16657972 433.93698120]
[1.15701449 448.31832886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 204]
[47 203]
[48 202]
[49 201]
[50 200]
[54 197]
[55 196]
[56 195]
[58 193]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 176]
[65 175]
[67 172]
[70 169]
[71 168]
[72 167]
[73 165]
[74 164]
[75 163]
[76 162]
[77 161]
[78 160]
[79 150]
[80 149]
[81 148]
[82 147]
[83 145]
[84 144]
[85 143]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
