%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[106.40469360 483.76586914]
[94.70294189 493.21255493]
[81.53847504 500.48361206]
[67.31134033 505.35800171]
[52.45388794 507.68765259]
[37.41761780 507.40173340]
[22.65946770 504.50897217]
[8.62791920 499.09722900]
[-4.25062323 491.33099365]
[-15.58479691 481.44628906]
[-25.03016853 469.74346924]
[-32.29970169 456.57818604]
[-37.17248917 442.35049438]
[-39.50044632 427.49276733]
[-39.21283340 412.45654297]
[-36.31838608 397.69869995]
[-30.90506935 383.66778564]
[-23.13738251 370.79010010]
[-13.25137997 359.45706177]
[-1.54748487 350.01303101]
[11.61863422 342.74496460]
[25.84687424 337.87380981]
[40.70485306 335.54751587]
[55.74105835 335.83685303]
[58.62633133 321.11697388]
[61.51160431 306.39706421]
[64.28721619 291.65609741]
[66.95301056 276.89489746]
[69.61880493 262.13366699]
[72.28459930 247.37245178]
[74.95039368 232.61123657]
[77.28588104 217.79417419]
[71.31832123 204.14727783]
[80.82997131 191.50453186]
[82.83398438 176.63900757]
[84.83799744 161.77348328]
[77.30752563 145.92233276]
[88.68348694 131.44238281]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[96.42279816 66.77515411]
[90.38021088 52.15333176]
[99.57508087 40.43567276]
[101.35754395 25.54195404]
[103.14001465 10.64823723]
[104.58943176 -4.28157091]
[105.70507812 -19.24002457]
[106.82073212 -34.19847870]
[107.93637848 -49.15693283]
[108.60616302 -64.14196777]
[108.82949066 -79.14030457]
[109.05281830 -94.13864136]
[109.27614594 -109.13698578]
[100.79322052 -113.84552002]
[94.64477539 -121.27565002]
[91.64292908 -130.37980652]
[92.16000366 -139.89416504]
[96.08287811 -148.51397705]
[102.83426666 -155.07261658]
[111.45734406 -158.69932556]
[112.57299805 -173.65777588]
[113.68864441 -188.61622620]
[114.80429077 -203.57467651]
[115.91994476 -218.53312683]
[117.03559113 -233.49159241]
[118.15123749 -248.45004272]
[119.26688385 -263.40850830]
[120.04821014 -278.38812256]
[120.49481201 -293.38146973]
[120.94142151 -308.37481689]
[121.38802338 -323.36819458]
[121.83463287 -338.36154175]
[122.28124237 -353.35488892]
[122.72784424 -368.34823608]
[107.84360504 -370.31045532]
[93.23425293 -373.76846313]
[79.04969788 -378.68676758]
[65.43550873 -385.01486206]
[52.53137970 -392.68783569]
[40.46973419 -401.62692261]
[29.37434196 -411.74044800]
[19.35906219 -422.92459106]
[10.52666378 -435.06460571]
[2.96778512 -448.03588867]
[-3.24000835 -461.70535278]
[-8.03301430 -475.93273926]
[-11.36204910 -490.57202148]
[-13.19295120 -505.47299194]
[-13.50693226 -520.48272705]
[-12.30077076 -535.44720459]
[-9.58684349 -550.21289062]
[-5.39299965 -564.62829590]
[0.23772439 -578.54541016]
[7.24754858 -591.82141113]
[15.56454086 -604.32019043]
[25.10335541 -615.91339111]
[35.76610565 -626.48205566]
[47.44337845 -635.91772461]
[60.01534271 -644.12365723]
[73.35299683 -651.01550293]
[87.31945801 -656.52270508]
[101.77142334 -660.58862305]
[116.56058502 -663.17156982]
[131.53518677 -664.24505615]
[146.54156494 -663.79803467]
[161.42572021 -661.83514404]
[176.03491211 -658.37652588]
[190.21925354 -653.45758057]
[203.83316040 -647.12890625]
[216.73695374 -639.45538330]
[228.79820251 -630.51574707]
[239.89315796 -620.40173340]
[249.90794373 -609.21710205]
[258.73980713 -597.07672119]
[266.29812622 -584.10510254]
[272.50531006 -570.43536377]
[277.29769897 -556.20776367]
[280.62606812 -541.56835938]
[282.45632935 -526.66729736]
[282.76965332 -511.65756226]
[281.56283569 -496.69311523]
[278.84823608 -481.92755127]
[274.65377808 -467.51235962]
[269.02243042 -453.59548950]
[262.01202393 -440.31976318]
[253.69447327 -427.82138062]
[244.15515137 -416.22860718]
[233.49194336 -405.66043091]
[221.81425476 -396.22525024]
[209.24192810 -388.01989746]
[195.90397644 -381.12860107]
[181.93725586 -375.62203979]
[167.48512268 -371.55676270]
[152.69584656 -368.97445679]
[137.72119141 -367.90161133]
[137.27458191 -352.90826416]
[136.82798767 -337.91491699]
[136.38137817 -322.92156982]
[135.93476868 -307.92822266]
[135.48815918 -292.93487549]
[135.04156494 -277.94152832]
[137.18031311 -275.13830566]
[138.06755066 -271.15988159]
[137.16572571 -266.60574341]
[134.22534180 -262.29284668]
[133.10969543 -247.33439636]
[131.99404907 -232.37593079]
[130.87838745 -217.41748047]
[129.76274109 -202.45903015]
[128.64709473 -187.50057983]
[127.53144836 -172.54212952]
[126.41580200 -157.58366394]
[141.00831604 -143.27108765]
[140.28146362 -122.54991913]
[124.27448273 -108.91365814]
[124.05115509 -93.91531372]
[123.82782745 -78.91697693]
[123.60449982 -63.91864395]
[125.45792389 -61.81555939]
[126.58996582 -58.85159302]
[126.66854858 -55.29782867]
[125.46578217 -51.54045105]
[122.89482880 -48.04128265]
[121.77918243 -33.08282852]
[120.66353607 -18.12437630]
[119.54788208 -3.16592240]
[121.55933380 -0.26999199]
[122.26804352 3.74408031]
[121.16376495 8.25338936]
[118.03372955 12.43070316]
[116.25126648 27.32442093]
[114.46879578 42.21813965]
[120.63887787 55.77466202]
[111.31651306 68.55762482]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[103.57720184 133.22483826]
[110.92105865 143.82817078]
[109.12982178 156.19648743]
[99.70352936 163.77749634]
[97.69951630 178.64302063]
[95.69550323 193.50854492]
[101.51972198 208.21871948]
[92.15141296 219.79818726]
[94.13563538 224.62622070]
[94.07550812 229.26838684]
[92.38417053 232.97708130]
[89.71161652 235.27703857]
[87.04581451 250.03825378]
[84.38002014 264.79946899]
[81.71422577 279.56066895]
[79.04843140 294.32189941]
[80.60289764 303.32308960]
[76.23149109 309.28234863]
[73.34622192 324.00222778]
[70.46095276 338.72213745]
[84.49372101 344.13067627]
[97.37403107 351.89398193]
[108.71044159 361.77612305]
[118.15847015 373.47680664]
[125.43099213 386.64044189]
[130.30700684 400.86703491]
[132.63833618 415.72421265]
[132.35412598 430.76052856]
[129.46302795 445.51898193]
[124.05289459 459.55114746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 200]
[25 199]
[26 198]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[32 188]
[34 186]
[35 185]
[36 184]
[38 181]
[39 180]
[42 177]
[43 176]
[45 174]
[46 173]
[47 172]
[48 168]
[49 167]
[50 166]
[51 165]
[52 160]
[53 159]
[54 158]
[55 157]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
