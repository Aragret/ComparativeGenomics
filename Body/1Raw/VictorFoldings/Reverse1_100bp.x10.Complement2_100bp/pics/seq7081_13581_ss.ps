%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[62.01871490 680.76416016]
[47.95897293 686.05364990]
[33.32908249 689.46264648]
[18.37938118 690.93286133]
[3.36567950 690.43908691]
[-11.45511723 687.98980713]
[-25.82940674 683.62689209]
[-39.51122665 677.42504883]
[-52.26646423 669.49041748]
[-63.87685394 659.95867920]
[-74.14373779 648.99298096]
[-82.89142609 636.78100586]
[-89.97023773 623.53161621]
[-95.25904846 609.47161865]
[-98.66735840 594.84161377]
[-100.13684082 579.89184570]
[-99.64235687 564.87817383]
[-97.19236755 550.05743408]
[-92.82878876 535.68341064]
[-86.62629700 522.00183105]
[-78.69102478 509.24700928]
[-69.15874481 497.63705444]
[-58.19257355 487.37069702]
[-45.98015976 478.62359619]
[-32.73046494 471.54541016]
[-18.67021751 466.25726318]
[-4.04000235 462.84967041]
[10.90983772 461.38088989]
[25.92349243 461.87609863]
[28.36921883 447.07681274]
[30.81494713 432.27755737]
[25.25634956 418.45904541]
[35.14020538 406.10510254]
[37.58593369 391.30581665]
[40.03166199 376.50656128]
[42.47739029 361.70727539]
[40.47375107 357.37200928]
[41.17222595 351.73205566]
[45.22256470 346.50650024]
[48.10783768 331.78662109]
[42.96313095 317.80874634]
[53.21043015 305.75454712]
[56.09570312 291.03466797]
[42.76168060 282.47137451]
[33.71274185 269.41513062]
[30.35881615 253.84829712]
[33.24238968 238.14833069]
[41.95100021 224.72462463]
[55.17596436 215.64878845]
[70.90894318 212.33493042]
[73.57474518 197.57371521]
[76.24053955 182.81250000]
[74.33581543 175.67150879]
[79.05747223 167.85206604]
[81.94274902 153.13217163]
[84.82801819 138.41227722]
[87.71329498 123.69239044]
[90.59856415 108.97249603]
[93.04429626 94.17322540]
[95.04830933 79.30770111]
[92.89455414 73.05686951]
[94.04777527 67.49205780]
[97.33968353 64.03193665]
[99.78540802 49.23266983]
[102.23113251 34.43339920]
[104.67686462 19.63412857]
[107.12258911 4.83485699]
[109.56832123 -9.96441364]
[112.01404572 -24.76368523]
[114.45977020 -39.56295395]
[102.31703949 -30.75647545]
[87.34612274 -31.69003105]
[76.39151001 -41.93681335]
[74.46151733 -56.81213379]
[82.43849945 -69.51519012]
[96.67549896 -74.23832703]
[110.66353607 -68.82217407]
[118.00779724 -55.74111176]
[121.97988892 -70.20563507]
[125.95198822 -84.67015839]
[129.92408752 -99.13468170]
[132.03871155 -113.98487854]
[132.26203918 -128.98321533]
[132.48536682 -143.98155212]
[132.70869446 -158.97988892]
[118.09806824 -166.13975525]
[108.10824585 -178.90875244]
[104.69924164 -194.69921875]
[108.50392151 -210.33917236]
[118.71128082 -222.70944214]
[133.23863220 -229.36576843]
[133.23863220 -244.36576843]
[133.23863220 -259.36578369]
[133.23863220 -274.36578369]
[125.50132751 -288.16595459]
[133.23863220 -300.89321899]
[133.23863220 -315.89321899]
[118.98596191 -321.05435181]
[107.36003113 -330.78128052]
[99.76472473 -343.89947510]
[97.11722565 -358.82485962]
[99.73722076 -373.75506592]
[107.30833435 -386.88723755]
[118.91631317 -396.63562012]
[133.15945435 -401.82299805]
[148.31781006 -401.82299805]
[162.56094360 -396.63562012]
[174.16893005 -386.88723755]
[181.74003601 -373.75506592]
[184.36003113 -358.82485962]
[181.71252441 -343.89947510]
[174.11723328 -330.78128052]
[162.49130249 -321.05435181]
[148.23863220 -315.89321899]
[148.23863220 -300.89321899]
[155.97592163 -288.16595459]
[148.23863220 -274.36578369]
[148.23863220 -259.36578369]
[148.23863220 -244.36576843]
[148.23863220 -229.36576843]
[161.01898193 -223.96846008]
[170.80778503 -214.07647705]
[176.10366821 -201.16009521]
[176.07652283 -187.15689087]
[170.69741821 -174.18110657]
[160.74800110 -164.20448303]
[147.70703125 -158.75656128]
[147.48370361 -143.75822449]
[147.26037598 -128.75988770]
[147.03704834 -113.76155090]
[154.35263062 -126.85667419]
[165.47975159 -136.91584778]
[179.24414062 -142.87751770]
[194.19322205 -144.11253357]
[208.74935913 -140.49053955]
[221.37641907 -132.39379883]
[230.74185181 -120.67676544]
[235.85726929 -106.57596588]
[236.18286133 -91.57950592]
[231.68424988 -77.26998138]
[222.83618164 -65.15751648]
[210.57243347 -56.52036667]
[196.18721008 -52.27003479]
[181.19862366 -52.85506439]
[167.18844604 -58.21371841]
[155.63522339 -67.78048706]
[147.75819397 -80.54576111]
[144.38861084 -95.16259003]
[140.41650391 -80.69806671]
[136.44441223 -66.23353577]
[132.47232056 -51.76901627]
[129.25904846 -37.11722946]
[126.81331635 -22.31795692]
[124.36759186 -7.51868629]
[121.92185974 7.28058434]
[119.47613525 22.07985497]
[117.03040314 36.87912750]
[114.58467865 51.67839813]
[112.13895416 66.47766876]
[109.91383362 81.31171417]
[107.90982056 96.17723846]
[109.54565430 98.74892426]
[110.28191376 101.97265625]
[109.87528229 105.51639557]
[108.20853424 108.96287537]
[105.31845856 111.85777283]
[102.43318176 126.57765961]
[99.54791260 141.29754639]
[96.66263580 156.01744080]
[93.77736664 170.73733521]
[91.00175476 185.47830200]
[88.33596039 200.23951721]
[85.67016602 215.00073242]
[97.87050629 222.34938049]
[106.81091309 233.39793396]
[111.43330383 246.80638123]
[111.20170593 260.95745850]
[106.16432953 274.15167236]
[96.94531250 284.81137085]
[84.66748047 291.66946411]
[70.81559753 293.91992188]
[67.93032074 308.63983154]
[72.86865234 323.67056274]
[62.82772827 334.67190552]
[59.94245529 349.39178467]
[57.27666092 364.15301514]
[54.83093262 378.95227051]
[52.38520432 393.75155640]
[49.93947601 408.55081177]
[55.32313919 423.42785645]
[45.61421585 434.72326660]
[43.16849136 449.52255249]
[40.72276306 464.32180786]
[55.09746933 468.68334961]
[68.77987671 474.88388062]
[81.53586578 482.81732178]
[93.14717102 492.34796143]
[103.41509247 503.31265259]
[112.16394806 515.52380371]
[119.24401855 528.77252197]
[124.53417206 542.83197021]
[127.94387054 557.46173096]
[129.41477966 572.41137695]
[128.92172241 587.42504883]
[126.47314453 602.24597168]
[122.11093903 616.62048340]
[115.90974426 630.30261230]
[107.97568512 643.05822754]
[98.44451141 654.66906738]
[87.47931671 664.93646240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 193]
[30 192]
[31 191]
[33 189]
[34 188]
[35 187]
[36 186]
[39 185]
[40 184]
[42 182]
[43 181]
[50 173]
[51 172]
[52 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 161]
[60 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 130]
[83 129]
[84 128]
[85 127]
[91 120]
[92 119]
[93 118]
[94 117]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
