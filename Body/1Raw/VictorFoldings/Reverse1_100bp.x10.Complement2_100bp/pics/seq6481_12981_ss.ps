%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[286.15182495 539.05157471]
[298.51031494 530.46875000]
[292.43646240 516.75347900]
[286.36264038 503.03820801]
[280.28881836 489.32293701]
[274.21496582 475.60766602]
[268.14114380 461.89242554]
[255.91297913 453.38821411]
[257.39959717 437.63702393]
[251.32574463 423.92175293]
[245.25192261 410.20648193]
[239.17808533 396.49121094]
[232.69859314 382.96286011]
[225.81916809 369.63345337]
[218.93975830 356.30401611]
[211.96130371 343.02615356]
[204.88420105 329.80062866]
[197.80709839 316.57510376]
[190.63172913 303.40261841]
[183.35850525 290.28393555]
[180.70407104 289.38272095]
[178.24668884 287.37579346]
[176.40930176 284.33285522]
[175.58180237 280.47543335]
[176.06944275 276.16076660]
[169.58995056 262.63241577]
[163.11044312 249.10408020]
[156.63095093 235.57574463]
[150.15145874 222.04739380]
[135.33781433 224.07640076]
[120.60236359 221.42373657]
[107.39042664 214.33679199]
[97.00183868 203.49850464]
[90.46307373 189.96162415]
[88.42581940 175.04638672]
[91.10205841 160.21176147]
[98.24208832 146.91279602]
[109.15774536 136.45783997]
[102.67824554 122.92949677]
[96.19875336 109.40115356]
[90.15337372 104.06955719]
[89.72517395 95.62281036]
[83.44781494 81.99949646]
[77.01428223 75.51509094]
[77.18009186 68.12629700]
[71.10626221 54.41103363]
[65.03242493 40.69576645]
[58.85665894 27.02609444]
[52.57929993 13.40277863]
[49.61068726 28.10609055]
[39.76247787 39.42036438]
[25.60897064 44.38807678]
[10.84985256 41.71067810]
[-0.65687430 32.08803558]
[-5.90337992 18.03548431]
[-3.51824045 3.22632885]
[5.87507439 -8.46835518]
[19.82117462 -13.99160480]
[34.67458344 -11.89965534]
[46.55211258 -2.74004173]
[42.36510468 -17.14382362]
[28.78044128 -29.57517433]
[33.62563705 -46.44203568]
[29.22463989 -60.78188324]
[24.82364082 -75.12172699]
[13.81525612 -81.84320831]
[10.44487000 -93.87750244]
[15.99409199 -104.62611389]
[11.80708027 -119.02989960]
[0.52522296 -130.12179565]
[4.40236664 -144.50292969]
[0.21535550 -158.90670776]
[-3.97165561 -173.31050110]
[-8.15866661 -187.71427917]
[-12.34567833 -202.11805725]
[-16.53269005 -216.52185059]
[-20.71969986 -230.92562866]
[-24.48895645 -234.53669739]
[-26.31369400 -238.80560303]
[-26.26895332 -242.88151550]
[-24.75659943 -246.06665039]
[-28.29627228 -260.64303589]
[-31.83594513 -275.21942139]
[-35.37561798 -289.79577637]
[-50.43886566 -289.58071899]
[-65.17219543 -292.72348022]
[-78.83657837 -299.06637573]
[-90.74662781 -308.29125977]
[-100.30493164 -319.93542480]
[-107.03205109 -333.41479492]
[-110.59056091 -348.05325317]
[-110.80196381 -363.11654663]
[-107.65564728 -377.84912109]
[-101.30944824 -391.51196289]
[-92.08168030 -403.41979980]
[-80.43519592 -412.97528076]
[-66.95419312 -419.69912720]
[-52.31486130 -423.25408936]
[-37.25150681 -423.46182251]
[-22.51970673 -420.31195068]
[-8.85839462 -413.96243286]
[3.04718065 -404.73178101]
[12.59984016 -393.08297729]
[19.32042885 -379.60034180]
[22.87184143 -364.96017456]
[23.07594299 -349.89675903]
[19.92249298 -335.16571045]
[13.56967163 -321.50595093]
[4.33613062 -309.60260010]
[-7.31497860 -300.05276489]
[-20.79924202 -293.33544922]
[-17.25956917 -278.75909424]
[-13.71989632 -264.18270874]
[-10.18022442 -249.60632324]
[-6.31591845 -235.11264038]
[-2.12890744 -220.70884705]
[2.05810380 -206.30506897]
[6.24511528 -191.90129089]
[10.43212605 -177.49751282]
[14.61913776 -163.09371948]
[18.80614853 -148.68994141]
[29.78852272 -138.62829590]
[26.21086311 -123.21691132]
[30.39787292 -108.81312561]
[43.70185471 -97.36886597]
[39.16349030 -79.52272797]
[43.56448746 -65.18288422]
[47.96548462 -50.84303284]
[58.50170517 -44.90042114]
[62.28560638 -32.98967743]
[56.76888657 -21.33083534]
[60.95589447 -6.92705297]
[66.20261383 7.12541819]
[72.47997284 20.74873543]
[78.13417053 25.50812912]
[78.74769592 34.62193298]
[84.82152557 48.33719635]
[90.89536285 62.05246353]
[97.07112885 75.72213745]
[103.34848785 89.34545135]
[109.72709656 102.92166138]
[116.20658875 116.45000458]
[122.68608856 129.97834778]
[137.67433167 128.02644348]
[152.51196289 130.79905701]
[165.74818420 138.01229858]
[176.09275818 148.94869995]
[182.54174805 162.52856445]
[184.47496033 177.41661072]
[181.71553040 192.15315247]
[174.54609680 205.29731750]
[163.67979431 215.56790161]
[170.15930176 229.09623718]
[176.63879395 242.62458801]
[183.11828613 256.15292358]
[189.59777832 269.68127441]
[196.47720337 283.01071167]
[203.75042725 296.12939453]
[210.64842224 302.11734009]
[211.03262329 309.49801636]
[218.10972595 322.72354126]
[225.18684387 335.94906616]
[231.99491882 342.03903198]
[232.26919556 349.42459106]
[239.14860535 362.75402832]
[246.02801514 376.08346558]
[249.76310730 378.29776001]
[252.34011841 381.28497314]
[253.65824890 384.58618164]
[253.77615356 387.75677490]
[252.89335632 390.41738892]
[258.96719360 404.13265991]
[265.04101562 417.84790039]
[271.11483765 431.56317139]
[283.77746582 441.04837036]
[281.85641479 455.81857300]
[287.93023682 469.53384399]
[294.00405884 483.24911499]
[300.07791138 496.96438599]
[306.15173340 510.67965698]
[312.22558594 524.39489746]
[326.88681030 521.01196289]
[341.92337036 520.46508789]
[356.79162598 522.77404785]
[370.95413208 527.85534668]
[383.89892578 535.52539062]
[395.15805054 545.50677490]
[404.32449341 557.43878174]
[411.06692505 570.89001465]
[415.14157104 585.37426758]
[416.40115356 600.36791992]
[414.80014038 615.32897949]
[410.39639282 629.71661377]
[403.34912109 643.01068115]
[393.91308594 654.73065186]
[382.42935181 664.45281982]
[369.31311035 671.82580566]
[355.03845215 676.58294678]
[340.12142944 678.55242920]
[325.10125732 677.66290283]
[310.52093506 673.94665527]
[296.90750122 667.53802490]
[284.75308228 658.66857910]
[274.49710083 647.65899658]
[266.51022339 634.90728760]
[261.08123779 620.87432861]
[258.40634155 606.06756592]
[258.58227539 591.02209473]
[261.60266113 576.28186035]
[267.35830688 562.37976074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[9 174]
[10 173]
[11 172]
[12 171]
[13 166]
[14 165]
[15 164]
[16 162]
[17 161]
[18 160]
[19 158]
[20 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[38 143]
[39 142]
[40 141]
[42 140]
[43 139]
[45 138]
[46 137]
[47 136]
[48 134]
[49 133]
[60 132]
[61 131]
[63 128]
[64 127]
[65 126]
[68 124]
[69 123]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[81 114]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
