%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[58.56472397 447.55346680]
[43.58531189 452.04248047]
[29.24547577 445.80526733]
[22.31604195 431.78680420]
[26.06888008 416.60623169]
[38.73201370 407.43130493]
[39.62482834 392.45788574]
[40.40615082 377.47827148]
[41.07593536 362.49322510]
[41.74571991 347.50817871]
[33.81678009 338.37261963]
[34.25215149 325.88284302]
[43.36352158 316.75347900]
[44.25633621 301.78005981]
[45.14915085 286.80667114]
[46.04196930 271.83325195]
[33.26128006 279.68527222]
[19.10253906 274.73248291]
[14.00304031 260.62591553]
[21.72194481 247.76440430]
[36.56916428 245.62896729]
[47.59926224 255.79225159]
[49.60327911 240.92671204]
[51.60729218 226.06118774]
[53.61130524 211.19566345]
[44.12187958 222.81248474]
[30.76473999 229.63795471]
[15.79080391 230.52182007]
[1.72344053 225.31517029]
[-9.06675243 214.89538574]
[-14.76143742 201.01840210]
[-14.40095997 186.02273560]
[-8.04606724 172.43542480]
[3.23232937 162.54614258]
[17.53362274 158.02143860]
[32.44779205 159.62377930]
[45.46154022 167.08316040]
[54.38182068 179.14253235]
[57.70543671 193.77134705]
[62.53143692 179.56889343]
[61.26146698 174.96496582]
[62.87018204 169.51435852]
[67.71833801 165.01914978]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[106.87014771 52.69147491]
[107.95694733 48.17792130]
[110.42768860 44.93593597]
[113.54327393 43.28503418]
[119.41223907 29.48085976]
[125.28119659 15.67668152]
[131.15016174 1.87250507]
[137.01911926 -11.93167210]
[142.88807678 -25.73584938]
[148.75703430 -39.54002380]
[154.62600708 -53.34420395]
[160.49496460 -67.14837646]
[160.07334900 -73.74639130]
[162.65901184 -78.80716705]
[166.74966431 -81.27204895]
[173.02702332 -94.89536285]
[179.30438232 -108.51867676]
[185.58174133 -122.14199066]
[172.20060730 -115.36368561]
[157.26856995 -116.78985596]
[145.41244507 -125.97857666]
[140.30603027 -140.08262634]
[143.53155518 -154.73171997]
[154.08958435 -165.38667297]
[168.70860291 -168.74592590]
[182.85871887 -163.76858521]
[192.15539551 -151.99693298]
[193.71789551 -137.07827759]
[201.75906372 -149.74081421]
[209.80024719 -162.40333557]
[210.14965820 -180.81417847]
[226.00923157 -188.32691956]
[233.86097717 -201.10775757]
[234.49206543 -216.91638184]
[247.74678040 -223.71063232]
[255.59854126 -236.49147034]
[263.45028687 -249.27232361]
[271.30203247 -262.05316162]
[271.93313599 -277.86178589]
[285.18783569 -284.65603638]
[293.03961182 -297.43688965]
[300.89135742 -310.21771240]
[288.94540405 -319.31018066]
[277.96414185 -329.54690552]
[268.05670166 -340.82614136]
[259.32156372 -353.03579712]
[251.84555054 -366.05456543]
[245.70294189 -379.75299072]
[240.95481873 -393.99496460]
[237.64833069 -408.63891602]
[235.81637573 -423.53933716]
[235.47714233 -438.54812622]
[236.63400269 -453.51611328]
[239.27546692 -468.29452515]
[243.37527466 -482.73648071]
[248.89268494 -496.69845581]
[255.77285767 -510.04168701]
[263.94741821 -522.63354492]
[273.33511353 -534.34893799]
[283.84265137 -545.07135010]
[295.36560059 -554.69421387]
[307.78942871 -563.12200928]
[320.99066162 -570.27087402]
[334.83810425 -576.06976318]
[349.19412231 -580.46099854]
[363.91601562 -583.40106201]
[378.85751343 -584.86065674]
[393.87008667 -584.82531738]
[408.80453491 -583.29534912]
[423.51245117 -580.28594971]
[437.84759521 -575.82702637]
[451.66757202 -569.96295166]
[464.83496094 -562.75201416]
[477.21893311 -554.26580811]
[488.69641113 -544.58868408]
[499.15332031 -533.81689453]
[508.48568726 -522.05743408]
[516.60083008 -509.42715454]
[523.41809082 -496.05166626]
[528.86962891 -482.06384277]
[532.90130615 -467.60272217]
[535.47314453 -452.81204224]
[536.55944824 -437.83877563]
[536.14947510 -422.83175659]
[534.24737549 -407.94012451]
[530.87188721 -393.31192017]
[526.05670166 -379.09246826]
[519.84960938 -365.42312622]
[512.31237793 -352.43975830]
[503.51977539 -340.27139282]
[493.55929565 -329.03894043]
[482.52993774 -318.85409546]
[470.54125977 -309.81802368]
[457.71246338 -302.02056885]
[444.17102051 -295.53921509]
[430.05151367 -290.43835449]
[415.49432373 -286.76873779]
[400.64404297 -284.56680298]
[385.64834595 -283.85443115]
[370.65625000 -284.63870239]
[355.81671143 -286.91183472]
[341.27728271 -290.65124512]
[327.18240356 -295.81973267]
[313.67221069 -302.36596680]
[305.82043457 -289.58511353]
[297.96868896 -276.80429077]
[297.89920044 -261.90985107]
[284.08288574 -254.20140076]
[276.23114014 -241.42056274]
[268.37936401 -228.63972473]
[260.52761841 -215.85887146]
[260.45812988 -200.96443176]
[246.64181519 -193.25601196]
[238.79006958 -180.47515869]
[241.29489136 -168.64079285]
[234.85806274 -157.92860413]
[222.46276855 -154.36215210]
[214.42160034 -141.69963074]
[206.38041687 -129.03710938]
[199.20504761 -115.86463165]
[192.92768860 -102.24131775]
[186.65032959 -88.61800385]
[180.37297058 -74.99468231]
[174.29913330 -61.27941895]
[168.43017578 -47.47524261]
[162.56121826 -33.67106628]
[156.69226074 -19.86688805]
[150.82330322 -6.06271076]
[144.95433044 7.74146605]
[139.08537292 21.54564285]
[133.21641541 35.34981918]
[127.34745026 49.15399551]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[81.77080536 170.26586914]
[76.73389435 184.39489746]
[71.90789795 198.59735107]
[68.47682953 213.19967651]
[66.47281647 228.06520081]
[64.46880341 242.93072510]
[62.46479034 257.79626465]
[61.01537323 272.72607422]
[60.12255859 287.69946289]
[59.22974014 302.67288208]
[58.33692551 317.64627075]
[66.95841980 333.91748047]
[56.73076248 348.17797852]
[56.06097412 363.16299438]
[55.39118958 378.14804077]
[58.13428879 386.86087036]
[54.59823608 393.35070801]
[53.70541763 408.32412720]
[65.18856049 418.93881226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 206]
[9 205]
[10 204]
[13 202]
[14 201]
[15 200]
[16 199]
[22 198]
[23 197]
[24 196]
[25 195]
[39 194]
[40 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[49 186]
[50 185]
[51 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[66 174]
[67 173]
[68 172]
[69 171]
[79 170]
[80 169]
[81 168]
[83 165]
[84 164]
[86 162]
[87 161]
[88 160]
[89 159]
[91 157]
[92 156]
[93 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
