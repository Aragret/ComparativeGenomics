%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[99.55236816 575.68493652]
[85.03535461 579.63092041]
[70.04042816 580.84204102]
[55.07830429 579.27691650]
[40.65858841 574.98901367]
[27.27240944 568.12426758]
[15.37569809 558.91650391]
[5.37365103 547.67932129]
[-2.39306521 534.79553223]
[-7.65991974 520.70385742]
[-10.24752522 505.88430786]
[-10.06774902 490.84161377]
[-7.12671375 476.08813477]
[-1.52459025 462.12637329]
[6.54781485 449.43185425]
[16.81555939 438.43695068]
[28.92892647 429.51611328]
[42.47534180 422.97323608]
[56.99341583 419.03115845]
[71.98867035 417.82409668]
[73.54919434 402.90548706]
[75.10971832 387.98687744]
[76.67024231 373.06826782]
[78.23075867 358.14965820]
[79.79128265 343.23107910]
[81.35180664 328.31246948]
[82.80122375 313.38265991]
[84.13945770 298.44247437]
[77.56848907 285.07565308]
[86.50612640 272.02081299]
[87.84436035 257.08062744]
[88.40256500 242.09101868]
[88.17923737 227.09268188]
[87.95590973 212.09434509]
[86.04069519 210.04736328]
[84.82090759 207.11842346]
[84.63655090 203.56857300]
[85.72691345 199.77705383]
[88.19253540 196.20288086]
[88.86232758 181.21784973]
[81.70104218 168.15777588]
[90.04683685 154.71685791]
[90.71662140 139.73182678]
[91.38640594 124.74678802]
[92.05619049 109.76174927]
[92.39116669 94.76548767]
[92.39116669 79.76548767]
[92.39116669 64.76548767]
[85.55960846 78.11950684]
[75.28440857 89.04746246]
[62.37590790 96.68753052]
[47.85213089 100.43719482]
[32.85848236 100.00072479]
[18.57742500 95.41254425]
[6.13521814 87.03450775]
[-3.48689079 75.52733612]
[-9.53006268 61.79853439]
[-11.51770878 46.93080902]
[-9.29307270 32.09669113]
[-3.03160095 18.46606636]
[6.77290201 7.11389828]
[19.34721184 -1.06453240]
[33.69966507 -5.42424107]
[48.69837189 -5.62140179]
[63.16046524 -1.64046693]
[75.94540405 6.20461130]
[86.04492188 17.29513741]
[92.66252136 30.75646400]
[95.27643585 45.53044510]
[99.67743683 31.19059944]
[104.07843781 16.85075188]
[108.47943115 2.51090503]
[97.23878479 -6.23545933]
[89.67463684 -18.26811790]
[86.67833710 -32.13084793]
[88.58988190 -46.15414429]
[95.15945435 -58.65626526]
[105.57984924 -68.14493561]
[118.58563995 -73.49543762]
[132.60679626 -74.08392334]
[137.22080994 -88.35665894]
[141.83482361 -102.62939453]
[146.44883728 -116.90212250]
[151.06283569 -131.17486572]
[155.67684937 -145.44758606]
[158.89012146 -160.09938049]
[160.67259216 -174.99310303]
[162.45504761 -189.88681030]
[160.39916992 -194.68476868]
[160.39018250 -199.32731628]
[162.02610779 -203.06079102]
[164.66412354 -205.40026855]
[159.28045654 -220.27732849]
[168.98937988 -231.57272339]
[171.43510437 -246.37199402]
[173.88084412 -261.17126465]
[176.32656860 -275.97055054]
[178.77229309 -290.76980591]
[164.86872864 -296.58251953]
[152.68080139 -305.44543457]
[142.86578369 -316.88055420]
[135.95298767 -330.27120972]
[132.31520081 -344.89529419]
[132.14863586 -359.96411133]
[135.46224976 -374.66500854]
[142.07734680 -388.20520020]
[151.63719177 -399.85452271]
[163.62622070 -408.98468018]
[177.39788818 -415.10330200]
[192.20951843 -417.88046265]
[207.26231384 -417.16635132]
[221.74450684 -412.99951172]
[234.87510681 -405.60461426]
[245.94596863 -395.38049316]
[254.36007690 -382.87854004]
[259.66366577 -368.77288818]
[261.57070923 -353.82431030]
[259.97836304 -338.83895874]
[254.97250366 -324.62493896]
[246.82310486 -311.94882202]
[235.96963501 -301.49420166]
[222.99742126 -293.82492065]
[208.60601807 -289.35449219]
[193.57156372 -288.32409668]
[191.12583923 -273.52481079]
[188.68011475 -258.72555542]
[186.23439026 -243.92626953]
[183.78865051 -229.12699890]
[189.34725952 -215.30848694]
[179.46339417 -202.95454407]
[177.34877014 -188.10435486]
[175.56629944 -173.21063232]
[173.78384399 -158.31690979]
[183.09925842 -170.07374573]
[196.35328674 -177.09730530]
[211.31240845 -178.20402527]
[225.45573425 -173.20738220]
[236.39987183 -162.94941711]
[242.30052185 -149.15875244]
[242.16336060 -134.15939331]
[236.01145935 -120.47895813]
[224.88154602 -110.42285919]
[210.64921570 -105.68572235]
[195.71282959 -107.06584167]
[182.58946228 -114.33064270]
[173.49063110 -126.25587463]
[169.94958496 -140.83358765]
[165.33557129 -126.56085205]
[160.72155762 -112.28811646]
[156.10755920 -98.01538086]
[151.49354553 -83.74265289]
[146.87953186 -69.46991730]
[159.10150146 -59.38280869]
[166.53483582 -45.34377289]
[168.01516724 -29.48869324]
[163.28637695 -14.24263000]
[153.04432678 -1.94889760]
[138.83457947 5.49109697]
[122.81928253 6.91190290]
[118.41828156 21.25175095]
[114.01728058 35.59159851]
[109.61628723 49.93144608]
[107.39116669 64.76548767]
[107.39116669 79.76548767]
[107.39116669 94.76548767]
[109.70411682 97.85136414]
[110.64563751 101.94177246]
[109.79757690 106.40134430]
[107.04122925 110.43153381]
[106.37144470 125.41657257]
[105.70166016 140.40161133]
[105.03187561 155.38664246]
[112.14524841 169.51853943]
[103.84736633 181.88763428]
[103.17757416 196.87268066]
[102.95424652 211.87101746]
[103.17757416 226.86935425]
[103.40090179 241.86769104]
[113.78525543 231.04339600]
[128.68376160 229.30145264]
[141.28504944 237.43827820]
[145.82795715 251.73379517]
[140.23553467 265.65231323]
[127.06457520 272.83044434]
[112.33664703 269.98648071]
[102.78453827 258.41885376]
[101.44630432 273.35903931]
[107.92156219 287.79446411]
[99.07964325 299.78070068]
[97.74140930 314.72088623]
[100.09272766 323.54751587]
[96.27040863 329.87298584]
[94.70989227 344.79159546]
[93.14936829 359.71020508]
[91.58884430 374.62881470]
[90.02832031 389.54739380]
[88.46779633 404.46600342]
[86.90727234 419.38461304]
[101.32814789 423.66867065]
[114.71617126 430.52981567]
[126.61536407 439.73437500]
[136.62043762 450.96884155]
[144.39062500 463.85055542]
[149.66128540 477.94079590]
[152.25288391 492.75964355]
[152.07716370 507.80236816]
[149.14010620 522.55664062]
[143.54174805 536.51989746]
[135.47276306 549.21661377]
[125.20797729 560.21429443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[27 190]
[28 189]
[30 187]
[31 186]
[32 178]
[33 177]
[34 176]
[39 175]
[40 174]
[42 172]
[43 171]
[44 170]
[45 169]
[46 165]
[47 164]
[48 163]
[69 162]
[70 161]
[71 160]
[72 159]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 133]
[87 132]
[88 131]
[92 130]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
