%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[203.43849182 834.22125244]
[189.13914490 829.68145752]
[175.06472778 824.48614502]
[161.24526978 818.64636230]
[147.71025085 812.17456055]
[134.48857117 805.08459473]
[121.60842896 797.39160156]
[109.09732819 789.11193848]
[96.98196411 780.26324463]
[85.28818512 770.86456299]
[74.04094696 760.93579102]
[63.26426315 750.49816895]
[52.98112106 739.57397461]
[43.21346664 728.18658447]
[33.98214722 716.36016846]
[25.30685997 704.12005615]
[17.20612144 691.49237061]
[9.69721794 678.50402832]
[2.79617476 665.18280029]
[-3.48228216 651.55700684]
[-9.12475395 637.65582275]
[-14.11919880 623.50885010]
[-18.45495987 609.14636230]
[-22.12278175 594.59893799]
[-25.11483765 579.89764404]
[-27.42474556 565.07385254]
[-29.04757118 550.15917969]
[-29.97985649 535.18548584]
[-30.21960640 520.18469238]
[-29.76631355 505.18887329]
[-28.62094307 490.22994995]
[-26.78594208 475.33993530]
[-24.26522255 460.55050659]
[-21.06416512 445.89331055]
[-17.18960381 431.39956665]
[-12.64980412 417.10025024]
[-7.45445490 403.02581787]
[-1.61464369 389.20639038]
[4.85716724 375.67138672]
[11.94716644 362.44970703]
[19.64022446 349.56958008]
[27.91992188 337.05850220]
[36.76858902 324.94314575]
[46.16734695 313.24938965]
[56.09613419 302.00219727]
[66.53376007 291.22552490]
[77.45795441 280.94238281]
[88.84540558 271.17477417]
[100.67181396 261.94348145]
[112.91192627 253.26820374]
[125.53963470 245.16749573]
[138.52799988 237.65861511]
[151.84927368 230.75759888]
[145.57191467 217.13429260]
[133.21849060 208.81309509]
[134.47042847 193.04150391]
[128.19306946 179.41818237]
[121.91570282 165.79487610]
[115.63834381 152.17155457]
[109.36098480 138.54823303]
[103.08362579 124.92492676]
[96.80626678 111.30160522]
[95.02311707 126.19524384]
[87.40642548 139.11755371]
[75.23973083 147.89088440]
[60.57332993 151.03680420]
[45.87877655 148.02514648]
[33.63235855 139.36343384]
[25.89780998 126.51132202]
[23.97854233 111.63461304]
[28.19798279 97.24029541]
[37.84508133 85.75406647]
[51.29413605 79.11155701]
[66.27873993 78.43214417]
[80.27372742 83.83032227]
[90.92160797 94.39778137]
[87.38193512 79.82141113]
[83.84226227 65.24503326]
[80.30259705 50.66865921]
[76.76292419 36.09228516]
[73.22325134 21.51590729]
[68.15714264 13.91509533]
[69.74110413 6.69617271]
[66.41884613 -7.93128777]
[63.09658432 -22.55874825]
[48.02744675 -22.69247055]
[33.39548874 -26.29835892]
[19.98978233 -33.18194580]
[8.53328800 -42.97201538]
[-0.35616326 -55.14059830]
[-6.19917297 -69.03145599]
[-8.68063545 -83.89547729]
[-7.66672945 -98.93106079]
[-3.21213245 -113.32735443]
[4.44292450 -126.30798340]
[14.88561344 -137.17292786]
[27.55277443 -145.33624268]
[41.76128006 -150.35769653]
[56.74488831 -151.96649170]
[71.69554901 -150.07586670]
[85.80699158 -144.78778076]
[98.31820679 -136.38740540]
[108.55447388 -125.32778168]
[115.96377563 -112.20531464]
[120.14652252 -97.72769928]
[120.87715912 -82.67569733]
[118.11627197 -67.86103058]
[112.01275635 -54.08264923]
[102.89577484 -42.08359909]
[91.25698090 -32.51097107]
[77.72404480 -25.88100815]
[81.04630280 -11.25354671]
[84.36856079 3.37391305]
[87.79962158 17.97623634]
[91.33929443 32.55261230]
[94.87896729 47.12898636]
[98.41864014 61.70536041]
[101.95831299 76.28173828]
[105.49798584 90.85811615]
[110.42958069 105.02424622]
[116.70693970 118.64756012]
[122.98429871 132.27087402]
[129.26165771 145.89419556]
[135.53901672 159.51751709]
[141.81637573 173.14082336]
[148.09375000 186.76414490]
[160.89616394 196.05976868]
[159.19523621 210.85693359]
[165.47259521 224.48023987]
[179.37374878 218.83769226]
[193.52066040 213.84315491]
[207.88314819 209.50730896]
[222.43055725 205.83938599]
[237.13183594 202.84724426]
[251.95562744 200.53724670]
[266.87026978 198.91432190]
[281.84396362 197.98194885]
[296.84472656 197.74211121]
[311.84057617 198.19529724]
[326.79946899 199.34057617]
[341.68954468 201.17549133]
[356.47894287 203.69612122]
[371.13619995 206.89707947]
[385.62994385 210.77156067]
[399.92929077 215.31126404]
[414.00375366 220.50653076]
[427.82324219 226.34625244]
[441.35827637 232.81797791]
[454.57998657 239.90789795]
[467.46014404 247.60087585]
[479.97128296 255.88049316]
[492.08670044 264.72909546]
[503.78051758 274.12777710]
[515.02777100 284.05648804]
[525.80450439 294.49404907]
[536.08770752 305.41818237]
[545.85540771 316.80557251]
[555.08679199 328.63192749]
[563.76208496 340.87197876]
[571.86291504 353.49963379]
[579.37188721 366.48794556]
[586.27294922 379.80920410]
[592.55145264 393.43493652]
[598.19403076 407.33609009]
[603.18847656 421.48303223]
[607.52435303 435.84552002]
[611.19219971 450.39294434]
[614.18432617 465.09423828]
[616.49426270 479.91802979]
[618.11718750 494.83267212]
[619.04949951 509.80636597]
[619.28936768 524.80712891]
[618.83612061 539.80297852]
[617.69079590 554.76190186]
[615.85583496 569.65191650]
[613.33520508 584.44134521]
[610.13421631 599.09857178]
[606.25970459 613.59234619]
[601.71997070 627.89166260]
[596.52465820 641.96612549]
[590.68493652 655.78558350]
[584.21313477 669.32061768]
[577.12322998 682.54229736]
[569.43023682 695.42242432]
[561.15057373 707.93359375]
[552.30194092 720.04895020]
[542.90325928 731.74273682]
[532.97448730 742.98999023]
[522.53692627 753.76672363]
[511.61276245 764.04986572]
[500.22534180 773.81756592]
[488.39898682 783.04888916]
[476.15890503 791.72424316]
[463.53121948 799.82495117]
[450.54290771 807.33392334]
[437.22164917 814.23498535]
[423.59588623 820.51348877]
[409.69470215 826.15594482]
[395.54779053 831.15045166]
[381.18527222 835.48620605]
[366.63784790 839.15405273]
[351.93655396 842.14617920]
[337.11276245 844.45611572]
[322.19812012 846.07897949]
[307.22442627 847.01129150]
[292.22366333 847.25103760]
[277.22781372 846.79779053]
[262.26892090 845.65246582]
[247.37886047 843.81750488]
[232.58944702 841.29681396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 129]
[54 128]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
