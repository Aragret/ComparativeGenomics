%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[13.44924831 536.11755371]
[8.77141762 550.38763428]
[2.46853018 564.01812744]
[-5.37417364 576.82470703]
[-14.65063000 588.63415527]
[-25.23538589 599.28686523]
[-36.98529434 608.63861084]
[-49.74145126 616.56311035]
[-63.33134460 622.95300293]
[-77.57118988 627.72204590]
[-92.26840210 630.80560303]
[-107.22422028 632.16204834]
[-122.23638916 631.77307129]
[-137.10188293 629.64379883]
[-151.61965942 625.80316162]
[-165.59338379 620.30303955]
[-178.83409119 613.21777344]
[-191.16268921 604.64331055]
[-202.41247559 594.69549561]
[-212.43128967 583.50891113]
[-221.08364868 571.23480225]
[-228.25253296 558.03924561]
[-233.84098816 544.10058594]
[-237.77345276 529.60742188]
[-239.99673462 514.75567627]
[-240.48077393 499.74627686]
[-239.21900940 484.78216553]
[-236.22851562 470.06573486]
[-231.54972839 455.79598999]
[-225.24592590 442.16592407]
[-217.40237427 429.35986328]
[-208.12512207 417.55099487]
[-197.53965759 406.89904785]
[-185.78912354 397.54803467]
[-173.03244019 389.62442017]
[-159.44212341 383.23538208]
[-145.20196533 378.46734619]
[-130.50454712 375.38473511]
[-115.54862976 374.02929688]
[-100.53649139 374.41931152]
[-85.67114258 376.54953003]
[-71.15361786 380.39117432]
[-57.18025589 385.89221191]
[-50.10315323 372.66668701]
[-43.02604675 359.44116211]
[-35.94894028 346.21563721]
[-28.87183571 332.99011230]
[-21.79472923 319.76458740]
[-14.71762466 306.53906250]
[-7.83821201 293.20962524]
[-1.15801740 279.77926636]
[-0.99373937 272.39041138]
[5.72292089 266.19976807]
[12.60233307 252.87033081]
[19.48174667 239.54090881]
[26.36115837 226.21147156]
[17.30461884 214.36054993]
[14.27917767 199.69235229]
[17.93737411 185.10540771]
[27.60557747 173.50601196]
[41.40730286 167.22912598]
[56.62723160 167.56846619]
[63.50664139 154.23904419]
[62.46813202 139.38067627]
[75.67285919 130.66598511]
[82.55226898 117.33656311]
[89.43168640 104.00713348]
[75.47814178 109.51155090]
[60.92567825 105.87481689]
[51.20200729 94.45333862]
[49.93381119 79.50704193]
[57.59410477 66.61053467]
[71.32577515 60.57388687]
[86.00726318 63.64862442]
[96.16272736 74.68794250]
[98.00421143 89.57559967]
[106.41883087 77.15810394]
[107.75518799 61.39344025]
[121.30005646 55.19781113]
[129.71467590 42.78031540]
[138.12928772 30.36281967]
[136.46630859 17.57230377]
[143.73049927 7.40297556]
[155.58383179 4.98943520]
[164.18240356 -7.30140305]
[172.78096008 -19.59224129]
[181.37953186 -31.88307953]
[189.97808838 -44.17391586]
[190.42912292 -49.37426758]
[192.61157227 -53.47185135]
[195.81546021 -55.99181366]
[199.24519348 -56.80990601]
[208.38398743 -68.70453644]
[217.52279663 -80.59917450]
[226.66159058 -92.49380493]
[235.44219971 -104.65525818]
[243.85682678 -117.07275391]
[252.27143860 -129.49024963]
[260.68606567 -141.90774536]
[249.31575012 -151.71755981]
[239.16119385 -162.78108215]
[230.35972595 -174.94869995]
[223.03038025 -188.05583191]
[217.27226257 -201.92526245]
[213.16326904 -216.36936951]
[210.75895691 -231.19287109]
[210.09182739 -246.19525146]
[211.17092896 -261.17364502]
[213.98164368 -275.92544556]
[218.48597717 -290.25122070]
[224.62301636 -303.95718384]
[232.30973816 -316.85797119]
[241.44221497 -328.77914429]
[251.89694214 -339.55947876]
[263.53250122 -349.05316162]
[276.19155884 -357.13183594]
[289.70291138 -363.68618774]
[303.88385010 -368.62762451]
[318.54257202 -371.88931274]
[333.48083496 -373.42715454]
[348.49661255 -373.22030640]
[363.38684082 -371.27160645]
[377.95016479 -367.60739136]
[391.98959351 -362.27722168]
[405.31530762 -355.35317993]
[417.74703979 -346.92892456]
[429.11669922 -337.11834717]
[439.27050781 -326.05413818]
[448.07116699 -313.88595581]
[455.39962769 -300.77832031]
[461.15682983 -286.90850830]
[465.26486206 -272.46411133]
[467.66818237 -257.64047241]
[468.33428955 -242.63803101]
[467.25421143 -227.65972900]
[464.44250488 -212.90808105]
[459.93719482 -198.58262634]
[453.79925537 -184.87707520]
[446.11166382 -171.97677612]
[436.97839355 -160.05621338]
[426.52294922 -149.27659607]
[414.88674927 -139.78367615]
[402.22714233 -131.70587158]
[388.71536255 -125.15240479]
[374.53411865 -120.21191406]
[359.87518311 -116.95120239]
[344.93679810 -115.41437531]
[329.92105103 -115.62221527]
[315.03094482 -117.57191467]
[300.46786499 -121.23709869]
[286.42877197 -126.56819916]
[273.10354614 -133.49313354]
[264.68893433 -121.07563019]
[256.27432251 -108.65814209]
[247.85969543 -96.24064636]
[248.25559998 -93.46550751]
[247.57609558 -90.36633301]
[245.69226074 -87.35194397]
[242.62538147 -84.87024689]
[238.55622864 -83.35500336]
[229.41743469 -71.46037292]
[220.27862549 -59.56573868]
[211.13981628 -47.67110443]
[202.26892090 -35.57535172]
[193.67036438 -23.28451538]
[185.07180786 -10.99367714]
[176.47323608 1.29716098]
[167.87467957 13.58799934]
[167.29669189 31.12746429]
[150.54678345 38.77743912]
[142.13217163 51.19493484]
[133.71754456 63.61243057]
[132.98306274 78.48891449]
[118.83632660 85.57272339]
[110.42170715 97.99021912]
[102.76111603 110.88654327]
[95.88169861 124.21597290]
[89.00228882 137.54541016]
[89.54873657 153.35717773]
[76.83607483 161.11845398]
[69.95665741 174.44787598]
[79.05049133 186.65704346]
[81.92984009 201.54315186]
[78.07617950 216.14347839]
[68.30565643 227.57579041]
[54.59692001 233.60736084]
[39.69058609 233.09089661]
[32.81117630 246.42031860]
[25.93176270 259.74975586]
[19.05235100 273.07916260]
[12.27235889 286.45944214]
[5.59216404 299.88983154]
[5.62030411 306.50125122]
[2.73801136 311.39913940]
[-1.49209702 313.61618042]
[-8.56920242 326.84170532]
[-15.64630795 340.06723022]
[-22.72341347 353.29275513]
[-29.80051804 366.51828003]
[-36.87762451 379.74380493]
[-43.95473099 392.96932983]
[-31.62555313 401.54299927]
[-20.37510872 411.49008179]
[-10.35554600 422.67599487]
[-1.70236993 434.94949341]
[5.46739626 448.14462280]
[11.05679035 462.08288574]
[14.99022007 476.57580566]
[17.21449280 491.42736816]
[17.69952583 506.43673706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 201]
[44 200]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 192]
[51 191]
[53 190]
[54 189]
[55 188]
[56 187]
[62 181]
[63 180]
[65 178]
[66 177]
[67 176]
[76 175]
[77 174]
[79 172]
[80 171]
[81 170]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 155]
[97 154]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
