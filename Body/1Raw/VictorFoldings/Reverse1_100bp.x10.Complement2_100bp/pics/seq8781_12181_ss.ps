%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[141.59790039 433.60302734]
[154.59103394 425.87838745]
[144.06889343 415.33639526]
[148.33113098 400.10012817]
[144.79145813 385.52374268]
[141.25178528 370.94735718]
[137.71211243 356.37100220]
[134.17243958 341.79461670]
[130.63276672 327.21823120]
[127.09310150 312.64187622]
[122.45996094 306.88375854]
[123.61095428 297.82214355]
[120.28869629 283.19467163]
[116.96643066 268.56719971]
[114.66907501 266.96087646]
[112.86957550 264.34777832]
[111.95459747 260.91290283]
[112.23674011 256.97781372]
[113.90934753 252.97077942]
[111.46362305 238.17150879]
[109.01789856 223.37223816]
[106.57216644 208.57296753]
[103.28026581 205.11285400]
[102.12703705 199.54804993]
[104.28079224 193.29721069]
[94.91248322 181.71775818]
[100.73670197 167.00758362]
[91.31040955 159.42657471]
[89.51917267 147.05825806]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[86.33817291 31.54392242]
[83.71540833 28.08341789]
[82.45683289 24.34436607]
[82.48249817 20.78982735]
[83.57028198 17.80933380]
[85.39218903 15.67888927]
[84.94558716 0.68553919]
[84.49897766 -14.30781078]
[84.05236816 -29.30116081]
[83.49416351 -44.29077148]
[82.82437897 -59.27581024]
[82.15459442 -74.26084900]
[81.48480225 -89.24588776]
[80.81501770 -104.23092651]
[79.92220306 -119.20433044]
[78.80655670 -134.16278076]
[77.69091034 -149.12123108]
[65.99848938 -159.41322327]
[65.08014679 -174.59912109]
[74.96404266 -185.68263245]
[69.35575104 -171.77050781]
[60.92461395 -159.36422729]
[50.05419159 -149.02818298]
[37.23901367 -141.23258972]
[23.06208801 -136.33210754]
[8.16836739 -134.54966736]
[-6.76458216 -135.96635437]
[-21.05741119 -140.51773071]
[-34.05989075 -147.99673462]
[-45.18049622 -158.06312561]
[-53.91331100 -170.25894165]
[-59.86105347 -184.02935791]
[-62.75313950 -198.74790955]
[-62.45800018 -213.74501038]
[-58.98906326 -228.33837891]
[-52.50413513 -241.86412048]
[-43.29824829 -253.70690918]
[-31.79019737 -263.32797241]
[-18.50352859 -270.28961182]
[-4.04269648 -274.27511597]
[10.93442917 -275.10321045]
[25.74648857 -272.73614502]
[39.71963120 -267.28167725]
[52.21817398 -258.98791504]
[62.67351532 -248.23219299]
[70.61000824 -235.50379944]
[75.66659546 -221.38179016]
[77.61333466 -206.50431824]
[82.43933105 -220.70677185]
[87.26532745 -234.90922546]
[92.09132385 -249.11167908]
[96.91732025 -263.31414795]
[96.71530151 -272.44631958]
[101.92234039 -277.69119263]
[105.46201324 -292.26754761]
[107.46602631 -307.13308716]
[109.47004700 -321.99862671]
[111.47406006 -336.86413574]
[113.47807312 -351.72967529]
[115.48208618 -366.59521484]
[117.48609924 -381.46072388]
[103.61915588 -387.42819214]
[91.87715149 -396.91650391]
[83.13143921 -409.22155762]
[78.03099060 -423.43029785]
[76.95429993 -438.48831177]
[79.98126984 -453.27816772]
[86.88726807 -466.70239258]
[97.15983582 -477.76480103]
[110.03666687 -485.64450073]
[124.56222534 -489.75677490]
[139.65861511 -489.79641724]
[154.20558167 -485.76055908]
[167.12365723 -477.94863892]
[177.45420837 -466.94036865]
[184.43066406 -453.55261230]
[187.53530884 -438.77886963]
[186.53776550 -423.71542358]
[181.51205444 -409.48007202]
[172.83113098 -397.12921143]
[161.13916016 -387.57931519]
[147.30375671 -381.53909302]
[132.35162354 -379.45672607]
[130.34761047 -364.59118652]
[128.34359741 -349.72564697]
[126.33958435 -334.86013794]
[124.33557129 -319.99459839]
[122.33155823 -305.12908936]
[120.32754517 -290.26354980]
[129.60479736 -302.05050659]
[142.64875793 -309.45693970]
[157.52444458 -311.38409424]
[172.02513123 -307.54611206]
[183.99974060 -298.51232910]
[191.67187500 -285.62289429]
[193.90345764 -270.78979492]
[190.36343384 -256.21353149]
[181.57693481 -244.05632019]
[168.84739685 -236.12165833]
[154.06315613 -233.58659363]
[139.41738892 -236.82719421]
[127.08270264 -245.36273193]
[118.88886261 -257.92700195]
[116.05137634 -272.65426636]
[111.11978149 -258.48812866]
[106.29378510 -244.28567505]
[101.46778107 -230.08322144]
[96.64178467 -215.88076782]
[91.81578827 -201.67831421]
[89.92249298 -186.79827881]
[101.34117889 -177.30357361]
[102.68569183 -162.14947510]
[92.64936066 -150.23689270]
[93.76500702 -135.27842712]
[94.88066101 -120.31997681]
[97.85073853 -116.57997131]
[98.50289917 -110.93446350]
[95.80005646 -104.90071106]
[96.46984100 -89.91567230]
[97.13963318 -74.93063354]
[97.80941772 -59.94559479]
[98.47920227 -44.96055603]
[101.91823578 -38.41878128]
[99.04572296 -29.74776649]
[99.49232483 -14.75441647]
[99.93893433 0.23893325]
[100.38553619 15.23228359]
[101.27835846 30.20568848]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[123.13270569 149.15242004]
[115.60223389 165.00357056]
[125.11388397 177.64631653]
[119.14632416 191.29319763]
[121.37143707 206.12724304]
[123.81716919 220.92651367]
[126.26289368 235.72578430]
[128.70861816 250.52505493]
[131.59388733 265.24493408]
[134.91615295 279.87240601]
[138.23841858 294.49987793]
[141.66947937 309.10220337]
[145.20915222 323.67855835]
[148.74882507 338.25494385]
[152.28849792 352.83132935]
[155.82817078 367.40768433]
[159.36784363 381.98406982]
[162.90751648 396.56045532]
[173.68283081 408.14505005]
[169.16740417 422.33871460]
[184.25621033 423.24404907]
[198.40721130 428.55819702]
[210.36213684 437.80868530]
[219.05795288 450.17291260]
[223.72143555 464.55148315]
[223.93789673 479.66586304]
[219.68811035 494.17208862]
[211.34996033 506.78027344]
[199.66485596 516.36932373]
[185.67184448 522.08654785]
[170.61515808 523.42364502]
[155.83363342 520.26165771]
[142.64164734 512.88177490]
[132.21221924 501.94018555]
[125.47270203 488.40982056]
[123.02239227 473.49380493]
[125.07916260 458.51846313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[12 184]
[13 183]
[14 182]
[19 181]
[20 180]
[21 179]
[22 178]
[25 177]
[27 175]
[30 173]
[31 172]
[32 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 153]
[54 152]
[55 151]
[58 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[92 142]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
