%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.14949799 711.53460693]
[99.36944580 698.07000732]
[96.00938416 683.37402344]
[96.26464844 668.30090332]
[100.12039948 653.72705078]
[107.35247803 640.49981689]
[117.54041290 629.38812256]
[130.09188843 621.03802490]
[144.27719116 615.93505859]
[142.71667480 601.01641846]
[141.15614319 586.09783936]
[139.59562683 571.17919922]
[138.03509521 556.26062012]
[136.47457886 541.34204102]
[134.91406250 526.42340088]
[133.35353088 511.50482178]
[131.79301453 496.58621216]
[130.23248291 481.66760254]
[128.67196655 466.74899292]
[127.11144257 451.83038330]
[112.59857178 448.27203369]
[100.15546417 439.94747925]
[91.29467010 427.84539795]
[87.10119629 413.41497803]
[88.09970856 398.39257812]
[94.18894196 384.59252930]
[104.65163422 373.68820190]
[118.23892212 367.00906372]
[116.67839813 352.09045410]
[115.11787415 337.17184448]
[101.45845032 331.23168945]
[92.54703522 319.17172241]
[90.85746765 304.17132568]
[96.94300842 290.24786377]
[109.26106262 281.18072510]
[107.70053864 266.26211548]
[106.14001465 251.34352112]
[102.31770325 245.01803589]
[104.66902161 236.19142151]
[103.33078766 221.25123596]
[91.77200317 211.92759705]
[90.20201874 196.79519653]
[100.05987549 184.73449707]
[98.72164154 169.79431152]
[97.38340759 154.85412598]
[96.04517365 139.91394043]
[94.70693970 124.97375488]
[93.36870575 110.03356934]
[91.80818176 95.11496735]
[90.02571869 80.22125244]
[88.24325562 65.32752991]
[84.11624908 57.17856216]
[86.54682159 50.19901276]
[84.98630524 35.28041077]
[83.42578125 20.36180496]
[73.91584778 11.64836502]
[72.92321777 -0.80950207]
[80.43632507 -10.28999615]
[79.09809113 -25.23018074]
[77.75985718 -40.17036438]
[76.42162323 -55.11054993]
[75.08338928 -70.05073547]
[73.74515533 -84.99092102]
[72.40692139 -99.93110657]
[66.91038513 -85.97445679]
[58.03167343 -73.88443756]
[46.35967636 -64.46294403]
[32.66856003 -58.33486938]
[17.86640549 -55.90665817]
[2.93498564 -57.33937454]
[-11.13535309 -62.53798676]
[-23.41137505 -71.15769196]
[-33.07885361 -82.62677002]
[-39.49658585 -96.18452454]
[-42.23889923 -110.93172455]
[-41.12390900 -125.89022064]
[-36.22556686 -140.06788635]
[-27.86876869 -152.52436829]
[-16.60778236 -162.43347168]
[-3.18951392 -169.13795471]
[11.49605274 -172.19313049]
[26.47487640 -171.39636230]
[40.75346756 -166.80052185]
[53.38477325 -158.71038818]
[63.53101349 -147.66259766]
[70.51921082 -134.38987732]
[73.88637543 -119.76746368]
[77.42604828 -134.34384155]
[80.96572113 -148.92021179]
[84.50539398 -163.49659729]
[88.04506683 -178.07296753]
[91.25833893 -192.72476196]
[94.14361572 -207.44464111]
[97.02888489 -222.16453552]
[92.09055328 -237.19528198]
[102.13147736 -248.19660950]
[105.01675415 -262.91650391]
[91.12839508 -268.72152710]
[78.69306946 -277.20373535]
[68.21999359 -288.01574707]
[60.13804245 -300.71481323]
[54.77815628 -314.78097534]
[52.35982513 -329.63818359]
[52.98207855 -344.67803955]
[56.61943054 -359.28469849]
[63.12294006 -372.86001587]
[72.22628784 -384.84811401]
[83.55670166 -394.75802612]
[96.65019989 -402.18402100]
[110.97061920 -406.82192993]
[125.93154907 -408.48190308]
[140.92034912 -407.09594727]
[155.32322693 -402.72079468]
[168.55039978 -395.53561401]
[180.06022644 -385.83465576]
[189.38139343 -374.01513672]
[196.13218689 -360.56109619]
[200.03617859 -346.02340698]
[200.93348694 -330.99743652]
[198.78739929 -316.09848022]
[193.68576050 -301.93661499]
[185.83750916 -289.09179688]
[175.56399536 -278.08996582]
[163.28594971 -269.38168335]
[149.50611877 -263.32351685]
[134.78880310 -260.16357422]
[119.73664093 -260.03121948]
[116.85137177 -245.31134033]
[121.99607849 -231.33345032]
[111.74877930 -219.27926636]
[108.86350250 -204.55937195]
[105.97823334 -189.83947754]
[107.63130188 -186.72505188]
[107.85799408 -182.65519714]
[106.22569275 -178.30906677]
[102.62144470 -174.53329468]
[99.08177185 -159.95692444]
[95.54209900 -145.38053894]
[92.00242615 -130.80416870]
[88.46275330 -116.22779083]
[87.34710693 -101.26934052]
[88.68534088 -86.32915497]
[90.02357483 -71.38896942]
[91.36180878 -56.44878387]
[92.70004272 -41.50859833]
[94.03827667 -26.56841469]
[95.37651062 -11.62823009]
[106.23073578 2.16135931]
[98.34438324 18.80128288]
[99.90490723 33.71988678]
[101.46543121 48.63849258]
[103.13697052 63.54506683]
[104.91943359 78.43878174]
[106.70190430 93.33249664]
[109.98439789 97.42385864]
[110.74092102 103.06309509]
[108.30889130 108.69533539]
[109.64712524 123.63552094]
[110.98535919 138.57571411]
[112.32359314 153.51588440]
[113.66182709 168.45606995]
[115.00006104 183.39625549]
[126.84442139 193.51303101]
[127.98875427 208.68356323]
[118.27097321 219.91299438]
[119.60920715 234.85317993]
[121.05862427 249.78298950]
[122.61914825 264.70159912]
[124.17967224 279.62020874]
[138.10743713 285.94195557]
[146.94258118 298.30468750]
[148.39378357 313.33001709]
[142.17095947 326.97305298]
[130.03648376 335.61132812]
[131.59700012 350.52993774]
[133.15753174 365.44854736]
[147.83288574 369.17132568]
[160.32563782 377.67446899]
[169.13885498 389.91567993]
[173.22450256 404.40628052]
[172.10803223 419.39212036]
[165.94346619 433.06588745]
[155.49240112 443.78524780]
[142.03004456 450.26986694]
[143.59057617 465.18847656]
[145.15109253 480.10708618]
[146.71160889 495.02566528]
[148.27214050 509.94427490]
[149.83265686 524.86291504]
[151.39318848 539.78149414]
[152.95370483 554.70007324]
[154.51423645 569.61871338]
[156.07475281 584.53729248]
[157.63526917 599.45593262]
[159.19580078 614.37451172]
[174.13005066 616.43157959]
[188.13781738 622.00347900]
[200.40467834 630.76629639]
[210.21745300 642.21063232]
[217.00567627 655.67108154]
[220.37464905 670.36511230]
[220.12852478 685.43835449]
[216.28160095 700.01452637]
[209.05754089 713.24615479]
[198.87634277 724.36401367]
[186.32992554 732.72167969]
[172.14772034 737.83331299]
[157.15426636 739.40167236]
[142.22126770 737.33557129]
[128.21688843 731.75512695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[28 176]
[29 175]
[30 174]
[35 169]
[36 168]
[37 167]
[39 166]
[40 165]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 154]
[50 153]
[51 152]
[53 151]
[54 150]
[55 149]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 132]
[93 131]
[94 130]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
