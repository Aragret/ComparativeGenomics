%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[64.08143616 481.69854736]
[76.00846863 471.77252197]
[74.89282227 456.81408691]
[73.77716827 441.85562134]
[72.66152191 426.89718628]
[64.24533844 439.31359863]
[50.49455261 445.30657959]
[35.66999435 443.01913452]
[24.36521339 433.16003418]
[20.08312035 418.78424072]
[24.15056610 404.34622192]
[35.30721283 394.31979370]
[50.09604645 391.81173706]
[63.93458939 397.59921265]
[72.53490448 409.88912964]
[73.42771912 394.91571045]
[74.32053375 379.94232178]
[65.63196564 364.69515991]
[75.89944458 349.40921021]
[76.56922913 334.42416382]
[77.23901367 319.43911743]
[77.90879822 304.45410156]
[78.57858276 289.46905518]
[76.07398224 285.40261841]
[76.09730530 279.71960449]
[79.49798584 274.04977417]
[80.61363220 259.09133911]
[81.72928619 244.13287354]
[74.96002197 230.86538696]
[83.70230103 217.67890930]
[84.81795502 202.72045898]
[85.93360138 187.76199341]
[87.04924774 172.80354309]
[73.05791473 168.86364746]
[60.10758972 162.26293945]
[48.69866180 153.25646973]
[39.27196121 142.19221497]
[32.19171906 129.49771118]
[27.73151016 115.66345215]
[26.06367493 101.22397614]
[27.25265312 86.73719788]
[31.25250626 72.76288605]
[37.90868378 59.84098434]
[46.96399689 48.47077942]
[58.06856155 39.09160614]
[70.79330444 32.06586075]
[84.64656830 27.66501236]
[99.09306335 26.05910683]
[100.43129730 11.11892128]
[101.76953125 -3.82126355]
[103.10776520 -18.76144791]
[104.44599915 -33.70163345]
[105.78423309 -48.64181900]
[96.82299042 -36.61285019]
[83.78395081 -29.19777107]
[68.86441803 -27.64615822]
[54.57859421 -32.21948242]
[43.33389664 -42.14705658]
[37.02525330 -55.75591660]
[36.71577835 -70.75272369]
[42.45762634 -84.61025238]
[53.28319550 -94.99327087]
[67.36818695 -100.15205383]
[82.33902740 -99.21726227]
[95.67287445 -92.34641266]
[105.12273407 -80.69738007]
[109.09625244 -66.23155975]
[113.28326416 -80.63533783]
[117.47027588 -95.03912354]
[116.26760101 -101.54028320]
[118.23355865 -106.87245178]
[122.00231934 -109.80596924]
[126.61632538 -124.07870483]
[131.23033142 -138.35144043]
[135.84434509 -152.62416077]
[122.01608276 -160.47904968]
[110.11431122 -171.01916504]
[100.65166473 -183.78752136]
[94.03508759 -198.23118591]
[90.54835510 -213.72529602]
[90.33986664 -229.60003662]
[93.41638184 -245.16964722]
[99.64276886 -259.76196289]
[108.74799347 -272.74755859]
[120.33687592 -283.56674194]
[133.90725708 -291.75381470]
[148.87176514 -296.95706177]
[164.58323669 -298.95382690]
[180.36265564 -297.66012573]
[184.54966736 -312.06390381]
[188.73667908 -326.46771240]
[192.92369080 -340.87149048]
[197.11070251 -355.27526855]
[193.53303528 -370.68664551]
[204.51541138 -380.74829102]
[208.70242310 -395.15206909]
[210.81704712 -410.00228882]
[210.81704712 -425.00228882]
[196.75985718 -430.78707886]
[185.98999023 -441.51452637]
[180.14974976 -455.54876709]
[180.12976074 -470.74969482]
[185.93304443 -484.79925537]
[196.67465210 -495.55502319]
[210.71658325 -501.37680054]
[225.91751099 -501.37680054]
[239.95942688 -495.55502319]
[250.70104980 -484.79925537]
[256.50433350 -470.74969482]
[256.48434448 -455.54876709]
[250.64410400 -441.51452637]
[239.87423706 -430.78707886]
[225.81704712 -425.00228882]
[225.81704712 -410.00228882]
[232.72651672 -423.31616211]
[243.21049500 -434.04397583]
[256.36203003 -441.25769043]
[271.04333496 -444.33322144]
[285.98437500 -443.00451660]
[299.89257812 -437.38653564]
[311.56475830 -427.96524048]
[319.99114990 -415.55572510]
[324.44277954 -401.23153687]
[324.53454590 -386.23181152]
[320.25848389 -371.85421753]
[311.98455811 -359.34252930]
[300.42852783 -349.77914429]
[286.59011841 -343.99142456]
[271.66644287 -342.48001099]
[256.94860840 -345.37570190]
[243.70980835 -352.42794800]
[233.09535217 -363.02670288]
[226.02349854 -376.25503540]
[223.10620117 -390.96505737]
[218.91918945 -376.56127930]
[222.79634094 -362.18014526]
[211.51448059 -351.08825684]
[207.32746887 -336.68447876]
[203.14045715 -322.28070068]
[198.95344543 -307.87689209]
[194.76643372 -293.47311401]
[207.35594177 -287.03271484]
[218.54141235 -278.37359619]
[227.93641663 -267.79293823]
[235.21595764 -255.65435791]
[240.12782288 -242.37535095]
[242.50123596 -228.41304016]
[242.25283813 -214.24833679]
[239.38961792 -200.36944580]
[234.00869751 -187.25500488]
[226.29408264 -175.35758972]
[216.51029968 -165.08808899]
[204.99339294 -156.80151367]
[192.13937378 -150.78472900]
[178.39054871 -147.24653625]
[164.22036743 -146.31039429]
[150.11708069 -148.01016235]
[145.50306702 -133.73742676]
[140.88906860 -119.46469116]
[136.27505493 -105.19195557]
[131.87405396 -90.85211182]
[127.68704224 -76.44832611]
[123.50003052 -62.04454803]
[120.72441864 -47.30358505]
[119.38618469 -32.36339951]
[118.04795074 -17.42321396]
[116.70971680 -2.48302937]
[115.37148285 12.45715618]
[114.03324890 27.39734077]
[128.77946472 31.88376808]
[142.27525330 39.32973099]
[153.93424988 49.41171265]
[163.24990845 61.69166946]
[169.81745911 75.63606262]
[173.35154724 90.63902283]
[173.69865417 106.04869843]
[170.84367371 121.19557190]
[164.91065979 135.42153931]
[156.15737915 148.10848999]
[144.96415710 158.70521545]
[131.81732178 166.75129700]
[117.28808594 171.89715576]
[102.00770569 173.91918945]
[100.89205170 188.87765503]
[99.77640533 203.83610535]
[98.66075897 218.79455566]
[105.35021973 233.13197327]
[96.68773651 245.24851990]
[95.57209015 260.20697021]
[94.45644379 275.16543579]
[93.56362152 290.13882446]
[92.89383698 305.12387085]
[92.22405243 320.10891724]
[91.55426788 335.09396362]
[90.88448334 350.07897949]
[98.99663544 360.10675049]
[98.13027191 372.57403564]
[89.29393768 380.83511353]
[88.40112305 395.80853271]
[87.50830841 410.78195190]
[87.61997223 425.78152466]
[88.73562622 440.73999023]
[89.85127258 455.69842529]
[90.96691895 470.65689087]
[104.23442841 478.70379639]
[110.20715332 493.02532959]
[106.58846283 508.11456299]
[94.76980591 518.16937256]
[79.29570770 519.32348633]
[66.11627960 511.13308716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[15 200]
[16 199]
[17 198]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[26 190]
[27 189]
[28 188]
[30 186]
[31 185]
[32 184]
[33 183]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[67 163]
[68 162]
[69 161]
[72 160]
[73 159]
[74 158]
[75 157]
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[95 135]
[96 134]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
