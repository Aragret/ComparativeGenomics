%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[73.67024994 583.92626953]
[62.55325699 573.83026123]
[52.68353271 562.51190186]
[44.19455719 550.12426758]
[37.20113373 536.83483887]
[31.79783440 522.82342529]
[28.05773926 508.27938843]
[26.03142548 493.39953613]
[25.74629784 478.38504028]
[27.20621300 463.43896484]
[30.39142609 448.76342773]
[35.25886154 434.55694580]
[41.74269104 421.01159668]
[49.75522995 408.31057739]
[59.18811798 396.62567139]
[69.91378784 386.11486816]
[81.78718567 376.92037964]
[94.64772797 369.16647339]
[108.32150269 362.95806885]
[122.62358856 358.37908936]
[119.73831940 343.65921021]
[116.85304260 328.93930054]
[113.96777344 314.21942139]
[111.08249664 299.49954224]
[108.19722748 284.77963257]
[93.85171509 276.00210571]
[90.22164917 259.23495483]
[100.03068542 244.75041199]
[96.92657471 230.07510376]
[92.46693420 224.18159485]
[93.88721466 215.15826416]
[91.00193787 200.43836975]
[88.11666870 185.71847534]
[85.23139191 170.99859619]
[81.25683594 185.46243286]
[73.85453796 198.50874329]
[63.47715759 209.33970642]
[50.75926590 217.29302979]
[36.47857666 221.88235474]
[21.50835419 222.82704163]
[6.76403379 220.06930542]
[-6.85276270 213.77781677]
[-18.50936317 204.33729553]
[-27.49296188 192.32501221]
[-33.25420761 178.47552490]
[-35.44079971 163.63575745]
[-33.91902542 148.71315002]
[-28.78194427 134.62022400]
[-20.34368896 122.21878052]
[-9.12026119 112.26716614]
[4.20202017 105.37392426]
[18.80849457 101.96057892]
[33.80596924 102.23585510]
[48.27733994 106.18292236]
[61.33768082 113.56042480]
[72.18834686 123.91721344]
[80.16581726 136.61996460]
[84.78226471 150.89193726]
[87.00738525 136.05789185]
[89.23249817 121.22385406]
[91.45761871 106.38980865]
[92.23893738 91.41017151]
[91.56915283 76.42513275]
[82.59471893 67.16110229]
[82.34535217 54.66623688]
[90.40942383 45.64974213]
[89.96282196 30.65639114]
[89.51621246 15.66304111]
[86.37209320 9.84702587]
[86.60255432 4.16865301]
[89.28623962 0.21809784]
[89.28623962 -14.78190231]
[89.28623962 -29.78190231]
[89.28623962 -44.78190231]
[74.53288269 -47.73664093]
[60.64395142 -53.51114655]
[48.15251541 -61.88175583]
[37.53763199 -72.52520752]
[29.20594215 -85.03109741]
[23.47610283 -98.91775513]
[20.56660271 -113.65073395]
[20.58742714 -128.66343689]
[23.53590202 -143.37889099]
[29.29686928 -157.23185730]
[37.64718628 -169.69067383]
[48.26436615 -180.27751160]
[60.73902130 -188.58682251]
[74.59067535 -194.30081177]
[89.28623962 -197.20159912]
[89.28623962 -212.20159912]
[89.28623962 -227.20159912]
[89.28623962 -242.20159912]
[78.39168549 -253.33473206]
[78.60536194 -268.54684448]
[89.28623962 -278.86453247]
[89.28623962 -293.86453247]
[89.28623962 -308.86453247]
[75.03356934 -314.02566528]
[63.40763855 -323.75262451]
[55.81233597 -336.87081909]
[53.16483307 -351.79617310]
[55.78482819 -366.72640991]
[63.35593796 -379.85858154]
[74.96392059 -389.60693359]
[89.20706177 -394.79431152]
[104.36541748 -394.79431152]
[118.60855103 -389.60693359]
[130.21653748 -379.85858154]
[137.78764343 -366.72640991]
[140.40763855 -351.79617310]
[137.76013184 -336.87081909]
[130.16484070 -323.75262451]
[118.53890991 -314.02566528]
[104.28623962 -308.86453247]
[104.28623962 -293.86453247]
[104.28623962 -278.86453247]
[114.96710968 -268.54684448]
[115.18079376 -253.33473206]
[104.28623962 -242.20159912]
[104.28623962 -227.20159912]
[104.28623962 -212.20159912]
[104.28623962 -197.20159912]
[118.98180389 -194.30081177]
[132.83345032 -188.58682251]
[145.30810547 -180.27751160]
[155.92529297 -169.69067383]
[164.27560425 -157.23185730]
[170.03657532 -143.37889099]
[172.98504639 -128.66343689]
[173.00587463 -113.65073395]
[170.09637451 -98.91775513]
[164.36653137 -85.03109741]
[156.03483582 -72.52520752]
[145.41995239 -61.88175583]
[132.92852783 -53.51114655]
[119.03958893 -47.73664093]
[104.28623962 -44.78190231]
[104.28623962 -29.78190231]
[104.28623962 -14.78190231]
[104.28623962 0.21809784]
[104.50956726 15.21643543]
[104.95616913 30.20978546]
[105.40277863 45.20313644]
[115.41698456 59.61433029]
[106.55419159 75.75534821]
[107.22397614 90.74038696]
[114.49780273 77.62202454]
[126.42929077 68.53139496]
[141.00778198 65.00042725]
[155.77653503 67.62415314]
[168.24676514 75.96042633]
[176.31700134 88.60444641]
[178.62728882 103.42546082]
[174.78829956 117.92588043]
[165.44696045 129.66212463]
[152.17745972 136.65643311]
[137.21592712 137.73013306]
[123.08366394 132.70230103]
[112.16220093 122.42019653]
[106.29166412 108.61492920]
[104.06654358 123.44896698]
[101.84143066 138.28302002]
[99.61631012 153.11706543]
[99.95128632 168.11331177]
[102.83655548 182.83320618]
[105.72183228 197.55310059]
[108.60710144 212.27299500]
[111.60187531 226.97099304]
[114.70598602 241.64630127]
[126.76546478 247.64492798]
[133.07609558 259.32339478]
[131.53112793 272.31167603]
[122.91711426 281.89437866]
[125.80239105 296.61425781]
[128.68766785 311.33413696]
[131.57293701 326.05404663]
[134.45820618 340.77392578]
[137.34347534 355.49383545]
[152.31588745 354.33465576]
[167.32162476 354.92153931]
[182.15774536 357.24655151]
[196.62364197 361.27825928]
[210.52365112 366.96209717]
[223.66979980 374.22125244]
[235.88429260 382.95755005]
[247.00196838 393.05279541]
[256.87243652 404.37048340]
[265.36224365 416.75756836]
[272.35656738 430.04650879]
[277.76080322 444.05758667]
[281.50186157 458.60134888]
[283.52917480 473.48110962]
[283.81527710 488.49557495]
[282.35638428 503.44174194]
[279.17214966 518.11749268]
[274.30566406 532.32427979]
[267.82272339 545.87011719]
[259.81103516 558.57165527]
[250.37892151 570.25720215]
[239.65396118 580.76867676]
[227.78117371 589.96398926]
[214.92114258 597.71875000]
[201.24778748 603.92803955]
[186.94601440 608.50799561]
[172.20922852 611.39654541]
[157.23675537 612.55474854]
[142.23106384 611.96685791]
[127.39508057 609.64086914]
[112.92945862 605.60815430]
[99.02983093 599.92340088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[28 169]
[29 168]
[31 167]
[32 166]
[33 165]
[34 164]
[58 163]
[59 162]
[60 161]
[61 160]
[62 146]
[63 145]
[66 143]
[67 142]
[68 141]
[71 140]
[72 139]
[73 138]
[74 137]
[89 122]
[90 121]
[91 120]
[92 119]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
