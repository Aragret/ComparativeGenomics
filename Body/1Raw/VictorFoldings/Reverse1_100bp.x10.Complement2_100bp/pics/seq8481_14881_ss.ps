%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[152.83119202 680.23358154]
[143.27824402 668.64178467]
[135.28610229 655.92352295]
[128.98600769 642.28765869]
[124.48139954 627.95806885]
[121.84625244 613.17010498]
[121.12384033 598.16656494]
[122.32602692 583.19378662]
[125.43306732 568.49774170]
[130.39393616 554.31964111]
[137.12718201 540.89239502]
[145.52224731 528.43640137]
[155.44125366 517.15625000]
[166.72134399 507.23718262]
[179.17726135 498.84207153]
[192.60449219 492.10873413]
[206.78254700 487.14776611]
[203.67843628 472.47247314]
[200.57434082 457.79718018]
[197.13121033 454.48748779]
[195.73065186 448.97973633]
[197.60314941 442.63897705]
[194.93734741 427.87774658]
[192.27156067 413.11651611]
[189.60575867 398.35531616]
[186.93995667 383.59408569]
[183.83586121 368.91879272]
[180.29618835 354.34240723]
[176.75651550 339.76605225]
[173.21684265 325.18966675]
[169.67716980 310.61328125]
[165.27616882 296.27343750]
[160.02944946 282.22097778]
[154.78273010 268.16848755]
[149.53601074 254.11602783]
[144.28929138 240.06355286]
[139.04257202 226.01109314]
[133.79585266 211.95861816]
[118.87844086 213.07577515]
[104.23587036 209.94105530]
[91.05661011 202.80012512]
[80.41280365 192.22421265]
[73.17308044 179.06433105]
[69.93165588 164.38287354]
[70.95956421 149.36782837]
[76.18203735 135.23661804]
[85.18384552 123.13745880]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[71.38290405 66.91619110]
[74.17968750 52.28652191]
[68.93296814 38.23405075]
[64.90557861 34.91333389]
[62.76838684 30.79195976]
[62.50984955 26.72401047]
[63.78111649 23.43520737]
[59.16710663 9.16247463]
[54.55309677 -5.11025906]
[49.91049957 -9.81746960]
[48.54677200 -15.33446789]
[50.02104950 -19.87710381]
[45.83403778 -34.28088760]
[40.43358994 -41.64790344]
[41.69363022 -48.93035507]
[37.72153473 -63.39487839]
[33.74943924 -77.85940552]
[18.92565918 -75.47134399]
[3.93058300 -74.70004272]
[-11.05998325 -75.55454254]
[-25.87028122 -78.02482605]
[-40.32666779 -82.08193207]
[-54.25965118 -87.67829132]
[-67.50587463 -94.74828339]
[-79.91002655 -103.20903015]
[-91.32668304 -112.96131897]
[-101.62198639 -123.89082336]
[-110.67522430 -135.86938477]
[-118.38026428 -148.75657654]
[-124.64675140 -162.40129089]
[-129.40122986 -176.64356995]
[-132.58795166 -191.31640625]
[-134.16955566 -206.24777222]
[-134.12748718 -221.26260376]
[-132.46224976 -236.18487549]
[-129.19337463 -250.83963013]
[-124.35916901 -265.05502319]
[-118.01631927 -278.66442871]
[-110.23919678 -291.50823975]
[-101.11898041 -303.43588257]
[-90.76260376 -314.30755615]
[-79.29148865 -323.99572754]
[-66.84011841 -332.38681030]
[-53.55449295 -339.38247681]
[-39.59037399 -344.90069580]
[-25.11148071 -348.87673950]
[-10.28757477 -351.26400757]
[4.70754385 -352.03448486]
[19.69806480 -351.17919922]
[34.50822830 -348.70809937]
[48.96439743 -344.65023804]
[62.89707947 -339.05310059]
[76.14292145 -331.98239136]
[88.54662323 -323.52099609]
[99.96275330 -313.76809692]
[110.25746155 -302.83804321]
[119.31005859 -290.85897827]
[127.01440430 -277.97137451]
[133.28016663 -264.32632446]
[138.03387451 -250.08380127]
[141.21980286 -235.41079712]
[142.80059814 -220.47933960]
[142.75773621 -205.46449280]
[141.09169006 -190.54231262]
[137.82202148 -175.88774109]
[132.98704529 -161.67259216]
[126.64347076 -148.06355286]
[118.86566162 -135.22015381]
[109.74480438 -123.29298401]
[99.38784027 -112.42189789]
[87.91619873 -102.73434448]
[75.46438599 -94.34390259]
[62.17837906 -87.34895325]
[48.21396255 -81.83149719]
[52.18605804 -67.36697388]
[56.15815353 -52.90245056]
[60.23781967 -38.46789932]
[64.42483521 -24.06411552]
[68.82582855 -9.72426796]
[73.43984222 4.54846525]
[78.05384827 18.82119942]
[82.98544312 32.98733521]
[88.23216248 47.03980637]
[99.93246460 56.25675201]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[126.35437775 107.76576996]
[141.08294678 111.00481415]
[154.28871155 118.25553131]
[164.90554810 128.92283630]
[172.07908630 142.13616943]
[175.23550415 156.82061768]
[174.12733459 171.78433228]
[168.85292053 185.81523132]
[159.84770203 197.77923584]
[147.84832764 206.71189880]
[153.09504700 220.76437378]
[158.34176636 234.81683350]
[163.58848572 248.86930847]
[168.83520508 262.92178345]
[174.08192444 276.97424316]
[179.32864380 291.02673340]
[184.63055420 276.99499512]
[197.10385132 268.66329956]
[212.09629822 269.13919067]
[224.01608276 278.24517822]
[228.41741943 292.58493042]
[223.65872192 306.81005859]
[211.51486206 315.61499023]
[196.51519775 315.71566772]
[184.25354004 307.07360840]
[187.79321289 321.64999390]
[191.33288574 336.22637939]
[194.87255859 350.80273438]
[198.41223145 365.37911987]
[201.51930237 368.41226196]
[203.31861877 371.92324829]
[203.82051086 375.44229126]
[203.18690491 378.55114746]
[201.70118713 380.92831421]
[204.36697388 395.68951416]
[207.03277588 410.45074463]
[209.69856262 425.21194458]
[212.36436462 439.97317505]
[215.24963379 454.69305420]
[218.35374451 469.36834717]
[221.45785522 484.04367065]
[236.43037415 482.83871460]
[251.43406677 483.55834961]
[266.22253418 486.19076538]
[280.55294800 490.69271851]
[294.18997192 496.99029541]
[306.90969849 504.98010254]
[318.50326538 514.53088379]
[328.78027344 525.48590088]
[337.57196045 537.66516113]
[344.73397827 550.86871338]
[350.14871216 564.87969971]
[353.72723389 579.46813965]
[355.41079712 594.39447021]
[355.17178345 609.41345215]
[353.01406860 624.27862549]
[348.97308350 638.74578857]
[343.11523438 652.57739258]
[335.53665161 665.54632568]
[326.36184692 677.43969727]
[315.74142456 688.06207275]
[303.84979248 697.23907471]
[290.88223267 704.82000732]
[277.05169678 710.68048096]
[262.58529663 714.72412109]
[247.72053528 716.88458252]
[232.70155334 717.12640381]
[217.77496338 715.44555664]
[203.18586731 711.86975098]
[189.17382812 706.45758057]
[175.96896362 699.29803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 180]
[18 179]
[19 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[48 139]
[50 137]
[51 136]
[53 134]
[54 133]
[58 132]
[59 131]
[60 130]
[63 129]
[64 128]
[66 127]
[67 126]
[68 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
