%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[76.74379730 682.77111816]
[61.88134766 680.58880615]
[47.43091202 676.48510742]
[33.63975906 670.53039551]
[20.74387360 662.82641602]
[8.96392059 653.50506592]
[-1.49852908 642.72583008]
[-10.46444893 630.67309570]
[-17.78042030 617.55322266]
[-23.32125664 603.59063721]
[-26.99214935 589.02423096]
[-28.73028183 574.10333252]
[-28.50591469 559.08319092]
[-26.32288551 544.22082520]
[-22.21854973 529.77056885]
[-16.26313782 515.97973633]
[-8.55855370 503.08419800]
[0.76336551 491.30468750]
[11.54311085 480.84274292]
[23.59622574 471.87741089]
[36.71646500 464.56207275]
[50.67932892 459.02188110]
[65.24588776 455.35168457]
[80.16689301 453.61425781]
[80.39022064 438.61593628]
[80.61354828 423.61758423]
[77.56998444 416.88272095]
[80.95351410 408.39804077]
[73.59857941 395.44604492]
[81.74333191 381.88238525]
[82.18994141 366.88900757]
[82.63654327 351.89566040]
[83.08315277 336.90231323]
[83.52975464 321.90896606]
[76.17482758 308.95697021]
[84.31958008 295.39328003]
[84.76618195 280.39993286]
[85.21279144 265.40658569]
[82.26983643 258.62713623]
[85.77931213 250.19380188]
[86.44909668 235.20875549]
[87.11888123 220.22372437]
[87.78866577 205.23867798]
[88.45845032 190.25364685]
[89.12823486 175.26860046]
[81.96695709 162.20854187]
[90.31275177 148.76762390]
[90.98253632 133.78257751]
[83.82125092 120.72251129]
[92.16704559 107.28159332]
[91.05139923 92.32314301]
[88.16612244 77.60324860]
[85.28085327 62.88335800]
[75.03355408 50.82917023]
[80.17826080 36.85128784]
[77.29298401 22.13139534]
[74.40771484 7.41150331]
[61.98629379 -6.18223953]
[68.31695557 -22.54957390]
[57.95212936 -30.22636795]
[55.66883087 -42.51336670]
[62.15486908 -52.72404099]
[59.26959610 -67.44393158]
[55.21925735 -72.66947174]
[54.52078247 -78.30943298]
[56.52442169 -82.64469147]
[54.07869339 -97.44396210]
[51.08391953 -112.14196777]
[40.30859375 -123.72657013]
[44.82402039 -137.92022705]
[34.04869461 -149.50483704]
[38.56412506 -163.69850159]
[35.02445221 -178.27487183]
[31.48477936 -192.85125732]
[27.94510651 -207.42762756]
[24.40543365 -222.00399780]
[9.44796181 -220.57054138]
[-5.56126261 -221.28044128]
[-20.31667137 -224.11921692]
[-34.51786041 -229.02909851]
[-47.87571716 -235.91012573]
[-60.11828613 -244.62220764]
[-70.99633026 -254.98796082]
[-80.28838348 -266.79635620]
[-87.80527496 -279.80703735]
[-93.39395905 -293.75503540]
[-96.94067383 -308.35647583]
[-98.37319946 -323.31402588]
[-97.66238403 -338.32321167]
[-94.82268524 -353.07843018]
[-89.91192627 -367.27932739]
[-83.03007507 -380.63674927]
[-74.31724548 -392.87878418]
[-63.95081329 -403.75619507]
[-52.14183044 -413.04751587]
[-39.13071060 -420.56359863]
[-25.18234062 -426.15142822]
[-10.58069706 -429.69723511]
[4.37695169 -431.12884521]
[19.38608742 -430.41708374]
[34.14114380 -427.57647705]
[48.34172821 -422.66482544]
[61.69873047 -415.78216553]
[73.94022369 -407.06857300]
[84.81698608 -396.70147705]
[94.10757446 -384.89190674]
[101.62285614 -371.88031006]
[107.20981598 -357.93161011]
[110.75472260 -343.32974243]
[112.18540192 -328.37200928]
[111.47271729 -313.36291504]
[108.63119507 -298.60803223]
[103.71868134 -284.40774536]
[96.83517456 -271.05117798]
[88.12082672 -258.81021118]
[77.75305176 -247.93411255]
[65.94291687 -238.64424133]
[52.93087006 -231.12977600]
[38.98180771 -225.54367065]
[42.52148056 -210.96730042]
[46.06115341 -196.39093018]
[49.60082626 -181.81454468]
[53.14049911 -167.23817444]
[63.66264343 -156.69616699]
[59.40039825 -141.45989990]
[69.92253876 -130.91790771]
[65.66029358 -115.68164062]
[75.57472229 -126.93793488]
[90.56348419 -126.35729980]
[99.57741547 -114.36775970]
[95.97178650 -99.80755615]
[82.40453339 -93.40993500]
[68.87796021 -99.88969421]
[71.32369232 -85.09042358]
[73.98948669 -70.32920074]
[76.87475586 -55.60931396]
[89.10468292 -43.02376938]
[82.99225616 -25.65368462]
[92.95629120 -18.79477310]
[95.66247559 -6.59394169]
[89.12760162 4.52623081]
[92.01287842 19.24612236]
[94.89814758 33.96601486]
[104.93907166 44.96733475]
[100.00074768 59.99808502]
[102.88601685 74.71797943]
[105.77128601 89.43786621]
[110.36873627 75.15979004]
[119.51757050 63.27287292]
[132.14299011 55.17357635]
[146.76179504 51.81339645]
[161.65655518 53.58708954]
[175.07746887 60.28627777]
[185.44784546 71.12394714]
[191.54940796 84.82691193]
[192.66531372 99.78533936]
[188.66450500 114.24195099]
[180.01696777 126.49838257]
[167.73861694 135.11476135]
[153.27189636 139.07885742]
[138.31634521 137.92495728]
[124.62892151 131.78863525]
[113.81761932 121.39076233]
[107.15208435 107.95137787]
[114.26545715 122.08327484]
[105.96757507 134.45236206]
[105.29779053 149.43740845]
[112.41116333 163.56930542]
[104.11327362 175.93838501]
[103.44348907 190.92343140]
[102.77370453 205.90846252]
[102.10391998 220.89350891]
[101.43413544 235.87854004]
[100.76435089 250.86358643]
[100.20613861 265.85317993]
[99.75953674 280.84655762]
[99.31292725 295.83990479]
[106.63591766 309.86431885]
[98.52310944 322.35559082]
[98.07649994 337.34893799]
[97.62989807 352.34228516]
[97.18328857 367.33563232]
[96.73667908 382.32897949]
[104.05966949 396.35339355]
[95.94686127 408.84466553]
[95.61188507 423.84091187]
[95.38855743 438.83926392]
[95.16522980 453.83758545]
[110.02789307 456.01849365]
[124.47871399 460.12078857]
[138.27043152 466.07421875]
[151.16705322 473.77694702]
[162.94789124 483.09719849]
[173.41137695 493.87545776]
[182.37843323 505.92727661]
[189.69566345 519.04650879]
[195.23782349 533.00854492]
[198.91009521 547.57458496]
[200.64965820 562.49536133]
[200.42671204 577.51550293]
[198.24510193 592.37805176]
[194.14215088 606.82867432]
[188.18804932 620.62011719]
[180.48469543 633.51635742]
[171.16389465 645.29675293]
[160.38514709 655.75976562]
[148.33288574 664.72625732]
[135.21333313 672.04284668]
[121.25099945 677.58435059]
[106.68479156 681.25592041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 188]
[25 187]
[26 186]
[28 185]
[30 183]
[31 182]
[32 181]
[33 180]
[34 179]
[36 177]
[37 176]
[38 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[45 169]
[47 167]
[48 166]
[50 164]
[51 147]
[52 146]
[53 145]
[55 143]
[56 142]
[57 141]
[59 138]
[62 136]
[63 135]
[66 134]
[67 133]
[68 127]
[70 125]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
