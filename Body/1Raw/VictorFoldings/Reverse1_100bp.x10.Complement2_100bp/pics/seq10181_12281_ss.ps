%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[21.97433281 201.79008484]
[24.54905891 216.57600403]
[25.91002083 231.52259827]
[26.04815865 246.53038025]
[24.96255493 261.49951172]
[22.66043091 276.33032227]
[19.15711212 290.92413330]
[14.47590733 305.18383789]
[8.64797401 319.01452637]
[1.71209502 332.32415771]
[-6.28557205 345.02416992]
[-15.29180241 357.03002930]
[-25.24666214 368.26184082]
[-36.08390045 378.64483643]
[-47.73139572 388.10998535]
[-60.11163712 396.59423828]
[-73.14223480 404.04113770]
[-86.73646545 410.40112305]
[-100.80386353 415.63189697]
[-115.25081635 419.69863892]
[-129.98118591 422.57427979]
[-144.89691162 424.23968506]
[-159.89877319 424.68374634]
[-174.88690186 423.90356445]
[-189.76156616 421.90426636]
[-204.42378235 418.69918823]
[-218.77595520 414.30969238]
[-232.72257996 408.76492310]
[-246.17085266 402.10183716]
[-259.03128052 394.36474609]
[-271.21823120 385.60516357]
[-282.65066528 375.88134766]
[-293.25247192 365.25805664]
[-302.95309448 353.80593872]
[-311.68798828 341.60125732]
[-319.39898682 328.72518921]
[-326.03482056 315.26342773]
[-331.55130005 301.30560303]
[-335.91174316 286.94454956]
[-339.08706665 272.27587891]
[-341.05621338 257.39721680]
[-341.80606079 242.40753174]
[-341.33157349 227.40660095]
[-339.63595581 212.49426270]
[-336.73049927 197.76976013]
[-332.63449097 183.33108521]
[-327.37521362 169.27430725]
[-320.98767090 155.69299316]
[-313.51440430 142.67750549]
[-305.00509644 130.31448364]
[-295.51638794 118.68618774]
[-285.11141968 107.87001038]
[-273.85946655 97.93792725]
[-261.83538818 88.95604706]
[-249.11920166 80.98412323]
[-235.79553223 74.07522583]
[-221.95306396 68.27532959]
[-207.68391418 63.62302780]
[-193.08302307 60.14928436]
[-178.24757385 57.87721634]
[-163.27629089 56.82194138]
[-148.26881409 56.99048996]
[-133.32501221 58.38173294]
[-118.54433441 60.98641205]
[-104.02514648 64.78720093]
[-89.86407471 69.75879669]
[-76.15534973 75.86811066]
[-62.99021912 83.07450104]
[-50.45627975 91.32999420]
[-38.63695526 100.57966614]
[-27.61089706 110.76194763]
[-17.45148468 121.80907440]
[-8.22632599 133.64753723]
[0.00318291 146.19856262]
[13.17565918 139.02319336]
[26.34813499 131.84782410]
[39.52061081 124.67246246]
[52.69308472 117.49709320]
[60.16853333 104.61427307]
[75.98856354 104.80748749]
[89.10725403 97.53425598]
[102.11620331 90.06651306]
[115.06920624 82.50213623]
[128.02220154 74.93775177]
[140.97520447 67.37337494]
[153.81414795 59.61698532]
[166.53617859 51.67029953]
[179.25820923 43.72361755]
[191.92074585 35.68244171]
[204.52305603 27.54722786]
[211.92102051 13.56221104]
[226.81019592 13.16012859]
[239.41250610 5.02491283]
[252.01481628 -3.11030293]
[264.61712646 -11.24551868]
[277.21945190 -19.38073540]
[270.01141357 -32.54288101]
[263.77194214 -46.19083786]
[258.53353882 -60.25344467]
[254.32351685 -74.65738678]
[251.16383362 -89.32756805]
[249.07096863 -104.18750000]
[248.05581665 -119.15971375]
[248.12368774 -134.16615295]
[249.27420044 -149.12857056]
[251.50138855 -163.96896362]
[254.79362488 -178.60997009]
[259.13372803 -192.97525024]
[264.49911499 -206.98989868]
[270.86178589 -220.58087158]
[278.18853760 -233.67727661]
[286.44122314 -246.21087646]
[295.57681274 -258.11630249]
[305.54763794 -269.33148193]
[316.30172729 -279.79794312]
[327.78305054 -289.46112061]
[339.93170166 -298.27066040]
[352.68438721 -306.18060303]
[365.97457886 -313.14971924]
[379.73300171 -319.14166260]
[393.88793945 -324.12521362]
[408.36557007 -328.07437134]
[423.09042358 -330.96856689]
[437.98574829 -332.79269409]
[452.97384644 -333.53723145]
[467.97662354 -333.19833374]
[482.91580200 -331.77774048]
[497.71356201 -329.28289795]
[512.29272461 -325.72674561]
[526.57727051 -321.12786865]
[540.49267578 -315.51022339]
[553.96655273 -308.90313721]
[566.92846680 -301.34100342]
[579.31097412 -292.86328125]
[591.04943848 -283.51416016]
[602.08270264 -273.34237671]
[612.35321045 -262.40097046]
[621.80743408 -250.74699402]
[630.39611816 -238.44120789]
[638.07440186 -225.54774475]
[644.80230713 -212.13383484]
[650.54479980 -198.26942444]
[655.27185059 -184.02679443]
[658.95886230 -169.48019409]
[661.58660889 -154.70545959]
[663.14141846 -139.77963257]
[663.61511230 -124.78052521]
[663.00531006 -109.78633118]
[661.31512451 -94.87522125]
[658.55340576 -80.12495422]
[654.73449707 -65.61241150]
[649.87835693 -51.41326904]
[644.01025391 -37.60154724]
[637.16088867 -24.24926186]
[629.36590576 -11.42602062]
[620.66589355 0.80131960]
[611.10626221 12.36900997]
[600.73687744 23.21674156]
[589.61175537 33.28796005]
[577.78887939 42.53015518]
[565.32995605 50.89514542]
[552.29992676 58.33931732]
[538.76672363 64.82386017]
[524.80084229 70.31496429]
[510.47512817 74.78401184]
[495.86431885 78.20768738]
[481.04452515 80.56814575]
[466.09304810 81.85308838]
[451.08782959 82.05580902]
[436.10708618 81.17525482]
[421.22894287 79.21601105]
[406.53097534 76.18829346]
[392.08978271 72.10789490]
[377.98065186 66.99608612]
[364.27719116 60.87950897]
[351.05078125 53.79006195]
[338.37045288 45.76470566]
[326.30224609 36.84527588]
[314.90908813 27.07828140]
[304.25042725 16.51463890]
[294.38180542 5.20942354]
[285.35464478 -6.77842283]
[272.75234985 1.35679305]
[260.15002441 9.49200916]
[247.54771423 17.62722397]
[234.94540405 25.76243973]
[228.44885254 39.16557312]
[212.65826416 40.14953995]
[200.05595398 48.28475571]
[196.14118958 54.55344009]
[187.20489502 56.44565201]
[174.48286438 64.39233398]
[161.76083374 72.33901978]
[159.83198547 76.70806885]
[155.13804626 79.91181183]
[148.53958130 80.32637787]
[135.58657837 87.89075470]
[122.63358307 95.45513153]
[109.68058777 103.01950836]
[104.86135864 109.48075104]
[96.47794342 110.59844208]
[90.54152679 117.54082489]
[83.16392517 117.97995758]
[74.74629211 131.37600708]
[59.86845398 130.66957092]
[46.69597626 137.84494019]
[33.52350235 145.02029419]
[20.35102463 152.19566345]
[7.17854929 159.37103271]
[13.26008034 173.09210205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 209]
[75 208]
[76 207]
[77 206]
[78 205]
[80 203]
[81 201]
[82 199]
[83 198]
[84 197]
[85 196]
[86 193]
[87 192]
[88 191]
[89 189]
[90 188]
[92 186]
[93 185]
[94 184]
[95 183]
[96 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
