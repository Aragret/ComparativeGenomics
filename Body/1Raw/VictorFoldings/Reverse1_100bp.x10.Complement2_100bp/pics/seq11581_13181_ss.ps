%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-35.00085068 548.21472168]
[-29.24519348 562.11682129]
[-26.22480774 576.85705566]
[-26.04887390 591.90252686]
[-28.72375488 606.70928955]
[-34.15275574 620.74218750]
[-42.13961792 633.49395752]
[-52.39562607 644.50354004]
[-64.55002594 653.37298584]
[-78.16345215 659.78161621]
[-92.74378204 663.49786377]
[-107.76394653 664.38739014]
[-122.68097687 662.41790771]
[-136.95562744 657.66070557]
[-150.07188416 650.28778076]
[-161.55560303 640.56561279]
[-170.99165344 628.84564209]
[-178.03892517 615.55157471]
[-182.44267273 601.16394043]
[-184.04368591 586.20288086]
[-182.78410339 571.20922852]
[-178.70945740 556.72497559]
[-171.96704102 543.27374268]
[-162.80058289 531.34173584]
[-151.54145813 521.36029053]
[-138.59666443 513.69030762]
[-124.43415070 508.60900879]
[-109.56588745 506.30004883]
[-94.52935791 506.84692383]
[-79.86810303 510.22985840]
[-73.79427338 496.51458740]
[-67.72043610 482.79934692]
[-61.64660263 469.08407593]
[-55.88056946 455.23657227]
[-50.42521286 441.26379395]
[-44.96985626 427.29098511]
[-39.51449966 413.31817627]
[-45.71150208 399.82254028]
[-40.37804031 385.57440186]
[-26.18053818 379.16592407]
[-20.72518158 365.19314575]
[-15.26982403 351.22033691]
[-16.27054977 348.60180664]
[-16.29434013 345.42910767]
[-15.12491989 342.07232666]
[-12.68387032 338.97302246]
[-9.05138111 336.59414673]
[-2.77402067 322.97082520]
[3.50334001 309.34753418]
[9.78070068 295.72421265]
[16.05806160 282.10089111]
[22.23382950 268.43121338]
[28.30766296 254.71595764]
[34.38149643 241.00068665]
[40.45532990 227.28541565]
[46.52916718 213.57015991]
[52.60300064 199.85488892]
[58.36903381 186.00740051]
[63.82439041 172.03460693]
[61.24572754 157.36491394]
[73.47216797 147.32376099]
[70.89350891 132.65406799]
[83.11994934 122.61292267]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[96.64470673 81.63809204]
[97.18300629 77.72979736]
[98.78898621 74.55863953]
[101.09029388 72.37447357]
[103.67034149 71.27833557]
[109.94770050 57.65502167]
[116.22505951 44.03170776]
[122.50241852 30.40839005]
[128.77978516 16.78507423]
[135.05714417 3.16175818]
[141.33450317 -10.46155834]
[147.30606079 -24.22166061]
[144.37796021 -42.40153122]
[158.64988708 -52.61323166]
[164.10523987 -66.58602905]
[169.56060791 -80.55882263]
[163.46112061 -94.89179993]
[169.19267273 -108.98448944]
[182.89456177 -114.71108246]
[188.34991455 -128.68388367]
[193.80528259 -142.65667725]
[199.26063538 -156.62947083]
[204.71598816 -170.60227966]
[204.92195129 -179.73437500]
[210.35798645 -184.74150085]
[216.02078247 -198.63153076]
[221.68356323 -212.52156067]
[227.03474426 -226.53457642]
[231.96633911 -240.70071411]
[236.79234314 -254.90316772]
[241.61833191 -269.10562134]
[246.44433594 -283.30807495]
[251.27033997 -297.51052856]
[238.08593750 -304.74539185]
[226.35829163 -314.15991211]
[216.44377136 -325.46801758]
[208.64366150 -338.32608032]
[203.19502258 -352.34332275]
[200.26339722 -367.09381104]
[199.93791199 -382.12927246]
[202.22842407 -396.99279785]
[207.06535339 -411.23272705]
[214.30169678 -424.41629028]
[223.71755981 -436.14288330]
[235.02679443 -446.05612183]
[247.88572693 -453.85476685]
[261.90359497 -459.30181885]
[276.65441895 -462.23175049]
[291.68991089 -462.55554199]
[306.55319214 -460.26333618]
[320.79257202 -455.42480469]
[333.97531128 -448.18698120]
[345.70080566 -438.76977539]
[355.61276245 -427.45941162]
[363.40997314 -414.59960938]
[368.85543823 -400.58111572]
[371.78369141 -385.82995605]
[372.10577393 -370.79443359]
[369.81188965 -355.93142700]
[364.97174072 -341.69259644]
[357.73239136 -328.51068115]
[348.31387329 -316.78622437]
[337.00241089 -306.87554932]
[324.14169312 -299.07980347]
[310.12258911 -293.63592529]
[295.37112427 -290.70935059]
[280.33554077 -290.38897705]
[265.47277832 -292.68453979]
[260.64678955 -278.48208618]
[255.82078552 -264.27963257]
[250.99479675 -250.07716370]
[246.16879272 -235.87471008]
[246.99314880 -228.53018188]
[241.16377258 -221.49766541]
[242.33656311 -218.17247009]
[241.95701599 -214.11401367]
[239.69807434 -210.05810547]
[235.57359314 -206.85876465]
[229.91079712 -192.96873474]
[224.24801636 -179.07872009]
[218.68879700 -165.14691162]
[213.23342896 -151.17411804]
[207.77807617 -137.20132446]
[202.32272339 -123.22852325]
[196.86735535 -109.25572205]
[203.06436157 -95.76007080]
[197.73091125 -81.51194763]
[183.53340149 -75.10346985]
[178.07804871 -61.13067245]
[172.62268066 -47.15787125]
[177.19084167 -35.95704269]
[172.76023865 -24.27142906]
[161.19609070 -18.55887413]
[162.21922302 -15.18462849]
[161.65884399 -11.14717579]
[159.22103882 -7.19617558]
[154.95782471 -4.18419695]
[148.68046570 9.43911934]
[142.40309143 23.06243515]
[136.12573242 36.68575287]
[129.84837341 50.30906677]
[123.57101440 63.93238449]
[117.29365540 77.55570221]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.09274292 128.06828308]
[99.28120422 143.73739624]
[87.44496918 152.77911377]
[89.63342285 168.44824219]
[77.79718781 177.48995972]
[72.34182739 191.46275330]
[73.13070679 196.62268066]
[71.97682190 201.11955261]
[69.45808411 204.32438660]
[66.31826782 205.92872620]
[60.24443436 219.64398193]
[54.17059708 233.35925293]
[48.09676361 247.07452393]
[42.02293015 260.78979492]
[35.94909668 274.50506592]
[35.33557510 283.61886597]
[29.68137741 288.37826538]
[23.40401649 302.00155640]
[17.12665558 315.62487793]
[10.84929562 329.24819946]
[4.57193470 342.87152100]
[-1.29702604 356.67568970]
[-6.75238323 370.64849854]
[-12.20773983 384.62127686]
[-6.10825872 398.95425415]
[-11.83981419 413.04693604]
[-25.54170227 418.77355957]
[-30.99705887 432.74633789]
[-36.45241547 446.71914673]
[-41.90777206 460.69192505]
[-41.11890030 465.85186768]
[-42.27277756 470.34872437]
[-44.79151917 473.55355835]
[-47.93133926 475.15789795]
[-54.00517273 488.87316895]
[-60.07900620 502.58843994]
[-66.15283966 516.30371094]
[-53.79436111 524.88647461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 209]
[31 208]
[32 207]
[33 206]
[34 202]
[35 201]
[36 200]
[37 199]
[40 196]
[41 195]
[42 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[58 178]
[59 177]
[61 175]
[63 173]
[64 172]
[66 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 163]
[78 159]
[80 156]
[81 155]
[82 154]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[91 146]
[92 145]
[93 144]
[94 140]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
