%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[93.15338898 530.25634766]
[94.13114166 514.98211670]
[102.10510254 501.91784668]
[115.24289703 494.06567383]
[114.35008240 479.09225464]
[105.86895752 466.84808350]
[112.77114105 452.61184692]
[111.87832642 437.63845825]
[110.98551178 422.66503906]
[102.14917755 414.40393066]
[101.28281403 401.93664551]
[109.39496613 391.90890503]
[108.72518158 376.92385864]
[108.05539703 361.93884277]
[107.38561249 346.95379639]
[106.71582794 331.96875000]
[98.41793823 319.59967041]
[105.53131104 305.46777344]
[104.86152649 290.48272705]
[104.19174194 275.49768066]
[100.75270844 268.95590210]
[103.62522125 260.28491211]
[103.17861938 245.29154968]
[102.73200989 230.29820251]
[102.28540039 215.30485535]
[101.83879852 200.31150818]
[100.94598389 185.33808899]
[99.60774994 170.39790344]
[88.75352478 156.60832214]
[96.63987732 139.96839905]
[95.07935333 125.04979706]
[93.51882935 110.13118744]
[91.73635864 95.23747253]
[89.73234558 80.37194061]
[80.22069550 67.72919464]
[86.18825531 54.08231354]
[83.74253082 39.28304291]
[80.85725403 24.56315041]
[70.60787201 16.73288918]
[68.50776672 4.41325951]
[75.14510345 -5.69971609]
[72.47930908 -20.46093369]
[69.81351471 -35.22214890]
[67.14772034 -49.98336792]
[62.11080170 -64.11239624]
[54.83757401 -77.23109436]
[47.56434250 -90.34978485]
[40.29111481 -103.46848297]
[33.01788330 -116.58717346]
[25.74465370 -129.70587158]
[26.41189003 -114.72071838]
[23.38154030 -100.03000641]
[16.83891106 -86.53208160]
[7.18408775 -75.05233765]
[-4.99253368 -66.29277802]
[-18.94634819 -60.78905106]
[-33.82407379 -58.87770081]
[-48.71593475 -60.67561722]
[-62.71128464 -66.07285309]
[-74.95430756 -74.73937225]
[-84.69632721 -86.14520264]
[-91.34162903 -99.59288025]
[-94.48384094 -114.26007080]
[-93.93081665 -129.24987793]
[-89.71637726 -143.64564514]
[-82.09823608 -156.56710815]
[-71.54224396 -167.22407532]
[-58.69390488 -174.96488953]
[-44.33889771 -179.31619263]
[-29.35504150 -180.01188660]
[-14.65859985 -177.00946045]
[-1.14826798 -170.49247742]
[10.34979248 -160.85948181]
[19.13248444 -148.69950867]
[16.68675613 -163.49877930]
[14.24102974 -178.29804993]
[4.22932673 -186.42999268]
[2.49694824 -198.80668640]
[9.43244743 -208.71757507]
[7.20732975 -223.55160522]
[4.98221254 -238.38565063]
[2.75709558 -253.21969604]
[-8.12203503 -242.89282227]
[-22.99922180 -244.80836487]
[-30.90755463 -257.55429077]
[-26.01730728 -271.73474121]
[-11.93338585 -276.89645386]
[0.96114516 -269.23574829]
[-0.15450352 -284.19418335]
[-1.27015221 -299.15264893]
[-2.38580084 -314.11111450]
[-17.23362160 -316.75552368]
[-30.95698738 -323.01013184]
[-42.69323349 -332.48175049]
[-51.70461273 -344.57495117]
[-57.42465973 -358.52960205]
[-59.49380875 -373.46844482]
[-57.78199005 -388.45245361]
[-52.39680862 -402.53970337]
[-43.67678452 -414.84466553]
[-32.17006683 -424.59384155]
[-18.59997559 -431.17437744]
[-3.81953621 -434.17260742]
[11.24213791 -433.40008545]
[25.63825798 -428.90536499]
[38.46387100 -420.97097778]
[48.91275024 -410.09570312]
[56.32806778 -396.96313477]
[60.24369431 -382.39886475]
[60.41348648 -367.31832886]
[56.82677078 -352.66955566]
[49.70901489 -339.37338257]
[39.50764084 -328.26559448]
[26.86392403 -320.04446411]
[12.57265282 -315.22674561]
[13.68830109 -300.26831055]
[14.80395031 -285.30984497]
[15.91959858 -270.35137939]
[17.59113884 -255.44480896]
[19.81625557 -240.61077881]
[22.04137421 -225.77673340]
[24.26649094 -210.94268799]
[35.92224121 -197.82359314]
[29.04030037 -180.74377441]
[31.48602676 -165.94450378]
[33.93175507 -151.14523315]
[38.86334991 -136.97909546]
[46.13657761 -123.86040497]
[53.40980911 -110.74170685]
[60.68303680 -97.62301636]
[67.95626831 -84.50431824]
[75.22949219 -71.38562775]
[74.60389709 -86.37257385]
[77.82664490 -101.02228546]
[84.68397522 -114.36308289]
[94.72106171 -125.51013947]
[107.27219391 -133.72409058]
[121.50489807 -138.46015930]
[136.47515869 -139.40419006]
[151.19006348 -136.49359131]
[164.67361450 -129.92140198]
[176.03150940 -120.12353516]
[184.51042175 -107.74984741]
[189.54795837 -93.62104034]
[190.81001282 -78.67422485]
[188.21286011 -63.90077591]
[181.92878723 -50.28055573]
[172.37457275 -38.71694946]
[160.18391418 -29.97693062]
[146.16539001 -24.64019012]
[131.24877930 -23.06069565]
[116.42345428 -25.34320831]
[102.67273712 -31.33633995]
[90.90864563 -40.64258575]
[81.90893555 -52.64916229]
[84.57472992 -37.88794708]
[87.24052429 -23.12672806]
[89.90631866 -8.36551189]
[101.94750977 4.40072346]
[95.57714844 21.67787743]
[98.46242523 36.39776993]
[100.71093750 38.07177734]
[102.43183899 40.73731995]
[103.24414062 44.19789505]
[102.84496307 48.12284088]
[101.05378723 52.07829666]
[110.42209625 63.65776062]
[104.59787750 78.36792755]
[106.60189056 93.23345947]
[109.94493866 97.27548981]
[110.78533173 102.90283966]
[108.43743134 108.57066345]
[109.99795532 123.48927307]
[111.55847931 138.40788269]
[121.06840515 147.12132263]
[122.06104279 159.57917786]
[114.54793549 169.05967712]
[115.88616943 183.99986267]
[118.50892639 187.46037292]
[119.76750183 191.19941711]
[119.74183655 194.75395203]
[118.65405273 197.73445129]
[116.83214569 199.86489868]
[117.27875519 214.85824585]
[117.72535706 229.85159302]
[118.17196655 244.84494019]
[118.61856842 259.83828735]
[119.17678070 274.82791138]
[119.84656525 289.81295776]
[120.51634979 304.79797363]
[128.86215210 318.23889160]
[121.70086670 331.29898071]
[122.37065125 346.28399658]
[123.04043579 361.26904297]
[123.71022034 376.25408936]
[124.38000488 391.23913574]
[134.64749146 406.52508545]
[125.95891571 421.77221680]
[126.85173035 436.74563599]
[127.74454498 451.71902466]
[136.28953552 465.03421021]
[129.32348633 478.19946289]
[130.21630859 493.17285156]
[144.19410706 499.40823364]
[153.66400146 511.43234253]
[156.44987488 526.48217773]
[151.91157532 541.09936523]
[141.09194946 551.92498779]
[126.47727203 556.47143555]
[111.42589569 553.69390869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[7 200]
[8 199]
[9 198]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[18 190]
[19 189]
[20 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 178]
[28 177]
[30 174]
[31 173]
[32 172]
[33 169]
[34 168]
[36 166]
[37 161]
[38 160]
[41 158]
[42 157]
[43 156]
[44 155]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[74 126]
[75 125]
[76 124]
[79 122]
[80 121]
[81 120]
[82 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
