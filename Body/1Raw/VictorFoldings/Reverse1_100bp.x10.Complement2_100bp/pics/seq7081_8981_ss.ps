%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[58.09928513 564.69799805]
[50.04054260 577.38488770]
[40.13951492 588.69287109]
[28.62829590 598.35681152]
[15.77672863 606.15026855]
[1.88607109 611.89050293]
[-12.71806049 615.44293213]
[-27.69332314 616.72430420]
[-42.68867493 615.70458984]
[-57.35260773 612.40771484]
[-71.34136963 606.91088867]
[-84.32705688 599.34301758]
[-96.00524902 589.88153076]
[-106.10221100 578.74816895]
[-114.38124084 566.20391846]
[-120.64826965 552.54284668]
[-124.75639343 538.08520508]
[-126.60931396 523.16986084]
[-126.16358948 508.14645386]
[-123.42967224 493.36721802]
[-118.47164154 479.17855835]
[-111.40573120 465.91305542]
[-102.39757538 453.88171387]
[-91.65833282 443.36651611]
[-79.43975067 434.61398315]
[-66.02824402 427.82931519]
[-51.73820496 423.17150879]
[-36.90460587 420.74975586]
[-21.87517548 420.62084961]
[-7.00221968 422.78778076]
[-2.60122156 408.44793701]
[1.79977643 394.10809326]
[6.20077467 379.76821899]
[10.60177231 365.42837524]
[6.93917227 350.99111938]
[18.38492203 340.06842041]
[22.78591919 325.72857666]
[15.60232067 312.73120117]
[19.86128235 298.12585449]
[33.54281998 290.67916870]
[29.88022041 276.24191284]
[41.32596970 265.31921387]
[45.72696686 250.97935486]
[44.53425598 248.44252014]
[44.27455902 245.28036499]
[45.19107437 241.84593201]
[47.39484406 238.57362366]
[50.84033966 235.93118286]
[56.08705902 221.87870789]
[61.33377838 207.82624817]
[66.58049774 193.77377319]
[71.82721710 179.72129822]
[76.22821045 165.38145447]
[79.76788330 150.80508423]
[83.30755615 136.22869873]
[86.84722900 121.65232849]
[90.38690186 107.07595062]
[80.09770203 117.99073029]
[66.59198761 124.51725769]
[51.64666367 125.79687500]
[37.22805405 121.66121674]
[25.23316956 112.65440369]
[17.24014282 99.96143341]
[14.30059719 85.25228119]
[16.80127716 70.46219635]
[24.41317558 57.53706741]
[36.13481903 48.17741394]
[50.42402267 43.61466217]
[65.40079498 44.44911957]
[79.09468079 50.57099915]
[89.70401764 61.17486191]
[95.83296967 74.86558533]
[96.67485809 89.84429169]
[103.35505676 76.41390991]
[102.57325745 60.61203384]
[115.16895294 52.66234207]
[121.84915161 39.23196793]
[128.52934265 25.80158997]
[135.20953369 12.37121391]
[135.18139648 5.75980425]
[138.06369019 0.86190534]
[142.29379272 -1.35512590]
[149.37091064 -14.58065319]
[156.44801331 -27.80618095]
[163.52511597 -41.03170776]
[170.50357056 -54.30955505]
[177.38298035 -67.63898468]
[169.20610046 -80.56514740]
[168.60113525 -95.74839020]
[175.63049316 -109.10707855]
[188.31774902 -117.10017395]
[203.20214844 -117.66576385]
[210.08157349 -130.99519348]
[216.96098328 -144.32461548]
[223.84039307 -157.65405273]
[224.99528503 -166.71517944]
[230.92274475 -171.12959290]
[237.99984741 -184.35511780]
[245.07695007 -197.58064270]
[252.15406799 -210.80616760]
[240.02114868 -219.66836548]
[229.23973083 -230.13293457]
[220.01968384 -241.99620056]
[212.54049683 -255.02722168]
[206.94772339 -268.97238159]
[203.35025024 -283.56018066]
[201.81808472 -298.50671387]
[202.38107300 -313.52099609]
[205.02824402 -328.31082153]
[209.70806885 -342.58825684]
[216.32945251 -356.07540894]
[224.76351929 -368.50976562]
[234.84606934 -379.64923096]
[246.38087463 -389.27703857]
[259.14340210 -397.20571899]
[272.88522339 -403.28100586]
[287.33880615 -407.38458252]
[302.22286987 -409.43658447]
[317.24768066 -409.39706421]
[332.12075806 -407.26684570]
[346.55258179 -403.08731079]
[360.26226807 -396.93988037]
[372.98291016 -388.94421387]
[384.46694946 -379.25588989]
[394.49078369 -368.06356812]
[402.85937500 -355.58505249]
[409.40972900 -342.06326294]
[414.01443481 -327.76141357]
[416.58380127 -312.95788574]
[417.06784058 -297.94082642]
[415.45712280 -283.00256348]
[411.78298950 -268.43386841]
[406.11697388 -254.51832581]
[398.56936646 -241.52679443]
[389.28707886 -229.71217346]
[378.45077515 -219.30442810]
[366.27145386 -210.50616455]
[352.98611450 -203.48861694]
[338.85336304 -198.38839722]
[324.14834595 -195.30479431]
[309.15728760 -194.29782104]
[294.17196655 -195.38706970]
[279.48410034 -198.55134583]
[265.37957764 -203.72906494]
[258.30249023 -190.50354004]
[251.22537231 -177.27801514]
[244.14826965 -164.05247498]
[237.16981506 -150.77462769]
[230.29040527 -137.44520569]
[223.41099548 -124.11577606]
[216.53158569 -110.78634644]
[224.69343567 -98.32642365]
[225.52825928 -83.35448456]
[218.71188354 -69.88587952]
[205.98556519 -61.58300781]
[190.71241760 -60.75957108]
[183.83299255 -47.43014145]
[183.55873108 -40.04457855]
[176.75064087 -33.95460129]
[169.67353821 -20.72907639]
[162.59643555 -7.50354815]
[155.51933289 5.72197962]
[148.63990784 19.05140877]
[141.95971680 32.48178482]
[135.27952576 45.91215897]
[128.59933472 59.34253693]
[129.85894775 74.18378448]
[116.78543091 83.09410858]
[110.10523987 96.52448273]
[104.96327972 110.61562347]
[101.42360687 125.19200134]
[97.88393402 139.76837158]
[94.34426117 154.34475708]
[90.80458832 168.92112732]
[103.06513977 160.27943420]
[118.06480408 160.37939453]
[130.20907593 169.18373108]
[134.96846008 183.40866089]
[130.56779480 197.74861145]
[118.64844513 206.85514832]
[103.65602112 207.33175659]
[91.18232727 199.00067139]
[85.87968445 184.96801758]
[80.63296509 199.02049255]
[75.38624573 213.07296753]
[70.13953400 227.12542725]
[64.89281464 241.17790222]
[60.06681442 255.38035583]
[55.66581726 269.72021484]
[59.01362991 285.18316650]
[47.88266754 295.08016968]
[55.03129196 308.91979980]
[50.36377716 323.39974976]
[37.12576675 330.12957764]
[32.72476959 344.46942139]
[36.07257843 359.93237305]
[24.94161987 369.82937622]
[20.54062080 384.16921997]
[16.13962364 398.50906372]
[11.73862553 412.84893799]
[7.33762741 427.18878174]
[20.86554909 433.73825073]
[33.23509216 442.27609253]
[44.15629196 452.60217285]
[53.37314606 464.47442627]
[60.66959763 477.61453247]
[65.87460327 491.71444702]
[68.86614990 506.44372559]
[69.57411957 521.45703125]
[67.98190308 536.40240479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[36 195]
[37 194]
[40 191]
[42 189]
[43 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[73 169]
[74 168]
[76 166]
[77 165]
[78 164]
[79 163]
[82 162]
[83 161]
[84 160]
[85 159]
[86 157]
[87 156]
[92 151]
[93 150]
[94 149]
[95 148]
[97 147]
[98 146]
[99 145]
[100 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
