%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[92.13824463 927.43664551]
[77.30274200 929.71459961]
[62.32632828 930.70886230]
[47.31988525 930.41192627]
[32.39451981 928.82611084]
[17.66073608 925.96307373]
[3.22761798 921.84399414]
[-10.79797554 916.49945068]
[-24.31220055 909.96899414]
[-37.21500015 902.30090332]
[-49.41084671 893.55206299]
[-60.80944824 883.78717041]
[-71.32640076 873.07849121]
[-80.88385010 861.50537109]
[-89.41103363 849.15350342]
[-96.84481049 836.11431885]
[-103.13014984 822.48437500]
[-108.22052002 808.36456299]
[-112.07822418 793.85937500]
[-114.67469788 779.07629395]
[-115.99073029 764.12475586]
[-116.01657104 749.11535645]
[-114.75202179 734.15936279]
[-112.20645905 719.36743164]
[-108.39871979 704.84906006]
[-103.35700226 690.71179199]
[-97.11862183 677.06024170]
[-89.72978210 663.99554443]
[-81.24517822 651.61444092]
[-71.72763062 640.00848389]
[-61.24760818 629.26367188]
[-49.88269806 619.45959473]
[-37.71704483 610.66876221]
[-24.84072113 602.95635986]
[-11.34906101 596.37939453]
[2.65804815 590.98657227]
[17.07690048 586.81787109]
[31.80073929 583.90411377]
[46.72055817 582.26684570]
[61.72588730 581.91827393]
[76.70563507 582.86096191]
[78.93074799 568.02691650]
[81.15586853 553.19287109]
[83.38098907 538.35882568]
[85.60610199 523.52478027]
[86.49891663 508.55136108]
[86.05231476 493.55801392]
[85.60570526 478.56466675]
[85.15910339 463.57131958]
[84.71249390 448.57797241]
[84.26589203 433.58462524]
[71.27778625 430.02026367]
[59.80496216 422.93344116]
[50.78121185 412.88980103]
[44.94410324 400.69616699]
[42.77473831 387.33560181]
[44.45808411 373.88818359]
[49.86725998 361.44375610]
[58.57303619 351.01358032]
[69.87789154 343.44808960]
[82.87189484 339.36767578]
[82.87189484 324.36767578]
[82.87189484 309.36767578]
[82.87189484 294.36767578]
[82.87189484 279.36767578]
[82.87189484 264.36767578]
[82.87189484 249.36767578]
[75.13459015 236.64039612]
[82.87189484 222.84022522]
[70.58122253 231.43904114]
[56.15279007 227.33778381]
[50.22269440 213.55975342]
[57.16238403 200.26161194]
[71.85617828 197.24623108]
[83.47164917 206.73497009]
[84.58729553 191.77651978]
[85.70294952 176.81806946]
[83.06564331 169.91397095]
[86.94818878 161.64573669]
[88.28642273 146.70555115]
[89.62465668 131.76538086]
[90.96289062 116.82518768]
[81.75296783 105.63932800]
[83.04565430 91.20758820]
[94.09692383 81.83657837]
[95.43515778 66.89639282]
[96.77339172 51.95620728]
[94.42207336 43.12959290]
[98.24439240 36.80411148]
[99.80490875 21.88550568]
[101.03189087 6.93577147]
[92.41039276 -9.33541012]
[102.63805389 -23.59591293]
[95.52468109 -37.72780991]
[103.82256317 -50.09689713]
[104.49234772 -65.08193970]
[97.37897491 -79.21383667]
[105.67686462 -91.58292389]
[106.34664917 -106.56796265]
[92.44096375 -112.65042114]
[81.67429352 -123.34824371]
[75.50274658 -137.21461487]
[74.76096344 -152.37423706]
[79.54927826 -166.77690125]
[89.22010040 -178.47474670]
[102.46553040 -185.88574219]
[117.49423981 -188.00762939]
[132.27371216 -184.55340576]
[144.80514526 -175.99026489]
[153.39378357 -163.47627258]
[156.87805176 -148.70385742]
[154.78675842 -133.67086792]
[147.40272522 -120.41038513]
[135.72456360 -110.71578217]
[121.33168793 -105.89817810]
[120.66190338 -90.91313934]
[127.82318115 -77.85307312]
[119.47738647 -64.41214752]
[118.80760193 -49.42711258]
[125.96888733 -36.36704636]
[117.62309265 -22.92612648]
[125.55203247 -13.79056740]
[125.11666107 -1.30080259]
[116.00529480 7.82858753]
[118.05963135 10.69424915]
[118.82803345 14.69732475]
[117.79101562 19.22257423]
[114.72351837 23.44602776]
[113.16299438 38.36463165]
[111.71357727 53.29444122]
[110.37534332 68.23462677]
[109.03710938 83.17481232]
[118.24703217 94.36067200]
[116.95434570 108.79241180]
[105.90307617 118.16342163]
[104.56484222 133.10360718]
[103.22660828 148.04379272]
[101.88837433 162.98397827]
[100.66139984 177.93371582]
[99.54575348 192.89216614]
[98.43010712 207.85061646]
[97.87189484 222.84022522]
[105.60919189 236.64039612]
[97.87189484 249.36767578]
[97.87189484 264.36767578]
[97.87189484 279.36767578]
[97.87189484 294.36767578]
[97.87189484 309.36767578]
[97.87189484 324.36767578]
[97.87189484 339.36767578]
[113.57834625 344.85858154]
[126.43590546 355.37866211]
[134.90168762 369.64285278]
[137.96763611 385.91815186]
[135.28047180 402.23425293]
[127.18228912 416.62197876]
[114.66719818 427.35104370]
[99.25923920 433.13800049]
[99.70584869 448.13137817]
[100.15245056 463.12472534]
[100.59906006 478.11807251]
[101.04566193 493.11141968]
[101.49227142 508.10476685]
[109.24239349 495.26205444]
[121.74968719 486.98147583]
[136.59918213 484.86193848]
[150.92367554 489.31265259]
[161.95733643 499.47427368]
[167.56973267 513.38476562]
[166.67718506 528.35815430]
[159.45205688 541.50341797]
[147.28939819 550.28234863]
[132.53761292 552.99987793]
[118.04505920 549.13128662]
[106.61001587 539.42358398]
[100.44014740 525.74987793]
[98.21502686 540.58392334]
[95.98991394 555.41796875]
[93.76479340 570.25201416]
[91.53968048 585.08605957]
[106.13674164 588.57995605]
[120.37940979 593.31573486]
[134.16224670 599.25842285]
[147.38317871 606.36389160]
[159.94436646 614.57965088]
[171.75276184 623.84478760]
[182.72097778 634.09075928]
[192.76777649 645.24169922]
[201.81880188 657.21496582]
[209.80702209 669.92205811]
[216.67329407 683.26879883]
[222.36679077 697.15643311]
[226.84535217 711.48205566]
[230.07583618 726.13964844]
[232.03430176 741.02075195]
[232.70625305 756.01507568]
[232.08673096 771.01165771]
[230.18031311 785.89947510]
[227.00111389 800.56829834]
[222.57266235 814.90948486]
[216.92776489 828.81689453]
[210.10820007 842.18756104]
[202.16447449 854.92254639]
[193.15538025 866.92742920]
[183.14762878 878.11340332]
[172.21531677 888.39764404]
[160.43937683 897.70404053]
[147.90701294 905.96368408]
[134.71098328 913.11535645]
[120.94902039 919.10614014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[69 142]
[75 141]
[76 140]
[77 139]
[79 138]
[80 137]
[81 136]
[82 135]
[85 132]
[86 131]
[87 130]
[89 129]
[90 128]
[91 124]
[93 121]
[95 119]
[96 118]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
