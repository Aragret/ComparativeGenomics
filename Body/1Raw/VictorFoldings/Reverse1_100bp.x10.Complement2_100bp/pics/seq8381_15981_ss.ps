%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[229.21954346 491.34768677]
[227.21553040 476.48214722]
[225.21151733 461.61660767]
[223.20750427 446.75109863]
[221.20349121 431.88555908]
[219.19947815 417.02005005]
[202.40429688 413.79916382]
[187.70257568 405.01531982]
[176.87640381 391.71356201]
[171.24484253 375.48782349]
[171.50312805 358.28982544]
[177.63699341 342.19439697]
[188.92230225 329.14913940]
[204.01046753 320.73864746]
[201.34468079 305.97744751]
[198.67887878 291.21621704]
[196.01309204 276.45498657]
[193.34729004 261.69378662]
[190.68150330 246.93257141]
[184.81253052 233.12838745]
[176.03193665 220.96693420]
[162.56642151 223.24664307]
[149.36898804 219.48414612]
[139.03077698 210.35888672]
[133.60704041 197.60893250]
[134.20869446 183.70014954]
[140.77528381 171.34931946]
[132.17671204 159.05848694]
[123.57815552 146.76765442]
[114.97959137 134.47680664]
[106.38102722 122.18597412]
[97.78246307 109.89513397]
[90.94866943 105.62057495]
[89.14897919 97.35668182]
[80.73435974 84.93918610]
[72.31974030 72.52169037]
[63.53913879 60.36023331]
[54.31203842 48.53396606]
[44.99715805 36.77671432]
[35.68227386 25.01946259]
[26.36739159 13.26221180]
[16.87849236 1.64494824]
[7.21768236 -9.82975197]
[-2.44312811 -21.30445290]
[-12.10393810 -32.77915192]
[-21.76474953 -44.25385284]
[-31.42556000 -55.72855377]
[-41.08636856 -67.20325470]
[-53.40038300 -58.61952972]
[-66.44394684 -51.19115829]
[-80.10897064 -44.97969055]
[-94.28222656 -40.03659439]
[-108.84626007 -36.40283966]
[-123.68038177 -34.10852814]
[-138.66168213 -33.17267609]
[-153.66601562 -33.60304260]
[-168.56904602 -35.39605331]
[-183.24728394 -38.53685379]
[-197.57910156 -42.99941635]
[-211.44572449 -48.74676514]
[-224.73225403 -55.73127365]
[-237.32858276 -63.89506531]
[-249.13035583 -73.17049408]
[-260.03976440 -83.48069000]
[-269.96640015 -94.74022675]
[-278.82800293 -106.85579681]
[-286.55117798 -119.72700500]
[-293.07186890 -133.24719238]
[-298.33609009 -147.30433655]
[-302.30020142 -161.78195190]
[-304.93136597 -176.56004333]
[-306.20776367 -191.51618958]
[-306.11880493 -206.52642822]
[-304.66528320 -221.46638489]
[-301.85919189 -236.21226501]
[-297.72378540 -250.64187622]
[-292.29336548 -264.63565063]
[-285.61288452 -278.07763672]
[-277.73773193 -290.85641479]
[-268.73318481 -302.86611938]
[-258.67382812 -314.00723267]
[-247.64300537 -324.18743896]
[-235.73214722 -333.32235718]
[-223.03994751 -341.33630371]
[-209.67158508 -348.16287231]
[-195.73782349 -353.74548340]
[-181.35414124 -358.03790283]
[-166.63970947 -361.00454712]
[-151.71647644 -362.62081909]
[-136.70809937 -362.87335205]
[-121.73893738 -361.76004028]
[-106.93304443 -359.29010010]
[-92.41309357 -355.48400879]
[-78.29940796 -350.37329102]
[-64.70895386 -344.00033569]
[-51.75433731 -336.41790771]
[-39.54290390 -327.68887329]
[-28.17585182 -317.88552856]
[-17.74736786 -307.08914185]
[-8.34387016 -295.38916016]
[-0.04327958 -282.88256836]
[7.08562040 -269.67294312]
[12.98375702 -255.86978149]
[17.60225487 -241.58744812]
[20.90284157 -226.94432068]
[22.85816956 -212.06172180]
[23.45203590 -197.06295776]
[22.67951584 -182.07235718]
[20.54701614 -167.21409607]
[17.07220268 -152.61132812]
[12.28387356 -138.38504028]
[6.22170496 -124.65313721]
[-1.06406856 -111.52938843]
[-9.51307392 -99.12255096]
[-19.05529785 -87.53543854]
[-29.61166954 -76.86405945]
[-19.95085907 -65.38936615]
[-10.29004860 -53.91466141]
[-0.62923843 -42.43996429]
[9.03157234 -30.96526146]
[18.69238281 -19.49056244]
[28.35319328 -8.01586246]
[32.95052719 -6.72220373]
[36.78400421 -2.52679086]
[38.12464142 3.94732881]
[47.43952560 15.70458031]
[56.75440979 27.46183205]
[66.06929016 39.21908188]
[72.68692017 42.50979614]
[75.43376923 51.22143173]
[78.19251251 51.71890259]
[80.92042542 53.33912277]
[83.18888092 56.07582092]
[84.57942963 59.76782608]
[84.73723602 64.10707092]
[93.15185547 76.52456665]
[101.56647491 88.94206238]
[110.07330322 101.29656982]
[118.67186737 113.58740997]
[127.27043152 125.87825012]
[135.86898804 138.16908264]
[144.46755981 150.45993042]
[153.06611633 162.75076294]
[169.52270508 161.14678955]
[184.45707703 168.02139282]
[193.83268738 181.41224670]
[195.16816711 197.61015320]
[188.19338989 212.18632507]
[196.97398376 224.34779358]
[194.50697327 209.55204773]
[194.93348694 194.55812073]
[198.23757935 179.92654419]
[204.29573059 166.20434570]
[212.88145447 153.90452576]
[223.67376709 143.48693848]
[236.26918030 135.34104919]
[250.19680786 129.77139282]
[264.93597412 126.98619080]
[279.93560791 127.08958435]
[294.63497925 130.07769775]
[308.48449707 135.83880615]
[320.96643066 144.15756226]
[331.61410522 154.72293091]
[340.02944946 167.13992310]
[345.89785767 180.94433594]
[348.99996948 195.62005615]
[349.21972656 210.61845398]
[346.54901123 225.37876892]
[341.08758545 239.34921265]
[333.03967285 252.00744629]
[322.70614624 262.88027954]
[310.47332764 271.56118774]
[296.79855347 277.72564697]
[282.19305420 281.14315796]
[267.20288086 281.68603516]
[252.38845825 279.33389282]
[238.30360413 274.17471313]
[225.47491455 266.40139771]
[214.38200378 256.30450439]
[205.44271851 244.26676941]
[208.10850525 259.02798462]
[210.77430725 273.78921509]
[213.44009399 288.55041504]
[216.10589600 303.31164551]
[218.77169800 318.07284546]
[231.69271851 319.46771240]
[243.79891968 324.15682983]
[254.26654053 331.81362915]
[262.38525391 341.90985107]
[267.60641479 353.75204468]
[269.58001709 366.52914429]
[268.17828369 379.36795044]
[263.50387573 391.39297485]
[255.88227844 401.78601074]
[245.83938599 409.84182739]
[234.06500244 415.01602173]
[236.06901550 429.88156128]
[238.07302856 444.74707031]
[240.07704163 459.61260986]
[242.08105469 474.47814941]
[244.08508301 489.34365845]
[258.32327271 495.10290527]
[267.76165771 507.21954346]
[269.86132812 522.43420410]
[264.05746460 536.65429688]
[251.91133118 546.05468750]
[236.69012451 548.10662842]
[222.48829651 542.25823975]
[213.12606812 530.08270264]
[211.12182617 514.85510254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[20 149]
[21 148]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[34 137]
[35 136]
[36 135]
[37 130]
[38 128]
[39 127]
[40 126]
[41 125]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
