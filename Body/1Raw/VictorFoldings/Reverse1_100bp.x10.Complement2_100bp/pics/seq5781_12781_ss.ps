%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[147.01225281 464.56484985]
[152.79899597 450.69781494]
[160.50038147 437.79553223]
[169.95965576 426.12063599]
[180.98419189 415.91082764]
[193.34957886 407.37396240]
[186.66938782 393.94360352]
[179.98919678 380.51321411]
[173.30900574 367.08285522]
[170.69746399 366.06402588]
[168.33215332 363.94934082]
[166.63246155 360.82739258]
[165.97804260 356.93685913]
[166.65783691 352.64828491]
[160.78887939 338.84411621]
[154.91992188 325.03994751]
[148.84608459 311.32467651]
[142.56872559 297.70135498]
[136.29136658 284.07803345]
[130.01400757 270.45474243]
[123.73664093 256.83142090]
[122.63835144 271.79113770]
[116.55294800 285.50128174]
[106.19534302 296.35116577]
[92.78233337 303.06616211]
[77.88967133 304.85742188]
[63.26692581 301.51446533]
[50.63196564 293.43005371]
[41.46913147 281.55392456]
[36.85486603 267.28125000]
[37.33124924 252.28883362]
[42.84231186 238.33790588]
[52.74062347 227.06744385]
[65.86334229 219.80146790]
[80.66881561 217.39360046]
[95.41772461 220.12669373]
[108.37736511 227.67968750]
[118.02605438 239.16659546]
[115.14078522 224.44670105]
[112.25550842 209.72680664]
[107.88410950 203.76756287]
[109.43857574 194.76637268]
[106.77278137 180.00515747]
[104.10698700 165.24394226]
[94.23096466 154.09434509]
[99.39253235 139.13877869]
[96.72673798 124.37756348]
[94.06094360 109.61634064]
[86.34970856 122.48246002]
[72.59426880 128.46475220]
[57.92506027 125.33197784]
[47.81333542 114.25258636]
[46.03051376 99.35890961]
[53.24155045 86.20592499]
[66.75690460 79.69937134]
[81.53567505 82.26602936]
[92.06629181 92.94964600]
[91.17347717 77.97624207]
[90.28065491 63.00283432]
[89.38784027 48.02943039]
[80.84285736 34.71425629]
[87.80889893 21.54901695]
[73.81021118 18.18338013]
[61.34148788 11.01655388]
[51.40926743 0.63743883]
[44.81243134 -12.10617161]
[42.07790756 -26.17683792]
[43.41862106 -40.43193054]
[48.71692276 -53.71641922]
[57.53487015 -64.95645142]
[69.15039825 -73.24617767]
[82.61644745 -77.92071533]
[81.94666290 -92.90575409]
[81.27687836 -107.89079285]
[70.35684967 -115.77542877]
[66.03482819 -128.32655334]
[69.67683411 -140.88911438]
[79.73801422 -148.93908691]
[79.29141235 -163.93243408]
[78.84480286 -178.92578125]
[66.19257355 -187.71368408]
[61.19931793 -202.09841919]
[65.58193970 -216.49482727]
[77.45920563 -225.44293213]
[77.01259613 -240.43627930]
[76.56598663 -255.42964172]
[76.11938477 -270.42297363]
[73.70724487 -274.03347778]
[72.67345428 -277.84078979]
[72.91064453 -281.38751221]
[74.17390442 -284.29797363]
[76.11938477 -286.31619263]
[76.56598663 -301.30953979]
[77.01259613 -316.30288696]
[77.45920563 -331.29623413]
[77.90580750 -346.28961182]
[63.54103088 -350.96185303]
[51.07522964 -359.49298096]
[41.51895142 -371.19146729]
[35.64688110 -385.10891724]
[33.93503952 -400.11712646]
[36.52220154 -414.99942017]
[43.19863129 -428.54940796]
[53.42310715 -439.66860962]
[66.36677551 -447.45565796]
[80.98034668 -451.27929688]
[96.07917023 -450.82955933]
[110.43924713 -446.14288330]
[122.89646912 -437.59921265]
[132.44099426 -425.89114380]
[138.29907227 -411.96780396]
[139.99583435 -396.95788574]
[137.39372253 -382.07818604]
[130.70368958 -368.53491211]
[120.46804810 -357.42599487]
[107.51656342 -349.65194702]
[92.89915466 -345.84298706]
[92.45255280 -330.84963989]
[92.00594330 -315.85629272]
[91.55934143 -300.86294556]
[91.11273193 -285.86959839]
[91.11273193 -270.86959839]
[91.55934143 -255.87623596]
[92.00594330 -240.88288879]
[92.45255280 -225.88954163]
[104.84136200 -217.66424561]
[110.07309723 -203.55421448]
[105.94489288 -188.89778137]
[93.83815765 -179.37239075]
[94.28475952 -164.37904358]
[94.73136902 -149.38568115]
[107.45375061 -138.38659668]
[108.30136871 -121.25194550]
[96.26191711 -108.56057739]
[96.93170166 -93.57553864]
[97.60148621 -78.59049988]
[112.74209595 -74.57946777]
[125.91847992 -66.07544708]
[135.83428955 -53.90079880]
[141.50958252 -39.23972321]
[142.37757874 -23.52304077]
[138.34132385 -8.28859615]
[129.78431702 4.96924353]
[117.53412628 14.94615841]
[102.78230286 20.65620041]
[111.26342773 32.90037537]
[104.36124420 47.13661194]
[105.25406647 62.11001968]
[106.14688110 77.08342743]
[107.03969574 92.05683136]
[108.82215881 106.95054626]
[111.48795319 121.71176147]
[114.15375519 136.47297668]
[124.22044373 148.67840576]
[118.86820221 162.57814026]
[121.53399658 177.33935547]
[124.19979095 192.10057068]
[126.97540283 206.84153748]
[129.86067200 221.56143188]
[132.74594116 236.28132629]
[137.35995483 250.55404663]
[143.63731384 264.17736816]
[149.91467285 277.80068970]
[156.19204712 291.42401123]
[162.46940613 305.04733276]
[167.63845825 309.16949463]
[169.64811707 314.48535156]
[168.72409058 319.17098999]
[174.59306335 332.97515869]
[180.46202087 346.77932739]
[186.73937988 360.40264893]
[193.41957092 373.83303833]
[200.09976196 387.26339722]
[206.77996826 400.69378662]
[221.04846191 395.98309326]
[235.84214783 393.35104370]
[250.85983276 392.85122681]
[265.79577637 394.49383545]
[280.34591675 398.24542236]
[294.21401978 404.02960205]
[307.11773682 411.72857666]
[318.79440308 421.18566895]
[329.00625610 432.20834351]
[337.54541016 444.57214355]
[344.23800659 458.02539062]
[348.94781494 472.29418945]
[351.57894897 487.08801270]
[352.07781982 502.10574341]
[350.43429565 517.04156494]
[346.68182373 531.59149170]
[340.89678955 545.45922852]
[333.19699097 558.36248779]
[323.73916626 570.03857422]
[312.71588135 580.24969482]
[300.35156250 588.78808594]
[286.89788818 595.47985840]
[272.62881470 600.18878174]
[257.83480835 602.81903076]
[242.81704712 603.31695557]
[227.88130188 601.67248535]
[213.33163452 597.91912842]
[199.46424866 592.13323975]
[186.56147766 584.43267822]
[174.88600159 574.97412109]
[164.67552185 563.95019531]
[156.13789368 551.58532715]
[149.44694519 538.13128662]
[144.73890686 523.86187744]
[142.10961914 509.06771851]
[141.61259460 494.04992676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[14 170]
[15 169]
[16 168]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[38 160]
[39 159]
[40 158]
[42 157]
[43 156]
[44 155]
[46 153]
[47 152]
[48 151]
[57 150]
[58 149]
[59 148]
[60 147]
[62 145]
[72 136]
[73 135]
[74 134]
[78 131]
[79 130]
[80 129]
[84 125]
[85 124]
[86 123]
[87 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
