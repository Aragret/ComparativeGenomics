%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[18.78495789 442.17153931]
[11.14054489 455.08459473]
[2.61397862 467.43298340]
[-6.75320005 479.15649414]
[-16.91535568 490.19802856]
[-27.82297707 500.50378418]
[-39.42292404 510.02352905]
[-51.65868378 518.71093750]
[-64.47064209 526.52368164]
[-77.79637909 533.42358398]
[-91.57097626 539.37719727]
[-105.72731781 544.35540771]
[-120.19644165 548.33398438]
[-134.90785217 551.29357910]
[-149.78988647 553.21972656]
[-164.77001953 554.10308838]
[-179.77528381 553.93927002]
[-194.73255920 552.72918701]
[-209.56900024 550.47863770]
[-224.21231079 547.19866943]
[-238.59114075 542.90515137]
[-252.63545227 537.61914062]
[-266.27679443 531.36627197]
[-279.44876099 524.17712402]
[-292.08712769 516.08660889]
[-304.13034058 507.13418579]
[-315.51974487 497.36349487]
[-326.19979858 486.82211304]
[-336.11853027 475.56140137]
[-345.22756958 463.63619995]
[-353.48257446 451.10464478]
[-360.84329224 438.02780151]
[-367.27389526 424.46929932]
[-372.74301147 410.49530029]
[-377.22406006 396.17379761]
[-380.69512939 381.57461548]
[-383.13937378 366.76885986]
[-384.54486084 351.82867432]
[-384.90475464 336.82681274]
[-384.21728516 321.83642578]
[-382.48580933 306.93051147]
[-379.71875000 292.18167114]
[-375.92959595 277.66177368]
[-371.13684082 263.44158936]
[-365.36376953 249.59034729]
[-358.63858032 236.17556763]
[-350.99398804 223.26258850]
[-342.46722412 210.91433716]
[-333.09988403 199.19096375]
[-322.93756104 188.14958191]
[-312.02981567 177.84399414]
[-300.42971802 168.32438660]
[-288.19384766 159.63716125]
[-275.38177490 151.82463074]
[-262.05593872 144.92486572]
[-248.28125000 138.97146606]
[-234.12483215 133.99345398]
[-219.65565491 130.01507568]
[-204.94419861 127.05571747]
[-190.06214905 125.12978363]
[-175.08200073 124.24666595]
[-160.07673645 124.41066742]
[-145.11946106 125.62098694]
[-130.28306580 127.87172699]
[-115.63980103 131.15193176]
[-101.26103210 135.44560242]
[-87.21680450 140.73184204]
[-73.57553101 146.98487854]
[-60.40368271 154.17425537]
[-47.76543045 162.26493835]
[-35.72234344 171.21752930]
[-24.33309555 180.98838806]
[-13.65317535 191.52993774]
[-2.39707994 181.61528015]
[8.85901546 171.70063782]
[20.11511230 161.78598022]
[31.37120819 151.87132263]
[36.07179260 134.96359253]
[54.15388107 131.48228455]
[65.26111603 121.40114594]
[76.36834717 111.32000732]
[87.47558594 101.23886871]
[98.35491943 90.91220093]
[109.00092316 80.34515381]
[119.64693451 69.77809906]
[130.29293823 59.21105576]
[140.93894958 48.64400864]
[151.58496094 38.07695770]
[162.23097229 27.50991249]
[172.87698364 16.94286346]
[183.52299500 6.37581635]
[193.52116394 -4.80615854]
[202.83604431 -16.56340981]
[212.15092468 -28.32066154]
[221.46580505 -40.07791138]
[230.78068542 -51.83516312]
[240.09558105 -63.59241486]
[249.41046143 -75.34966278]
[258.72534180 -87.10691833]
[248.01402283 -97.62831116]
[238.48175049 -109.22865295]
[230.23655701 -121.77651215]
[223.37184143 -135.12971497]
[217.96540833 -149.13694763]
[214.07849121 -163.63949585]
[211.75515747 -178.47303772]
[211.02172852 -193.46951294]
[211.88650513 -208.45898438]
[214.33967590 -223.27162170]
[218.35346985 -237.73956299]
[223.88240051 -251.69889832]
[230.86381531 -264.99145508]
[239.21861267 -277.46661377]
[248.85212708 -288.98300171]
[259.65521240 -299.41015625]
[271.50543213 -308.62994385]
[284.26855469 -316.53784180]
[297.79992676 -323.04431152]
[311.94622803 -328.07559204]
[326.54721069 -331.57467651]
[341.43740845 -333.50192261]
[356.44808960 -333.83547974]
[371.40921021 -332.57162476]
[386.15121460 -329.72460938]
[400.50704956 -325.32672119]
[414.31411743 -319.42776489]
[427.41592407 -312.09463501]
[439.66400146 -303.41040039]
[450.91961670 -293.47341919]
[461.05520630 -282.39633179]
[469.95596313 -270.30462646]
[477.52096558 -257.33535767]
[483.66455078 -243.63540649]
[488.31707764 -229.36003113]
[491.42587280 -214.67100525]
[492.95565796 -199.73474121]
[492.88912964 -184.72050476]
[491.22702026 -169.79838562]
[487.98822021 -155.13748169]
[483.20935059 -140.90390015]
[476.94461060 -127.25894165]
[469.26495361 -114.35719299]
[460.25741577 -102.34485626]
[450.02404785 -91.35802460]
[438.68081665 -81.52119446]
[426.35626221 -72.94582367]
[413.18997192 -65.72908020]
[399.33117676 -59.95273590]
[384.93692017 -55.68223572]
[370.17025757 -52.96597290]
[355.19854736 -51.83472443]
[340.19140625 -52.30130768]
[325.31887817 -54.36043167]
[310.74948120 -57.98877335]
[296.64831543 -63.14521027]
[283.17510986 -69.77132416]
[270.48260498 -77.79203796]
[261.16769409 -66.03478241]
[251.85282898 -54.27753067]
[242.53794861 -42.52027893]
[233.22305298 -30.76302910]
[223.90817261 -19.00577736]
[214.59329224 -7.24852705]
[205.27841187 4.50872421]
[220.03016663 1.79107916]
[233.61134338 8.15909195]
[240.95649719 21.23764992]
[239.32606506 36.14877701]
[229.32817078 47.33098984]
[214.69175720 50.61359787]
[200.87586975 44.77227402]
[193.03347778 31.98568344]
[194.09004211 17.02182579]
[183.44403076 27.58887291]
[172.79801941 38.15592194]
[162.15200806 48.72296906]
[151.50599670 59.29001617]
[140.85998535 69.85706329]
[130.21398926 80.42411041]
[119.56797791 90.99115753]
[108.92196655 101.55820465]
[108.36122131 105.37369537]
[106.12139130 108.92348480]
[102.35884857 111.46322632]
[97.55672455 112.34609985]
[86.44948578 122.42723846]
[75.34225464 132.50837708]
[64.23502350 142.58952332]
[62.83275223 155.41123962]
[53.37397003 163.57917786]
[41.28585815 163.12742615]
[30.02976227 173.04208374]
[18.77366638 182.95672607]
[7.51757145 192.87138367]
[-3.73852444 202.78602600]
[5.37069368 214.71107483]
[13.62586880 227.24250793]
[20.98678207 240.31927490]
[27.41757011 253.87765503]
[32.88690567 267.85159302]
[37.36814117 282.17303467]
[40.83943939 296.77215576]
[43.28389740 311.57788086]
[44.68959808 326.51806641]
[45.04969788 341.51989746]
[44.36244202 356.51031494]
[42.63117599 371.41625977]
[39.86433411 386.16513062]
[36.07539749 400.68505859]
[31.28282928 414.90533447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 195]
[74 194]
[75 193]
[76 192]
[77 191]
[79 188]
[80 187]
[81 186]
[82 185]
[83 181]
[84 180]
[85 179]
[86 178]
[87 177]
[88 176]
[89 175]
[90 174]
[91 173]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[97 159]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
