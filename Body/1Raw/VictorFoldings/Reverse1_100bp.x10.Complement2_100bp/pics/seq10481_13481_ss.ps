%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[116.22483826 600.31933594]
[101.27261353 601.97631836]
[86.27052307 600.85742188]
[71.72953796 597.00073242]
[58.14490128 590.53759766]
[45.97931671 581.68811035]
[35.64712906 570.75372314]
[27.50025940 558.10687256]
[21.81617737 544.17828369]
[18.78848648 529.44232178]
[18.52030563 514.40093994]
[21.02077103 499.56646729]
[26.20471764 485.44409180]
[33.89558029 472.51486206]
[43.83141327 461.21911621]
[55.67380524 451.94158936]
[69.01940918 444.99826050]
[83.41367340 440.62567139]
[98.36634064 438.97268677]
[99.48198700 424.01422119]
[100.59764099 409.05578613]
[101.71328735 394.09732056]
[102.71754456 379.13098145]
[103.61036682 364.15756226]
[104.50318146 349.18417358]
[105.39599609 334.21075439]
[106.28881073 319.23736572]
[106.84702301 304.24774170]
[107.07035065 289.24942017]
[107.29367828 274.25106812]
[106.73546600 259.26144409]
[105.39723206 244.32127380]
[104.05899811 229.38108826]
[102.72076416 214.44090271]
[101.38253021 199.50071716]
[100.04429626 184.56053162]
[88.48551941 175.23689270]
[86.91552734 160.10449219]
[96.77339172 148.04379272]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[88.28642273 53.29444122]
[86.94818878 38.35425568]
[70.17148590 34.23946762]
[55.83457947 24.64830208]
[45.65750885 10.75175095]
[40.85430527 -5.76390028]
[41.98815536 -22.90168762]
[48.90545273 -38.59542847]
[60.75632477 -50.95882416]
[76.09904480 -58.51218033]
[74.09503174 -73.37770844]
[72.09101868 -88.24324036]
[62.57936478 -100.88598633]
[68.54692841 -114.53286743]
[66.54291534 -129.39839172]
[64.53890228 -144.26393127]
[61.87310410 -159.02514648]
[58.55084610 -173.65260315]
[55.22858429 -188.28005981]
[51.90632629 -202.90751648]
[48.58406448 -217.53498840]
[44.82776642 -232.05703735]
[40.64075470 -246.46083069]
[36.45374298 -260.86459351]
[32.26673126 -275.26840210]
[28.07972145 -289.67218018]
[11.14067268 -298.15643311]
[5.87260485 -316.02151489]
[15.17362976 -331.78875732]
[10.55962086 -346.06149292]
[5.94561148 -360.33422852]
[1.33160222 -374.60696411]
[-13.55169201 -372.46325684]
[-28.58319092 -372.86581421]
[-43.33040619 -375.80307007]
[-57.36903763 -381.19055176]
[-70.29515839 -388.87322998]
[-81.73686218 -398.63003540]
[-91.36494446 -410.18026733]
[-98.90238953 -423.19161987]
[-104.13233185 -437.28970337]
[-106.90429688 -452.06887817]
[-107.13851929 -467.10394287]
[-104.82826996 -481.96231079]
[-100.04001617 -496.21643066]
[-92.91152191 -509.45626831]
[-83.64789581 -521.30078125]
[-72.51567078 -531.40930176]
[-59.83513260 -539.49084473]
[-45.97113419 -545.31304932]
[-31.32256699 -548.70825195]
[-16.31090164 -549.57885742]
[-1.36805475 -547.89978027]
[13.07604122 -543.71929932]
[26.60579872 -537.15777588]
[38.83193970 -528.40399170]
[49.40269470 -517.70971680]
[58.01392365 -505.38272095]
[64.41786194 -491.77764893]
[68.43025208 -477.28598022]
[69.93566132 -462.32464600]
[68.89076233 -447.32409668]
[65.32562256 -432.71594238]
[59.34282303 -418.92053223]
[51.11449814 -406.33471680]
[40.87739563 -395.32064819]
[28.92605209 -386.19522095]
[15.60433578 -379.22097778]
[20.21834564 -364.94824219]
[24.83235359 -350.67550659]
[29.44636345 -336.40277100]
[40.48862839 -333.53317261]
[48.86111450 -325.60745239]
[52.40428925 -314.51062012]
[50.12773132 -302.96426392]
[42.48350143 -293.85919189]
[46.67051315 -279.45541382]
[50.85752487 -265.05160522]
[55.04453659 -250.64784241]
[59.23154831 -236.24404907]
[61.62044525 -234.77732849]
[63.57229233 -232.27593994]
[64.69008636 -228.90164185]
[64.64266968 -224.95672607]
[63.21152496 -220.85723877]
[66.53378296 -206.22978210]
[69.85604858 -191.60232544]
[73.17830658 -176.97486877]
[76.50056458 -162.34739685]
[85.39016724 -174.42941284]
[100.19795227 -176.82301331]
[112.44136047 -168.15704346]
[115.10680389 -153.39576721]
[106.66739655 -140.99510193]
[91.95761108 -138.05873108]
[79.40442657 -146.26794434]
[81.40843964 -131.40240479]
[83.41245270 -116.53688049]
[92.78076935 -104.95742035]
[86.95654297 -90.24725342]
[88.96055603 -75.38172150]
[90.96457672 -60.51619339]
[103.68878937 -58.64462662]
[115.50640106 -53.53582382]
[125.60803986 -45.53205490]
[133.29991150 -35.17412186]
[138.05139160 -23.16481209]
[139.53169250 -10.32122898]
[137.63282776 2.48081779]
[132.47747803 14.36652470]
[124.41110229 24.52187538]
[113.97877502 32.24938965]
[101.88837433 37.01602173]
[103.22660828 51.95620728]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.71357727 146.70555115]
[123.55792999 156.82232666]
[124.70226288 171.99285889]
[114.98448181 183.22230530]
[116.32271576 198.16249084]
[117.66094971 213.10266113]
[118.99918365 228.04284668]
[120.33741760 242.98303223]
[121.67565155 257.92321777]
[131.22616577 246.35655212]
[145.95385742 243.51135254]
[159.12541199 250.68838501]
[164.71899414 264.60644531]
[160.17727661 278.90234375]
[147.57667542 287.04019165]
[132.67802429 285.29949951]
[122.29201508 274.47439575]
[122.06868744 289.47274780]
[121.84535980 304.47106934]
[124.38924408 309.02911377]
[124.88117218 313.64553833]
[123.64253235 317.52893066]
[121.26221466 320.13015747]
[120.36940002 335.10357666]
[119.47658539 350.07696533]
[118.58377075 365.05038452]
[117.69095612 380.02380371]
[120.30402374 388.77648926]
[116.67174530 395.21298218]
[115.55609131 410.17141724]
[114.44044495 425.12988281]
[113.32479858 440.08831787]
[127.86682892 443.94113159]
[141.45320129 450.40060425]
[153.62117004 459.24679565]
[163.95629883 470.17840576]
[172.10658264 482.82305908]
[177.79441833 496.75012207]
[180.82608032 511.48526001]
[181.09831238 526.52655029]
[178.60185242 541.36169434]
[173.42170715 555.48547363]
[165.73432922 568.41680908]
[155.80154419 579.71520996]
[143.96165466 588.99591064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[22 194]
[23 192]
[24 191]
[25 190]
[26 189]
[27 188]
[28 184]
[29 183]
[30 182]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[39 166]
[40 165]
[41 164]
[44 161]
[45 160]
[46 159]
[47 158]
[55 147]
[56 146]
[57 145]
[59 143]
[60 142]
[61 141]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
