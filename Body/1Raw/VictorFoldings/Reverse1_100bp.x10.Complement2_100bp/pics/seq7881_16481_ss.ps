%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[151.83755493 741.51519775]
[138.77755737 734.10687256]
[126.59511566 725.32989502]
[115.43305969 715.28717041]
[105.42227173 704.09649658]
[96.68011475 691.88903809]
[89.30908203 678.80798340]
[83.39560699 665.00659180]
[79.00901031 650.64672852]
[76.20072937 635.89678955]
[75.00368500 620.92968750]
[75.43191528 605.92089844]
[77.48040009 591.04638672]
[81.12512207 576.48059082]
[86.32334137 562.39422607]
[93.01412201 548.95245361]
[101.11901093 536.31292725]
[110.54299164 524.62377930]
[121.17556000 514.02209473]
[132.89205933 504.63217163]
[145.55513000 496.56408691]
[159.01628113 489.91241455]
[173.11772156 484.75518799]
[187.69407654 481.15286255]
[185.69006348 466.28735352]
[183.68605042 451.42181396]
[181.68203735 436.55627441]
[179.67802429 421.69076538]
[177.67401123 406.82522583]
[175.55938721 391.97503662]
[173.33427429 377.14099121]
[171.10916138 362.30694580]
[168.88403320 347.47290039]
[166.65892029 332.63885498]
[163.66415405 317.94085693]
[159.90785217 303.41879272]
[156.15155029 288.89672852]
[152.39524841 274.37466431]
[139.47094727 267.06045532]
[135.45465088 252.38652039]
[143.21411133 238.87991333]
[138.60009766 224.60717773]
[133.14474487 210.63438416]
[127.68938446 196.66159058]
[122.23403168 182.68879700]
[116.77867126 168.71598816]
[112.84198761 166.01200867]
[110.56214142 160.80630493]
[111.37572479 154.24508667]
[106.33880615 140.11605835]
[101.30188751 125.98702240]
[88.34888458 123.26524353]
[78.41075897 114.52326202]
[74.05916595 102.02317047]
[76.42012024 88.99956512]
[84.88270569 78.82247162]
[80.05670929 64.62001801]
[75.12511444 50.45388412]
[61.12471008 43.62553024]
[56.21783447 29.22493172]
[62.81390381 15.91976547]
[57.77698898 1.79073596]
[52.74007416 -12.33829403]
[47.70315552 -26.46732330]
[42.66624069 -40.59635162]
[31.36870384 -46.81957626]
[27.46432114 -58.69137192]
[32.52805710 -69.67704773]
[27.70205879 -83.87950897]
[22.87606049 -98.08196259]
[19.51076698 -100.82582092]
[17.40540314 -104.16227722]
[16.59154892 -107.62248993]
[16.94528008 -110.77550507]
[18.21299553 -113.27571106]
[14.24089909 -127.74023438]
[8.95073032 -135.18684387]
[10.31905746 -142.44972229]
[6.56275702 -156.97178650]
[2.80645657 -171.49383545]
[-0.94984418 -186.01589966]
[-15.96648026 -185.06872559]
[-30.89096642 -186.98085022]
[-45.18379211 -191.68315125]
[-58.32827759 -199.00564575]
[-69.84926605 -208.68363953]
[-79.33026886 -220.36726379]
[-86.42856598 -233.63415527]
[-90.88755035 -248.00476074]
[-92.54602814 -262.95956421]
[-91.34406281 -277.95794678]
[-87.32508850 -292.45773315]
[-80.63439941 -305.93481445]
[-71.51385498 -317.90194702]
[-60.29315948 -327.92651367]
[-47.37792969 -335.64620972]
[-33.23504639 -340.78189087]
[-18.37576294 -343.14794922]
[-3.33723640 -342.65884399]
[11.33690071 -339.33224487]
[25.11618805 -333.28845215]
[37.50251389 -324.74588013]
[48.04811859 -314.01336670]
[56.37178421 -301.47888184]
[62.17261887 -287.59555054]
[65.24092102 -272.86523438]
[65.46578217 -257.82046509]
[62.83906555 -243.00502014]
[57.45572662 -228.95454407]
[49.51037598 -216.17691040]
[39.29022217 -205.13403320]
[27.16472626 -196.22511292]
[13.57221508 -189.77220154]
[17.32851601 -175.25013733]
[21.08481598 -160.72808838]
[24.84111786 -146.20602417]
[28.70542336 -131.71232605]
[32.67752075 -117.24780273]
[37.07851791 -102.90795898]
[41.90451431 -88.70550537]
[46.73051071 -74.50304413]
[60.53223419 -63.66425705]
[56.79526901 -45.63327026]
[61.83218384 -31.50424004]
[66.86910248 -17.37520981]
[71.90602112 -3.24618030]
[76.94293213 10.88284969]
[90.46824646 17.01486015]
[95.77766418 31.27195358]
[89.25414276 45.41696548]
[94.46118164 50.66182327]
[94.25916290 59.79402161]
[99.08515930 73.99647522]
[114.69849396 78.52968597]
[124.57315826 91.44545746]
[124.85382843 107.70114136]
[115.43092346 120.95010376]
[120.46783447 135.07913208]
[125.50475311 149.20816040]
[130.75146484 163.26063538]
[136.20683289 177.23342896]
[141.66218567 191.20623779]
[147.11753845 205.17903137]
[152.57290649 219.15182495]
[157.66531372 205.04270935]
[170.01318359 196.52624512]
[185.01106262 196.77886963]
[197.06509399 205.70635986]
[201.67944336 219.97898865]
[197.13307190 234.27340698]
[185.12164307 243.25816345]
[170.12513733 243.58215332]
[157.73617554 235.12361145]
[171.07154846 243.17379761]
[174.67410278 257.95474243]
[166.91729736 270.61837769]
[170.67359924 285.14044189]
[174.42990112 299.66250610]
[178.18620300 314.18453979]
[185.72299194 301.21548462]
[199.78968811 296.00701904]
[213.95518494 300.94039917]
[221.74322510 313.76016235]
[219.59321594 328.60528564]
[208.48811340 338.68875122]
[193.50500488 339.40057373]
[181.49296570 330.41372681]
[183.71807861 345.24777222]
[185.94320679 360.08181763]
[188.16831970 374.91586304]
[190.39343262 389.74990845]
[194.76123047 397.77239990]
[192.53953552 404.82122803]
[194.54356384 419.68673706]
[196.54757690 434.55227661]
[198.55158997 449.41781616]
[200.55560303 464.28332520]
[202.55961609 479.14886475]
[217.56954956 478.76266479]
[232.53323364 480.00164795]
[247.27525330 482.85122681]
[261.62274170 487.27804565]
[275.40750122 493.23016357]
[288.46789551 500.63781738]
[300.65081787 509.41412354]
[311.81341553 519.45623779]
[321.82479858 530.64636230]
[330.56762695 542.85339355]
[337.93936157 555.93408203]
[343.85357666 569.73510742]
[348.24093628 584.09472656]
[351.05001831 598.84454346]
[352.24786377 613.81158447]
[351.82043457 628.82037354]
[349.77276611 643.69500732]
[346.12881470 658.26104736]
[340.93136597 672.34765625]
[334.24130249 685.78979492]
[326.13708496 698.42974854]
[316.71374512 710.11938477]
[306.08172607 720.72167969]
[294.36575317 730.11218262]
[281.70312500 738.18096924]
[268.24230957 744.83337402]
[254.14115906 749.99133301]
[239.56498718 753.59442139]
[224.68469238 755.60046387]
[209.67474365 755.98583984]
[194.71110535 754.74603271]
[179.96923828 751.89569092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 159]
[36 158]
[37 157]
[38 156]
[41 153]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[49 139]
[50 138]
[51 137]
[56 133]
[57 132]
[58 130]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[68 121]
[69 120]
[70 119]
[75 118]
[76 117]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
