%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[162.08518982 550.33673096]
[166.98245239 536.06512451]
[175.40739441 523.54785156]
[186.78562927 513.63830566]
[200.34135437 507.01223755]
[197.45608521 492.29235840]
[194.57081604 477.57247925]
[191.68554688 462.85256958]
[188.80026245 448.13269043]
[176.57034302 435.54714966]
[182.68276978 418.17706299]
[179.57865906 403.50177002]
[176.47454834 388.82644653]
[173.37043762 374.15115356]
[169.72235107 359.60153198]
[165.53533936 345.19775391]
[161.34832764 330.79397583]
[157.16131592 316.39019775]
[142.66365051 312.97213745]
[131.75080872 302.68786621]
[127.42226410 288.22653198]
[130.93644714 273.44320679]
[141.44700623 262.33123779]
[137.26000977 247.92745972]
[133.07299805 233.52368164]
[128.77886963 219.15147400]
[124.37786865 204.81163025]
[119.97686768 190.47177124]
[115.57587433 176.13192749]
[111.17487335 161.79208374]
[100.04391479 151.89506531]
[103.39172363 136.43211365]
[98.99073029 122.09226990]
[94.58972931 107.75241852]
[90.63237762 104.30956268]
[88.88568878 98.89453888]
[90.27804565 92.91973877]
[86.30594635 78.45521545]
[82.33384705 63.99068832]
[78.40801239 78.46783447]
[69.30179596 90.38743591]
[56.36604691 97.98127747]
[41.51971436 100.12287140]
[26.96516228 96.49451447]
[14.86146832 87.63446045]
[7.00414562 74.85703278]
[4.55878115 60.05770493]
[7.88813019 45.43185806]
[16.49830437 33.14915085]
[29.11203384 25.03164864]
[43.85814667 22.28353691]
[58.54914856 25.31248283]
[71.00571442 33.66915894]
[79.37924194 46.11213684]
[78.48642731 31.13873291]
[77.59361267 16.16532707]
[76.70079041 1.19192076]
[75.80797577 -13.78148460]
[74.91516113 -28.75489044]
[73.79951477 -43.71334457]
[72.46128082 -58.65353012]
[71.12304688 -73.59371185]
[65.06513214 -59.87141037]
[54.72928619 -49.00078964]
[41.32976151 -42.25892639]
[26.44071579 -40.43784714]
[11.81130123 -43.75148773]
[-0.83983463 -51.81056976]
[-10.02644825 -63.66831207]
[-14.66930485 -77.93168640]
[-14.22296810 -92.92504883]
[-8.73987103 -106.88698578]
[1.13583589 -118.17726135]
[14.24396515 -125.46951294]
[29.04458809 -127.90705109]
[43.79893875 -125.20352173]
[56.77369308 -117.67652130]
[66.44459534 -106.21031952]
[71.67578888 -92.15041351]
[73.90090942 -106.98445892]
[76.12602234 -121.81850433]
[70.52146149 -136.61375427]
[80.06113434 -148.05245972]
[82.28625488 -162.88650513]
[84.51137543 -177.72053528]
[86.73648834 -192.55458069]
[88.96160889 -207.38862610]
[91.18672180 -222.22267151]
[92.63613892 -237.15248108]
[93.30592346 -252.13752747]
[93.97571564 -267.12255859]
[91.27287292 -273.15631104]
[91.92503357 -278.80181885]
[94.89511108 -282.54183960]
[96.01076508 -297.50027466]
[97.12641144 -312.45874023]
[98.24205780 -327.41717529]
[99.35771179 -342.37564087]
[100.47335815 -357.33410645]
[86.54884338 -363.28274536]
[75.31198883 -373.43222046]
[67.98169708 -386.68157959]
[65.35309601 -401.59362793]
[67.71131897 -416.55084229]
[74.80056000 -429.93072510]
[85.85183716 -440.28195190]
[99.66638947 -446.48171997]
[114.74570465 -447.85748291]
[129.45411682 -444.26004028]
[142.19613647 -436.07962036]
[151.58963013 -424.20355225]
[156.61566162 -409.92007446]
[156.72901917 -394.77853394]
[151.91743469 -380.42141724]
[142.70281982 -368.40600586]
[130.08470154 -360.03570557]
[115.43180847 -356.21844482]
[114.31616211 -341.25997925]
[113.20051575 -326.30154419]
[112.08486176 -311.34307861]
[110.96921539 -296.38464355]
[109.85356903 -281.42617798]
[108.96075439 -266.45275879]
[108.29096985 -251.46772766]
[107.62117767 -236.48269653]
[118.63139343 -246.66970825]
[133.60717773 -247.52177429]
[145.70179749 -238.64935303]
[149.38577271 -224.10877991]
[142.97482300 -210.54780579]
[129.39996338 -204.16635132]
[114.86741638 -207.88189697]
[106.02076721 -219.99755859]
[103.79564667 -205.16351318]
[101.57053375 -190.32946777]
[99.34541321 -175.49542236]
[97.12030029 -160.66137695]
[94.89517975 -145.82733154]
[100.65889740 -132.09310913]
[90.96006775 -119.59338379]
[88.73495483 -104.75933838]
[86.50983429 -89.92530060]
[86.06323242 -74.93194580]
[87.40146637 -59.99176407]
[88.73970032 -45.05157852]
[91.76512909 -41.35620117]
[92.50127411 -35.72103500]
[89.88856506 -29.64770699]
[90.78137970 -14.67430115]
[91.67420197 0.29910493]
[92.56701660 15.27251053]
[93.45983124 30.24591637]
[94.35264587 45.21932220]
[96.79837036 60.01859283]
[100.77046967 74.48311615]
[104.74256897 88.94763947]
[108.92958069 103.35142517]
[113.33057404 117.69126892]
[117.73157501 132.03111267]
[129.17732239 142.95381165]
[125.51472473 157.39108276]
[129.91572571 171.73092651]
[134.31671143 186.07077026]
[138.71771240 200.41062927]
[143.11871338 214.75047302]
[148.62825012 222.03627014]
[147.47677612 229.33666992]
[151.66378784 243.74044800]
[155.85079956 258.14422607]
[170.68034363 261.89010620]
[181.57194519 272.48587036]
[185.67033386 287.01409912]
[181.97122192 301.54586792]
[171.56509399 312.20318604]
[175.75210571 326.60696411]
[179.93911743 341.01074219]
[184.12612915 355.41452026]
[193.52804565 343.72674561]
[208.52778625 343.63751221]
[218.06808472 355.21261597]
[215.11619568 369.91928101]
[201.84814453 376.91635132]
[188.04574585 371.04702759]
[191.14985657 385.72235107]
[194.25395203 400.39764404]
[197.35806274 415.07293701]
[207.72290039 422.74975586]
[210.00619507 435.03674316]
[203.52015686 445.24740601]
[206.40542603 459.96731567]
[209.29071045 474.68719482]
[212.17597961 489.40707397]
[215.06124878 504.12698364]
[230.11534119 505.14517212]
[244.39262390 510.02590942]
[256.91967773 518.43634033]
[266.84234619 529.80310059]
[273.48410034 543.35113525]
[276.39212036 558.15673828]
[275.36810303 573.21044922]
[270.48187256 587.48583984]
[262.06658936 600.00964355]
[250.69601440 609.92791748]
[237.14540100 616.56445312]
[222.33868408 619.46673584]
[207.28538513 618.43688965]
[193.01187134 613.54516602]
[180.49131775 605.12506104]
[170.57742310 593.75067139]
[163.94612122 580.19750977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[11 186]
[12 185]
[13 184]
[14 183]
[15 177]
[16 176]
[17 175]
[18 174]
[23 169]
[24 168]
[25 167]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[32 159]
[33 158]
[34 157]
[37 156]
[38 155]
[39 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 145]
[61 144]
[62 143]
[79 142]
[80 141]
[81 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 125]
[90 124]
[91 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
