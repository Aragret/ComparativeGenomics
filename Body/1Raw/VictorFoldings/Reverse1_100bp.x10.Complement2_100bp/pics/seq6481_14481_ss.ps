%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[99.77346802 572.58056641]
[90.35214233 560.78472900]
[84.46371460 546.88403320]
[82.54515076 531.91003418]
[84.73882294 516.97381592]
[90.88193512 503.18377686]
[100.51863861 491.56326294]
[112.93382263 482.97454834]
[127.20619965 478.05502319]
[126.31338501 463.08160400]
[125.42057037 448.10821533]
[124.52775574 433.13479614]
[123.63494110 418.16137695]
[115.15381622 405.91720581]
[122.05599976 391.68096924]
[121.16317749 376.70758057]
[120.27036285 361.73416138]
[119.37754822 346.76077271]
[118.48473358 331.78735352]
[106.72766876 341.10247803]
[92.08070374 337.86727905]
[85.34103394 324.46664429]
[91.47690582 310.77902222]
[105.96516418 306.89440918]
[118.12482452 315.67495728]
[118.34815216 300.67660522]
[118.57147980 285.67828369]
[118.79480743 270.67993164]
[115.75124359 263.94506836]
[119.13477325 255.46040344]
[119.58137512 240.46705627]
[120.02798462 225.47369385]
[120.47458649 210.48034668]
[118.80304718 195.57377625]
[115.04674530 181.05171204]
[111.29044342 166.52966309]
[107.53414917 152.00759888]
[103.77784729 137.48553467]
[99.59083557 123.08175659]
[94.97682190 108.80902100]
[89.69794464 102.71755981]
[90.40208435 94.28932953]
[86.00108337 79.94947815]
[81.60009003 65.60963440]
[77.77748871 62.05508423]
[75.88938904 57.81381226]
[75.87344360 53.73768616]
[77.33821106 50.53038025]
[73.58190918 36.00832367]
[69.82560730 21.48626328]
[60.07986450 32.88891983]
[45.08412552 32.53150940]
[35.89268494 20.67750359]
[39.28113556 6.06523371]
[52.75163269 -0.53367811]
[66.37317657 5.74397087]
[63.70737839 -9.01724625]
[61.04158401 -23.77846336]
[58.37578964 -38.53968048]
[55.70999146 -53.30089951]
[39.74129868 -53.93243408]
[24.31509018 -58.08152008]
[10.19603539 -65.53940582]
[-1.91667759 -75.93338776]
[-11.42396259 -88.74546051]
[-17.85646629 -103.33812714]
[-20.89773750 -118.98609161]
[-20.39979744 -134.91235352]
[-16.39033318 -150.32673645]
[-9.07117939 -164.46513367]
[1.19184387 -176.62739563]
[13.88721085 -186.21192932]
[28.38318634 -192.74555969]
[25.27907562 -207.42086792]
[22.17496681 -222.09617615]
[19.07085609 -236.77146912]
[15.58061886 -240.65287781]
[14.07844257 -245.04568481]
[14.42621040 -249.10697937]
[16.17127609 -252.17082214]
[13.72554874 -266.97009277]
[11.27982140 -281.76934814]
[8.83409405 -296.56863403]
[-3.72990775 -305.77642822]
[-5.99940205 -320.81982422]
[2.85625720 -332.74093628]
[0.41052973 -347.54022217]
[-2.03519773 -362.33947754]
[-17.05973625 -363.64871216]
[-31.28638458 -368.65405273]
[-43.82084656 -377.04083252]
[-53.87519455 -388.28186035]
[-60.81740189 -401.67053223]
[-64.21108246 -416.36520386]
[-63.84289169 -431.44219971]
[-59.73599243 -445.95370483]
[-52.14853668 -458.98757935]
[-41.55747986 -469.72442627]
[-28.62858582 -477.48937988]
[-14.17457676 -481.79431152]
[0.89595771 -482.36862183]
[15.63567066 -479.17617798]
[29.11801147 -472.41766357]
[40.49546814 -462.51797485]
[49.05284500 -450.09933472]
[54.25221634 -435.94247437]
[55.76675034 -420.93722534]
[53.50123596 -406.02688599]
[47.59809113 -392.14871216]
[38.42838669 -380.17510986]
[26.56854057 -370.85873413]
[12.76407337 -364.78521729]
[15.20980072 -349.98596191]
[17.65552711 -335.18667603]
[29.87575150 -326.74856567]
[32.56688690 -311.77484131]
[23.63336563 -299.01437378]
[26.07909203 -284.21508789]
[28.52482033 -269.41580200]
[30.97054672 -254.61654663]
[33.74615860 -239.87557983]
[36.85026932 -225.20028687]
[39.95438004 -210.52497864]
[43.05848694 -195.84967041]
[57.12731552 -195.93832397]
[70.94531250 -193.26472473]
[83.97525024 -187.93075562]
[95.71015167 -180.14178467]
[105.69298553 -170.19873047]
[113.53448486 -158.48643494]
[118.92831421 -145.45880127]
[121.66306305 -131.62118530]
[121.63048553 -117.51081085]
[118.82982635 -103.67584991]
[113.36789703 -90.65422058]
[105.45504761 -78.95258331]
[95.39700317 -69.02670288]
[83.58309937 -61.26364517]
[70.47120667 -55.96669388]
[73.13700867 -41.20547485]
[75.80280304 -26.44425964]
[78.46859741 -11.68304157]
[81.13439178 3.07817531]
[84.34766388 17.72996330]
[88.10396576 32.25202179]
[91.86026764 46.77408218]
[95.93993378 61.20863342]
[100.34093475 75.54848480]
[104.74192810 89.88832855]
[109.24955750 104.19501495]
[113.86357117 118.46775055]
[117.18763733 121.26140594]
[119.24309540 124.62884521]
[120.00534058 128.10078430]
[119.60470581 131.24818420]
[118.29990387 133.72923279]
[122.05620575 148.25129700]
[125.81250763 162.77336121]
[129.56880188 177.29541016]
[133.32510376 191.81747437]
[136.68037415 177.19755554]
[144.14384460 164.18614197]
[155.06985474 153.90888977]
[168.51321411 147.25485229]
[183.31091309 144.79968262]
[198.18283081 146.75576782]
[211.84237671 152.95390320]
[223.10786438 162.85787964]
[231.00471497 175.61090088]
[234.84979248 190.10971069]
[234.31044006 205.10000610]
[229.43331909 219.28498840]
[220.64035034 231.43751526]
[208.69221497 240.50625610]
[194.62254333 245.70668030]
[179.64851379 246.58891296]
[165.06552124 243.07661438]
[152.13513184 235.47364807]
[141.97596741 224.43772888]
[135.46794128 210.92695618]
[135.02133179 225.92030334]
[134.57472229 240.91365051]
[134.12812805 255.90701294]
[133.79315186 270.90325928]
[133.56982422 285.90161133]
[133.34649658 300.89993286]
[133.12316895 315.89828491]
[133.45814514 330.89453125]
[134.35095215 345.86795044]
[135.24377441 360.84133911]
[136.13658142 375.81475830]
[137.02940369 390.78814697]
[145.57438660 404.10333252]
[138.60833740 417.26858521]
[139.50115967 432.24197388]
[140.39398193 447.21539307]
[141.28678894 462.18878174]
[142.17961121 477.16220093]
[156.93545532 480.35089111]
[170.28326416 487.40341187]
[181.23257446 497.79644775]
[188.97084045 510.75878906]
[192.92385864 525.32849121]
[192.79826355 540.42437744]
[188.60339355 554.92633057]
[180.65052795 567.75811768]
[169.52983093 577.96752930]
[156.06652832 584.79699707]
[141.25967407 587.73974609]
[126.20804596 586.57739258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[25 187]
[26 186]
[27 185]
[28 184]
[30 183]
[31 182]
[32 181]
[33 180]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 151]
[40 150]
[42 149]
[43 148]
[44 147]
[48 146]
[49 145]
[50 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[73 124]
[74 123]
[75 122]
[76 121]
[80 120]
[81 119]
[82 118]
[83 117]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
