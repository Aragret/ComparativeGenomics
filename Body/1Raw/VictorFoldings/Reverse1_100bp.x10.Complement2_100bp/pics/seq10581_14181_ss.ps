%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[69.80146027 660.26269531]
[55.81347275 665.70977783]
[41.37686920 669.82305908]
[26.61852646 672.56634521]
[11.66814232 673.91564941]
[-3.34289575 673.85894775]
[-18.28266716 672.39685059]
[-33.01987839 669.54217529]
[-47.42501068 665.32006836]
[-61.37147522 659.76751709]
[-74.73670197 652.93341064]
[-87.40323639 644.87774658]
[-99.25976562 635.67138672]
[-110.20208740 625.39520264]
[-120.13404083 614.13946533]
[-128.96833801 602.00317383]
[-136.62733459 589.09295654]
[-143.04374695 575.52221680]
[-148.16114807 561.41033936]
[-151.93460083 546.88116455]
[-154.33093262 532.06256104]
[-155.32907104 517.08459473]
[-154.92024231 502.07904053]
[-153.10806274 487.17770386]
[-149.90844727 472.51150513]
[-145.34951782 458.20938110]
[-139.47131348 444.39703369]
[-132.32553101 431.19580078]
[-123.97495270 418.72174072]
[-114.49295807 407.08447266]
[-103.96288300 396.38623047]
[-92.47727203 386.72106934]
[-80.13706207 378.17395020]
[-67.05070496 370.81991577]
[-53.33319473 364.72366333]
[-39.10509109 359.93872070]
[-24.49143791 356.50717163]
[-9.62065697 354.45913696]
[5.37656069 353.81268311]
[20.36841583 354.57342529]
[35.22315979 356.73468018]
[38.76283264 342.15829468]
[42.30250549 327.58193970]
[45.84217834 313.00555420]
[49.38184738 298.42916870]
[52.92152023 283.85281372]
[56.46119308 269.27642822]
[54.94883728 266.09127808]
[54.90409851 262.01538086]
[56.72883606 257.74645996]
[60.49809265 254.13540649]
[56.62094879 239.75427246]
[67.90280914 228.66236877]
[72.08982086 214.25857544]
[76.27683258 199.85479736]
[80.46383667 185.45101929]
[84.65084839 171.04724121]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[97.63335419 42.35549164]
[98.97158813 27.41530609]
[96.77375793 22.68068504]
[96.62654114 18.04046631]
[98.15058899 14.25994587]
[100.71778107 11.84295368]
[102.72180176 -3.02257490]
[104.72581482 -17.88810349]
[102.77097321 -26.81090736]
[106.87191772 -32.95940399]
[99.84702301 -43.77668762]
[102.00571442 -56.08618927]
[111.65354156 -63.38317490]
[114.09927368 -78.18244934]
[116.54499817 -92.98171997]
[118.99072266 -107.78099060]
[121.43645477 -122.58026123]
[123.88217926 -137.37953186]
[126.32790375 -152.17880249]
[128.77363586 -166.97807312]
[115.65962219 -179.49926758]
[112.71286774 -197.23048401]
[120.92704773 -213.04118347]
[136.84564209 -220.68772888]
[138.84967041 -235.55326843]
[140.85368347 -250.41879272]
[142.85769653 -265.28433228]
[144.86170959 -280.14984131]
[146.86572266 -295.01538086]
[132.60270691 -299.80734253]
[119.50447083 -307.21228027]
[108.04450226 -316.96243286]
[98.63706207 -328.70535278]
[91.62223816 -342.01657104]
[87.25360107 -356.41488647]
[85.68907166 -371.37982178]
[86.98522186 -386.37036133]
[91.09518433 -400.84463501]
[97.87038422 -414.27941895]
[107.06591034 -426.18902588]
[118.34934998 -436.14294434]
[131.31282043 -443.78134155]
[145.48767090 -448.82809448]
[160.36152649 -451.10079956]
[175.39668274 -450.51724243]
[190.04963684 -447.09854126]
[203.79069519 -440.96832275]
[216.12312317 -432.34811401]
[226.60110474 -421.54959106]
[234.84588623 -408.96307373]
[240.55940247 -395.04357910]
[243.53512573 -380.29431152]
[243.66549683 -365.24838257]
[240.94577026 -350.44973755]
[235.47430420 -336.43334961]
[227.44885254 -323.70587158]
[217.15954590 -312.72741699]
[204.97833252 -303.89483643]
[191.34555054 -297.52740479]
[176.75402832 -293.85534668]
[161.73124695 -293.01135254]
[159.72723389 -278.14584351]
[157.72322083 -263.28030396]
[155.71920776 -248.41477966]
[153.71519470 -233.54925537]
[151.71118164 -218.68371582]
[161.63703918 -211.69427490]
[167.68510437 -201.08512878]
[168.65426636 -188.83923340]
[164.29945374 -177.27571106]
[155.38964844 -168.61062622]
[143.57290649 -164.53234863]
[141.12718201 -149.73307800]
[138.68145752 -134.93380737]
[136.23571777 -120.13452911]
[133.78999329 -105.33525848]
[131.34426880 -90.53598785]
[128.89854431 -75.73671722]
[126.45281219 -60.93744659]
[133.50799561 -44.86911774]
[121.70596313 -30.73428726]
[119.59133911 -15.88408947]
[117.58732605 -1.01856136]
[115.58331299 13.84696674]
[113.91177368 28.75354004]
[112.57353973 43.69372559]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[111.32788849 145.61553955]
[124.36693573 138.20045471]
[139.28646851 136.64884949]
[153.57229614 141.22216797]
[164.81698608 151.14974976]
[171.12562561 164.75860596]
[171.43510437 179.75541687]
[165.69325256 193.61294556]
[154.86769104 203.99595642]
[140.78269958 209.15473938]
[125.81185913 208.21995544]
[112.47801208 201.34910583]
[103.02814484 189.70007324]
[99.05463409 175.23425293]
[94.86762238 189.63803101]
[90.68061066 204.04180908]
[86.49359894 218.44558716]
[82.30658722 232.84938049]
[85.88424683 248.26077271]
[74.90187836 258.32241821]
[71.03756714 272.81610107]
[67.49789429 287.39248657]
[63.95822525 301.96884155]
[60.41855240 316.54522705]
[56.87887955 331.12161255]
[53.33920670 345.69796753]
[49.79953384 360.27435303]
[63.99110413 365.16659546]
[77.66219330 371.36624146]
[90.69265747 378.81884766]
[102.96797943 387.45892334]
[114.38028717 397.21054077]
[124.82928467 407.98797607]
[134.22314453 419.69650269]
[142.47929382 432.23327637]
[149.52520752 445.48806763]
[155.29895020 459.34442139]
[159.74977112 473.68054199]
[162.83856201 488.37045288]
[164.53817749 503.28506470]
[164.83367920 518.29333496]
[163.72248840 533.26330566]
[161.21434021 548.06341553]
[157.33129883 562.56359863]
[152.10748291 576.63653564]
[145.58880615 590.15838623]
[137.83253479 603.01043701]
[128.90686035 615.07965088]
[118.89020538 626.26007080]
[107.87061310 636.45336914]
[95.94490814 645.56994629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[47 180]
[51 179]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 159]
[59 158]
[60 157]
[61 156]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[71 149]
[72 148]
[73 147]
[75 146]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
