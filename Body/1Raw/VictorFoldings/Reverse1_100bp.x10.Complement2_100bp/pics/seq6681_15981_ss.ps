%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[38.23828506 327.77127075]
[41.22945404 342.49426270]
[42.18790817 357.48745728]
[41.09579849 372.47146606]
[37.97346497 387.16720581]
[32.87907791 401.30090332]
[25.90754128 414.60922241]
[17.18873024 426.84423828]
[6.88507175 437.77807617]
[-4.81148386 447.20697021]
[-17.68303680 454.95532227]
[-31.48979759 460.87875366]
[-45.97455597 464.86694336]
[-60.86746597 466.84555054]
[-75.89108276 466.77777100]
[-90.76553345 464.66482544]
[-105.21370697 460.54608154]
[-118.96644592 454.49826050]
[-131.76754761 446.63406372]
[-143.37852478 437.09997559]
[-153.58308411 426.07360840]
[-162.19111633 413.76037598]
[-169.04226685 400.38967896]
[-174.00888062 386.21060181]
[-176.99845886 371.48727417]
[-177.95529175 356.49401855]
[-176.86155701 341.51010132]
[-173.73764038 326.81469727]
[-168.64172363 312.68157959]
[-161.66874695 299.37399292]
[-152.94860840 287.13992310]
[-142.64376831 276.20721436]
[-130.94618225 266.77957153]
[-118.07379913 259.03262329]
[-104.26639557 253.11067200]
[-89.78120422 249.12405396]
[-74.88807678 247.14704895]
[-59.86446762 247.21647644]
[-44.99024963 249.33102417]
[-30.54252052 253.45133972]
[-16.79043770 259.50064087]
[-8.93868160 246.71978760]
[-1.08692634 233.93894958]
[6.76482916 221.15809631]
[14.61658478 208.37725830]
[22.46833992 195.59642029]
[7.49495173 196.48953247]
[-2.65208006 185.44245911]
[-0.49274150 170.59869385]
[12.38118362 162.90051270]
[26.47951698 168.02272034]
[31.40966988 182.18777466]
[32.58675766 167.33975220]
[46.93813324 160.68028259]
[48.11521912 145.83226013]
[62.46659851 139.17279053]
[71.24720001 127.01134491]
[72.42428589 112.16332245]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[109.84348297 73.55408478]
[118.62408447 61.39263153]
[127.40468597 49.23117828]
[136.18528748 37.06972122]
[129.44943237 19.15426254]
[134.82981873 0.94269997]
[149.97874451 -10.25724411]
[168.66712952 -10.06537056]
[176.89593506 -22.60676956]
[185.12475586 -35.14817047]
[186.22624207 -50.93098831]
[199.67736816 -57.32759094]
[207.90617371 -69.86898804]
[216.13497925 -82.41039276]
[224.36378479 -94.95178986]
[232.59259033 -107.49319458]
[232.68577576 -111.83430481]
[234.02120972 -115.54660797]
[236.24867249 -118.31677246]
[238.95214844 -119.97743225]
[241.70318604 -120.51591492]
[250.66387939 -132.54528809]
[259.62457275 -144.57467651]
[255.64801025 -155.77839661]
[257.55395508 -167.39167786]
[264.75479126 -176.54821777]
[275.37066650 -181.04473877]
[286.71911621 -179.87071228]
[296.03402710 -191.62796021]
[305.34890747 -203.38520813]
[314.66378784 -215.14245605]
[303.74371338 -225.43971252]
[293.74926758 -236.63760376]
[284.75448608 -248.65322876]
[276.82589722 -261.39758301]
[270.02224731 -274.77636719]
[264.39389038 -288.69052124]
[259.98251343 -303.03698730]
[256.82077026 -317.70956421]
[254.93206787 -332.59963989]
[254.33038330 -347.59695435]
[255.02018738 -362.59048462]
[256.99636841 -377.46917725]
[260.24426270 -392.12295532]
[264.73986816 -406.44323730]
[270.44989014 -420.32406616]
[277.33206177 -433.66262817]
[285.33538818 -446.36019897]
[294.40063477 -458.32275391]
[304.46072388 -469.46170044]
[315.44110107 -479.69461060]
[327.26052856 -488.94570923]
[339.83145142 -497.14648438]
[353.06085205 -504.23623657]
[366.85073853 -510.16250610]
[381.09902954 -514.88134766]
[395.70025635 -518.35784912]
[410.54626465 -520.56628418]
[425.52716064 -521.49035645]
[440.53207397 -521.12310791]
[455.44982910 -519.46728516]
[470.17004395 -516.53521729]
[484.58367920 -512.34857178]
[498.58407593 -506.93838501]
[512.06756592 -500.34463501]
[524.93426514 -492.61618042]
[537.08898926 -483.81024170]
[548.44171143 -473.99203491]
[558.90832520 -463.23422241]
[568.41143799 -451.61645508]
[576.88067627 -439.22476196]
[584.25323486 -426.15087891]
[590.47460938 -412.49160767]
[595.49877930 -398.34808350]
[599.28845215 -383.82498169]
[601.81561279 -369.02990723]
[603.06158447 -354.07232666]
[603.01702881 -339.06301880]
[601.68243408 -324.11309814]
[599.06756592 -309.33325195]
[595.19183350 -294.83288574]
[590.08392334 -280.71939087]
[583.78161621 -267.09725952]
[576.33160400 -254.06733704]
[567.78906250 -241.72608948]
[558.21728516 -230.16488647]
[547.68701172 -219.46932983]
[536.27624512 -209.71859741]
[524.06951904 -200.98490906]
[511.15719604 -193.33288574]
[497.63488770 -186.81922913]
[483.60263062 -181.49212646]
[469.16442871 -177.39103699]
[454.42709351 -174.54631042]
[439.49975586 -172.97903442]
[424.49295044 -172.70079041]
[409.51779175 -173.71363831]
[394.68511963 -176.01008606]
[380.10479736 -179.57312012]
[365.88473511 -184.37638855]
[352.13021851 -190.38430786]
[338.94311523 -197.55238342]
[326.42102051 -205.82757568]
[317.10614014 -194.07032776]
[307.79125977 -182.31307983]
[298.47637939 -170.55581665]
[301.67477417 -152.53123474]
[290.49063110 -137.63735962]
[271.65396118 -135.61398315]
[262.69326782 -123.58460236]
[253.73255920 -111.55522156]
[245.13400269 -99.26438141]
[236.90519714 -86.72298431]
[228.67637634 -74.18157959]
[220.44757080 -61.64018250]
[212.21876526 -49.09878159]
[211.70585632 -34.21301270]
[197.66615295 -26.91936302]
[189.43734741 -14.37796307]
[181.20854187 -1.83656240]
[187.05690002 7.66329288]
[188.94645691 18.70990944]
[186.56645203 29.71383667]
[180.22331238 39.07724380]
[170.80174255 45.42593384]
[159.64144897 47.81096268]
[148.34674072 45.85032272]
[139.56614685 58.01177979]
[130.78553772 70.17323303]
[122.00493622 82.33469391]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[97.13198853 130.00234985]
[83.40866089 135.79194641]
[74.62805176 147.95339966]
[72.82292175 163.67129517]
[59.09959030 169.46089172]
[57.29445648 185.17878723]
[43.57112503 190.96838379]
[35.24918365 203.44818115]
[27.39742661 216.22901917]
[19.54567146 229.00985718]
[11.69391632 241.79069519]
[3.84216070 254.57154846]
[-4.00959492 267.35238647]
[7.60241890 276.88522339]
[17.80817223 287.91049194]
[26.41753769 300.22277832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 207]
[42 206]
[43 205]
[44 204]
[45 203]
[46 202]
[52 201]
[54 199]
[56 197]
[57 196]
[59 194]
[61 192]
[62 191]
[63 190]
[64 189]
[65 188]
[69 181]
[70 180]
[71 179]
[73 177]
[74 176]
[75 175]
[76 174]
[77 173]
[82 172]
[83 171]
[84 170]
[89 167]
[90 166]
[91 165]
[92 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
