%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[128.67550659 728.26373291]
[113.64675903 727.59197998]
[98.99738312 724.16992188]
[85.22634125 718.11407471]
[72.80266571 709.63073730]
[62.14950180 699.00885010]
[53.62969971 686.61016846]
[47.53343201 672.85699463]
[44.06834030 658.21771240]
[43.35243988 643.19104004]
[45.41011810 628.28863525]
[50.17129135 614.01818848]
[57.47379303 600.86566162]
[67.06890106 589.27911377]
[78.62981415 579.65313721]
[91.76277161 572.31555176]
[106.02046967 567.51629639]
[120.91729736 565.41888428]
[121.58708191 550.43383789]
[122.25686646 535.44879150]
[122.92665100 520.46374512]
[122.81498718 505.46414185]
[121.92216492 490.49075317]
[121.02935028 475.51733398]
[120.13653564 460.54394531]
[108.37947083 469.85903931]
[93.73250580 466.62387085]
[86.99284363 453.22323608]
[93.12870789 439.53561401]
[107.61697388 435.65100098]
[119.77662659 444.43154907]
[119.99995422 429.43319702]
[120.11162567 414.43362427]
[120.11162567 399.43362427]
[120.11162567 384.43362427]
[120.11162567 369.43362427]
[120.11162567 354.43362427]
[119.99995422 339.43402100]
[119.77662659 324.43569946]
[118.77236938 309.46936035]
[116.98990631 294.57562256]
[115.20743561 279.68191528]
[113.42497253 264.78820801]
[111.64250183 249.89448547]
[100.38253021 236.43417358]
[107.76994324 219.56681824]
[105.76593018 204.70129395]
[103.76191711 189.83576965]
[101.75790405 174.97023010]
[99.75389099 160.10470581]
[95.74494171 153.89582825]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[83.87030029 102.05229187]
[90.63981628 86.70465851]
[81.12816620 74.06191254]
[87.09572601 60.41502762]
[85.09171295 45.54949951]
[83.08769989 30.68397141]
[78.83982849 22.59735298]
[81.16622162 15.58238983]
[79.38375092 0.68867213]
[77.60128784 -14.20504475]
[75.81882477 -29.09876251]
[73.70420074 -43.94895935]
[63.82033920 -56.30290222]
[69.37893677 -70.12141418]
[66.93321228 -84.92068481]
[64.48748016 -99.71995544]
[60.00072861 -107.67651367]
[62.11722183 -114.75763702]
[59.89210510 -129.59167480]
[57.66698837 -144.42572021]
[42.76568985 -146.95726013]
[29.39455605 -153.96121216]
[18.85722733 -164.74050903]
[12.17665863 -178.23068237]
[9.99582100 -193.10504150]
[12.51583958 -207.90505981]
[19.47751808 -221.18342590]
[30.18792915 -231.64561462]
[43.58937836 -238.27600098]
[41.36426163 -253.11004639]
[39.13914490 -267.94409180]
[36.91402817 -282.77813721]
[34.68891144 -297.61218262]
[26.59802437 -284.98135376]
[12.67056751 -279.41128540]
[-1.89886546 -282.97940063]
[-11.67623520 -294.35494995]
[-13.01482487 -309.29510498]
[-5.41537333 -322.22756958]
[8.28771114 -328.32882690]
[22.98351860 -325.32330322]
[33.19136810 -314.33087158]
[32.74476242 -329.32421875]
[32.29815674 -344.31756592]
[18.33460426 -350.48052979]
[8.43441486 -362.09729004]
[4.56327820 -376.86132812]
[7.48981190 -391.84124756]
[16.63294983 -404.06277466]
[30.17731667 -411.09933472]
[45.43366623 -411.55377197]
[59.37284470 -405.33587646]
[69.22721100 -393.68023682]
[73.04017639 -378.90103149]
[70.05467224 -363.93276978]
[60.86347961 -351.74734497]
[47.29150772 -344.76419067]
[47.73811340 -329.77084351]
[48.18471909 -314.77749634]
[49.52295303 -299.83731079]
[51.74806976 -285.00326538]
[53.97318649 -270.16921997]
[56.19830322 -255.33517456]
[58.42342377 -240.50112915]
[73.18042755 -238.09451294]
[86.48907471 -231.23521423]
[97.04023743 -220.58378601]
[103.79167938 -207.17448425]
[106.07095337 -192.31489563]
[103.64241791 -177.45834351]
[96.73147583 -164.06179810]
[86.00376892 -153.44300842]
[72.50102997 -146.65083313]
[74.72615051 -131.81680298]
[76.95126343 -116.98274994]
[79.28675079 -102.16568756]
[81.73248291 -87.36641693]
[84.17820740 -72.56714630]
[93.88713074 -61.27173996]
[88.50347137 -46.39468765]
[91.14148712 -44.05520248]
[92.77742004 -40.32173157]
[92.76842499 -35.67918777]
[90.71253967 -30.88122749]
[92.49500275 -15.98751068]
[94.27747345 -1.09379375]
[96.05993652 13.79992390]
[97.95323181 28.67995834]
[99.95724487 43.54548645]
[101.96125793 58.41101456]
[111.32956696 69.99047852]
[105.50534821 84.70064545]
[114.32477570 92.30715179]
[115.79479218 103.86051941]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.61942291 158.10069275]
[116.62343597 172.96621704]
[118.62744904 187.83175659]
[120.63146210 202.69728088]
[122.63547516 217.56280518]
[132.40061951 225.98924255]
[133.76373291 238.41203308]
[126.53622437 248.11201477]
[128.31869507 263.00573730]
[130.10115051 277.89944458]
[131.88362122 292.79315186]
[133.66609192 307.68688965]
[142.86798096 295.84100342]
[157.50442505 292.55853271]
[170.88383484 299.34024048]
[176.88932800 313.08557129]
[172.77526855 327.51034546]
[160.42254639 336.01977539]
[145.47866821 334.72344971]
[134.77496338 324.21237183]
[134.99829102 339.21069336]
[138.25512695 347.74481201]
[135.11161804 354.43362427]
[135.11161804 369.43362427]
[135.11161804 384.43362427]
[135.11161804 399.43362427]
[135.11161804 414.43362427]
[138.24102783 423.01525879]
[134.99829102 429.65652466]
[134.77496338 444.65487671]
[135.10993958 459.65112305]
[136.00276184 474.62454224]
[136.89556885 489.59793091]
[137.78839111 504.57135010]
[147.67904663 493.29415894]
[162.48492432 490.88870239]
[175.43695068 498.45474243]
[180.61366272 512.53314209]
[175.64831543 526.68750000]
[162.81101990 534.44659424]
[147.97079468 532.26306152]
[137.91169739 521.13354492]
[137.24189758 536.11859131]
[136.57211304 551.10357666]
[135.90232849 566.08862305]
[150.55262756 569.50677490]
[164.32530212 575.55883789]
[176.75126648 584.03887939]
[187.40728760 594.65789795]
[195.93043518 607.05426025]
[202.03041077 620.80584717]
[205.49945068 635.44415283]
[206.21939087 650.47064209]
[204.16574097 665.37359619]
[199.40841675 679.64532471]
[192.10945129 692.79980469]
[182.51747131 704.38891602]
[170.95915222 714.01806641]
[157.82817078 721.35919189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 196]
[19 195]
[20 194]
[21 193]
[22 185]
[23 184]
[24 183]
[25 182]
[31 181]
[32 180]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 172]
[39 171]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[52 151]
[53 150]
[54 149]
[56 146]
[58 144]
[59 143]
[60 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 134]
[68 132]
[69 131]
[70 130]
[72 129]
[73 128]
[74 127]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
