%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[150.02565002 662.25457764]
[138.03132629 653.23779297]
[126.65916443 643.44805908]
[115.95887756 632.92810059]
[105.97725677 621.72393799]
[96.75795746 609.88458252]
[88.34127808 597.46179199]
[80.76403809 584.50994873]
[74.05936432 571.08557129]
[68.25657654 557.24749756]
[63.38105011 543.05609131]
[59.45410156 528.57354736]
[56.49290085 513.86309814]
[54.51040268 498.98910522]
[53.51527023 484.01663208]
[53.51185989 469.01110840]
[54.50018692 454.03814697]
[56.47592545 439.16326904]
[59.43043518 424.45150757]
[63.35080338 409.96713257]
[68.21987915 395.77355957]
[74.01638031 381.93280029]
[80.71495056 368.50543213]
[88.28630066 355.55010986]
[96.69732666 343.12350464]
[105.91124725 331.27996826]
[115.88777924 320.07128906]
[126.58328247 309.54644775]
[137.95098877 299.75152588]
[149.94120789 290.72930908]
[162.50149536 282.51925659]
[175.57693481 275.15728760]
[169.09742737 261.62893677]
[156.62149048 253.49258423]
[157.63847351 237.70410156]
[151.15898132 224.17575073]
[144.67947388 210.64741516]
[138.19998169 197.11906433]
[131.72048950 183.59071350]
[119.24454498 175.45437622]
[120.26152039 159.66589355]
[113.78202820 146.13754272]
[107.30252838 132.60919189]
[100.82303619 119.08084869]
[87.19206238 114.16732025]
[80.93307495 101.09937286]
[85.64862061 87.39864349]
[79.16912079 73.87030029]
[72.68962860 60.34195328]
[65.31919861 73.40628052]
[50.53473663 75.94000244]
[39.23480225 66.07534790]
[39.74928284 51.08417130]
[51.69892502 42.01741409]
[66.27361298 45.55771255]
[60.81825638 31.58491325]
[55.36289978 17.61211586]
[49.90754318 3.63931823]
[35.78477478 3.09702802]
[22.97420311 -2.76927447]
[13.39620876 -13.04388237]
[8.47271729 -26.15303230]
[8.91616440 -40.10590744]
[14.62659645 -52.79696274]
[24.71174812 -62.32365799]
[19.46502876 -76.37612915]
[14.21831131 -90.42860413]
[8.97159290 -104.48107147]
[4.94419861 -107.80178833]
[2.80700779 -111.92316437]
[2.54847121 -115.99111176]
[3.81973720 -119.27991486]
[-0.79427207 -133.55264282]
[-5.40828133 -147.82537842]
[-10.02229023 -162.09811401]
[-24.86133575 -159.70997620]
[-39.89102173 -159.61511230]
[-54.75902939 -161.81575012]
[-69.11682892 -166.26028442]
[-82.62786102 -172.84454346]
[-94.97540283 -181.41416931]
[-105.87001801 -191.76829529]
[-115.05630493 -203.66419983]
[-122.31893158 -216.82302856]
[-127.48765564 -230.93630981]
[-130.44131470 -245.67321777]
[-131.11067200 -260.68829346]
[-129.48002625 -275.62954712]
[-125.58760834 -290.14675903]
[-119.52465820 -303.89962769]
[-111.43331146 -316.56573486]
[-101.50323486 -327.84820557]
[-89.96720123 -337.48254395]
[-77.09563446 -345.24288940]
[-63.19025803 -350.94735718]
[-48.57703781 -354.46221924]
[-33.59852600 -355.70507812]
[-18.60584641 -354.64682007]
[-3.95044351 -351.31219482]
[10.02413750 -345.77944946]
[22.99031258 -338.17819214]
[34.64413834 -328.68670654]
[44.71242523 -317.52740479]
[52.95916748 -304.96188354]
[59.19104385 -291.28475952]
[63.26197052 -276.81658936]
[65.07652283 -261.89654541]
[64.59215546 -246.87435913]
[61.82023621 -232.10218811]
[56.82573700 -217.92631531]
[49.72573090 -204.67904663]
[40.68666077 -192.67089844]
[29.92040825 -182.18336487]
[17.67935181 -173.46229553]
[4.25044298 -166.71212769]
[8.86445236 -152.43939209]
[13.47846127 -138.16665649]
[18.09247017 -123.89392853]
[23.02406502 -109.72779083]
[28.27078247 -95.67531586]
[33.51750183 -81.62284851]
[38.76421738 -67.57037354]
[54.70215607 -66.41590881]
[68.59161377 -58.39739609]
[77.62652588 -45.07621002]
[79.95606232 -29.09079361]
[75.06363678 -13.63414764]
[63.88034058 -1.81603873]
[69.33569336 12.15675926]
[74.79105377 26.12955666]
[80.24641418 40.10235596]
[86.21797180 53.86245728]
[92.69747162 67.39080048]
[99.17696381 80.91915131]
[112.80793762 85.83267975]
[119.06692505 98.90062714]
[114.35137939 112.60135651]
[120.83087921 126.12969971]
[127.31037140 139.65805054]
[133.78987122 153.18638611]
[146.72926331 162.29037476]
[145.24882507 177.11122131]
[151.72833252 190.63957214]
[158.20782471 204.16790771]
[164.68731689 217.69625854]
[171.16680908 231.22460938]
[184.10621643 240.32858276]
[182.62577820 255.14942932]
[189.10527039 268.67776489]
[203.03733826 263.10433960]
[217.30729675 258.46383667]
[231.85273743 254.77662659]
[246.61007690 252.05877686]
[261.51477051 250.32220459]
[276.50164795 249.57449341]
[291.50518799 249.81890869]
[306.45977783 251.05439758]
[321.29998779 253.27552795]
[335.96096802 256.47262573]
[350.37860107 260.63165283]
[364.48983765 265.73449707]
[378.23297119 271.75878906]
[391.54788208 278.67822266]
[404.37640381 286.46249390]
[416.66238403 295.07760620]
[428.35211182 304.48587036]
[439.39450073 314.64617920]
[449.74124146 325.51403809]
[459.34710693 337.04196167]
[468.17007446 349.17956543]
[476.17156982 361.87371826]
[483.31658936 375.06896973]
[489.57391357 388.70758057]
[494.91613770 402.72991943]
[499.31997681 417.07467651]
[502.76611328 431.67913818]
[505.23950195 446.47940063]
[506.72930908 461.41079712]
[507.22903442 476.40798950]
[506.73648071 491.40542603]
[505.25381470 506.33752441]
[502.78753662 521.13897705]
[499.34838867 535.74505615]
[494.95144653 550.09191895]
[489.61590576 564.11682129]
[483.36511230 577.75842285]
[476.22640991 590.95709229]
[468.23101807 603.65509033]
[459.41384888 615.79687500]
[449.81353760 627.32940674]
[439.47198486 638.20227051]
[428.43447876 648.36785889]
[416.74923706 657.78167725]
[404.46737671 666.40270996]
[391.64257812 674.19311523]
[378.33096313 681.11889648]
[364.59072876 687.14978027]
[350.48196411 692.25939941]
[336.06631470 696.42535400]
[321.40686035 699.62945557]
[306.56771851 701.85766602]
[291.61373901 703.10034180]
[276.61032104 703.35192871]
[261.62307739 702.61138916]
[246.71754456 700.88195801]
[231.95890808 698.17120361]
[217.41169739 694.49090576]
[203.13952637 689.85729980]
[189.20478821 684.29052734]
[175.66844177 677.81494141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 149]
[33 148]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[42 139]
[43 138]
[44 137]
[47 134]
[48 133]
[49 132]
[55 131]
[56 130]
[57 129]
[58 128]
[65 122]
[66 121]
[67 120]
[68 119]
[72 118]
[73 117]
[74 116]
[75 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
