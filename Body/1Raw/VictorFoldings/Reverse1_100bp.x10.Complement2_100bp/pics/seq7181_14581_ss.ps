%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[80.35381317 647.56188965]
[65.37440491 652.05090332]
[51.03456879 645.81365967]
[44.10513306 631.79522705]
[47.85797119 616.61462402]
[60.52110672 607.43975830]
[61.41392136 592.46630859]
[62.30673599 577.49291992]
[52.25892258 566.55780029]
[52.95106125 551.35992432]
[64.48895264 540.89495850]
[65.38176727 525.92156982]
[55.33395386 514.98645020]
[56.02609253 499.78857422]
[67.56398773 489.32363892]
[68.45680237 474.35021973]
[69.34961700 459.37683105]
[70.24243164 444.40341187]
[55.88388443 437.69833374]
[45.17174149 425.96807861]
[39.76814270 410.98889160]
[40.52833176 395.04443359]
[47.36545944 380.57760620]
[59.25932312 369.81625366]
[74.40852356 364.43017578]
[75.07831573 349.44512939]
[75.74810028 334.46008301]
[76.41788483 319.47503662]
[77.08766937 304.49002075]
[77.75745392 289.50497437]
[74.91575623 282.68246460]
[78.55040741 274.30230713]
[79.44322205 259.32888794]
[80.33603668 244.35548401]
[81.11736298 229.37585449]
[81.67557526 214.38624573]
[82.12217712 199.39289856]
[82.56878662 184.39953613]
[83.01538849 169.40618896]
[72.80855560 180.39804077]
[58.11289597 183.40426636]
[44.40951920 177.30366516]
[36.80945206 164.37156677]
[38.14733124 149.43135071]
[47.92416000 138.05534363]
[62.49342346 134.48651123]
[76.42114258 140.05593872]
[84.51293182 152.68750000]
[86.73804474 137.85345459]
[88.96316528 123.01940918]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[96.75722504 63.53240204]
[98.31774902 48.61380005]
[91.84249878 34.17836761]
[100.68441010 22.19213676]
[102.02264404 7.25195169]
[103.36087799 -7.68823338]
[104.69911957 -22.62841797]
[97.04281616 -33.00839233]
[98.46501160 -45.42455673]
[107.66140747 -53.28285599]
[109.22193146 -68.20146179]
[110.78245544 -83.12006378]
[108.56281281 -91.98071289]
[112.47888184 -98.24858093]
[114.26134491 -113.14230347]
[116.04381561 -128.03601074]
[117.82627869 -142.92973328]
[119.60874176 -157.82345581]
[113.56615448 -172.44528198]
[122.76102448 -184.16293335]
[124.54349518 -199.05665588]
[126.32595825 -213.95036316]
[113.70984650 -220.55981445]
[104.12767029 -231.05662537]
[98.71539307 -244.16618347]
[98.10429382 -258.30596924]
[102.34740448 -271.77661133]
[110.91559601 -282.96612549]
[122.76346588 -290.54284668]
[136.45683289 -293.61380005]
[138.46084595 -308.47933960]
[140.46487427 -323.34487915]
[125.48934174 -329.46203613]
[112.60652161 -339.22790527]
[102.68461609 -351.97735596]
[96.39051819 -366.84442139]
[94.14494324 -382.82119751]
[96.09432220 -398.82598877]
[102.10129547 -413.77670288]
[111.75432587 -426.66394043]
[124.39593506 -436.61917114]
[139.16744995 -442.97320557]
[155.06735229 -445.30130005]
[156.62786865 -460.21990967]
[150.36825562 -474.75012207]
[159.38764954 -486.60339355]
[160.94818115 -501.52200317]
[147.20693970 -507.88259888]
[136.27726746 -518.36212158]
[129.34471130 -531.82391357]
[127.16125488 -546.80755615]
[129.96376038 -561.68792725]
[137.44822693 -574.85083008]
[148.80281067 -584.86840820]
[162.79582214 -590.65411377]
[177.90942383 -591.58032227]
[192.50419617 -587.54656982]
[204.99700928 -578.99035645]
[214.03274536 -566.83990479]
[218.63127136 -552.41308594]
[218.29376221 -537.27490234]
[213.05683899 -523.06738281]
[203.48855591 -511.33166504]
[190.62683105 -503.34078979]
[175.86677551 -499.96148682]
[174.30625916 -485.04287720]
[180.67749023 -471.57971191]
[171.54647827 -458.65936279]
[169.98596191 -443.74075317]
[183.09754944 -439.16003418]
[194.86114502 -431.76187134]
[204.68031311 -421.91720581]
[212.05627441 -410.12115479]
[216.61326599 -396.96807861]
[218.11764526 -383.12158203]
[216.48989868 -369.28115845]
[211.80882263 -356.14672852]
[204.30769348 -344.38333130]
[194.36268616 -334.58737183]
[182.47399902 -327.25650024]
[169.24066162 -322.76419067]
[155.33039856 -321.34085083]
[153.32638550 -306.47531128]
[151.32237244 -291.60980225]
[165.14244080 -283.85534668]
[174.95246887 -271.36083984]
[179.22698975 -256.02124023]
[177.28302002 -240.17749023]
[169.38883972 -226.25923157]
[156.72752380 -216.41232300]
[141.21968079 -212.16790771]
[139.43721008 -197.27418518]
[137.65473938 -182.38046265]
[143.82482910 -168.82394409]
[134.50245667 -156.04098511]
[132.72000122 -141.14726257]
[130.93753052 -126.25355530]
[129.15505981 -111.35983276]
[127.37259674 -96.46611786]
[125.70105743 -81.55953979]
[124.14053345 -66.64093781]
[122.58000946 -51.72233200]
[130.57910156 -36.10242462]
[119.63929749 -21.29018402]
[118.30106354 -6.34999895]
[116.96282959 8.59018612]
[115.62459564 23.53037071]
[122.19557190 36.89717865]
[113.25793457 49.95203400]
[115.57846832 54.12626266]
[115.30140686 59.80255127]
[111.65094757 65.31487274]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[103.79721069 125.24452972]
[101.57209015 140.07856750]
[99.34697723 154.91261292]
[98.00874329 169.85279846]
[97.56213379 184.84614563]
[97.11553192 199.83949280]
[96.66892242 214.83285522]
[99.54143524 223.50386047]
[96.10240173 230.04563904]
[98.84549713 238.75845337]
[95.30944824 245.24830627]
[94.41662598 260.22171021]
[93.52381134 275.19512939]
[92.74249268 290.17474365]
[92.07270813 305.15979004]
[91.40292358 320.14483643]
[90.73313904 335.12988281]
[90.06335449 350.11489868]
[89.39356232 365.09994507]
[102.46632385 370.75274658]
[112.80267334 380.50781250]
[119.17500305 393.17849731]
[120.83608246 407.23364258]
[117.60662079 420.98257446]
[109.89440155 432.77838135]
[98.64288330 441.21533203]
[85.21584320 445.29623413]
[84.32302094 460.26965332]
[83.43020630 475.24304199]
[82.53739166 490.21646118]
[92.74997711 501.97830200]
[91.63123322 517.15075684]
[80.35517883 526.81439209]
[79.46235657 541.78778076]
[89.67494202 553.54962158]
[88.55619812 568.72210693]
[77.28014374 578.38574219]
[76.38732910 593.35913086]
[75.49451447 608.33251953]
[86.97765350 618.94720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[11 204]
[12 203]
[15 200]
[16 199]
[17 198]
[18 197]
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[32 183]
[33 182]
[34 181]
[35 179]
[36 177]
[37 176]
[38 175]
[39 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 167]
[53 166]
[54 165]
[55 162]
[57 160]
[58 159]
[59 158]
[60 157]
[63 155]
[64 154]
[65 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[73 146]
[74 145]
[75 144]
[83 137]
[84 136]
[85 135]
[96 122]
[97 121]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
