%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[106.93225098 776.86395264]
[96.69429779 765.82904053]
[88.88752747 752.95892334]
[83.83161926 738.78070068]
[81.73360443 723.87487793]
[82.67939758 708.85186768]
[86.63027191 694.32690430]
[93.42444611 680.89471436]
[102.78369141 669.10528564]
[114.32476044 659.44152832]
[127.57505035 652.29907227]
[141.99197388 647.97039795]
[140.65373230 633.03021240]
[139.31550598 618.09002686]
[137.97726440 603.14984131]
[135.97325134 588.28436279]
[133.30746460 573.52313232]
[130.64166260 558.76190186]
[127.97586823 544.00067139]
[125.31007385 529.23944092]
[122.53446198 514.49853516]
[119.64918518 499.77862549]
[115.27778625 493.81936646]
[116.83225250 484.81817627]
[106.95623016 473.66857910]
[112.11780548 458.71301270]
[109.45200348 443.95181274]
[106.78620911 429.19058228]
[97.81510925 428.59463501]
[89.10309601 426.34570312]
[80.95226288 422.51922607]
[73.64572144 417.24536133]
[67.43777466 410.70458984]
[62.54504776 403.12152100]
[59.13894272 394.75720215]
[57.33963394 385.90014648]
[57.21183014 376.85635376]
[58.76244354 367.93875122]
[61.94027328 359.45632935]
[66.63768768 351.70349121]
[72.69425964 344.94982910]
[79.90226746 339.43069458]
[88.01379395 335.33908081]
[96.74927521 332.81875610]
[96.30267334 317.82540894]
[95.85606384 302.83206177]
[95.40946198 287.83871460]
[92.06819916 281.24645996]
[95.06949615 272.61917114]
[94.84616852 257.62084961]
[94.62284088 242.62249756]
[94.39951324 227.62416077]
[94.17618561 212.62582397]
[93.95285797 197.62748718]
[93.72953033 182.62915039]
[93.50620270 167.63081360]
[93.28287506 152.63247681]
[93.05954742 137.63414001]
[92.83621979 122.63580322]
[92.61289215 107.63745880]
[91.38591766 92.68772888]
[81.68708801 80.18799591]
[87.45080566 66.45378113]
[85.22568512 51.61973190]
[83.00057220 36.78569031]
[80.77545166 21.95164680]
[78.55033875 7.11760235]
[76.32521820 -7.71644115]
[63.89970016 -17.11028099]
[61.85443115 -32.18581009]
[70.88659668 -43.97375107]
[68.66147614 -58.80779648]
[56.85943985 -72.94262695]
[63.91463089 -89.01095581]
[54.03077316 -101.36489868]
[59.58937073 -115.18341064]
[57.14364243 -129.98268127]
[53.25068283 -135.32650757]
[52.72043991 -140.98475647]
[54.85226822 -145.25843811]
[52.84825516 -160.12396240]
[50.84424210 -174.98950195]
[47.11211014 -180.44685364]
[46.75057220 -186.11839294]
[49.00869751 -190.32670593]
[47.44817352 -205.24531555]
[45.88765335 -220.16390991]
[36.75663757 -233.08425903]
[43.12787247 -246.54740906]
[41.56734848 -261.46600342]
[40.00682831 -276.38461304]
[25.12331963 -278.91122437]
[11.47390079 -285.36071777]
[0.07144620 -295.25448608]
[-8.23790550 -307.85836792]
[-12.83754635 -322.23703003]
[-13.38615036 -337.32348633]
[-9.84300995 -351.99826050]
[-2.47104764 -365.17233276]
[8.18268681 -375.86816406]
[21.32761574 -383.29199219]
[35.98830032 -386.89297485]
[51.07681656 -386.40383911]
[65.47349548 -381.86093140]
[78.11001587 -373.60131836]
[88.04866028 -362.23797607]
[94.55191040 -348.61407471]
[97.13718414 -333.74063110]
[95.61264038 -318.72137451]
[90.09140778 -304.67080688]
[80.98320007 -292.63156128]
[68.96390533 -283.49707031]
[54.92543030 -277.94512939]
[56.48595428 -263.02655029]
[58.04647827 -248.10794067]
[67.06587219 -236.25466919]
[60.80625534 -221.72444153]
[62.36677933 -206.80583191]
[63.92730331 -191.88722229]
[65.70977020 -176.99351501]
[67.71378326 -162.12797546]
[69.71779633 -147.26245117]
[71.94291687 -132.42840576]
[74.38864136 -117.62913513]
[84.09756470 -106.33374023]
[78.71389771 -91.45668030]
[88.36172485 -84.15969849]
[90.52042389 -71.85019684]
[83.49552155 -61.03291321]
[85.72064209 -46.19886780]
[97.81388092 -37.57975006]
[100.28178406 -22.56761932]
[91.15926361 -9.94155884]
[93.38437653 4.89248514]
[95.60949707 19.72652817]
[97.83461761 34.56057358]
[100.05973053 49.39461517]
[102.28485107 64.22866058]
[111.82452393 75.66735840]
[106.21996307 90.46260834]
[113.68933868 77.45459747]
[126.95629883 70.45547485]
[141.90992737 71.63399506]
[153.91668701 80.62497711]
[159.25614929 94.64247894]
[156.27381897 109.34300995]
[145.89379883 120.17146301]
[131.33247375 123.77251434]
[117.10179901 119.03034973]
[107.61122894 107.41413116]
[107.83455658 122.41246796]
[108.05788422 137.41081238]
[108.28121185 152.40914917]
[108.50453949 167.40748596]
[108.72786713 182.40582275]
[108.95119476 197.40415955]
[109.17452240 212.40249634]
[109.39785004 227.40083313]
[109.62117767 242.39916992]
[109.84450531 257.39752197]
[110.06783295 272.39584351]
[110.40280914 287.39208984]
[110.84941864 302.38546753]
[111.29602051 317.37881470]
[111.74263000 332.37216187]
[132.07279968 339.84252930]
[147.14421082 355.33843994]
[154.01988220 375.78713989]
[151.38285828 397.15597534]
[139.78837585 415.24768066]
[121.54743195 426.52478027]
[124.21322632 441.28601074]
[126.87902069 456.04721069]
[136.94570923 468.25265503]
[131.59347534 482.15237427]
[134.36907959 496.89334106]
[137.25434875 511.61322021]
[141.97601318 519.43267822]
[140.07128906 526.57366943]
[142.73709106 541.33489990]
[145.40287781 556.09613037]
[148.06867981 570.85729980]
[150.73446655 585.61853027]
[160.15469360 573.94549561]
[175.05459595 572.21551514]
[186.89883423 581.41955566]
[188.90249634 596.28509521]
[179.91778564 608.29656982]
[165.09155273 610.57318115]
[152.91744995 601.81164551]
[154.25569153 616.75183105]
[155.59391785 631.69201660]
[156.93215942 646.63220215]
[171.88887024 648.32977295]
[186.19758606 653.00366211]
[199.27236938 660.46252441]
[210.57783508 670.40093994]
[219.65101624 682.41186523]
[226.12037659 696.00347900]
[229.72099304 710.61926270]
[230.30543518 725.66064453]
[227.84976196 740.51171875]
[222.45452881 754.56433105]
[214.34068298 767.24304199]
[203.84045410 778.02868652]
[191.38385010 786.47961426]
[177.48094177 792.24969482]
[162.70104980 795.10272217]
[147.64939880 794.92181396]
[132.94235229 791.71441650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 193]
[13 192]
[14 191]
[15 190]
[16 183]
[17 182]
[18 181]
[19 180]
[20 179]
[21 177]
[22 176]
[24 175]
[26 173]
[27 172]
[28 171]
[44 165]
[45 164]
[46 163]
[47 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[61 140]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[71 130]
[72 129]
[74 126]
[76 124]
[77 123]
[80 122]
[81 121]
[82 120]
[85 119]
[86 118]
[87 117]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
