%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[104.44521332 462.58160400]
[112.90065002 448.53036499]
[112.67732239 433.53201294]
[112.45399475 418.53369141]
[112.23066711 403.53533936]
[104.30474091 390.92468262]
[111.83571625 377.01083374]
[109.09351349 373.10067749]
[108.77853394 367.42636108]
[111.83571625 361.56417847]
[112.05904388 346.56585693]
[112.28237152 331.56750488]
[112.50569916 316.56918335]
[112.72902679 301.57083130]
[110.54877472 298.79977417]
[109.60240173 294.83499146]
[110.43631744 290.26794434]
[113.31217194 285.91174316]
[106.34613037 272.74652100]
[114.89111328 259.43133545]
[115.78392792 244.45793152]
[116.67674255 229.48452759]
[117.56955719 214.51110840]
[118.46237183 199.53770447]
[116.79083252 184.63113403]
[112.60382080 170.22735596]
[101.62144470 160.16571045]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[86.97487640 109.73268890]
[83.80728149 98.52520752]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[79.64913177 87.63237762]
[68.08792877 97.18951416]
[53.31384659 99.78303528]
[39.18878174 94.73501587]
[29.40499306 83.36499023]
[26.51994324 68.64505005]
[31.28777504 54.42296600]
[42.46218872 44.41634369]
[57.12222290 41.24089813]
[71.43577576 45.72668076]
[81.66089630 56.70033264]
[79.87843323 41.80661774]
[78.09597015 26.91289902]
[68.77359772 14.12993908]
[74.94367981 0.57341486]
[73.16121674 -14.32030201]
[71.37875366 -29.21401978]
[69.59628296 -44.10773849]
[66.38301086 -58.75952530]
[61.76900101 -73.03225708]
[57.15499115 -87.30499268]
[52.54098511 -101.57772827]
[38.75009155 -108.81989288]
[34.27415085 -123.36020660]
[41.26343918 -136.46308899]
[36.64942932 -150.73580933]
[25.04232788 -161.48689270]
[28.48957253 -175.97709656]
[22.56639481 -162.19609070]
[9.73351002 -154.42968750]
[-5.22273588 -155.57455444]
[-16.72403145 -165.20368958]
[-20.48067665 -179.72566223]
[-15.09153843 -193.72412109]
[-2.56662965 -201.97801208]
[12.42256737 -201.40882874]
[24.28611374 -192.22789001]
[21.40084076 -206.94778442]
[18.51556969 -221.66766357]
[15.63029671 -236.38755798]
[0.64822811 -235.33056641]
[-14.35017395 -236.12274170]
[-29.13753891 -238.75209045]
[-43.48969269 -243.17874146]
[-57.18906021 -249.33560181]
[-70.02796173 -257.12933350]
[-81.81176758 -266.44177246]
[-92.36183167 -277.13174438]
[-101.51822662 -289.03723145]
[-109.14213562 -301.97769165]
[-115.11798096 -315.75698853]
[-119.35517883 -330.16619873]
[-121.78948975 -344.98693848]
[-122.38400269 -359.99447632]
[-121.12972260 -374.96130371]
[-118.04564667 -389.66055298]
[-113.17854309 -403.86938477]
[-106.60218048 -417.37240601]
[-98.41626740 -429.96487427]
[-88.74489594 -441.45593262]
[-77.73468018 -451.67132568]
[-65.55253601 -460.45626831]
[-52.38313675 -467.67752075]
[-38.42612839 -473.22564697]
[-23.89309883 -477.01651001]
[-9.00436401 -478.99264526]
[6.01436901 -479.12411499]
[20.93541908 -477.40893555]
[35.53258514 -473.87304688]
[49.58457947 -468.57012939]
[62.87837982 -461.58053589]
[75.21244812 -453.01022339]
[86.39981079 -442.98910522]
[96.27086639 -431.66912842]
[104.67597198 -419.22189331]
[111.48771667 -405.83609009]
[116.60282135 -391.71463013]
[119.94374847 -377.07162476]
[121.45985413 -362.12902832]
[121.12815857 -347.11337280]
[118.95367432 -332.25231934]
[114.96938324 -317.77111816]
[109.23567200 -303.88934326]
[101.83947754 -290.81738281]
[92.89290619 -278.75344849]
[82.53160095 -267.88040161]
[70.91262817 -258.36309814]
[58.21213150 -250.34580994]
[44.62264633 -243.95007324]
[30.35018730 -239.27282715]
[33.23546219 -224.55294800]
[36.12073135 -209.83305359]
[39.00600433 -195.11315918]
[42.76230621 -180.59109497]
[54.03938293 -170.86090088]
[50.92216492 -155.34982300]
[55.53617477 -141.07708740]
[68.87291718 -134.54510498]
[73.75550079 -120.13624573]
[66.81371307 -106.19173431]
[71.42772675 -91.91899872]
[76.04173279 -77.64627075]
[80.65574646 -63.37353516]
[84.19608307 -77.94974518]
[93.29438019 -89.87538910]
[106.41741180 -97.14078522]
[121.35372162 -98.52158356]
[135.58627319 -93.78509521]
[146.71664429 -83.72949982]
[152.86915588 -70.04934692]
[153.00701904 -55.04998398]
[147.10697937 -41.25905991]
[136.16331482 -31.00059128]
[122.02021790 -26.00331116]
[107.06105042 -27.10934830]
[93.80669403 -34.13231659]
[84.49000549 -45.89020157]
[86.27246857 -30.99648476]
[88.05493164 -16.10276794]
[89.83740234 -1.20905101]
[99.03227234 10.50860977]
[92.98968506 25.13043213]
[94.77214813 40.02415085]
[96.55461884 54.91786575]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[115.64680481 95.57771301]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[130.88475037 151.65921021]
[127.00760651 166.04034424]
[131.19461060 180.44412231]
[133.86293030 165.68336487]
[140.07176208 152.02868652]
[149.44148254 140.31507874]
[161.39909363 131.25883484]
[175.21339417 125.41375732]
[190.03964233 123.13726807]
[204.97120667 124.56856537]
[219.09500122 129.62013245]
[231.54736328 137.98307800]
[241.56681824 149.14598083]
[248.54067993 162.42623901]
[252.04249573 177.01174927]
[251.85810852 192.01062012]
[247.99882507 206.50564575]
[240.70062256 219.61047363]
[230.40979004 230.52371216]
[217.75561523 238.57801819]
[203.51191711 243.28088379]
[188.54968262 244.34471130]
[173.78387451 241.70445251]
[160.11743164 235.52156067]
[148.38604736 226.17411804]
[139.30709839 214.23373413]
[133.43577576 200.43052673]
[132.54296875 215.40393066]
[131.65014648 230.37733459]
[130.75733948 245.35073853]
[129.86451721 260.32415771]
[136.76669312 274.56039429]
[128.28556824 286.80456543]
[127.72736359 301.79415894]
[127.50403595 316.79251099]
[127.28070831 331.79083252]
[127.05738068 346.78918457]
[126.83405304 361.78750610]
[126.83405304 376.78750610]
[134.77595520 390.47097778]
[127.22901154 403.31201172]
[127.45233917 418.31036377]
[127.67566681 433.30868530]
[127.89899445 448.30703735]
[136.76904297 462.10031128]
[129.01922607 476.55273438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 208]
[3 207]
[4 206]
[5 205]
[7 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[18 197]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 167]
[26 166]
[28 164]
[29 163]
[30 162]
[33 160]
[34 159]
[45 158]
[46 157]
[47 156]
[49 154]
[50 153]
[51 152]
[52 151]
[53 137]
[54 136]
[55 135]
[56 134]
[59 131]
[60 130]
[62 128]
[71 127]
[72 126]
[73 125]
[74 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
