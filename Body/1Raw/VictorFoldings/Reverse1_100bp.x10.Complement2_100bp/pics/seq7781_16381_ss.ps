%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[53.87651825 652.92187500]
[42.48677444 662.71014404]
[30.01926613 671.08258057]
[16.64901161 677.92163086]
[2.56371284 683.13128662]
[-12.03889751 686.63842773]
[-26.95382118 688.39385986]
[-41.97167206 688.37286377]
[-56.88162994 686.57574463]
[-71.47438049 683.02777100]
[-85.54505920 677.77874756]
[-98.89613342 670.90234375]
[-111.34018707 662.49511719]
[-122.70251465 652.67504883]
[-132.82362366 641.58001709]
[-141.56140137 629.36578369]
[-148.79319763 616.20379639]
[-154.41749573 602.27886963]
[-158.35533142 587.78643799]
[-160.55142212 572.93005371]
[-160.97494507 557.91815186]
[-159.61996460 542.96148682]
[-156.50547791 528.27014160]
[-151.67521667 514.05029297]
[-145.19699097 500.50149536]
[-137.16174316 487.81405640]
[-127.68228149 476.16604614]
[-116.89168549 465.72097778]
[-104.94142914 456.62551880]
[-91.99928284 449.00729370]
[-78.24692535 442.97329712]
[-63.87742615 438.60824585]
[-49.09250641 435.97335815]
[-34.09972382 435.10571289]
[-19.10955429 436.01739502]
[-4.33243752 438.69567871]
[0.06856061 424.35583496]
[4.46955872 410.01599121]
[8.87055683 395.67614746]
[13.27155495 381.33630371]
[17.67255211 366.99645996]
[22.07355118 352.65658569]
[10.77997875 341.09945679]
[6.83304882 325.33309937]
[11.40188599 309.63778687]
[23.33040810 298.32382202]
[39.42805099 294.54788208]
[43.61506271 280.14410400]
[47.80207443 265.74032593]
[46.65059662 258.43991089]
[52.16013336 251.15412903]
[56.56113052 236.81428528]
[60.96212769 222.47444153]
[59.91947174 215.15769958]
[65.53687286 207.95474243]
[70.15087891 193.68200684]
[74.76489258 179.40927124]
[79.27252197 165.10258484]
[83.67351532 150.76274109]
[86.99577332 136.13526917]
[89.22089386 121.30123138]
[78.78853607 110.95469666]
[76.39088440 96.45861816]
[82.93615723 83.30398560]
[95.94506073 76.47364807]
[98.17018127 61.63960648]
[100.39529419 46.80556107]
[88.17722321 35.10877609]
[85.36640930 18.59815598]
[92.87531281 3.81376696]
[107.56803894 -3.50752401]
[109.57205200 -18.37305260]
[111.57606506 -33.23857880]
[98.49118805 -40.92374802]
[89.37010193 -53.00053406]
[85.57786560 -67.60987091]
[87.66220856 -82.51768494]
[95.27468109 -95.45658875]
[107.22840118 -104.47068024]
[121.68308258 -108.21121216]
[123.68709564 -123.07673645]
[125.69110870 -137.94227600]
[119.86688995 -152.65243530]
[129.23519897 -164.23190308]
[131.23921204 -179.09742737]
[133.24322510 -193.96295166]
[135.24723816 -208.82849121]
[137.25125122 -223.69401550]
[139.25526428 -238.55953979]
[141.25927734 -253.42506409]
[143.26329041 -268.29058838]
[137.43907166 -283.00076294]
[146.80738831 -294.58023071]
[148.81140137 -309.44577026]
[150.59387207 -324.33947754]
[152.15438843 -339.25808716]
[153.71490479 -354.17669678]
[139.57342529 -359.41775513]
[127.18007660 -368.01171875]
[117.31394958 -379.41830444]
[110.59522247 -392.92050171]
[107.44625092 -407.66958618]
[108.06497192 -422.73834229]
[112.41249084 -437.17959595]
[120.21553040 -450.08554077]
[130.98356628 -460.64489746]
[144.03973389 -468.19390869]
[158.56329346 -472.25802612]
[173.64129639 -472.58175659]
[188.32591248 -469.14477539]
[201.69406128 -462.16311646]
[212.90541077 -452.07568359]
[221.25520325 -439.51654053]
[226.21856689 -425.27520752]
[227.48348999 -410.24688721]
[224.97047424 -395.37625122]
[218.83749390 -381.59811401]
[209.47004700 -369.77856445]
[197.45700073 -360.66058350]
[183.55349731 -354.81735229]
[168.63351440 -352.61614990]
[167.07299805 -337.69757080]
[165.51246643 -322.77896118]
[167.77059937 -318.57064819]
[167.40905762 -312.89910889]
[163.67692566 -307.44174194]
[161.67291260 -292.57620239]
[167.64047241 -278.92932129]
[158.12882996 -266.28659058]
[156.12481689 -251.42105103]
[154.12080383 -236.55552673]
[152.11677551 -221.69000244]
[150.11276245 -206.82447815]
[148.10874939 -191.95893860]
[146.10473633 -177.09341431]
[144.10072327 -162.22789001]
[150.06828308 -148.58099365]
[140.55664062 -135.93824768]
[138.55262756 -121.07272339]
[136.54861450 -106.20719910]
[149.49676514 -98.77250671]
[158.63676453 -86.91477966]
[162.55117798 -72.42194366]
[160.61343384 -57.49436569]
[153.08792114 -44.41077042]
[141.09443665 -35.18042755]
[126.44158936 -31.23456764]
[124.43757629 -16.36903954]
[122.43356323 -1.50351036]
[132.90316772 6.78078556]
[137.95265198 19.25663567]
[136.16394043 32.70543289]
[127.89823914 43.60023117]
[115.22933960 49.03068161]
[113.00422668 63.86472321]
[110.77910614 78.69876862]
[121.21146393 89.04530334]
[123.60911560 103.54138184]
[117.06384277 116.69601440]
[104.05493927 123.52635193]
[101.82981873 138.36039734]
[112.37789917 127.69559479]
[126.81878662 123.63840485]
[141.37767029 127.24936676]
[152.24888611 137.58459473]
[156.59072876 151.94245911]
[153.26823425 166.56987000]
[143.14993286 177.64324951]
[128.88069153 182.26803589]
[114.19046021 179.23533630]
[102.91924286 169.33789062]
[98.01336670 155.16374207]
[93.61236572 169.50358582]
[94.08619690 178.62571716]
[89.03762054 184.02328491]
[84.42361450 198.29602051]
[79.80960846 212.56874084]
[75.30197906 226.87542725]
[70.90097809 241.21528625]
[66.49997711 255.55513000]
[62.20585632 269.92733765]
[58.01884460 284.33111572]
[53.83183289 298.73489380]
[64.02294922 308.31634521]
[69.06752777 321.29202271]
[68.03425598 335.10906982]
[61.18162537 347.07528687]
[49.89641190 354.88378906]
[36.41339874 357.05758667]
[32.01240158 371.39743042]
[27.61140251 385.73730469]
[23.21040344 400.07714844]
[18.80940628 414.41699219]
[14.40840816 428.75683594]
[10.00741005 443.09667969]
[23.74284172 449.16909790]
[36.66363907 456.82345581]
[48.58841705 465.95233154]
[59.34977341 476.42752075]
[68.79663086 488.10198975]
[76.79636383 500.81185913]
[83.23667908 514.37866211]
[88.02716827 528.61199951]
[91.10056305 543.31201172]
[92.41373444 558.27233887]
[91.94824219 573.28302002]
[89.71061707 588.13323975]
[85.73227692 602.61456299]
[80.06906891 616.52374268]
[72.80049896 629.66540527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[47 183]
[48 182]
[49 181]
[51 180]
[52 179]
[53 178]
[55 177]
[56 176]
[57 175]
[58 173]
[59 172]
[60 161]
[61 160]
[65 156]
[66 155]
[67 154]
[71 149]
[72 148]
[73 147]
[80 140]
[81 139]
[82 138]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
