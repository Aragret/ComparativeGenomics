%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[89.17443848 552.85473633]
[75.27480316 558.53955078]
[60.80918884 562.57220459]
[45.97320938 564.89819336]
[30.96751404 565.48608398]
[15.99503422 564.32794189]
[1.25825691 561.43933105]
[-13.04352093 556.85943604]
[-26.71688271 550.65008545]
[-39.57691193 542.89532471]
[-51.44969559 533.70007324]
[-62.17465973 523.18853760]
[-71.60676575 511.50302124]
[-79.61846161 498.80145264]
[-86.10138702 485.25567627]
[-90.96787262 471.04885864]
[-94.15210724 456.37313843]
[-95.61102295 441.42694092]
[-95.32489777 426.41247559]
[-93.29759216 411.53274536]
[-89.55652618 396.98898315]
[-84.15229034 382.97787476]
[-77.15797424 369.68893433]
[-68.66817474 357.30184937]
[-58.79769516 345.98416138]
[-47.68003082 335.88891602]
[-35.46553040 327.15264893]
[-22.31937981 319.89349365]
[-8.41937160 314.20962524]
[6.04651690 310.17791748]
[20.88264847 307.85290527]
[35.88838577 307.26602173]
[50.86078644 308.42520142]
[53.74605942 293.70532227]
[56.63133240 278.98541260]
[59.51660538 264.26553345]
[62.40187836 249.54563904]
[57.25717163 235.56774902]
[67.50447083 223.51356506]
[70.38973999 208.79367065]
[73.16535187 194.05270386]
[75.83115387 179.29148865]
[78.49694824 164.53027344]
[81.16274261 149.76905823]
[83.82853699 135.00784302]
[70.20534515 141.28546143]
[56.73546982 134.68528748]
[53.34840012 120.07269287]
[62.54096222 108.21955872]
[77.53673553 107.86356354]
[87.28096771 119.26554108]
[91.03726959 104.74348450]
[89.84651184 96.77136993]
[94.95910645 90.03399658]
[98.93120575 75.56947327]
[102.90330505 61.10494995]
[106.87539673 46.64042282]
[110.84749603 32.17589951]
[114.81958771 17.71137619]
[118.79168701 3.24685287]
[120.90631104 -11.60334492]
[121.12963867 -26.60168266]
[121.35296631 -41.60001755]
[110.65094757 -31.08970451]
[95.70717621 -29.79212952]
[83.35374451 -38.30052567]
[79.23847961 -52.72496796]
[85.24282074 -66.47080231]
[98.62166595 -73.25360870]
[113.25838470 -69.97238922]
[122.46184540 -58.12550354]
[124.24431610 -73.01921844]
[126.02677917 -87.91293335]
[127.80924225 -102.80665588]
[129.59170532 -117.70037079]
[131.37417603 -132.59408569]
[133.15664673 -147.48780823]
[134.82818604 -162.39437866]
[135.38639832 -177.38398743]
[134.93978882 -192.37733459]
[134.49317932 -207.37069702]
[134.04656982 -222.36404419]
[133.59997559 -237.35739136]
[118.66963196 -239.05027771]
[104.13221741 -242.85081482]
[90.28366852 -248.68164062]
[77.40593719 -256.42404175]
[65.76119995 -265.92041016]
[55.58651733 -276.97738647]
[47.08904266 -289.36987305]
[40.44177246 -302.84558105]
[35.78002930 -317.13012695]
[33.19873047 -331.93276978]
[32.75041962 -346.95208740]
[34.44422913 -361.88229370]
[38.24567032 -376.41949463]
[44.07735825 -390.26766968]
[51.82056046 -403.14492798]
[61.31763458 -414.78906250]
[72.37523651 -424.96307373]
[84.76824951 -433.45977783]
[98.24436188 -440.10623169]
[112.52922058 -444.76708984]
[127.33200073 -447.34747314]
[142.35134888 -447.79483032]
[157.28146362 -446.10009766]
[171.81842041 -442.29776001]
[185.66624451 -436.46520996]
[198.54301453 -428.72122192]
[210.18658447 -419.22341919]
[220.35989380 -408.16519165]
[228.85583496 -395.77166748]
[235.50143433 -382.29513550]
[240.16140747 -368.00997925]
[242.74087524 -353.20703125]
[243.18733215 -338.18768311]
[241.49166870 -323.25765991]
[237.68843079 -308.72094727]
[231.85502625 -294.87347412]
[224.11022949 -281.99719238]
[214.61172485 -270.35421753]
[203.55285645 -260.18157959]
[191.15879822 -251.68640137]
[177.68185425 -245.04164124]
[163.39642334 -240.38255310]
[148.59332275 -237.80400085]
[149.03993225 -222.81063843]
[149.48652649 -207.81729126]
[149.93313599 -192.82394409]
[150.37974548 -177.83059692]
[159.34194946 -189.85884094]
[173.34663391 -195.23184204]
[188.05426025 -192.28472900]
[198.90753174 -181.93066406]
[202.54344177 -167.37800598]
[197.83535767 -153.13601685]
[186.24214172 -143.61776733]
[171.35606384 -141.77256775]
[157.78974915 -148.17218018]
[149.74678040 -160.83386230]
[152.17736816 -153.85430908]
[148.05035400 -145.70533752]
[146.26789856 -130.81161499]
[144.48542786 -115.91790771]
[142.70295715 -101.02418518]
[140.92050171 -86.13047028]
[139.13803101 -71.23675537]
[137.35556030 -56.34303665]
[136.35130310 -41.37668991]
[136.12797546 -26.37835503]
[135.90464783 -11.38001728]
[143.22023010 -24.47513962]
[154.34736633 -34.53431702]
[168.11175537 -40.49598694]
[183.06082153 -41.73099136]
[197.61695862 -38.10900497]
[210.24403381 -30.01226044]
[219.60945129 -18.29522705]
[224.72488403 -4.19443274]
[225.05046082 10.80203342]
[220.55184937 25.11155891]
[211.70379639 37.22402191]
[199.44003296 45.86117172]
[185.05480957 50.11150360]
[170.06622314 49.52647018]
[156.05606079 44.16781616]
[144.50283813 34.60105133]
[136.62579346 21.83577538]
[133.25621033 7.21894932]
[129.28411865 21.68347359]
[125.31201935 36.14799881]
[121.33992004 50.61252213]
[117.36782837 65.07704163]
[113.39572906 79.54156494]
[109.42363739 94.00609589]
[105.55932617 108.49978638]
[101.80302429 123.02184296]
[98.58975220 137.67362976]
[95.92395782 152.43484497]
[93.25816345 167.19606018]
[90.59236908 181.95729065]
[87.92657471 196.71850586]
[89.48103333 205.71969604]
[85.10963440 211.67893982]
[82.22436523 226.39883423]
[87.16269684 241.42958069]
[77.12176514 252.43090820]
[74.23649597 267.15078735]
[71.35122681 281.87069702]
[68.46595001 296.59057617]
[65.58068085 311.31048584]
[79.88275909 315.88943481]
[93.55654144 322.09783936]
[106.41708374 329.85174561]
[118.29048157 339.04626465]
[129.01614380 349.55703735]
[138.44903564 361.24194336]
[146.46157837 373.94296265]
[152.94540405 387.48831177]
[157.81283569 401.69479370]
[160.99804688 416.37033081]
[162.45796204 431.31640625]
[162.17283630 446.33090210]
[160.14653015 461.21078491]
[156.40643311 475.75479126]
[151.00312805 489.76623535]
[144.00970459 503.05566406]
[135.52073669 515.44329834]
[125.65100861 526.76165771]
[114.53401947 536.85766602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[39 185]
[40 184]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[51 177]
[52 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[60 169]
[61 151]
[62 150]
[63 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 140]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
