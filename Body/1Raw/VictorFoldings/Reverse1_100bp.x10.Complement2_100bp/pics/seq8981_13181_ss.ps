%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[26.04206085 419.59536743]
[23.78783035 434.44308472]
[19.79329681 448.91995239]
[14.11453629 462.82275391]
[6.83127022 475.95632935]
[-1.95425522 488.13626099]
[-12.11870575 499.19158936]
[-23.51938629 508.96710205]
[-35.99625397 517.32556152]
[-49.37414551 524.14971924]
[-63.46526337 529.34362793]
[-78.07178497 532.83441162]
[-92.98866272 534.57312012]
[-108.00648499 534.53533936]
[-122.91442108 532.72161865]
[-137.50318909 529.15728760]
[-151.56799316 523.89251709]
[-164.91137695 517.00122070]
[-177.34600830 508.58001709]
[-188.69735718 498.74725342]
[-198.80604553 487.64089966]
[-207.53015137 475.41690063]
[-214.74723816 462.24685669]
[-220.35595703 448.31564331]
[-224.27757263 433.81884766]
[-226.45706177 418.95999146]
[-226.86378479 403.94763184]
[-225.49206543 388.99252319]
[-222.36116028 374.30465698]
[-217.51499939 360.09017944]
[-211.02162170 346.54867554]
[-202.97219849 333.87023926]
[-193.47972107 322.23281860]
[-182.67744446 311.79983521]
[-170.71702576 302.71771240]
[-157.76635742 295.11398315]
[-144.00726318 289.09539795]
[-129.63288879 284.74639893]
[-114.84503174 282.12805176]
[-99.85128784 281.27716064]
[-84.86215210 282.20562744]
[-70.08803558 284.90042114]
[-55.73635864 289.32373047]
[-42.00858688 295.41345215]
[-34.34799194 282.51712036]
[-26.68739319 269.62078857]
[-19.02679443 256.72448730]
[-11.36619759 243.82814026]
[-3.70560050 230.93182373]
[-18.47092438 233.57476807]
[-30.85871506 225.11648560]
[-33.77268219 210.40225220]
[-25.54357338 197.86103821]
[-10.88539696 194.67704773]
[1.80497932 202.67419434]
[5.25807858 217.27041626]
[14.03868198 205.10896301]
[22.81928444 192.94750977]
[22.95600319 188.17358398]
[26.09312248 183.43486023]
[32.04680252 180.55992126]
[41.18560791 168.66529846]
[50.32440948 156.77066040]
[59.28510284 144.74128723]
[60.12415314 127.21236420]
[76.98609924 119.81262207]
[85.58466339 107.52178192]
[84.25228119 95.95173645]
[90.99935913 86.45867157]
[102.36426544 83.91307068]
[111.14487457 71.75161743]
[119.92547607 59.59016037]
[128.70608521 47.42870331]
[137.48667908 35.26724625]
[134.38288879 18.05138779]
[144.49143982 4.19021225]
[161.16249084 1.97328782]
[169.76106262 -10.31754971]
[178.35961914 -22.60838890]
[186.95819092 -34.89922714]
[189.31330872 -43.72482681]
[195.77738953 -47.30775070]
[204.55799866 -59.46920776]
[213.33859253 -71.63066101]
[222.11920166 -83.79212189]
[228.89920044 -97.17239380]
[233.51319885 -111.44512177]
[230.39598083 -126.95619965]
[241.67306519 -136.68640137]
[246.28706360 -150.95913696]
[250.90107727 -165.23187256]
[255.51509094 -179.50460815]
[260.12908936 -193.77732849]
[246.57752991 -200.26106262]
[234.01112366 -208.49322510]
[222.65411377 -218.32693481]
[212.70918274 -229.58668518]
[204.35383606 -242.07153320]
[197.73715210 -255.55867004]
[192.97723389 -269.80740356]
[190.15901184 -284.56347656]
[189.33279419 -299.56347656]
[190.51332092 -314.53979492]
[193.67953491 -329.22512817]
[198.77490234 -343.35736084]
[205.70852661 -356.68435669]
[214.35664368 -368.96823120]
[224.56491089 -379.98977661]
[236.15118408 -389.55230713]
[248.90866089 -397.48513794]
[262.60968018 -403.64675903]
[277.00973511 -407.92715454]
[291.85183716 -410.24993896]
[306.87112427 -410.57369995]
[321.79953003 -408.89260864]
[336.37066650 -405.23672485]
[350.32446289 -399.67123413]
[363.41195679 -392.29550171]
[375.39950562 -383.24111938]
[386.07324219 -372.66970825]
[395.24267578 -360.76989746]
[402.74411011 -347.75408936]
[408.44372559 -333.85452271]
[412.23980713 -319.31927490]
[414.06460571 -304.40774536]
[413.88552856 -289.38604736]
[411.70578003 -274.52227783]
[407.56427002 -260.08166504]
[401.53494263 -246.32191467]
[393.72531128 -233.48861694]
[384.27484131 -221.81079102]
[373.35211182 -211.49682617]
[361.15213013 -202.73078918]
[347.89254761 -195.66914368]
[333.81002808 -190.43788147]
[319.15588379 -187.13038635]
[304.19161987 -185.80566406]
[289.18435669 -186.48736572]
[274.40182495 -189.16333008]
[269.78781128 -174.89059448]
[265.17382812 -160.61785889]
[260.55981445 -146.34512329]
[255.94580078 -132.07238770]
[259.39303589 -117.58219910]
[247.78593445 -106.83111572]
[243.17192078 -92.55838013]
[253.73022461 -103.21306610]
[266.74420166 -110.67203522]
[281.27438354 -114.39682770]
[296.27178955 -114.11854553]
[310.65377808 -109.85726929]
[323.38211060 -101.92063141]
[333.53784180 -90.88158417]
[340.38790894 -77.53704834]
[343.43777466 -62.85037231]
[342.46722412 -47.88180542]
[337.54638672 -33.71193695]
[329.03045654 -21.36370087]
[317.53421021 -11.72853088]
[303.88757324 -5.50199699]
[289.07574463 -3.13359737]
[274.16796875 -4.79430914]
[260.24044800 -10.36424446]
[248.29861450 -19.44130516]
[239.20460510 -31.37020874]
[233.61486816 -45.28979874]
[231.93298340 -60.19520569]
[234.28065491 -75.01151276]
[225.50006104 -62.85005951]
[216.71945190 -50.68860245]
[207.93884277 -38.52714920]
[199.24902344 -26.30066299]
[190.65046692 -14.00982380]
[182.05189514 -1.71898615]
[173.45333862 10.57185173]
[177.44931030 22.82181740]
[173.60270691 35.32324600]
[163.10371399 43.44614792]
[149.64813232 44.04785156]
[140.86753845 56.20930481]
[132.08692932 68.37076569]
[123.30632782 80.53221893]
[114.52572632 92.69367218]
[113.25329590 109.41961670]
[97.87550354 116.12034607]
[89.27693939 128.41117859]
[90.74930573 141.22503662]
[83.33451080 151.28509521]
[71.44656372 153.52188110]
[70.39634705 160.04940796]
[66.75402832 164.41180420]
[62.21903992 165.90946960]
[53.08023834 177.80409241]
[43.94143677 189.69873047]
[34.98073959 201.72810364]
[26.20013809 213.88955688]
[17.41953468 226.05101013]
[9.19072628 238.59242249]
[1.53012896 251.48873901]
[-6.13046837 264.38507080]
[-13.79106617 277.28140259]
[-21.45166397 290.17773438]
[-29.11226082 303.07406616]
[-17.19769859 312.21624756]
[-6.44806767 322.70346069]
[2.98572516 334.38848877]
[10.97124386 347.10729980]
[17.39638329 360.68130493]
[22.17094612 374.91998291]
[25.22790527 389.62341309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[56 197]
[57 196]
[58 195]
[61 194]
[62 193]
[63 192]
[64 189]
[66 186]
[67 185]
[70 183]
[71 182]
[72 181]
[73 180]
[74 179]
[77 175]
[78 174]
[79 173]
[80 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 146]
[87 145]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
