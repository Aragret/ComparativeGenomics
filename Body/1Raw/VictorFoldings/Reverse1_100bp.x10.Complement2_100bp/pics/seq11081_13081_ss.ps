%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[157.98538208 324.95471191]
[166.93965149 312.88128662]
[177.67247009 302.35736084]
[189.91952515 293.64205933]
[183.23933411 280.21170044]
[176.55914307 266.78131104]
[169.87893677 253.35093689]
[151.30015564 251.32069397]
[137.58947754 238.39994812]
[134.41131592 219.67807007]
[143.22836304 202.68997192]
[135.95512390 189.57128906]
[128.68190002 176.45259094]
[126.02747345 175.55139160]
[123.57009125 173.54443359]
[121.73269653 170.50151062]
[120.90520477 166.64407349]
[121.39283752 162.32942200]
[108.91689301 154.19308472]
[109.93387604 138.40460205]
[103.45437622 124.87625122]
[96.97488403 111.34790802]
[95.41368103 126.26644135]
[87.99022675 139.30072021]
[75.95549774 148.25422668]
[61.33756256 151.61814880]
[46.59980011 148.82560730]
[34.22577667 140.34718323]
[26.30073738 127.61165619]
[24.16019058 112.76516724]
[28.16485405 98.30963135]
[37.63986969 86.68103790]
[50.98853683 79.83902740]
[65.96136475 78.93659210]
[80.03517151 84.12580872]
[90.83921051 94.53356934]
[87.08290863 80.01151276]
[83.32660675 65.48944855]
[79.57030487 50.96739197]
[75.81400299 36.44533157]
[71.62699127 22.04154968]
[67.01298523 7.76881695]
[62.39897537 -6.50391626]
[57.78496552 -20.77664948]
[53.17095566 -35.04938507]
[48.55694962 -49.32211685]
[43.94293976 -63.59484863]
[39.32892990 -77.86758423]
[34.08044052 -63.81577301]
[22.13221550 -54.74715424]
[7.18653631 -53.47173309]
[-6.12551260 -60.38471985]
[-13.67904854 -73.34404755]
[-13.13352585 -88.33412170]
[-4.65798140 -100.71011353]
[9.12134552 -106.63718414]
[23.93478012 -104.27876282]
[35.19235992 -94.36541748]
[32.52656174 -109.12663269]
[29.86076736 -123.88785553]
[27.19497108 -138.64906311]
[24.52917671 -153.41029358]
[21.86338043 -168.17150879]
[19.19758606 -182.93272400]
[16.53178978 -197.69393921]
[0.56309599 -198.32546997]
[-14.86311245 -202.47456360]
[-28.98216820 -209.93244934]
[-41.09487915 -220.32643127]
[-50.60216522 -233.13850403]
[-57.03466797 -247.73117065]
[-60.07593918 -263.37911987]
[-59.57799911 -279.30538940]
[-55.56853485 -294.71975708]
[-48.24938202 -308.85818481]
[-37.98635864 -321.02041626]
[-25.29099274 -330.60498047]
[-10.79501724 -337.13861084]
[-13.89912701 -351.81390381]
[-17.00323677 -366.48919678]
[-20.10734749 -381.16452026]
[-30.53297806 -393.06478882]
[-25.59695435 -407.11773682]
[-28.70106506 -421.79302979]
[-43.75741196 -421.80245972]
[-58.48270035 -424.94244385]
[-72.23320770 -431.07574463]
[-84.40781403 -439.93420410]
[-94.47430420 -451.13061523]
[-101.99261475 -464.17547607]
[-106.63407135 -478.49856567]
[-108.19577789 -493.47369385]
[-106.60945129 -508.44625854]
[-101.94445038 -522.76165771]
[-94.40470123 -535.79418945]
[-84.31981659 -546.97399902]
[-72.13066101 -555.81243896]
[-58.37008667 -561.92309570]
[-43.63965225 -565.03887939]
[-28.58331108 -565.02355957]
[-13.85925770 -561.87774658]
[-0.11116515 -555.73907471]
[12.05995750 -546.87579346]
[22.12204361 -535.67547607]
[29.63521767 -522.62762451]
[34.27104187 -508.30270386]
[35.82685089 -493.32696533]
[34.23463821 -478.35504150]
[29.56400490 -464.04144287]
[22.01913071 -451.01193237]
[11.92984772 -439.83605957]
[-0.26278707 -431.00241089]
[-14.02576256 -424.89715576]
[-10.92165184 -410.22183228]
[-0.71804702 -399.37124634]
[-5.43204498 -384.26861572]
[-2.32793474 -369.59332275]
[0.77617544 -354.91802979]
[3.88028550 -340.24270630]
[17.94911194 -340.33135986]
[31.76710701 -337.65777588]
[44.79704666 -332.32379150]
[56.53194809 -324.53482056]
[66.51477814 -314.59176636]
[74.35627747 -302.87948608]
[79.75011444 -289.85183716]
[82.48485565 -276.01422119]
[82.45227814 -261.90383911]
[79.65161896 -248.06889343]
[74.18969727 -235.04725647]
[66.27684021 -223.34562683]
[56.21879959 -213.41973877]
[44.40489960 -205.65667725]
[31.29300690 -200.35974121]
[33.95880127 -185.59851074]
[36.62459946 -170.83729553]
[39.29039383 -156.07608032]
[41.95618820 -141.31486511]
[44.62198257 -126.55364990]
[47.28778076 -111.79242706]
[49.95357513 -97.03121185]
[53.60166168 -82.48159027]
[58.21567154 -68.20886230]
[62.82968140 -53.93612671]
[67.44368744 -39.66339111]
[72.05770111 -25.39065933]
[76.67170715 -11.11792564]
[81.28572083 3.15480781]
[85.89972687 17.42754173]
[88.33123779 18.82249641]
[90.35668945 21.26465607]
[91.57446289 24.60418320]
[91.64451599 28.54875183]
[90.33606720 32.68903351]
[94.09236908 47.21109009]
[97.84866333 61.73315048]
[101.60496521 76.25521088]
[105.36126709 90.77726746]
[110.50322723 104.86840820]
[116.98272705 118.39675140]
[123.46221924 131.92509460]
[136.40162659 141.02908325]
[134.92118835 155.84992981]
[141.80059814 169.17935181]
[149.07382202 182.29804993]
[156.34706116 195.41674805]
[167.79470825 194.81216431]
[178.59251404 198.50648499]
[187.19290161 205.92976379]
[192.37843323 215.98059082]
[193.43395996 227.18936157]
[190.24513245 237.93316650]
[183.30931091 246.67074585]
[189.98951721 260.10113525]
[196.66970825 273.53149414]
[203.34989929 286.96188354]
[217.68930054 282.45321655]
[232.55747986 280.24334717]
[247.58831787 280.38668823]
[262.41165161 282.87976074]
[276.66244507 287.66113281]
[289.98974609 294.61303711]
[302.06539917 303.56433105]
[312.59197998 314.29455566]
[321.31030273 326.53942871]
[328.00564575 339.99746704]
[332.51312256 354.33724976]
[334.72177124 369.20562744]
[334.57714844 384.23645020]
[332.08288574 399.05957031]
[327.30032349 413.30996704]
[320.34732056 426.63668823]
[311.39501953 438.71160889]
[300.66394043 449.23730469]
[288.41833496 457.95462036]
[274.95974731 464.64883423]
[260.61959839 469.15515137]
[245.75105286 471.36254883]
[230.72024536 471.21670532]
[215.89732361 468.72122192]
[201.64732361 463.93750000]
[188.32115173 456.98336792]
[176.24699402 448.03009033]
[165.72218323 437.29815674]
[157.00588989 425.05181885]
[150.31275940 411.59265137]
[145.80764771 397.25213623]
[143.60145569 382.38342285]
[143.74853516 367.35263062]
[146.24526978 352.52990723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[11 166]
[12 165]
[13 164]
[18 163]
[20 161]
[21 160]
[22 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[78 119]
[79 118]
[80 117]
[81 116]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
