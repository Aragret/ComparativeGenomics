%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[245.29174805 461.36611938]
[251.85076904 447.85836792]
[259.88095093 435.16995239]
[269.28134155 423.46041870]
[279.93368530 412.87704468]
[270.61880493 401.11981201]
[256.65063477 395.94876099]
[254.14546204 380.32714844]
[244.83058167 368.56988525]
[235.51568604 356.81265259]
[226.20080566 345.05538940]
[224.56101990 359.96548462]
[213.80813599 370.42376709]
[198.85824585 371.64886475]
[186.54623413 363.08062744]
[182.50099182 348.63638306]
[188.57192993 334.91986084]
[201.98352051 328.20202637]
[216.60571289 331.55520630]
[208.56454468 318.89266968]
[200.52336121 306.23013306]
[192.48219299 293.56762695]
[186.24282837 289.60629272]
[184.41719055 280.65615845]
[176.56542969 267.87533569]
[173.87341309 267.09353638]
[171.32887268 265.19833374]
[169.35743713 262.24047852]
[168.35852051 258.42382812]
[168.65301514 254.09172058]
[161.57589722 240.86619568]
[154.49879456 227.64067078]
[147.42169189 214.41514587]
[140.34458923 201.18960571]
[127.51777649 193.61846924]
[127.82875061 177.80032349]
[120.75164795 164.57478333]
[113.67454529 151.34925842]
[106.59743500 138.12373352]
[104.98484802 153.03680420]
[96.70331573 165.54345703]
[83.60296631 172.84967041]
[68.61044312 173.32321167]
[55.07511520 166.85832214]
[46.02081299 154.89923096]
[43.47028732 140.11766052]
[47.99333191 125.81584930]
[58.57949066 115.18884277]
[72.86378479 110.61074829]
[87.65506744 113.10432434]
[99.64894867 122.11252594]
[94.82294464 107.91006470]
[90.76483917 104.58655548]
[88.85770416 99.22594452]
[90.07154846 93.21233368]
[85.67054749 78.87248993]
[81.16291809 64.56580353]
[76.54891205 50.29306793]
[65.44167328 43.73623276]
[61.89248657 31.75345230]
[67.28106689 20.92341042]
[62.88006592 6.58356380]
[58.47906876 -7.75628328]
[47.03331757 -18.67898369]
[50.69591904 -33.11624908]
[46.29492188 -47.45609665]
[41.78729248 -61.76278305]
[37.17328262 -76.03551483]
[32.55927277 -90.30825043]
[27.94526291 -104.58098602]
[16.33816147 -115.33206177]
[19.78540611 -129.82226562]
[8.17830276 -140.57333374]
[11.62554741 -155.06353760]
[7.01153803 -169.33627319]
[2.39752889 -183.60900879]
[-2.21648049 -197.88172913]
[-17.09977341 -195.73800659]
[-32.13127136 -196.14057922]
[-46.87849045 -199.07785034]
[-60.91711807 -204.46533203]
[-73.84323883 -212.14799500]
[-85.28494263 -221.90481567]
[-94.91302490 -233.45504761]
[-102.45047760 -246.46638489]
[-107.68041992 -260.56445312]
[-110.45237732 -275.34362793]
[-110.68659973 -290.37869263]
[-108.37635040 -305.23706055]
[-103.58809662 -319.49121094]
[-96.45960999 -332.73101807]
[-87.19598389 -344.57556152]
[-76.06375122 -354.68405151]
[-63.38321304 -362.76562500]
[-49.51921463 -368.58779907]
[-34.87065125 -371.98300171]
[-19.85898590 -372.85360718]
[-4.91613770 -371.17453003]
[9.52795792 -366.99407959]
[23.05771637 -360.43255615]
[35.28385925 -351.67874146]
[45.85461426 -340.98446655]
[54.46583939 -328.65747070]
[60.86977768 -315.05242920]
[64.88217163 -300.56072998]
[66.38757324 -285.59939575]
[65.34267426 -270.59887695]
[61.77754211 -255.99072266]
[55.79474258 -242.19528198]
[47.56641769 -229.60946655]
[37.32931137 -218.59539795]
[25.37796974 -209.46997070]
[12.05625248 -202.49574280]
[16.67026138 -188.22300720]
[21.28427124 -173.95027161]
[25.89828110 -159.67755127]
[37.17535782 -149.94734192]
[34.05813980 -134.43626404]
[45.33521652 -124.70606995]
[42.21799850 -109.19499207]
[46.83200836 -94.92225647]
[51.44601440 -80.64952850]
[56.06002426 -66.37679291]
[61.10859680 -60.97922897]
[60.63476562 -51.85709381]
[65.03576660 -37.51724625]
[76.16672516 -27.62022781]
[72.81891632 -12.15728092]
[77.21990967 2.18256593]
[81.62091064 16.52241325]
[95.09380341 27.76732635]
[90.82164764 45.67905807]
[95.43565369 59.95179367]
[100.48422241 65.34935760]
[100.01039886 74.47148895]
[104.41139221 88.81134033]
[109.02540588 103.08406830]
[113.85140228 117.28652954]
[119.82296753 131.04663086]
[126.90007019 144.27215576]
[133.97717285 157.49768066]
[141.05427551 170.72320557]
[154.38728333 179.24034119]
[153.57011414 194.11250305]
[160.64721680 207.33802795]
[167.72431946 220.56356812]
[174.80143738 233.78909302]
[181.87854004 247.01461792]
[189.34628296 260.02355957]
[197.19802856 272.80441284]
[205.14471436 285.52645874]
[213.18589783 298.18896484]
[221.22706604 310.85150146]
[229.26823425 323.51403809]
[237.95805359 335.74050903]
[247.27294922 347.49777222]
[256.58782959 359.25500488]
[265.90270996 371.01226807]
[280.53713989 377.02426147]
[282.37603760 391.80493164]
[291.69091797 403.56216431]
[304.43029785 395.61303711]
[317.97958374 389.14028931]
[332.16842651 384.22531128]
[346.81835938 380.92993164]
[361.74514771 379.29556274]
[376.76104736 379.34274292]
[391.67727661 381.07095337]
[406.30618286 384.45837402]
[420.46383667 389.46246338]
[433.97216797 396.02026367]
[446.66131592 404.04931641]
[458.37167358 413.44863892]
[468.95599365 424.10003662]
[478.28115845 435.86953735]
[486.22991943 448.60916138]
[492.70223999 462.15866089]
[497.61682129 476.34762573]
[500.91177368 490.99765015]
[502.54568481 505.92449951]
[502.49804688 520.94042969]
[500.76940918 535.85656738]
[497.38153076 550.48541260]
[492.37701416 564.64288330]
[485.81881714 578.15100098]
[477.78936768 590.83990479]
[468.38970947 602.54998779]
[457.73800659 613.13403320]
[445.96820068 622.45880127]
[433.22836304 630.40716553]
[419.67868042 636.87915039]
[405.48956299 641.79327393]
[390.83941650 645.08776855]
[375.91253662 646.72125244]
[360.89663696 646.67315674]
[345.98052979 644.94409180]
[331.35180664 641.55578613]
[317.19445801 636.55084229]
[303.68652344 629.99218750]
[290.99786377 621.96240234]
[279.28805542 612.56237793]
[268.70437622 601.91033936]
[259.37991333 590.14025879]
[251.43193054 577.40020752]
[244.96038818 563.85034180]
[240.04667664 549.66107178]
[236.75259399 535.01080322]
[235.11956787 520.08392334]
[235.16810608 505.06799316]
[236.89764404 490.15191650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 161]
[6 160]
[8 158]
[9 157]
[10 156]
[11 155]
[19 154]
[20 153]
[21 152]
[22 151]
[24 150]
[25 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[36 142]
[37 141]
[38 140]
[39 139]
[51 138]
[52 137]
[55 136]
[56 135]
[57 133]
[58 132]
[61 130]
[62 129]
[63 128]
[65 126]
[66 125]
[67 123]
[68 122]
[69 121]
[70 120]
[72 118]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
