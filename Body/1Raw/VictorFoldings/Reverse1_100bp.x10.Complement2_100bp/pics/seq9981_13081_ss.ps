%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-24.13956642 641.62731934]
[-32.66816330 653.97955322]
[-42.28468323 665.50512695]
[-52.90944290 676.10839844]
[-64.45439911 685.70159912]
[-76.82389069 694.20513916]
[-89.91541290 701.54870605]
[-103.62047577 707.67132568]
[-117.82552338 712.52227783]
[-132.41284180 716.06140137]
[-147.26155090 718.25933838]
[-162.24862671 719.09790039]
[-177.24984741 718.57012939]
[-192.14091492 716.68035889]
[-206.79844666 713.44433594]
[-221.10098267 708.88879395]
[-234.92999268 703.05157471]
[-248.17089844 695.98089600]
[-260.71395874 687.73553467]
[-272.45526123 678.38366699]
[-283.29748535 668.00286865]
[-293.15081787 656.67907715]
[-301.93356323 644.50622559]
[-309.57299805 631.58514404]
[-316.00579834 618.02288818]
[-321.17861938 603.93188477]
[-325.04864502 589.42883301]
[-327.58380127 574.63397217]
[-328.76306152 559.66986084]
[-328.57666016 544.66052246]
[-327.02615356 529.73028564]
[-324.12435913 515.00292969]
[-319.89535522 500.60049438]
[-314.37417603 486.64227295]
[-307.60659790 473.24395752]
[-299.64865112 460.51657104]
[-290.56628418 448.56558228]
[-280.43478394 437.49002075]
[-269.33810425 427.38168335]
[-257.36819458 418.32427979]
[-244.62423706 410.39291382]
[-231.21182251 403.65328979]
[-217.24211121 398.16125488]
[-202.83085632 393.96231079]
[-188.09748840 391.09127808]
[-173.16407776 389.57192993]
[-158.15437317 389.41683960]
[-143.19274902 390.62734985]
[-128.40319824 393.19335938]
[-113.90827179 397.09362793]
[-99.82807159 402.29586792]
[-86.27928162 408.75695801]
[-78.61868286 395.86062622]
[-70.95808411 382.96429443]
[-63.29748917 370.06796265]
[-55.63689041 357.17163086]
[-48.26620102 344.10745239]
[-41.18909836 330.88192749]
[-34.11199188 317.65640259]
[-27.03488541 304.43087769]
[-19.95778084 291.20535278]
[-20.46008873 286.45596313]
[-17.98418999 281.34057617]
[-12.46797562 277.69601440]
[-5.00023460 264.68707275]
[2.46750641 251.67811584]
[9.93524742 238.66915894]
[17.40298843 225.66020203]
[24.87072945 212.65124512]
[32.33847046 199.64230347]
[29.48240662 187.88775635]
[35.59743881 176.98866272]
[47.88105011 173.05474854]
[55.54164886 160.15841675]
[63.20224762 147.26210022]
[70.86284637 134.36576843]
[78.52343750 121.46943665]
[86.18403625 108.57311249]
[85.95917511 91.80034637]
[100.67783356 83.75439453]
[108.14557648 70.74544525]
[115.61331940 57.73649216]
[123.08106232 44.72753906]
[130.54879761 31.71858788]
[138.01654053 18.70963669]
[144.19230652 5.03996563]
[141.30638123 -10.51580334]
[152.72706604 -20.07702446]
[157.55307007 -34.27947998]
[162.37905884 -48.48193741]
[167.20506287 -62.68439102]
[172.03106689 -76.88684845]
[176.85705566 -91.08930206]
[181.68305969 -105.29175568]
[186.50904846 -119.49421692]
[190.91004944 -133.83406067]
[194.88214111 -148.29858398]
[198.85424805 -162.76310730]
[202.82633972 -177.22763062]
[189.36839294 -183.96336365]
[177.48330688 -193.19541931]
[167.62789917 -204.56895447]
[160.18099976 -217.64678955]
[155.42883301 -231.92625427]
[153.55406189 -246.85848999]
[154.62875366 -261.86950684]
[158.61160278 -276.38238525]
[165.34950256 -289.83923340]
[174.58349609 -301.72283936]
[185.95861816 -311.57638550]
[199.03765869 -319.02117920]
[213.31788635 -323.77102661]
[228.25042725 -325.64340210]
[243.26129150 -324.56625366]
[257.77349854 -320.58108521]
[271.22927856 -313.84100342]
[283.11135864 -304.60507202]
[292.96310425 -293.22836304]
[300.40576172 -280.14810181]
[305.15332031 -265.86712646]
[307.02325439 -250.93428040]
[305.94369507 -235.92358398]
[301.95614624 -221.41201782]
[295.21389771 -207.95735168]
[285.97604370 -196.07673645]
[274.59774780 -186.22685242]
[261.51629639 -178.78630066]
[247.23451233 -174.04107666]
[232.30137634 -172.17355347]
[217.29086304 -173.25553894]
[213.31877136 -158.79101562]
[209.34667969 -144.32649231]
[205.37457275 -129.86196899]
[206.64228821 -127.36175537]
[206.99601746 -124.20874786]
[206.18217468 -120.74853516]
[204.07679749 -117.41207886]
[200.71151733 -114.66821289]
[195.88551331 -100.46575928]
[191.05950928 -86.26330566]
[186.23352051 -72.06085205]
[181.40751648 -57.85839462]
[176.58152771 -43.65593719]
[171.75552368 -29.45348167]
[166.92951965 -15.25102711]
[170.16064453 -0.71111298]
[158.39476013 9.86596298]
[169.94149780 0.29136890]
[184.36210632 -3.83736491]
[199.22642517 -1.82447433]
[212.02958679 5.99083376]
[220.61402893 18.29154205]
[223.53311157 33.00476456]
[220.29492188 47.65106583]
[211.44515991 59.76228714]
[198.47515869 67.29747772]
[183.57060242 68.98681641]
[169.24314880 64.54563141]
[157.90724182 54.72232819]
[151.47317505 41.17231750]
[151.02549744 26.17737770]
[143.55775452 39.18632889]
[136.09001160 52.19528198]
[128.62226868 65.20423126]
[121.15453339 78.21318817]
[113.68679047 91.22213745]
[116.04608917 102.62718201]
[110.17284393 112.68433380]
[99.08036804 116.23371124]
[91.41976929 129.13003540]
[83.75917053 142.02636719]
[76.09857178 154.92268372]
[68.43797302 167.81901550]
[60.77737808 180.71534729]
[60.97627258 199.12843323]
[45.34742355 207.11004639]
[37.87968063 220.11898804]
[30.41194153 233.12794495]
[22.94420052 246.13690186]
[15.47645855 259.14584351]
[8.00871754 272.15481567]
[0.54097646 285.16375732]
[-6.73225307 298.28244019]
[-13.80935860 311.50796509]
[-20.88646317 324.73348999]
[-27.96356964 337.95904541]
[-35.04067612 351.18457031]
[-34.87054825 356.40167236]
[-36.55062103 360.72955322]
[-39.43235016 363.61236572]
[-42.74056625 364.83224487]
[-50.40116119 377.72857666]
[-58.06175995 390.62487793]
[-65.72235870 403.52120972]
[-73.38295746 416.41754150]
[-61.22789764 425.22491455]
[-49.92410278 435.10113525]
[-39.56524658 445.96432495]
[-30.23716354 457.72451782]
[-22.01715088 470.28424072]
[-14.97332478 483.53942871]
[-9.16405201 497.38021851]
[-4.63747263 511.69195557]
[-1.43109524 526.35601807]
[0.42851052 541.25085449]
[0.92593497 556.25311279]
[0.05705624 571.23846436]
[-2.17092586 586.08270264]
[-5.73954916 600.66284180]
[-10.61924171 614.85803223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 187]
[58 186]
[59 185]
[60 184]
[61 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[73 174]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[80 166]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 147]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 133]
[97 132]
[98 131]
[99 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
