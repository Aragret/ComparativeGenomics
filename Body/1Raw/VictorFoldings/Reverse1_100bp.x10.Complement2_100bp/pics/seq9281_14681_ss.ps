%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[30.68948936 633.09466553]
[24.86316490 647.00524902]
[15.75980186 659.02935791]
[3.95164776 668.41119385]
[-9.81902790 674.56091309]
[-24.68658829 677.09204102]
[-39.71644974 675.84533691]
[-53.96381760 670.89929199]
[-66.53308868 662.56481934]
[-76.63415527 651.36572266]
[-83.63204956 638.00610352]
[-87.08688354 623.32562256]
[-86.78147888 608.24725342]
[-82.73503876 593.71875000]
[-75.20191956 580.65344238]
[-64.65566254 569.87255859]
[-51.75921249 562.05383301]
[-37.32325363 557.68878174]
[-22.25523949 557.05175781]
[-19.15112877 542.37640381]
[-16.04701996 527.70111084]
[-12.94290924 513.02581787]
[-17.87893295 498.97290039]
[-7.45330191 487.07260132]
[-8.86758327 484.65228271]
[-9.40835857 481.52590942]
[-8.80190372 478.02340698]
[-6.89886045 474.56753540]
[-3.70285082 471.62823486]
[0.26924530 457.16372681]
[4.24134159 442.69918823]
[8.21343803 428.23468018]
[12.18553352 413.77014160]
[16.15763092 399.30563354]
[20.12972641 384.84109497]
[11.19438934 370.59335327]
[15.41137505 353.96408081]
[30.64461708 345.36364746]
[34.40091705 330.84158325]
[30.09731293 316.58227539]
[41.04392242 305.15939331]
[44.80022049 290.63732910]
[38.84349060 282.33489990]
[38.43130875 271.90521240]
[43.94101715 262.78253174]
[53.76020050 258.10360718]
[57.94720840 243.69981384]
[62.13422012 229.29603577]
[66.32123566 214.89225769]
[70.50824738 200.48846436]
[74.15633392 185.93884277]
[77.26044464 171.26354980]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[93.36199188 54.64944458]
[103.40291595 43.64812469]
[106.28818512 28.92823219]
[109.17346191 14.20833969]
[95.45831299 20.28244400]
[82.08819580 13.48244381]
[78.91906738 -1.17895412]
[88.28707886 -12.89391327]
[103.28649139 -13.02660084]
[112.85988617 -1.48080587]
[116.83198547 -15.94532967]
[120.80407715 -30.40985298]
[124.77617645 -44.87437820]
[128.74827576 -59.33890152]
[132.72036743 -73.80342865]
[131.97514343 -82.90740967]
[136.86077881 -88.45289612]
[141.04779053 -102.85667419]
[145.23480225 -117.26045990]
[148.99110413 -131.78251648]
[152.31335449 -146.40997314]
[155.63562012 -161.03742981]
[158.95788574 -175.66490173]
[161.07250977 -190.51509094]
[154.17031860 -204.75132751]
[162.65144348 -216.99551392]
[163.54426575 -231.96891785]
[164.43707275 -246.94232178]
[165.32989502 -261.91571045]
[166.22270203 -276.88912964]
[158.26075745 -287.03656006]
[159.31263733 -299.48956299]
[168.27098083 -307.61816406]
[169.38664246 -322.57662964]
[170.50228882 -337.53509521]
[156.07382202 -341.85174561]
[142.91085815 -349.16955566]
[131.62905884 -359.14630127]
[122.75608826 -371.31527710]
[116.70694733 -385.10739136]
[113.76457214 -399.87750244]
[114.06658173 -414.93481445]
[117.59884644 -429.57507324]
[124.19615936 -443.11352539]
[133.54995728 -454.91693115]
[145.22273254 -464.43325806]
[158.66853333 -471.21740723]
[173.25848389 -474.95202637]
[188.31018066 -475.46246338]
[203.11962891 -472.72488403]
[216.99415588 -466.86727905]
[229.28483582 -458.16363525]
[239.41680908 -447.02105713]
[246.91616821 -433.96069336]
[251.43218994 -419.59335327]
[252.75361633 -404.59109497]
[250.81866455 -389.65557861]
[245.71781921 -375.48535156]
[237.68968201 -362.74316406]
[227.10971069 -352.02505493]
[214.47276306 -343.83224487]
[200.36990356 -338.54800415]
[185.46073914 -336.41943359]
[184.34509277 -321.46096802]
[183.22944641 -306.50253296]
[191.69004822 -291.12771606]
[181.19612122 -275.99630737]
[180.30329895 -261.02291870]
[179.41047668 -246.04949951]
[178.51766968 -231.07609558]
[177.62484741 -216.10269165]
[184.59089661 -202.93745422]
[176.04591370 -189.62228394]
[185.22618103 -201.48493958]
[198.82911682 -207.80633545]
[213.81579590 -207.17425537]
[226.83815002 -199.72990417]
[234.98695374 -187.13638306]
[236.44174194 -172.20709229]
[230.87751770 -158.27729797]
[219.53732300 -148.45892334]
[204.95462036 -144.94544983]
[190.38719177 -148.52177429]
[179.08944702 -158.38894653]
[173.58534241 -172.34263611]
[170.26307678 -157.71517944]
[166.94082642 -143.08772278]
[163.61856079 -128.46025085]
[164.99665833 -126.01914978]
[165.49081421 -122.88507843]
[164.83229065 -119.39197540]
[162.87800598 -115.96483612]
[159.63858032 -113.07344818]
[155.45156860 -98.66966248]
[151.26455688 -84.26588440]
[147.18489075 -69.83132935]
[143.21279907 -55.36680603]
[139.24070740 -40.90228271]
[135.26860046 -26.43775749]
[131.29650879 -11.97323322]
[127.32440948 2.49129033]
[123.89334869 17.09361267]
[121.00807953 31.81350327]
[118.12280273 46.53339386]
[123.26750946 60.51128006]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[91.93574524 174.36766052]
[88.83163452 189.04295349]
[102.63569641 183.17372131]
[115.90308380 190.17202759]
[118.85358429 204.87899780]
[109.31218719 216.45317078]
[94.31246185 216.36253357]
[84.91202545 204.67547607]
[80.72501373 219.07926941]
[76.53800201 233.48304749]
[72.35099030 247.88682556]
[68.16397858 262.29061890]
[73.84822845 281.63104248]
[59.32228088 294.39361572]
[55.56597900 308.91567993]
[59.60091019 324.21371460]
[48.92297745 334.59790039]
[45.16667557 349.11996460]
[53.29276276 359.86151123]
[53.74207306 373.12832642]
[46.57450104 384.06945801]
[34.59424973 388.81320190]
[30.62215424 403.27770996]
[26.65005875 417.74224854]
[22.67796135 432.20675659]
[18.70586586 446.67129517]
[14.73376942 461.13580322]
[10.76167297 475.60034180]
[7.22200060 490.17672729]
[11.93599796 505.27932739]
[1.73239338 516.12994385]
[-1.37171674 530.80523682]
[-4.47582674 545.48052979]
[-7.57993698 560.15582275]
[5.93956470 566.83972168]
[17.37158203 576.67633057]
[25.99749184 589.04748535]
[31.27505684 603.17535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[24 201]
[29 200]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[35 194]
[38 190]
[39 189]
[41 187]
[42 186]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[58 166]
[59 165]
[61 163]
[62 162]
[63 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[76 154]
[77 153]
[78 152]
[79 147]
[80 146]
[81 145]
[82 144]
[83 132]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[92 124]
[93 123]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
