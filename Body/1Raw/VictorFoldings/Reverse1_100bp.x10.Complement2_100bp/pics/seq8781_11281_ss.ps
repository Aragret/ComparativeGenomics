%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[108.90525055 625.74523926]
[112.28985596 611.01306152]
[119.86790466 597.93389893]
[130.96557617 587.67071533]
[144.59603882 581.13610840]
[142.37092590 566.30206299]
[140.14581299 551.46801758]
[137.92070007 536.63397217]
[135.69557190 521.79992676]
[131.59463501 515.65142822]
[133.54946899 506.72860718]
[131.54545593 491.86306763]
[129.54144287 476.99755859]
[119.60938263 488.23828125]
[104.64709473 489.30126953]
[93.22565460 479.57754517]
[91.88777161 464.63732910]
[101.39986420 453.03903198]
[116.31295776 451.42672729]
[128.08369446 460.72314453]
[127.41390991 445.73809814]
[126.74412537 430.75305176]
[126.07434082 415.76800537]
[125.40455627 400.78298950]
[114.27362823 390.95251465]
[113.38090515 375.76510620]
[123.76747131 364.15661621]
[123.09768677 349.17156982]
[122.42789459 334.18652344]
[121.42363739 319.22018433]
[120.08540344 304.27999878]
[118.41386414 289.37341309]
[116.40985107 274.50790405]
[114.40583801 259.64236450]
[112.40182495 244.77684021]
[100.43824768 235.97863770]
[98.19412994 220.93142700]
[107.50361633 208.44258118]
[98.13530731 196.86311340]
[103.95952606 182.15295410]
[101.95551300 167.28741455]
[99.95149994 152.42189026]
[97.94748688 137.55636597]
[95.83286285 122.70616150]
[93.60774994 107.87212372]
[89.39271545 101.00145721]
[91.46163940 92.80081940]
[89.45762634 77.93529510]
[85.72549438 72.47793579]
[85.36396027 66.80639648]
[87.62208557 62.59808350]
[86.06156158 47.67947769]
[82.05634308 39.46997070]
[84.59056091 32.52738190]
[83.25232697 17.58719635]
[81.91409302 2.64701200]
[78.90982056 -1.62164319]
[77.94028473 -6.16183138]
[78.76819611 -10.15302277]
[80.86497498 -12.98778152]
[80.19519043 -27.97282028]
[79.52540588 -42.95785904]
[78.85562134 -57.94289780]
[78.18583679 -72.92793274]
[77.51605225 -87.91297150]
[76.84626770 -102.89801788]
[65.92623138 -110.78265381]
[61.60421371 -123.33377075]
[65.24621582 -135.89633179]
[75.30740356 -143.94630432]
[74.86080170 -158.93965149]
[74.41419220 -173.93299866]
[61.76195908 -182.72090149]
[56.76870728 -197.10563660]
[61.15132523 -211.50204468]
[73.02858734 -220.45014954]
[72.58198547 -235.44351196]
[72.13537598 -250.43685913]
[68.75184631 -258.92150879]
[71.79541779 -265.65640259]
[69.11695099 -270.13665771]
[68.48778534 -274.73638916]
[69.61026001 -278.65496826]
[71.91207123 -281.32589722]
[72.35867310 -296.31927490]
[72.80528259 -311.31262207]
[73.25188446 -326.30596924]
[73.69849396 -341.29931641]
[74.14509583 -356.29266357]
[74.59170532 -371.28601074]
[74.81503296 -386.28436279]
[74.81503296 -401.28436279]
[74.81503296 -416.28436279]
[74.81503296 -431.28436279]
[60.23791504 -435.17922974]
[47.16604996 -442.71505737]
[36.49069977 -453.37805176]
[28.93973160 -466.44116211]
[25.02797890 -481.01376343]
[25.02215385 -496.10226440]
[28.92265129 -510.67785645]
[36.46353149 -523.74682617]
[47.13064194 -534.41802979]
[60.19668198 -541.96398926]
[74.77079010 -545.87011719]
[89.85927582 -545.87011719]
[104.43338013 -541.96398926]
[117.49942780 -534.41802979]
[128.16653442 -523.74682617]
[135.70741272 -510.67785645]
[139.60791016 -496.10226440]
[139.60208130 -481.01376343]
[135.69033813 -466.44116211]
[128.13935852 -453.37805176]
[117.46401978 -442.71505737]
[104.39215088 -435.17922974]
[89.81503296 -431.28436279]
[89.81503296 -416.28436279]
[89.81503296 -401.28436279]
[89.81503296 -386.28436279]
[92.49871826 -382.33380127]
[92.72917938 -376.65542603]
[89.58505249 -370.83941650]
[89.13845062 -355.84606934]
[88.69184113 -340.85269165]
[88.24523926 -325.85934448]
[87.79862976 -310.86599731]
[87.35202789 -295.87265015]
[86.90541840 -280.87930298]
[86.79375458 -265.87973022]
[87.12873077 -250.88346863]
[87.57533264 -235.89010620]
[88.02194214 -220.89675903]
[100.41075134 -212.67146301]
[105.64248657 -198.56144714]
[101.51428223 -183.90499878]
[89.40754700 -174.37960815]
[89.85414886 -159.38626099]
[90.30075836 -144.39289856]
[103.02313995 -133.39382935]
[103.87075806 -116.25917053]
[91.83130646 -103.56780243]
[92.50109100 -88.58276367]
[93.17087555 -73.59772491]
[93.84066010 -58.61268234]
[94.51044464 -43.62764359]
[95.18022919 -28.64260483]
[95.85001373 -13.65756607]
[96.85427856 1.30877781]
[98.19251251 16.24896240]
[99.53074646 31.18914795]
[100.98016357 46.11895752]
[102.54068756 61.03755951]
[104.32315063 75.93128204]
[106.32716370 90.79680634]
[108.44178772 105.64700317]
[110.66690826 120.48104858]
[115.03470612 128.50352478]
[112.81301880 135.55235291]
[114.81703186 150.41787720]
[116.82104492 165.28340149]
[118.82505798 180.14894104]
[128.33671570 192.79168701]
[122.36914825 206.43856812]
[134.65342712 216.01635742]
[136.47401428 231.12066650]
[127.26734924 242.77282715]
[129.27136230 257.63836670]
[131.27537537 272.50387573]
[133.27938843 287.36941528]
[136.47126770 291.49966431]
[137.64256287 295.99203491]
[136.99369812 300.01620483]
[135.02558899 302.94177246]
[136.36383057 317.88195801]
[139.36810303 322.15060425]
[140.33763123 326.69079590]
[139.50971985 330.68197632]
[137.41293335 333.51675415]
[138.08271790 348.50177002]
[138.75250244 363.48681641]
[150.13331604 374.12237549]
[150.59910583 389.32888794]
[140.38958740 400.11318970]
[141.05937195 415.09823608]
[141.72915649 430.08328247]
[142.39894104 445.06829834]
[143.06874084 460.05334473]
[144.40696716 474.99353027]
[146.41098022 489.85906982]
[148.41499329 504.72457886]
[150.52961731 519.57476807]
[152.75473022 534.40881348]
[154.97985840 549.24285889]
[157.20497131 564.07690430]
[159.43008423 578.91094971]
[174.37794495 581.15881348]
[187.99841309 587.71429443]
[199.08038330 597.99444580]
[206.63844299 611.08520508]
[210.00053406 625.82244873]
[208.86769104 640.89587402]
[203.34066772 654.96514893]
[193.91091919 666.77917480]
[181.41691589 675.28747559]
[166.96963501 679.73352051]
[151.85371399 679.72198486]
[137.41323853 675.25384521]
[124.93225098 666.72644043]
[115.52056122 654.89801025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 191]
[12 190]
[13 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[27 181]
[28 180]
[29 179]
[30 175]
[31 174]
[32 170]
[33 169]
[34 168]
[35 167]
[38 164]
[40 162]
[41 161]
[42 160]
[43 159]
[44 157]
[45 156]
[47 155]
[48 154]
[51 153]
[52 152]
[54 151]
[55 150]
[56 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[70 139]
[71 138]
[72 137]
[76 133]
[77 132]
[78 131]
[80 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
