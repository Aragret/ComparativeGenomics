%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[48.57295609 608.79412842]
[37.15811539 618.54229736]
[24.89251709 627.19561768]
[11.88080692 634.68023682]
[-1.76600122 640.93237305]
[-15.93147373 645.89868164]
[-30.49475479 649.53674316]
[-45.33158875 651.81555176]
[-60.31539536 652.71563721]
[-75.31833649 652.22937012]
[-90.21240234 650.36083984]
[-104.87052917 647.12597656]
[-119.16764069 642.55249023]
[-132.98178101 636.67926025]
[-146.19506836 629.55651855]
[-158.69476318 621.24499512]
[-170.37425232 611.81555176]
[-181.13386536 601.34863281]
[-190.88180542 589.93365479]
[-199.53491211 577.66790771]
[-207.01934814 564.65606689]
[-213.27125549 551.00915527]
[-218.23730469 536.84362793]
[-221.87513733 522.28027344]
[-224.15368652 507.44338989]
[-225.05352783 492.45956421]
[-224.56698608 477.45663452]
[-222.69821167 462.56259155]
[-219.46315002 447.90454102]
[-214.88938904 433.60748291]
[-209.01597595 419.79345703]
[-201.89299011 406.58029175]
[-193.58122253 394.08071899]
[-184.15159607 382.40139771]
[-173.68453979 371.64196777]
[-162.26937866 361.89419556]
[-150.00349426 353.24130249]
[-136.99153137 345.75708008]
[-123.34451294 339.50540161]
[-109.17887115 334.53958130]
[-94.61547089 330.90200806]
[-79.77856445 328.62368774]
[-64.79472351 327.72409058]
[-49.79180145 328.21090698]
[-34.89779663 330.07992554]
[-20.23978233 333.31521606]
[-5.94281578 337.88922119]
[-0.07385521 324.08505249]
[5.79510546 310.28088379]
[11.66406631 296.47668457]
[17.53302765 282.67251587]
[23.40198708 268.86834717]
[29.27094841 255.06416321]
[25.03831482 243.73228455]
[29.81486893 232.18376160]
[41.54397583 226.81805420]
[39.62292099 212.04785156]
[52.28552628 202.56265259]
[58.35935974 188.84739685]
[64.43319702 175.13212585]
[70.50702667 161.41685486]
[76.58086395 147.70158386]
[81.82758331 133.64912415]
[86.22857666 119.30927277]
[90.62957764 104.96942139]
[94.49388123 90.47573090]
[97.81613922 75.84827423]
[101.13840485 61.22080994]
[104.46066284 46.59334946]
[103.02951813 42.49386597]
[102.98210144 38.54895782]
[104.09989929 35.17465591]
[106.05174255 32.67327118]
[108.44064331 31.20654106]
[112.62765503 16.80275726]
[116.81465912 2.39897609]
[121.00167084 -12.00480556]
[124.86598206 -26.49849892]
[128.40565491 -41.07487488]
[131.94532776 -55.65124893]
[120.20401001 -63.71305084]
[111.93708038 -75.27415466]
[108.12097168 -88.93395996]
[109.19444275 -103.04617310]
[115.00822449 -115.91715240]
[124.84536743 -126.00923157]
[137.50962830 -132.12437439]
[151.47091675 -133.54637146]
[155.22721863 -148.06842041]
[158.98352051 -162.59048462]
[162.73980713 -177.11254883]
[166.49610901 -191.63459778]
[170.03578186 -206.21098328]
[173.35804749 -220.83843994]
[176.68031311 -235.46589661]
[180.00256348 -250.09336853]
[183.32482910 -264.72082520]
[186.64707947 -279.34826660]
[189.96934509 -293.97573853]
[176.34085083 -300.38497925]
[164.40905762 -309.57443237]
[154.73204041 -321.11434937]
[147.76239014 -334.46493530]
[143.82611084 -349.00177002]
[143.10731506 -364.04495239]
[145.63960266 -378.89089966]
[151.30453491 -392.84518433]
[159.83715820 -405.25518799]
[170.83839417 -415.54046631]
[183.79370117 -423.21994019]
[198.09710693 -427.93444824]
[213.07963562 -429.46347046]
[228.04052734 -427.73550415]
[242.28001404 -422.83132935]
[255.13212585 -414.98037720]
[265.99572754 -404.54983521]
[274.36267090 -392.02752686]
[279.84170532 -377.99917603]
[282.17648315 -363.12091064]
[281.25784302 -348.08862305]
[277.12872314 -333.60537720]
[269.98229980 -320.34857178]
[260.15280151 -308.93829346]
[248.09992981 -299.90817261]
[234.38748169 -293.68060303]
[219.65676880 -290.54684448]
[204.59680176 -290.65347290]
[201.27455139 -276.02603149]
[197.95228577 -261.39855957]
[194.63002014 -246.77110291]
[191.30776978 -232.14364624]
[187.98550415 -217.51617432]
[184.66325378 -202.88871765]
[186.40528870 -198.44189453]
[185.37236023 -192.85350037]
[181.01817322 -187.87831116]
[177.26187134 -173.35624695]
[173.50556946 -158.83418274]
[169.74926758 -144.31213379]
[165.99296570 -129.79006958]
[178.79365540 -120.44831085]
[187.04943848 -106.87660217]
[189.47085571 -91.13774109]
[185.65791321 -75.63725281]
[176.16575623 -62.75569534]
[162.42402649 -54.48311234]
[146.52169800 -52.11157608]
[142.98202515 -37.53520203]
[139.44235229 -22.95882607]
[140.95471191 -19.77368546]
[140.99945068 -15.69777489]
[139.17471313 -11.42886066]
[135.40545654 -7.81779480]
[131.21844482 6.58598709]
[127.03143311 20.98976898]
[122.84442139 35.39355087]
[119.08811951 49.91561127]
[115.76586151 64.54306793]
[112.44360352 79.17053223]
[109.12134552 93.79798889]
[123.01126099 88.13493347]
[136.17298889 95.32999420]
[138.90419006 110.07924652]
[129.19152832 121.51009369]
[114.19480896 121.19613647]
[104.96942139 109.37042236]
[100.56842804 123.71027374]
[96.16742706 138.05010986]
[108.92060089 130.15350342]
[123.88772583 131.14608765]
[135.48643494 140.65766907]
[139.39068604 155.14064026]
[134.14430237 169.19323730]
[121.70404816 177.57417297]
[106.70983887 177.15757751]
[94.75413513 168.09881592]
[90.29612732 153.77542114]
[84.22229767 167.49069214]
[78.14846039 181.20596313]
[72.07463074 194.92121887]
[66.00079346 208.63648987]
[67.48740387 224.38769531]
[55.25923920 232.89189148]
[57.64477539 251.15087891]
[43.07512665 260.93313599]
[37.20616531 274.73730469]
[31.33720398 288.54147339]
[25.46824265 302.34564209]
[19.59928322 316.14984131]
[13.73032188 329.95401001]
[7.86136103 343.75817871]
[21.07488441 350.88049316]
[33.57486725 359.19165039]
[45.25466537 368.62069702]
[56.01462555 379.08721924]
[65.76294708 390.50189209]
[74.41645813 402.76733398]
[81.90132904 415.77893066]
[88.15369415 429.42562866]
[93.12022400 443.59103394]
[96.75852966 458.15423584]
[99.03757477 472.99102783]
[99.93791962 487.97482300]
[99.45188141 502.97778320]
[97.58360291 517.87188721]
[94.34902191 532.53002930]
[89.77574158 546.82727051]
[83.90277863 560.64147949]
[76.78024292 573.85485840]
[68.46889496 586.35473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[56 183]
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[63 168]
[64 167]
[65 166]
[66 160]
[67 159]
[68 158]
[69 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 149]
[79 148]
[80 147]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
