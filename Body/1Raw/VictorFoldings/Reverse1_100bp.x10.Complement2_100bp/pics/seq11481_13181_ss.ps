%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[58.21409225 604.82952881]
[47.77110291 615.77484131]
[34.45598984 622.95556641]
[19.57323265 625.66827393]
[4.58089066 623.64715576]
[-9.05223751 617.09020996]
[-19.99051857 606.63989258]
[-27.16232872 593.32000732]
[-29.86504936 578.43542480]
[-27.83389473 563.44445801]
[-21.26785660 549.81573486]
[-10.81020832 538.88446045]
[2.51451612 531.72155762]
[17.40089607 529.02880859]
[19.40490913 514.16326904]
[21.40892220 499.29776001]
[23.41293716 484.43222046]
[25.41695023 469.56668091]
[27.42096329 454.70117188]
[29.09250450 439.79458618]
[30.43073845 424.85440063]
[31.76897240 409.91421509]
[21.44093513 420.79226685]
[6.89701366 424.46298218]
[-7.35619783 419.78903198]
[-16.90218735 408.21862793]
[-18.78302574 393.33700562]
[-12.41591454 379.75543213]
[0.22622670 371.68222046]
[15.22609329 371.61904907]
[27.93581390 379.58541870]
[34.41718674 393.11312866]
[37.73944473 378.48565674]
[41.06170273 363.85821533]
[44.16581345 349.18289185]
[47.05108643 334.46301270]
[38.43707275 324.88031006]
[36.89211273 311.89202881]
[43.20273590 300.21356201]
[55.26221466 294.21493530]
[58.36632538 279.53964233]
[61.47043610 264.86434937]
[64.57454681 250.18904114]
[67.56932068 235.49102783]
[70.45459747 220.77113342]
[73.23020172 206.03018188]
[67.87796021 192.13043213]
[77.94465637 179.92501831]
[80.61045074 165.16380310]
[83.27624512 150.40258789]
[85.94203949 135.64137268]
[88.60783386 120.88014984]
[91.27362823 106.11893463]
[92.61186218 91.17874908]
[92.61186218 76.17874908]
[92.61186218 61.17874527]
[83.03717804 45.44957352]
[92.39790344 30.60559273]
[92.17457581 15.60725594]
[91.95124817 0.60891843]
[91.50464630 -14.38443184]
[90.83486176 -29.36947060]
[90.16507721 -44.35450745]
[81.81928253 -57.79542923]
[88.98056030 -70.85549164]
[88.31077576 -85.84053040]
[87.64099121 -100.82556915]
[86.97120667 -115.81060791]
[73.44440460 -122.95014954]
[65.36077118 -135.81683350]
[64.80647278 -150.90190125]
[71.83029938 -164.15036011]
[84.45742798 -172.05107117]
[83.78764343 -187.03610229]
[82.33822632 -201.96591187]
[80.11310577 -216.79995728]
[77.88799286 -231.63400269]
[66.08595276 -245.76882935]
[73.14114380 -261.83715820]
[70.69541168 -276.63644409]
[68.24968719 -291.43569946]
[65.80396271 -306.23498535]
[63.35823059 -321.03424072]
[60.80239868 -335.81491089]
[58.13660431 -350.57611084]
[55.47080994 -365.33734131]
[40.42146683 -366.01925659]
[25.90131950 -370.03335571]
[12.63869381 -377.17831421]
[1.29883814 -387.09576416]
[-7.54944658 -399.28817749]
[-13.46233273 -413.14407349]
[-16.14323425 -427.96838379]
[-15.45767689 -443.01757812]
[-11.44004822 -457.53674316]
[-4.29187012 -470.79763794]
[5.62830639 -482.13510132]
[17.82289124 -490.98040771]
[31.68020630 -496.88995361]
[46.50517654 -499.56726074]
[61.55418777 -498.87805176]
[76.07238770 -494.85690308]
[89.33155060 -487.70550537]
[100.66659546 -477.78259277]
[109.50897217 -465.58587646]
[115.41514587 -451.72711182]
[118.08885956 -436.90148926]
[117.39601135 -421.85266113]
[113.37134552 -407.33544922]
[106.21674347 -394.07800293]
[96.29107666 -382.74536133]
[84.09220123 -373.90594482]
[70.23202515 -368.00314331]
[72.89781952 -353.24191284]
[75.56361389 -338.48068237]
[79.84580994 -332.45703125]
[78.15750122 -323.47998047]
[80.60323334 -308.68069458]
[83.04895782 -293.88143921]
[85.49468231 -279.08215332]
[87.94041443 -264.28289795]
[97.58824158 -256.98590088]
[99.74693298 -244.67640686]
[92.72203827 -233.85911560]
[94.94715118 -219.02507019]
[97.17227173 -204.19102478]
[106.01738739 -216.30564880]
[120.54961395 -220.02241516]
[134.12501526 -213.64208984]
[140.53709412 -200.08166504]
[136.85433960 -185.54077148]
[124.76045227 -176.66732788]
[109.78459930 -177.51815796]
[98.77268219 -187.70588684]
[99.44246674 -172.72085571]
[112.72411346 -165.97819519]
[120.90190125 -153.40919495]
[121.69563293 -138.33482361]
[114.79214478 -124.79826355]
[101.95624542 -116.48039246]
[102.62602997 -101.49535370]
[103.29581451 -86.51031494]
[103.96559906 -71.52527618]
[112.26348877 -59.15618896]
[105.15011597 -45.02429581]
[105.81990051 -30.03925514]
[106.48968506 -15.05421638]
[109.34709167 -11.22743416]
[109.83087158 -5.56501627]
[106.94958496 0.38559070]
[107.17291260 15.38392830]
[107.39624023 30.38226509]
[115.85488129 39.02968979]
[116.16368866 51.52322388]
[107.61186218 61.17874527]
[107.61186218 76.17874908]
[107.61186218 91.17874908]
[115.74093628 78.57247162]
[128.48922729 70.66796875]
[143.39524841 68.99149323]
[157.58087158 73.86672974]
[168.30708313 84.35234833]
[173.50282288 98.42375183]
[172.16487122 113.36396027]
[164.55155945 126.28826141]
[152.13290405 134.70117188]
[137.30676270 136.97828674]
[122.93580627 132.67993164]
[111.79486084 122.63606262]
[106.03485107 108.78472900]
[103.36905670 123.54594421]
[100.70325470 138.30715942]
[98.03746033 153.06837463]
[95.37166595 167.82958984]
[92.70587158 182.59082031]
[97.86743927 197.54637146]
[87.99142456 208.69596863]
[89.54588318 217.69715881]
[85.17448425 223.65641785]
[82.28921509 238.37629700]
[83.70948792 247.39964294]
[79.24984741 253.29313660]
[76.14573669 267.96844482]
[73.04162598 282.64373779]
[69.93751526 297.31906128]
[79.74655151 311.80358887]
[76.11649323 328.57077026]
[61.77097702 337.34829712]
[58.88570404 352.06817627]
[60.66358566 358.43612671]
[59.18117905 363.92242432]
[55.68916321 367.18045044]
[52.36690521 381.80792236]
[49.04464340 396.43539429]
[46.70915985 411.25244141]
[45.37092590 426.19262695]
[44.03268814 441.13281250]
[46.23051453 445.86743164]
[46.37773132 450.50765991]
[44.85368729 454.28817749]
[42.28649139 456.70516968]
[40.28247833 471.57070923]
[38.27846527 486.43621826]
[36.27445221 501.30175781]
[34.27043915 516.16729736]
[32.26642227 531.03283691]
[45.90832901 537.57147217]
[56.86060333 548.00708008]
[64.05025482 561.31738281]
[66.77292633 576.19836426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 197]
[21 196]
[22 195]
[32 194]
[33 193]
[34 192]
[35 189]
[36 188]
[40 185]
[41 184]
[42 183]
[43 182]
[44 180]
[45 179]
[46 177]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 157]
[55 156]
[56 155]
[58 152]
[59 151]
[60 150]
[61 147]
[62 146]
[63 145]
[65 143]
[66 142]
[67 141]
[68 140]
[73 135]
[74 134]
[75 126]
[76 125]
[77 124]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
