%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[182.39607239 501.77001953]
[169.49476624 493.77496338]
[160.35592651 481.65695190]
[156.21551514 467.05487061]
[157.63346863 451.94348145]
[164.41802979 438.36651611]
[175.65164185 428.16012573]
[189.81504822 422.70465088]
[189.81504822 407.70465088]
[189.81504822 392.70465088]
[189.81504822 377.70465088]
[186.67155457 371.01583862]
[189.92837524 362.48175049]
[190.15170288 347.48339844]
[190.37503052 332.48504639]
[190.59835815 317.48672485]
[187.49424744 302.81143188]
[181.21688843 289.18811035]
[174.93952942 275.56478882]
[162.58610535 267.24359131]
[163.83804321 251.47200012]
[157.56068420 237.84869385]
[151.28332520 224.22537231]
[145.00595093 210.60205078]
[138.72859192 196.97874451]
[126.37517548 188.65754700]
[127.62710571 172.88595581]
[121.14761353 159.35760498]
[114.46741486 145.92723083]
[107.78722382 132.49685669]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[72.10220337 60.75296021]
[65.42201233 47.32258606]
[58.79826355 41.03260803]
[58.74401474 33.64215088]
[52.26451874 20.11380577]
[45.78502274 6.58546019]
[31.15020180 1.25069022]
[24.77178764 -12.56127930]
[29.94786453 -26.48046684]
[23.46836853 -40.00881195]
[16.98887253 -53.53715897]
[10.40884590 -67.01689148]
[3.72865105 -80.44726562]
[3.72609878 -65.44726562]
[0.04279644 -50.90652466]
[-7.09602070 -37.71420288]
[-17.25381088 -26.67702675]
[-29.80942345 -18.46991920]
[-43.99507523 -13.59474754]
[-58.94330597 -12.34963226]
[-73.74003601 -14.81071186]
[-87.48042297 -20.82748985]
[-99.32425690 -30.03203964]
[-108.54726410 -41.86149979]
[-114.58546448 -55.59249115]
[-117.06961823 -70.38536072]
[-115.84781647 -85.33551788]
[-110.99477386 -99.52875519]
[-102.80725861 -112.09715271]
[-91.78593445 -122.27214050]
[-78.60476685 -129.43151855]
[-64.06978607 -133.13749695]
[-49.06980515 -133.16345215]
[-34.52208710 -129.50778198]
[-21.31623077 -122.39403534]
[-10.25977421 -112.25723267]
[-2.02881408 -99.71720886]
[-3.81127977 -114.61093140]
[-5.59374571 -129.50463867]
[-7.37621164 -144.39836121]
[-19.51653290 -154.15798950]
[-21.11203957 -169.28773499]
[-11.73290730 -180.80152893]
[-13.51537323 -195.69523621]
[-15.29783916 -210.58895874]
[-25.89514732 -215.97724915]
[-32.50788498 -225.71237183]
[-33.58897018 -237.31086731]
[-28.98500443 -247.88059998]
[-19.94582176 -254.84188843]
[-21.28405571 -269.78207397]
[-22.62228966 -284.72225952]
[-23.96052361 -299.66244507]
[-25.29875946 -314.60263062]
[-26.63699341 -329.54281616]
[-27.97522736 -344.48300171]
[-42.84170151 -347.06182861]
[-56.53375244 -353.40139771]
[-68.11783600 -363.06945801]
[-76.80413055 -375.40682983]
[-82.00038910 -389.57232666]
[-83.35231781 -404.60012817]
[-80.76774597 -419.46560669]
[-74.42288971 -433.15521240]
[-64.75035858 -444.73556519]
[-52.40963364 -453.41708374]
[-38.24213028 -458.60787964]
[-23.21381378 -459.95397949]
[-8.34933567 -457.36367798]
[5.33781719 -451.01354980]
[16.91443253 -441.33654785]
[25.59119606 -428.99246216]
[30.77651215 -414.82296753]
[32.11683655 -399.79412842]
[29.52078629 -384.93063354]
[23.16536331 -371.24594116]
[13.48388958 -359.67306519]
[1.13646543 -351.00106812]
[-13.03504181 -345.82122803]
[-11.69680786 -330.88104248]
[-10.35857391 -315.94085693]
[-9.02033901 -301.00067139]
[-7.68210506 -286.06048584]
[-6.34387112 -271.12030029]
[-5.00563669 -256.18011475]
[9.72305965 -245.30900574]
[11.86492634 -226.80696106]
[-0.40412214 -212.37142944]
[1.37834382 -197.47770691]
[3.16080976 -182.58399963]
[14.99206352 -173.60864258]
[17.01190376 -158.52967834]
[7.51750565 -146.18083191]
[9.29997158 -131.28710938]
[11.08243752 -116.39339447]
[12.86490345 -101.49967957]
[17.15902710 -87.12746429]
[23.83922195 -73.69709015]
[29.63261795 -69.10814667]
[30.51721954 -60.01665497]
[36.99671555 -46.48830795]
[43.47621155 -32.95996475]
[57.56607056 -28.26832962]
[64.32991791 -14.64096737]
[59.31336975 0.10596423]
[65.79286194 13.63430977]
[72.27236176 27.16265488]
[78.85238647 40.64239120]
[85.53258514 54.07276535]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.21759796 125.81666565]
[127.89779663 139.24703979]
[134.57798767 152.67741394]
[139.86749268 156.64385986]
[142.03453064 161.89752197]
[141.25042725 166.60859680]
[154.05284119 175.90422058]
[152.35191345 190.70138550]
[158.62927246 204.32469177]
[164.90663147 217.94801331]
[171.18399048 231.57133484]
[177.46134949 245.19464111]
[190.26377869 254.49026489]
[188.56285095 269.28741455]
[194.84020996 282.91073608]
[201.11756897 296.53405762]
[201.54260254 281.54006958]
[204.84526062 266.90817261]
[210.90205383 253.18537903]
[219.48657227 240.88473511]
[230.27784729 230.46607971]
[242.87245178 222.31893921]
[256.79953003 216.74790955]
[271.53842163 213.96125793]
[286.53808594 214.06317139]
[301.23773193 217.04983521]
[315.08782959 222.80958557]
[327.57055664 231.12710571]
[338.21929932 241.69142151]
[346.63586426 254.10758972]
[352.50564575 267.91143799]
[355.60916138 282.58685303]
[355.83044434 297.58520508]
[353.16116333 312.34579468]
[347.70111084 326.31677246]
[339.65444946 338.97579956]
[329.32199097 349.84963989]
[317.09002686 358.53176880]
[303.41586304 364.69757080]
[288.81069946 368.11654663]
[273.82058716 368.66085815]
[259.00592041 366.31021118]
[244.92056274 361.15243530]
[232.09111023 353.38034058]
[220.99719238 343.28454590]
[212.05357361 331.24249268]
[205.59669495 317.71005249]
[205.37336731 332.70837402]
[205.15003967 347.70672607]
[204.92671204 362.70507812]
[204.81504822 377.70465088]
[204.81504822 392.70465088]
[204.81504822 407.70465088]
[204.81504822 422.70465088]
[218.97845459 428.16012573]
[230.21206665 438.36651611]
[236.99662781 451.94348145]
[238.41458130 467.05487061]
[234.27416992 481.65695190]
[225.13533020 493.77496338]
[212.23402405 501.77001953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 165]
[18 164]
[19 163]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[27 155]
[28 152]
[29 151]
[30 150]
[31 149]
[34 146]
[35 145]
[36 144]
[37 143]
[39 142]
[40 141]
[41 140]
[44 137]
[45 136]
[46 135]
[47 133]
[48 132]
[72 131]
[73 130]
[74 129]
[75 128]
[78 125]
[79 124]
[80 123]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
