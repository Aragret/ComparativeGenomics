%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-8.91258049 701.32373047]
[-19.46338272 712.00250244]
[-30.99559212 721.61309814]
[-43.40153122 730.06579590]
[-56.56536865 737.28167725]
[-70.36418915 743.19342041]
[-84.66915894 747.74566650]
[-99.34671021 750.89605713]
[-114.25980377 752.61517334]
[-129.26919556 752.88690186]
[-144.23472595 751.70867920]
[-159.01669312 749.09161377]
[-173.47705078 745.06005859]
[-187.48080444 739.65167236]
[-200.89718628 732.91699219]
[-213.60095215 724.91888428]
[-225.47344971 715.73193359]
[-236.40385437 705.44207764]
[-246.29010010 694.14526367]
[-255.03987122 681.94702148]
[-262.57150269 668.96124268]
[-268.81463623 655.30920410]
[-273.71099854 641.11834717]
[-277.21484375 626.52111816]
[-279.29351807 611.65386963]
[-279.92755127 596.65545654]
[-279.11105347 581.66583252]
[-276.85165405 566.82495117]
[-273.17041016 552.27148438]
[-268.10174561 538.14123535]
[-261.69296265 524.56616211]
[-254.00387573 511.67297363]
[-245.10630798 499.58212280]
[-235.08334351 488.40643311]
[-224.02853394 478.25033569]
[-212.04512024 469.20855713]
[-199.24497986 461.36560059]
[-185.74765015 454.79467773]
[-171.67912292 449.55709839]
[-157.17076111 445.70181274]
[-142.35806274 443.26477051]
[-127.37928772 442.26879883]
[-112.37432098 442.72311401]
[-97.48324585 444.62353516]
[-82.84511566 447.95230103]
[-68.59660339 452.67831421]
[-62.52276611 438.96307373]
[-56.44893265 425.24780273]
[-50.37509918 411.53253174]
[-44.30126572 397.81726074]
[-58.64790726 402.19607544]
[-71.95302582 395.26977539]
[-76.59485626 381.00604248]
[-69.91434479 367.57583618]
[-55.73838425 362.67254639]
[-42.18761444 369.10501099]
[-37.02449799 383.18750000]
[-29.75126839 370.06878662]
[-22.47803879 356.95010376]
[-15.20481014 343.83142090]
[-8.32539749 330.50198364]
[-1.84590173 316.97363281]
[4.63359404 303.44528198]
[11.11308956 289.91693115]
[3.87638640 276.92587280]
[5.69856167 261.98788452]
[16.08885002 250.85704041]
[31.21585083 247.94499207]
[37.69534683 234.41664124]
[43.66690826 220.65653992]
[49.12226486 206.68374634]
[54.57762146 192.71095276]
[60.03298187 178.73814392]
[55.46483231 167.53732300]
[59.89542389 155.85169983]
[71.45957184 150.13914490]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.22126770 71.93634796]
[101.03280640 56.26722717]
[112.86904144 47.22550583]
[118.32440186 33.25270844]
[113.86982727 21.14818001]
[118.70127106 9.62251377]
[129.72564697 4.64359379]
[135.38842773 -9.24643326]
[140.94766235 -23.17823219]
[146.40301514 -37.15102768]
[151.85836792 -51.12382889]
[157.31373596 -65.09662628]
[162.76908875 -79.06941986]
[160.58062744 -94.73854065]
[172.41687012 -103.78026581]
[170.22840881 -119.44937897]
[182.06465149 -128.49110413]
[187.52000427 -142.46389771]
[174.57339478 -150.10469055]
[163.02020264 -159.72340393]
[153.15966797 -171.07092285]
[145.24722290 -183.85330200]
[139.48779297 -197.73945618]
[136.03057861 -212.36968994]
[134.96513367 -227.36506653]
[136.31904602 -242.33714294]
[140.05725098 -256.89810181]
[146.08290100 -270.67083740]
[154.23995972 -283.29852295]
[164.31709290 -294.45413208]
[176.05331421 -303.84866333]
[189.14460754 -311.23880005]
[203.25187683 -316.43313599]
[218.00971985 -319.29708862]
[233.03585815 -319.75650024]
[247.94110107 -317.79946899]
[262.33935547 -313.47665405]
[275.85766602 -306.90008545]
[288.14587402 -298.24005127]
[298.88571167 -287.72091675]
[307.79895020 -275.61514282]
[314.65475464 -262.23626709]
[319.27551270 -247.93084717]
[321.54156494 -233.06945801]
[321.39416504 -218.03700256]
[318.83718872 -203.22288513]
[313.93685913 -189.01083374]
[306.82006836 -175.76893616]
[297.67117310 -163.84022522]
[286.72717285 -153.53367615]
[274.27154541 -145.11624146]
[260.62689209 -138.80596924]
[246.14665222 -134.76629639]
[231.20590210 -133.10186768]
[216.19165039 -133.85578918]
[201.49279785 -137.00854492]
[196.03744507 -123.03575134]
[198.61610413 -108.36605835]
[186.38966370 -98.32490540]
[188.96832275 -83.65522003]
[176.74188232 -73.61406708]
[171.28652954 -59.64126968]
[165.83117676 -45.66846848]
[160.37580872 -31.69567299]
[154.92045593 -17.72287560]
[155.41603088 -10.34885311]
[149.27845764 -3.58364677]
[143.61567688 10.30638027]
[146.93676758 27.53824806]
[132.29719543 38.70806503]
[126.84184265 52.68086243]
[129.42050171 67.35054779]
[117.19406128 77.39170074]
[117.68964386 84.76572418]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.34960175 155.80194092]
[88.27770996 173.98181152]
[74.00577545 184.19351196]
[68.55042267 198.16630554]
[63.09506226 212.13909912]
[57.63970566 226.11189270]
[72.21601105 222.57194519]
[84.16479492 231.63983154]
[84.67786407 246.63104248]
[73.37699127 256.49462891]
[58.59277344 253.95951843]
[51.22369003 240.89613342]
[44.74419403 254.42448425]
[51.95696259 268.03631592]
[49.79687119 283.10906982]
[39.29975891 293.89215088]
[24.64143562 296.39642334]
[18.16193962 309.92477417]
[11.68244362 323.45312500]
[5.20294809 336.98147583]
[5.69057798 341.29611206]
[4.86308622 345.15356445]
[3.02569437 348.19647217]
[0.56830961 350.20343018]
[-2.08611608 351.10464478]
[-9.35934544 364.22332764]
[-16.63257408 377.34201050]
[-23.90580368 390.46072388]
[-30.58599854 403.89108276]
[-36.65983200 417.60635376]
[-42.73366547 431.32162476]
[-48.80750275 445.03689575]
[-54.88133621 458.75216675]
[-41.80571365 466.12667847]
[-29.50289154 474.72879028]
[-18.08773613 484.47811890]
[-7.66683054 495.28369141]
[1.66252506 507.04458618]
[9.81322289 519.65100098]
[16.70915985 532.98522949]
[22.28594971 546.92279053]
[26.49152184 561.33349609]
[29.28660965 576.08282471]
[30.64511490 591.03308105]
[30.55435181 606.04461670]
[29.01517105 620.97735596]
[26.04194069 635.69183350]
[21.66242409 650.05065918]
[15.91751003 663.91973877]
[8.86084080 677.16961670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 180]
[62 179]
[63 178]
[64 177]
[68 173]
[69 172]
[70 166]
[71 165]
[72 164]
[73 163]
[76 161]
[77 160]
[78 159]
[79 158]
[81 156]
[82 154]
[84 152]
[85 151]
[88 149]
[89 148]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[96 140]
[98 138]
[99 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
