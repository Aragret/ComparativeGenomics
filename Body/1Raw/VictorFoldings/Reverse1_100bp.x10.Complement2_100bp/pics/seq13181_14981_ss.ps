%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[118.46628571 460.81079102]
[112.26561737 474.50967407]
[103.83887482 486.96353149]
[93.42851257 497.81396484]
[81.33406067 506.74887085]
[67.90348816 513.51110840]
[53.52323914 517.90612793]
[38.60704422 519.80749512]
[23.58408165 519.16052246]
[8.88659000 515.98376465]
[-5.06255484 510.36865234]
[-17.86200905 502.47677612]
[-29.14350510 492.53512573]
[-38.58245468 480.82983398]
[-45.90727615 467.69763184]
[-50.90722275 453.51635742]
[-53.43843460 438.69403076]
[-53.42808533 423.65713501]
[-50.87647247 408.83831787]
[-45.85700989 394.66394043]
[-38.51411819 381.54183960]
[-29.05906487 369.84951782]
[-17.76389503 359.92346191]
[-4.95358944 352.04919434]
[9.00327206 346.45327759]
[23.70512199 343.29678345]
[38.72896194 342.67044067]
[53.64252090 344.59234619]
[58.04352188 330.25250244]
[62.44451904 315.91265869]
[58.78191757 301.47540283]
[70.22766876 290.55270386]
[74.62866211 276.21286011]
[79.02966309 261.87298584]
[83.43066406 247.53315735]
[86.20627594 232.79219055]
[87.32192230 217.83374023]
[88.43756866 202.87528992]
[89.55321503 187.91682434]
[74.96070099 173.60424805]
[75.68755341 152.88308716]
[91.69453430 139.24681091]
[91.91786194 124.24847412]
[92.14118958 109.25013733]
[84.82560730 122.34526062]
[73.69847870 132.40443420]
[59.93408585 138.36610413]
[44.98501587 139.60112000]
[30.42887497 135.97912598]
[17.80181122 127.88237762]
[8.43638897 116.16535187]
[3.32096171 102.06455231]
[2.99537396 87.06808472]
[7.49398565 72.75856018]
[16.34204674 60.64609909]
[28.60580254 52.00894928]
[42.99102402 47.75861740]
[57.97961426 48.34365082]
[71.98978424 53.70230484]
[83.54300690 63.26906967]
[91.42004395 76.03434753]
[94.78962708 90.65116882]
[98.76172638 76.18664551]
[102.73381805 61.72212601]
[106.70591736 47.25759888]
[110.67800903 32.79307556]
[114.65010834 18.32855225]
[118.62220764 3.86402869]
[122.59429932 -10.60049534]
[124.04371643 -25.53030396]
[122.92807007 -40.48875809]
[121.81242371 -55.44721222]
[120.69677734 -70.40566254]
[119.58112335 -85.36412048]
[105.44178009 -91.00683594]
[95.19627380 -102.18344116]
[90.83725739 -116.64093781]
[93.17803955 -131.49630737]
[101.70143127 -143.81138611]
[114.67281342 -151.17404175]
[113.55716705 -166.13249207]
[109.79814911 -174.45761108]
[112.53794861 -181.32167053]
[111.64513397 -196.29507446]
[110.75231934 -211.26847839]
[109.85950470 -226.24188232]
[108.96669006 -241.21530151]
[98.22609711 -230.74440002]
[83.22618866 -230.79721069]
[72.55959320 -241.34349060]
[72.33662415 -256.34182739]
[82.68500519 -267.20050049]
[97.67671967 -267.69918823]
[108.72341919 -257.55303955]
[109.17002106 -272.54641724]
[109.61663055 -287.53976440]
[95.25185394 -292.21200562]
[82.78604889 -300.74313354]
[73.22977448 -312.44161987]
[67.35770416 -326.35906982]
[65.64585876 -341.36727905]
[68.23301697 -356.24960327]
[74.90945435 -369.79956055]
[85.13392639 -380.91876221]
[98.07759857 -388.70584106]
[112.69116974 -392.52944946]
[127.78998566 -392.07971191]
[142.15007019 -387.39303589]
[154.60728455 -378.84936523]
[164.15180969 -367.14129639]
[170.00990295 -353.21795654]
[171.70666504 -338.20803833]
[169.10455322 -323.32833862]
[162.41450500 -309.78506470]
[152.17886353 -298.67614746]
[139.22738647 -290.90209961]
[124.60997772 -287.09313965]
[124.16337585 -272.09979248]
[123.71676636 -257.10644531]
[123.94009399 -242.10810852]
[124.83290863 -227.13470459]
[125.72572327 -212.16130066]
[126.61854553 -197.18789673]
[127.51136017 -182.21449280]
[128.51562500 -167.24813843]
[129.63127136 -152.28968811]
[143.55131531 -146.93267822]
[153.80723572 -136.01821899]
[158.32579041 -121.67444611]
[156.15963745 -106.73028564]
[147.68544006 -94.15750122]
[134.53958130 -86.47976685]
[135.65522766 -71.52130890]
[136.77087402 -56.56285858]
[137.88652039 -41.60440445]
[139.00216675 -26.64595222]
[144.66732788 -40.53501511]
[153.56747437 -52.60925674]
[165.15838623 -62.13032532]
[178.73126221 -68.51601410]
[193.45613098 -71.37582397]
[208.43252563 -70.53488922]
[222.74467468 -66.04462433]
[235.51736450 -58.17961502]
[245.96954346 -47.42080688]
[253.46206665 -34.42610550]
[257.53674316 -19.99014282]
[257.94439697 -4.99568319]
[254.66015625 9.64035606]
[247.88479614 23.02297592]
[238.03265381 34.33382416]
[225.70617676 42.88123703]
[211.65916443 48.14253616]
[196.75057983 49.79599380]
[181.89207458 47.74050140]
[167.99227905 42.10174942]
[155.90115356 33.22454834]
[146.35807800 21.65175056]
[139.94660950 8.09102821]
[137.05882263 -6.62839890]
[133.08673096 7.83612490]
[129.11463928 22.30064964]
[125.14253998 36.76517105]
[121.17044067 51.22969818]
[117.19834137 65.69422150]
[113.22624969 80.15874481]
[109.25415039 94.62326813]
[107.13952637 109.47346497]
[106.91619873 124.47180176]
[106.69287109 139.47013855]
[115.17579651 144.17868042]
[121.32424164 151.60881042]
[124.32609558 160.71296692]
[123.80901337 170.22731018]
[119.88614655 178.84713745]
[113.13475037 185.40577698]
[104.51167297 189.03247070]
[103.39602661 203.99093628]
[102.28037262 218.94938660]
[101.16472626 233.90783691]
[109.53659821 221.46148682]
[121.79743958 212.82020569]
[136.33412170 209.12089539]
[151.23410034 210.85028076]
[164.53701782 217.78082275]
[174.49264526 229.00068665]
[179.79116821 243.03370667]
[179.73544312 258.03359985]
[174.33283997 272.02688599]
[164.29412842 283.17248535]
[150.94009399 290.00399780]
[136.02767944 291.62265015]
[121.51888275 287.81546021]
[109.32257080 279.08334351]
[101.04338837 266.57513428]
[97.77050781 251.93414307]
[93.36951447 266.27398682]
[88.96851349 280.61383057]
[84.56751251 294.95370483]
[87.91532898 310.41662598]
[76.78436279 320.31365967]
[72.38336945 334.65350342]
[67.98236847 348.99334717]
[81.40644836 355.76846313]
[93.49232483 364.71493530]
[103.89228058 375.57537842]
[112.30707550 388.03729248]
[118.49460602 401.74212646]
[122.27684021 416.29556274]
[123.54496002 431.27890015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 203]
[29 202]
[30 201]
[32 199]
[33 198]
[34 197]
[35 196]
[36 180]
[37 179]
[38 178]
[39 177]
[42 170]
[43 169]
[44 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[80 126]
[81 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
