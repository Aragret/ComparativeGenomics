%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[74.56546783 540.17254639]
[72.38191986 555.06604004]
[67.24470520 569.21502686]
[59.36418152 582.04010010]
[49.06305313 593.01605225]
[36.76314545 601.69348145]
[22.96813393 607.71697998]
[8.24291420 610.83990479]
[-6.80952597 610.93438721]
[-21.57279778 607.99658203]
[-35.44235611 602.14678955]
[-47.85024643 593.62451172]
[-58.28837967 582.77880859]
[-66.32931519 570.05364990]
[-71.64379120 555.97033691]
[-74.01416779 541.10540771]
[-73.34339142 526.06756592]
[-69.65892792 511.47274780]
[-63.11165237 497.91848755]
[-53.96967316 485.95983887]
[-42.60734558 476.08651733]
[-29.48995209 468.70281982]
[-15.15464020 464.11114502]
[-0.18843356 462.49945068]
[14.79581165 463.93377686]
[19.19680977 449.59390259]
[23.59780884 435.25405884]
[27.99880600 420.91421509]
[32.39980316 406.57437134]
[28.73720360 392.13711548]
[40.18295288 381.21441650]
[38.77647018 376.65032959]
[40.22218704 371.15423584]
[44.93435287 366.51666260]
[49.76034927 352.31420898]
[54.58634949 338.11175537]
[59.41234589 323.90930176]
[64.23834229 309.70684814]
[69.06433868 295.50439453]
[73.89034271 281.30194092]
[77.10361481 266.65014648]
[78.66413879 251.73155212]
[70.66505432 236.11163330]
[81.60484314 221.29939270]
[75.03387451 207.93258667]
[83.97151184 194.87773132]
[85.30974579 179.93756104]
[86.64797974 164.99737549]
[80.07700348 151.63055420]
[89.01464081 138.57571411]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[95.48520660 48.81666565]
[95.26187897 33.81832886]
[93.92364502 18.87814331]
[92.58541107 3.93795848]
[89.58113098 -0.33069670]
[88.61160278 -4.87088490]
[89.43951416 -8.86207676]
[91.53629303 -11.69683456]
[90.86650848 -26.68187332]
[90.19672394 -41.66691208]
[89.52693939 -56.65195084]
[88.85715485 -71.63699341]
[88.18737030 -86.62203217]
[73.94498444 -91.85941315]
[62.82281494 -102.12296295]
[56.49457550 -115.82577515]
[55.89632797 -130.86669922]
[61.08811569 -144.95251465]
[71.24957275 -155.94752502]
[84.80937958 -162.19740295]
[84.13959503 -177.18243408]
[83.46981049 -192.16748047]
[75.12401581 -205.60839844]
[82.28530121 -218.66845703]
[81.61551666 -233.65350342]
[80.94572449 -248.63853455]
[72.64601135 -236.14395142]
[59.25519562 -229.38479614]
[44.27361298 -230.12791443]
[31.61741447 -238.17903137]
[24.59489632 -251.43362427]
[25.04172897 -266.42697144]
[32.84111023 -279.23983765]
[45.95430374 -286.52297974]
[60.95354843 -286.37261963]
[73.91808319 -278.82800293]
[81.45877075 -265.86218262]
[83.01929474 -280.78079224]
[84.57981110 -295.69940186]
[78.32019806 -310.22964478]
[87.33959198 -322.08291626]
[88.90011597 -337.00149536]
[90.46063995 -351.92010498]
[92.02116394 -366.83871460]
[78.11249542 -372.75820923]
[66.56762695 -382.51562500]
[58.41312027 -395.24337769]
[54.37406540 -409.80969238]
[54.80961609 -424.91934204]
[59.68103790 -439.22882080]
[68.55517578 -451.46569824]
[80.64293671 -460.54187012]
[94.86949921 -465.65036011]
[109.96983337 -466.33685303]
[124.60123444 -462.54034424]
[137.46269226 -454.59838867]
[147.41055298 -443.21722412]
[153.56028748 -429.40881348]
[155.36506653 -414.40100098]
[152.66438293 -399.52828979]
[145.69839478 -386.11312866]
[135.08651733 -375.34838867]
[121.77234650 -368.19128418]
[106.93976593 -365.27819824]
[105.37924194 -350.35958862]
[103.81871796 -335.44097900]
[102.25820160 -320.52236938]
[108.62943268 -307.05923462]
[99.49842072 -294.13888550]
[97.93789673 -279.22027588]
[96.37737274 -264.30166626]
[95.93076324 -249.30831909]
[96.60055542 -234.32328796]
[97.27033997 -219.33824158]
[105.56822205 -206.96916199]
[98.45484924 -192.83726501]
[99.12463379 -177.85221863]
[99.79441833 -162.86718750]
[113.85774231 -157.85198975]
[124.95960236 -147.80738831]
[131.38735962 -134.24092102]
[132.13339233 -119.20659637]
[127.05289459 -104.99384308]
[116.89073944 -93.77896118]
[103.17240906 -87.29181671]
[103.84219360 -72.30677795]
[104.51197815 -57.32173538]
[105.18176270 -42.33669662]
[105.85154724 -27.35165787]
[106.52133179 -12.36662006]
[107.52558899 2.59972429]
[108.86382294 17.53990936]
[110.20206451 32.48009491]
[117.93559265 19.62736893]
[131.01123047 12.27702904]
[146.01104736 12.35043621]
[159.01412964 19.82839966]
[166.62149048 32.75620270]
[166.84458923 47.75454330]
[159.62512207 60.90289307]
[146.85021973 68.76430511]
[131.85920715 69.28382874]
[118.57072449 62.32565308]
[110.45861053 49.70948029]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[103.95482635 139.91394043]
[110.43007660 154.34936523]
[101.58816528 166.33560181]
[100.24993134 181.27578735]
[98.91168976 196.21597290]
[105.38694763 210.65139771]
[96.54502869 222.63763428]
[104.20133209 233.01760864]
[102.77913666 245.43377686]
[93.58274078 253.29206848]
[92.02221680 268.21066284]
[100.76095581 256.01910400]
[113.27364349 247.74670410]
[127.91402435 244.48185730]
[142.75590515 246.65409851]
[155.84657288 253.97764587]
[165.46374512 265.48895264]
[170.34208679 279.67349243]
[169.83979797 294.66510010]
[164.02294922 308.49130249]
[153.65684509 319.33306885]
[140.10533142 325.76397705]
[125.15133667 326.93789673]
[110.76232147 322.70040894]
[98.83140564 313.60903931]
[90.92830658 300.85989380]
[88.09279633 286.12792969]
[83.26679993 300.33038330]
[78.44080353 314.53283691]
[73.61479950 328.73532104]
[68.78880310 342.93777466]
[63.96280670 357.14022827]
[59.13681030 371.34268188]
[54.52280045 385.61541748]
[57.87061310 401.07833862]
[46.73965073 410.97537231]
[42.33865356 425.31521606]
[37.93765640 439.65505981]
[33.53665543 453.99490356]
[29.13565826 468.33474731]
[42.34473038 475.55316162]
[53.83013535 485.28302002]
[63.12154770 497.12594604]
[69.83850098 510.59692383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[31 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[41 177]
[42 176]
[44 173]
[46 171]
[47 170]
[48 169]
[50 167]
[51 166]
[52 165]
[53 162]
[54 161]
[55 160]
[56 159]
[57 148]
[58 147]
[59 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[75 133]
[76 132]
[77 131]
[79 129]
[80 128]
[81 127]
[92 126]
[93 125]
[94 124]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
