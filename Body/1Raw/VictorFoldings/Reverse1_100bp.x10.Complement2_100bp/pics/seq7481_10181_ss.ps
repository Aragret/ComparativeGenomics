%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[50.73167801 604.86108398]
[41.23609543 593.02056885]
[36.66274643 578.54821777]
[37.63014984 563.40130615]
[44.00746536 549.62835693]
[54.93221283 539.09204102]
[68.92691803 533.21728516]
[68.48030853 518.22393799]
[68.03370667 503.23056030]
[67.58709717 488.23721313]
[57.78474808 482.39941406]
[51.95738983 472.45166016]
[51.65255356 460.80688477]
[57.06160355 450.35491943]
[66.94352722 443.74554443]
[66.94352722 428.74554443]
[65.05899811 426.67028809]
[63.88295364 423.72348022]
[63.75146866 420.17129517]
[64.89816284 416.39642334]
[67.41672516 412.85937500]
[68.30953979 397.88595581]
[69.20236206 382.91256714]
[70.09517670 367.93914795]
[70.98799133 352.96572876]
[68.54420471 348.86245728]
[68.65213776 343.18041992]
[72.13686371 337.56185913]
[73.47509766 322.62167358]
[65.96198273 313.14120483]
[66.95462036 300.68331909]
[76.46454620 291.96987915]
[78.02507019 277.05126953]
[79.47448730 262.12145996]
[80.81272125 247.18128967]
[82.15096283 232.24110413]
[83.48919678 217.30091858]
[72.16398621 204.86795044]
[73.35849762 187.75398254]
[86.82077789 176.58320618]
[87.93642426 161.62474060]
[81.16716766 148.35725403]
[89.90944672 135.17077637]
[91.02509308 120.21232605]
[92.14074707 105.25386810]
[89.70652771 100.60752106]
[90.04884338 94.92807770]
[93.51882935 89.86881256]
[95.07935333 74.95020294]
[96.63987732 60.03160095]
[84.33574677 68.61113739]
[69.54518127 66.11331940]
[60.74087906 53.96900558]
[62.96635056 39.13501358]
[74.94674683 30.10892868]
[89.81914520 32.06130219]
[99.06370544 43.87280655]
[101.94897461 29.15291786]
[104.83425140 14.43302536]
[107.71952057 -0.28686577]
[102.78118896 -15.31761646]
[112.82211304 -26.31893921]
[115.70738983 -41.03882980]
[103.13430786 -51.77705765]
[97.72318268 -67.30172729]
[100.86148071 -83.34441376]
[111.59971619 -95.54467010]
[126.93593597 -100.63513947]
[129.60173035 -115.39635468]
[132.26751709 -130.15757751]
[134.93331909 -144.91879272]
[137.59912109 -159.68000793]
[140.26490784 -174.44122314]
[130.02896118 -188.62730408]
[133.15820312 -205.49510193]
[147.23600769 -214.69586182]
[149.68173218 -229.49513245]
[152.12747192 -244.29440308]
[154.57319641 -259.09368896]
[157.01892090 -273.89294434]
[159.46464539 -288.69223022]
[161.91036987 -303.49148560]
[163.47090149 -318.41009521]
[164.14068604 -333.39514160]
[157.02731323 -347.52703857]
[165.32519531 -359.89611816]
[156.46240234 -376.03713989]
[166.47660828 -390.44833374]
[166.92321777 -405.44168091]
[167.36982727 -420.43502808]
[167.81643677 -435.42837524]
[153.14907837 -438.79809570]
[139.42108154 -444.96481323]
[127.16010284 -453.69146729]
[116.83742523 -464.64266968]
[108.84982300 -477.39743042]
[103.50432587 -491.46554565]
[101.00638580 -506.30627441]
[101.45203400 -521.34912109]
[104.82412720 -536.01593018]
[110.99305725 -549.74291992]
[119.72170258 -562.00250244]
[130.67456055 -572.32342529]
[143.43063354 -580.30895996]
[157.49961853 -585.65216064]
[172.34072876 -588.14770508]
[187.38351440 -587.69958496]
[202.04977417 -584.32513428]
[215.77577209 -578.15399170]
[228.03393555 -569.42333984]
[238.35305786 -558.46881104]
[246.33653259 -545.71148682]
[251.67747498 -531.64160156]
[254.17060852 -516.80010986]
[253.72009277 -501.75738525]
[250.34326172 -487.09167480]
[244.16987610 -473.36666870]
[235.43727112 -461.10992432]
[224.48106384 -450.79257202]
[211.72241211 -442.81115723]
[197.65170288 -437.47250366]
[182.80978394 -434.98178101]
[182.36317444 -419.98843384]
[181.91656494 -404.99508667]
[181.46995544 -390.00170898]
[189.53404236 -380.98522949]
[189.28466797 -368.49035645]
[180.31024170 -359.22631836]
[187.47151184 -346.16625977]
[179.12571716 -332.72534180]
[178.45593262 -317.74029541]
[188.82528687 -328.57897949]
[203.56408691 -331.36605835]
[217.17510986 -325.06210327]
[224.58180237 -312.01831055]
[223.02162170 -297.09967041]
[213.07650757 -285.87048340]
[198.45573425 -282.51895142]
[184.61247253 -288.29513550]
[176.70964050 -301.04574585]
[174.26391602 -286.24649048]
[171.81819153 -271.44720459]
[169.37246704 -256.64794922]
[166.92674255 -241.84867859]
[164.48100281 -227.04940796]
[162.03527832 -212.25013733]
[170.93078613 -202.92814636]
[172.86177063 -189.99163818]
[166.90165710 -178.13046265]
[155.02612305 -171.77543640]
[152.36033630 -157.01422119]
[149.69453430 -142.25299072]
[147.02874756 -127.49178314]
[144.36294556 -112.73056030]
[141.69714355 -97.96934509]
[152.68157959 -89.85395813]
[159.12875366 -77.73939514]
[159.73014832 -63.96305847]
[154.31147766 -51.21095276]
[143.87770081 -41.99397659]
[130.42727661 -38.15355682]
[127.54200745 -23.43366623]
[132.68670654 -9.45578098]
[122.43941498 2.59840679]
[119.55413818 17.31829834]
[116.66886902 32.03818893]
[113.78359222 46.75807953]
[111.55847931 61.59212494]
[109.99795532 76.51072693]
[108.43743134 91.42933655]
[107.09919739 106.36952209]
[105.98355103 121.32797241]
[104.86790466 136.28642273]
[111.55735779 150.62385559]
[102.89488220 162.74040222]
[101.77922821 177.69885254]
[111.68495178 186.82525635]
[114.48488617 199.80104065]
[109.37586212 211.84179688]
[98.42937469 218.63914490]
[97.09114075 233.57933044]
[95.75290680 248.51951599]
[94.41467285 263.45971680]
[96.76599121 272.28631592]
[92.94367981 278.61181641]
[91.38315582 293.53039551]
[99.26950073 310.17031860]
[88.41527557 323.95993042]
[87.07704163 338.90011597]
[85.96139526 353.85855103]
[85.06858063 368.83197021]
[84.17576599 383.80535889]
[83.28295135 398.77877808]
[82.39013672 413.75216675]
[81.94352722 428.74554443]
[81.94352722 443.74554443]
[95.84103394 456.62084961]
[95.91295624 475.24630737]
[82.58045197 487.79061890]
[83.02705383 502.78396606]
[83.47366333 517.77734375]
[83.92026520 532.77069092]
[98.23983002 537.80200195]
[109.77234650 547.66943359]
[116.95813751 561.03839111]
[118.82537842 576.10083008]
[115.12155151 590.81976318]
[106.34756470 603.20446777]
[93.69001770 611.58007812]
[78.86075592 614.81390381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[10 199]
[15 196]
[16 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[28 189]
[29 188]
[32 186]
[33 185]
[34 183]
[35 182]
[36 181]
[37 180]
[40 176]
[41 175]
[43 173]
[44 172]
[45 171]
[48 170]
[49 169]
[50 168]
[57 167]
[58 166]
[59 165]
[60 164]
[62 162]
[63 161]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 131]
[84 130]
[86 128]
[88 125]
[89 124]
[90 123]
[91 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
