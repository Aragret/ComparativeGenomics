%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[72.18938446 543.05175781]
[65.76453400 529.27532959]
[65.10575867 514.08868408]
[70.31349945 499.80764771]
[80.59362030 488.60998535]
[94.37848663 482.20327759]
[93.70870209 467.21823120]
[93.03891754 452.23318481]
[92.36913300 437.24813843]
[91.69934845 422.26312256]
[91.02955627 407.27807617]
[90.35977173 392.29302979]
[89.68998718 377.30798340]
[89.02020264 362.32296753]
[77.88927460 352.49249268]
[76.99655151 337.30508423]
[87.38311768 325.69659424]
[86.71333313 310.71154785]
[86.04354858 295.72650146]
[85.37376404 280.74145508]
[84.70397949 265.75643921]
[84.03419495 250.77139282]
[83.36441040 235.78634644]
[74.00337982 247.50689697]
[59.57201385 251.59782410]
[45.45285034 246.53330994]
[36.91199112 234.20231628]
[37.13496017 219.20396423]
[46.03860092 207.13229370]
[60.30207443 202.48973083]
[74.60545349 207.00784302]
[83.61431885 219.00257874]
[76.84506226 205.73509216]
[85.58734131 192.54861450]
[86.70298767 177.59016418]
[87.81864166 162.63169861]
[81.04937744 149.36421204]
[89.79165649 136.17773438]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[97.84111023 31.27834511]
[97.61778259 16.28000641]
[97.39445496 1.28166938]
[97.17112732 -13.71666813]
[96.94779968 -28.71500587]
[93.62554169 -43.34246445]
[87.34818268 -56.96578217]
[81.07082367 -70.58909607]
[74.79346466 -84.21241760]
[61.99103928 -93.50803375]
[63.69197083 -108.30519867]
[57.11194611 -121.78493500]
[50.23253250 -135.11436462]
[43.35311890 -148.44378662]
[36.47370529 -161.77322388]
[20.75153542 -171.35940552]
[22.26188660 -188.84327698]
[15.18478107 -202.06880188]
[8.10767555 -215.29432678]
[1.03057003 -228.51985168]
[-13.01048374 -223.18345642]
[-27.61867523 -219.68644714]
[-42.55412674 -218.08627319]
[-57.57158661 -218.40917969]
[-72.42445374 -220.64988708]
[-86.86882019 -224.77159119]
[-100.66751099 -230.70660400]
[-113.59393311 -238.35748291]
[-125.43582916 -247.59858704]
[-135.99873352 -258.27816772]
[-145.10919189 -270.22085571]
[-152.61761475 -283.23052979]
[-158.40071106 -297.09359741]
[-162.36349487 -311.58236694]
[-164.44090271 -326.45895386]
[-164.59883118 -341.47903442]
[-162.83468628 -356.39602661]
[-159.17742920 -370.96490479]
[-153.68711853 -384.94650269]
[-146.45390320 -398.11120605]
[-137.59657288 -410.24279785]
[-127.26055908 -421.14212036]
[-115.61559296 -430.63018799]
[-102.85290527 -438.55117798]
[-89.18206024 -444.77502441]
[-74.82754517 -449.19952393]
[-60.02508163 -451.75204468]
[-45.01773071 -452.39065552]
[-30.05193520 -451.10485840]
[-15.37344074 -447.91580200]
[-1.22328460 -442.87582397]
[12.16617584 -436.06768799]
[24.57507324 -427.60317993]
[35.79964066 -417.62133789]
[45.65556717 -406.28604126]
[53.98099899 -393.78341675]
[60.63923264 -380.31878662]
[65.52093506 -366.11325073]
[68.54593658 -351.40008545]
[69.66456604 -336.42086792]
[68.85846710 -321.42156982]
[66.14085388 -306.64852905]
[61.55637360 -292.34429932]
[55.18029785 -278.74377441]
[47.11732483 -266.07031250]
[37.49985886 -254.53199768]
[26.48583221 -244.31831360]
[14.25609779 -235.59695435]
[21.33320236 -222.37142944]
[28.41030884 -209.14590454]
[35.48741531 -195.92037964]
[46.96995163 -192.11538696]
[52.97424316 -181.15490723]
[49.80313492 -168.65263367]
[56.68254852 -155.32319641]
[63.56196213 -141.99377441]
[70.44137573 -128.66435242]
[73.67111969 -127.24974060]
[76.37614441 -124.20050049]
[77.79563904 -119.78028107]
[77.31528473 -114.58255768]
[89.66870880 -106.26136780]
[88.41677856 -90.48977661]
[94.69413757 -76.86645508]
[100.97149658 -63.24314117]
[107.24885559 -49.61982727]
[107.64250183 -64.61466217]
[111.10331726 -79.20996094]
[117.48413086 -92.78512573]
[126.51364136 -104.76293945]
[137.80789185 -114.63409424]
[150.88667297 -121.97886658]
[165.19384766 -126.48494720]
[180.12107849 -127.96073914]
[195.03363037 -126.34349060]
[209.29743958 -121.70196533]
[222.30599976 -114.23352814]
[233.50616455 -104.25573730]
[242.42170715 -92.19285583]
[248.67353821 -78.55780029]
[251.99580383 -63.93034744]
[252.24726868 -48.93245697]
[249.41723633 -34.20184708]
[243.62602234 -20.36487007]
[235.11988831 -8.00988579]
[224.26051331 2.33776784]
[211.50964355 10.23810387]
[197.40943909 15.35519600]
[182.55947876 17.47146225]
[167.59117126 16.49691772]
[153.14097595 12.47300148]
[139.82333374 5.57081127]
[128.20449829 -3.91616678]
[118.77852631 -15.58454227]
[111.94613647 -28.93833351]
[112.16946411 -13.93999577]
[112.39279175 1.05834162]
[112.61611938 16.05667877]
[112.83945465 31.05501556]
[123.22380066 20.23072243]
[138.12231445 18.48879051]
[150.72358704 26.62560654]
[155.26649475 40.92112732]
[149.67408752 54.83963776]
[136.50311279 62.01777649]
[121.77519226 59.17379761]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[104.75011444 137.29338074]
[111.43957520 151.63081360]
[102.77709198 163.74736023]
[101.66144562 178.70581055]
[100.54579163 193.66426086]
[107.23525238 208.00167847]
[98.57277679 220.11822510]
[98.34944916 235.11656189]
[99.01923370 250.10160828]
[99.68901825 265.08663940]
[100.35880280 280.07168579]
[101.02858734 295.05673218]
[101.69837189 310.04174805]
[102.36815643 325.02679443]
[113.74896240 335.66235352]
[114.21475220 350.86886597]
[104.00524139 361.65316772]
[104.67502594 376.63821411]
[105.34481049 391.62326050]
[106.01459503 406.60827637]
[106.68438721 421.59332275]
[107.35417175 436.57836914]
[108.02395630 451.56341553]
[108.69374084 466.54843140]
[109.36352539 481.53347778]
[123.66499329 486.68481445]
[134.90313721 496.92068481]
[141.36419678 510.68014526]
[142.06292725 525.86499023]
[136.89277649 540.15972900]
[126.64215088 551.38433838]
[112.87419128 557.82733154]
[97.68841553 558.50610352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[32 184]
[34 182]
[35 181]
[36 180]
[38 178]
[39 177]
[40 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 131]
[52 130]
[53 129]
[54 128]
[56 126]
[57 122]
[58 121]
[59 120]
[60 119]
[62 116]
[63 115]
[64 114]
[65 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
