%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-15.83011627 480.07165527]
[-16.10296822 495.22753906]
[-21.54588699 509.37500000]
[-31.50161171 520.80566406]
[-44.76794052 528.13916016]
[-59.74290085 530.48999023]
[-74.61819458 527.57421875]
[-87.59754944 519.74401855]
[-97.11366272 507.94488525]
[-102.01739502 493.60162354]
[-101.71661377 478.44625854]
[-96.24763489 464.30886841]
[-86.27085876 452.89660645]
[-72.99103546 445.58755493]
[-58.01177216 443.26434326]
[-55.12649918 428.54443359]
[-52.24122620 413.82455444]
[-49.35595322 399.10464478]
[-46.47068024 384.38476562]
[-43.69506836 369.64379883]
[-41.02927399 354.88259888]
[-38.36347961 340.12136841]
[-35.69768143 325.36013794]
[-33.03188705 310.59893799]
[-30.36609268 295.83770752]
[-39.28424454 307.89868164]
[-50.48656845 317.87402344]
[-63.49673843 325.33966064]
[-77.76155090 329.97808838]
[-92.67446136 331.59210205]
[-107.60136414 330.11309814]
[-121.90756989 325.60391235]
[-134.98475647 318.25631714]
[-146.27687073 308.38272095]
[-155.30378723 296.40295410]
[-161.68167114 282.82641602]
[-165.13932800 268.23034668]
[-165.52972412 253.23544312]
[-162.83627319 238.47924805]
[-157.17350769 224.58921814]
[-148.78219604 212.15594482]
[-138.01914978 201.70812988]
[-125.34202576 193.69000244]
[-111.28984833 188.44250488]
[-96.46012878 186.18875122]
[-81.48342896 187.02458191]
[-66.99657440 190.91444397]
[-53.61555481 197.69296265]
[-41.90932846 207.07188416]
[-32.37565613 218.65243530]
[-25.41991425 231.94219971]
[-21.33786201 246.37606812]
[-20.30307198 261.34033203]
[-22.35958481 276.19888306]
[-13.94496536 263.78137207]
[-5.53034687 251.36387634]
[2.88427186 238.94638062]
[11.11308002 226.40498352]
[19.15425301 213.74246216]
[27.19542503 201.07992554]
[35.23659897 188.41740417]
[35.52782822 173.52565002]
[49.45738220 166.02377319]
[57.49855423 153.36125183]
[65.53972626 140.69873047]
[73.58090210 128.03620911]
[81.62207794 115.37368011]
[89.56875610 102.65164185]
[94.39476013 88.44918823]
[95.95527649 73.53057861]
[97.51580048 58.61197662]
[99.07632446 43.69337082]
[100.63684845 28.77476692]
[102.19737244 13.85616302]
[103.75789642 -1.06244206]
[104.31610870 -16.05205154]
[103.86949921 -31.04540253]
[103.42289734 -46.03875351]
[90.30225372 -51.29190063]
[80.20539856 -61.11929703]
[74.63370514 -74.01354980]
[74.39807129 -88.01480103]
[79.50106812 -101.00859833]
[89.14151001 -111.04521942]
[101.84008789 -116.63221741]
[101.61676025 -131.63055420]
[91.80894470 -147.21542358]
[100.94763184 -162.19712830]
[100.50102234 -177.19047546]
[92.35626984 -190.75416565]
[99.71120453 -203.70616150]
[99.26459503 -218.69950867]
[91.11984253 -232.26319885]
[98.47477722 -245.21519470]
[83.85736847 -249.02415466]
[70.90589142 -256.79818726]
[60.67024612 -267.90713501]
[53.98020554 -281.45037842]
[51.37809753 -296.33010864]
[53.07485962 -311.34002686]
[58.93294525 -325.26336670]
[68.47746277 -336.97143555]
[80.93469238 -345.51510620]
[95.29476929 -350.20175171]
[110.39358521 -350.65151978]
[125.00716400 -346.82788086]
[137.95082092 -339.04083252]
[148.17530823 -327.92163086]
[154.85173035 -314.37164307]
[157.43890381 -299.48931885]
[155.72705078 -284.48110962]
[149.85498047 -270.56365967]
[140.29870605 -258.86520386]
[127.83290863 -250.33404541]
[113.46812439 -245.66180420]
[121.58093262 -233.17054749]
[114.25794983 -219.14611816]
[114.70455170 -204.15277100]
[122.81735992 -191.66151428]
[115.49437714 -177.63708496]
[115.94097900 -162.64373779]
[124.52743530 -154.12321472]
[125.02221680 -141.63565063]
[116.61509705 -131.85388184]
[116.83842468 -116.85554504]
[131.46325684 -110.41624451]
[141.85366821 -98.19931793]
[145.89077759 -82.61774445]
[142.71723938 -66.77827454]
[132.91864014 -53.86196136]
[118.41624451 -46.48535919]
[118.86284637 -31.49200821]
[119.30945587 -16.49865723]
[128.27166748 -28.52690697]
[142.27633667 -33.89990997]
[156.98397827 -30.95278549]
[167.83724976 -20.59873199]
[171.47315979 -6.04606295]
[166.76507568 8.19591618]
[155.17185974 17.71417427]
[140.28578186 19.55937576]
[126.71945953 13.15976334]
[118.67649841 0.49808100]
[117.11597443 15.41668606]
[115.55545044 30.33529091]
[113.99493408 45.25389481]
[112.43441010 60.17250061]
[110.87388611 75.09110260]
[109.31336212 90.00971222]
[117.33631134 77.33563232]
[127.64839172 66.44246674]
[139.86407471 57.73746872]
[153.52667236 51.54607773]
[168.12541199 48.09976578]
[183.11448669 47.52737808]
[197.93353271 49.85030746]
[212.02851868 54.98171234]
[224.87249756 62.72975159]
[235.98529053 72.80475616]
[244.95144653 84.83007050]
[251.43572998 98.35611725]
[255.19575500 112.87721252]
[256.09094238 127.85047913]
[254.08779907 142.71612549]
[249.26124573 156.91839600]
[241.79171753 169.92631531]
[231.95845032 181.25358582]
[220.12908936 190.47671509]
[206.74588013 197.25091553]
[192.30915833 201.32290649]
[177.35865784 202.54045105]
[162.45330811 200.85804749]
[148.15036011 196.33857727]
[134.98452759 189.15101624]
[123.44804382 179.56407166]
[113.97219849 167.93615723]
[106.91125488 154.70199585]
[102.52919769 140.35633850]
[100.98983765 125.43553925]
[102.34960175 110.50339508]
[100.52397156 119.45352936]
[94.28459930 123.41484833]
[86.24342346 136.07737732]
[78.20225525 148.73989868]
[70.16107941 161.40242004]
[62.11990738 174.06495667]
[61.25352097 189.86241150]
[47.89912415 196.45857239]
[39.85795212 209.12110901]
[31.81677818 221.78363037]
[23.77560425 234.44615173]
[23.11577415 241.02461243]
[19.73957062 245.59608459]
[15.30176735 247.36100769]
[6.88714886 259.77850342]
[-1.52746987 272.19598389]
[-9.94208813 284.61349487]
[-15.60487461 298.50350952]
[-18.27066994 313.26473999]
[-20.93646622 328.02593994]
[-23.60226059 342.78717041]
[-26.26805687 357.54837036]
[-28.93385315 372.30960083]
[-27.37938690 381.31079102]
[-31.75078964 387.27005005]
[-34.63606262 401.98992920]
[-37.52133560 416.70980835]
[-40.40660858 431.42971802]
[-43.29188156 446.14959717]
[-30.29811287 453.95587158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[54 197]
[55 196]
[56 195]
[57 194]
[58 191]
[59 190]
[60 189]
[61 188]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[68 180]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 133]
[77 132]
[78 131]
[85 125]
[86 124]
[88 121]
[89 120]
[91 118]
[92 117]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
