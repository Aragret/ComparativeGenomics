%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[75.51856232 477.39791870]
[61.49662018 471.84490967]
[49.29666138 462.97857666]
[39.68559265 451.35626221]
[33.26756668 437.70855713]
[30.44602966 422.89337158]
[31.39834595 407.84197998]
[36.06465149 393.50057983]
[44.15161896 380.77059937]
[55.15089035 370.45233154]
[68.37104797 363.19436646]
[82.98106384 359.45294189]
[82.98106384 344.45294189]
[75.24376678 331.72564697]
[82.98106384 317.92547607]
[81.09653473 315.85021973]
[79.92049408 312.90344238]
[79.78900909 309.35125732]
[80.93569946 305.57638550]
[83.45426178 302.03930664]
[84.34707642 287.06591797]
[77.38103485 273.90066528]
[85.92601776 260.58551025]
[86.81884003 245.61209106]
[87.71165466 230.63868713]
[88.49297333 215.65905762]
[89.16275787 200.67401123]
[89.83254242 185.68898010]
[90.39075470 170.69935608]
[90.83736420 155.70600891]
[83.48242950 142.75401306]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[84.75515747 45.68480682]
[85.24993896 33.19725418]
[93.83639526 24.67672539]
[94.28299713 9.68337440]
[94.72960663 -5.30997562]
[95.17620850 -20.30332565]
[94.95288086 -35.30166245]
[94.06006622 -50.27507019]
[93.16725159 -65.24847412]
[92.27443695 -80.22187805]
[91.38161469 -95.19528961]
[90.48880005 -110.16869354]
[73.70795441 -117.86480713]
[63.20544052 -132.94419861]
[61.81798553 -151.18275452]
[69.84352875 -167.52452087]
[84.98262024 -177.48336792]
[83.42210388 -192.40196228]
[81.86157990 -207.32057190]
[80.30105591 -222.23918152]
[70.03871918 -211.29913330]
[55.05141830 -210.68211365]
[43.92454910 -220.74157715]
[43.03209305 -235.71501160]
[52.88528824 -247.02493286]
[67.83977509 -248.19253540]
[79.32850647 -238.54977417]
[79.10517883 -253.54811096]
[78.88185120 -268.54644775]
[78.65852356 -283.54479980]
[78.43519592 -298.54312134]
[70.49328613 -312.22656250]
[78.04023743 -325.06762695]
[66.84281158 -315.08676147]
[51.86022186 -315.80932617]
[41.67518616 -326.82135010]
[42.12215042 -341.81469727]
[52.94507599 -352.20046997]
[67.94409943 -352.02923584]
[78.52673340 -341.39996338]
[79.64237976 -356.35839844]
[80.75802612 -371.31686401]
[66.37287903 -375.77484131]
[53.34678650 -383.31866455]
[42.33142090 -393.56719971]
[33.87704849 -406.00411987]
[28.40501022 -420.00387573]
[26.18675232 -434.86315918]
[27.33034325 -449.83627319]
[31.77522469 -464.17251587]
[39.29539871 -477.15386963]
[49.51093292 -488.13085938]
[61.90713501 -496.55517578]
[75.86049652 -502.00695801]
[90.67005157 -504.21582031]
[91.78569794 -519.17425537]
[92.90135193 -534.13269043]
[94.01699829 -549.09118652]
[95.13264465 -564.04962158]
[96.24829102 -579.00805664]
[97.36394501 -593.96655273]
[98.47959137 -608.92498779]
[84.55507660 -614.87365723]
[73.31822205 -625.02313232]
[65.98793030 -638.27246094]
[63.35933304 -653.18450928]
[65.71755219 -668.14172363]
[72.80679321 -681.52160645]
[83.85807037 -691.87286377]
[97.67262268 -698.07257080]
[112.75194550 -699.44836426]
[127.46035004 -695.85095215]
[140.20237732 -687.67053223]
[149.59587097 -675.79443359]
[154.62188721 -661.51098633]
[154.73526001 -646.36944580]
[149.92366028 -632.01226807]
[140.70904541 -619.99688721]
[128.09094238 -611.62658691]
[113.43804169 -607.80932617]
[112.32239532 -592.85089111]
[111.20674896 -577.89245605]
[110.09110260 -562.93395996]
[108.97544861 -547.97552490]
[107.85980225 -533.01708984]
[106.74415588 -518.05859375]
[105.62850189 -503.10015869]
[119.94654846 -498.71890259]
[132.93681335 -491.25756836]
[143.94618225 -481.08758545]
[152.42036438 -468.71664429]
[157.93167114 -454.76339722]
[160.20071411 -439.92639160]
[159.11051941 -424.94927979]
[154.71257019 -410.58346558]
[147.22433472 -397.55032349]
[137.01858521 -386.50512695]
[124.60481262 -378.00399780]
[110.60377502 -372.47595215]
[95.71648407 -370.20120239]
[94.60083008 -355.24276733]
[93.48518372 -340.28430176]
[93.03857422 -325.29095459]
[100.96450806 -312.68029785]
[93.43353271 -298.76644897]
[93.65686035 -283.76812744]
[93.88018799 -268.76977539]
[94.10351562 -253.77143860]
[94.32684326 -238.77310181]
[95.21965790 -223.79969788]
[96.78018188 -208.88108826]
[98.34070587 -193.96249390]
[99.90122986 -179.04388428]
[111.22122192 -175.79708862]
[120.81154633 -168.90318298]
[127.53523254 -159.15069580]
[130.58552551 -147.66873169]
[129.58259583 -135.79617310]
[124.62063599 -124.92564392]
[116.25963593 -116.34011841]
[105.46221161 -111.06150818]
[106.35502625 -96.08810425]
[107.24784088 -81.11469269]
[108.14065552 -66.14128876]
[109.03347015 -51.16788483]
[109.92628479 -36.19447708]
[120.66688538 -46.66537476]
[135.66679382 -46.61255646]
[146.33337402 -36.06628799]
[146.55635071 -21.06794548]
[136.20796204 -10.20926094]
[121.21625519 -9.71058464]
[110.16955566 -19.85671997]
[109.72295380 -4.86336946]
[109.27634430 10.12998009]
[108.82974243 25.12333107]
[117.96842194 40.10503387]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[113.94351959 143.66136169]
[105.83071136 156.15261841]
[105.38410950 171.14596558]
[108.25662231 179.81698608]
[104.81758118 186.35876465]
[104.14779663 201.34379578]
[103.47801208 216.32884216]
[106.22110748 225.04165649]
[102.68505859 231.53150940]
[101.79224396 246.50491333]
[100.89942932 261.47830200]
[107.80160522 275.71453857]
[99.32048798 287.95874023]
[98.42766571 302.93212891]
[97.98106384 317.92547607]
[105.71836090 331.72564697]
[97.98106384 344.45294189]
[97.98106384 359.45294189]
[112.59107971 363.19436646]
[125.81123352 370.45233154]
[136.81051636 380.77059937]
[144.89747620 393.50057983]
[149.56378174 407.84197998]
[150.51609802 422.89337158]
[147.69456482 437.70855713]
[141.27653503 451.35626221]
[131.66546631 462.97857666]
[119.46550751 471.84490967]
[105.44356537 477.39791870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 199]
[13 198]
[15 196]
[20 195]
[21 194]
[23 192]
[24 191]
[25 190]
[26 188]
[27 187]
[28 186]
[29 184]
[30 183]
[32 181]
[33 180]
[35 177]
[36 176]
[37 175]
[40 173]
[41 172]
[42 171]
[43 170]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[49 158]
[54 150]
[55 149]
[56 148]
[57 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[70 140]
[77 139]
[78 138]
[79 137]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
