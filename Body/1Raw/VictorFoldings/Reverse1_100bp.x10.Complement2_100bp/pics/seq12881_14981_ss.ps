%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[233.59886169 461.15792847]
[229.48828125 446.72546387]
[226.41778564 432.03649902]
[224.40301514 417.16592407]
[223.45423889 402.18951416]
[223.57627869 387.18356323]
[224.76853943 372.22457886]
[227.02491760 357.38873291]
[230.33393860 342.75167847]
[234.67872620 328.38796997]
[240.03713989 314.37081909]
[246.38188171 300.77163696]
[253.68061829 287.65972900]
[261.89614868 275.10195923]
[270.98663330 263.16223145]
[259.73052979 253.24758911]
[248.47444153 243.33293152]
[237.21833801 233.41828918]
[225.96224976 223.50363159]
[214.70614624 213.58898926]
[202.00523376 217.70344543]
[188.82406616 214.98300171]
[178.62721252 206.03347778]
[174.14866638 193.11213684]
[176.65927124 179.55899048]
[165.55203247 169.47784424]
[154.44480896 159.39671326]
[143.33757019 149.31556702]
[132.23033142 139.23443604]
[121.12310791 129.15328979]
[110.01586914 119.07215881]
[98.90863800 108.99102020]
[95.06912231 108.62977600]
[91.40747833 106.57788849]
[88.67520142 102.95274353]
[87.54339600 98.20312500]
[76.89738464 87.63607788]
[66.25137329 77.06903076]
[55.60536575 66.50198364]
[44.95935822 55.93493271]
[34.15720367 45.52756119]
[23.20129395 35.28216934]
[12.04529762 45.32334518]
[0.06740502 54.36831665]
[-12.64370251 62.35012054]
[-25.99391556 69.20965576]
[-39.88439178 74.89614868]
[-54.21228790 79.36748505]
[-68.87152100 82.59056091]
[-83.75356293 84.54151154]
[-98.74822998 85.20590210]
[-113.74450684 84.57881165]
[-128.63136292 82.66487885]
[-143.29856873 79.47827148]
[-157.63754272 75.04259491]
[-171.54211426 69.39067078]
[-184.90934753 62.56436157]
[-197.64027405 54.61420059]
[-209.64062500 45.59904861]
[-220.82156372 35.58565140]
[-231.10029602 24.64814758]
[-240.40074158 12.86751842]
[-248.65402222 0.33098090]
[-255.79904175 -12.86864567]
[-261.78289795 -26.63363266]
[-266.56127930 -40.86207199]
[-270.09884644 -55.44861221]
[-272.36935425 -70.28526306]
[-273.35601807 -85.26217651]
[-273.05151367 -100.26846313]
[-271.45812988 -115.19303131]
[-268.58767700 -129.92536926]
[-264.46133423 -144.35639954]
[-259.10971069 -158.37930298]
[-252.57240295 -171.89022827]
[-244.89784241 -184.78915405]
[-236.14280701 -196.98059082]
[-226.37214661 -208.37425232]
[-215.65820312 -218.88580322]
[-204.08027649 -228.43740845]
[-191.72410583 -236.95835876]
[-178.68116760 -244.38555908]
[-165.04803467 -250.66401672]
[-150.92564392 -255.74725342]
[-136.41853333 -259.59762573]
[-121.63414001 -262.18664551]
[-106.68190765 -263.49511719]
[-91.67253876 -263.51339722]
[-76.71716309 -262.24130249]
[-61.92650986 -259.68826294]
[-47.41007996 -255.87319946]
[-33.27535248 -250.82434082]
[-19.62697983 -244.57908630]
[-6.56600761 -237.18365479]
[5.81086111 -228.69279480]
[17.41199112 -219.16938782]
[28.15149117 -208.68394470]
[37.94984818 -197.31408691]
[46.73451614 -185.14399719]
[54.44045639 -172.26377869]
[61.01061630 -158.76881409]
[66.39634705 -144.75897217]
[70.55778503 -130.33802795]
[73.46411133 -115.61271667]
[75.09380341 -100.69207764]
[75.43480682 -85.68656921]
[74.48458862 -70.70729828]
[72.25019073 -55.86516571]
[68.74815369 -41.27006149]
[64.00440216 -27.03003693]
[58.05405807 -13.25052834]
[50.94118118 -0.03355338]
[42.71842957 12.52303123]
[33.44668579 24.32625961]
[44.40259552 34.57165146]
[49.12108231 35.30983734]
[53.42594147 39.01998901]
[55.52640533 45.28892517]
[66.17241669 55.85597229]
[76.81842041 66.42301941]
[87.46443176 76.99006653]
[98.11044312 87.55711365]
[108.98977661 97.88378143]
[120.09700775 107.96492004]
[131.20423889 118.04605865]
[142.31147766 128.12719727]
[153.41871643 138.20834351]
[164.52593994 148.28947449]
[175.63317871 158.37062073]
[186.74041748 168.45175171]
[203.25051880 164.77581787]
[218.54655457 171.59729004]
[226.68106079 186.04692078]
[224.62080383 202.33288574]
[235.87689209 212.24754333]
[247.13299561 222.16218567]
[258.38909912 232.07684326]
[269.64517212 241.99148560]
[280.90127563 251.90614319]
[291.59811401 241.38134766]
[303.01849365 231.64648438]
[315.10427856 222.75114441]
[327.79388428 214.74066162]
[341.02258301 207.65586853]
[354.72302246 201.53285217]
[368.82534790 196.40281677]
[383.25775146 192.29190063]
[397.94662476 189.22106934]
[412.81713867 187.20594788]
[427.79354858 186.25682068]
[442.79949951 186.37852478]
[457.75851440 187.57043457]
[472.59442139 189.82647705]
[487.23156738 193.13516235]
[501.59536743 197.47961426]
[515.61260986 202.83772278]
[529.21197510 209.18214417]
[542.32403564 216.48057556]
[554.88201904 224.69583130]
[566.82189941 233.78602600]
[578.08294678 243.70483398]
[588.60760498 254.40174866]
[598.34240723 265.82223511]
[607.23767090 277.90808105]
[615.24804688 290.59771729]
[622.33276367 303.82647705]
[628.45562744 317.52697754]
[633.58557129 331.62936401]
[637.69641113 346.06176758]
[640.76708984 360.75067139]
[642.78210449 375.62121582]
[643.73114014 390.59762573]
[643.60931396 405.60354614]
[642.41729736 420.56259155]
[640.16113281 435.39843750]
[636.85229492 450.03555298]
[632.50775146 464.39935303]
[627.14953613 478.41656494]
[620.80499268 492.01583862]
[613.50646973 505.12783813]
[605.29113770 517.68579102]
[596.20086670 529.62561035]
[586.28192139 540.88653564]
[575.58496094 551.41119385]
[564.16442871 561.14587402]
[552.07849121 570.04101562]
[539.38879395 578.05133057]
[526.15997314 585.13592529]
[512.45941162 591.25872803]
[498.35702515 596.38854980]
[483.92456055 600.49920654]
[469.23565674 603.56982422]
[454.36508179 605.58471680]
[439.38867188 606.53363037]
[424.38272095 606.41168213]
[409.42370605 605.21954346]
[394.58786011 602.96325684]
[379.95077515 599.65435791]
[365.58703613 595.30969238]
[351.56982422 589.95135498]
[337.97061157 583.60675049]
[324.85867310 576.30810547]
[312.30081177 568.09265137]
[300.36102295 559.00231934]
[289.10018921 549.08331299]
[278.57562256 538.38623047]
[268.84103394 526.96557617]
[259.94595337 514.87963867]
[251.93577576 502.18984985]
[244.85128784 488.96096802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 115]
[42 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
