%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[113.23234558 582.59246826]
[105.92513275 569.45660400]
[100.76290894 555.33929443]
[97.87278748 540.58825684]
[97.32595062 525.56671143]
[99.13586426 510.64453125]
[103.25794220 496.18927002]
[109.59069824 482.55685425]
[117.97815704 470.08300781]
[128.21379089 459.07489014]
[140.04553223 449.80361938]
[153.18200684 442.49749756]
[167.29972839 437.33645630]
[164.41445923 422.61654663]
[161.52917480 407.89666748]
[151.48825073 396.89532471]
[156.42658997 381.86459351]
[153.54132080 367.14468384]
[150.65603638 352.42480469]
[147.77076721 337.70492554]
[137.72984314 326.70358276]
[142.66818237 311.67285156]
[138.80386353 297.17913818]
[133.97787476 282.97668457]
[129.15187073 268.77423096]
[124.32587433 254.57177734]
[112.90518188 245.01055908]
[115.79111481 229.45478821]
[110.96511841 215.25233459]
[106.13912201 201.04988098]
[101.31312561 186.84742737]
[98.81958771 201.63871765]
[91.71636963 214.85023499]
[80.75309753 225.08775330]
[67.08674622 231.27085876]
[52.15956116 232.74705505]
[37.54684067 229.36053467]
[24.79070663 221.46870422]
[15.23733711 209.90440369]
[9.89492512 195.88803101]
[9.32726765 180.89877319]
[13.59427071 166.51849365]
[22.24562836 154.26475525]
[34.36833954 145.43074036]
[48.68307114 140.94871521]
[63.67914963 141.29168701]
[77.77400208 146.42346191]
[89.48017120 155.80245972]
[97.56235504 168.43907166]
[96.44670105 153.48062134]
[95.33105469 138.52217102]
[94.21540833 123.56371307]
[93.09975433 108.60525513]
[81.48268127 118.09438324]
[66.78917694 115.07762909]
[59.85074234 101.77882385]
[65.78214264 88.00135803]
[80.21096039 83.90146637]
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[83.94817352 67.84447479]
[84.25698090 55.35094452]
[92.71562195 46.70351791]
[92.93894958 31.70518112]
[93.16227722 16.70684433]
[93.38560486 1.70850646]
[82.95423889 -6.81212234]
[79.38693237 -19.59823990]
[83.77021790 -31.92175102]
[94.29270935 -39.35859680]
[94.73931885 -54.35194778]
[95.18592072 -69.34529877]
[95.63253021 -84.33864594]
[96.07913208 -99.33199310]
[96.30245972 -114.33033752]
[96.30245972 -129.33033752]
[96.30245972 -144.33033752]
[96.30245972 -159.33033752]
[96.07913208 -174.32867432]
[95.63253021 -189.32202148]
[95.18592072 -204.31536865]
[80.41504669 -207.25259399]
[66.67481995 -213.40031433]
[54.65302277 -222.44726562]
[44.95064926 -233.93714905]
[38.05184174 -247.29164124]
[34.29973984 -261.83953857]
[33.87939835 -276.85037231]
[36.80868912 -291.57125854]
[42.93754578 -305.26449585]
[51.95565796 -317.24472046]
[63.40816879 -326.91293335]
[76.71864319 -333.78680420]
[91.21803284 -337.52435303]
[90.77143097 -352.51770020]
[90.32482147 -367.51104736]
[75.92480469 -372.24554443]
[64.01441956 -381.62203979]
[56.03190994 -394.50827026]
[52.94119644 -409.34820557]
[55.11550140 -424.34979248]
[62.29226303 -437.70156860]
[73.60485840 -447.79122925]
[87.68723297 -453.40039062]
[102.83886719 -453.85171509]
[117.23013306 -449.09069824]
[129.12321472 -439.69226074]
[137.08197021 -426.79132080]
[140.14532471 -411.94573975]
[137.94338989 -396.94818115]
[130.74201965 -383.60964966]
[119.41085815 -373.54086304]
[105.31817627 -367.95767212]
[105.76477814 -352.96432495]
[106.21138763 -337.97097778]
[120.90753937 -335.10302734]
[134.60354614 -329.03363037]
[146.61122131 -320.06420898]
[156.32641602 -308.64202881]
[163.25944519 -295.33782959]
[167.05973816 -280.81741333]
[167.53361511 -265.80816650]
[164.65406799 -251.06274414]
[158.56236267 -237.32128906]
[149.56108093 -225.27427673]
[138.09907532 -215.52781677]
[124.74913025 -208.57316589]
[110.17927551 -204.76197815]
[110.62587738 -189.76863098]
[111.07248688 -174.77528381]
[113.87260437 -170.90637207]
[114.27202606 -165.23738098]
[111.30245972 -159.33033752]
[111.30245972 -144.33033752]
[111.30245972 -129.33033752]
[111.30245972 -114.33033752]
[113.98614502 -110.37977600]
[114.21660614 -104.70140839]
[111.07248688 -98.88539124]
[110.62587738 -83.89204407]
[110.17927551 -68.89868927]
[109.73266602 -53.90534210]
[109.28606415 -38.91199112]
[121.33120728 -27.17516136]
[121.15745544 -10.02043247]
[108.38394165 1.93183410]
[108.16061401 16.93017197]
[107.93728638 31.92850876]
[107.71395874 46.92684555]
[117.07468414 61.77082443]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
[108.05821228 107.48960876]
[109.17385864 122.44805908]
[110.28950500 137.40650940]
[111.40515900 152.36497498]
[112.52080536 167.32342529]
[115.51557922 182.02142334]
[120.34157562 196.22387695]
[125.16757202 210.42634583]
[129.99357605 224.62879944]
[141.75946045 235.20587158]
[138.52833557 249.74578857]
[143.35432434 263.94824219]
[148.18032837 278.15069580]
[153.00633240 292.35314941]
[158.04501343 278.22476196]
[169.85690308 268.97924805]
[184.78193665 267.48144531]
[198.19543457 274.19546509]
[205.94108582 287.04089355]
[205.61878967 302.03744507]
[197.32844543 314.53823853]
[183.63890076 320.66979980]
[168.79199219 318.53219604]
[157.38806152 308.78756714]
[167.63536072 320.84176636]
[162.49066162 334.81964111]
[165.37593079 349.53952026]
[168.26119995 364.25942993]
[171.14648438 378.97930908]
[181.39378357 391.03350830]
[176.24906921 405.01138306]
[179.13433838 419.73129272]
[182.01962280 434.45117188]
[197.04104614 433.90060425]
[211.96365356 435.70681763]
[226.41993713 439.82534790]
[240.05392456 446.15472412]
[252.52984619 454.53909302]
[263.54049683 464.77200317]
[272.81469727 476.60144043]
[280.12405396 489.73611450]
[285.28860474 503.85253906]
[288.18118286 518.60314941]
[288.73049927 533.62463379]
[286.92303467 548.54705811]
[282.80334473 563.00299072]
[276.47283936 576.63647461]
[268.08743286 589.11169434]
[257.85360718 600.12152100]
[246.02340698 609.39471436]
[232.88813782 616.70300293]
[218.77127075 621.86639404]
[204.02046204 624.75775146]
[188.99893188 625.30578613]
[174.07662964 623.49713135]
[159.62101746 619.37622070]
[145.98808289 613.04461670]
[133.51353455 604.65820312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 185]
[14 184]
[15 183]
[17 181]
[18 180]
[19 179]
[20 178]
[22 176]
[23 166]
[24 165]
[25 164]
[26 163]
[28 161]
[29 160]
[30 159]
[31 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[59 152]
[60 151]
[63 149]
[64 148]
[65 147]
[66 146]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 136]
[76 135]
[77 134]
[78 133]
[79 130]
[80 129]
[81 128]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
