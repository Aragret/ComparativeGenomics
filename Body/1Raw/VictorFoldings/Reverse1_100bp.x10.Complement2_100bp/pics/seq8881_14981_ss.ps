%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[79.06277466 522.50744629]
[71.21371460 509.30560303]
[71.03318024 493.94778442]
[78.56974030 480.56509399]
[91.79608917 472.75747681]
[91.57276154 457.75912476]
[91.34943390 442.76077271]
[91.12610626 427.76245117]
[90.90277863 412.76409912]
[90.67945099 397.76577759]
[90.45612335 382.76742554]
[77.38111877 375.63232422]
[69.58118439 362.82540894]
[69.23662567 347.73410034]
[76.54008484 334.40908813]
[89.61795044 326.47708130]
[89.39462280 311.47872925]
[89.17129517 296.48040771]
[77.58862305 289.84082031]
[70.74432373 278.25204468]
[70.51822662 264.68670654]
[77.07633209 252.68630981]
[88.79951477 245.43661499]
[88.79951477 230.43661499]
[85.65601349 223.74780273]
[88.91284180 215.21371460]
[89.13616943 200.21537781]
[89.35949707 185.21702576]
[89.58282471 170.21868896]
[89.80615234 155.22035217]
[87.18157959 151.23028564]
[87.03569031 145.54911804]
[90.26605225 139.78054810]
[90.93584442 124.79550934]
[91.60562897 109.81047058]
[84.35638428 122.94243622]
[74.21134186 133.99133301]
[61.74424744 142.33229065]
[47.66017914 147.49359131]
[32.75565720 149.18333435]
[17.87360573 147.30595398]
[3.85567594 141.96763611]
[-8.50534916 133.47029114]
[-18.51039505 122.29445648]
[-25.59362602 109.07221222]
[-29.35445404 94.55132294]
[-29.58018303 79.55302429]
[-26.25804710 64.92553711]
[-19.57593155 51.49611664]
[-9.91174030 40.02426147]
[2.18796921 31.15876579]
[16.03890038 25.40101242]
[30.85771370 23.07662964]
[45.80633545 24.31707382]
[60.03934860 29.05219269]
[72.75180817 37.01419067]
[83.22475433 47.75278091]
[90.86590576 60.66064072]
[95.24311066 75.00776672]
[96.10874939 89.98384094]
[101.97770691 76.17965698]
[107.84667206 62.37548447]
[113.71562958 48.57130814]
[118.85758972 34.48016739]
[123.25859070 20.14031982]
[127.65958405 5.80047178]
[132.06057739 -8.53937531]
[131.58676147 -17.66150856]
[136.63533020 -23.05907249]
[141.24932861 -37.33180618]
[145.86334229 -51.60454178]
[150.47735596 -65.87727356]
[155.09136963 -80.15000916]
[159.70536804 -94.42273712]
[164.31938171 -108.69547272]
[159.15223694 -120.51339722]
[163.28907776 -132.30619812]
[173.99757385 -137.93247986]
[178.82356262 -152.13493347]
[183.64956665 -166.33738708]
[183.44754028 -175.46958923]
[188.65458679 -180.71444702]
[193.69149780 -194.84347534]
[197.23117065 -209.41984558]
[199.23518372 -224.28536987]
[201.23919678 -239.15090942]
[186.73143005 -243.04360962]
[172.84059143 -248.75961304]
[159.79475403 -256.20504761]
[147.80818176 -265.25769043]
[137.07766724 -275.76885986]
[127.77942657 -287.56591797]
[120.06614685 -300.45520020]
[114.06449890 -314.22506714]
[109.87301636 -328.64932251]
[107.56053925 -343.49118042]
[107.16503906 -358.50692749]
[108.69300842 -373.44992065]
[112.11935425 -388.07485962]
[117.38781738 -402.14154053]
[124.41188049 -415.41900635]
[133.07620239 -427.68920898]
[143.23852539 -438.75064087]
[154.73193359 -448.42172241]
[167.36773682 -456.54360962]
[180.93841553 -462.98291016]
[195.22114563 -467.63394165]
[209.98138428 -470.42028809]
[224.97676086 -471.29620361]
[239.96101379 -470.24731445]
[254.68812561 -467.29083252]
[268.91622925 -462.47531128]
[282.41171265 -455.87982178]
[294.95294189 -447.61267090]
[306.33401489 -437.80963135]
[316.36801147 -426.63165283]
[324.89016724 -414.26229858]
[331.76055908 -400.90466309]
[336.86636353 -386.77813721]
[340.12371826 -372.11462402]
[341.47915649 -357.15499878]
[340.91040039 -342.14483643]
[338.42681885 -327.33062744]
[334.06918335 -312.95568848]
[327.90902710 -299.25601196]
[320.04754639 -286.45660400]
[310.61380005 -274.76757812]
[299.76272583 -264.38095093]
[287.67245483 -255.46723938]
[274.54159546 -248.17282104]
[260.58572388 -242.61749268]
[246.03399658 -238.89245605]
[231.12539673 -237.05888367]
[216.10472107 -237.14689636]
[214.10070801 -222.28135681]
[212.09669495 -207.41583252]
[221.37394714 -219.20280457]
[234.41792297 -226.60920715]
[249.29360962 -228.53637695]
[263.79428101 -224.69839478]
[275.76889038 -215.66462708]
[283.44104004 -202.77516174]
[285.67260742 -187.94209290]
[282.13259888 -173.36579895]
[273.34609985 -161.20860291]
[260.61654663 -153.27394104]
[245.83232117 -150.73889160]
[231.18655396 -153.97947693]
[218.85185242 -162.51501465]
[210.65802002 -175.07928467]
[207.82052612 -189.80656433]
[202.78361511 -175.67752075]
[197.85202026 -161.51139832]
[193.02601624 -147.30892944]
[188.20002747 -133.10647583]
[192.54087830 -116.10283661]
[178.59211731 -104.08146667]
[173.97810364 -89.80873108]
[169.36408997 -75.53599548]
[164.75009155 -61.26326370]
[160.13607788 -46.99053192]
[155.52206421 -32.71779633]
[150.90806580 -18.44506454]
[146.40043640 -4.13837719]
[141.99943542 10.20147038]
[137.59843445 24.54131699]
[133.19743347 38.88116455]
[146.40786743 31.77591133]
[161.11984253 34.70122910]
[170.60726929 46.31969452]
[170.53260803 61.31951141]
[160.92999268 72.84295654]
[146.18962097 75.62167358]
[133.05058289 68.38526154]
[127.51980591 54.44026947]
[121.65084839 68.24444580]
[115.78188324 82.04862213]
[109.91292572 95.85279846]
[106.59066772 110.48025513]
[105.92088318 125.46529388]
[105.25109100 140.45033264]
[104.80448914 155.44367981]
[104.58116150 170.44201660]
[104.35783386 185.44035339]
[104.13450623 200.43870544]
[103.91117859 215.43704224]
[103.79951477 230.43661499]
[103.79951477 245.43661499]
[117.61752319 255.19155884]
[122.84644318 271.10253906]
[117.61375427 286.83724976]
[104.16963196 296.25708008]
[104.39295959 311.25540161]
[104.61628723 326.25375366]
[117.92451477 333.79284668]
[125.62147522 346.89453125]
[125.72639465 361.98941040]
[118.31122589 375.02285767]
[105.45446014 382.54409790]
[105.67778778 397.54244995]
[105.90111542 412.54077148]
[106.12444305 427.53912354]
[106.34777069 442.53744507]
[106.57109833 457.53579712]
[106.79442596 472.53414917]
[120.24737549 479.94451904]
[128.17904663 493.09686279]
[128.45585632 508.45324707]
[121.00333405 521.88293457]
[107.82619476 529.77331543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[16 194]
[17 193]
[18 192]
[23 188]
[24 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[33 181]
[34 180]
[35 179]
[60 178]
[61 177]
[62 176]
[63 175]
[64 167]
[65 166]
[66 165]
[67 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[78 155]
[79 154]
[80 153]
[82 152]
[83 151]
[84 136]
[85 135]
[86 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
