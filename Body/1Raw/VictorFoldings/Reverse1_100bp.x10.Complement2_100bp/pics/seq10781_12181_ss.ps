%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[101.54988861 835.31524658]
[87.83707428 829.20159912]
[74.83843994 821.68804932]
[62.69640732 812.85693359]
[51.54401016 802.80499268]
[41.50344086 791.64233398]
[32.68470764 779.49133301]
[25.18443489 766.48504639]
[19.08479881 752.76599121]
[14.45263195 738.48449707]
[11.33868504 723.79705811]
[9.77707672 708.86456299]
[9.78491783 693.85064697]
[11.36212063 678.91979980]
[14.49140549 664.23559570]
[19.13848686 649.95898438]
[25.25244713 636.24633789]
[32.76630020 623.24786377]
[41.59772110 611.10607910]
[51.64994431 599.95391846]
[62.81283188 589.91357422]
[74.96408081 581.09515381]
[87.97055817 573.59521484]
[101.68975067 567.49591064]
[115.97134399 562.86407471]
[130.65885925 559.75048828]
[129.09834290 544.83190918]
[127.53781891 529.91326904]
[125.97729492 514.99468994]
[116.95790100 503.14141846]
[123.21751404 488.61117554]
[114.02111816 480.75286865]
[112.59892273 468.33673096]
[120.25522614 457.95675659]
[118.91699219 443.01657104]
[117.57875824 428.07638550]
[116.24052429 413.13619995]
[112.51280975 406.75448608]
[114.99527740 397.96386719]
[113.87963104 383.00540161]
[103.23191833 369.05575562]
[111.36513519 352.53509521]
[110.02690125 337.59490967]
[101.18498230 325.60867310]
[107.66024017 311.17324829]
[106.32200623 296.23306274]
[104.98377228 281.29287720]
[91.38786316 279.08523560]
[78.71003723 273.67520142]
[67.69322968 265.37469482]
[58.98428726 254.66505432]
[53.09595490 242.16932678]
[50.37673950 228.61589050]
[50.99024582 214.79608154]
[54.90536880 201.51792908]
[61.89780807 189.55892944]
[71.56294250 179.62051392]
[83.33921051 172.28697205]
[96.54076385 167.99098206]
[95.64794922 153.01757812]
[94.75512695 138.04417419]
[93.86231232 123.07077026]
[81.51465607 115.10707855]
[76.16908264 101.42095947]
[79.85044861 87.19659424]
[91.16427612 77.82204437]
[90.27146149 62.84864044]
[89.37864685 47.87523270]
[88.15167236 32.92549896]
[86.59114838 18.00689507]
[84.91960907 3.10032082]
[83.13714600 -11.79339600]
[81.35467529 -26.68711281]
[71.25636292 -15.59549236]
[56.27990723 -14.75540352]
[45.00450134 -24.64808846]
[43.88920975 -39.60656738]
[53.57292557 -51.06194687]
[68.50836945 -52.45206070]
[80.13939667 -42.98142624]
[71.99464417 -56.54511261]
[79.34957123 -69.49710846]
[78.90296936 -84.49046326]
[70.75821686 -98.05414581]
[78.11314392 -111.00614166]
[77.66654205 -125.99949646]
[77.21993256 -140.99284363]
[69.07518005 -154.55653381]
[76.43011475 -167.50852966]
[75.98350525 -182.50187683]
[75.53690338 -197.49522400]
[75.09029388 -212.48857117]
[60.35039902 -215.65066528]
[46.79586029 -222.24900818]
[35.21472931 -231.89994812]
[26.28031158 -244.04241943]
[20.51204491 -257.97045898]
[18.24528885 -272.87432861]
[19.61182976 -287.88754272]
[24.53221893 -302.13720703]
[32.72039032 -314.79489136]
[43.70029831 -325.12472534]
[56.83357620 -332.52609253]
[71.35668182 -336.56872559]
[86.42526245 -337.01757812]
[101.16323853 -333.84652710]
[114.71377563 -327.23999023]
[126.28905487 -317.58203125]
[135.21611023 -305.43414307]
[140.97592163 -291.50259399]
[143.23364258 -276.59735107]
[141.85800171 -261.58499146]
[136.92897034 -247.33830261]
[128.73313904 -234.68557739]
[117.74696350 -224.36241150]
[104.60919952 -216.96900940]
[90.08364868 -212.93518066]
[90.53025055 -197.94183350]
[90.97686005 -182.94848633]
[91.42346191 -167.95513916]
[99.53627014 -155.46386719]
[92.21328735 -141.43945312]
[92.65988922 -126.44609833]
[93.10649872 -111.45275116]
[101.21930695 -98.96148682]
[93.89631653 -84.93706512]
[94.34292603 -69.94371796]
[102.45573425 -57.45245361]
[95.13274384 -43.42803192]
[96.24839020 -28.46957970]
[98.03086090 -13.57586193]
[99.81332397 1.31785500]
[103.72939301 7.58572721]
[101.50975037 16.44637108]
[103.07027435 31.36497688]
[105.56436920 33.85733414]
[106.97518158 37.68155289]
[106.68987274 42.31533051]
[104.35205078 46.98241806]
[105.24487305 61.95582199]
[106.13768768 76.92922974]
[118.48534393 84.89292145]
[123.83091736 98.57904053]
[120.14955139 112.80340576]
[108.83572388 122.17795563]
[109.72853851 137.15136719]
[110.62135315 152.12477112]
[111.51416779 167.09817505]
[127.43450165 170.60496521]
[141.71536255 178.43801880]
[153.20932007 189.95904541]
[160.99540710 204.23376465]
[164.45288086 220.10774231]
[163.31068420 236.29968262]
[157.66871643 251.50489807]
[147.98913574 264.50042725]
[135.05853271 274.24337769]
[119.92395782 279.95465088]
[121.26219177 294.89483643]
[122.60042572 309.83502197]
[131.53805542 322.88986206]
[124.96708679 336.25668335]
[126.30532074 351.19686890]
[135.68446350 360.05090332]
[136.49151611 372.52218628]
[128.83808899 381.88977051]
[129.95373535 396.84820557]
[131.18070984 411.79794312]
[132.51893616 426.73812866]
[133.85717773 441.67831421]
[135.19540405 456.61849976]
[146.13520813 471.43075562]
[138.13612366 487.05065918]
[147.26713562 499.97100830]
[140.89590454 513.43414307]
[142.45642090 528.35278320]
[144.01693726 543.27136230]
[145.57746887 558.18994141]
[160.59138489 558.19671631]
[175.52233887 559.77282715]
[190.20675659 562.90106201]
[204.48373413 567.54705811]
[218.19683838 573.66003418]
[231.19584656 581.17297363]
[243.33830261 590.00347900]
[254.49118042 600.05487061]
[264.53228760 611.21704102]
[273.35162354 623.36767578]
[280.85253906 636.37359619]
[286.95281982 650.09234619]
[291.58569336 664.37359619]
[294.70034790 679.06091309]
[296.26269531 693.99328613]
[296.25558472 709.00720215]
[294.67910767 723.93811035]
[291.55053711 738.62249756]
[286.90414429 752.89935303]
[280.79083252 766.61230469]
[273.27761841 779.61108398]
[264.44677734 791.75335693]
[254.39511108 802.90600586]
[243.23271179 812.94683838]
[231.08189392 821.76586914]
[218.07577515 829.26647949]
[204.35688782 835.36645508]
[190.07551575 839.99896240]
[175.38813782 843.11322021]
[160.45570374 844.67523193]
[145.44178772 844.66772461]
[130.51089478 843.09088135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 178]
[27 177]
[28 176]
[29 175]
[31 173]
[34 171]
[35 170]
[36 169]
[37 168]
[39 167]
[40 166]
[42 163]
[43 162]
[45 160]
[46 159]
[47 158]
[59 148]
[60 147]
[61 146]
[62 145]
[66 141]
[67 140]
[68 139]
[69 135]
[70 134]
[71 132]
[72 131]
[73 130]
[80 129]
[82 127]
[83 126]
[85 124]
[86 123]
[87 122]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
