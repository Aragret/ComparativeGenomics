%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[63.22996521 235.40574646]
[71.13719940 248.19345093]
[76.83165741 262.10830688]
[80.15799713 276.77069092]
[81.02546692 291.78057861]
[79.41040802 306.72854614]
[75.35687256 321.20675659]
[68.97544861 334.82025146]
[60.44022369 347.19766235]
[49.98405075 358.00128174]
[37.89217377 366.93640137]
[24.49447632 373.75927734]
[10.15645123 378.28375244]
[-4.73074770 380.38641357]
[-19.76098633 380.00988770]
[-34.52423096 377.16442871]
[-48.61772537 371.92773438]
[-61.65699387 364.44256592]
[-73.28630829 354.91320801]
[-83.18842316 343.59957886]
[-91.09319305 330.81036377]
[-96.78497314 316.89440918]
[-100.10848236 302.23138428]
[-100.97306824 287.22131348]
[-99.35512543 272.27368164]
[-95.29879761 257.79623413]
[-88.91475677 244.18397522]
[-80.37714386 231.80822754]
[-69.91889191 221.00662231]
[-57.82529449 212.07382202]
[-44.42628098 205.25354004]
[-30.08738518 200.73182678]
[-15.19978237 198.63203430]
[-0.16961598 199.01145935]
[14.59307957 201.85972595]
[28.68556595 207.09916687]
[36.15330887 194.09020996]
[43.62104797 181.08126831]
[51.08879089 168.07231140]
[58.55653000 155.06335449]
[55.70046616 143.30880737]
[61.81549835 132.40971375]
[74.09911346 128.47579956]
[81.75970459 115.57947540]
[82.47308350 108.22333527]
[89.63158417 102.54937744]
[96.11107635 89.02103424]
[101.14799500 74.89200592]
[106.18491364 60.76297379]
[111.22182465 46.63394547]
[116.25874329 32.50491714]
[103.53570557 40.44999695]
[88.53596497 40.36169052]
[75.90735626 32.26736069]
[69.56298828 18.67512131]
[71.46873474 3.79667568]
[81.03407288 -7.75772715]
[95.29508972 -12.40782928]
[109.83284760 -8.71274757]
[120.14266205 2.18255877]
[123.02990723 16.90231514]
[129.90931702 3.57288671]
[136.78872681 -9.75654221]
[131.24354553 -22.03113174]
[133.74378967 -35.06797409]
[143.15663147 -44.14985275]
[155.88999939 -46.12234497]
[162.96710205 -59.34786987]
[170.04420471 -72.57339478]
[177.12132263 -85.79892731]
[184.19842529 -99.02445221]
[191.27552795 -112.24997711]
[198.35263062 -125.47550964]
[185.59819031 -133.37973022]
[173.37074280 -142.07696533]
[161.71951294 -151.53221130]
[150.69145203 -161.70738220]
[140.33093262 -172.56152344]
[130.67970276 -184.05091858]
[121.77659607 -196.12930298]
[113.65747833 -208.74803162]
[106.35504150 -221.85630798]
[99.89868164 -235.40133667]
[94.31440735 -249.32859802]
[89.62470245 -263.58200073]
[85.84844208 -278.10412598]
[83.00084686 -292.83651733]
[81.09336853 -307.71987915]
[80.13369751 -322.69424438]
[80.12569427 -337.69931030]
[81.06938934 -352.67471313]
[82.96098328 -367.56005859]
[85.79286194 -382.29550171]
[89.55362701 -396.82165527]
[94.22812653 -411.08004761]
[99.79753876 -425.01324463]
[106.23943329 -438.56515503]
[113.52788544 -451.68124390]
[121.63353729 -464.30862427]
[130.52374268 -476.39648438]
[140.16271973 -487.89617920]
[150.51165771 -498.76135254]
[161.52885437 -508.94830322]
[173.16998291 -518.41595459]
[185.38813782 -527.12622070]
[198.13415527 -535.04406738]
[211.35667419 -542.13751221]
[225.00247192 -548.37811279]
[239.01660156 -553.74060059]
[253.34263611 -558.20355225]
[267.92288208 -561.74884033]
[282.69860840 -564.36224365]
[297.61035156 -566.03326416]
[312.59808350 -566.75512695]
[327.60137939 -566.52496338]
[342.55990601 -565.34375000]
[357.41339111 -563.21612549]
[372.10202026 -560.15075684]
[386.56665039 -556.15991211]
[400.74905396 -551.25970459]
[414.59210205 -545.46984863]
[428.04006958 -538.81365967]
[441.03881836 -531.31793213]
[453.53594971 -523.01287842]
[465.48120117 -513.93194580]
[476.82644653 -504.11169434]
[487.52603149 -493.59161377]
[497.53680420 -482.41412354]
[506.81854248 -470.62420654]
[515.33380127 -458.26931763]
[523.04833984 -445.39926147]
[529.93103027 -432.06582642]
[535.95422363 -418.32269287]
[541.09368896 -404.22521973]
[545.32861328 -389.83016968]
[548.64208984 -375.19549561]
[551.02062988 -360.38012695]
[552.45477295 -345.44372559]
[552.93872070 -330.44644165]
[552.47045898 -315.44866943]
[551.05194092 -300.51080322]
[548.68884277 -285.69296265]
[545.39068604 -271.05484009]
[541.17077637 -256.65536499]
[536.04614258 -242.55250549]
[530.03729248 -228.80310059]
[523.16851807 -215.46246338]
[515.46746826 -202.58433533]
[506.96508789 -190.22058105]
[497.69570923 -178.42095947]
[487.69659424 -167.23300171]
[477.00805664 -156.70175171]
[465.67306519 -146.86961365]
[453.73730469 -137.77618408]
[441.24884033 -129.45808411]
[428.25796509 -121.94879913]
[414.81695557 -115.27857208]
[400.97998047 -109.47425079]
[386.80270386 -104.55921936]
[372.34225464 -100.55326080]
[357.65682983 -97.47251129]
[342.80557251 -95.32937622]
[327.84829712 -94.13248444]
[312.84524536 -93.88665009]
[297.85678101 -94.59287262]
[282.94329834 -96.24829865]
[268.16482544 -98.84626770]
[253.58088684 -102.37631989]
[239.25019836 -106.82423401]
[225.23048401 -112.17210388]
[211.57815552 -118.39839935]
[204.50105286 -105.17287445]
[197.42395020 -91.94734955]
[190.34684753 -78.72181702]
[183.26972961 -65.49629211]
[176.19262695 -52.27076340]
[169.11552429 -39.04523849]
[174.67329407 -23.17230606]
[166.87792969 -7.89005566]
[150.11816406 -2.87713003]
[143.23875427 10.45229912]
[136.35932922 23.78172874]
[130.38777161 37.54183197]
[125.35086060 51.67086029]
[120.31394196 65.79988861]
[115.27702332 79.92891693]
[110.24011230 94.05795288]
[121.75574493 84.44596863]
[136.05003357 79.89920807]
[151.00253296 81.09214783]
[164.39509583 87.84783173]
[174.24102783 99.16407776]
[179.07974243 113.36220551]
[178.19345093 128.33599854]
[171.71362305 141.86418152]
[160.60150146 151.93994141]
[146.50550842 157.06858826]
[131.51670837 156.48931885]
[117.85857391 150.28805542]
[107.55723572 139.38473511]
[102.14082336 125.39679718]
[102.41242218 110.40113068]
[94.65603638 123.24007416]
[86.99543762 136.13639832]
[87.19432831 154.54949951]
[71.56548309 162.53109741]
[64.09774017 175.54005432]
[56.63000107 188.54899597]
[49.16225815 201.55795288]
[41.69451904 214.56690979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 210]
[37 209]
[38 208]
[39 207]
[40 206]
[43 204]
[44 203]
[46 202]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[61 182]
[62 181]
[63 180]
[67 177]
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
