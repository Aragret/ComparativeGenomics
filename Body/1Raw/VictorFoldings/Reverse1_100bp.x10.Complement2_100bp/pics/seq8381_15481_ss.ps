%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[48.20029449 799.30163574]
[33.51646042 802.41076660]
[18.61971092 804.24603271]
[3.62033558 804.79388428]
[-11.37061310 804.05035400]
[-26.24214363 802.02081299]
[-40.88415527 798.72033691]
[-55.18823624 794.17340088]
[-69.04848480 788.41363525]
[-82.36228180 781.48364258]
[-95.03105164 773.43481445]
[-106.96100616 764.32672119]
[-118.06381226 754.22680664]
[-128.25727844 743.20977783]
[-137.46591187 731.35723877]
[-145.62155151 718.75695801]
[-152.66380310 705.50219727]
[-158.54054260 691.69116211]
[-163.20825195 677.42602539]
[-166.63237000 662.81243896]
[-168.78755188 647.95861816]
[-169.65783691 632.97448730]
[-169.23678589 617.97100830]
[-167.52749634 603.05926514]
[-164.54264832 588.34967041]
[-160.30433655 573.95111084]
[-154.84393311 559.97021484]
[-148.20185852 546.51049805]
[-140.42730713 533.67156982]
[-131.57783508 521.54852295]
[-121.71895599 510.23110962]
[-110.92366791 499.80313110]
[-99.27189636 490.34173584]
[-86.84989929 481.91705322]
[-73.74965668 474.59140015]
[-60.06815338 468.41903687]
[-45.90669250 463.44567871]
[-31.37011528 459.70812988]
[-16.56604958 457.23403931]
[-1.60410058 456.04174805]
[13.40495586 456.14010620]
[28.34999657 457.52835083]
[31.01579094 442.76712036]
[33.68158722 428.00588989]
[26.86641502 411.83432007]
[38.87759018 397.87677002]
[41.32331848 383.07748413]
[43.76904678 368.27822876]
[46.21477127 353.47894287]
[40.65617371 339.66043091]
[50.54003143 327.30648804]
[52.98575974 312.50723267]
[55.43148804 297.70794678]
[57.87721634 282.90869141]
[60.32294083 268.10940552]
[58.57787704 265.04556274]
[58.23011017 260.98428345]
[59.73228455 256.59146118]
[63.22252274 252.71006775]
[66.32662964 238.03475952]
[69.43074036 223.35946655]
[72.53485107 208.68415833]
[75.42012787 193.96426392]
[78.08592224 179.20304871]
[80.75171661 164.44183350]
[83.41751099 149.68061829]
[86.08330536 134.91940308]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[100.00238037 60.99674225]
[102.55821228 46.21608734]
[104.78333282 31.38204384]
[107.00844574 16.54800034]
[109.23356628 1.71395648]
[111.23757935 -13.15157223]
[113.02004242 -28.04528999]
[114.80250549 -42.93900681]
[116.58497620 -57.83272552]
[118.36743927 -72.72644043]
[120.14990997 -87.62015533]
[112.80605316 -98.22348785]
[114.59729004 -110.59180450]
[124.02358246 -118.17280579]
[126.02759552 -133.03833008]
[128.03160095 -147.90386963]
[130.03562927 -162.76939392]
[132.03964233 -177.63491821]
[134.04365540 -192.50044250]
[136.04766846 -207.36598206]
[137.83012390 -222.25968933]
[139.39065552 -237.17829895]
[140.17196655 -252.15794373]
[140.17196655 -267.15792847]
[140.17196655 -282.15792847]
[140.17196655 -297.15792847]
[126.11478424 -302.94274902]
[115.34491730 -313.67019653]
[109.50468445 -327.70443726]
[109.48468781 -342.90536499]
[115.28797150 -356.95492554]
[126.02958679 -367.71069336]
[140.07150269 -373.53244019]
[155.27244568 -373.53244019]
[169.31436157 -367.71069336]
[180.05596924 -356.95492554]
[185.85926819 -342.90536499]
[185.83926392 -327.70443726]
[179.99903870 -313.67019653]
[169.22915649 -302.94274902]
[155.17196655 -297.15792847]
[155.17196655 -282.15792847]
[155.17196655 -267.15792847]
[155.17196655 -252.15794373]
[165.71632385 -262.82641602]
[180.63912964 -264.34634399]
[193.11785889 -256.02282715]
[197.44743347 -241.66123962]
[191.64840698 -227.82754517]
[178.37202454 -220.84629822]
[163.68807983 -223.90922546]
[154.30924988 -235.61778259]
[152.74873352 -220.69917297]
[155.00685120 -216.49085999]
[154.64532471 -210.81932068]
[150.91319275 -205.36196899]
[148.90917969 -190.49642944]
[146.90516663 -175.63090515]
[144.90115356 -160.76538086]
[142.89714050 -145.89985657]
[140.89312744 -131.03431702]
[138.88911438 -116.16879272]
[146.41958618 -100.31764984]
[135.04362488 -85.83769226]
[133.26115417 -70.94397736]
[131.47869873 -56.05025864]
[129.69622803 -41.15653992]
[127.91375732 -26.26282310]
[126.13129425 -11.36910629]
[128.32650757 -7.12763739]
[127.88057709 -1.46211338]
[124.06760406 3.93907356]
[121.84249115 18.77311707]
[119.61737061 33.60716248]
[117.39225769 48.44120407]
[119.18274689 51.47871780]
[119.59094238 55.53438568]
[118.15433502 59.94906998]
[114.72227478 63.88201523]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[100.84452057 137.58518982]
[98.17872620 152.34640503]
[95.51293182 167.10763550]
[92.84713745 181.86885071]
[90.18134308 196.63006592]
[92.05383301 202.97082520]
[90.65327454 208.47859192]
[87.21015167 211.78826904]
[84.10604095 226.46357727]
[81.00193787 241.13887024]
[77.89782715 255.81417847]
[75.12221527 270.55514526]
[72.67648315 285.35440063]
[70.23075867 300.15368652]
[67.78503418 314.95294189]
[65.33930206 329.75222778]
[70.72296906 344.62927246]
[61.01404572 355.92468262]
[58.56831741 370.72393799]
[56.12258911 385.52322388]
[53.67686081 400.32247925]
[60.53992844 411.24316406]
[58.19820404 423.51916504]
[48.44280243 430.67169189]
[45.77700806 445.43292236]
[43.11121368 460.19412231]
[57.59777832 464.12109375]
[71.69313049 469.27883911]
[85.29291534 475.62921143]
[98.29644012 483.12518311]
[110.60743713 491.71127319]
[122.13475037 501.32391357]
[132.79302979 511.89187622]
[142.50338745 523.33697510]
[151.19389343 535.57452393]
[158.80023193 548.51379395]
[165.26608276 562.05908203]
[170.54357910 576.10998535]
[174.59362793 590.56262207]
[177.38626099 605.30993652]
[178.90078735 620.24273682]
[179.12602234 635.25042725]
[178.06025696 650.22186279]
[175.71142578 665.04632568]
[172.09687805 679.61401367]
[167.24340820 693.81701660]
[161.18693542 707.55017090]
[153.97230530 720.71191406]
[145.65292358 733.20465088]
[136.29039001 744.93603516]
[125.95403290 755.81909180]
[114.72035980 765.77325439]
[102.67256165 774.72491455]
[89.89983368 782.60772705]
[76.49672699 789.36334229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 181]
[43 180]
[44 179]
[46 176]
[47 175]
[48 174]
[49 173]
[51 171]
[52 170]
[53 169]
[54 168]
[55 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[71 153]
[72 152]
[73 151]
[74 147]
[75 146]
[76 145]
[77 144]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 125]
[94 124]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
