%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[186.74154663 164.68743896]
[191.85557556 150.57824707]
[178.18591309 144.40248108]
[164.51623535 138.22671509]
[150.84657288 132.05094910]
[143.45674133 132.16174316]
[137.02041626 125.68012238]
[123.44420624 119.30151367]
[109.86800385 112.92291260]
[98.69416809 116.20721436]
[88.19029999 111.17631531]
[83.74546814 100.41133881]
[70.26573181 93.83130646]
[56.78599930 87.25128174]
[43.30626297 80.67125702]
[38.09910583 81.03540802]
[33.71168900 79.51756287]
[30.72361946 76.74510956]
[29.38149643 73.48458099]
[16.20902061 66.30921936]
[3.03654408 59.13385010]
[-10.13593197 51.95848465]
[-23.30840683 44.78311920]
[-36.48088455 37.60775375]
[-52.30091095 37.80096054]
[-59.77635956 24.91814423]
[-72.94883728 17.74277687]
[-86.12130737 10.56741142]
[-94.26461029 23.17291832]
[-103.32716370 35.13462448]
[-113.25827789 46.38563538]
[-124.00241089 56.86302567]
[-135.49948120 66.50820923]
[-147.68519592 75.26723480]
[-160.49140930 83.09112549]
[-173.84648132 89.93612671]
[-187.67575073 95.76395416]
[-201.90187073 100.54201508]
[-216.44526672 104.24359131]
[-231.22462463 106.84797668]
[-246.15728760 108.34062195]
[-261.15972900 108.71315765]
[-276.14807129 107.96351624]
[-291.03848267 106.09588623]
[-305.74768066 103.12070465]
[-320.19342041 99.05462646]
[-334.29489136 93.92037201]
[-347.97323608 87.74666595]
[-361.15200806 80.56803131]
[-373.75744629 72.42462158]
[-385.71905518 63.36196518]
[-396.96997070 53.43075562]
[-407.44726562 42.68652344]
[-417.09234619 31.18936539]
[-425.85128784 19.00357437]
[-433.67504883 6.19729757]
[-440.51992798 -7.15784454]
[-446.34762573 -20.98716354]
[-451.12557983 -35.21332169]
[-454.82702637 -49.75675583]
[-457.43127441 -64.53613281]
[-458.92379761 -79.46880341]
[-459.29620361 -94.47125244]
[-458.54641724 -109.45958710]
[-456.67864990 -124.34997559]
[-453.70336914 -139.05914307]
[-449.63714600 -153.50483704]
[-444.50277710 -167.60627747]
[-438.32894897 -181.28457642]
[-431.15020752 -194.46327209]
[-423.00668335 -207.06863403]
[-413.94390869 -219.03018188]
[-404.01260376 -230.28102112]
[-393.26828003 -240.75820923]
[-381.77102661 -250.40319824]
[-369.58517456 -259.16201782]
[-356.77880859 -266.98565674]
[-343.42361450 -273.83044434]
[-329.59423828 -279.65802002]
[-315.36804199 -284.43582153]
[-300.82458496 -288.13714600]
[-286.04516602 -290.74127197]
[-271.11248779 -292.23364258]
[-256.11004639 -292.60592651]
[-241.12171936 -291.85601807]
[-226.23133850 -289.98812866]
[-211.52220154 -287.01269531]
[-197.07653809 -282.94635010]
[-182.97514343 -277.81185913]
[-169.29689026 -271.63790894]
[-156.11827087 -264.45904541]
[-143.51298523 -256.31539917]
[-131.55151367 -247.25253296]
[-120.30076599 -237.32113647]
[-109.82366180 -226.57672119]
[-100.17878723 -215.07939148]
[-91.42008209 -202.89344788]
[-83.59652710 -190.08702087]
[-76.75188446 -176.73176575]
[-70.92442322 -162.90234375]
[-66.14673615 -148.67610168]
[-62.44554138 -134.13259888]
[-59.84154129 -119.35317993]
[-58.34930038 -104.42047882]
[-57.97715378 -89.41802216]
[-58.72719574 -74.42970276]
[-60.59521866 -59.53934860]
[-63.57078552 -44.83023071]
[-67.63725281 -30.38460541]
[-72.77187347 -16.28326225]
[-78.94594574 -2.60506463]
[-65.77346802 4.57030153]
[-52.60099030 11.74566841]
[-37.72314835 11.03923035]
[-29.30551720 24.43527603]
[-16.13304138 31.61064339]
[-2.96056557 38.78601074]
[10.21191025 45.96137619]
[23.38438606 53.13674164]
[36.55686188 60.31210709]
[49.88629150 67.19152069]
[63.36602402 73.77154541]
[76.84575653 80.35157776]
[90.32549286 86.93160248]
[107.02365875 85.33551025]
[116.24660492 99.34670258]
[129.82281494 105.72530365]
[143.39901733 112.10391235]
[157.02233887 118.38127136]
[170.69200134 124.55704498]
[184.36167908 130.73280334]
[198.03134155 136.90858459]
[205.23872375 123.74512482]
[213.43260193 111.17201996]
[222.56491089 99.26303864]
[232.58204651 88.08808136]
[243.42523193 77.71272278]
[255.03083801 68.19785309]
[267.33074951 59.59930801]
[280.25277710 51.96754837]
[293.72109985 45.34735870]
[307.65667725 39.77758789]
[321.97775269 35.29092789]
[336.60021973 31.91370392]
[351.43832397 29.66573715]
[366.40499878 28.56022072]
[381.41235352 28.60363960]
[396.37234497 29.79574013]
[411.19720459 32.12952423]
[425.79989624 35.59130096]
[440.09475708 40.16075516]
[453.99786377 45.81106567]
[467.42767334 52.50907516]
[480.30532837 60.21548080]
[492.55526733 68.88505554]
[504.10562134 78.46691895]
[514.88861084 88.90484619]
[524.84088135 100.13757324]
[533.90417480 112.09919739]
[542.02514648 124.71950531]
[549.15625000 137.92443848]
[555.25555420 151.63652039]
[560.28735352 165.77525330]
[564.22204590 180.25769043]
[567.03656006 194.99884033]
[568.71435547 209.91217041]
[569.24566650 224.91018677]
[568.62731934 239.90486145]
[566.86291504 254.80821228]
[563.96289062 269.53277588]
[559.94421387 283.99212646]
[554.83044434 298.10140991]
[548.65161133 311.77783203]
[541.44396973 324.94116211]
[533.24987793 337.51409912]
[524.11730957 349.42291260]
[514.09997559 360.59768677]
[503.25659180 370.97283936]
[491.65081787 380.48748779]
[479.35073853 389.08578491]
[466.42855835 396.71731567]
[452.96011353 403.33724976]
[439.02441406 408.90673828]
[424.70327759 413.39312744]
[410.08071899 416.77008057]
[395.24258423 419.01776123]
[380.27590942 420.12301636]
[365.26855469 420.07931519]
[350.30856323 418.88693237]
[335.48376465 416.55285645]
[320.88113403 413.09078979]
[306.58636475 408.52108765]
[292.68334961 402.87051392]
[279.25369263 396.17224121]
[266.37615967 388.46557617]
[254.12638855 379.79577637]
[242.57621765 370.21368408]
[231.79344177 359.77557373]
[221.84133911 348.54263306]
[212.77832031 336.58087158]
[204.65756226 323.96038818]
[197.52673340 310.75531006]
[191.42767334 297.04312134]
[186.39616394 282.90429688]
[182.46174622 268.42178345]
[179.64750671 253.68058777]
[177.96995544 238.76722717]
[177.43893433 223.76919556]
[178.05758667 208.77452087]
[179.82223511 193.87121582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[5 129]
[7 128]
[8 127]
[9 126]
[12 124]
[13 123]
[14 122]
[15 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[26 113]
[27 112]
[28 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
