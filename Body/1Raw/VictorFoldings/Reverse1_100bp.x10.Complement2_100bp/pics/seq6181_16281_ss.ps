%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[15.33251095 597.75476074]
[7.37825060 610.56072998]
[-3.41003680 621.09051514]
[-16.40513420 628.73193359]
[-30.85152435 633.04064941]
[-45.90930939 633.76623535]
[-60.70305634 630.86651611]
[-74.37267303 624.51000977]
[-86.12342072 615.06628418]
[-95.27213287 603.08447266]
[-101.28691101 589.26110840]
[-103.81806946 574.39984131]
[-102.71844482 559.36474609]
[-98.05197144 545.02990723]
[-90.08994293 532.22875977]
[-79.29527283 521.70550537]
[-66.29554749 514.07202148]
[-51.84654999 509.77200317]
[-36.78832626 509.05554199]
[-33.90305328 494.33566284]
[-31.12744141 479.59469604]
[-36.47968674 465.69494629]
[-26.41299248 453.48953247]
[-23.74719620 438.72833252]
[-21.08140182 423.96710205]
[-18.41560555 409.20587158]
[-15.74981022 394.44467163]
[-25.10263824 406.17175293]
[-37.72099304 414.28207397]
[-52.27323532 417.91967773]
[-67.22362518 416.70074463]
[-80.99441528 410.75387573]
[-92.13233948 400.70666504]
[-99.46199036 387.61938477]
[-102.20985413 372.87322998]
[-100.08592987 358.02435303]
[-93.31437683 344.63983154]
[-82.60979462 334.13211060]
[-69.10188293 327.61013794]
[-54.21614838 325.76217651]
[-39.52352905 328.78323364]
[-26.57456398 336.35452271]
[-16.73579216 347.67700195]
[-11.04552174 361.55578613]
[-10.10428047 376.52642822]
[-3.82691979 362.90310669]
[2.45044088 349.27978516]
[8.72780132 335.65646362]
[2.61837196 324.31167603]
[4.18199253 311.32562256]
[13.07025623 301.46615601]
[26.20470047 298.48272705]
[32.68419647 284.95437622]
[39.16369247 271.42602539]
[45.64318848 257.89767456]
[45.69744110 250.50721741]
[52.32118607 244.21725464]
[59.00138092 230.78686523]
[65.68157196 217.35649109]
[72.36177063 203.92611694]
[79.04196167 190.49574280]
[83.33609009 176.12353516]
[85.11855316 161.22981262]
[86.90101624 146.33609009]
[88.68348694 131.44238281]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[82.20983124 90.06427002]
[67.45809174 87.34651184]
[58.83557892 75.07246399]
[61.28166199 60.27325439]
[73.39511108 51.42653656]
[88.23679352 53.60012054]
[97.30447388 65.54795837]
[100.40858459 50.87265396]
[103.51269531 36.19735336]
[106.61680603 21.52205086]
[109.61157990 6.82404661]
[112.49684906 -7.89584446]
[115.38212585 -22.61573601]
[118.26739502 -37.33562851]
[120.71312714 -52.13489914]
[122.71714020 -67.00042725]
[124.72115326 -81.86595154]
[126.28167725 -96.78456116]
[127.39732361 -111.74301147]
[128.51296997 -126.70146942]
[121.82350922 -141.03889465]
[130.48599243 -153.15544128]
[123.79653168 -167.49285889]
[132.45901489 -179.60940552]
[133.46327209 -194.57574463]
[134.35609436 -209.54914856]
[135.24890137 -224.52256775]
[120.92945862 -229.27816772]
[108.32930756 -237.57868958]
[98.30755615 -248.85818481]
[91.54750824 -262.34759521]
[88.51007080 -277.12719727]
[89.40233612 -292.18927002]
[94.16347504 -306.50686646]
[102.46886444 -319.10382080]
[113.75222015 -329.12121582]
[127.24423981 -335.87606812]
[142.02500916 -338.90777588]
[157.08674622 -338.00970459]
[171.40251160 -333.24304199]
[183.99624634 -324.93280029]
[194.00927734 -313.64556885]
[200.75891113 -300.15093994]
[203.78494263 -285.36898804]
[202.88104248 -270.30761719]
[198.10884094 -255.99368286]
[189.79373169 -243.40316772]
[178.50263977 -233.39448547]
[165.00541687 -226.65007019]
[150.22230530 -223.62974548]
[149.32949829 -208.65634155]
[148.43667603 -193.68293762]
[151.17648315 -186.81887817]
[147.41746521 -178.49375916]
[154.18672180 -165.22625732]
[145.44444275 -152.03977966]
[152.21369934 -138.77229309]
[143.47142029 -125.58581543]
[142.35577393 -110.62736511]
[141.24012756 -95.66890717]
[142.96508789 -93.45923615]
[143.91870117 -90.43314362]
[143.78561401 -86.88100433]
[142.36134338 -83.20188141]
[139.58668518 -79.86193848]
[137.58267212 -64.99641418]
[135.57865906 -50.13088608]
[137.16903687 -47.82245636]
[137.94084167 -44.74497223]
[137.59657288 -41.20705032]
[135.95582581 -37.61922455]
[132.98728943 -34.45035553]
[130.10202026 -19.73046303]
[127.21674347 -5.01057196]
[124.33146667 9.70931911]
[126.12966919 16.87788200]
[121.29210663 24.62616158]
[118.18799591 39.30146408]
[115.08388519 53.97676468]
[111.97977448 68.65206909]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[103.57720184 133.22483826]
[101.79473877 148.11856079]
[100.01226807 163.01228333]
[98.22980499 177.90599060]
[106.46074677 165.36599731]
[117.51719666 155.22918701]
[130.72305298 148.11544800]
[145.27076721 144.45976257]
[160.27075195 144.48570251]
[174.80572510 148.19166565]
[187.98690796 155.35104370]
[199.00822449 165.52603149]
[207.19575500 178.09442139]
[212.04879761 192.28765869]
[213.27061462 207.23782349]
[210.78646851 222.03068542]
[204.74827576 235.76168823]
[195.52526855 247.59114075]
[183.68144226 256.79571533]
[169.94105530 262.81250000]
[155.14433289 265.27355957]
[140.19609070 264.02847290]
[126.01043701 259.15328979]
[113.45482635 250.94619751]
[103.29702759 239.90902710]
[96.15820312 226.71670532]
[92.47489929 212.17596436]
[92.47234344 197.17593384]
[85.79214478 210.60630798]
[79.11195374 224.03668213]
[72.43175507 237.46707153]
[65.75156403 250.89744568]
[59.17153549 264.37716675]
[52.69203949 277.90551758]
[46.21254349 291.43386841]
[39.73304749 304.96221924]
[45.84701920 321.35241699]
[38.36279678 336.78942871]
[22.35111809 341.93383789]
[16.07375717 355.55715942]
[9.79639626 369.18045044]
[3.51903558 382.80377197]
[-0.98859298 397.11047363]
[-3.65438843 411.87167358]
[-6.32018375 426.63290405]
[-8.98597908 441.39410400]
[-11.65177536 456.15533447]
[-6.49020624 471.11090088]
[-16.36622429 482.26049805]
[-14.81175900 491.26168823]
[-19.18316078 497.22091675]
[-22.06843376 511.94082642]
[-8.39496899 518.28906250]
[3.36150408 527.72558594]
[12.51747799 539.70190430]
[18.54063797 553.52160645]
[21.08080482 568.38134766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 202]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[45 195]
[46 194]
[47 193]
[48 192]
[52 189]
[53 188]
[54 187]
[55 186]
[57 185]
[58 184]
[59 183]
[60 182]
[61 181]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[69 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 144]
[81 143]
[82 142]
[83 141]
[84 136]
[85 135]
[86 134]
[87 129]
[88 128]
[89 127]
[91 125]
[93 123]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
