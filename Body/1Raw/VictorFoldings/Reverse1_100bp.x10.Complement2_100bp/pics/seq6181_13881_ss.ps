%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[79.01487732 586.47967529]
[65.19707489 580.56982422]
[52.41447449 572.66650391]
[40.95264053 562.94622803]
[31.06763458 551.62609863]
[22.98029518 538.95916748]
[16.87129402 525.22821045]
[12.87710762 510.74017334]
[11.08697033 495.81860352]
[11.54087257 480.79690552]
[14.22867393 466.01065063]
[19.09033012 451.79016113]
[26.01722527 438.45315552]
[34.85461426 426.29757690]
[45.40506744 415.59497070]
[57.43288040 406.58444214]
[70.66934967 399.46731567]
[84.81876373 394.40255737]
[99.56501770 391.50335693]
[98.89523315 376.51831055]
[98.22544861 361.53326416]
[97.55566406 346.54824829]
[96.88587952 331.56320190]
[87.72457886 326.93267822]
[81.26148224 318.85409546]
[78.71514130 308.74325562]
[80.61001587 298.40820312]
[86.67012024 289.72592163]
[95.85694122 284.30133057]
[95.85694122 269.30133057]
[95.85694122 254.30133057]
[95.85694122 239.30133057]
[88.11963654 226.57406616]
[95.85694122 212.77389526]
[95.85694122 197.77389526]
[95.85694122 182.77389526]
[95.52196503 167.77763367]
[94.85218048 152.79260254]
[94.18239594 137.80755615]
[93.51261139 122.82251740]
[92.84282684 107.83747864]
[91.28230286 92.91887665]
[88.83657074 78.11960602]
[86.28073883 63.33895111]
[83.61494446 48.57773209]
[80.94915009 33.81651306]
[76.34442902 25.92763901]
[78.35526276 18.81579399]
[75.90953827 4.01652241]
[73.46380615 -10.78274822]
[71.01808167 -25.58201981]
[68.02330780 -40.28002167]
[64.48363495 -54.85639954]
[60.94396210 -69.43277740]
[57.64844131 -54.79926682]
[50.99076462 -41.35771561]
[41.34745789 -29.86829948]
[29.26389503 -20.98080826]
[15.42346096 -15.19786835]
[0.60889983 -12.84653378]
[-14.34195328 -14.05978394]
[-28.58355713 -18.76900482]
[-41.31047821 -26.70786476]
[-51.80294418 -37.42738342]
[-59.46755981 -50.32132339]
[-63.87085342 -64.66046906]
[-64.76380157 -79.63386536]
[-62.09589005 -94.39469910]
[-56.01801682 -108.10817719]
[-46.87390518 -119.99872589]
[-35.18070602 -129.39389038]
[-21.59972191 -135.76231384]
[-6.89902592 -138.74385071]
[8.08998775 -138.16986084]
[22.51961708 -134.07281494]
[35.57379913 -126.68441772]
[46.51425171 -116.42252350]
[54.72224045 -103.86749268]
[59.73380280 -89.72831726]
[61.51626968 -104.62203217]
[63.29873657 -119.51575470]
[65.08119965 -134.40946960]
[66.86367035 -149.30319214]
[68.64613342 -164.19689941]
[70.42859650 -179.09062195]
[55.85593796 -182.72940063]
[41.85426331 -188.16596985]
[28.64440155 -195.31460571]
[16.43469429 -204.06253052]
[5.41770601 -214.27180481]
[-4.23281097 -225.78140259]
[-12.36465359 -238.40979004]
[-18.84957123 -251.95782471]
[-23.58528709 -266.21182251]
[-26.49711037 -280.94696045]
[-27.53912163 -295.93087769]
[-26.69488335 -310.92721558]
[-23.97771072 -325.69949341]
[-19.43045807 -340.01470947]
[-13.12484360 -353.64712524]
[-5.16031408 -366.38171387]
[4.33751774 -378.01760864]
[15.21885777 -388.37133789]
[27.31209183 -397.27960205]
[40.42649078 -404.60186768]
[54.35522461 -410.22268677]
[68.87860870 -414.05340576]
[83.76760101 -416.03359985]
[98.78737640 -416.13204956]
[113.70104218 -414.34719849]
[128.27340698 -410.70721436]
[142.27461243 -405.26943970]
[155.48387146 -398.11972046]
[167.69284058 -389.37075806]
[178.70896912 -379.16055298]
[188.35852051 -367.65014648]
[196.48930359 -355.02105713]
[202.97308350 -341.47250366]
[207.70759583 -327.21810913]
[210.61817932 -312.48272705]
[211.65893555 -297.49871826]
[210.81343079 -282.50244141]
[208.09501648 -267.73040771]
[203.54655457 -253.41554260]
[197.23979187 -239.78367615]
[189.27420044 -227.04977417]
[179.77537537 -215.41465759]
[168.89317322 -205.06184387]
[156.79917908 -196.15461731]
[143.68417358 -188.83343506]
[129.75495911 -183.21379089]
[115.23125458 -179.38429260]
[100.34209442 -177.40533447]
[85.32231903 -177.30815125]
[83.53984833 -162.41444397]
[81.75738525 -147.52072144]
[79.97492218 -132.62699890]
[78.19245148 -117.73328400]
[76.40998840 -102.83956909]
[74.62752533 -87.94585419]
[75.52033997 -72.97245026]
[79.06001282 -58.39607239]
[82.59968567 -43.81969452]
[92.51411438 -55.07598877]
[107.50286865 -54.49535370]
[116.51679993 -42.50581360]
[112.91117096 -27.94561386]
[99.34391785 -21.54798889]
[85.81735229 -28.02774620]
[88.26307678 -13.22847557]
[90.70880890 1.57079494]
[93.15453339 16.37006569]
[95.71036530 31.15071869]
[98.37615967 45.91193771]
[101.04195404 60.67315292]
[105.32415009 66.69682312]
[103.63584137 75.67387390]
[106.08157349 90.47314453]
[113.98350525 77.72326660]
[127.82649231 71.94643402]
[142.44743347 75.29726410]
[152.39308167 86.52597809]
[153.95396423 101.44454193]
[146.54789734 114.48870850]
[132.93716431 120.79331970]
[118.19824219 118.00691223]
[107.82786560 107.16769409]
[108.49765015 122.15273285]
[109.16743469 137.13777161]
[109.83721924 152.12280273]
[110.50700378 167.10784912]
[113.31767273 171.50639343]
[114.08351135 176.08534241]
[113.07820892 180.03558350]
[110.85694122 182.77389526]
[110.85694122 197.77389526]
[110.85694122 212.77389526]
[118.59423828 226.57406616]
[110.85694122 239.30133057]
[110.85694122 254.30133057]
[110.85694122 269.30133057]
[110.85694122 284.30133057]
[125.79702759 297.73538208]
[126.03693390 317.52035522]
[111.87091827 330.89340210]
[112.54070282 345.87844849]
[113.21048737 360.86349487]
[113.88027191 375.84854126]
[114.55005646 390.83355713]
[129.49617004 392.40563965]
[144.04101562 396.18783569]
[157.85966492 402.09570312]
[170.64338684 409.99719238]
[182.10661316 419.71585083]
[191.99322510 431.03454590]
[200.08236694 443.70037842]
[206.19332886 457.43041992]
[210.18957520 471.91790771]
[211.98184204 486.83923340]
[211.53007507 501.86099243]
[208.84437561 516.64764404]
[203.98475647 530.86877441]
[197.05975342 544.20678711]
[188.22409058 556.36364746]
[177.67517090 567.06774902]
[165.64863586 576.07995605]
[152.41319275 583.19897461]
[138.26449585 588.26574707]
[123.51864624 591.16705322]
[108.50507355 591.83813477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[29 182]
[30 181]
[31 180]
[32 179]
[34 177]
[35 176]
[36 175]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[42 158]
[43 157]
[44 155]
[45 154]
[46 153]
[48 152]
[49 151]
[50 150]
[51 149]
[52 143]
[53 142]
[54 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
