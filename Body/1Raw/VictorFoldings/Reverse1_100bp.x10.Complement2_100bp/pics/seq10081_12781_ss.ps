%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[61.87364578 528.22631836]
[53.88645935 540.94671631]
[44.36793137 552.56567383]
[33.46818161 562.90002441]
[21.35910988 571.78674316]
[8.23169804 579.08569336]
[-5.70701694 584.68170166]
[-20.23720169 588.48657227]
[-35.12969208 590.44024658]
[-50.14961624 590.51196289]
[-65.06008148 588.70056152]
[-79.62593842 585.03460693]
[-93.61745453 579.57196045]
[-106.81396484 572.39874268]
[-119.00734711 563.62805176]
[-130.00527954 553.39825439]
[-139.63432312 541.87066650]
[-147.74261475 529.22717285]
[-154.20227051 515.66705322]
[-158.91140747 501.40426636]
[-161.79576111 486.66372681]
[-162.80982971 471.67791748]
[-161.93763733 456.68316650]
[-159.19293213 441.91595459]
[-154.61900330 427.60925293]
[-148.28799438 413.98861694]
[-140.29972839 401.26889038]
[-130.78022766 389.65072632]
[-119.87960815 379.31729126]
[-107.76979065 370.43161011]
[-94.64176178 363.13378906]
[-80.70257568 357.53894043]
[-66.17207336 353.73529053]
[-51.27941513 351.78283691]
[-36.25948334 351.71240234]
[-21.34916878 353.52505493]
[-6.78362226 357.19223022]
[-1.32826519 343.21942139]
[4.12709188 329.24661255]
[9.58244896 315.27383423]
[-0.82026148 302.90872192]
[-3.58361268 286.89248657]
[2.13993359 271.58044434]
[14.87691021 261.18502808]
[31.21080971 258.61682129]
[36.45752716 244.56436157]
[41.70424652 230.51188660]
[46.95096207 216.45942688]
[52.19768143 202.40695190]
[47.46327591 191.27537537]
[51.71939468 179.52508545]
[63.19721222 173.64099121]
[68.65256500 159.66819763]
[74.10792542 145.69540405]
[62.28643417 136.55346680]
[53.51819229 124.45220947]
[48.51306152 110.37133026]
[47.67625809 95.45079803]
[51.07552338 80.89856720]
[58.43565750 67.89276123]
[69.16079712 57.48632431]
[82.38263702 50.52174377]
[97.03076935 47.56286621]
[111.91927338 48.84924316]
[117.37463379 34.87644577]
[122.82999420 20.90364647]
[111.17480469 30.34592628]
[96.91821289 35.00957489]
[81.93592072 34.28101349]
[68.19909668 28.25608826]
[57.51506042 17.72748947]
[51.28948593 4.08043146]
[50.34144592 -10.88957977]
[54.79567719 -25.21298027]
[64.06614685 -37.00528336]
[76.93316650 -44.71500778]
[91.70385742 -47.32780457]
[106.43487549 -44.49991608]
[119.18811798 -36.60340118]
[128.28565979 -24.67718315]
[132.53056335 -10.29035759]
[131.36373901 4.66653824]
[139.77836609 -7.75095701]
[148.19297791 -20.16845322]
[156.60760498 -32.58594894]
[150.89396667 -42.52418900]
[149.30876160 -53.82585526]
[152.04309082 -64.85289001]
[158.66476440 -74.02143860]
[168.18609619 -80.02935028]
[179.21112061 -82.04104614]
[190.14018250 -79.80355835]
[199.10087585 -91.83293152]
[208.06156921 -103.86231232]
[217.02226257 -115.89169312]
[225.98295593 -127.92106628]
[234.94366455 -139.95043945]
[223.88902283 -150.10913086]
[213.93751526 -161.35064697]
[205.19464111 -173.55581665]
[197.75306702 -186.59526062]
[191.69168091 -200.33074951]
[187.07475281 -214.61668396]
[183.95120239 -229.30162048]
[182.35414124 -244.22990417]
[182.30052185 -259.24325562]
[183.79089355 -274.18255615]
[186.80946350 -288.88943481]
[191.32423401 -303.20800781]
[197.28733826 -316.98645020]
[204.63557434 -330.07870483]
[213.29103088 -342.34600830]
[223.16198730 -353.65832520]
[234.14376831 -363.89572144]
[246.11997986 -372.94970703]
[258.96368408 -380.72424316]
[272.53869629 -387.13696289]
[286.70111084 -392.11990356]
[301.30084229 -395.62017822]
[316.18310547 -397.60073853]
[331.19012451 -398.04055786]
[346.16281128 -396.93499756]
[360.94247437 -394.29577637]
[375.37243652 -390.15084839]
[389.29971313 -384.54415894]
[402.57669067 -377.53515625]
[415.06262207 -369.19815063]
[426.62512207 -359.62145996]
[437.14163208 -348.90667725]
[446.50070190 -337.16732788]
[454.60308838 -324.52789307]
[461.36288452 -311.12234497]
[466.70849609 -297.09277344]
[470.58322144 -282.58795166]
[472.94595337 -267.76156616]
[473.77169800 -252.77082825]
[473.05166626 -237.77464294]
[470.79351807 -222.93197632]
[467.02117920 -208.40016174]
[461.77465820 -194.33325195]
[455.10952759 -180.88037109]
[447.09646606 -168.18411255]
[437.82040405 -156.37907410]
[427.37969971 -145.59039307]
[415.88500977 -135.93243408]
[403.45819092 -127.50758362]
[390.23095703 -120.40514374]
[376.34356689 -114.70040131]
[361.94320679 -110.45382690]
[347.18249512 -107.71044922]
[332.21798706 -106.49934387]
[317.20822144 -106.83334351]
[302.31237793 -108.70891571]
[287.68832397 -112.10617065]
[273.49111938 -116.98910522]
[259.87121582 -123.30595398]
[246.97303772 -130.98974609]
[238.01234436 -118.96037292]
[229.05165100 -106.93099213]
[220.09094238 -94.90161896]
[211.13024902 -82.87223816]
[202.16955566 -70.84285736]
[208.75613403 -53.35258102]
[203.42781067 -35.28222656]
[188.16407776 -23.98496628]
[169.02510071 -24.17132950]
[160.61047363 -11.75383377]
[152.19586182 0.66366148]
[143.78123474 13.08115673]
[136.80279541 26.35900307]
[131.34742737 40.33180237]
[125.89207458 54.30459976]
[137.71356201 63.44652939]
[146.48181152 75.54779053]
[151.48693848 89.62866974]
[152.32374573 104.54920197]
[148.92446899 119.10143280]
[141.56434631 132.10723877]
[130.83920288 142.51367188]
[117.61736298 149.47825623]
[102.96923065 152.43713379]
[88.08072662 151.15075684]
[82.62536621 165.12355042]
[77.17000580 179.09635925]
[80.36846924 197.23060608]
[66.25015259 207.65367126]
[61.00343323 221.70614624]
[55.75671768 235.75860596]
[50.50999832 249.81108093]
[45.26327896 263.86355591]
[54.71353149 274.17642212]
[58.77905655 287.49136353]
[56.72098160 301.19329834]
[48.99732208 312.61669922]
[37.16259766 319.56420898]
[23.55524635 320.72918701]
[18.09988976 334.70196533]
[12.64453220 348.67477417]
[7.18917561 362.64758301]
[20.38628960 369.81970215]
[32.58040619 378.58935547]
[43.57920456 388.81820679]
[53.20922089 400.34497070]
[61.31857300 412.98782349]
[67.77936554 426.54736328]
[72.48970032 440.80975342]
[75.37529755 455.55007935]
[76.39063263 470.53579712]
[75.51969910 485.53063965]
[72.77623749 500.29803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 199]
[38 198]
[39 197]
[40 196]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[52 184]
[53 183]
[54 182]
[64 172]
[65 171]
[66 170]
[82 169]
[83 168]
[84 167]
[85 166]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
