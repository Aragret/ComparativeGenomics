%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[192.71296692 410.10079956]
[203.33799744 399.46044922]
[215.60853577 390.76895142]
[209.12904358 377.24060059]
[202.64953613 363.71228027]
[196.17004395 350.18392944]
[184.86886597 345.87002563]
[179.35997009 334.65234375]
[183.08616638 322.30413818]
[176.80880737 308.68081665]
[161.96449280 307.45120239]
[149.64682007 298.89953613]
[143.22096252 285.24029541]
[144.50329590 270.09921265]
[153.24920654 257.55105591]
[146.97184753 243.92774963]
[140.69447327 230.30442810]
[138.11444092 229.20829773]
[135.81312561 227.02412415]
[134.20715332 223.85298157]
[133.66885376 219.94468689]
[134.47604370 215.67825317]
[129.02067566 201.70545959]
[118.07165527 196.56294250]
[113.41235352 184.96662903]
[118.04664612 172.92976379]
[112.79992676 158.87728882]
[107.55321503 144.82482910]
[103.65721893 142.06251526]
[101.45513153 136.82345581]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[87.42245483 110.30458069]
[83.75758362 99.24972534]
[88.42597961 88.57979584]
[83.81196594 74.30706024]
[79.19795990 60.03432846]
[73.53517151 46.14430237]
[66.85498047 32.71392441]
[60.17478180 19.28355026]
[53.49459076 5.85317373]
[36.98214340 4.99821329]
[23.23279381 -4.01571846]
[15.94732189 -18.64920044]
[17.02943039 -34.86600876]
[26.08929062 -48.24627304]
[19.20987701 -61.57570267]
[3.93672419 -62.39913559]
[-8.78959179 -70.70201111]
[-15.60597801 -84.17060852]
[-14.77115059 -99.14255524]
[-6.60929537 -111.60247803]
[-13.48870754 -124.93190765]
[-20.46715927 -138.20974731]
[-27.54426575 -151.43528748]
[-34.91495514 -164.49946594]
[-42.57555389 -177.39579773]
[-56.27557373 -185.30906677]
[-56.12329102 -200.20289612]
[-63.78388977 -213.09922791]
[-71.44448853 -225.99555969]
[-79.10507965 -238.89187622]
[-86.76567841 -251.78820801]
[-94.42627716 -264.68453979]
[-108.23169708 -258.76290894]
[-122.69194794 -254.69400024]
[-137.55960083 -252.54739380]
[-152.58024597 -252.35981750]
[-167.49687195 -254.13449097]
[-182.05421448 -257.84106445]
[-196.00318909 -263.41607666]
[-209.10513306 -270.76419067]
[-221.13581848 -279.75958252]
[-231.88940430 -290.24841309]
[-241.18186951 -302.05117798]
[-248.85423279 -314.96588135]
[-254.77517700 -328.77160645]
[-258.84341431 -343.23202515]
[-260.98931885 -358.09979248]
[-261.17617798 -373.12045288]
[-259.40078735 -388.03698730]
[-255.69352722 -402.59414673]
[-250.11782837 -416.54287720]
[-242.76911926 -429.64443970]
[-233.77313232 -441.67471313]
[-223.28379822 -452.42779541]
[-211.48060608 -461.71969604]
[-198.56552124 -469.39144897]
[-184.75953674 -475.31173706]
[-170.29888916 -479.37930298]
[-155.43103027 -481.52447510]
[-140.41036987 -481.71063232]
[-125.49391937 -479.93453979]
[-110.93692780 -476.22656250]
[-96.98847961 -470.65023804]
[-83.88724518 -463.30087280]
[-71.85741425 -454.30432129]
[-61.10482788 -443.81448364]
[-51.81348038 -432.01083374]
[-44.14235306 -419.09539795]
[-38.22271347 -405.28912354]
[-34.15585709 -390.82827759]
[-32.01136780 -375.96032715]
[-31.82594109 -360.93966675]
[-33.60275269 -346.02328491]
[-37.31139755 -331.46646118]
[-42.88841248 -317.51828003]
[-50.23837280 -304.41741943]
[-59.23551178 -292.38800049]
[-69.72586823 -281.63592529]
[-81.52995300 -272.34512329]
[-73.86935425 -259.44879150]
[-66.20875549 -246.55247498]
[-58.54816055 -233.65614319]
[-50.88756180 -220.75982666]
[-43.22696304 -207.86349487]
[-30.07488060 -200.87265015]
[-29.67922592 -185.05639648]
[-22.01862907 -172.16006470]
[-18.71041298 -170.94020081]
[-15.82868481 -168.05737305]
[-14.14861298 -163.72949219]
[-14.31873798 -158.51239014]
[-7.24163246 -145.28686523]
[-1.31417441 -140.87245178]
[-0.15927865 -131.81132507]
[6.72013378 -118.48188782]
[21.60454559 -117.91630554]
[34.29179382 -109.92320251]
[41.32115936 -96.56452179]
[40.71619034 -81.38127899]
[32.53930664 -68.45511627]
[39.41872025 -55.12568283]
[53.07342529 -55.38268280]
[65.56671906 -49.70409012]
[74.43689728 -39.14620209]
[77.90927887 -25.73274422]
[75.25103760 -12.06709862]
[66.92496490 -0.82702106]
[73.60515594 12.60335541]
[80.28535461 26.03373146]
[86.96554565 39.46410751]
[89.49507141 24.67892838]
[99.00204468 13.07645226]
[113.00137329 7.68954039]
[127.83366394 9.92631721]
[139.62179565 19.20209503]
[145.28436279 33.09220886]
[143.34120178 47.96581268]
[134.30024719 59.93498611]
[120.52478027 65.87101746]
[105.61567688 64.22223663]
[93.47069550 55.42031860]
[98.08470154 69.69305420]
[102.69870758 83.96578979]
[115.43373108 94.88345337]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[121.60568237 139.57810974]
[126.85240173 153.63056946]
[132.09912109 167.68304443]
[146.57075500 179.06958008]
[142.99348450 196.25009155]
[148.44883728 210.22290039]
[154.31779480 224.02706909]
[160.59515381 237.65039062]
[166.87251282 251.27371216]
[182.09367371 252.77830505]
[194.43655396 261.64114380]
[200.64472961 275.40069580]
[199.14221191 290.32043457]
[190.43212891 302.40347290]
[196.70948792 316.02679443]
[211.98793030 326.30545044]
[209.69839478 343.70443726]
[216.17788696 357.23278809]
[222.65737915 370.76110840]
[229.13687134 384.28945923]
[243.60034180 380.17654419]
[258.55087280 378.56726074]
[273.55831909 379.50796509]
[288.19085693 382.97158813]
[302.02749634 388.85842896]
[314.67016602 396.99914551]
[325.75503540 407.15951538]
[334.96325684 419.04721069]
[342.02981567 432.32015991]
[346.75143433 446.59652710]
[348.99227905 461.46551514]
[348.68780518 476.49932861]
[345.84686279 491.26538086]
[340.55111694 505.33889771]
[332.95297241 518.31488037]
[323.27105713 529.82000732]
[311.78390503 539.52325439]
[298.82205200 547.14550781]
[284.75839233 552.46734619]
[269.99761963 555.33569336]
[254.96440125 555.66802979]
[240.09129333 553.45483398]
[225.80619812 548.75970459]
[212.52014160 541.71777344]
[200.61538696 532.53167725]
[190.43446350 521.46563721]
[182.27027893 508.83813477]
[176.35775757 495.01242065]
[172.86700439 480.38632202]
[171.89845276 465.38067627]
[173.47996521 450.42718506]
[177.56604004 435.95611572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[9 173]
[10 172]
[15 167]
[16 166]
[17 165]
[22 164]
[23 163]
[26 161]
[27 160]
[28 159]
[31 158]
[32 157]
[35 155]
[36 154]
[37 153]
[38 142]
[39 141]
[40 140]
[41 139]
[46 133]
[47 132]
[52 127]
[53 126]
[54 124]
[55 123]
[56 119]
[57 118]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
