%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[52.20957565 816.95111084]
[37.21955109 817.60845947]
[22.21691132 817.37664795]
[7.25435257 816.25646973]
[-7.61556721 814.25189209]
[-22.34061623 811.36987305]
[-36.86907578 807.62060547]
[-51.14990616 803.01727295]
[-65.13294983 797.57604980]
[-78.76909637 791.31591797]
[-92.01043701 784.25903320]
[-104.81046295 776.43011475]
[-117.12422180 767.85662842]
[-128.90844727 758.56872559]
[-140.12176514 748.59906006]
[-150.72477722 737.98260498]
[-160.68023682 726.75665283]
[-169.95317078 714.96069336]
[-178.51101685 702.63604736]
[-186.32371521 689.82611084]
[-193.36383057 676.57580566]
[-199.60661316 662.93176270]
[-205.03015137 648.94183350]
[-209.61538696 634.65515137]
[-213.34622192 620.12194824]
[-216.20953369 605.39331055]
[-218.19529724 590.52081299]
[-219.29649353 575.55688477]
[-219.50929260 560.55395508]
[-218.83293152 545.56475830]
[-217.26979065 530.64196777]
[-214.82534790 515.83801270]
[-211.50820923 501.20483398]
[-207.33001709 486.79388428]
[-202.30543518 472.65576172]
[-196.45213318 458.84011841]
[-189.79066467 445.39550781]
[-182.34442139 432.36914062]
[-174.13955688 419.80676270]
[-165.20491028 407.75250244]
[-155.57183838 396.24871826]
[-145.27420044 385.33581543]
[-134.34814453 375.05212402]
[-122.83208466 365.43374634]
[-110.76643372 356.51449585]
[-98.19359589 348.32568359]
[-85.15773010 340.89605713]
[-71.70462036 334.25173950]
[-57.88152313 328.41607666]
[-43.73699570 323.40957642]
[-29.32071877 319.24975586]
[-14.68333149 315.95132446]
[0.12375283 313.52578735]
[15.04852200 311.98168945]
[30.03855324 311.32446289]
[45.04119110 311.55639648]
[60.00373840 312.67672729]
[62.00775528 297.81118774]
[64.01176453 282.94564819]
[66.01577759 268.08013916]
[63.88395309 263.80645752]
[64.41419220 258.14819336]
[68.30715942 252.80436707]
[70.75288391 238.00509644]
[73.19860840 223.20582581]
[75.64434052 208.40655518]
[78.09006500 193.60728455]
[80.53578949 178.80801392]
[82.87127686 163.99095154]
[85.09639740 149.15690613]
[87.32151031 134.32286072]
[89.54663086 119.48881531]
[91.77175140 104.65477753]
[89.68984985 99.84024811]
[90.45364380 94.20198822]
[94.29030609 89.41482544]
[96.95610046 74.65361023]
[99.62189484 59.89239120]
[102.28768921 45.13117218]
[91.03034210 55.04440689]
[76.21693420 57.40296936]
[62.43754959 51.47603226]
[53.96188354 39.10012054]
[53.41621780 24.11005020]
[60.96963120 11.15065289]
[74.28161621 4.23754025]
[89.22730255 5.51281595]
[101.17562103 14.58132172]
[106.42426300 28.63333893]
[111.03826904 14.36060524]
[104.09648895 0.41609275]
[108.97907257 -13.99276066]
[122.31581116 -20.52475166]
[126.92982483 -34.79748535]
[131.54383850 -49.07021713]
[136.15783691 -63.34295273]
[140.77185059 -77.61568451]
[127.39340973 -84.47232819]
[115.28817749 -93.38633728]
[104.76971436 -104.12682343]
[96.11047363 -116.41558838]
[89.53473663 -129.93431091]
[85.21285248 -144.33283997]
[83.25675201 -159.23818970]
[83.71710968 -174.26431274]
[86.58199310 -189.02197266]
[91.77720642 -203.12892151]
[99.16818237 -216.21974182]
[108.56346130 -227.95536804]
[119.71969604 -238.03181458]
[132.34791565 -246.18806458]
[146.12100220 -252.21286011]
[160.68220520 -255.95013428]
[175.65437317 -257.30310059]
[190.64967346 -256.23672485]
[205.27969360 -252.77857971]
[219.16548157 -247.01828003]
[231.94735718 -239.10502625]
[243.29425049 -229.24377441]
[252.91224670 -217.68997192]
[260.55221558 -204.74288940]
[266.01626587 -190.73786926]
[269.16284180 -176.03770447]
[269.91049194 -161.02313232]
[268.23977661 -146.08308411]
[264.19403076 -131.60455322]
[257.87805176 -117.96253967]
[249.45539856 -105.51042938]
[239.14425659 -94.57074738]
[227.21171570 -85.42687225]
[213.96684265 -78.31563568]
[199.75273132 -73.42124939]
[184.93754578 -70.87048340]
[169.90502930 -70.72940826]
[155.04458618 -73.00167847]
[150.43057251 -58.72894287]
[145.81655884 -44.45621109]
[141.20256042 -30.18347549]
[136.58854675 -15.91074276]
[143.57783508 -2.80786514]
[139.10189819 11.73244476]
[125.31100464 18.97461510]
[120.69699097 33.24734879]
[117.04890442 47.79697037]
[114.38311005 62.55818558]
[111.71731567 77.31940460]
[109.05152130 92.08061981]
[106.60578918 106.87989044]
[104.38067627 121.71393585]
[102.15555573 136.54797363]
[99.93044281 151.38201904]
[97.70532227 166.21606445]
[99.52709961 175.16699219]
[95.33506012 181.25373840]
[92.88933563 196.05300903]
[90.44361115 210.85227966]
[87.99787903 225.65155029]
[85.55215454 240.45082092]
[83.10643005 255.25009155]
[80.88130951 270.08413696]
[78.87729645 284.94967651]
[76.87328339 299.81518555]
[74.86927032 314.68072510]
[89.59434509 317.56259155]
[104.12283325 321.31170654]
[118.40370941 325.91494751]
[132.38679504 331.35607910]
[146.02299500 337.61602783]
[159.26440430 344.67282104]
[172.06449890 352.50164795]
[184.37832642 361.07501221]
[196.16264343 370.36279297]
[207.37603760 380.33236694]
[217.97914124 390.94873047]
[227.93469238 402.17459106]
[237.20774841 413.97052002]
[245.76570129 426.29504395]
[253.57850647 439.10491943]
[260.61874390 452.35513306]
[266.86163330 465.99917603]
[272.28530884 479.98904419]
[276.87066650 494.27566528]
[280.60162354 508.80883789]
[283.46505737 523.53747559]
[285.45095825 538.40991211]
[286.55227661 553.37390137]
[286.76522827 568.37683105]
[286.08898926 583.36596680]
[284.52597046 598.28881836]
[282.08166504 613.09277344]
[278.76464844 627.72595215]
[274.58657837 642.13696289]
[269.56213379 656.27514648]
[263.70895386 670.09082031]
[257.04757690 683.53552246]
[249.60145569 696.56195068]
[241.39671326 709.12438965]
[232.46215820 721.17871094]
[222.82919312 732.68255615]
[212.53164673 743.59558105]
[201.60569763 753.87939453]
[190.08970642 763.49786377]
[178.02413940 772.41723633]
[165.45138550 780.60614014]
[152.41557312 788.03588867]
[138.96252441 794.68029785]
[125.13948059 800.51605225]
[110.99499512 805.52270508]
[96.57875061 809.68261719]
[81.94139862 812.98126221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 163]
[58 162]
[59 161]
[60 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[76 147]
[77 146]
[78 145]
[79 144]
[89 143]
[90 142]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
