%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[262.66268921 565.65161133]
[260.43759155 550.81756592]
[258.21246338 535.98352051]
[255.98735046 521.14947510]
[253.32154846 506.38827515]
[250.21743774 491.71298218]
[247.11332703 477.03768921]
[236.90972900 466.18707275]
[241.62371826 451.08447266]
[238.51960754 436.40914917]
[233.79948425 422.17117310]
[227.52210999 408.54785156]
[221.24475098 394.92453003]
[210.00904846 390.44284058]
[204.66778564 379.14440918]
[208.57742310 366.85305786]
[202.99470520 362.01000977]
[202.51695251 352.88806152]
[196.64797974 339.08389282]
[190.77902222 325.27972412]
[184.91006470 311.47555542]
[179.04110718 297.67135620]
[173.17214966 283.86718750]
[167.30317688 270.06301880]
[154.79655457 266.96237183]
[146.23150635 257.07693481]
[144.90432739 243.86901855]
[151.52247620 232.13809204]
[145.85969543 218.24806213]
[139.88813782 204.48796082]
[133.61077881 190.86465454]
[127.33341217 177.24133301]
[121.05605316 163.61801147]
[114.77868652 149.99470520]
[98.63131714 152.11531067]
[82.61750793 149.15007019]
[68.30004120 141.38830566]
[57.07613373 129.58752441]
[50.04111862 114.89932251]
[47.88153076 98.75711060]
[50.80812454 82.73619843]
[58.53529358 68.40003204]
[70.30895996 57.14767456]
[63.62876129 43.71730042]
[50.55525208 34.80697632]
[51.81486511 19.96573067]
[38.74135208 11.05540752]
[40.00096512 -3.78584003]
[33.32077026 -17.21621704]
[26.64057541 -30.64659119]
[19.96038055 -44.07696915]
[4.38267469 -53.89616394]
[6.15316772 -71.35561371]
[-0.72624463 -84.68504333]
[-7.44290495 -90.87570190]
[-7.60718298 -98.26453400]
[-14.28737736 -111.69490814]
[-27.36088943 -120.60523224]
[-26.10127640 -135.44647217]
[-28.15717125 -120.58803558]
[-36.80739594 -108.33350372]
[-50.11947632 -101.42057037]
[-65.11945343 -101.39361572]
[-78.45629120 -108.25864410]
[-87.15051270 -120.48200226]
[-89.25980377 -135.33296204]
[-84.31295013 -149.49377441]
[-73.41507721 -159.80087280]
[-59.00080872 -163.95164490]
[-44.29032516 -161.01878357]
[-32.56997299 -151.65747070]
[-36.97097015 -165.99731445]
[-41.37197113 -180.33717346]
[-46.88150787 -187.62297058]
[-45.73003006 -194.92337036]
[-49.91703796 -209.32714844]
[-54.10404968 -223.73092651]
[-58.29106140 -238.13471985]
[-62.47807312 -252.53849792]
[-66.66508484 -266.94229126]
[-70.85209656 -281.34606934]
[-85.85603333 -280.13497925]
[-100.79658508 -281.96932983]
[-115.06194305 -286.77395630]
[-128.06794739 -294.35211182]
[-139.28202820 -304.39352417]
[-148.24494934 -316.48693848]
[-154.58969116 -330.13717651]
[-158.05645752 -344.78527832]
[-158.50326538 -359.83135986]
[-155.91183472 -374.65936279]
[-150.38825989 -388.66204834]
[-142.15876770 -401.26602173]
[-131.56030273 -411.95516968]
[-119.02690887 -420.29174805]
[-105.07179260 -425.93441772]
[-90.26641846 -428.65209961]
[-75.21705627 -428.33349609]
[-60.53995895 -424.99163818]
[-46.83615875 -418.76342773]
[-34.66680908 -409.90386963]
[-24.53023911 -398.77575684]
[-16.84153366 -385.83477783]
[-11.91554260 -371.61090088]
[-9.95398045 -356.68649292]
[-11.03717327 -341.67279053]
[-15.12076378 -327.18453979]
[-22.03753281 -313.81506348]
[-31.50424194 -302.11178589]
[-43.13323593 -292.55401611]
[-56.44831467 -285.53308105]
[-52.26130295 -271.12930298]
[-48.07429123 -256.72549438]
[-43.88727951 -242.32173157]
[-39.70026779 -227.91793823]
[-35.51325607 -213.51416016]
[-31.32624626 -199.11038208]
[-27.03212357 -184.73815918]
[-22.63112450 -170.39831543]
[-18.23012733 -156.05847168]
[-12.67090130 -142.12667847]
[-0.07520049 -134.17698669]
[-0.85700148 -118.37509918]
[5.82319307 -104.94472504]
[12.60318470 -91.56445312]
[19.48259735 -78.23502350]
[30.90721130 -74.25950623]
[36.74765396 -63.21083832]
[33.39075470 -50.75716400]
[40.07094955 -37.32678604]
[46.75114441 -23.89640999]
[53.43133926 -10.46603489]
[66.02703857 -2.51634312]
[65.24523926 13.28553486]
[77.84094238 21.23522758]
[77.05913544 37.03710556]
[83.73933411 50.46747971]
[97.12685394 47.94594574]
[110.71056366 48.97879410]
[123.56292725 53.49550247]
[134.80635071 61.18766403]
[143.67311096 71.53002930]
[149.55775452 83.81639862]
[152.05845642 97.20782471]
[151.00448608 110.78990936]
[146.46778870 123.63523102]
[138.75814819 134.86668396]
[128.40200806 143.71734619]
[134.67936707 157.34065247]
[140.95672607 170.96397400]
[147.23408508 184.58728027]
[153.51144409 198.21060181]
[157.77467346 201.22257996]
[160.21247864 205.17358398]
[160.77285767 209.21102905]
[159.74972534 212.58528137]
[165.41250610 226.47531128]
[181.65821838 232.96347046]
[188.05908203 248.88024902]
[181.10736084 264.19406128]
[186.97631836 277.99822998]
[192.84527588 291.80239868]
[198.71424866 305.60656738]
[204.58320618 319.41076660]
[210.45216370 333.21493530]
[216.32112122 347.01910400]
[222.29267883 360.77920532]
[237.41639709 371.28421021]
[234.86807251 388.64718628]
[241.14543152 402.27047729]
[247.42279053 415.89379883]
[248.70965576 400.94909668]
[255.24273682 387.44656372]
[266.16250610 377.16265869]
[280.03225708 371.45040894]
[295.02719116 371.06137085]
[309.17449951 376.04672241]
[320.61285400 385.75054932]
[327.83728027 398.89617920]
[329.89736938 413.75405884]
[326.52200317 428.36935425]
[318.15533447 440.81918335]
[305.89810181 449.46557617]
[291.36294556 453.17095947]
[276.46224976 451.44778442]
[263.15646362 444.52279663]
[253.19491577 433.30505371]
[256.29901123 447.98034668]
[266.72467041 459.88064575]
[261.78863525 473.93356323]
[264.89273071 488.60885620]
[267.99685669 503.28417969]
[271.01223755 506.40847778]
[272.70620728 509.97149658]
[273.10311890 513.50390625]
[272.37722778 516.59252930]
[270.82138062 518.92437744]
[273.04650879 533.75842285]
[275.27163696 548.59246826]
[277.49673462 563.42651367]
[291.97509766 568.38995361]
[302.47994995 579.52130127]
[306.59741211 594.26257324]
[303.38128662 609.22637939]
[293.57061768 620.97412109]
[279.41983032 626.80627441]
[264.18069458 625.38262939]
[251.35501099 617.03033447]
[243.89004517 603.66870117]
[243.50120544 588.36816406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 192]
[6 191]
[7 190]
[9 188]
[10 187]
[11 171]
[12 170]
[13 169]
[16 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[28 157]
[29 156]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[43 137]
[44 136]
[46 134]
[48 132]
[49 131]
[50 130]
[51 129]
[53 126]
[54 125]
[56 124]
[57 123]
[59 121]
[71 120]
[72 119]
[73 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
