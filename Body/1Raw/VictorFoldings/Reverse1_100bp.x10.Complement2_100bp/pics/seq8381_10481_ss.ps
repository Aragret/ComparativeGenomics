%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[5.35338306 567.08374023]
[-2.50382161 579.87396240]
[-11.50765038 591.88458252]
[-21.58128548 603.01324463]
[-32.63877869 613.16491699]
[-44.58578873 622.25299072]
[-57.32038879 630.20001221]
[-70.73392487 636.93804932]
[-84.71195984 642.40972900]
[-99.13523102 646.56835938]
[-113.88068390 649.37835693]
[-128.82250977 650.81585693]
[-143.83323669 650.86853027]
[-158.78479004 649.53594971]
[-173.54960632 646.82946777]
[-188.00170898 642.77221680]
[-202.01780701 637.39880371]
[-215.47830200 630.75500488]
[-228.26835632 622.89758301]
[-240.27885437 613.89355469]
[-251.40733337 603.81976318]
[-261.55880737 592.76208496]
[-270.64672852 580.81494141]
[-278.59350586 568.08020020]
[-285.33135986 554.66650391]
[-290.80279541 540.68841553]
[-294.96112061 526.26507568]
[-297.77090454 511.51956177]
[-299.20812988 496.57769775]
[-299.26055908 481.56698608]
[-297.92773438 466.61544800]
[-295.22103882 451.85067749]
[-291.16354370 437.39865112]
[-285.78985596 423.38265991]
[-279.14587402 409.92227173]
[-271.28823853 397.13232422]
[-262.28399658 385.12197876]
[-252.21000671 373.99368286]
[-241.15217590 363.84237671]
[-229.20486450 354.75466919]
[-216.47000122 346.80810547]
[-203.05622864 340.07049561]
[-189.07801819 334.59927368]
[-174.65460205 330.44116211]
[-159.90905762 327.63165283]
[-144.96717834 326.19464111]
[-129.95645142 326.14248657]
[-115.00494385 327.47555542]
[-100.24022675 330.18252563]
[-85.78825378 334.24026489]
[-71.77233887 339.61416626]
[-58.31206512 346.25836182]
[-50.46031189 333.47753906]
[-42.60855484 320.69668579]
[-42.53907394 305.80224609]
[-28.72275543 298.09381104]
[-20.87099838 285.31295776]
[-13.01924419 272.53213501]
[-5.16748810 259.75128174]
[2.68426728 246.97044373]
[10.44065857 234.13150024]
[10.28837585 219.23767090]
[23.98839569 211.32440186]
[31.64899445 198.42807007]
[39.30959320 185.53173828]
[46.97018814 172.63542175]
[54.63078690 159.73908997]
[55.34416580 152.38294983]
[62.50266266 146.70898438]
[70.35441589 133.92814636]
[78.20617676 121.14730835]
[86.05792999 108.36646271]
[84.03924561 96.89623260]
[90.20932007 87.01840973]
[101.40256500 83.80086517]
[109.44374084 71.13834381]
[117.48490906 58.47581863]
[102.86455536 61.82921982]
[89.45240784 55.11250305]
[83.38031769 41.39646530]
[87.42436218 26.95189285]
[99.73565674 18.38264847]
[114.68565369 19.60647583]
[125.43939972 30.06385803]
[127.08000946 44.97562408]
[136.39489746 33.21837234]
[145.70977783 21.46112061]
[148.21495056 5.83951092]
[162.18310547 0.66846502]
[171.49800110 -11.08878613]
[174.00317383 -26.71039581]
[187.97132874 -31.88144112]
[197.28620911 -43.63869095]
[206.60108948 -55.39594269]
[213.77645874 -68.56842041]
[218.60246277 -82.77087402]
[223.42845154 -96.97332764]
[228.25445557 -111.17578888]
[233.08044434 -125.37824249]
[219.89605713 -132.61309814]
[208.16841125 -142.02761841]
[198.25389099 -153.33572388]
[190.45378113 -166.19378662]
[185.00514221 -180.21102905]
[182.07351685 -194.96151733]
[181.74803162 -209.99697876]
[184.03854370 -224.86051941]
[188.87547302 -239.10043335]
[196.11181641 -252.28399658]
[205.52767944 -264.01058960]
[216.83691406 -273.92382812]
[229.69584656 -281.72247314]
[243.71371460 -287.16952515]
[258.46453857 -290.09945679]
[273.50003052 -290.42324829]
[288.36331177 -288.13104248]
[302.60266113 -283.29251099]
[315.78543091 -276.05468750]
[327.51092529 -266.63748169]
[337.42288208 -255.32713318]
[345.22009277 -242.46730042]
[350.66555786 -228.44882202]
[353.59381104 -213.69767761]
[353.91589355 -198.66213989]
[351.62200928 -183.79911804]
[346.78186035 -169.56030273]
[339.54251099 -156.37837219]
[330.12399292 -144.65393066]
[318.81253052 -134.74325562]
[305.95181274 -126.94752502]
[291.93270874 -121.50364685]
[277.18124390 -118.57704926]
[262.14566040 -118.25666809]
[247.28291321 -120.55224609]
[242.45690918 -106.34979248]
[237.63090515 -92.14733124]
[232.80491638 -77.94487762]
[227.97891235 -63.74242401]
[238.62672424 -74.30765533]
[251.54156494 -81.93701172]
[265.93368530 -86.16394043]
[280.92300415 -86.72997284]
[295.59289551 -83.60048676]
[309.04635620 -76.96685791]
[320.46063232 -67.23474121]
[329.13775635 -54.99924469]
[334.54714966 -41.00858307]
[336.35797119 -26.11828995]
[334.45953369 -11.23890972]
[328.96792603 2.71967602]
[320.21893311 14.90389442]
[308.74758911 24.56867599]
[295.25534058 31.12301636]
[280.56726074 34.16611481]
[265.58154297 33.51188278]
[251.21453857 29.20032883]
[238.34481812 21.49510574]
[227.75938416 10.86739063]
[220.10549927 -2.03292704]
[215.85124207 -16.41698837]
[215.25672913 -31.40520287]
[218.35835266 -46.08106232]
[209.04345703 -34.32381058]
[199.72857666 -22.56655884]
[197.88966370 -7.78590679]
[183.25524902 -1.77390349]
[173.94036865 9.98334789]
[172.10145569 24.76399994]
[157.46702576 30.77600288]
[148.15214539 42.53325272]
[138.83726501 54.29050446]
[130.14743042 66.51699066]
[122.10626221 79.17951965]
[114.06509399 91.84204102]
[113.79046631 108.61406708]
[98.83876801 116.21821594]
[90.98701477 128.99905396]
[83.13526154 141.77990723]
[75.28350830 154.56074524]
[67.52711487 167.39968872]
[59.86651611 180.29602051]
[52.20591736 193.19233704]
[44.54532242 206.08866882]
[36.88472366 218.98500061]
[36.48907089 234.80125427]
[23.33698463 241.79209900]
[21.64480972 250.76841736]
[15.46510983 254.82220459]
[7.61335421 267.60302734]
[-0.23840122 280.38388062]
[-8.09015656 293.16473389]
[-15.94191170 305.94555664]
[-16.57300377 321.75418091]
[-29.82771301 328.54843140]
[-37.67946625 341.32928467]
[-45.53122330 354.11013794]
[-33.52042389 363.11376953]
[-22.39162064 373.18719482]
[-12.23976135 384.24453735]
[-3.15146112 396.19137573]
[4.79574013 408.92584229]
[11.53403854 422.33926392]
[17.00594330 436.31723022]
[21.16477203 450.74041748]
[23.97503853 465.48583984]
[25.41276741 480.42764282]
[25.46569443 495.43835449]
[24.13336372 510.38992310]
[21.42714691 525.15478516]
[17.37013054 539.60699463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 196]
[53 195]
[54 194]
[56 192]
[57 191]
[58 190]
[59 189]
[60 188]
[61 186]
[63 184]
[64 183]
[65 182]
[66 181]
[67 180]
[69 179]
[70 178]
[71 177]
[72 176]
[75 174]
[76 173]
[77 172]
[85 171]
[86 170]
[87 169]
[89 167]
[90 166]
[92 164]
[93 163]
[94 162]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
