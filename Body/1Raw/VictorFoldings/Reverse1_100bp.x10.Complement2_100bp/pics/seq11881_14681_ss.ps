%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[185.30422974 537.08282471]
[191.67079163 523.43432617]
[200.82287598 511.47381592]
[212.33244324 501.76074219]
[225.66114807 494.74935913]
[221.68905640 480.28482056]
[217.71694946 465.82031250]
[213.74485779 451.35577393]
[202.91351318 441.13174438]
[206.72023010 425.77532959]
[202.74812317 411.31079102]
[198.77603149 396.84628296]
[194.26840210 382.53958130]
[182.70661926 373.14947510]
[185.36064148 357.55245972]
[180.32371521 343.42343140]
[175.28680420 329.29440308]
[161.32524109 318.66229248]
[164.79333496 300.57766724]
[159.54661560 286.52520752]
[147.84631348 277.30825806]
[150.26780701 261.67346191]
[145.02108765 247.62098694]
[139.77438354 233.56851196]
[134.48982239 228.40176392]
[134.55586243 219.26756287]
[129.51893616 205.13853455]
[124.48202515 191.00950623]
[119.44510651 176.88047791]
[114.40819550 162.75144958]
[100.05480194 164.38429260]
[85.69864655 162.77587891]
[72.06246185 158.00718689]
[59.83271408 150.31828308]
[49.62508011 140.09623718]
[41.95343781 127.85564423]
[37.20399475 114.21273804]
[35.61584473 99.85433197]
[37.26894760 85.50325775]
[42.08007431 71.88198090]
[49.80702591 59.67623520]
[60.06081009 49.50048065]
[72.32522583 41.86698532]
[67.49922943 27.66453171]
[52.36101532 26.61085320]
[38.81602097 19.85984039]
[28.91439629 8.46811199]
[24.14148903 -5.80798578]
[25.19508171 -20.78312492]
[31.88356209 -34.17751312]
[43.15984726 -43.96396637]
[38.33384705 -58.16642380]
[33.50785065 -72.36888123]
[28.68185234 -86.57133484]
[23.64493561 -100.70036316]
[18.39821815 -114.75283813]
[13.15149975 -128.80531311]
[7.90478182 -142.85777283]
[2.65806365 -156.91024780]
[-2.64385200 -142.87850952]
[-15.11715031 -134.54682922]
[-30.10959816 -135.02273560]
[-42.02938461 -144.12869263]
[-46.43072510 -158.46844482]
[-41.67202759 -172.69358826]
[-29.52816582 -181.49850464]
[-14.52850342 -181.59918213]
[-2.26683855 -172.95713806]
[-5.80651093 -187.53352356]
[-9.34618378 -202.10989380]
[-12.88585567 -216.68626404]
[-16.42552757 -231.26264954]
[-19.96520042 -245.83901978]
[-23.50487328 -260.41540527]
[-34.09367371 -267.78018188]
[-36.74179077 -279.99374390]
[-30.56263733 -290.39300537]
[-33.88489532 -305.02047729]
[-37.20715714 -319.64794922]
[-40.52941513 -334.27539062]
[-45.35606003 -320.07315063]
[-55.48202896 -309.00677490]
[-69.20092010 -302.94113159]
[-84.20085907 -302.89840698]
[-97.95409393 -308.88577271]
[-108.14295959 -319.89425659]
[-113.05045319 -334.06875610]
[-111.84958649 -349.02062988]
[-104.74270630 -362.23016357]
[-92.92746735 -371.47137451]
[-78.39493561 -375.18695068]
[-63.59409332 -372.75073242]
[-51.01914978 -364.57327271]
[-42.78859711 -352.03109741]
[-43.23520279 -367.02444458]
[-46.61873245 -375.50909424]
[-43.57516479 -382.24395752]
[-43.79849243 -397.24230957]
[-57.81801605 -403.18981934]
[-68.20166779 -414.32983398]
[-73.15041351 -428.73223877]
[-71.80686188 -443.90179443]
[-64.40378571 -457.21020508]
[-52.22381973 -466.35177612]
[-37.37720490 -469.74264526]
[-22.43621445 -466.79531860]
[-9.98946476 -458.02044678]
[-2.19343019 -444.93832397]
[-0.39882028 -429.81552124]
[-4.91656256 -415.27215576]
[-14.96393013 -403.82791138]
[-28.80015755 -397.46563721]
[-28.57682991 -382.46728516]
[-28.24185371 -367.47103882]
[-27.79524803 -352.47769165]
[-25.90195465 -337.59765625]
[-22.57969475 -322.97018433]
[-19.25743675 -308.34274292]
[-15.93517590 -293.71527100]
[-3.33595753 -281.49945068]
[-8.92849731 -263.95507812]
[-5.38882542 -249.37869263]
[-1.84915292 -234.80232239]
[1.69051957 -220.22593689]
[5.23019218 -205.64956665]
[8.76986408 -191.07319641]
[12.30953693 -176.49681091]
[16.71053505 -162.15696716]
[21.95725250 -148.10449219]
[27.20397186 -134.05203247]
[32.45069122 -119.99955750]
[37.69740677 -105.94708252]
[41.59339523 -103.18478394]
[43.79548645 -97.94571686]
[42.88430786 -91.39733124]
[47.71030426 -77.19487762]
[52.53630447 -62.99242020]
[57.36230087 -48.78996658]
[72.26654816 -47.89966202]
[85.73092651 -41.35321808]
[95.69005585 -30.12020493]
[100.60301971 -15.89169979]
[99.69172668 -0.82573813]
[93.06395721 12.77998447]
[81.70168304 22.83853340]
[86.52767944 37.04098892]
[101.95012665 35.64522171]
[117.25975800 37.97225189]
[131.57095337 43.88747025]
[144.05581665 53.04869080]
[153.99214172 64.92594910]
[160.80513000 78.83218384]
[164.10066223 93.96292877]
[163.68807983 109.44290161]
[159.59127808 124.37663269]
[152.04722595 137.90020752]
[141.49235535 149.23133850]
[128.53721619 157.71453857]
[133.57414246 171.84356689]
[138.61105347 185.97259521]
[143.64796448 200.10162354]
[148.68489075 214.23065186]
[153.82684326 228.32179260]
[159.07356262 242.37426758]
[164.32028198 256.42672729]
[176.39587402 266.64880371]
[173.59909058 281.27847290]
[178.84580994 295.33096313]
[190.23474121 301.38528442]
[194.31544495 313.19763184]
[189.41583252 324.25747681]
[194.45274353 338.38650513]
[199.48966980 352.51553345]
[211.41172791 362.91625977]
[208.39743042 377.50268555]
[217.08702087 365.27603149]
[232.05484009 364.29415894]
[242.26719666 375.28085327]
[240.19589233 390.13717651]
[227.36784363 397.91156006]
[213.24055481 392.87417603]
[217.21264648 407.33871460]
[221.18475342 421.80322266]
[232.30021667 433.06185913]
[228.20938110 447.38369751]
[232.18148804 461.84820557]
[236.15357971 476.31274414]
[240.12567139 490.77725220]
[255.16586304 489.99826050]
[270.02178955 492.47113037]
[283.99865723 498.08020020]
[296.44271851 506.56311035]
[306.77191162 517.52313232]
[314.50317383 530.44757080]
[319.27484131 544.73199463]
[320.86380005 559.70831299]
[319.19570923 574.67596436]
[314.34854126 588.93499756]
[306.54907227 601.81842041]
[296.16207886 612.72363281]
[283.67333984 621.14062500]
[269.66705322 626.67572021]
[254.79823303 629.07000732]
[239.76237488 628.21154785]
[225.26271057 624.14044189]
[211.97743225 617.04705811]
[200.52790833 607.26330566]
[191.44966125 595.24664307]
[185.16728210 581.55920410]
[181.97460938 566.84118652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[8 185]
[10 183]
[11 182]
[12 181]
[13 175]
[15 173]
[16 172]
[17 171]
[19 168]
[20 167]
[22 165]
[23 164]
[24 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[43 146]
[44 145]
[51 138]
[52 137]
[53 136]
[54 135]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[77 119]
[78 118]
[79 117]
[80 116]
[94 115]
[95 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
