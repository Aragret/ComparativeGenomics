%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[96.78603363 475.33660889]
[93.36655426 460.67742920]
[92.96829224 445.62994385]
[95.60755920 430.81039429]
[101.17626953 416.82562256]
[109.44640350 404.24826050]
[120.07928467 393.59338379]
[132.63952637 385.29727173]
[146.61277771 379.69964600]
[143.94697571 364.93844604]
[141.28117371 350.17721558]
[138.50556946 335.43624878]
[135.62030029 320.71636963]
[132.73503113 305.99649048]
[129.84974670 291.27658081]
[126.96447754 276.55670166]
[112.50647736 272.89178467]
[101.02624512 263.27337646]
[94.83522797 249.56817627]
[95.21019745 234.47248840]
[102.13031769 220.98179626]
[114.27068329 211.79632568]
[111.38540649 197.07643127]
[108.50013733 182.35653687]
[105.61486053 167.63665771]
[102.72959137 152.91676331]
[99.84431458 138.19686890]
[85.25178528 135.23513794]
[72.90039825 126.91907501]
[64.66706848 114.51237488]
[61.80294418 99.90037537]
[64.74325562 85.30350494]
[73.04119110 72.93992615]
[85.43579102 64.68840027]
[82.55051422 49.96851349]
[79.66524506 35.24861908]
[69.41794586 23.19443321]
[74.56265259 9.21654797]
[71.67737579 -5.50334358]
[68.79210663 -20.22323418]
[58.54480743 -32.27742386]
[63.68951035 -46.25531006]
[60.80424118 -60.97520065]
[57.91896820 -75.69509125]
[43.05543137 -73.64655304]
[28.09980392 -72.44220734]
[13.09999657 -72.08590698]
[-1.89594567 -72.57879639]
[-16.83998299 -73.91928864]
[-31.68424797 -76.10309601]
[-46.38118744 -79.12322998]
[-60.88372421 -82.97000122]
[-75.14540100 -87.63110352]
[-89.12052917 -93.09159088]
[-102.76435089 -99.33397675]
[-116.03314972 -106.33826447]
[-128.88442993 -114.08202362]
[-141.27702332 -122.54044342]
[-153.17123413 -131.68643188]
[-164.52894592 -141.49067688]
[-175.31381226 -151.92179871]
[-185.49124146 -162.94636536]
[-195.02865601 -174.52905273]
[-203.89550781 -186.63278198]
[-212.06338501 -199.21876526]
[-219.50613403 -212.24668884]
[-226.19989014 -225.67481995]
[-232.12324524 -239.46014404]
[-237.25718689 -253.55850220]
[-241.58529663 -267.92474365]
[-245.09370422 -282.51281738]
[-247.77116394 -297.27603149]
[-249.60910034 -312.16708374]
[-250.60163879 -327.13824463]
[-250.74559021 -342.14160156]
[-250.04048157 -357.12905884]
[-248.48860168 -372.05264282]
[-246.09489441 -386.86450195]
[-242.86703491 -401.51721191]
[-238.81536865 -415.96386719]
[-233.95286560 -430.15811157]
[-228.29510498 -444.05456543]
[-221.86022949 -457.60864258]
[-214.66882324 -470.77697754]
[-206.74392700 -483.51736450]
[-198.11094666 -495.78900146]
[-188.79751587 -507.55255127]
[-178.83348083 -518.77038574]
[-168.25076294 -529.40649414]
[-157.08323669 -539.42681885]
[-145.36669922 -548.79937744]
[-133.13868713 -557.49401855]
[-120.43834686 -565.48291016]
[-107.30638123 -572.74047852]
[-93.78484344 -579.24353027]
[-79.91706085 -584.97113037]
[-65.74744415 -589.90502930]
[-51.32138443 -594.02935791]
[-36.68509674 -597.33093262]
[-21.88546562 -599.79913330]
[-6.96989870 -601.42608643]
[8.01382542 -602.20666504]
[23.01770973 -602.13818359]
[37.99369049 -601.22100830]
[52.89379501 -599.45806885]
[67.67029572 -596.85491943]
[82.27585602 -593.41998291]
[96.66368866 -589.16424561]
[110.78771210 -584.10131836]
[124.60267639 -578.24743652]
[138.06433105 -571.62133789]
[151.12954712 -564.24426270]
[163.75646973 -556.13983154]
[175.90467834 -547.33398438]
[187.53521729 -537.85498047]
[198.61087036 -527.73315430]
[209.09613037 -517.00097656]
[218.95742798 -505.69271851]
[228.16316223 -493.84469604]
[236.68383789 -481.49484253]
[244.49217224 -468.68267822]
[251.56315613 -455.44931030]
[257.87414551 -441.83706665]
[263.40490723 -427.88961792]
[268.13772583 -413.65158081]
[272.05743408 -399.16857910]
[275.15148926 -384.48703003]
[277.40997314 -369.65393066]
[278.82568359 -354.71685791]
[279.39401245 -339.72357178]
[279.11322021 -324.72216797]
[277.98416138 -309.76065063]
[276.01046753 -294.88699341]
[273.19842529 -280.14883423]
[269.55709839 -265.59335327]
[265.09811401 -251.26719666]
[259.83578491 -237.21626282]
[253.78694153 -223.48553467]
[246.97096252 -210.11901855]
[239.40968323 -197.15953064]
[231.12733459 -184.64859009]
[222.15045166 -172.62625122]
[212.50776672 -161.13104248]
[202.23017883 -150.19976807]
[191.35063171 -139.86746216]
[179.90394592 -130.16723633]
[167.92680359 -121.13012695]
[155.45756531 -112.78510284]
[142.53617859 -105.15889740]
[129.20404053 -98.27593994]
[115.50384521 -92.15827179]
[101.47948456 -86.82549286]
[87.17588043 -82.29468536]
[72.63885498 -78.58036041]
[75.52413177 -63.86047363]
[78.40940094 -49.14057922]
[88.45032501 -38.13925934]
[83.51200104 -23.10850716]
[86.39727020 -8.38861656]
[89.28253937 6.33127499]
[99.32347107 17.33259773]
[94.38513947 32.36334991]
[97.27040863 47.08324051]
[100.15568542 61.80313110]
[114.74821472 64.76485443]
[127.09960175 73.08092499]
[135.33293152 85.48762512]
[138.19705200 100.09962463]
[135.25674438 114.69649506]
[126.95880890 127.06007385]
[114.56420898 135.31159973]
[117.44948578 150.03149414]
[120.33475494 164.75137329]
[123.22002411 179.47126770]
[126.10530090 194.19116211]
[128.99057007 208.91105652]
[143.70027161 212.83358765]
[155.20130920 222.71353149]
[161.24743652 236.55059814]
[160.68850708 251.57885742]
[153.68893433 264.81951904]
[141.68437195 273.67141724]
[144.56964111 288.39132690]
[147.45491028 303.11120605]
[150.34019470 317.83108521]
[153.22546387 332.55099487]
[157.94712830 340.37042236]
[156.04240417 347.51141357]
[158.70819092 362.27264404]
[161.37399292 377.03387451]
[176.42250061 377.39028931]
[191.09115601 380.76901245]
[204.77925110 387.03167725]
[216.92628479 395.92178345]
[227.03485107 407.07534790]
[234.69099426 420.03561401]
[239.58122253 434.27185059]
[241.50524902 449.20111084]
[240.38432312 464.21206665]
[236.26431274 478.69000244]
[229.31396484 492.04205322]
[219.81785583 503.72146606]
[208.16487122 513.25000000]
[194.83218384 520.23742676]
[180.36576843 524.39764404]
[165.35800171 525.56030273]
[150.42344666 523.67779541]
[136.17366028 518.82714844]
[123.19216919 511.20706177]
[112.01055908 501.12954712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[34 164]
[35 163]
[36 162]
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[44 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
