%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[161.95266724 502.38125610]
[152.21952820 490.96243286]
[143.15414429 479.00659180]
[134.78610229 466.55270386]
[127.14267731 453.64138794]
[120.24880981 440.31481934]
[114.12699127 426.61639404]
[108.79718781 412.59082031]
[104.27677155 398.28384399]
[100.58050537 383.74215698]
[97.72043610 369.01315308]
[95.70589447 354.14489746]
[94.54344940 339.18588257]
[94.23690033 324.18490601]
[94.78723907 309.19088745]
[96.19267273 294.25274658]
[98.44861603 279.41918945]
[101.54771423 264.73861694]
[105.47985077 250.25892639]
[110.23220825 236.02731323]
[115.78928375 222.09022522]
[122.13294983 208.49311829]
[129.24252319 195.28034973]
[137.09478760 182.49499512]
[145.66415405 170.17877197]
[154.92266846 158.37185669]
[143.66658020 148.45719910]
[132.41047668 138.54254150]
[121.15438080 128.62789917]
[109.89828491 118.71324158]
[93.45590210 120.13296509]
[80.99065399 109.31699371]
[80.07823181 92.83866119]
[68.67576599 83.09269714]
[55.77960205 83.31999207]
[46.48310471 74.96781158]
[45.40548325 62.91935730]
[34.14938736 53.00470734]
[22.89329147 43.09005737]
[11.63719654 33.17540359]
[0.38110054 23.26075363]
[-10.47098637 33.62963104]
[-22.17426491 43.02722168]
[-34.64208984 51.38394547]
[-47.78215027 58.63792801]
[-61.49715805 64.73546600]
[-75.68557739 69.63140869]
[-90.24234772 73.28952026]
[-105.05970764 75.68270874]
[-120.02794647 76.79325104]
[-135.03623962 76.61293030]
[-149.97348022 75.14308167]
[-164.72906494 72.39458466]
[-179.19374084 68.38779449]
[-193.26043701 63.15237427]
[-206.82498169 56.72708130]
[-219.78697205 49.15948868]
[-232.05041504 40.50563049]
[-243.52453613 30.82957077]
[-254.12435913 20.20295334]
[-263.77142334 8.70445538]
[-272.39431763 -3.58079290]
[-279.92916870 -16.56183243]
[-286.32022095 -30.14255714]
[-291.52011108 -44.22241592]
[-295.49038696 -58.69716644]
[-298.20162964 -73.45964050]
[-299.63378906 -88.40053558]
[-299.77621460 -103.40923309]
[-298.62789917 -118.37462616]
[-296.19732666 -133.18589783]
[-292.50250244 -147.73339844]
[-287.57077026 -161.90940857]
[-281.43862915 -175.60897827]
[-274.15151978 -188.73069763]
[-265.76336670 -201.17738342]
[-256.33627319 -212.85691833]
[-245.94003296 -223.68280029]
[-234.65162659 -233.57489014]
[-222.55462646 -242.45994568]
[-209.73861694 -250.27218628]
[-196.29846191 -256.95376587]
[-182.33366394 -262.45523071]
[-167.94763184 -266.73583984]
[-153.24687195 -269.76388550]
[-138.34022522 -271.51696777]
[-123.33805847 -271.98211670]
[-108.35144043 -271.15585327]
[-93.49133301 -269.04434204]
[-78.86775208 -265.66317749]
[-64.58896637 -261.03741455]
[-50.76069641 -255.20126343]
[-37.48532486 -248.19798279]
[-24.86114120 -240.07940674]
[-12.98160553 -230.90562439]
[-1.93467641 -220.74458313]
[8.19785881 -209.67150879]
[17.34098244 -197.76837158]
[25.42699814 -185.12329102]
[32.39603806 -171.82991028]
[38.19651031 -157.98664856]
[42.78546524 -143.69599915]
[46.12892914 -129.06375122]
[48.20214462 -114.19824219]
[48.98976517 -99.20954132]
[48.48596191 -84.20861816]
[46.69445801 -69.30654144]
[43.62852097 -54.61363602]
[39.31085205 -40.23868942]
[33.77341461 -26.28812408]
[27.05720901 -12.86523151]
[19.21195984 -0.06939224]
[10.29575157 12.00465775]
[21.55184746 21.91930962]
[32.80794144 31.83395958]
[44.06403732 41.74861145]
[55.32013321 51.66326141]
[72.68595123 54.19216919]
[78.42173004 71.69023132]
[89.82419586 81.43620300]
[102.25296783 78.95039368]
[113.87411499 84.01029968]
[120.52177429 94.80206299]
[119.81294250 107.45714569]
[131.06903076 117.37180328]
[142.32513428 127.28645325]
[153.58122253 137.20109558]
[164.83732605 147.11575317]
[175.38121033 136.44102478]
[186.51730347 126.38564301]
[198.20930481 116.98240662]
[210.41903687 108.26199341]
[223.10670471 100.25284576]
[236.23092651 92.98107910]
[249.74887085 86.47042084]
[263.61645508 80.74211121]
[277.78845215 75.81482697]
[292.21859741 71.70464325]
[306.85989380 68.42496490]
[321.66452026 65.98648834]
[336.58422852 64.39717102]
[351.57034302 63.66220093]
[366.57394409 63.78396606]
[381.54614258 64.76207733]
[396.43807983 66.59333801]
[411.20120239 69.27177429]
[425.78732300 72.78865814]
[440.14889526 77.13250732]
[454.23904419 82.28916168]
[468.01181030 88.24179840]
[481.42230225 94.97100067]
[494.42675781 102.45481873]
[506.98275757 110.66884613]
[519.04937744 119.58628082]
[530.58721924 129.17803955]
[541.55859375 139.41284180]
[551.92785645 150.25729370]
[561.66107178 161.67604065]
[570.72656250 173.63182068]
[579.09472656 186.08563232]
[586.73822021 198.99687195]
[593.63220215 212.32341003]
[599.75415039 226.02177429]
[605.08404541 240.04730225]
[609.60455322 254.35423279]
[613.30096436 268.89590454]
[616.16113281 283.62487793]
[618.17578125 298.49313354]
[619.33837891 313.45214844]
[619.64501953 328.45312500]
[619.09478760 343.44714355]
[617.68951416 358.38528442]
[615.43365479 373.21887207]
[612.33465576 387.89944458]
[608.40264893 402.37918091]
[603.65039062 416.61080933]
[598.09344482 430.54794312]
[591.74987793 444.14511108]
[584.64044189 457.35794067]
[576.78826904 470.14334106]
[568.21899414 482.45965576]
[558.96057129 494.26663208]
[549.04321289 505.52581787]
[538.49920654 516.20043945]
[527.36303711 526.25573730]
[515.67095947 535.65887451]
[503.46115112 544.37921143]
[490.77343750 552.38824463]
[477.64916992 559.65991211]
[464.13116455 566.17047119]
[450.26354980 571.89868164]
[436.09152222 576.82586670]
[421.66131592 580.93591309]
[407.02001953 584.21551514]
[392.21536255 586.65386963]
[377.29562378 588.24304199]
[362.30953979 588.97790527]
[347.30590820 588.85601807]
[332.33370972 587.87780762]
[317.44180298 586.04644775]
[302.67871094 583.36785889]
[288.09262085 579.85089111]
[273.73107910 575.50689697]
[259.64096069 570.35015869]
[245.86824036 564.39739990]
[232.45779419 557.66809082]
[219.45339966 550.18414307]
[206.89746094 541.97003174]
[194.83093262 533.05249023]
[183.29318237 523.46069336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[33 120]
[34 119]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
