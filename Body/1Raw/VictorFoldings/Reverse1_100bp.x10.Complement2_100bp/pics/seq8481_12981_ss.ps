%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[109.51440430 432.90423584]
[119.42494965 420.28833008]
[118.97834015 405.29498291]
[118.42012787 390.30538940]
[117.75034332 375.32034302]
[117.08055878 360.33529663]
[116.41077423 345.35025024]
[115.74098969 330.36523438]
[107.44310760 317.99612427]
[114.55648041 303.86422729]
[113.88669586 288.87921143]
[113.21691132 273.89416504]
[111.98992920 258.94442749]
[110.20746613 244.05070496]
[108.42500305 229.15699768]
[105.29088593 225.55332947]
[104.38729095 219.94258118]
[106.81800842 213.79415894]
[105.47977448 198.85397339]
[104.14154053 183.91378784]
[102.80330658 168.97360229]
[101.46507263 154.03341675]
[100.12683868 139.09323120]
[97.79135132 124.27616882]
[94.46909332 109.64870453]
[85.57949066 121.73072052]
[70.77169800 124.12432098]
[58.52829742 115.45835114]
[55.86285400 100.69706726]
[64.30226135 88.29640961]
[79.01204681 85.36003113]
[91.56523132 93.56924438]
[89.56121826 78.70371246]
[87.55720520 63.83818436]
[85.55318451 48.97265625]
[83.54917145 34.10712814]
[74.03752136 21.46438217]
[80.00508118 7.81749821]
[78.00106812 -7.04803038]
[75.99705505 -21.91355896]
[71.16864014 -7.71192408]
[63.00294113 4.87065506]
[51.99928284 15.06474972]
[38.83055115 22.24698639]
[24.30201912 25.97816849]
[9.30210972 26.03013420]
[-5.25192690 22.39970398]
[-18.47010612 15.30888176]
[-29.54412842 5.19127274]
[-37.79681396 -7.33442688]
[-42.72351074 -21.50226593]
[-44.02294922 -36.44587326]
[-41.61566544 -51.25144958]
[-35.64886475 -65.01361847]
[-26.48742104 -76.89082336]
[-14.69156265 -86.15676117]
[-0.98260742 -92.24482727]
[13.80113506 -94.78273010]
[28.75563431 -93.61527252]
[42.96641541 -88.81385040]
[55.56448746 -80.67206573]
[65.77946472 -69.68779755]
[72.98670959 -56.53273773]
[76.74549103 -42.01129150]
[79.84960175 -56.68659592]
[82.95371246 -71.36190033]
[86.05782318 -86.03720093]
[89.16193390 -100.71250153]
[92.26604462 -115.38780212]
[87.55204773 -130.49041748]
[97.75565338 -141.34101868]
[93.04165649 -156.44363403]
[103.24525452 -167.29423523]
[90.70342255 -180.38851929]
[88.55135345 -198.23364258]
[97.46331787 -213.66178894]
[113.70748138 -220.58990479]
[116.37327576 -235.35112000]
[119.03907776 -250.11233521]
[121.70487213 -264.87353516]
[111.46482086 -253.91264343]
[97.51468658 -248.39959717]
[82.54801178 -249.39889526]
[69.45462799 -256.71759033]
[60.76266098 -268.94256592]
[58.15039825 -283.71334839]
[62.12222290 -298.17794800]
[71.91123962 -309.54345703]
[85.62734222 -315.61541748]
[100.62216949 -315.22137451]
[114.00045013 -308.43746948]
[123.17904663 -296.57351685]
[126.38571167 -281.91900635]
[131.63243103 -295.97146606]
[136.87915039 -310.02392578]
[142.12586975 -324.07641602]
[147.37258911 -338.12887573]
[152.61930847 -352.18136597]
[139.53201294 -359.57522583]
[127.76258087 -368.92544556]
[117.60083771 -380.00180054]
[109.29703522 -392.53149414]
[103.05564880 -406.20599365]
[99.03038788 -420.68853760]
[97.32038116 -435.62246704]
[97.96772766 -450.64004517]
[100.95648956 -465.37142944]
[106.21306610 -479.45385742]
[113.60801697 -492.54052734]
[122.95922852 -504.30920410]
[134.03642273 -514.47003174]
[146.56680298 -522.77276611]
[160.24180603 -529.01306152]
[174.72467041 -533.03710938]
[189.65873718 -534.74591064]
[204.67625427 -534.09729004]
[219.40739441 -531.10729980]
[233.48939514 -525.84960938]
[246.57546997 -518.45355225]
[258.34335327 -509.10137939]
[268.50326538 -498.02334595]
[276.80499268 -485.49227905]
[283.04412842 -471.81677246]
[287.06701660 -457.33355713]
[288.77453613 -442.39935303]
[288.12472534 -427.38189697]
[285.13354492 -412.65100098]
[279.87463379 -398.56942749]
[272.47750854 -385.48397827]
[263.12435913 -373.71685791]
[252.04550171 -363.55786133]
[239.51374817 -355.25714111]
[225.83772278 -349.01916504]
[211.35418701 -344.99746704]
[196.41983032 -343.29116821]
[181.40242004 -343.94223022]
[166.67176819 -346.93463135]
[161.42506409 -332.88217163]
[156.17834473 -318.82968140]
[150.93162537 -304.77722168]
[145.68490601 -290.72476196]
[140.43818665 -276.67227173]
[136.46609497 -262.20776367]
[133.80029297 -247.44653320]
[131.13449097 -232.68531799]
[128.46870422 -217.92410278]
[138.07257080 -210.49841309]
[143.64086914 -199.62979126]
[144.06227112 -187.35284424]
[139.19546509 -175.99530029]
[129.90762329 -167.73669434]
[117.92056274 -164.19012451]
[122.85658264 -150.13719177]
[112.43095398 -138.23690796]
[117.36698151 -124.18397522]
[106.94134521 -112.28369141]
[103.83723450 -97.60839081]
[100.73312378 -82.93309021]
[97.62901306 -68.25778961]
[94.52490234 -53.58248520]
[91.42079926 -38.90718079]
[90.86258698 -23.91757202]
[92.86660004 -9.05204391]
[94.87061310 5.81348419]
[104.23892212 17.39294815]
[98.41470337 32.10311508]
[100.41871643 46.96864319]
[102.42272949 61.83417130]
[104.42674255 76.69969940]
[106.43075562 91.56523132]
[109.09654999 106.32644653]
[112.41881561 120.95390320]
[118.90000916 107.42637634]
[131.60964966 99.45988464]
[146.60952759 99.52294159]
[159.25173950 107.59600067]
[165.61898804 121.17754364]
[163.73828125 136.05917358]
[154.19241333 147.62966919]
[139.93923950 152.30377197]
[125.39528656 148.63316345]
[115.06702423 137.75500488]
[116.40525818 152.69519043]
[117.74349213 167.63537598]
[119.08172607 182.57556152]
[120.41996002 197.51574707]
[121.75819397 212.45591736]
[123.31871796 227.37452698]
[125.10118103 242.26824951]
[126.88365173 257.16195679]
[138.06542969 247.16357422]
[152.87898254 249.52122498]
[160.40431213 262.49694824]
[155.09403992 276.52551270]
[140.86267090 281.26559448]
[128.20195007 273.22436523]
[128.87173462 288.20941162]
[129.54151917 303.19445801]
[137.88731384 316.63537598]
[130.72602844 329.69543457]
[131.39581299 344.68048096]
[132.06559753 359.66552734]
[132.73538208 374.65054321]
[133.40516663 389.63558960]
[136.91464233 398.06893921]
[133.97169495 404.84838867]
[134.41830444 419.84173584]
[145.06217957 431.84536743]
[142.17185974 447.62591553]
[127.96454620 455.07788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[10 198]
[11 197]
[12 196]
[13 190]
[14 189]
[15 188]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[24 172]
[25 171]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[38 164]
[39 163]
[40 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[71 154]
[73 152]
[77 146]
[78 145]
[79 144]
[80 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
