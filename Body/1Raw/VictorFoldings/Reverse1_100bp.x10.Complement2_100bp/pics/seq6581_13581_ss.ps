%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[64.37345123 429.36068726]
[60.18007278 414.93167114]
[58.08292770 400.05273438]
[58.12470245 385.02679443]
[60.30455017 370.15972900]
[64.57809448 355.75427246]
[70.85832977 342.10363770]
[79.01739502 329.48577881]
[88.88919067 318.15756226]
[100.27272797 308.34963989]
[112.93626404 300.26162720]
[126.62197113 294.05825806]
[122.43496704 279.65444946]
[118.24795532 265.25067139]
[114.06094360 250.84689331]
[108.94406891 264.94717407]
[97.52644348 274.67535400]
[82.79261017 277.48858643]
[68.59395599 272.65139771]
[58.64196777 261.42831421]
[55.53807831 246.75296021]
[60.09363937 232.46147156]
[71.11782837 222.28958130]
[85.72895813 218.89622498]
[100.10771179 223.16839600]
[110.49508667 233.98860168]
[108.49107361 219.12307739]
[106.48706055 204.25753784]
[104.48304749 189.39201355]
[102.47902679 174.52648926]
[90.51545715 165.72827148]
[88.27133942 150.68106079]
[97.58082581 138.19221497]
[95.57681274 123.32669067]
[93.57279968 108.46116638]
[90.57802582 93.76316071]
[86.60592651 79.29863739]
[82.63383484 64.83411407]
[78.66173553 50.36958694]
[74.68964386 35.90506363]
[70.71754456 21.44054031]
[66.74545288 6.97601700]
[62.77335358 -7.48850679]
[58.80125809 -21.95303154]
[54.82915878 -36.41755295]
[49.26993561 -50.34935379]
[42.19282913 -63.57488251]
[35.11572266 -76.80040741]
[28.03861809 -90.02593231]
[20.96151352 -103.25146484]
[13.68828392 -116.37015533]
[6.22054243 -129.37910461]
[-1.24719894 -142.38806152]
[-8.90779591 -155.28439331]
[-16.75955200 -168.06523132]
[-24.61130714 -180.84606934]
[-32.46306229 -193.62692261]
[-40.31481934 -206.40776062]
[-48.16657257 -219.18859863]
[-61.74721146 -212.78317261]
[-75.95008087 -207.91062927]
[-90.60277557 -204.63012695]
[-105.52742767 -202.98147583]
[-120.54285431 -202.98469543]
[-135.46679688 -204.63973999]
[-150.11808777 -207.92654419]
[-164.31886292 -212.80517578]
[-177.89674377 -219.21643066]
[-190.68692017 -227.08247375]
[-202.53411865 -236.30781555]
[-213.29452515 -246.78048706]
[-222.83752441 -258.37335205]
[-231.04727173 -270.94567871]
[-237.82409668 -284.34484863]
[-243.08573914 -298.40820312]
[-246.76834106 -312.96505737]
[-248.82719421 -327.83865356]
[-249.23728943 -342.84848022]
[-247.99368286 -357.81234741]
[-245.11143494 -372.54855347]
[-240.62554932 -386.87823486]
[-234.59046936 -400.62747192]
[-227.07946777 -413.62930298]
[-218.18373108 -425.72595215]
[-208.01123047 -436.77056885]
[-196.68544006 -446.62905884]
[-184.34387207 -455.18176270]
[-171.13632202 -462.32485962]
[-157.22311401 -467.97161865]
[-142.77316284 -472.05352783]
[-127.96185303 -474.52102661]
[-112.96900177 -475.34411621]
[-97.97660065 -474.51287842]
[-83.16663361 -472.03735352]
[-68.71889496 -467.94763184]
[-54.80875778 -462.29330444]
[-41.60507965 -455.14306641]
[-29.26814651 -446.58364868]
[-17.94771194 -436.71902466]
[-7.78119802 -425.66891479]
[1.10798430 -413.56744385]
[8.61192799 -400.56152344]
[14.63954258 -386.80902100]
[19.11765671 -372.47689819]
[21.99191284 -357.73913574]
[23.22741699 -342.77462769]
[22.80917358 -327.76501465]
[20.74225998 -312.89251709]
[17.05176353 -298.33767700]
[11.78248692 -284.27716064]
[4.99839306 -270.88168335]
[-3.21816540 -258.31381226]
[-12.76744747 -246.72612000]
[-23.53353310 -236.25927734]
[-35.38573074 -227.04035950]
[-27.53397560 -214.25952148]
[-19.68222046 -201.47866821]
[-11.83046436 -188.69783020]
[-3.97870922 -175.91699219]
[3.87304616 -163.13613892]
[8.22761440 -161.17481995]
[11.39632607 -156.45716858]
[11.76175308 -149.85580444]
[19.22949409 -136.84684753]
[26.69723511 -123.83789825]
[30.99147797 -121.74779510]
[34.01832199 -116.93788910]
[34.18704224 -110.32856750]
[41.26414490 -97.10304260]
[48.34125137 -83.87751007]
[55.41835785 -70.65198517]
[62.49546051 -57.42646027]
[62.89051437 -72.42125702]
[68.60832214 -86.28871918]
[78.89661407 -97.20435333]
[92.40178680 -103.73201752]
[107.34700012 -105.01287842]
[121.76595306 -100.87842560]
[133.76159668 -91.87260437]
[141.75567627 -79.18030548]
[144.69645691 -64.47139740]
[142.19700623 -49.68110657]
[134.58618164 -36.75534058]
[122.86531830 -27.39471054]
[108.57649994 -22.83076668]
[93.59965515 -23.66397476]
[79.90525818 -29.78471375]
[69.29368591 -40.38965225]
[73.26577759 -25.92512703]
[77.23787689 -11.46060276]
[81.20997620 3.00392079]
[85.18206787 17.46844482]
[89.15416718 31.93296814]
[93.12625885 46.39749146]
[97.09835815 60.86201477]
[101.07045746 75.32653809]
[105.04254913 89.79106140]
[110.91324615 75.98762512]
[123.25449371 67.46157074]
[138.24221802 66.85478210]
[151.23229980 74.35528564]
[158.19964600 87.63896942]
[156.98532104 102.58973694]
[147.96562195 114.57492828]
[133.93537903 119.88080597]
[119.24202728 116.86328125]
[108.43833160 106.45715332]
[110.44234467 121.32267761]
[112.44635773 136.18820190]
[124.73063660 145.76600647]
[126.55122375 160.87031555]
[117.34455872 172.52247620]
[119.34857178 187.38800049]
[121.35258484 202.25352478]
[123.35659790 217.11904907]
[125.36061096 231.98458862]
[128.46472168 246.65988159]
[132.65173340 261.06365967]
[136.83874512 275.46743774]
[141.02575684 289.87124634]
[155.90429688 287.77133179]
[170.93025208 287.81030273]
[185.79769897 289.98739624]
[200.20396423 294.25827026]
[213.85575867 300.53598022]
[226.47512817 308.69268799]
[237.80517578 318.56237793]
[247.61523438 329.94409180]
[255.70558167 342.60614014]
[261.91149902 356.29067993]
[266.10665894 370.71917725]
[268.20565796 385.59786987]
[268.16574097 400.62380981]
[265.98773193 415.49111938]
[261.71597290 429.89712524]
[255.43743896 443.54852295]
[247.27992249 456.16738892]
[237.40953064 467.49682617]
[226.02720642 477.30618286]
[213.36468506 485.39575195]
[199.67973328 491.60083008]
[185.25097656 495.79510498]
[170.37217712 497.89315796]
[155.34622192 497.85232544]
[140.47904968 495.67340088]
[126.07331085 491.40072632]
[112.42230225 485.12133789]
[99.80393982 476.96307373]
[88.47511292 467.09197998]
[78.66646576 455.70904541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 180]
[13 179]
[14 178]
[15 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[33 169]
[34 168]
[35 167]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 125]
[52 124]
[53 123]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
