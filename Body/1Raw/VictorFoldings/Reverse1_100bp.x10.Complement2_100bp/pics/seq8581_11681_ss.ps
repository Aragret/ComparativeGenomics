%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[89.22509766 475.24621582]
[80.21778107 487.29229736]
[69.20415497 497.53631592]
[56.53827286 505.64898682]
[42.62728500 511.36947632]
[27.91837120 514.51391602]
[12.88436413 514.98126221]
[-1.99145615 512.75646973]
[-16.23089218 507.91104126]
[-29.37620735 500.60073853]
[-41.00482941 491.06057739]
[-50.74295425 479.59719849]
[-58.27753448 466.57913208]
[-63.36636353 452.42486572]
[-65.84586334 437.58938599]
[-65.63632202 422.54956055]
[-62.74448395 407.78890991]
[-57.26329803 393.78189087]
[-49.36897278 380.97879028]
[-39.31526947 369.79116821]
[-27.42537689 360.57867432]
[-14.08150578 353.63742065]
[0.28739318 349.19058228]
[15.21942043 347.38104248]
[30.23457336 348.26705933]
[33.77424622 333.69067383]
[37.31391907 319.11428833]
[40.85358810 304.53793335]
[39.34123611 301.35278320]
[39.29649734 297.27688599]
[41.12123489 293.00796509]
[44.89048767 289.39688110]
[49.07749939 274.99310303]
[53.15716553 260.55856323]
[57.12926102 246.09403992]
[60.77735138 231.54441833]
[64.09960938 216.91694641]
[59.37335968 202.79208374]
[69.97501373 191.04833984]
[73.29727173 176.42088318]
[76.61952972 161.79342651]
[74.87748718 157.34658813]
[75.91041565 151.75820923]
[80.26460266 146.78300476]
[84.02090454 132.26094055]
[87.77720642 117.73889160]
[91.53350830 103.21682739]
[90.06701660 99.65007019]
[90.17982483 95.45422363]
[92.11762238 91.34910583]
[95.79538727 88.13758087]
[100.19638824 73.79772949]
[104.59738159 59.45788574]
[108.99838257 45.11803818]
[104.46001434 27.27189636]
[117.76399994 15.82763863]
[121.95100403 1.42385674]
[126.13801575 -12.97992516]
[112.98679352 -20.31826782]
[101.80379486 -30.39441872]
[93.14771271 -42.70064545]
[87.45005035 -56.61790466]
[84.99358368 -71.44699860]
[85.89833069 -86.44367981]
[90.11571503 -100.85602570]
[97.43113708 -113.96212769]
[107.47489166 -125.10623169]
[119.74088287 -133.73159790]
[133.61207581 -139.40827942]
[148.39160156 -141.85453796]
[163.33767700 -140.95088196]
[167.52468872 -155.35466003]
[171.71170044 -169.75843811]
[175.89871216 -184.16221619]
[178.78398132 -198.88211060]
[180.34451294 -213.80072021]
[181.90502930 -228.71931458]
[172.22782898 -240.92544556]
[174.02294922 -256.03280640]
[185.71925354 -265.18331909]
[187.27978516 -280.10192871]
[188.39543152 -295.06036377]
[189.06521606 -310.04541016]
[189.73500061 -325.03045654]
[190.40478516 -340.01550293]
[191.07456970 -355.00051880]
[191.74435425 -369.98556519]
[179.97270203 -360.68887329]
[165.05969238 -362.30194092]
[155.54815674 -373.90066528]
[156.88674927 -388.84082031]
[168.30865479 -398.56399536]
[183.27088928 -397.50030518]
[193.20210266 -386.25997925]
[195.20611572 -401.12551880]
[197.21012878 -415.99102783]
[199.21414185 -430.85656738]
[201.21815491 -445.72210693]
[203.22216797 -460.58761597]
[189.35522461 -466.55505371]
[177.61322021 -476.04336548]
[168.86750793 -488.34844971]
[163.76705933 -502.55718994]
[162.69036865 -517.61517334]
[165.71733093 -532.40502930]
[172.62333679 -545.82928467]
[182.89590454 -556.89166260]
[195.77273560 -564.77136230]
[210.29829407 -568.88366699]
[225.39468384 -568.92333984]
[239.94165039 -564.88745117]
[252.85972595 -557.07550049]
[263.19027710 -546.06726074]
[270.16671753 -532.67950439]
[273.27139282 -517.90576172]
[272.27383423 -502.84231567]
[267.24813843 -488.60696411]
[258.56719971 -476.25610352]
[246.87522888 -466.70620728]
[233.03982544 -460.66598511]
[218.08769226 -458.58361816]
[216.08367920 -443.71807861]
[214.07966614 -428.85253906]
[212.07565308 -413.98703003]
[210.07164001 -399.12149048]
[208.06762695 -384.25598145]
[206.72938538 -369.31579590]
[206.05960083 -354.33074951]
[205.38981628 -339.34570312]
[204.72003174 -324.36065674]
[204.05024719 -309.37564087]
[203.38046265 -294.39059448]
[205.17045593 -292.23324585]
[206.21374512 -289.23690796]
[206.18647766 -285.68237305]
[204.87237549 -281.96246338]
[202.19837952 -278.54141235]
[200.63786316 -263.62280273]
[210.18737793 -252.24990845]
[208.81730652 -237.09809875]
[196.82363892 -227.15879822]
[195.26310730 -212.24018860]
[193.70259094 -197.32159424]
[203.09904480 -209.01374817]
[216.60049438 -215.54908752]
[231.60003662 -215.66572571]
[245.20150757 -209.34114075]
[254.77864075 -197.79652405]
[258.48226929 -183.26094055]
[255.59727478 -168.54100037]
[246.68069458 -156.47888184]
[233.45419312 -149.40359497]
[218.47160339 -148.68127441]
[204.62580872 -154.45137024]
[194.59022522 -165.59979248]
[190.30249023 -179.97520447]
[186.11547852 -165.57142639]
[181.92846680 -151.16764832]
[177.74145508 -136.76387024]
[190.84291077 -129.51445007]
[202.00791931 -119.52641296]
[210.67440796 -107.29829407]
[216.40509033 -93.44149780]
[218.90959167 -78.64975739]
[218.05914307 -63.66436768]
[213.89318848 -49.23707199]
[206.61755371 -36.09233093]
[196.59432983 -24.89093971]
[184.32380676 -16.19681931]
[170.41950989 -10.44862938]
[155.57757568 -7.93762636]
[140.54179382 -8.79291439]
[136.35478210 5.61086798]
[132.16778564 20.01465034]
[137.71699524 30.76326370]
[134.34661865 42.79755783]
[123.33822632 49.51903534]
[118.93723297 63.85888290]
[114.53623199 78.19873047]
[110.13523102 92.53857422]
[106.05556488 106.97312927]
[102.29926300 121.49518585]
[98.54296875 136.01724243]
[94.78666687 150.53930664]
[91.24699402 165.11567688]
[87.92473602 179.74314880]
[84.60247040 194.37060547]
[89.09109497 209.54171753]
[78.72707367 220.23921204]
[75.40480804 234.86666870]
[76.95038605 239.85247803]
[76.47634125 244.47076416]
[74.46087646 248.01377869]
[71.59378815 250.06613159]
[67.62168884 264.53063965]
[68.36691284 273.63464355]
[63.48128128 279.18011475]
[59.29426956 293.58389282]
[55.42996597 308.07760620]
[51.89029312 322.65396118]
[48.35062027 337.23034668]
[44.81094742 351.80673218]
[58.56018448 357.90576172]
[70.99931335 366.36199951]
[81.72848511 376.90356445]
[90.40277863 389.19161987]
[96.74337006 402.83114624]
[100.54643250 417.38369751]
[101.68970490 432.38143921]
[100.13643646 447.34231567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[27 200]
[28 199]
[32 198]
[33 197]
[34 195]
[35 194]
[36 190]
[37 189]
[39 187]
[40 186]
[41 185]
[44 184]
[45 183]
[46 182]
[47 181]
[51 180]
[52 179]
[53 178]
[54 177]
[56 174]
[57 173]
[58 172]
[71 159]
[72 158]
[73 157]
[74 156]
[75 143]
[76 142]
[77 141]
[80 138]
[81 137]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
