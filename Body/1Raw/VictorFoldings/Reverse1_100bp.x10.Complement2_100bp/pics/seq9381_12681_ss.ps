%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[66.31134033 634.09051514]
[52.27337265 639.39916992]
[37.85375595 643.56097412]
[23.14600563 646.54901123]
[8.24550915 648.34387207]
[-6.75109673 648.93389893]
[-21.74655151 648.31530762]
[-36.64360046 646.49206543]
[-51.34563446 643.47601318]
[-65.75730133 639.28674316]
[-79.78512573 633.95135498]
[-93.33814240 627.50445557]
[-106.32845306 619.98797607]
[-118.67180634 611.45050049]
[-130.28814697 601.94750977]
[-141.10214233 591.54058838]
[-151.04365540 580.29724121]
[-160.04820251 568.29040527]
[-168.05740356 555.59796143]
[-175.01930237 542.30212402]
[-180.88876343 528.48925781]
[-185.62768555 514.24884033]
[-189.20536804 499.67330933]
[-191.59860229 484.85714722]
[-192.79185486 469.89645386]
[-192.77740479 454.88824463]
[-191.55531311 439.92987061]
[-189.13354492 425.11834717]
[-185.52778625 410.54971313]
[-180.76141357 396.31848145]
[-174.86535645 382.51693726]
[-167.87785339 369.23455811]
[-159.84420776 356.55755615]
[-150.81652832 344.56808472]
[-140.85337830 333.34393311]
[-130.01934814 322.95785522]
[-118.38471985 313.47726440]
[-106.02494049 304.96362305]
[-93.02017212 297.47213745]
[-79.45475006 291.05139160]
[-65.41667175 285.74307251]
[-50.99695969 281.58154297]
[-36.28914261 278.59381104]
[-21.38860703 276.79928589]
[-6.39198780 276.20956421]
[8.60345268 276.82852173]
[23.50046349 278.65209961]
[38.20242691 281.66845703]
[42.38943863 267.26467896]
[46.57645035 252.86090088]
[50.76346207 238.45712280]
[54.95047379 224.05332947]
[49.85469055 207.26048279]
[63.25276184 194.62825012]
[67.22486115 180.16372681]
[71.19695282 165.69920349]
[75.16905212 151.23468018]
[73.90133667 148.73446655]
[73.54760742 145.58146667]
[74.36145782 142.12124634]
[76.46682739 138.78479004]
[79.83211517 136.04092407]
[84.65811920 121.83847809]
[89.48411560 107.63601685]
[93.88510895 93.29617310]
[97.85720825 78.83164978]
[101.82930756 64.36712646]
[93.86404419 53.50576401]
[93.61230469 40.23372269]
[100.94197845 29.40053368]
[112.99153137 24.83568764]
[117.17854309 10.43190575]
[120.28265381 -4.24339628]
[122.28666687 -19.10892487]
[124.29067993 -33.97445297]
[126.29469299 -48.83998108]
[128.29870605 -63.70550919]
[113.67518616 -67.09477234]
[99.43330383 -71.83852386]
[85.69821167 -77.89507294]
[72.59062958 -85.21120453]
[60.22574234 -93.72261047]
[48.71221924 -103.35449219]
[38.15124130 -114.02221680]
[28.63562012 -125.63201141]
[20.24898338 -138.08186340]
[13.06503487 -151.26235962]
[7.14690733 -165.05764771]
[2.54661155 -179.34652710]
[-0.69542450 -194.00338745]
[-2.55070877 -208.89944458]
[-3.00293684 -223.90377808]
[-2.04813409 -238.88452148]
[0.30530816 -253.71003723]
[4.03670740 -268.25000000]
[9.11327171 -282.37667847]
[15.49038601 -295.96591187]
[23.11200714 -308.89825439]
[31.91115570 -321.06005859]
[41.81050110 -332.34445190]
[52.72304535 -342.65225220]
[64.55288696 -351.89288330]
[77.19606781 -359.98513794]
[90.54146576 -366.85787964]
[104.47180939 -372.45074463]
[118.86466980 -376.71453857]
[133.59355164 -379.61184692]
[148.52903748 -381.11715698]
[163.53984070 -381.21725464]
[178.49407959 -379.91125488]
[193.26028442 -377.21066284]
[207.70874023 -373.13916016]
[221.71241760 -367.73257446]
[235.14830017 -361.03842163]
[247.89826965 -353.11550903]
[259.85028076 -344.03344727]
[270.89932251 -333.87210083]
[280.94830322 -322.72073364]
[289.90884399 -310.67736816]
[297.70227051 -297.84780884]
[304.26004028 -284.34484863]
[309.52453613 -270.28713989]
[313.44952393 -255.79820251]
[316.00045776 -241.00540161]
[317.15496826 -226.03871155]
[316.90289307 -211.02967834]
[315.24642944 -196.11021423]
[312.20013428 -181.41142273]
[307.79083252 -167.06246948]
[302.05718994 -153.18946838]
[295.04965210 -139.91435242]
[286.82980347 -127.35375977]
[277.46987915 -115.61808777]
[267.05209351 -104.81047058]
[255.66804504 -95.02589417]
[243.41777039 -86.35034943]
[230.40892029 -78.86006165]
[216.75582886 -72.62087250]
[202.57847595 -67.68761444]
[188.00144958 -64.10363007]
[173.15286255 -61.90042877]
[158.16322327 -61.09736252]
[143.16423035 -61.70149612]
[141.16021729 -46.83596802]
[139.15620422 -31.97043991]
[137.15219116 -17.10490990]
[135.14817810 -2.23938251]
[145.53631592 -13.06004524]
[159.91519165 -17.33178711]
[174.52621460 -13.93798351]
[185.55010986 -3.76576781]
[190.10522461 10.52586746]
[187.00090027 25.20112228]
[177.04856873 36.42392349]
[162.84976196 41.26065063]
[148.11601257 38.44700623]
[136.69868469 28.71845818]
[131.58232117 14.61891747]
[127.39530945 29.02269936]
[136.11753845 43.40190887]
[131.65342712 59.96652985]
[116.29383087 68.33921814]
[112.32173157 82.80374146]
[108.34963226 97.26827240]
[109.62722778 100.03544617]
[109.92618561 103.32864380]
[109.04975891 106.78629303]
[106.93749237 109.97918701]
[103.68656921 112.46202087]
[98.86057281 126.66447449]
[94.03457642 140.86692810]
[89.63357544 155.20677185]
[85.66147614 169.67129517]
[81.68938446 184.13581848]
[77.71728516 198.60034180]
[83.40698242 210.17576599]
[79.80082703 222.14152527]
[69.35425568 228.24034119]
[65.16724396 242.64413452]
[60.98023224 257.04791260]
[56.79322052 271.45169067]
[52.60620880 285.85546875]
[66.63415527 291.19055176]
[80.18731689 297.63711548]
[93.17779541 305.15335083]
[105.52133179 313.69052124]
[117.13788605 323.19326782]
[127.95210266 333.59994507]
[137.89385986 344.84304810]
[146.89868164 356.84970093]
[154.90817261 369.54202271]
[161.87036133 382.83764648]
[167.74011230 396.65042114]
[172.47935486 410.89071655]
[176.05735779 425.46615601]
[178.45092773 440.28228760]
[179.64450073 455.24295044]
[179.63037109 470.25115967]
[178.40863037 485.20956421]
[175.98718262 500.02111816]
[172.38172913 514.58984375]
[167.61567688 528.82116699]
[161.71994019 542.62286377]
[154.73271179 555.90539551]
[146.69935608 568.58258057]
[137.67195129 580.57226562]
[127.70903015 591.79663086]
[116.87523651 602.18292236]
[105.24081421 611.66375732]
[92.88121796 620.17767334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[54 175]
[55 174]
[56 173]
[57 172]
[62 171]
[63 170]
[64 169]
[65 164]
[66 163]
[67 162]
[71 159]
[72 158]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
