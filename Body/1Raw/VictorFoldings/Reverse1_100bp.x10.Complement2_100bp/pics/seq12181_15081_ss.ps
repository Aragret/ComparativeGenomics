%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[96.50600433 590.04522705]
[87.78768158 577.81939697]
[80.49307251 564.69427490]
[74.71390533 550.83496094]
[70.52286530 536.41564941]
[67.97264862 521.61779785]
[67.09533691 506.62747192]
[67.90195465 491.63317871]
[70.38237000 476.82345581]
[74.50537109 462.38458252]
[80.21912384 448.49816895]
[87.45176697 435.33880615]
[96.11233521 423.07199097]
[106.09191895 411.85202026]
[117.26502228 401.81997681]
[129.49111938 393.10202026]
[142.61643982 385.80780029]
[156.47595215 380.02905273]
[152.28894043 365.62527466]
[148.10192871 351.22149658]
[143.91491699 336.81768799]
[139.72790527 322.41390991]
[135.22029114 308.10723877]
[130.39428711 293.90478516]
[125.56829071 279.70233154]
[120.74229431 265.49987793]
[116.71972656 279.95043945]
[106.50982666 290.93942261]
[92.39351654 296.01187134]
[77.52441406 294.03457642]
[65.22431183 285.44927979]
[58.24108124 272.17395020]
[58.13479996 257.17431641]
[64.92920685 243.80137634]
[77.10642242 235.04263306]
[91.94601440 232.85484314]
[106.13278961 237.72674561]
[116.49739075 248.56997681]
[114.05165863 233.77070618]
[111.60593414 218.97143555]
[109.16020203 204.17216492]
[96.93997955 195.73405457]
[94.24884796 180.76033020]
[103.18236542 167.99984741]
[100.73664093 153.20057678]
[98.29091644 138.40130615]
[94.09887695 132.31454468]
[95.92065430 123.36362457]
[93.69553375 108.52957916]
[90.70075989 93.83157349]
[86.94445801 79.30951691]
[83.18816376 64.78746033]
[79.43186188 50.26539993]
[74.25315094 42.74085617]
[75.72945404 35.49914932]
[72.18978119 20.92277527]
[68.65010834 6.34639931]
[62.37103653 19.96892548]
[49.78141022 28.12375832]
[34.78226471 28.28403664]
[22.02125168 20.40009499]
[15.45250797 6.91485739]
[17.11143112 -7.99312592]
[26.48398399 -19.70445633]
[40.66598129 -24.59025002]
[55.26297379 -21.13658905]
[65.75205231 -10.41340351]
[64.19152832 -25.33200836]
[62.63100433 -40.25061417]
[56.39722443 -26.60729980]
[45.46939468 -16.33196640]
[31.46858788 -10.94889545]
[16.47174454 -11.25663567]
[2.70355678 -17.20953369]
[-7.79354715 -27.92451477]
[-13.46238422 -41.81207275]
[-13.46201611 -56.81207275]
[-7.79249763 -70.69935608]
[2.70513225 -81.41381836]
[16.47361183 -87.36604309]
[31.47047043 -87.67304993]
[45.47101212 -82.28929138]
[56.39833832 -72.01342010]
[62.63100433 -58.37165833]
[64.19152832 -73.29026031]
[65.75205231 -88.20886993]
[67.20146942 -103.13867950]
[68.53970337 -118.07886505]
[56.13626862 -124.85392761]
[47.27875519 -135.81150818]
[43.27877426 -149.27648926]
[44.70859909 -163.20654297]
[51.31950378 -175.50187683]
[62.08430099 -184.32179260]
[75.35680389 -188.36021423]
[76.91732788 -203.27882385]
[78.47785187 -218.19743347]
[64.33635712 -223.43852234]
[51.94301605 -232.03247070]
[42.07688904 -243.43905640]
[35.35816574 -256.94125366]
[32.20919037 -271.69030762]
[32.82790756 -286.75909424]
[37.17543030 -301.20034790]
[44.97846603 -314.10629272]
[55.74650955 -324.66564941]
[68.80267334 -332.21466064]
[83.32623291 -336.27874756]
[98.40423584 -336.60250854]
[113.08885193 -333.16552734]
[126.45700073 -326.18386841]
[137.66835022 -316.09643555]
[146.01814270 -303.53729248]
[150.98150635 -289.29595947]
[152.24642944 -274.26760864]
[149.73341370 -259.39700317]
[143.60041809 -245.61885071]
[134.23298645 -233.79930115]
[122.21993256 -224.68132019]
[108.31642914 -218.83808899]
[93.39645386 -216.63690186]
[91.83592987 -201.71830750]
[90.27540588 -186.79969788]
[104.03144073 -178.66813660]
[112.89646912 -165.30307007]
[115.05340576 -149.35217285]
[110.02013397 -134.00204468]
[98.75610352 -122.34162903]
[83.47988892 -116.74063110]
[82.14165497 -101.80044556]
[84.67587280 -94.85785675]
[80.67065430 -86.64834595]
[79.11013031 -71.72974396]
[77.54960632 -56.81113434]
[77.54960632 -41.81113434]
[79.11013031 -26.89253235]
[80.67065430 -11.97392654]
[83.22648621 2.80672693]
[86.76615906 17.38310242]
[90.30583191 31.95947838]
[93.95391846 46.50909805]
[97.71022034 61.03115845]
[101.46652222 75.55321503]
[105.22282410 90.07527924]
[112.75959778 77.10620117]
[126.82629395 71.89773560]
[140.99180603 76.83113098]
[148.77984619 89.65089417]
[146.62983704 104.49600983]
[135.52471924 114.57949066]
[120.54161835 115.29129791]
[108.52957916 106.30446625]
[110.75469971 121.13850403]
[113.09018707 135.95558167]
[115.53591156 150.75485229]
[117.98163605 165.55412292]
[130.54563904 174.76191711]
[132.81513977 189.80532837]
[123.95948029 201.72644043]
[126.40520477 216.52571106]
[128.85093689 231.32498169]
[131.29666138 246.12425232]
[134.94474792 260.67385864]
[139.77073669 274.87631226]
[144.59674072 289.07876587]
[149.42274475 303.28125000]
[153.34947205 306.72039795]
[155.36300659 310.90356445]
[155.50032043 314.97741699]
[154.13169861 318.22689819]
[158.31871033 332.63067627]
[162.50572205 347.03448486]
[166.69273376 361.43826294]
[170.87974548 375.84204102]
[185.67736816 373.29049683]
[200.66761780 372.41183472]
[215.66200256 373.21710205]
[230.47193909 375.69619751]
[244.91117859 379.81790161]
[258.79812622 385.53039551]
[271.95812988 392.76187134]
[284.22570801 401.42132568]
[295.44659424 411.39993286]
[305.47964478 422.57211304]
[314.19869995 434.79742432]
[321.49407959 447.92211914]
[327.27407837 461.78109741]
[331.46597290 476.20010376]
[334.01708984 490.99780273]
[334.89529419 505.98809814]
[334.08956909 520.98248291]
[331.61004639 535.79229736]
[327.48791504 550.23144531]
[321.77499390 564.11822510]
[314.54312134 577.27801514]
[305.88330078 589.54534912]
[295.90438843 600.76593018]
[284.73187256 610.79864502]
[272.50631714 619.51727295]
[259.38140869 626.81231689]
[245.52224731 632.59185791]
[231.10310364 636.78338623]
[216.30532837 639.33398438]
[201.31501770 640.21179199]
[186.32067871 639.40557861]
[171.51089478 636.92565918]
[157.07191467 632.80303955]
[143.18530273 627.08972168]
[130.02572632 619.85748291]
[117.75865936 611.19726562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 166]
[24 165]
[25 164]
[26 163]
[38 162]
[39 161]
[40 160]
[41 159]
[44 156]
[45 155]
[46 154]
[48 153]
[49 152]
[50 144]
[51 143]
[52 142]
[53 141]
[55 140]
[56 139]
[57 138]
[67 137]
[68 136]
[69 135]
[84 134]
[85 133]
[86 132]
[87 130]
[88 129]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
