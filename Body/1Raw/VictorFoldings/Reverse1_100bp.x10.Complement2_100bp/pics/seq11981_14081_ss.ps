%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[90.93483734 527.29309082]
[76.05306244 529.39855957]
[61.02429199 529.20758057]
[46.20082092 526.72460938]
[31.93013573 522.00787354]
[18.54676056 515.16784668]
[6.36442041 506.36492920]
[-4.33131266 495.80551147]
[-13.28971577 483.73706055]
[-20.30079079 470.44250488]
[-25.20018768 456.23348999]
[-27.87305832 441.44305420]
[-28.25674629 426.41796875]
[-26.34225845 411.51043701]
[-22.17447090 397.06985474]
[-15.85108376 383.43478394]
[-7.52032757 370.92483521]
[2.62251449 359.83325195]
[14.33967876 350.42004395]
[27.35649872 342.90588379]
[41.36783981 337.46685791]
[56.04526138 334.23052979]
[71.04469299 333.27276611]
[72.38293457 318.33258057]
[65.81195831 304.96575928]
[74.74959564 291.91091919]
[76.08782959 276.97073364]
[77.42606354 262.03054810]
[78.76429749 247.09034729]
[72.19332123 233.72354126]
[81.13095856 220.66868591]
[74.55998230 207.30187988]
[83.49761963 194.24702454]
[84.83585358 179.30683899]
[86.17408752 164.36665344]
[87.51232147 149.42646790]
[84.97810364 142.48388672]
[88.98332214 134.27438354]
[90.54384613 119.35577393]
[92.10437012 104.43717194]
[90.12500763 101.12741089]
[89.61414337 96.96125031]
[90.92154694 92.61409760]
[94.08222198 88.89253998]
[96.30733490 74.05849457]
[98.53245544 59.22445297]
[100.75756836 44.39040756]
[102.98268890 29.55636406]
[105.20780945 14.72232056]
[96.08528900 2.09625936]
[98.55319214 -12.91587257]
[110.64643097 -21.53499031]
[112.87154388 -36.36903381]
[115.09666443 -51.20307541]
[117.32177734 -66.03711700]
[110.18630981 -83.01258850]
[121.64544678 -96.30375671]
[123.64945984 -111.16928864]
[125.43192291 -126.06300354]
[126.99244690 -140.98161316]
[128.55296326 -155.90020752]
[120.66661835 -172.54013062]
[131.52084351 -186.32972717]
[132.85908508 -201.26991272]
[134.08605957 -216.21965027]
[135.20170593 -231.17810059]
[136.31735229 -246.13655090]
[137.43299866 -261.09500122]
[138.54864502 -276.05346680]
[139.66429138 -291.01190186]
[140.77993774 -305.97036743]
[141.89559937 -320.92883301]
[127.07910156 -323.32736206]
[112.52364349 -326.99072266]
[98.33699799 -331.89178467]
[84.62419128 -337.99426270]
[71.48674774 -345.25299072]
[59.02193832 -353.61419678]
[47.32204819 -363.01602173]
[36.47370529 -373.38879395]
[26.55722046 -384.65579224]
[17.64601898 -396.73352051]
[9.80607510 -409.53262329]
[3.09543467 -422.95828247]
[-2.43621850 -436.91116333]
[-6.74792910 -451.28790283]
[-9.80777454 -465.98205566]
[-11.59309959 -480.88488770]
[-12.09068680 -495.88601685]
[-11.29685211 -510.87438965]
[-9.21747303 -525.73901367]
[-5.86794472 -540.36987305]
[-1.27306581 -554.65863037]
[4.53314352 -568.49951172]
[11.50769615 -581.78997803]
[19.59895325 -594.43170166]
[28.74700928 -606.33105469]
[38.88413620 -617.39996338]
[49.93527603 -627.55639648]
[61.81861115 -636.72521973]
[74.44615936 -644.83862305]
[87.72443390 -651.83636475]
[101.55512238 -657.66674805]
[115.83582306 -662.28662109]
[130.46080017 -665.66174316]
[145.32179260 -667.76708984]
[160.30874634 -668.58715820]
[175.31072998 -668.11578369]
[190.21664429 -666.35650635]
[204.91615295 -663.32238770]
[219.30039978 -659.03576660]
[233.26290894 -653.52856445]
[246.70030212 -646.84136963]
[259.51306152 -639.02386475]
[271.60638428 -630.13378906]
[282.89068604 -620.23699951]
[293.28244019 -609.40679932]
[302.70468140 -597.72338867]
[311.08767700 -585.27319336]
[318.36935425 -572.14843750]
[324.49581909 -558.44635010]
[329.42166138 -544.26831055]
[333.11047363 -529.71923828]
[335.53491211 -514.90698242]
[336.67703247 -499.94113159]
[336.52835083 -484.93249512]
[335.09002686 -469.99218750]
[332.37265015 -455.23083496]
[328.39636230 -440.75772095]
[323.19064331 -426.68002319]
[316.79397583 -413.10195923]
[309.25372314 -400.12405396]
[300.62576294 -387.84237671]
[290.97390747 -376.34786987]
[280.36968994 -365.72564697]
[268.89154053 -356.05435181]
[256.62451172 -347.40557861]
[243.65939331 -339.84335327]
[230.09217834 -333.42367554]
[216.02333069 -328.19409180]
[201.55697632 -324.19329834]
[186.80026245 -321.45092773]
[171.86241150 -319.98727417]
[156.85404968 -319.81317139]
[155.73840332 -304.85470581]
[154.62275696 -289.89627075]
[153.50709534 -274.93780518]
[152.39144897 -259.97937012]
[151.27580261 -245.02090454]
[150.16015625 -230.06245422]
[149.04450989 -215.10398865]
[151.68180847 -208.19990540]
[147.79925537 -199.93167114]
[146.46102905 -184.99148560]
[153.97413635 -175.51100159]
[152.98150635 -163.05313110]
[143.47157288 -154.33969116]
[141.91105652 -139.42108154]
[140.35052490 -124.50247955]
[142.60865784 -120.29416656]
[142.24711609 -114.62263489]
[138.51498413 -109.16527557]
[136.51097107 -94.29974365]
[143.59326172 -84.49323273]
[142.04534912 -72.09210968]
[132.15582275 -63.81200409]
[129.93070984 -48.97795868]
[127.70558929 -34.14391708]
[125.48047638 -19.30987167]
[134.51263428 -7.52193022]
[132.46737671 7.55359745]
[120.04184723 16.94743729]
[117.81673431 31.78148079]
[115.59161377 46.61552429]
[113.36650085 61.44956970]
[111.14138031 76.28361511]
[108.91626740 91.11765289]
[107.02297211 105.99768829]
[105.46244812 120.91629791]
[103.90192413 135.83489990]
[102.45250702 150.76470947]
[101.11427307 165.70489502]
[99.77603912 180.64508057]
[98.43780518 195.58526611]
[104.91306305 210.02069092]
[96.07114410 222.00692749]
[102.54640198 236.44235229]
[93.70448303 248.42858887]
[92.36624908 263.36877441]
[91.02801514 278.30895996]
[89.68978119 293.24914551]
[96.16503143 307.68457031]
[87.32311249 319.67080688]
[85.98487854 334.61099243]
[100.57532501 338.21923828]
[114.44393921 344.01251221]
[127.26561737 351.85501099]
[138.73980713 361.56289673]
[148.59753418 372.90863037]
[156.60772705 385.62625122]
[162.58259583 399.41760254]
[166.38211060 413.95941162]
[167.91717529 428.91079712]
[167.15182495 443.92126465]
[164.10398865 458.63897705]
[158.84512329 472.71893311]
[151.49848938 485.83105469]
[142.23631287 497.66796875]
[131.27572632 507.95220947]
[118.87362671 516.44268799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 194]
[24 193]
[26 191]
[27 190]
[28 189]
[29 188]
[31 186]
[33 184]
[34 183]
[35 182]
[36 181]
[38 180]
[39 179]
[40 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[52 169]
[53 168]
[54 167]
[55 166]
[57 163]
[58 162]
[59 159]
[60 158]
[61 157]
[63 154]
[64 153]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
