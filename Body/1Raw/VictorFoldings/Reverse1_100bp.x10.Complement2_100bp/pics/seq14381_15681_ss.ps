%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[111.24739838 558.45544434]
[108.80167389 543.65612793]
[106.35594940 528.85687256]
[103.91021729 514.05761719]
[101.46449280 499.25833130]
[99.01876068 484.45907593]
[93.35534668 498.34884644]
[82.58864594 508.79287720]
[68.53304291 514.03118896]
[53.55715561 513.18109131]
[40.18468094 506.38571167]
[30.66911507 494.79028320]
[26.61400032 480.34881592]
[28.70269394 465.49493408]
[36.58321381 452.73181152]
[48.92755508 444.21023560]
[63.65547943 441.36624146]
[78.28507233 444.67910767]
[90.35099030 453.59054565]
[97.82042694 466.60040283]
[87.45148468 455.96926880]
[87.69081879 440.75750732]
[98.91201782 429.95370483]
[99.35861969 414.96035767]
[99.80522919 399.96701050]
[100.25183105 384.97366333]
[100.36350250 369.97406006]
[100.14017487 354.97573853]
[99.91684723 339.97738647]
[99.69351959 324.97906494]
[99.47019196 309.98071289]
[88.36617279 294.15075684]
[98.45380402 276.69790649]
[97.78401947 261.71286011]
[97.11423492 246.72781372]
[96.44445038 231.74278259]
[95.77466583 216.75773621]
[95.10488129 201.77270508]
[94.43509674 186.78765869]
[84.54691315 181.09643555]
[78.57209778 171.23655701]
[78.09391785 159.59759521]
[83.34675598 149.06628418]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[80.81338501 46.94315338]
[80.80055237 31.72952652]
[91.32662964 21.25396729]
[91.10330200 6.25562906]
[82.40866852 -3.27149892]
[82.53142548 -15.76824665]
[90.86038208 -24.54064941]
[90.86038208 -39.54064941]
[90.86038208 -54.54064941]
[90.86038208 -69.54064941]
[82.05373383 -71.79975891]
[73.82398224 -75.64805603]
[66.45484161 -80.95012665]
[60.19987106 -87.52046967]
[55.27371216 -95.12999725]
[51.84474182 -103.51404572]
[50.02930450 -112.38153839]
[49.88778305 -121.42512512]
[51.42258453 -130.33181763]
[54.57814407 -138.79383850]
[59.24292374 -146.51922607]
[65.25337982 -153.24194336]
[72.39965057 -158.73101807]
[80.43294525 -162.79847717]
[89.07414246 -165.30578613]
[98.02352142 -166.16857910]
[100.24863434 -181.00262451]
[102.47375488 -195.83666992]
[104.69886780 -210.67071533]
[99.09430695 -225.46595764]
[108.63397980 -236.90466309]
[110.85910034 -251.73870850]
[101.73657990 -264.36477661]
[104.20448303 -279.37689209]
[116.29772186 -287.99603271]
[118.52284241 -302.83004761]
[120.74795532 -317.66409302]
[122.97307587 -332.49813843]
[125.19818878 -347.33218384]
[127.42330933 -362.16622925]
[129.64842224 -377.00027466]
[116.21817780 -370.31982422]
[102.55776215 -376.51602173]
[98.73712921 -391.02130127]
[107.57270050 -403.14288330]
[122.55123138 -403.94519043]
[132.63061523 -392.83837891]
[135.95288086 -407.46585083]
[139.27514648 -422.09329224]
[142.59739685 -436.72076416]
[129.06446838 -443.35073853]
[117.42567444 -452.92337036]
[108.30868530 -464.92242432]
[102.20516968 -478.70080566]
[99.44428253 -493.51544189]
[100.17491913 -508.56747437]
[104.35766602 -523.04510498]
[111.76696777 -536.16754150]
[122.00323486 -547.22717285]
[134.51445007 -555.62756348]
[148.62590027 -560.91564941]
[163.57655334 -562.80627441]
[178.56016541 -561.19744873]
[192.76866150 -556.17602539]
[205.43582153 -548.01269531]
[215.87852478 -537.14776611]
[223.53356934 -524.16711426]
[227.98817444 -509.77081299]
[229.00207520 -494.73522949]
[226.52061462 -479.87121582]
[220.67761230 -465.98034668]
[211.78816223 -453.81176758]
[200.33166504 -444.02169800]
[186.92594910 -437.13812256]
[172.29399109 -433.53222656]
[157.22485352 -433.39849854]
[153.90260315 -418.77105713]
[150.58033752 -404.14358521]
[147.25808716 -389.51611328]
[144.48246765 -374.77517700]
[142.25735474 -359.94113159]
[140.03224182 -345.10708618]
[137.80711365 -330.27304077]
[135.58200073 -315.43899536]
[133.35688782 -300.60494995]
[131.13175964 -285.77090454]
[140.16392517 -273.98297119]
[138.11866760 -258.90744019]
[125.69314575 -249.51359558]
[123.46802521 -234.67955017]
[129.23175049 -220.94532776]
[119.53291321 -208.44560242]
[117.30780029 -193.61155701]
[115.08267975 -178.77751160]
[112.85756683 -163.94346619]
[131.42619324 -153.21446228]
[143.55418396 -135.47599792]
[146.82626343 -114.19515228]
[140.56248474 -93.55079651]
[125.95912170 -77.61300659]
[105.86038208 -69.54064941]
[105.86038208 -54.54064941]
[105.86038208 -39.54064941]
[105.86038208 -24.54064941]
[115.44107819 -9.83768177]
[106.10163879 6.03230143]
[106.32496643 21.03063965]
[117.15827179 31.18815422]
[117.59841156 46.39542007]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[122.21517944 154.75413513]
[122.56439972 173.37644958]
[109.42013550 186.11787415]
[110.08992004 201.10292053]
[110.75970459 216.08795166]
[111.42948914 231.07299805]
[112.09927368 246.05802917]
[112.76905823 261.04306030]
[113.43884277 276.02810669]
[121.87659454 282.89199829]
[125.07794189 293.05722046]
[122.21622467 303.09509277]
[114.46852875 309.75738525]
[114.69185638 324.75573730]
[114.91518402 339.75405884]
[115.13851166 354.75241089]
[115.36183929 369.75073242]
[118.04030609 374.23101807]
[118.66946411 378.83074951]
[117.54699707 382.74929810]
[115.24518585 385.42025757]
[114.79857635 400.41360474]
[114.35197449 415.40695190]
[113.90536499 430.40029907]
[124.46361542 441.85287476]
[123.79710388 457.05191040]
[112.81377411 467.04699707]
[113.81803131 482.01333618]
[116.26376343 496.81262207]
[118.70948792 511.61187744]
[121.15522003 526.41113281]
[123.60094452 541.21044922]
[126.04666901 556.00970459]
[140.70841980 560.25183105]
[152.07186890 570.44177246]
[157.88078308 584.55627441]
[156.98182678 599.79290771]
[149.55345154 613.12640381]
[137.07060242 621.90942383]
[122.01173401 624.39801025]
[107.36680603 620.09814453]
[96.04357147 609.86358643]
[90.29027557 595.72631836]
[91.24923706 580.49334717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[20 193]
[23 190]
[24 189]
[25 188]
[26 187]
[27 183]
[28 182]
[29 181]
[30 180]
[31 179]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[44 166]
[45 165]
[46 164]
[48 162]
[49 161]
[50 160]
[53 157]
[54 156]
[57 154]
[58 153]
[59 152]
[60 151]
[76 145]
[77 144]
[78 143]
[79 142]
[81 140]
[82 139]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
