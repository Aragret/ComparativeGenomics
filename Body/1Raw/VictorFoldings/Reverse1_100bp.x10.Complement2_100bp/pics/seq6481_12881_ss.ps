%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[165.27528381 654.67132568]
[149.48675537 653.96563721]
[138.88339233 642.24621582]
[139.75596619 626.46606445]
[151.58682251 615.98718262]
[152.25660706 601.00213623]
[152.92639160 586.01708984]
[139.76869202 576.20117188]
[135.00680542 560.31768799]
[140.70713806 544.56939697]
[154.80946350 535.23022461]
[155.25605774 520.23687744]
[155.70266724 505.24353027]
[156.14927673 490.25015259]
[156.59588623 475.25680542]
[157.04248047 460.26345825]
[157.48908997 445.27011108]
[154.54614258 438.49066162]
[158.05561829 430.05731201]
[158.72540283 415.07229614]
[157.49842834 400.12255859]
[154.39431763 385.44726562]
[151.29020691 370.77194214]
[148.18609619 356.09664917]
[145.08198547 341.42135620]
[141.97787476 326.74603271]
[124.49948120 320.12799072]
[114.46126556 304.18548584]
[116.07270050 285.26428223]
[128.86297607 271.02542114]
[125.10667419 256.50338745]
[121.35037231 241.98130798]
[117.59407043 227.45925903]
[113.83776855 212.93719482]
[111.49360657 211.39999390]
[109.61709595 208.84159851]
[108.60025787 205.43551636]
[108.76511383 201.49375916]
[110.31768036 197.43870544]
[107.43241119 182.71881104]
[103.06100464 176.75956726]
[104.61547089 167.75837708]
[101.94967651 152.99716187]
[99.28388214 138.23594666]
[96.61808777 123.47472382]
[93.95228577 108.71350861]
[90.73901367 94.06172180]
[86.98271179 79.53965759]
[83.22641754 65.01760101]
[78.04769897 57.49305725]
[79.52400970 50.25135040]
[68.74868774 38.66675186]
[73.26411438 24.47308731]
[69.72444153 9.89671135]
[66.18476868 -4.67966413]
[62.64509583 -19.25603867]
[59.10542297 -33.83241653]
[55.56575012 -48.40879059]
[52.02607727 -62.98516464]
[46.95996857 -70.58597565]
[48.54393387 -77.80490112]
[45.22167206 -92.43235779]
[41.14200592 -106.86691284]
[36.31600952 -121.06936646]
[31.49001122 -135.27182007]
[26.66401291 -149.47427368]
[21.83801460 -163.67674255]
[10.63438702 -170.06747437]
[6.90718889 -181.99607849]
[12.13392448 -192.90515137]
[7.51991510 -207.17788696]
[2.90590549 -221.45062256]
[-8.70119762 -232.20170593]
[-5.25395250 -246.69189453]
[-9.86796188 -260.96463013]
[-14.48197079 -275.23736572]
[-19.09597969 -289.51010132]
[-33.97927475 -287.36636353]
[-49.01077271 -287.76892090]
[-63.75799179 -290.70620728]
[-77.79661560 -296.09368896]
[-90.72274017 -303.77636719]
[-102.16444397 -313.53317261]
[-111.79252625 -325.08340454]
[-119.32997894 -338.09475708]
[-124.55991364 -352.19281006]
[-127.33187866 -366.97201538]
[-127.56610107 -382.00708008]
[-125.25585175 -396.86541748]
[-120.46759796 -411.11956787]
[-113.33911133 -424.35937500]
[-104.07547760 -436.20391846]
[-92.94325256 -446.31240845]
[-80.26271057 -454.39398193]
[-66.39871216 -460.21615601]
[-51.75014877 -463.61138916]
[-36.73848343 -464.48196411]
[-21.79563713 -462.80288696]
[-7.35154200 -458.62243652]
[6.17821598 -452.06091309]
[18.40435791 -443.30709839]
[28.97511292 -432.61282349]
[37.58634186 -420.28582764]
[43.99028015 -406.68078613]
[48.00267029 -392.18911743]
[49.50807571 -377.22775269]
[48.46317673 -362.22723389]
[44.89804077 -347.61907959]
[38.91524124 -333.82363892]
[30.68691635 -321.23782349]
[20.44981194 -310.22375488]
[8.49846935 -301.09832764]
[-4.82324696 -294.12411499]
[-0.20923780 -279.85137939]
[4.40477133 -265.57864380]
[9.01878071 -251.30590820]
[20.29585838 -241.57571411]
[17.17863846 -226.06463623]
[21.79264832 -211.79190063]
[26.40665817 -197.51916504]
[40.04547882 -186.47608948]
[36.04047012 -168.50273132]
[40.86647034 -154.30027771]
[45.69246674 -140.09782410]
[50.51846313 -125.89537048]
[55.34446335 -111.69290924]
[61.89577103 -125.18663025]
[75.53611755 -131.42689514]
[90.02931976 -127.56074524]
[98.74928284 -115.35573578]
[97.70935059 -100.39183044]
[87.38497162 -89.51032257]
[72.49631500 -87.68608856]
[59.84913254 -95.75462341]
[63.17139053 -81.12715912]
[66.60245514 -66.52484131]
[70.14212799 -51.94846344]
[73.68180084 -37.37208557]
[77.22147369 -22.79571152]
[80.76114655 -8.21933651]
[84.30081940 6.35703850]
[87.84048462 20.93341446]
[98.36263275 31.47541237]
[94.10038757 46.71168137]
[97.74847412 61.26129913]
[101.50477600 75.78335571]
[105.26107788 90.30541992]
[115.00681305 78.90276337]
[130.00256348 79.26017761]
[139.19400024 91.11418152]
[135.80554199 105.72644806]
[122.33504486 112.32536316]
[108.71350861 106.04771423]
[111.37930298 120.80892944]
[114.04509735 135.57014465]
[116.71089172 150.33135986]
[119.37668610 165.09257507]
[122.15229797 179.83354187]
[125.03757477 194.55343628]
[128.35983276 209.18089294]
[132.11613464 223.70295715]
[135.87243652 238.22500610]
[139.62873840 252.74707031]
[143.38504028 267.26913452]
[154.61933899 269.55053711]
[164.14794922 275.83111572]
[170.61538696 285.17160034]
[173.11875916 296.20074463]
[171.33375549 307.31668091]
[165.55606079 316.91961670]
[156.65318298 323.64193726]
[159.75729370 338.31723022]
[162.86138916 352.99252319]
[165.96549988 367.66784668]
[169.06961060 382.34313965]
[172.17372131 397.01843262]
[176.40725708 382.62826538]
[185.03009033 370.35443115]
[197.13221741 361.49224854]
[211.43647766 356.97692871]
[226.43331909 357.28500366]
[240.54006958 362.38397217]
[252.26803589 371.73571777]
[260.37951660 384.35330200]
[264.01849365 398.90521240]
[262.80093384 413.85571289]
[256.85534668 427.62704468]
[246.80915833 438.76593018]
[233.72257996 446.09680176]
[218.97668457 448.84600830]
[204.12760925 446.72348022]
[190.74243164 439.95315552]
[180.23373413 429.24957275]
[173.71043396 415.74206543]
[173.04064941 430.72711182]
[172.48243713 445.71673584]
[172.03584290 460.71008301]
[171.58923340 475.70343018]
[171.14262390 490.69677734]
[170.69601440 505.69012451]
[170.24942017 520.68347168]
[169.80281067 535.67681885]
[181.30493164 543.27233887]
[187.50283813 555.46270752]
[186.87295532 569.01525879]
[179.68664551 580.39514160]
[167.91142273 586.68688965]
[167.24163818 601.67193604]
[166.57185364 616.65698242]
[177.42063904 628.14953613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[19 195]
[20 194]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[39 159]
[40 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 147]
[48 146]
[49 145]
[51 144]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[61 135]
[62 134]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[70 120]
[71 119]
[72 118]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
