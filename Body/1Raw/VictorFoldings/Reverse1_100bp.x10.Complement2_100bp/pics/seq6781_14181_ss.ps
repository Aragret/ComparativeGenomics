%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[111.26985931 535.46093750]
[114.65446472 520.72875977]
[122.23251343 507.64962769]
[133.33018494 497.38641357]
[146.96064758 490.85177612]
[137.42097473 479.41308594]
[143.02554321 464.61782837]
[140.80043030 449.78378296]
[138.57530212 434.94973755]
[124.66426086 429.62542725]
[115.22323608 417.97540283]
[112.86554718 403.06539917]
[118.32330322 388.88409424]
[130.22419739 379.27597046]
[127.99908447 364.44192505]
[125.77397156 349.60787964]
[116.01037598 360.99526978]
[101.06556702 362.28088379]
[89.50061798 352.72830200]
[87.94045258 337.80966187]
[97.27880859 326.07104492]
[112.16624451 324.23684692]
[124.07408142 333.35699463]
[123.18126678 318.38357544]
[122.28845215 303.41018677]
[121.39563751 288.43676758]
[120.50282288 273.46337891]
[119.61000824 258.48995972]
[118.71718597 243.51655579]
[110.23606873 231.27238464]
[117.13824463 217.03614807]
[116.24542999 202.06272888]
[113.68959808 187.28208923]
[109.50258636 172.87829590]
[105.31557465 158.47451782]
[95.91365814 170.16227722]
[80.91392517 170.25151062]
[71.37361908 158.67642212]
[74.32550812 143.96974182]
[87.59355927 136.97268677]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[80.82461548 45.58681107]
[77.72050476 30.91150856]
[74.61639404 16.23620605]
[59.78237915 6.96413994]
[56.31213379 -9.83682060]
[65.87475586 -23.67138100]
[62.55249786 -38.29883957]
[59.23023605 -52.92630005]
[55.90797806 -67.55376434]
[40.06362152 -72.28115082]
[28.82966805 -84.28506470]
[25.20313072 -100.22447968]
[30.08149338 -115.72795105]
[42.04293442 -126.59239960]
[38.50326538 -141.16877747]
[34.96359253 -155.74514771]
[31.31550407 -170.29476929]
[27.55920219 -184.81683350]
[23.80290222 -199.33889771]
[19.61589050 -213.74267578]
[15.00188160 -228.01541138]
[3.39477849 -238.76649475]
[6.84202337 -253.25668335]
[2.22801423 -267.52941895]
[-2.38599515 -281.80215454]
[-7.00000429 -296.07489014]
[-18.60710716 -306.82595825]
[-15.15986252 -321.31616211]
[-19.77387238 -335.58889771]
[-24.38788033 -349.86163330]
[-29.00189018 -364.13436890]
[-43.90955734 -362.13403320]
[-58.93481064 -362.82794189]
[-73.59465027 -366.19378662]
[-87.41783142 -372.12332153]
[-99.95998383 -380.42599487]
[-110.81793976 -390.83486938]
[-119.64265442 -403.01535034]
[-126.15044403 -416.57589722]
[-130.13212585 -431.08056641]
[-131.45970154 -446.06314087]
[-130.09046936 -461.04196167]
[-126.06848907 -475.53552246]
[-119.52301788 -489.07794189]
[-110.66446686 -501.23382568]
[-99.77761841 -511.61248779]
[-87.21243286 -519.88024902]
[-73.37281799 -525.77130127]
[-58.70367813 -529.09637451]
[-43.67655182 -529.74853516]
[-28.77450371 -527.70678711]
[-14.47657394 -523.03674316]
[-1.24238074 -515.88861084]
[10.50265121 -506.49212646]
[20.38096809 -495.14935303]
[28.07502365 -482.22491455]
[33.33748245 -468.13424683]
[35.99918365 -453.33035278]
[35.97455978 -438.28912354]
[33.26440430 -423.49401855]
[27.95583725 -409.42068481]
[20.21950722 -396.52148438]
[10.30410480 -385.21112061]
[-1.47163033 -375.85314941]
[-14.72915745 -368.74838257]
[-10.11514759 -354.47564697]
[-5.50113869 -340.20291138]
[-0.88712919 -325.93017578]
[10.38994884 -316.19998169]
[7.27272892 -300.68890381]
[11.88673878 -286.41616821]
[16.50074768 -272.14343262]
[21.11475754 -257.87069702]
[32.39183426 -248.14048767]
[29.27461433 -232.62940979]
[33.88862610 -218.35668945]
[36.32013321 -216.96173096]
[38.34558868 -214.51956177]
[39.56335831 -211.18003845]
[39.63341522 -207.23547363]
[38.32496262 -203.09519958]
[42.08126068 -188.57313538]
[45.83756256 -174.05107117]
[50.55591583 -168.36257935]
[49.53996658 -159.28482056]
[53.07963943 -144.70845032]
[56.61931229 -130.13208008]
[69.94903564 -127.15959930]
[80.74946594 -118.69323730]
[86.87770844 -106.34035492]
[87.08674622 -92.48630524]
[81.27877808 -79.83388519]
[70.53543854 -70.87602234]
[73.85769653 -56.24856186]
[77.17995453 -41.62110138]
[80.50221252 -26.99364090]
[92.25869751 -21.71968651]
[98.93057251 -10.46943569]
[97.88932037 2.76409149]
[89.29170227 13.13209629]
[92.39581299 27.80739975]
[95.49992371 42.48270035]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.71936035 154.28750610]
[123.90637207 168.69128418]
[128.09338379 183.09507751]
[131.58291626 168.50660706]
[140.04669189 156.12257385]
[152.37117004 147.57229614]
[166.93484497 143.98069763]
[181.82160950 145.82034302]
[195.07286072 152.84916687]
[204.94515991 164.14242554]
[210.13964844 178.21427917]
[209.97288513 193.21336365]
[204.46682739 207.16625977]
[194.34590149 218.23722839]
[180.94165039 224.96971130]
[166.01766968 226.47792053]
[151.53744507 222.56343079]
[139.40611267 213.74125671]
[131.21884155 201.16992188]
[132.11164856 216.14332581]
[140.65663147 229.45849609]
[133.69059753 242.62373352]
[134.58340454 257.59713745]
[135.47622681 272.57055664]
[136.36904907 287.54394531]
[137.26185608 302.51736450]
[138.15467834 317.49075317]
[139.04748535 332.46417236]
[140.60801697 347.38278198]
[142.83312988 362.21682739]
[145.05824280 377.05087280]
[159.25440979 382.74438477]
[168.63276672 394.70028687]
[170.75341797 409.64581299]
[165.14601135 423.55313110]
[153.40934753 432.72460938]
[155.63447571 447.55865479]
[157.85958862 462.39270020]
[167.55841064 474.89242554]
[161.79469299 488.62664795]
[176.74255371 490.87454224]
[190.36302185 497.42999268]
[201.44499207 507.71014404]
[209.00305176 520.80090332]
[212.36514282 535.53814697]
[211.23229980 550.61157227]
[205.70527649 564.68084717]
[196.27552795 576.49487305]
[183.78152466 585.00317383]
[169.33424377 589.44921875]
[154.21832275 589.43768311]
[139.77784729 584.96954346]
[127.29685974 576.44213867]
[117.88516998 564.61370850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[7 194]
[8 193]
[9 192]
[14 187]
[15 186]
[16 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[31 176]
[32 175]
[33 159]
[34 158]
[35 157]
[41 156]
[42 155]
[43 154]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[53 143]
[54 142]
[55 141]
[56 140]
[61 134]
[62 133]
[63 132]
[64 130]
[65 129]
[66 128]
[67 123]
[68 122]
[70 120]
[71 119]
[72 118]
[73 117]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
