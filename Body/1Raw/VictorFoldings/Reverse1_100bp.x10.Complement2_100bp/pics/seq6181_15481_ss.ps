%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[57.99008560 688.80078125]
[46.72814560 678.84747314]
[37.11765289 667.29156494]
[29.38388634 654.40399170]
[23.70813560 640.48687744]
[20.22345161 625.86639404]
[19.01152039 610.88537598]
[20.10074806 595.89489746]
[23.46560478 581.24639893]
[29.02721024 567.28326416]
[36.65519714 554.33282471]
[46.17074966 542.69860840]
[57.35081100 532.65338135]
[69.93331146 524.43261719]
[83.62328339 518.22900391]
[98.09983063 514.18792725]
[96.31736755 499.29421997]
[87.12248993 487.57656860]
[93.16507721 472.95474243]
[91.38261414 458.06103516]
[89.60015106 443.16732788]
[87.81768036 428.27359009]
[86.03521729 413.37988281]
[79.10931396 426.68521118]
[66.84635925 435.32348633]
[51.98591995 437.36489868]
[37.84785843 432.35339355]
[27.59065628 421.40853882]
[23.50579834 406.97546387]
[26.50584984 392.27853394]
[35.92059326 380.60107422]
[49.64674759 374.55191040]
[64.61785889 375.48239136]
[77.48934174 383.18466187]
[85.38568115 395.93801880]
[86.05546570 380.95297241]
[86.72525024 365.96795654]
[87.39504242 350.98291016]
[88.06482697 335.99786377]
[88.73461151 321.01281738]
[89.40439606 306.02780151]
[90.07418060 291.04275513]
[82.91290283 277.98269653]
[91.25868988 264.54177856]
[91.92847443 249.55673218]
[92.59825897 234.57168579]
[93.26805115 219.58665466]
[93.93783569 204.60160828]
[94.60762024 189.61657715]
[94.71928406 174.61698914]
[94.27268219 159.62364197]
[93.82607269 144.63027954]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[90.85903931 70.95626068]
[89.52079773 56.01607513]
[88.18256378 41.07588959]
[86.84432983 26.13570404]
[75.58312225 18.74653625]
[70.70497894 6.40092421]
[73.78240204 -6.31172943]
[83.47410583 -14.80292606]
[82.35845947 -29.76137924]
[81.24280548 -44.71983337]
[69.55038452 -55.01182175]
[68.63204956 -70.19771576]
[78.51594543 -81.28122711]
[77.40029144 -96.23967743]
[76.28464508 -111.19812775]
[70.46523285 -97.37299347]
[61.03127670 -85.71106720]
[48.72677231 -77.13207245]
[34.52211380 -72.31256866]
[19.53752899 -71.63265228]
[4.95477295 -75.14594269]
[-8.07610130 -82.57536316]
[-18.52742386 -93.33500671]
[-25.57495880 -106.57631683]
[-28.66290855 -121.25502777]
[-27.54774666 -136.21351624]
[-22.31741714 -150.27209473]
[-13.38440514 -162.32205200]
[-1.45320702 -171.41305542]
[12.53523445 -176.82817078]
[27.47773170 -178.14035034]
[42.19585800 -175.24607849]
[55.52887726 -168.37362671]
[66.42529297 -158.06498718]
[74.02577972 -145.13313293]
[77.73128510 -130.59449768]
[81.05355072 -145.22195435]
[84.37580872 -159.84941101]
[87.69806671 -174.47686768]
[73.80725861 -180.23478699]
[61.08944702 -188.25758362]
[49.91053772 -198.31442261]
[40.59217453 -210.11595154]
[33.40246201 -223.32261658]
[28.54826927 -237.55444336]
[26.16925430 -252.40193176]
[26.33386993 -267.43792725]
[29.03738022 -282.22979736]
[34.20199585 -296.35192871]
[41.67912674 -309.39801025]
[51.25363541 -320.99270630]
[62.65004349 -330.80236816]
[75.54045868 -338.54479980]
[89.55399323 -343.99722290]
[104.28745270 -347.00274658]
[119.31693268 -347.47488403]
[134.20999146 -345.40008545]
[148.53813171 -340.83804321]
[161.88909912 -333.91998291]
[173.87878418 -324.84497070]
[184.16218567 -313.87411499]
[192.44345093 -301.32308960]
[198.48429871 -287.55294800]
[202.11093140 -272.95996094]
[203.21900940 -257.96395874]
[201.77662659 -242.99641418]
[197.82531738 -228.48796082]
[191.47874451 -214.85604858]
[182.91950989 -202.49288940]
[172.39389038 -191.75421143]
[160.20472717 -182.94895935]
[146.70272827 -176.33050537]
[132.27636719 -172.08926392]
[117.34072113 -170.34725952]
[102.32552338 -171.15461731]
[99.00326538 -156.52716064]
[95.68100739 -141.89968872]
[92.35874939 -127.27223206]
[91.24309540 -112.31378174]
[92.35874939 -97.35532379]
[93.47439575 -82.39687347]
[104.89308167 -72.90217590]
[106.23759460 -57.74806976]
[96.20126343 -45.83547974]
[97.31690979 -30.87702751]
[98.43255615 -15.91857433]
[111.63338470 -5.49854708]
[113.24526215 11.58116913]
[101.78451538 24.79747009]
[103.12274933 39.73765564]
[104.46098328 54.67784119]
[105.79921722 69.61802673]
[108.25592804 72.14723969]
[109.60964966 75.99204254]
[109.25537872 80.62105560]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.81941986 144.18368530]
[109.26602936 159.17703247]
[109.71263123 174.17037964]
[121.74183655 165.20944214]
[136.28598022 168.87930298]
[142.62367249 182.47465515]
[136.08299255 195.97352600]
[121.48549652 199.42504883]
[109.59265900 190.28636169]
[108.92287445 205.27139282]
[108.25308990 220.25643921]
[107.58329773 235.24147034]
[106.91351318 250.22651672]
[106.24372864 265.21154785]
[113.35710144 279.34344482]
[105.05921936 291.71252441]
[104.38943481 306.69757080]
[103.71965027 321.68261719]
[103.04986572 336.66766357]
[102.38008118 351.65267944]
[101.71028900 366.63772583]
[101.04050446 381.62277222]
[100.37071991 396.60781860]
[100.92893219 411.59741211]
[102.71140289 426.49111938]
[104.49386597 441.38485718]
[106.27632904 456.27856445]
[108.05879974 471.17227173]
[117.38116455 483.95523071]
[111.21108246 497.51177979]
[112.99354553 512.40545654]
[128.01484680 512.91625977]
[142.78211975 515.71417236]
[156.94918823 520.73358154]
[170.18395996 527.85687256]
[182.17619324 536.91705322]
[192.64479065 547.70172119]
[201.34431458 559.95806885]
[208.07086182 573.39880371]
[212.66674805 587.70892334]
[215.02424622 602.55285645]
[215.08808899 617.58270264]
[212.85676575 632.44610596]
[208.38259888 646.79473877]
[201.77046204 660.29211426]
[193.17533875 672.62194824]
[182.79875183 683.49517822]
[170.88391113 692.65686035]
[157.71011353 699.89233398]
[143.58619690 705.03192139]
[128.84321594 707.95513916]
[113.82679749 708.59344482]
[98.88893127 706.93200684]
[84.37978363 703.00958252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 187]
[17 186]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[56 152]
[57 148]
[58 147]
[59 146]
[60 145]
[64 142]
[65 141]
[66 140]
[69 137]
[70 136]
[71 135]
[92 134]
[93 133]
[94 132]
[95 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
