%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[43.40415192 641.31481934]
[37.16140747 655.52075195]
[23.74395943 663.31506348]
[8.31108475 661.70074463]
[-3.20295858 651.29852295]
[-6.37078714 636.10827637]
[0.02569455 621.97088623]
[13.52690792 614.32257080]
[15.08743095 599.40399170]
[8.71619606 585.94079590]
[17.84720993 573.02050781]
[19.40773392 558.10186768]
[20.96825600 543.18328857]
[22.52877998 528.26464844]
[24.08930206 513.34606934]
[10.92553329 506.30020142]
[1.43652689 494.71984863]
[-2.90765285 480.34997559]
[-1.41521263 465.37133789]
[5.71740961 452.06948853]
[17.43075943 442.48614502]
[31.95962524 438.10574341]
[33.52014923 423.18713379]
[35.08067322 408.26855469]
[36.64119339 393.34994507]
[34.71686172 390.39541626]
[34.12797546 386.36199951]
[35.36602402 381.88757324]
[38.61904907 377.80529785]
[40.73367310 362.95510864]
[42.73768616 348.08956909]
[40.90217209 345.07907104]
[40.43363953 341.02993774]
[41.80435944 336.59432983]
[45.17748260 332.61071777]
[47.84328079 317.84951782]
[50.50907516 303.08828735]
[53.17486954 288.32708740]
[55.84066772 273.56585693]
[58.50646210 258.80465698]
[61.17225647 244.04342651]
[59.23338699 239.67881775]
[60.01575470 234.04988098]
[64.14344788 228.88522339]
[67.24755096 214.20991516]
[70.35166168 199.53462219]
[73.45577240 184.85931396]
[76.55988312 170.18402100]
[70.22922516 153.81668091]
[82.65064240 140.22293091]
[85.53591156 125.50304413]
[72.51542664 132.95065308]
[58.00667953 129.14323425]
[50.32095337 116.26187134]
[53.86097336 101.68558502]
[66.59886169 93.76432800]
[81.23777008 97.03576660]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[103.33247375 52.31153107]
[104.08055878 47.72964478]
[106.30332947 44.31287384]
[109.28749847 42.43482208]
[114.11349487 28.23236465]
[105.33432770 15.57407284]
[105.68800354 0.35144809]
[114.82937622 -11.60260487]
[129.08624268 -15.83102608]
[133.91224670 -30.03348160]
[138.73823547 -44.23593903]
[143.56423950 -58.43839264]
[148.28437805 -72.67638397]
[152.89837646 -86.94911194]
[152.56042480 -96.07729340]
[157.68879700 -101.39909363]
[162.51478577 -115.60154724]
[167.34078979 -129.80400085]
[172.16679382 -144.00645447]
[176.99278259 -158.20890808]
[174.10684204 -173.76467896]
[185.52754211 -183.32591248]
[188.52232361 -198.02391052]
[189.63796997 -212.98236084]
[190.75361633 -227.94081116]
[191.86926270 -242.89927673]
[192.98490906 -257.85772705]
[194.10055542 -272.81616211]
[195.21621704 -287.77462769]
[196.33186340 -302.73309326]
[193.84939575 -311.52371216]
[197.57710266 -317.90539551]
[191.10185242 -332.34082031]
[199.94377136 -344.32705688]
[201.28199768 -359.26724243]
[202.62023926 -374.20742798]
[188.55902100 -379.72640991]
[176.62310791 -388.98440552]
[167.78007507 -401.23092651]
[162.74679565 -415.47320557]
[161.93128967 -430.55670166]
[165.39967346 -445.25863647]
[172.87078857 -458.38720703]
[183.73895264 -468.87814331]
[197.12316895 -475.88095093]
[211.93841553 -478.82800293]
[226.98370361 -477.48034668]
[241.03936768 -471.94726562]
[252.96597290 -462.67727661]
[261.79669189 -450.42187500]
[266.81567383 -436.17453003]
[267.61602783 -421.09024048]
[264.13287354 -406.39178467]
[256.64855957 -393.27072144]
[245.76986694 -382.79074097]
[232.37861633 -375.80136108]
[217.56042480 -372.86920166]
[216.22218323 -357.92901611]
[214.88395691 -342.98883057]
[221.45492554 -329.62200928]
[212.51728821 -316.56716919]
[211.29031372 -301.61743164]
[210.17466736 -286.65899658]
[209.05902100 -271.70053101]
[207.94337463 -256.74206543]
[206.82771301 -241.78361511]
[205.71206665 -226.82516479]
[204.59642029 -211.86671448]
[203.48077393 -196.90826416]
[211.56282043 -209.54473877]
[223.26895142 -218.92378235]
[237.36378479 -224.05560303]
[252.35986328 -224.39863586]
[266.67462158 -219.91667175]
[278.79736328 -211.08271790]
[287.44876099 -198.82901001]
[291.71582031 -184.44874573]
[291.14822388 -169.45948792]
[285.80587769 -155.44309998]
[276.25256348 -143.87875366]
[263.49645996 -135.98686218]
[248.88375854 -132.60029602]
[233.95655823 -134.07641602]
[220.29019165 -140.25947571]
[209.32687378 -150.49694824]
[202.22360229 -163.70843506]
[199.72999573 -178.49990845]
[202.96112061 -163.95999146]
[191.19523621 -153.38291931]
[186.36924744 -139.18046570]
[181.54324341 -124.97800446]
[176.71725464 -110.77555084]
[171.89125061 -96.57309723]
[167.17111206 -82.33510590]
[162.55711365 -68.06237030]
[163.49070740 -60.73092270]
[157.76669312 -53.61239624]
[152.94070435 -39.40993881]
[148.11470032 -25.20748329]
[143.28869629 -11.00502872]
[152.01786804 1.03405654]
[151.98370361 16.08273888]
[142.98973083 28.36938667]
[128.31594849 33.05836105]
[123.48995209 47.26081848]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[100.25580597 128.38832092]
[97.37053680 143.10821533]
[103.90541077 154.22837830]
[101.19921875 166.42921448]
[91.23518372 173.28811646]
[88.13108063 187.96342468]
[85.02696991 202.63873291]
[81.92285919 217.31402588]
[78.81874847 231.98933411]
[75.93347168 246.70922852]
[73.26767731 261.47042847]
[70.60188293 276.23165894]
[67.93608856 290.99288940]
[65.27029419 305.75408936]
[62.60449600 320.51531982]
[59.93870163 335.27651978]
[57.60321426 350.09359741]
[55.59920120 364.95913696]
[57.55403900 373.88192749]
[53.45309067 380.03042603]
[51.55979919 394.91046143]
[49.99927521 409.82907104]
[48.43875504 424.74768066]
[46.87823105 439.66625977]
[60.18611908 446.95843506]
[69.66273499 458.75830078]
[73.88825989 473.24826050]
[72.24870300 488.21151733]
[65.02484894 501.37133789]
[53.34480667 510.73733521]
[39.00790787 514.90661621]
[37.44738388 529.82519531]
[35.88685989 544.74377441]
[34.32633972 559.66241455]
[32.76581573 574.58099365]
[39.02543259 589.11126709]
[30.00603676 600.96447754]
[28.44551277 615.88311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[22 196]
[23 195]
[24 194]
[25 193]
[29 192]
[30 190]
[31 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[50 174]
[51 173]
[58 172]
[60 170]
[61 169]
[62 168]
[66 167]
[67 166]
[71 162]
[72 161]
[73 160]
[74 159]
[75 157]
[76 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[84 149]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[94 123]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
