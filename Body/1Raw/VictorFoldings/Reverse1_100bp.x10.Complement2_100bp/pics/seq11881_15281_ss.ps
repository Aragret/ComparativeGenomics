%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[91.36798096 332.33349609]
[95.19605255 347.02056885]
[93.45615387 362.09826660]
[86.38359070 375.52746582]
[74.93486023 385.49194336]
[60.65832901 390.64413452]
[45.48476410 390.28720093]
[31.46627235 384.46945190]
[20.49873734 373.97766113]
[14.06543064 360.23077393]
[13.03640175 345.08792114]
[17.55081940 330.59710693]
[26.99814606 318.71801758]
[40.10070801 311.05725098]
[55.08649063 308.65084839]
[58.19060135 293.97555542]
[61.29471207 279.30026245]
[64.39881897 264.62493896]
[67.17443085 249.88398743]
[69.62015533 235.08471680]
[72.06588745 220.28544617]
[74.51161194 205.48617554]
[68.95301819 191.66766357]
[78.83687592 179.31372070]
[73.27827454 165.49520874]
[83.16213226 153.14126587]
[85.60786438 138.34199524]
[88.05358887 123.54271698]
[90.49931335 108.74344635]
[81.74095154 120.92092896]
[70.35484314 130.68598938]
[56.98491669 137.48637390]
[42.38731766 140.93748474]
[27.38760948 140.84413147]
[12.83409595 137.21160889]
[-0.45015144 130.24534607]
[-11.71384335 120.33932495]
[-20.31996346 108.05377960]
[-25.78179169 94.08351135]
[-27.79043961 79.21860504]
[-26.23230553 64.29975128]
[-21.19550896 50.17067719]
[-12.96490669 37.63045502]
[-2.00597858 27.38829231]
[11.06149483 20.02343369]
[25.49848366 15.95239735]
[40.48850632 15.40542030]
[55.18380737 18.41343689]
[68.75329590 24.80632782]
[80.42954254 34.22254562]
[89.55220795 46.12955856]
[95.60536194 59.85396576]
[98.24666595 74.61958313]
[97.32655334 89.59240723]
[104.79428864 76.58345032]
[112.26203156 63.57450104]
[119.72977448 50.56554794]
[127.19751740 37.55659485]
[134.66525269 24.54764366]
[142.13299561 11.53869152]
[147.89903259 -2.30879426]
[151.87112427 -16.77331734]
[155.84321594 -31.23784256]
[159.81532288 -45.70236588]
[163.78741455 -60.16688919]
[162.46601868 -65.21673584]
[163.14579773 -69.80924988]
[165.31745911 -73.25873566]
[168.27333069 -75.18101501]
[172.88734436 -89.45375061]
[177.50134277 -103.72648621]
[182.11535645 -117.99921417]
[186.30236816 -132.40299988]
[190.05867004 -146.92506409]
[193.81497192 -161.44711304]
[197.57127380 -175.96917725]
[201.32757568 -190.49124146]
[205.08387756 -205.01329041]
[208.84017944 -219.53535461]
[204.80523682 -234.83338928]
[215.48316956 -245.21755981]
[219.23947144 -259.73962402]
[205.13642883 -264.88351440]
[191.59568787 -271.36453247]
[178.74366760 -279.12219238]
[166.70037842 -288.08404541]
[155.57827759 -298.16641235]
[145.48120117 -309.27517700]
[136.50341797 -321.30657959]
[128.72875977 -334.14831543]
[122.22982025 -347.68048096]
[117.06727600 -361.77670288]
[113.28933716 -376.30538940]
[110.93126678 -391.13088989]
[110.01509094 -406.11474609]
[110.54936218 -421.11706543]
[112.52909088 -435.99780273]
[115.93579865 -450.61801147]
[120.73766327 -464.84112549]
[126.88986206 -478.53442383]
[134.33494568 -491.57000732]
[143.00340271 -503.82614136]
[152.81428528 -515.18847656]
[163.67601013 -525.55084229]
[175.48715210 -534.81646729]
[188.13742065 -542.89892578]
[201.50872803 -549.72271729]
[215.47619629 -555.22412109]
[229.90942383 -559.35174561]
[244.67366028 -562.06707764]
[259.63104248 -563.34478760]
[274.64187622 -563.17285156]
[289.56607056 -561.55303955]
[304.26425171 -558.50030518]
[318.59918213 -554.04327393]
[332.43704224 -548.22351074]
[345.64855957 -541.09533691]
[358.11044312 -532.72534180]
[369.70632935 -523.19165039]
[380.32791138 -512.58325195]
[389.87606812 -500.99929810]
[398.26159668 -488.54785156]
[405.40621948 -475.34521484]
[411.24325562 -461.51464844]
[415.71817017 -447.18527222]
[418.78921509 -432.49093628]
[420.42767334 -417.56875610]
[420.61828613 -402.55813599]
[419.35925293 -387.59918213]
[416.66232300 -372.83157349]
[412.55267334 -358.39318848]
[407.06872559 -344.41888428]
[400.26159668 -331.03909302]
[392.19494629 -318.37875366]
[382.94400024 -306.55606079]
[372.59521484 -295.68142700]
[361.24514771 -285.85635376]
[348.99981689 -277.17263794]
[335.97351074 -269.71130371]
[322.28793335 -263.54205322]
[308.07077026 -258.72244263]
[293.45486450 -255.29751587]
[278.57659912 -253.29922485]
[263.57495117 -252.74624634]
[248.58995056 -253.64373779]
[233.76153564 -255.98332214]
[230.00523376 -241.46125793]
[234.30883789 -227.20193481]
[223.36222839 -215.77905273]
[219.60592651 -201.25698853]
[215.84962463 -186.73493958]
[212.09332275 -172.21287537]
[208.33703613 -157.69081116]
[204.58073425 -143.16876221]
[200.82443237 -128.64669800]
[202.12922668 -126.16564178]
[202.52986145 -123.01824188]
[201.76762390 -119.54630280]
[199.71215820 -116.17886353]
[196.38809204 -113.38520813]
[191.77407837 -99.11247253]
[187.16007996 -84.83973694]
[182.54606628 -70.56700897]
[178.25193787 -56.19479370]
[174.27984619 -41.73027039]
[170.30775452 -27.26574516]
[166.33564758 -12.80122185]
[162.36355591 1.66330206]
[172.72532654 -9.18260479]
[186.01693726 -16.13481522]
[200.83567810 -18.45964813]
[215.61770630 -15.91175652]
[228.80302429 -8.76002693]
[239.00016785 2.24080348]
[245.13299561 15.92978954]
[246.55432129 30.86229897]
[243.11412048 45.46247101]
[235.17544556 58.18951416]
[223.57611084 67.70030975]
[209.54019165 72.99116516]
[194.54895020 73.50372314]
[180.18444824 69.18389130]
[167.96260071 60.48754883]
[159.17320251 48.33244705]
[154.74382019 34.00133896]
[155.14195251 19.00643349]
[147.67420959 32.01538467]
[140.20646667 45.02433777]
[132.73872375 58.03329086]
[125.27098846 71.04224396]
[117.80324554 84.05119324]
[110.33550262 97.06015015]
[105.29858398 111.18917847]
[102.85285950 125.98844910]
[100.40713501 140.78771973]
[97.96140289 155.58699036]
[103.34506989 170.46405029]
[93.63614655 181.75944519]
[99.01980591 196.63650513]
[89.31088257 207.93190002]
[86.86515808 222.73117065]
[84.41942596 237.53044128]
[81.97370148 252.32971191]
[83.81329346 257.21469116]
[83.61498260 261.85299683]
[81.81397247 265.50970459]
[79.07411957 267.72906494]
[75.97001648 282.40435791]
[72.86590576 297.07965088]
[69.76179504 311.75497437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[16 209]
[17 208]
[18 207]
[19 203]
[20 202]
[21 201]
[22 200]
[24 198]
[26 196]
[27 195]
[28 194]
[29 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[81 147]
[82 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
