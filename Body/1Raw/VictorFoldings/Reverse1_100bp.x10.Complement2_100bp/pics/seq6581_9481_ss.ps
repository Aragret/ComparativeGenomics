%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[121.85197449 564.34948730]
[106.80034637 565.51184082]
[91.99349976 562.56909180]
[78.53018951 555.73962402]
[67.40948486 545.53021240]
[59.45661926 532.69842529]
[55.26174927 518.19647217]
[55.13616180 503.10055542]
[59.08917236 488.53085327]
[66.82744598 475.56854248]
[77.77674866 465.17550659]
[91.12456512 458.12295532]
[105.88040924 454.93426514]
[106.77322388 439.96087646]
[107.66604614 424.98745728]
[100.69999695 411.82223511]
[109.24498749 398.50704956]
[110.13780212 383.53366089]
[111.03061676 368.56024170]
[101.03103638 379.74096680]
[86.60285187 383.84310913]
[72.21679688 379.59558105]
[62.33054733 368.31454468]
[60.00746155 353.49551392]
[65.96737671 339.73034668]
[78.36354065 331.28436279]
[93.35488129 330.77456665]
[106.29615021 338.35900879]
[113.17742157 351.68774414]
[116.06269836 336.96786499]
[118.94796753 322.24795532]
[121.83323669 307.52807617]
[121.49826050 292.53182983]
[117.95859528 277.95544434]
[114.41892242 263.37905884]
[110.87924957 248.80268860]
[107.33957672 234.22631836]
[103.79990387 219.64994812]
[100.26023102 205.07356262]
[94.96449280 219.10763550]
[83.81491852 229.14192200]
[69.30235291 232.93475342]
[54.66894531 229.63879395]
[43.18383408 219.99037170]
[37.41281891 206.14495850]
[38.64516068 191.19566345]
[46.60555267 178.48219299]
[59.51562500 170.84478760]
[74.49122620 169.98963928]
[88.18677521 176.10780334]
[97.54266357 187.83247375]
[96.42701721 172.87402344]
[95.31136322 157.91557312]
[92.34128571 154.17555237]
[91.68912506 148.53005981]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.73017883 43.20008087]
[80.98789978 30.01360703]
[87.75715637 16.74611282]
[79.01487732 3.55963755]
[85.78414154 -9.70785713]
[84.66848755 -24.66630936]
[83.55284119 -39.62476349]
[82.43719482 -54.58321762]
[80.98777008 -69.51302338]
[79.20530701 -84.40674591]
[77.42284393 -99.30046082]
[75.64037323 -114.19417572]
[73.85791016 -129.08789062]
[72.07544708 -143.98161316]
[58.07832336 -145.39216614]
[44.69069290 -149.69364929]
[32.50247955 -156.69372559]
[22.05017853 -166.08125305]
[13.79323387 -177.44000244]
[8.09385014 -190.26724243]
[5.20110083 -203.99589539]
[5.24004650 -218.01962280]
[8.20632744 -231.71963501]
[13.96647644 -244.49197388]
[22.26391792 -255.77415466]
[32.73039627 -265.06988525]
[44.90232849 -271.97100830]
[58.24131393 -276.17526245]
[56.90307999 -291.11544800]
[55.56484604 -306.05563354]
[54.22661209 -320.99581909]
[39.47531891 -324.35058594]
[26.48372459 -332.10131836]
[16.52461243 -343.48864746]
[10.57367897 -357.39697266]
[9.21393299 -372.46371460]
[12.57858849 -387.21273804]
[20.33801079 -400.19912720]
[31.73201370 -410.15060425]
[45.64432526 -416.09222412]
[60.71195984 -417.44189453]
[75.45874786 -414.06735229]
[88.43994141 -406.29922485]
[98.38378143 -394.89855957]
[104.31607056 -380.98226929]
[105.65562439 -365.91372681]
[102.27120972 -351.16921997]
[94.49438477 -338.19320679]
[83.08705902 -328.25701904]
[69.16680145 -322.33404541]
[70.50503540 -307.39385986]
[71.84326935 -292.45367432]
[73.18150330 -277.51348877]
[88.99996948 -275.25729370]
[103.83322906 -269.29421997]
[116.82551575 -259.96398926]
[127.22626495 -247.80064392]
[134.43344116 -233.50207520]
[138.02838135 -217.88995361]
[137.80015564 -201.86248779]
[133.75788879 -186.34274292]
[126.13050079 -172.22555542]
[115.35371399 -160.32582092]
[102.04520416 -151.33155823]
[86.96916199 -145.76408386]
[88.75162506 -130.87036133]
[90.53409576 -115.97664642]
[92.31655884 -101.08292389]
[94.09902191 -86.18920898]
[95.88149261 -71.29549408]
[98.41241455 -68.84054565]
[99.88000488 -65.03775024]
[99.66371918 -60.40024185]
[97.39564514 -55.69886398]
[98.51129150 -40.74041367]
[99.62694550 -25.78195953]
[100.74259186 -10.82350540]
[109.40507507 1.29304099]
[102.71561432 15.63046360]
[111.37808990 27.74700928]
[104.68863678 42.08443451]
[107.65871429 45.82444382]
[108.31087494 51.46994781]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.26982117 156.79991150]
[111.38546753 171.75837708]
[112.50112152 186.71682739]
[114.83660126 201.53388977]
[118.37627411 216.11027527]
[121.91594696 230.68664551]
[125.45561981 245.26301575]
[128.99530029 259.83938599]
[132.53497314 274.41577148]
[136.07464600 288.99215698]
[139.35752869 274.35580444]
[145.48150635 260.66284180]
[154.20262146 248.45866394]
[165.17353821 238.22933960]
[177.95729065 230.38232422]
[192.04469299 225.23013306]
[206.87466431 222.97798157]
[221.85650635 223.71559143]
[236.39353943 227.41355896]
[249.90672302 233.92462158]
[261.85784912 242.98941040]
[271.77090454 254.24691772]
[279.25103760 267.24874878]
[284.00036621 281.47702026]
[285.82968140 296.36505127]
[284.66613770 311.31985474]
[280.55609131 325.74578857]
[273.66320801 339.06826782]
[264.26208496 350.75665283]
[252.72709656 360.34542847]
[239.51773071 367.45263672]
[225.16009521 371.79522705]
[210.22604370 373.20025635]
[195.31039429 371.61172485]
[181.00723267 367.09289551]
[167.88626099 359.82379150]
[156.47006226 350.09393311]
[147.21334839 338.29083252]
[140.48480225 324.88461304]
[136.55313110 310.41336060]
[133.66786194 325.13323975]
[130.78259277 339.85311890]
[127.89731598 354.57302856]
[126.00402069 369.45306396]
[125.11120605 384.42645264]
[124.21839142 399.39987183]
[131.12057495 413.63610840]
[122.63945007 425.88027954]
[121.74663544 440.85369873]
[120.85381317 455.82708740]
[135.12619019 460.74664307]
[147.54138184 469.33532715]
[157.17808533 480.95587158]
[163.32119751 494.74588013]
[165.51486206 509.68209839]
[163.59629822 524.65612793]
[157.70787048 538.55682373]
[148.28654480 550.35260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 202]
[14 201]
[15 200]
[17 198]
[18 197]
[19 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[51 155]
[52 154]
[53 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 146]
[63 143]
[65 141]
[67 139]
[68 138]
[69 137]
[70 136]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
