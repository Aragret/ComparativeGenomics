%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[62.30715561 557.72259521]
[52.84657288 545.98547363]
[46.47042084 532.32501221]
[43.54940033 517.53546143]
[44.25333405 502.47662354]
[48.54129791 488.02407837]
[56.16399384 475.01800537]
[66.67824554 464.21456909]
[79.47277832 456.24191284]
[93.80372620 451.56350708]
[92.68807220 436.60504150]
[91.57242584 421.64660645]
[90.45677948 406.68814087]
[89.34112549 391.72967529]
[79.28787994 386.33538818]
[73.02214813 376.65777588]
[72.19764709 365.03820801]
[77.13459778 354.35516357]
[86.71154022 347.31112671]
[86.04175568 332.32608032]
[83.18434906 328.49929810]
[82.70056152 322.83688354]
[85.58184814 316.88626099]
[85.35852051 301.88793945]
[85.13519287 286.88958740]
[77.20925903 274.27893066]
[84.74024200 260.36508179]
[84.51691437 245.36674500]
[74.71837616 230.80805969]
[83.82050323 214.80078125]
[83.37389374 199.80743408]
[82.92729187 184.81408691]
[82.48068237 169.82072449]
[75.01235199 182.82934570]
[62.94683838 191.74131775]
[48.31739426 195.05484009]
[33.58934402 192.21153259]
[21.24461555 183.69050598]
[13.36351585 170.92774963]
[11.27414799 156.07397461]
[15.32860756 141.63232422]
[24.84364510 130.03645325]
[38.21581268 123.24048615]
[53.19166183 122.38965607]
[67.24750519 127.62734985]
[78.01467896 138.07090759]
[83.67902374 151.96205139]
[86.12474823 137.16278076]
[88.57048035 122.36351013]
[91.01620483 107.56423950]
[81.18511200 118.89338684]
[67.63067627 125.31812286]
[52.63705826 125.75577545]
[38.73095322 120.13259125]
[28.25578117 109.39617157]
[22.97678947 95.35578918]
[23.78358459 80.37750244]
[30.54020500 66.98541260]
[42.10803986 57.43632126]
[56.53771210 53.33942032]
[71.39756012 55.38510513]
[84.18344879 63.22864532]
[92.74072266 75.54827118]
[95.62731171 90.26955414]
[100.87403107 76.21708679]
[106.12074280 62.16461182]
[111.36746216 48.11214066]
[116.61418152 34.05966949]
[115.74356079 29.80573273]
[116.22360992 25.88985825]
[117.78220367 22.69514275]
[120.05073547 20.47695351]
[122.61417389 19.34252739]
[128.68800354 5.62726116]
[134.76184082 -8.08800507]
[132.37631226 -26.34699631]
[146.94595337 -36.12923813]
[152.81491089 -49.93341446]
[158.68388367 -63.73759460]
[164.55284119 -77.54177094]
[170.42179871 -91.34594727]
[176.29075623 -105.15012360]
[174.56980896 -120.87744904]
[186.66999817 -129.56275940]
[192.53895569 -143.36694336]
[198.40791321 -157.17111206]
[196.68696594 -172.89843750]
[208.78715515 -181.58375549]
[207.06619263 -197.31108093]
[219.16638184 -205.99638367]
[225.03535461 -219.80056763]
[228.46641541 -234.40287781]
[229.35922241 -249.37628174]
[230.25204468 -264.34970093]
[231.14485168 -279.32308960]
[232.03767395 -294.29650879]
[232.93049622 -309.26989746]
[233.82330322 -324.24331665]
[234.71612549 -339.21673584]
[220.79591370 -345.21704102]
[209.76956177 -355.61871338]
[202.96853638 -369.16574097]
[201.21409607 -384.22222900]
[204.71810913 -398.97003174]
[213.05743408 -411.62829590]
[225.22506714 -420.66845703]
[239.75170898 -424.99887085]
[254.88319397 -424.09661865]
[268.79232788 -418.07067871]
[279.79949951 -407.64868164]
[286.57553101 -394.08914185]
[288.30221558 -379.02944946]
[284.77105713 -364.28811646]
[276.40838623 -351.64526367]
[264.22412109 -342.62753296]
[249.68952942 -338.32391357]
[248.79670715 -323.35049438]
[247.90390015 -308.37710571]
[247.01107788 -293.40368652]
[246.11827087 -278.43029785]
[245.22544861 -263.45687866]
[244.33262634 -248.48347473]
[243.43981934 -233.51007080]
[250.90977478 -246.51774597]
[261.34326172 -257.29467773]
[274.10229492 -265.18182373]
[288.40661621 -269.69692993]
[303.38156128 -270.56384277]
[318.11135864 -267.72958374]
[331.69528198 -261.36746216]
[343.30270386 -251.86651611]
[352.22378540 -239.80773926]
[357.91302490 -225.92852783]
[360.02252197 -211.07760620]
[358.42327881 -196.16310120]
[353.21307373 -182.09704590]
[344.71051025 -169.73959351]
[333.43554688 -159.84640503]
[320.07763672 -153.02244568]
[305.45364380 -149.68499756]
[290.45779419 -150.03816223]
[276.00711060 -154.06034851]
[262.98526001 -161.50556946]
[252.18853760 -171.91857910]
[244.27716064 -184.66258240]
[239.73489380 -198.95831299]
[238.83952332 -213.93159485]
[232.97056580 -200.12742615]
[235.11131287 -185.38746643]
[222.59132385 -175.71478271]
[224.73207092 -160.97482300]
[212.21209717 -151.30215454]
[206.34313965 -137.49797058]
[200.47416687 -123.69380188]
[202.61491394 -108.95383453]
[190.09494019 -99.28116608]
[184.22598267 -85.47698975]
[178.35700989 -71.67280579]
[172.48805237 -57.86863327]
[166.61909485 -44.06445694]
[160.75013733 -30.26027870]
[164.98277283 -18.92840385]
[160.20620728 -7.37988520]
[148.47711182 -2.01417136]
[142.40327454 11.70109558]
[136.32943726 25.41636276]
[130.66665649 39.30638885]
[125.41993713 53.35886002]
[120.17321777 67.41133118]
[114.92649841 81.46380615]
[109.67977905 95.51627350]
[105.81547546 110.00996399]
[103.36975098 124.80923462]
[100.92401886 139.60850525]
[98.47829437 154.40777588]
[97.47402954 169.37413025]
[97.92063904 184.36747742]
[98.36724854 199.36082458]
[98.81385040 214.35417175]
[107.64936829 223.75079346]
[107.71267700 236.24798584]
[99.51525116 245.14341736]
[99.73857880 260.14175415]
[107.68048096 273.82519531]
[100.13352966 286.66625977]
[100.35685730 301.66461182]
[100.58018494 316.66293335]
[101.02679443 331.65628052]
[101.69657898 346.64132690]
[116.15513611 358.88323975]
[117.05866241 377.48690796]
[104.29958344 390.61404419]
[105.41522980 405.57247925]
[106.53087616 420.53094482]
[107.64653015 435.48941040]
[108.76217651 450.44784546]
[123.62857056 452.94860840]
[137.46421814 458.93511963]
[149.46473694 468.05932617]
[158.93243408 479.79074097]
[165.31686401 493.44732666]
[168.24685669 508.23510742]
[167.55204773 523.29437256]
[163.27284241 537.74951172]
[155.65803528 550.76019287]
[145.15032959 561.57000732]
[132.36064148 569.55041504]
[118.03253174 574.23754883]
[102.99903107 575.35876465]
[88.13415527 572.84899902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[19 189]
[20 188]
[23 187]
[24 186]
[25 185]
[27 183]
[28 182]
[30 179]
[31 178]
[32 177]
[33 176]
[47 175]
[48 174]
[49 173]
[50 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[73 166]
[74 165]
[75 164]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[84 154]
[85 153]
[86 152]
[88 150]
[90 148]
[91 147]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
