%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUAAGGAUCCCCCAACAAACUAGGGCAAAGCACGUUCUUAUCCUCCACCUCACAACGAUCCCGACGUUAUUACUUCCCGUUCUACUUCACUUUCCAUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[50.98194504 644.94793701]
[41.08773041 656.29687500]
[29.04991722 665.34033203]
[15.39474487 671.68304443]
[0.71915942 675.04772949]
[-14.33528614 675.28723145]
[-29.11047554 672.39111328]
[-42.96050262 666.48596191]
[-55.27989960 657.83001709]
[-65.53012085 646.80157471]
[-73.26306915 633.88275146]
[-78.14068604 619.63836670]
[-79.94975281 604.69110107]
[-78.61118317 589.69433594]
[-74.18348694 575.30377197]
[-66.86022949 562.14837646]
[-56.96155548 550.80334473]
[-44.92018509 541.76458740]
[-31.26251793 535.42724609]
[-16.58560944 532.06842041]
[-1.53107107 531.83483887]
[1.35420156 517.11492920]
[4.23947430 502.39501953]
[7.12474680 487.67514038]
[10.01001930 472.95526123]
[12.89529228 458.23535156]
[6.80787134 451.77191162]
[4.33969259 443.09994507]
[6.16603708 434.13006592]
[12.00120354 426.89938354]
[20.63489532 423.10906982]
[24.17456818 408.53271484]
[27.71423912 393.95632935]
[31.25391197 379.37994385]
[34.79358292 364.80358887]
[20.59866714 357.27157593]
[8.81850815 346.32629395]
[0.25383779 332.70413208]
[-4.51123142 317.32376099]
[-5.14904261 301.22402954]
[-1.61091542 285.49395752]
[5.86918259 271.19894409]
[16.79010201 259.30862427]
[30.41708374 250.63119507]
[45.83119202 245.75836182]
[61.99127579 245.02508545]
[65.09539032 230.34977722]
[68.19950104 215.67446899]
[66.50823212 208.47993469]
[71.46061707 200.80453491]
[74.78287506 186.17707825]
[78.10513306 171.54962158]
[81.20924377 156.87431335]
[84.09451294 142.15441895]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[84.02105713 96.99128723]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[100.51488495 54.94764328]
[103.18067932 40.18642807]
[94.72158813 20.49743080]
[108.71150208 5.32353354]
[110.71551514 -9.54199505]
[112.71952820 -24.40752220]
[114.72354126 -39.27305222]
[99.89147949 -46.81312561]
[88.55467987 -58.95668793]
[82.07049561 -74.22403717]
[81.20642853 -90.76304626]
[86.04936218 -106.57386017]
[95.99715424 -119.75067902]
[109.83345795 -128.71151733]
[125.87643433 -132.38810730]
[127.43695831 -147.30671692]
[128.99748230 -162.22532654]
[130.55799866 -177.14392090]
[132.11853027 -192.06253052]
[133.45675659 -207.00271606]
[134.57240295 -221.96116638]
[127.88294983 -236.29859924]
[136.54542542 -248.41514587]
[137.43824768 -263.38854980]
[138.10803223 -278.37359619]
[138.77781677 -293.35861206]
[139.44760132 -308.34365845]
[140.11738586 -323.32870483]
[125.38037872 -326.28182983]
[111.26691437 -331.45007324]
[98.10783386 -338.71224976]
[86.21160889 -347.89810181]
[75.85710144 -358.79235840]
[67.28703308 -371.13958740]
[60.70230103 -384.65039062]
[56.25725937 -399.00805664]
[54.05611038 -413.87597656]
[54.15044403 -428.90567017]
[56.53805923 -443.74478149]
[61.16297913 -458.04550171]
[67.91679382 -471.47259521]
[76.64118195 -483.71127319]
[87.13162994 -494.47467041]
[99.14222717 -503.51049805]
[112.39143372 -510.60690308]
[126.56865692 -515.59759521]
[141.34158325 -518.36547852]
[156.36389160 -518.84576416]
[171.28344727 -517.02716064]
[185.75050354 -512.95233154]
[199.42594910 -506.71673584]
[211.98921204 -498.46658325]
[223.14578247 -488.39526367]
[232.63414001 -476.73886108]
[240.23185730 -463.77062988]
[245.76083374 -449.79455566]
[249.09146118 -435.13824463]
[250.14567566 -420.14526367]
[248.89874268 -405.16711426]
[245.37992859 -390.55484009]
[239.67167664 -376.65100098]
[231.90783691 -363.78155518]
[222.27037048 -352.24813843]
[210.98521423 -342.32110596]
[198.31690979 -334.23318481]
[184.56240845 -328.17398071]
[170.04412842 -324.28552246]
[155.10241699 -322.65890503]
[154.43263245 -307.67388916]
[153.76284790 -292.68884277]
[153.09306335 -277.70379639]
[152.42327881 -262.71875000]
[154.92788696 -258.65231323]
[154.90457153 -252.96931458]
[151.50387573 -247.29948425]
[158.27314758 -234.03199768]
[149.53086853 -220.84552002]
[148.41520691 -205.88706970]
[150.79763794 -201.74784851]
[150.60511780 -196.06806946]
[147.03712463 -190.50201416]
[145.47660828 -175.58340454]
[143.91609192 -160.66479492]
[142.35556030 -145.74620056]
[140.79504395 -130.82759094]
[153.19050598 -125.55995941]
[163.61366272 -117.00388336]
[171.21469116 -105.84472656]
[175.37039185 -92.98056030]
[175.73532104 -79.44992065]
[172.27047729 -66.34794617]
[165.24720764 -54.73776627]
[155.22599792 -45.56418991]
[143.01173401 -39.57687759]
[129.58906555 -37.26903915]
[127.58505249 -22.40350914]
[125.58103943 -7.53798103]
[123.57702637 7.32754707]
[130.03836060 13.41722012]
[133.01834106 21.92689323]
[131.72912598 30.98957634]
[126.33467865 38.55474472]
[117.94190216 42.85222244]
[115.27610779 57.61344147]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[115.99656677 97.08644867]
[113.84149170 108.53182983]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[98.81440735 145.03968811]
[95.92913818 159.75958252]
[97.70701599 166.12753296]
[96.22460938 171.61383057]
[92.73258972 174.87187195]
[89.41033173 189.49932861]
[86.08807373 204.12680054]
[82.87480164 218.77857971]
[79.77069092 233.45388794]
[76.66658020 248.12918091]
[89.29119873 254.14088440]
[100.24765778 262.81600952]
[108.98436737 273.71337891]
[115.06249237 286.27999878]
[118.17798615 299.87921143]
[118.17678833 313.82287598]
[115.06248474 327.40625000]
[108.99587250 339.94357300]
[100.28675079 350.80273438]
[89.37802887 359.43704224]
[76.82322693 365.41284180]
[63.25841904 368.43130493]
[49.36996078 368.34323120]
[45.83028793 382.91961670]
[42.29061508 397.49600220]
[38.75094223 412.07238770]
[35.21126938 426.64874268]
[42.48345947 446.80633545]
[27.61518288 461.12063599]
[24.72990990 475.84051514]
[21.84463882 490.56042480]
[18.95936584 505.28030396]
[16.07409286 520.00018311]
[13.18881989 534.72009277]
[27.04116821 540.61975098]
[39.36397171 549.27087402]
[49.61853027 560.29528809]
[57.35655594 573.21105957]
[62.23978043 587.45355225]
[64.05472565 602.40008545]
[62.72205353 617.39733887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[46 179]
[47 178]
[48 177]
[50 176]
[51 175]
[52 174]
[53 171]
[54 170]
[55 169]
[56 168]
[58 165]
[59 164]
[60 163]
[61 162]
[63 157]
[64 156]
[65 155]
[66 154]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[79 137]
[80 136]
[82 134]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
