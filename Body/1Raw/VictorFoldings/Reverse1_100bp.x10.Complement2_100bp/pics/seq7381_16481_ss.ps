%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[60.33280945 594.29010010]
[48.17225266 603.14227295]
[34.62641907 609.68060303]
[20.13074493 613.69500732]
[5.15120935 615.05633545]
[-9.83065891 613.72088623]
[-24.33325577 609.73162842]
[-37.89038086 603.21667480]
[-50.06622696 594.38562012]
[-60.46939850 583.52215576]
[-68.76546478 570.97564697]
[-74.68775177 557.14935303]
[-78.04588318 542.48779297]
[-78.73190308 527.46215820]
[-76.72375488 512.55554199]
[-72.08599854 498.24710083]
[-64.96772766 484.99682617]
[-55.59774399 473.23065186]
[-44.27727127 463.32675171]
[-31.37020874 455.60357666]
[-17.29146576 450.30935669]
[-2.49361658 447.61428833]
[12.54764938 447.60498047]
[15.21344471 432.84378052]
[17.87924004 418.08255005]
[12.52699661 404.18283081]
[22.59369087 391.97738647]
[25.25948524 377.21618652]
[19.90724182 363.31643677]
[29.97393417 351.11102295]
[21.59185219 343.37106323]
[17.94923019 332.43273926]
[20.06077194 320.97695923]
[27.51566505 311.87060547]
[38.55143356 307.44924927]
[41.65554428 292.77392578]
[44.75965500 278.09863281]
[47.86376572 263.42333984]
[50.96787643 248.74803162]
[44.63457870 238.44192505]
[47.10055923 226.19027710]
[57.57853317 218.66865540]
[60.90079498 204.04119873]
[64.22305298 189.41374207]
[67.54531097 174.78627014]
[54.89994049 182.85440063]
[40.01112747 181.03140259]
[29.68584061 170.15075684]
[28.64466095 155.18693542]
[37.36360168 142.98120117]
[51.85648346 139.11384583]
[65.49735260 145.35296631]
[72.04998016 158.84799194]
[68.81885529 144.30807495]
[80.58473969 133.73098755]
[85.41074371 119.52854156]
[90.23674011 105.32608032]
[76.33796692 110.96736908]
[62.46796417 105.25571442]
[56.57209778 91.46300507]
[62.02779007 77.49034119]
[75.70977020 71.34188843]
[89.78038025 76.53977203]
[96.17928314 90.10544586]
[102.25312042 76.39018250]
[108.32695007 62.67491531]
[106.84033966 46.92370605]
[119.06850433 38.41951752]
[125.14234161 24.70425034]
[131.21617126 10.98898411]
[137.29000854 -2.72628236]
[143.36384583 -16.44154930]
[149.43766785 -30.15681648]
[154.89303589 -44.12961197]
[159.71902466 -58.33206940]
[164.54502869 -72.53452301]
[169.37101746 -86.73698425]
[172.58430481 -101.38877106]
[174.14482117 -116.30737305]
[166.64392090 -126.80018616]
[168.25080872 -139.19380188]
[177.56318665 -146.91430664]
[179.34564209 -161.80802917]
[170.86853027 -168.28585815]
[165.88308716 -177.62675476]
[165.22976685 -188.11373901]
[168.95954895 -197.85035706]
[176.33683777 -205.10369873]
[185.98347473 -208.61273193]
[188.42919922 -223.41200256]
[190.87492371 -238.21128845]
[185.49127197 -253.08833313]
[195.20019531 -264.38372803]
[197.64591980 -279.18301392]
[195.95761108 -288.16006470]
[200.23980713 -294.18371582]
[202.90559387 -308.94494629]
[205.57139587 -323.70617676]
[208.23718262 -338.46737671]
[194.47071838 -344.61129761]
[182.57505798 -353.87179565]
[173.24179077 -365.71044922]
[167.01354980 -379.43896484]
[164.25242615 -394.25921631]
[165.11894226 -409.30953979]
[169.56274414 -423.71496582]
[177.32546997 -436.63793945]
[187.95578003 -447.32717896]
[200.83567810 -455.16122437]
[215.21630859 -459.68457031]
[230.26162720 -460.63424683]
[245.09690857 -457.95507812]
[258.85964966 -451.80282593]
[270.74969482 -442.53512573]
[280.07577515 -430.69082642]
[286.29571533 -416.95852661]
[289.04785156 -402.13659668]
[288.17218018 -387.08679199]
[283.71966553 -372.68408203]
[275.94909668 -359.76580811]
[265.31231689 -349.08300781]
[252.42767334 -341.25680542]
[238.04429626 -336.74215698]
[222.99841309 -335.80157471]
[220.33261108 -321.04037476]
[217.66680908 -306.27914429]
[215.00102234 -291.51794434]
[212.44519043 -276.73727417]
[209.99946594 -261.93801880]
[215.55805969 -248.11949158]
[205.67419434 -235.76554871]
[203.22846985 -220.96627808]
[200.78274536 -206.16700745]
[213.25926208 -191.20536804]
[210.66996765 -171.58906555]
[194.23936462 -160.02555847]
[192.45689392 -145.13183594]
[200.22253418 -129.39457703]
[189.06343079 -114.74684906]
[187.50289917 -99.82824707]
[196.24163818 -112.01982117]
[208.75433350 -120.29222107]
[223.39471436 -123.55707550]
[238.23658752 -121.38482666]
[251.32725525 -114.06128693]
[260.94442749 -102.54998016]
[265.82278442 -88.36541748]
[265.32046509 -73.37383270]
[259.50363159 -59.54761505]
[249.13752747 -48.70584869]
[235.58601379 -42.27494812]
[220.63201904 -41.10101700]
[206.24301147 -45.33849716]
[194.31208801 -54.42988205]
[186.40899658 -67.17903900]
[183.57348633 -81.91098022]
[178.74748230 -67.70852661]
[173.92147827 -53.50607300]
[169.09548950 -39.30361557]
[182.99426270 -44.94490433]
[196.86425781 -39.23324585]
[202.76013184 -25.44053650]
[197.30442810 -11.46787071]
[183.62245178 -5.31942177]
[169.55184937 -10.51730251]
[163.15293884 -24.08298111]
[157.07910156 -10.36771488]
[151.00527954 3.34755158]
[144.93144226 17.06281853]
[138.85760498 30.77808571]
[132.78376770 44.49335098]
[134.70481873 59.26355362]
[122.04222107 68.74874878]
[115.96838379 82.46401978]
[109.89455414 96.17928314]
[104.43919373 110.15208435]
[99.61319733 124.35453796]
[94.78720093 138.55699158]
[97.67313385 154.11276245]
[86.25244141 163.67398071]
[82.17277527 178.10853577]
[78.85050964 192.73599243]
[75.52825165 207.36344910]
[72.20599365 221.99092102]
[78.05912018 239.45007324]
[65.64318085 251.85214233]
[62.53906631 266.52743530]
[59.43495560 281.20275879]
[56.33084869 295.87805176]
[53.22673798 310.55334473]
[64.15898132 326.02590942]
[60.37498856 344.26309204]
[44.73515320 353.77682495]
[49.89672089 368.73239136]
[40.02070236 379.88198853]
[37.35490799 394.64318848]
[42.51647568 409.59875488]
[32.64045715 420.74835205]
[29.97466278 435.50958252]
[27.30886650 450.27078247]
[41.39674759 455.54064941]
[54.31715012 463.24148560]
[65.65473938 473.12576294]
[75.04505920 484.87573242]
[82.18624115 498.11367798]
[86.84873962 512.41406250]
[88.88266754 527.31719971]
[88.22264862 542.34393311]
[84.88988495 557.01135254]
[78.99152374 570.84783936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 200]
[24 199]
[25 198]
[27 196]
[28 195]
[30 193]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[42 184]
[43 183]
[44 182]
[45 181]
[53 180]
[55 178]
[56 177]
[57 176]
[64 175]
[65 174]
[66 173]
[68 171]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 159]
[75 158]
[76 157]
[77 156]
[78 140]
[79 139]
[82 137]
[83 136]
[89 133]
[90 132]
[91 131]
[93 129]
[94 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
