%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[66.49382019 759.18066406]
[52.48020935 764.57495117]
[37.95072937 768.36633301]
[23.08811188 770.50701904]
[8.07926178 770.97009277]
[-6.88706303 769.74981689]
[-21.62264824 766.86145020]
[-35.94217682 762.34136963]
[-49.66556549 756.24639893]
[-62.62022781 748.65319824]
[-74.64324951 739.65728760]
[-85.58341980 729.37170410]
[-95.30316162 717.92590332]
[-103.68023682 705.46374512]
[-110.60929108 692.14202881]
[-116.00318909 678.12829590]
[-119.79409790 663.59869385]
[-121.93434143 648.73602295]
[-122.39700317 633.72717285]
[-121.17626190 618.76086426]
[-118.28746796 604.02532959]
[-113.76696014 589.70599365]
[-107.67158508 575.98272705]
[-100.07799530 563.02832031]
[-91.08168793 551.00555420]
[-80.79580688 540.06573486]
[-69.34970093 530.34631348]
[-56.88732529 521.96960449]
[-43.56539917 515.04095459]
[-29.55146408 509.64746094]
[-15.02175999 505.85699463]
[-0.15901183 503.71719360]
[14.84986496 503.25497437]
[29.81611633 504.47616577]
[32.70138931 489.75628662]
[35.58666229 475.03637695]
[38.47193527 460.31649780]
[41.35720825 445.59661865]
[44.24248123 430.87670898]
[47.12775421 416.15682983]
[50.01302719 401.43692017]
[52.89829636 386.71704102]
[55.12341690 371.88299561]
[56.68393707 356.96438599]
[47.13442230 345.59152222]
[48.50449371 330.43969727]
[60.49816132 320.50039673]
[62.05868530 305.58178711]
[63.61920929 290.66317749]
[65.17973328 275.74459839]
[66.74025726 260.82598877]
[65.08184814 258.56591797]
[64.21875763 255.51278687]
[64.45753479 251.96618652]
[65.99072266 248.33110046]
[68.86360168 245.07525635]
[71.30932617 230.27598572]
[64.25414276 214.20764160]
[76.05617523 200.07281494]
[78.28129578 185.23876953]
[80.50641632 170.40472412]
[82.73152924 155.57069397]
[80.61503601 148.48956299]
[85.10179138 140.53300476]
[87.54751587 125.73374176]
[85.54387665 121.39847565]
[86.24235535 115.75851440]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.53848267 57.10064316]
[102.98421478 42.30137253]
[105.42993927 27.50210190]
[107.87566376 12.70283031]
[110.32139587 -2.09644055]
[112.76712036 -16.89571190]
[114.88174438 -31.74590874]
[116.66420746 -46.63962555]
[118.44667816 -61.53334427]
[116.35920715 -70.42605591]
[120.36815643 -76.63492584]
[122.37216949 -91.50045776]
[124.37618256 -106.36598206]
[126.38019562 -121.23151398]
[128.38421631 -136.09704590]
[121.19904327 -146.80853271]
[123.17422485 -159.14880371]
[132.71234131 -166.58862305]
[134.93745422 -181.42266846]
[136.83074951 -196.30270386]
[138.39126587 -211.22131348]
[132.13165283 -225.75155640]
[141.15104675 -237.60481262]
[134.89143372 -252.13504028]
[143.91082764 -263.98831177]
[145.47135925 -278.90692139]
[147.03187561 -293.82553101]
[132.99340820 -299.37744141]
[120.97411346 -308.51196289]
[111.86590576 -320.55117798]
[106.34467316 -334.60174561]
[104.82012939 -349.62103271]
[107.40540314 -364.49444580]
[113.90865326 -378.11834717]
[123.84729004 -389.48168945]
[136.48381042 -397.74130249]
[150.88049316 -402.28421021]
[165.96900940 -402.77334595]
[180.62969971 -399.17236328]
[193.77462769 -391.74853516]
[204.42835999 -381.05273438]
[211.80032349 -367.87863159]
[215.34346008 -353.20385742]
[214.79486084 -338.11740112]
[210.19522095 -323.73873901]
[201.88586426 -311.13485718]
[190.48341370 -301.24108887]
[176.83398438 -294.79162598]
[161.95048523 -292.26498413]
[160.38995361 -277.34637451]
[158.82943726 -262.42779541]
[165.20066833 -248.96463013]
[156.06965637 -236.04428101]
[162.44088745 -222.58113098]
[153.30987549 -209.66079712]
[151.74935913 -194.74218750]
[153.67369080 -191.78764343]
[154.26257324 -187.75425720]
[153.02452087 -183.27983093]
[149.77149963 -179.19755554]
[147.54638672 -164.36351013]
[154.84002686 -148.40200806]
[143.24974060 -134.09303284]
[141.24572754 -119.22750092]
[139.24171448 -104.36196899]
[137.23770142 -89.49644470]
[135.23368835 -74.63091278]
[133.34039307 -59.75087738]
[131.55792236 -44.85715866]
[129.77546692 -29.96344376]
[131.65559387 -26.98058510]
[132.18435669 -22.93887138]
[130.87983704 -18.48336792]
[127.56639099 -14.44998360]
[125.12066650 0.34928679]
[122.67493439 15.14855766]
[120.22920990 29.94782829]
[117.78348541 44.74710083]
[115.33775330 59.54637146]
[117.34139252 63.88162994]
[116.64292145 69.52159119]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.34678650 128.17945862]
[99.90106201 142.97872925]
[97.56557465 157.79580688]
[95.34045410 172.62985229]
[93.11534119 187.46389771]
[90.89022064 202.29794312]
[97.91512299 213.11521912]
[95.75642395 225.42471313]
[86.10859680 232.72171021]
[83.66287231 247.52098083]
[81.65885925 262.38650513]
[80.09833527 277.30511475]
[78.53781128 292.22372437]
[76.97728729 307.14233398]
[75.41676331 322.06091309]
[85.09397125 334.26705933]
[83.29885864 349.37442017]
[71.60253906 358.52493286]
[70.04202271 373.44351196]
[82.34614563 364.86398315]
[97.13671875 367.36181641]
[105.94101715 379.50613403]
[103.71553802 394.34011841]
[91.73514557 403.36621094]
[76.86274719 401.41381836]
[67.61818695 389.60232544]
[64.73291779 404.32220459]
[61.84764481 419.04208374]
[58.96237183 433.76199341]
[56.07709885 448.48187256]
[53.19182587 463.20178223]
[50.30655289 477.92166138]
[47.42127991 492.64154053]
[44.53600693 507.36145020]
[58.85580826 511.88067627]
[72.57955933 517.97479248]
[85.53467560 525.56726074]
[97.55823517 534.56250000]
[108.49902344 544.84735107]
[118.21944427 556.29260254]
[126.59726715 568.75421143]
[133.52711487 582.07556152]
[138.92185974 596.08898926]
[142.71363831 610.61834717]
[144.85476685 625.48089600]
[145.31832886 640.48974609]
[144.09848022 655.45611572]
[141.21057129 670.19177246]
[136.69091797 684.51141357]
[130.59635925 698.23498535]
[123.00354767 711.18988037]
[114.00795746 723.21319580]
[103.72273254 734.15368652]
[92.27721405 743.87371826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 175]
[44 174]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[56 166]
[57 165]
[59 162]
[60 161]
[61 160]
[62 159]
[64 158]
[65 157]
[68 156]
[70 154]
[71 153]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 141]
[79 140]
[80 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[89 132]
[90 131]
[91 127]
[92 126]
[94 124]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
