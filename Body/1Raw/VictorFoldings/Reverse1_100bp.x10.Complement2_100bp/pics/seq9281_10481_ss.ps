%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[56.81563187 588.96691895]
[46.55031586 599.93170166]
[34.99166107 609.52343750]
[22.32196236 617.59075928]
[8.74104118 624.00653076]
[-5.53691292 628.66949463]
[-20.28671455 631.50610352]
[-35.27574158 632.47167969]
[-50.26758957 631.55102539]
[-65.02581787 628.75854492]
[-79.31767273 624.13836670]
[-92.91774750 617.76330566]
[-105.61154938 609.73394775]
[-117.19887543 600.17687988]
[-127.49697876 589.24291992]
[-136.34344482 577.10443115]
[-143.59875488 563.95281982]
[-149.14848328 549.99560547]
[-152.90509033 535.45288086]
[-154.80934143 520.55401611]
[-154.83120728 505.53390503]
[-152.97032166 490.62954712]
[-149.25605774 476.07592773]
[-143.74697876 462.10263062]
[-136.52996826 448.92999268]
[-127.71887207 436.76580811]
[-117.45262909 425.80187988]
[-105.89316559 416.21115112]
[-93.22279358 408.14486694]
[-79.64133453 401.73028564]
[-65.36298370 397.06851196]
[-50.61294556 394.23309326]
[-35.62383652 393.26876831]
[-20.63206482 394.19073486]
[-5.87407017 396.98443604]
[-1.26006067 382.71170044]
[3.35394859 368.43896484]
[7.96795797 354.16622925]
[12.58196735 339.89349365]
[9.13472176 325.40332031]
[20.74182510 314.65222168]
[25.35583496 300.37948608]
[29.96984482 286.10675049]
[34.58385468 271.83404541]
[39.19786072 257.56130981]
[34.60432434 240.62416077]
[48.37256622 228.39645386]
[52.77356339 214.05661011]
[57.17456055 199.71675110]
[61.57556152 185.37690735]
[65.97655487 171.03706360]
[64.78384399 168.50021362]
[64.52414703 165.33807373]
[65.44066620 161.90362549]
[67.64443207 158.63133240]
[71.08993530 155.98889160]
[76.33664703 141.93641663]
[81.58336639 127.88394165]
[86.83008575 113.83147430]
[80.91102600 100.60607910]
[85.97918701 87.03184509]
[99.11743927 80.92180634]
[104.36415863 66.86933899]
[109.61087799 52.81686783]
[112.38648987 38.07590485]
[112.60981750 23.07756615]
[112.83314514 8.07922935]
[113.05647278 -6.91910791]
[113.27980042 -21.91744614]
[113.50312805 -36.91578293]
[113.72645569 -51.91411972]
[113.94978333 -66.91246033]
[114.17311096 -81.91079712]
[114.39643860 -96.90913391]
[106.86546326 -110.82297516]
[114.79139709 -123.43363953]
[115.01472473 -138.43197632]
[115.23805237 -153.43031311]
[102.82606506 -165.75759888]
[103.16314697 -182.90989685]
[115.55240631 -194.28288269]
[115.55240631 -209.28288269]
[115.55240631 -224.28288269]
[115.55240631 -239.28288269]
[115.55240631 -254.28288269]
[100.69139862 -256.52075195]
[86.32994080 -260.94866943]
[72.78887939 -267.46765137]
[60.37072372 -275.93209839]
[49.35289764 -286.15292358]
[39.98154831 -297.90179443]
[32.46603394 -310.91619873]
[26.97424889 -324.90539551]
[23.62888718 -339.55688477]
[22.50468254 -354.54333496]
[23.62675285 -369.52996826]
[26.97002792 -384.18191528]
[32.45981979 -398.17190552]
[39.97348022 -411.18737793]
[49.34315872 -422.93756104]
[60.35952759 -433.15997314]
[72.77647400 -441.62619019]
[86.31661224 -448.14712524]
[100.67743683 -452.57705688]
[115.53812408 -454.81704712]
[130.56668091 -454.81704712]
[145.42736816 -452.57705688]
[159.78819275 -448.14712524]
[173.32833862 -441.62619019]
[185.74528503 -433.15997314]
[196.76165771 -422.93756104]
[206.13133240 -411.18737793]
[213.64498901 -398.17190552]
[219.13478088 -384.18191528]
[222.47805786 -369.52996826]
[223.60012817 -354.54333496]
[222.47592163 -339.55688477]
[219.13055420 -324.90539551]
[213.63877869 -310.91619873]
[206.12326050 -297.90179443]
[196.75190735 -286.15292358]
[185.73408508 -275.93209839]
[173.31593323 -267.46765137]
[159.77487183 -260.94866943]
[145.41340637 -256.52075195]
[130.55239868 -254.28288269]
[130.55239868 -239.28288269]
[130.55239868 -224.28288269]
[130.55239868 -209.28288269]
[130.55239868 -194.28288269]
[140.84881592 -186.53604126]
[144.86323547 -174.08749390]
[140.91682434 -161.41325378]
[130.23638916 -153.20698547]
[130.01306152 -138.20864868]
[129.78973389 -123.21031189]
[137.33668518 -110.36924744]
[129.39477539 -96.68580627]
[129.17144775 -81.68746948]
[128.94812012 -66.68913269]
[128.72479248 -51.69079208]
[128.50146484 -36.69245529]
[128.27813721 -21.69411850]
[128.05480957 -6.69578028]
[127.83148193 8.30255699]
[127.60815430 23.30089378]
[127.38482666 38.29923248]
[134.26651001 24.97097397]
[144.20837402 13.73891449]
[156.60249329 5.28989983]
[170.69094849 0.14059031]
[185.61224365 -1.39413226]
[200.45390320 0.77958119]
[214.30836487 6.52880716]
[226.32844543 15.50197792]
[235.77909851 27.15038109]
[242.08239746 40.76171494]
[244.85292053 55.50363541]
[243.92121887 70.47467041]
[239.34429932 84.75933838]
[231.40200806 97.48412323]
[220.58004761 107.87090302]
[207.54017639 115.28452301]
[193.07978821 119.27162933]
[178.08312988 119.58840942]
[163.46726990 116.21550751]
[150.12596130 109.35916138]
[138.87503052 99.43864441]
[130.40248108 87.06060028]
[125.22641754 72.98194885]
[123.66335297 58.06358337]
[118.41663361 72.11605835]
[113.16991425 86.16852570]
[119.08897400 99.39392090]
[114.02081299 112.96815491]
[100.88256073 119.07819366]
[95.63584137 133.13066101]
[90.38912201 147.18313599]
[85.14240265 161.23561096]
[80.31640625 175.43806458]
[75.91540527 189.77790833]
[71.51441193 204.11775208]
[67.11341095 218.45759583]
[62.71241379 232.79745483]
[68.05493927 244.53713989]
[64.09412384 256.39022827]
[53.47059631 262.17529297]
[48.85658646 276.44802856]
[44.24257660 290.72076416]
[39.62856674 304.99349976]
[35.01455688 319.26623535]
[38.13177872 334.77731323]
[26.85470009 344.50750732]
[22.24069214 358.78024292]
[17.62668228 373.05297852]
[13.01267242 387.32571411]
[8.39866352 401.59844971]
[21.99927330 407.97235107]
[34.69374847 416.00064087]
[46.28187943 425.55673218]
[56.58090591 436.48983765]
[65.42839813 448.62759399]
[72.68481445 461.77856445]
[78.23571014 475.73529053]
[81.99354553 490.27770996]
[83.89904785 505.17645264]
[83.92217255 520.19653320]
[82.06254578 535.10107422]
[78.34950256 549.65496826]
[72.84159851 563.62878418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[41 191]
[42 190]
[43 189]
[44 188]
[45 187]
[47 184]
[48 183]
[49 182]
[50 181]
[51 180]
[56 179]
[57 178]
[58 177]
[59 176]
[62 173]
[63 172]
[64 171]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[76 136]
[77 135]
[78 134]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
