%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-63.15331268 433.22302246]
[-58.68135834 447.56195068]
[-56.04186249 462.34832764]
[-55.27645111 477.34890747]
[-56.39719772 492.32711792]
[-59.38642502 507.04675293]
[-64.19699097 521.27563477]
[-70.75302124 534.78942871]
[-78.95111847 547.37487793]
[-88.66199493 558.83361816]
[-99.73249054 568.98486328]
[-111.98800659 577.66845703]
[-125.23525238 584.74755859]
[-139.26530457 590.11047363]
[-153.85688782 593.67260742]
[-168.77987671 595.37780762]
[-183.79890442 595.19915771]
[-198.67710876 593.13952637]
[-213.17984009 589.23126221]
[-227.07836914 583.53619385]
[-240.15347290 576.14398193]
[-252.19897461 567.17126465]
[-263.02487183 556.75958252]
[-272.46041870 545.07312012]
[-280.35684204 532.29620361]
[-286.58956909 518.63031006]
[-291.06033325 504.29101562]
[-293.69857788 489.50442505]
[-294.46270752 474.50378418]
[-293.34069824 459.52566528]
[-290.35025024 444.80627441]
[-285.53848267 430.57775879]
[-278.98132324 417.06454468]
[-270.78216553 404.47976685]
[-261.07031250 393.02188110]
[-249.99896240 382.87158203]
[-237.74272156 374.18896484]
[-224.49487305 367.11099243]
[-210.46437073 361.74923706]
[-195.87248230 358.18832397]
[-180.94935608 356.48440552]
[-165.93034363 356.66430664]
[-151.05230713 358.72525024]
[-136.54991150 362.63467407]
[-122.65187073 368.33096313]
[-109.57737732 375.72427368]
[-100.61668396 363.69488525]
[-91.65599060 351.66552734]
[-82.69528961 339.63613892]
[-73.73459625 327.60678101]
[-77.36408234 315.24325562]
[-73.14696503 302.86190796]
[-62.41077805 295.05520630]
[-48.94324875 294.85437012]
[-39.80444717 282.95974731]
[-38.18580246 268.15335083]
[-23.64250946 261.92413330]
[-14.50370789 250.02949524]
[-5.36490488 238.13487244]
[3.77389717 226.24023438]
[12.55450058 214.07878113]
[20.96911812 201.66128540]
[29.38373756 189.24378967]
[37.79835510 176.82629395]
[38.94831467 169.52565002]
[46.43183899 164.28784180]
[55.03040314 151.99699402]
[63.62896729 139.70616150]
[72.22753143 127.41532135]
[80.73435974 115.06081390]
[89.14897919 102.64331818]
[97.47092438 90.16352081]
[98.09441376 71.75991821]
[114.06407166 64.48413849]
[122.10524750 51.82161331]
[129.86163330 38.98267365]
[137.32937622 25.97372055]
[144.79711914 12.96476841]
[152.26486206 -0.04418442]
[157.40681458 -14.13532543]
[160.07261658 -28.89654160]
[162.73840332 -43.65776062]
[164.96353149 -58.49180222]
[166.74598694 -73.38552094]
[159.10826111 -90.14101410]
[170.16659546 -103.76747131]
[171.72711182 -118.68608093]
[173.17652893 -133.61589050]
[174.51477051 -148.55607605]
[175.85299683 -163.49626160]
[161.30232239 -167.28146362]
[147.57319641 -173.41014099]
[135.04014587 -181.71510315]
[124.04507446 -191.96978760]
[114.88795471 -203.89442444]
[107.81859589 -217.16371155]
[103.02984619 -231.41564941]
[100.65235138 -246.26144409]
[100.75096893 -261.29608154]
[103.32302094 -276.10940552]
[108.29831696 -290.29727173]
[115.54114532 -303.47268677]
[124.85391235 -315.27618408]
[135.98255920 -325.38574219]
[148.62348938 -333.52557373]
[162.43183899 -339.47360229]
[177.03091431 -343.06759644]
[192.02244568 -344.20950317]
[206.99743652 -342.86816406]
[221.54737854 -339.08013916]
[235.27534485 -332.94882202]
[247.80679321 -324.64141846]
[258.79986572 -314.38464355]
[267.95471191 -302.45822144]
[275.02151489 -289.18759155]
[279.80749512 -274.93472290]
[282.18212891 -260.08847046]
[282.08062744 -245.05386353]
[279.50573730 -230.24104309]
[274.52767944 -216.05410767]
[267.28231812 -202.88009644]
[257.96728516 -191.07841492]
[246.83668518 -180.97099304]
[234.19419861 -172.83360291]
[220.38470459 -166.88821411]
[205.78492737 -163.29702759]
[190.79318237 -162.15802002]
[189.45495605 -147.21783447]
[188.11671448 -132.27764893]
[190.65093994 -125.33506775]
[186.64572144 -117.12555695]
[185.08518982 -102.20694733]
[192.45631409 -92.61564636]
[191.27832031 -80.17394257]
[181.63970947 -71.60305786]
[179.85723877 -56.70933914]
[181.48181152 -54.42484665]
[182.29936218 -51.35919189]
[182.00779724 -47.81653595]
[180.42065430 -44.20467758]
[177.49963379 -40.99196243]
[174.83383179 -26.23074722]
[172.16802979 -11.46953011]
[181.13078308 -23.49738312]
[192.77098083 -32.95812607]
[206.37684631 -39.27323532]
[221.11634827 -42.05653381]
[236.08819580 -41.13782883]
[250.37683105 -36.57329178]
[263.10848999 -28.64205170]
[273.50466919 -17.82910347]
[280.92956543 -4.79566479]
[284.92922974 9.66126537]
[285.25903320 24.65763855]
[281.89880371 39.27642441]
[275.05401611 52.62367249]
[265.14324951 63.88320160]
[252.77256775 72.36647797]
[238.69842529 77.55475616]
[223.78144836 79.13076019]
[208.93382263 76.99812317]
[195.06349182 71.28726196]
[183.01863098 62.34738541]
[173.53579712 50.72517776]
[167.19483948 37.13134003]
[164.38354492 22.39714241]
[165.27381897 7.42355680]
[157.80607605 20.43250847]
[150.33833313 33.44145966]
[142.87059021 46.45041275]
[143.43374634 49.93110275]
[142.33898926 53.85749054]
[139.39517212 57.44738007]
[134.76777649 59.86278534]
[126.72659302 72.52531433]
[129.05494690 84.39566803]
[122.45934296 95.01083374]
[110.01232147 98.39233398]
[108.57487488 106.32367706]
[101.56647491 111.05793762]
[93.15185547 123.47543335]
[90.92839813 132.33511353]
[84.51837158 136.01388550]
[75.91980743 148.30471802]
[67.32124329 160.59556580]
[58.72267914 172.88639832]
[50.21585083 185.24090576]
[41.80123138 197.65840149]
[33.38661575 210.07589722]
[24.97199631 222.49339294]
[24.81419182 226.83264160]
[23.42363930 230.52464294]
[21.15518379 233.26133728]
[18.42727280 234.88156128]
[15.66853046 235.37902832]
[6.52972794 247.27366638]
[-2.60907459 259.16830444]
[-11.74787712 271.06292725]
[-14.02019024 286.72012329]
[-27.90981483 292.09854126]
[-37.04861832 303.99319458]
[-34.45878983 321.29382324]
[-44.97555161 334.84786987]
[-61.70521927 336.56747437]
[-70.66591644 348.59683228]
[-79.62660980 360.62622070]
[-88.58731079 372.65560913]
[-97.54800415 384.68496704]
[-86.72122955 395.09573364]
[-77.28468323 406.78140259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[54 201]
[55 200]
[57 198]
[58 197]
[59 196]
[60 195]
[61 190]
[62 189]
[63 188]
[64 187]
[66 186]
[67 185]
[68 184]
[69 183]
[70 181]
[71 180]
[72 178]
[74 175]
[75 174]
[76 170]
[77 169]
[78 168]
[79 167]
[80 143]
[81 142]
[82 141]
[83 136]
[84 135]
[86 132]
[87 131]
[88 129]
[89 128]
[90 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
