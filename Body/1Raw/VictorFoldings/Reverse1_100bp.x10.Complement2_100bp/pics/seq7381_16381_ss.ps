%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[91.44434357 736.77410889]
[76.56372070 734.84545898]
[61.83538437 731.97692871]
[47.31863022 728.18005371]
[33.07192230 723.47003174]
[19.15262222 717.86596680]
[5.61677980 711.39038086]
[-7.48110104 704.06933594]
[-20.08827782 695.93225098]
[-32.15398788 687.01202393]
[-43.62964630 677.34442139]
[-54.46903992 666.96850586]
[-64.62853241 655.92596436]
[-74.06719971 644.26135254]
[-82.74704742 632.02154541]
[-90.63311768 619.25585938]
[-97.69366455 606.01568604]
[-103.90024567 592.35443115]
[-109.22788239 578.32696533]
[-113.65511322 563.98992920]
[-117.16410828 549.40087891]
[-119.74074554 534.61865234]
[-121.37464905 519.70281982]
[-122.05923462 504.71334839]
[-121.79174805 489.71066284]
[-120.57326508 474.75512695]
[-118.40869904 459.90698242]
[-115.30675507 445.22604370]
[-111.27993011 430.77139282]
[-106.34444427 416.60122681]
[-100.52015686 402.77261353]
[-93.83053589 389.34124756]
[-86.30250549 376.36120605]
[-77.96638489 363.88476562]
[-68.85574341 351.96215820]
[-59.00725937 340.64138794]
[-48.46059799 329.96804810]
[-37.25821686 319.98510742]
[-25.44523430 310.73275757]
[-13.06921196 302.24826050]
[-0.17998536 294.56579590]
[13.17054558 287.71627808]
[26.92862129 281.72729492]
[41.03884506 276.62295532]
[55.44439316 272.42382812]
[70.08726501 269.14682007]
[84.90850067 266.80514526]
[99.84841919 265.40817261]
[99.40180969 250.41482544]
[98.95520782 235.42147827]
[96.15509033 231.55258179]
[95.75566101 225.88357544]
[98.72522736 219.97653198]
[98.72522736 204.97653198]
[98.72522736 189.97653198]
[98.72522736 174.97653198]
[98.72522736 159.97653198]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[86.02548218 41.71462250]
[83.80036163 26.88057899]
[81.57524872 12.04653454]
[77.20745087 4.02405596]
[79.42913818 -3.02476621]
[77.42512512 -17.89029503]
[75.42111206 -32.75582123]
[73.41709900 -47.62134933]
[71.41308594 -62.48687744]
[69.18796539 -77.32092285]
[66.74224091 -92.12019348]
[64.29650879 -106.91946411]
[61.85078430 -121.71873474]
[46.83035660 -121.35420990]
[31.90538406 -123.08374786]
[17.36638451 -126.87368774]
[3.49636316 -132.65023804]
[-9.43469429 -140.30099487]
[-21.17508125 -149.67698669]
[-31.49626732 -160.59574890]
[-40.19734955 -172.84472656]
[-47.10895538 -186.18548584]
[-52.09654999 -200.35833740]
[-55.06305313 -215.08743286]
[-55.95071411 -230.08602905]
[-54.74225616 -245.06221008]
[-51.46120453 -259.72442627]
[-46.17142105 -273.78729248]
[-38.97587967 -286.97708130]
[-30.01463890 -299.03701782]
[-19.46213341 -309.73239136]
[-7.52377033 -318.85498047]
[5.56806612 -326.22723389]
[19.55854034 -331.70562744]
[34.17531967 -335.18353271]
[49.13389206 -336.59323120]
[64.14307404 -335.90731812]
[78.91072083 -333.13916016]
[93.14936829 -328.34255981]
[106.58184814 -321.61096191]
[118.94670868 -313.07537842]
[130.00326538 -302.90191650]
[139.53627014 -291.28866577]
[147.36019897 -278.46166992]
[153.32273865 -264.67056274]
[157.30781555 -250.18383789]
[159.23788452 -235.28347778]
[159.07536316 -220.25950623]
[156.82339478 -205.40437317]
[152.52584839 -191.00724792]
[146.26637268 -177.34837341]
[138.16677856 -164.69360352]
[128.38476562 -153.28930664]
[117.11071777 -143.35743713]
[104.56410217 -135.09132385]
[90.98913574 -128.65188599]
[76.65005493 -124.16445923]
[79.09577942 -109.36518860]
[81.54151154 -94.56591797]
[83.98723602 -79.76664734]
[87.27914429 -76.30653381]
[88.43236542 -70.74172211]
[86.27861023 -64.49089050]
[88.28262329 -49.62536621]
[90.28663635 -34.75983810]
[92.29065704 -19.89430809]
[94.29467010 -5.02877998]
[96.40929413 9.82141781]
[98.63440704 24.65546227]
[100.85952759 39.48950577]
[103.46241760 41.86800766]
[105.04257965 45.62541962]
[104.96446991 50.26731491]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[121.18949127 130.83633423]
[135.27661133 125.68338776]
[149.73335266 129.68373108]
[159.16769409 141.34533691]
[160.06086731 156.31872559]
[152.07974243 169.01918030]
[138.20106506 174.70974731]
[123.60126495 171.26799011]
[113.72522736 159.97653198]
[113.72522736 174.97653198]
[113.72522736 189.97653198]
[113.72522736 204.97653198]
[113.72522736 219.97653198]
[113.94855499 234.97486877]
[114.39515686 249.96821594]
[114.84176636 264.96157837]
[129.83834839 265.46682739]
[144.77267456 266.92218018]
[159.58464050 269.32180786]
[174.21458435 272.65606689]
[188.60360718 276.91149902]
[202.69375610 282.07095337]
[216.42831421 288.11367798]
[229.75195312 295.01535034]
[242.61103821 302.74816895]
[254.95379639 311.28100586]
[266.73049927 320.57946777]
[277.89376831 330.60614014]
[288.39862061 341.32064819]
[298.20275879 352.67984009]
[307.26669312 364.63800049]
[315.55395508 377.14694214]
[323.03118896 390.15631104]
[329.66821289 403.61373901]
[335.43838501 417.46499634]
[340.31842041 431.65435791]
[344.28869629 446.12466431]
[347.33319092 460.81762695]
[349.43969727 475.67413330]
[350.59967041 490.63430786]
[350.80850220 505.63793945]
[350.06530762 520.62457275]
[348.37307739 535.53393555]
[345.73864746 550.30596924]
[342.17263794 564.88116455]
[337.68939209 579.20080566]
[332.30694580 593.20733643]
[326.04696655 606.84423828]
[318.93472290 620.05664062]
[310.99877930 632.79138184]
[302.27114868 644.99713135]
[292.78692627 656.62481689]
[282.58432007 667.62750244]
[271.70443726 677.96099854]
[260.19107056 687.58361816]
[248.09056091 696.45660400]
[235.45166016 704.54431152]
[222.32525635 711.81408691]
[208.76419067 718.23675537]
[194.82308960 723.78631592]
[180.55807495 728.44055176]
[166.02658081 732.18066406]
[151.28713989 734.99157715]
[136.39909363 736.86199951]
[121.42238617 737.78442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 161]
[49 160]
[50 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 145]
[59 144]
[60 143]
[63 141]
[64 140]
[65 139]
[66 135]
[67 134]
[68 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 125]
[76 124]
[77 123]
[78 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
