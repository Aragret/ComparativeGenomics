%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[138.73683167 534.18090820]
[123.39325714 533.49505615]
[110.45687866 525.21582031]
[103.40752411 511.57025146]
[104.14142609 496.22891235]
[112.46116638 483.31854248]
[126.12878418 476.31201172]
[126.79857635 461.32696533]
[127.46836090 446.34191895]
[128.13813782 431.35687256]
[128.80792236 416.37185669]
[128.02661133 401.39221191]
[125.80149078 386.55816650]
[116.26337433 379.11834717]
[114.28818512 366.77807617]
[121.47335815 356.06655884]
[119.46934509 341.20104980]
[117.46533203 326.33551025]
[107.10883331 321.54916382]
[100.27819061 312.26165771]
[98.76354218 300.71176147]
[103.05587006 289.75381470]
[112.19656372 282.15222168]
[110.63603973 267.23361206]
[109.07552338 252.31500244]
[97.37920380 243.16448975]
[95.58409119 228.05712891]
[105.26129913 215.85099792]
[103.70077515 200.93240356]
[92.64244843 187.30593872]
[100.28017426 170.55044556]
[98.49771118 155.65672302]
[89.18533325 147.93621826]
[87.57844543 135.54260254]
[95.07935333 125.04979706]
[93.51882935 110.13118744]
[91.73635864 95.23747253]
[89.73234558 80.37194061]
[87.72833252 65.50641632]
[85.72431946 50.64088821]
[83.72030640 35.77536011]
[81.71629333 20.90983009]
[75.34431458 34.48914719]
[63.76635361 44.02596664]
[49.21794510 47.67887497]
[34.50814819 44.74255753]
[22.47720337 35.78396606]
[15.44809246 22.53286743]
[14.77802753 7.54784155]
[20.59638786 -6.27773952]
[31.77973938 -16.27437210]
[46.16875076 -20.51186180]
[60.98513031 -18.17201805]
[73.36807251 -9.70662785]
[80.92699432 3.25099277]
[81.59678650 -11.73404598]
[82.26657104 -26.71908569]
[82.93635559 -41.70412445]
[71.16470337 -32.40744400]
[56.25168610 -34.02048492]
[46.74015427 -45.61922836]
[48.07874680 -60.55937958]
[59.50065613 -70.28254700]
[74.46289062 -69.21885681]
[84.39409637 -57.97853851]
[86.39810944 -72.84406281]
[88.40212250 -87.70959473]
[77.54294586 -101.42446136]
[79.91587067 -118.41516876]
[93.56880951 -128.23535156]
[95.35127258 -143.12907410]
[97.13374329 -158.02278137]
[98.91620636 -172.91650391]
[100.69866943 -187.81022644]
[102.48114014 -202.70393372]
[100.23455811 -208.92201233]
[101.30480194 -214.50337219]
[104.54482269 -218.01211548]
[106.76994324 -232.84616089]
[108.99506378 -247.68020630]
[111.22017670 -262.51425171]
[104.19528198 -273.33154297]
[106.35397339 -285.64102173]
[116.00180054 -292.93801880]
[118.44752502 -307.73730469]
[120.89325714 -322.53656006]
[114.03018951 -333.45724487]
[116.37191772 -345.73324585]
[126.12731171 -352.88577271]
[128.79310608 -367.64700317]
[131.45890808 -382.40820312]
[134.12469482 -397.16943359]
[136.79049683 -411.93063354]
[139.45628357 -426.69186401]
[142.12208557 -441.45306396]
[144.01538086 -456.33309937]
[145.13102722 -471.29156494]
[146.24667358 -486.25003052]
[132.16792297 -491.75277710]
[120.33766174 -501.16213989]
[111.80781555 -513.64147949]
[107.33686066 -528.08105469]
[107.32234955 -543.19696045]
[111.76556396 -557.64514160]
[120.27143097 -570.14080811]
[132.08360291 -579.57287598]
[146.15176392 -585.10266113]
[161.22496033 -586.23846436]
[175.96290588 -582.87921143]
[189.05511475 -575.32373047]
[199.33744812 -564.24377441]
[205.89558411 -550.62463379]
[208.14637756 -535.67718506]
[205.88970947 -520.73065186]
[199.32623291 -507.11404419]
[189.03956604 -496.03814697]
[175.94439697 -488.48779297]
[161.20512390 -485.13436890]
[160.08947754 -470.17590332]
[158.97383118 -455.21746826]
[170.28247070 -465.07214355]
[185.27697754 -465.47796631]
[197.10206604 -456.24935913]
[200.35148621 -441.60552979]
[193.53961182 -428.24145508]
[179.78077698 -422.26699829]
[165.36531067 -426.41360474]
[156.88330078 -438.78729248]
[154.21751404 -424.02606201]
[151.55171204 -409.26483154]
[148.88591003 -394.50363159]
[146.22012329 -379.74240112]
[143.55432129 -364.98120117]
[140.88853455 -350.21997070]
[147.70370483 -334.04837036]
[135.69252014 -320.09085083]
[133.24679565 -305.29156494]
[130.80107117 -290.49230957]
[137.85626221 -274.42395020]
[126.05422211 -260.28912354]
[123.82910156 -245.45509338]
[121.60398865 -230.62104797]
[119.37886810 -215.78700256]
[117.37485504 -200.92147827]
[115.59239197 -186.02775574]
[113.80992126 -171.13403320]
[112.02745819 -156.24032593]
[110.24499512 -141.34660339]
[108.46252441 -126.45288849]
[117.76541138 -117.53740692]
[120.27210999 -104.70001221]
[114.84757233 -92.58453369]
[103.26765442 -85.70558167]
[101.26364136 -70.84004974]
[99.25962830 -55.97452164]
[97.92139435 -41.03433990]
[97.25160980 -26.04929924]
[96.58182526 -11.06426048]
[95.91203308 3.92077804]
[96.58182526 18.90581703]
[98.58583832 33.77134323]
[100.58985138 48.63687134]
[102.59386444 63.50240326]
[104.59787750 78.36792755]
[106.60189056 93.23345947]
[109.94493866 97.27548981]
[110.78533173 102.90283966]
[108.43743134 108.57066345]
[109.99795532 123.48927307]
[121.15706635 138.13699341]
[113.39142609 153.87426758]
[115.17389679 168.76797485]
[124.81250000 177.33886719]
[125.99050140 189.78057861]
[118.61937714 199.37187195]
[120.17990112 214.29048157]
[132.17356873 224.22978210]
[133.54364014 239.38159180]
[123.99412537 250.75447083]
[125.55464935 265.67306519]
[127.11517334 280.59167480]
[142.27674866 291.95129395]
[144.28598022 310.46820068]
[132.33085632 324.33151245]
[134.33486938 339.19702148]
[136.33888245 354.06256104]
[147.92916870 368.37155151]
[140.63552856 384.33303833]
[142.86065674 399.16708374]
[148.73023987 385.36318970]
[159.65124512 375.08059692]
[173.78327942 370.05212402]
[188.74484253 371.12512207]
[202.01466370 378.11883545]
[211.35653687 389.85464478]
[215.19619751 404.35488892]
[212.88658142 419.17602539]
[204.81690979 431.82040405]
[192.34706116 440.15725708]
[177.57843018 442.78164673]
[162.99978638 439.25134277]
[151.06787109 430.16125488]
[143.79296875 417.04162598]
[143.12318420 432.02667236]
[142.45339966 447.01171875]
[141.78361511 461.99673462]
[141.11383057 476.98178101]
[154.10185242 485.17974854]
[161.23661804 498.78088379]
[160.59890747 514.12652588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 189]
[13 188]
[16 186]
[17 185]
[18 184]
[23 181]
[24 180]
[25 179]
[28 176]
[29 175]
[31 172]
[32 171]
[35 169]
[36 168]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[55 159]
[56 158]
[57 157]
[58 156]
[65 155]
[66 154]
[67 153]
[70 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[78 143]
[79 142]
[80 141]
[81 140]
[84 138]
[85 137]
[86 136]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
