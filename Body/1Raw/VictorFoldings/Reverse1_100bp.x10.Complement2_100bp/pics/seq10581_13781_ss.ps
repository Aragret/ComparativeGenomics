%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[12.37969875 673.09185791]
[0.33229223 682.04882812]
[-12.53504658 689.78173828]
[-26.09839439 696.21618652]
[-40.22712708 701.29022217]
[-54.78516769 704.95495605]
[-69.63231659 707.17504883]
[-84.62558746 707.92919922]
[-99.62057495 707.21008301]
[-114.47286987 705.02465820]
[-129.03942871 701.39392090]
[-143.17997742 696.35290527]
[-156.75831604 689.95013428]
[-169.64367676 682.24725342]
[-181.71195984 673.31848145]
[-192.84695435 663.24975586]
[-202.94140625 652.13812256]
[-211.89810181 640.09051514]
[-219.63078308 627.22302246]
[-226.06498718 613.65954590]
[-231.13873291 599.53076172]
[-234.80316162 584.97259521]
[-237.02297974 570.12542725]
[-237.77680969 555.13214111]
[-237.05738831 540.13714600]
[-234.87165833 525.28491211]
[-231.24064636 510.71844482]
[-226.19934082 496.57800293]
[-219.79629517 482.99978638]
[-212.09317017 470.11456299]
[-203.16413879 458.04647827]
[-193.09521484 446.91168213]
[-181.98336792 436.81744385]
[-169.93560791 427.86099243]
[-157.06794739 420.12857056]
[-143.50434875 413.69464111]
[-129.37541199 408.62115479]
[-114.81722260 404.95703125]
[-99.96998596 402.73751831]
[-84.97668457 401.98397827]
[-69.98172760 402.70370483]
[-55.12952042 404.88973999]
[-40.56310272 408.52102661]
[-35.52618790 394.39199829]
[-30.48927116 380.26296997]
[-25.45235443 366.13394165]
[-20.41543770 352.00491333]
[-15.37852192 337.87588501]
[-10.34160614 323.74685669]
[-22.74410439 332.18356323]
[-37.69573212 333.38723755]
[-51.28816223 327.04330444]
[-59.96837616 314.80999756]
[-61.46737671 299.88507080]
[-55.39333725 286.16989136]
[-43.33399200 277.24957275]
[-28.44162560 275.45584106]
[-14.60906792 281.25759888]
[-5.45211601 293.13827515]
[-3.36426997 307.99139404]
[3.71283555 294.76586914]
[10.78994083 281.54034424]
[17.76839256 268.26248169]
[24.64780617 254.93305969]
[31.52721786 241.60363770]
[38.40663147 228.27420044]
[45.28604507 214.94477844]
[52.16545486 201.61534119]
[59.04486847 188.28591919]
[65.01643372 174.52581787]
[70.05334473 160.39677429]
[75.09026337 146.26774597]
[80.12718201 132.13871765]
[79.41226959 124.78272247]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[102.47941589 49.51352310]
[107.31085205 37.98785782]
[118.33523560 33.00893784]
[123.99801636 19.11891174]
[129.66081238 5.22888422]
[126.73269653 -12.95098591]
[141.00462341 -23.16268539]
[146.45999146 -37.13548279]
[151.70671082 -51.18795395]
[156.74362183 -65.31698608]
[161.78053284 -79.44601440]
[161.71450806 -88.58020782]
[166.99905396 -93.74695587]
[172.24577332 -107.79943085]
[177.49249268 -121.85189819]
[182.73921204 -135.90437317]
[187.98593140 -149.95684814]
[193.23265076 -164.00930786]
[180.14535522 -171.40318298]
[168.37591553 -180.75341797]
[158.21418762 -191.82977295]
[149.91036987 -204.35946655]
[143.66899109 -218.03395081]
[139.64373779 -232.51649475]
[137.93371582 -247.45042419]
[138.58106995 -262.46798706]
[141.56982422 -277.19937134]
[146.82641602 -291.28179932]
[154.22135925 -304.36849976]
[163.57257080 -316.13714600]
[174.64974976 -326.29797363]
[187.18014526 -334.60073853]
[200.85514832 -340.84100342]
[215.33801270 -344.86508179]
[230.27207947 -346.57385254]
[245.28959656 -345.92526245]
[260.02075195 -342.93527222]
[274.10272217 -337.67755127]
[287.18881226 -330.28152466]
[298.95669556 -320.92932129]
[309.11660767 -309.85131836]
[317.41833496 -297.32025146]
[323.65747070 -283.64471436]
[327.68032837 -269.16152954]
[329.38787842 -254.22731018]
[328.73806763 -239.20983887]
[325.74685669 -224.47895813]
[320.48797607 -210.39738464]
[313.09085083 -197.31193542]
[303.73770142 -185.54481506]
[292.65884399 -175.38581848]
[280.12710571 -167.08511353]
[266.45104980 -160.84710693]
[251.96752930 -156.82543945]
[237.03317261 -155.11912537]
[222.01576233 -155.77018738]
[207.28511047 -158.76258850]
[202.03839111 -144.71012878]
[196.79168701 -130.65765381]
[191.54496765 -116.60517883]
[186.29824829 -102.55271149]
[181.05152893 -88.50023651]
[175.90956116 -74.40909576]
[170.87265015 -60.28006744]
[165.83573914 -46.15103912]
[167.03701782 -41.52870560]
[165.34732056 -36.10265732]
[160.43278503 -31.68012619]
[154.97743225 -17.70732880]
[159.54557800 -6.50649881]
[155.11497498 5.17911673]
[143.55082703 10.89167023]
[137.88804626 24.78169823]
[132.22526550 38.67172623]
[135.54634094 55.90359497]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[94.25621033 137.17564392]
[89.21929169 151.30467224]
[84.18238068 165.43370056]
[79.14546204 179.56272888]
[91.86849976 171.61764526]
[106.86824036 171.70594788]
[119.49684906 179.80027771]
[125.84121704 193.39251709]
[123.93547058 208.27096558]
[114.37013245 219.82536316]
[100.10911560 224.47547913]
[85.57135773 220.78039551]
[75.26154327 209.88508606]
[72.37429810 195.16532898]
[65.49488831 208.49475098]
[58.61547089 221.82418823]
[51.73606110 235.15361023]
[44.85664749 248.48304749]
[37.97723389 261.81246948]
[31.09782219 275.14190674]
[29.94292641 284.20303345]
[24.01546860 288.61743164]
[16.93836212 301.84295654]
[9.86125755 315.06848145]
[3.78742361 328.78375244]
[-1.24949265 342.91278076]
[-6.28640890 357.04180908]
[-11.32332516 371.17083740]
[-16.36024094 385.29989624]
[-21.39715767 399.42892456]
[-26.43407440 413.55795288]
[-12.85548115 419.96017456]
[0.03018809 427.66253662]
[12.09883499 436.59082031]
[23.23423004 446.65908813]
[33.32912827 457.77032471]
[42.28630829 469.81756592]
[50.01950836 482.68475342]
[56.45424652 496.24795532]
[61.52855682 510.37658691]
[65.19356537 524.93457031]
[67.41397858 539.78167725]
[68.16841125 554.77490234]
[67.44959259 569.76995850]
[65.26445007 584.62225342]
[61.63402939 599.18890381]
[56.59329224 613.32952881]
[50.19078445 626.90802002]
[42.48817062 639.79351807]
[33.55962753 651.86199951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 191]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[60 184]
[61 183]
[62 182]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
[69 174]
[70 164]
[71 163]
[72 162]
[73 161]
[75 160]
[76 159]
[78 158]
[79 157]
[80 156]
[83 154]
[84 153]
[85 152]
[87 149]
[88 148]
[89 145]
[90 144]
[91 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
