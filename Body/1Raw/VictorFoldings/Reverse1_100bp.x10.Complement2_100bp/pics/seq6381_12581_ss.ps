%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[-17.94799995 491.18072510]
[-21.25156975 505.82940674]
[-26.20346451 520.00604248]
[-32.73912430 533.52575684]
[-40.77334595 546.21234131]
[-50.20138550 557.90032959]
[-60.90032959 568.43743896]
[-72.73069000 577.68621826]
[-85.53824615 585.52618408]
[-99.15601349 591.85498047]
[-113.40645599 596.59020996]
[-128.10380554 599.67016602]
[-143.05642700 601.05456543]
[-158.06941223 600.72546387]
[-172.94700623 598.68713379]
[-187.49526978 594.96618652]
[-201.52452087 589.61102295]
[-214.85188293 582.69152832]
[-227.30357361 574.29791260]
[-238.71730042 564.53955078]
[-248.94421387 553.54376221]
[-257.85104370 541.45379639]
[-265.32159424 528.42736816]
[-271.25854492 514.63421631]
[-275.58447266 500.25424194]
[-278.24295044 485.47485352]
[-279.19934082 470.48876953]
[-278.44119263 455.49133301]
[-275.97836304 440.67810059]
[-271.84298706 426.24215698]
[-266.08892822 412.37173462]
[-258.79125977 399.24761963]
[-250.04510498 387.04098511]
[-239.96447754 375.91088867]
[-228.68078613 366.00250244]
[-216.34117126 357.44497681]
[-203.10647583 350.34985352]
[-189.14926147 344.80966187]
[-174.65147400 340.89660645]
[-159.80212402 338.66171265]
[-144.79481506 338.13412476]
[-129.82518005 339.32073975]
[-115.08840179 342.20602417]
[-100.77658844 346.75244141]
[-87.07632446 352.90063477]
[-79.41572571 340.00430298]
[-71.75512695 327.10800171]
[-64.09452820 314.21166992]
[-56.43393326 301.31533813]
[-48.77333832 288.41900635]
[-51.45407867 276.62322998]
[-45.17745209 265.81640625]
[-32.83663177 262.06579590]
[-24.98487473 249.28497314]
[-25.20360565 244.51409912]
[-22.42762375 239.55517578]
[-16.70425987 236.24539185]
[-8.47545242 223.70399475]
[-23.46879387 224.15089417]
[-33.28241348 212.80661011]
[-30.68207932 198.03370667]
[-17.58465767 190.72224426]
[-3.64508224 196.26194763]
[0.86113942 210.56750488]
[9.99994183 198.67288208]
[19.13874435 186.77824402]
[28.27754593 174.88360596]
[37.41634750 162.98898315]
[46.55515289 151.09434509]
[55.69395447 139.19970703]
[40.70890045 138.53022766]
[31.76621056 126.48744965]
[35.45810318 111.94888306]
[49.06304932 105.63180542]
[62.55199051 112.19293976]
[65.98173523 126.79403687]
[75.97990417 115.61206818]
[71.39384460 101.54571533]
[74.43749237 87.06710052]
[84.29907227 76.03789520]
[98.34833527 71.39976501]
[112.83811951 74.38976288]
[122.83629608 63.20779037]
[132.83447266 52.02581406]
[142.83264160 40.84384155]
[146.21981812 32.36063385]
[153.06387329 29.57123184]
[163.22741699 18.53935432]
[173.39096069 7.50747681]
[177.05108643 -7.88453817]
[191.36515808 -12.00235748]
[201.27981567 -23.25845337]
[210.94062805 -34.73315430]
[220.60144043 -46.20785141]
[230.26223755 -57.68255234]
[239.92304993 -69.15725708]
[249.58386230 -80.63195038]
[259.15899658 -92.17825317]
[268.64788818 -103.79551697]
[258.07583618 -114.45615387]
[248.67602539 -126.16349030]
[240.55151367 -138.78924561]
[233.79125977 -152.19509888]
[228.46936035 -166.23416138]
[224.64411926 -180.75259399]
[222.35745239 -195.59136963]
[221.63441467 -210.58786011]
[222.48291016 -225.57778931]
[224.89366150 -240.39689636]
[228.84025574 -254.88282776]
[234.27943420 -268.87686157]
[241.15161133 -282.22567749]
[249.38150024 -294.78302002]
[258.87890625 -306.41128540]
[269.53982544 -316.98309326]
[281.24737549 -326.38259888]
[293.87332153 -334.50680542]
[307.27935791 -341.26672363]
[321.31854248 -346.58828735]
[335.83706665 -350.41317749]
[350.67587280 -352.69946289]
[365.67239380 -353.42214966]
[380.66229248 -352.57330322]
[395.48135376 -350.16217041]
[409.96719360 -346.21524048]
[423.96109009 -340.77572632]
[437.30972290 -333.90322876]
[449.86688232 -325.67303467]
[461.49490356 -316.17532349]
[472.06646729 -305.51416016]
[481.46566772 -293.80636597]
[489.58959961 -281.18023682]
[496.34918213 -267.77404785]
[501.67041016 -253.73472595]
[505.49493408 -239.21609497]
[507.78088379 -224.37722778]
[508.50320435 -209.38069153]
[507.65396118 -194.39082336]
[505.24249268 -179.57182312]
[501.29519653 -165.08609009]
[495.85534668 -151.09231567]
[488.98251343 -137.74383545]
[480.75201416 -125.18689728]
[471.25402832 -113.55908966]
[460.59262085 -102.98780060]
[448.88461304 -93.58886719]
[436.25827026 -85.46526337]
[422.85192871 -78.70599365]
[408.81246948 -73.38511658]
[394.29376221 -69.56093597]
[379.45483398 -67.27535248]
[364.45828247 -66.55339813]
[349.46841431 -67.40299225]
[334.64947510 -69.81481934]
[320.16384888 -73.76246643]
[306.17019653 -79.20266724]
[292.82186890 -86.07582092]
[280.26513672 -94.30661774]
[270.77624512 -82.68935394]
[268.97955322 -75.52042389]
[261.05856323 -70.97114563]
[251.39775085 -59.49644470]
[241.73693848 -48.02174377]
[232.07614136 -36.54704285]
[222.41532898 -25.07234192]
[212.75451660 -13.59764290]
[212.69012451 -10.07227802]
[210.91499329 -6.40295267]
[207.38005066 -3.39338470]
[202.39703369 -1.83881044]
[199.46388245 12.76413059]
[184.42285156 17.67102432]
[174.25929260 28.70289993]
[164.09574890 39.73477936]
[154.01461792 50.84201050]
[144.01643372 62.02398682]
[134.01826477 73.20596313]
[124.02009583 84.38793182]
[128.60615540 98.45428467]
[125.56250763 112.93289948]
[115.70092773 123.96210480]
[101.65166473 128.60023499]
[87.16188049 125.61023712]
[77.16370392 136.79220581]
[67.58858490 148.33851624]
[58.44978333 160.23313904]
[49.31098175 172.12777710]
[40.17218018 184.02241516]
[31.03337669 195.91703796]
[21.89457512 207.81167603]
[12.75577259 219.70631409]
[4.06594801 231.93280029]
[-4.16285992 244.47419739]
[-12.20403290 257.13671875]
[-20.05578804 269.91757202]
[-20.13105965 288.33157349]
[-35.87701035 296.07962036]
[-43.53760910 308.97592163]
[-51.19820404 321.87225342]
[-58.85880280 334.76858521]
[-66.51940155 347.66491699]
[-74.18000031 360.56124878]
[-62.22722244 369.65127563]
[-51.38856888 380.04461670]
[-41.80534363 391.60574341]
[-33.60248184 404.18392944]
[-26.88692284 417.61520386]
[-21.74621964 431.72445679]
[-18.24739265 446.32772827]
[-16.43605614 461.23468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[53 195]
[54 194]
[57 193]
[58 192]
[64 191]
[65 190]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[76 184]
[77 183]
[82 178]
[83 177]
[84 176]
[85 175]
[87 174]
[88 173]
[89 172]
[91 170]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
[97 161]
[98 159]
[99 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
