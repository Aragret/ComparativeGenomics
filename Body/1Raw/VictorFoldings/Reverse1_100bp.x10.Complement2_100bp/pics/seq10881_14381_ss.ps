%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[119.71271515 806.58489990]
[106.77750397 798.95489502]
[94.83552551 789.84857178]
[84.05442810 779.39367676]
[74.58556366 767.73706055]
[66.56185913 755.04229736]
[60.09596252 741.48767090]
[55.27863693 727.26342773]
[52.17750931 712.56921387]
[50.83611679 697.61138916]
[51.27329254 682.59985352]
[53.48289871 667.74542236]
[57.43391037 653.25665283]
[63.07086945 639.33679199]
[70.31463623 626.18145752]
[79.06352234 613.97515869]
[89.19470978 602.88934326]
[100.56596375 593.07958984]
[113.01765442 584.68365479]
[126.37498474 577.81939697]
[140.45042419 572.58312988]
[155.04640198 569.04846191]
[153.26393127 554.15472412]
[151.48146057 539.26104736]
[149.69900513 524.36730957]
[147.80570984 509.48727417]
[145.80169678 494.62173462]
[143.79768372 479.75622559]
[141.79367065 464.89068604]
[139.78965759 450.02514648]
[123.88621521 448.47753906]
[108.80149078 443.18276978]
[95.40554047 434.44195557]
[84.47204590 422.75515747]
[76.63359833 408.79266357]
[72.34511566 393.35662842]
[71.85745239 377.33496094]
[75.20269012 361.65020752]
[82.19210815 347.20651245]
[92.42679596 334.83743286]
[105.32041931 325.25790405]
[120.13282013 319.02279663]
[117.68709564 304.22351074]
[115.24137115 289.42425537]
[112.79563904 274.62496948]
[110.34991455 259.82571411]
[107.90418243 245.02644348]
[105.45845795 230.22717285]
[102.16655731 226.76704407]
[101.01332855 221.20223999]
[103.16708374 214.95140076]
[101.16307068 200.08587646]
[99.15905762 185.22035217]
[97.01416779 183.41548157]
[95.45497131 180.65222168]
[94.85009003 177.14944458]
[95.48217773 173.25521851]
[97.50560760 169.41337585]
[96.38996124 154.45492554]
[95.27430725 139.49647522]
[94.15866089 124.53802490]
[93.04301453 109.57956696]
[86.40578461 123.03122711]
[75.17686462 132.97665405]
[61.02199173 137.94047546]
[46.04095840 137.18635559]
[32.45611572 130.82617188]
[22.28269005 119.80339813]
[17.02985001 105.75321960]
[17.47682381 90.75988007]
[23.55730629 77.04755402]
[34.36928940 66.65039062]
[48.30888748 61.11074829]
[63.30823517 61.25039291]
[77.14227295 67.04861450]
[87.75881195 77.64527130]
[93.58254242 91.46655273]
[95.58655548 76.60102844]
[97.59056854 61.73550034]
[99.59458923 46.86997223]
[92.40941620 36.15847778]
[94.38459778 23.81820107]
[103.92271423 16.37838173]
[106.14782715 1.54433811]
[108.37294769 -13.28970528]
[102.76838684 -28.08495712]
[112.30805969 -39.52365494]
[114.53318024 -54.35770035]
[116.75829315 -69.19174194]
[118.65158844 -84.07177734]
[120.21211243 -98.99038696]
[121.77262878 -113.90898895]
[122.66545105 -128.88240051]
[122.88877869 -143.88073730]
[123.11210632 -158.87907410]
[123.33543396 -173.87741089]
[123.55876160 -188.87574768]
[109.30485535 -193.98506165]
[97.48382568 -203.44770813]
[89.37791443 -216.23727417]
[85.86639404 -230.96643066]
[87.33016205 -246.03746033]
[93.61045074 -259.81558228]
[104.02601624 -270.80624390]
[117.44705963 -277.81726074]
[132.41775513 -280.08813477]
[147.31420898 -277.37255859]
[160.52055359 -269.96502686]
[170.60426331 -258.66912842]
[176.47154236 -244.71012878]
[177.48594666 -229.60220337]
[173.53744507 -214.98413086]
[165.05433655 -202.44157410]
[152.95680237 -193.33506775]
[138.55709839 -188.65242004]
[138.33377075 -173.65408325]
[138.11044312 -158.65574646]
[137.88711548 -143.65740967]
[137.66378784 -128.65907288]
[149.15342712 -138.30210876]
[164.10784912 -137.13380432]
[173.96051025 -125.82339478]
[173.06733704 -110.85001373]
[161.93997192 -100.79108429]
[146.95269775 -101.40882111]
[136.69123840 -112.34846497]
[135.13070679 -97.42986298]
[133.57019043 -82.51125336]
[135.49452209 -79.55672455]
[136.08340454 -75.52333069]
[134.84536743 -71.04889679]
[131.59233093 -66.96662903]
[129.36721802 -52.13258362]
[127.14210510 -37.29853821]
[132.90582275 -23.56431961]
[123.20699310 -11.06458855]
[120.98187256 3.76945519]
[118.75675964 18.60349846]
[126.05039978 34.56500626]
[114.46011353 48.87398529]
[112.45610046 63.73951340]
[110.45208740 78.60504150]
[108.44807434 93.47057343]
[108.00146484 108.46392059]
[109.11711884 123.42237091]
[110.23276520 138.38082886]
[111.34841156 153.33927917]
[112.46406555 168.29772949]
[114.02458191 183.21633911]
[116.02859497 198.08186340]
[118.03261566 212.94738770]
[120.25772858 227.78143311]
[122.70345306 242.58070374]
[125.14918518 257.37997437]
[127.59490967 272.17926025]
[130.04063416 286.97851562]
[132.48637390 301.77780151]
[134.93209839 316.57705688]
[148.97824097 317.36120605]
[162.54458618 321.06060791]
[175.03321838 327.50949097]
[185.89427185 336.42089844]
[194.65016174 347.39965820]
[200.91664124 359.95959473]
[204.41950989 373.54537964]
[205.00680542 387.55685425]
[202.65521240 401.37567139]
[197.47113037 414.39248657]
[189.68572998 426.03390503]
[179.64477539 435.78771973]
[167.79313660 443.22546387]
[154.65518188 448.02114868]
[156.65919495 462.88665771]
[158.66320801 477.75219727]
[160.66722107 492.61773682]
[162.67123413 507.48324585]
[166.91909790 515.56988525]
[164.59271240 522.58483887]
[166.37518311 537.47857666]
[168.15765381 552.37225342]
[169.94010925 567.26599121]
[184.95797729 567.25653076]
[199.87155151 569.02337646]
[214.47146606 572.54174805]
[228.55274963 577.76226807]
[241.91775513 584.61157227]
[254.37882996 592.99359131]
[265.76104736 602.79058838]
[275.90463257 613.86505127]
[284.66714478 626.06158447]
[291.92562866 639.20886230]
[297.57815552 653.12231445]
[301.54537964 667.60675049]
[303.77157593 682.45867920]
[304.22555542 697.46966553]
[302.90087891 712.42901611]
[299.81619263 727.12664795]
[295.01477051 741.35632324]
[288.56402588 754.91821289]
[280.55453491 767.62188721]
[271.09872437 779.28912354]
[260.32931519 789.75604248]
[248.39753723 798.87573242]
[235.47085571 806.52014160]
[221.73077393 812.58203125]
[207.37014771 816.97619629]
[192.59060669 819.64105225]
[177.59960938 820.53912354]
[162.60762024 819.65783691]
[147.82510376 817.00952148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 181]
[23 180]
[24 179]
[25 178]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[51 151]
[52 150]
[53 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[77 143]
[78 142]
[79 141]
[80 140]
[83 138]
[84 137]
[85 136]
[87 134]
[88 133]
[89 132]
[90 128]
[91 127]
[92 126]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
