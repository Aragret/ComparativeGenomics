%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-16.17601776 722.08154297]
[-19.15606499 736.80480957]
[-24.03244400 751.01312256]
[-30.72171402 764.46337891]
[-39.10941315 776.92535400]
[-49.05202103 788.18591309]
[-60.37939835 798.05230713]
[-72.89772034 806.35571289]
[-86.39279175 812.95404053]
[-100.63368225 817.73443604]
[-115.37671661 820.61505127]
[-130.36961365 821.54656982]
[-145.35585022 820.51318359]
[-160.07896423 817.53240967]
[-174.28703308 812.65533447]
[-187.73695374 805.96545410]
[-200.19854736 797.57714844]
[-211.45861816 787.63403320]
[-221.32446289 776.30615234]
[-229.62727356 763.78741455]
[-236.22497559 750.29205322]
[-241.00466919 736.05096436]
[-243.88458252 721.30780029]
[-244.81542969 706.31481934]
[-243.78128052 691.32861328]
[-240.79983521 676.60565186]
[-235.92210388 662.39782715]
[-229.23155212 648.94824219]
[-220.84266663 636.48706055]
[-210.89898682 625.22741699]
[-199.57067871 615.36212158]
[-187.05155945 607.05993652]
[-173.55586243 600.46289062]
[-159.31451416 595.68383789]
[-144.57121277 592.80462646]
[-129.57821655 591.87451172]
[-114.59208679 592.90936279]
[-99.86925507 595.89147949]
[-85.66164398 600.76989746]
[-78.98145294 587.33953857]
[-72.30125427 573.90917969]
[-65.62106323 560.47875977]
[-58.94086456 547.04840088]
[-52.26066971 533.61804199]
[-45.58047485 520.18768311]
[-39.10097885 506.65930176]
[-32.82361984 493.03598022]
[-26.54625893 479.41268921]
[-20.26889801 465.78936768]
[-13.99153709 452.16604614]
[-7.71417665 438.54272461]
[-2.46745849 424.49026489]
[1.71955276 410.08648682]
[5.90656376 395.68270874]
[10.09357548 381.27890015]
[2.36883879 370.96591187]
[1.98879623 357.89160156]
[9.31615639 346.82272339]
[21.86271858 341.92388916]
[26.26371574 327.58404541]
[18.69338036 317.15719604]
[18.50803757 304.07867432]
[25.99938393 293.12008667]
[38.61749268 288.40863037]
[43.23150253 274.13589478]
[47.84550858 259.86315918]
[52.45951843 245.59042358]
[57.07352829 231.31768799]
[61.68753815 217.04495239]
[66.08853912 202.70510864]
[70.27555084 188.30133057]
[74.46255493 173.89755249]
[78.64956665 159.49375916]
[82.83657837 145.08998108]
[86.37625122 130.51361084]
[89.26152802 115.79371643]
[81.26529694 103.71039581]
[84.05237579 89.49145508]
[96.01858521 81.32101440]
[87.46894836 68.30020142]
[90.60471344 53.41324234]
[103.07075500 45.34271240]
[105.95602417 30.62282181]
[108.84130096 15.90293026]
[111.72657013 1.18303919]
[114.50218201 -13.55792332]
[117.16797638 -28.31914139]
[119.83377075 -43.08035660]
[121.72706604 -57.96039200]
[122.84271240 -72.91884613]
[123.95836639 -87.87729645]
[117.26890564 -102.21472168]
[125.93138123 -114.33126831]
[126.93564606 -129.29760742]
[127.82846069 -144.27102661]
[120.92627716 -158.50726318]
[129.40739441 -170.75143433]
[130.30021667 -185.72483826]
[116.20977783 -191.23071289]
[104.51167297 -200.82287598]
[96.35195160 -213.56156921]
[92.53003693 -228.19877625]
[93.42034912 -243.30052185]
[98.93566895 -257.38726807]
[108.53565979 -269.07894897]
[121.27981567 -277.23013306]
[135.91958618 -281.04223633]
[151.02073669 -280.14178467]
[165.10377502 -274.61703491]
[176.78901672 -265.00921631]
[184.93165588 -252.25959778]
[188.73396301 -237.61727905]
[187.82341003 -222.51673889]
[182.28921509 -208.43740845]
[172.67356873 -196.75860596]
[159.91848755 -188.62451172]
[145.27362061 -184.83201599]
[144.38081360 -169.85861206]
[151.34684753 -156.69337463]
[142.80186462 -143.37820435]
[141.90905762 -128.40480042]
[144.64884949 -121.54074097]
[140.88983154 -113.21562195]
[147.65910339 -99.94812775]
[138.91682434 -86.76165009]
[137.80116272 -71.80319977]
[136.68551636 -56.84474564]
[147.99415588 -66.69943237]
[162.98866272 -67.10523224]
[174.81376648 -57.87663651]
[178.06317139 -43.23281860]
[171.25131226 -29.86874390]
[157.49246216 -23.89428329]
[143.07699585 -28.04088211]
[134.59498596 -40.41456223]
[131.92919922 -25.65334511]
[129.26339722 -10.89212799]
[131.16812134 -3.75113297]
[126.44646454 4.06831169]
[123.56118774 18.78820229]
[120.67591858 33.50809479]
[117.79064941 48.22798538]
[126.28744507 60.40747833]
[123.57106018 75.37664032]
[110.73847198 84.20628357]
[118.73470306 96.28960419]
[115.94762421 110.50854492]
[103.98141479 118.67898560]
[101.09614563 133.39888000]
[114.11663818 125.95127869]
[128.62538147 129.75868225]
[136.31111145 142.64004517]
[132.77108765 157.21633911]
[120.03320312 165.13760376]
[105.39428711 161.86616516]
[97.24036407 149.27699280]
[93.05335236 163.68077087]
[88.86634064 178.08456421]
[84.67932892 192.48834229]
[80.49231720 206.89212036]
[81.69498444 213.39328003]
[79.72903442 218.72544861]
[75.96027374 221.65896606]
[71.34626007 235.93170166]
[66.73225403 250.20443726]
[62.11824417 264.47717285]
[57.50423431 278.74990845]
[52.89022446 293.02264404]
[61.13913345 308.44906616]
[55.78440094 324.74758911]
[40.60356140 331.98504639]
[36.20256424 346.32489014]
[44.68023682 361.62680054]
[39.56875992 378.00323486]
[24.49735641 385.46591187]
[20.31034660 399.86968994]
[16.12333488 414.27349854]
[11.93632317 428.67727661]
[23.81467247 419.51730347]
[38.66814423 417.42581177]
[52.61407852 422.94949341]
[62.00703812 434.64443970]
[64.39173126 449.45367432]
[59.14479828 463.50607300]
[47.63778305 473.12835693]
[32.87858200 475.80532837]
[18.72522354 470.83718872]
[8.87735748 459.52261353]
[5.90913963 444.82009888]
[-0.36822125 458.44342041]
[-6.64558172 472.06671143]
[-12.92294216 485.69003296]
[-19.20030403 499.31335449]
[-25.47766495 512.93664551]
[-25.25268936 519.54431152]
[-27.98787689 524.52587891]
[-32.15010071 526.86785889]
[-38.83029556 540.29821777]
[-45.51049042 553.72857666]
[-52.19068527 567.15899658]
[-58.87088013 580.58935547]
[-65.55107117 594.01971436]
[-72.23126984 607.45013428]
[-59.76886749 615.83721924]
[-48.50785828 625.77929688]
[-38.64093399 637.10620117]
[-30.33693314 649.62414551]
[-23.73794556 663.11889648]
[-18.95688629 677.35955811]
[-16.07556915 692.10241699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[52 178]
[53 177]
[54 176]
[55 175]
[59 172]
[60 171]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[75 149]
[76 148]
[79 145]
[82 142]
[83 141]
[84 140]
[85 139]
[86 137]
[87 136]
[88 135]
[89 127]
[90 126]
[91 125]
[93 123]
[94 121]
[95 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
