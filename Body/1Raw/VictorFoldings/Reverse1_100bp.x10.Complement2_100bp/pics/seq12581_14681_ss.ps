%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[86.09649658 666.92755127]
[71.66823578 662.45520020]
[59.08518982 654.09796143]
[49.36740875 642.53326416]
[43.30267334 628.69873047]
[41.38262558 613.71569824]
[43.76290894 598.79888916]
[50.25057220 585.15753174]
[60.31968307 573.89746094]
[73.15398407 565.93145752]
[87.71305847 561.90527344]
[87.93638611 546.90692139]
[88.15971375 531.90863037]
[88.38304138 516.91027832]
[88.60636902 501.91192627]
[85.98180389 497.92184448]
[85.83591461 492.24069214]
[89.06627655 486.47213745]
[89.73606110 471.48709106]
[90.40584564 456.50204468]
[91.07563019 441.51699829]
[91.74541473 426.53198242]
[92.08039093 411.53570557]
[92.08039093 396.53570557]
[92.08039093 381.53570557]
[92.08039093 366.53570557]
[91.63378906 351.54235840]
[90.74097443 336.56893921]
[89.84815216 321.59555054]
[88.95533752 306.62213135]
[75.91111755 296.00674438]
[74.55370331 278.90490723]
[86.20995331 265.86071777]
[85.09430695 250.90225220]
[83.97865295 235.94380188]
[81.94499207 234.01445007]
[80.55303955 231.16329956]
[80.15771484 227.63072205]
[81.02046967 223.78102112]
[83.26898956 220.06643677]
[83.04566193 205.06809998]
[82.82233429 190.06976318]
[82.59899902 175.07142639]
[74.32646942 187.58403015]
[61.23136902 194.89965820]
[46.23918915 195.38398743]
[32.69921875 188.92881775]
[23.63632393 176.97624207]
[21.07517433 162.19651794]
[25.58794022 147.89144897]
[36.16645432 137.25683594]
[50.44745636 132.66847229]
[65.24052429 135.15142822]
[77.24085999 144.15097046]
[83.76755524 157.65663147]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[83.90264893 97.70778656]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[98.50267792 54.96958923]
[100.50669098 40.10406113]
[98.55185699 31.18125916]
[102.65280151 25.03276062]
[100.92071533 21.05107307]
[100.58001709 17.12062073]
[101.44375610 13.67252445]
[103.20414734 11.03289890]
[105.47734070 9.39255047]
[108.58145142 -5.28275156]
[111.68556213 -19.95805359]
[114.78967285 -34.63335800]
[106.43484497 -47.78001404]
[109.79190826 -62.61863708]
[122.37672424 -70.50267029]
[125.48083496 -85.17797089]
[128.58494568 -99.85327911]
[131.68905640 -114.52857971]
[134.79316711 -129.20388794]
[137.23889160 -144.00315857]
[139.02136230 -158.89686584]
[140.80381775 -173.79058838]
[142.58628845 -188.68431091]
[131.52412415 -202.23597717]
[133.64381409 -219.26013184]
[147.14903259 -229.28250122]
[148.70954895 -244.20109558]
[150.27008057 -259.11972046]
[151.38572693 -274.07815552]
[152.05551147 -289.06320190]
[141.66894531 -300.67169189]
[142.56167603 -315.85910034]
[153.69259644 -325.68957520]
[154.36238098 -340.67462158]
[155.03216553 -355.65963745]
[155.70195007 -370.64468384]
[156.37173462 -385.62973022]
[157.04151917 -400.61477661]
[143.13583374 -406.69723511]
[132.36917114 -417.39505005]
[126.19761658 -431.26141357]
[125.45584106 -446.42105103]
[130.24415588 -460.82369995]
[139.91497803 -472.52154541]
[153.16040039 -479.93255615]
[168.18911743 -482.05444336]
[182.96858215 -478.60021973]
[195.50003052 -470.03707886]
[204.08865356 -457.52307129]
[207.57292175 -442.75067139]
[205.48162842 -427.71768188]
[198.09759521 -414.45718384]
[186.41944885 -404.76257324]
[172.02656555 -399.94497681]
[171.35678101 -384.95993042]
[170.68699646 -369.97491455]
[170.01721191 -354.98986816]
[169.34742737 -340.00482178]
[168.67764282 -325.01977539]
[178.88714600 -314.23547363]
[178.42135620 -299.02896118]
[167.04055786 -288.39340210]
[166.37075806 -273.40838623]
[168.16075134 -271.25103760]
[169.20404053 -268.25466919]
[169.17677307 -264.70016479]
[167.86267090 -260.98025513]
[165.18867493 -257.55917358]
[163.62815857 -242.64057922]
[162.06764221 -227.72196960]
[171.50222778 -218.94598389]
[174.19978333 -206.14733887]
[168.95622253 -193.95243835]
[157.48001099 -186.90184021]
[155.69754028 -172.00811768]
[153.91506958 -157.11441040]
[152.13261414 -142.22068787]
[164.56311035 -150.61607361]
[179.31484985 -147.89833069]
[187.93736267 -135.62428284]
[185.49127197 -120.82506561]
[173.37782288 -111.97834778]
[158.53614807 -114.15193176]
[149.46846008 -126.09976959]
[146.36434937 -111.42446899]
[143.26023865 -96.74916840]
[140.15614319 -82.07386017]
[137.05203247 -67.39855957]
[145.36654663 -55.09391403]
[142.42759705 -40.16685104]
[129.46496582 -31.52924728]
[126.36086273 -16.85394478]
[123.25675201 -2.17864156]
[120.15264130 12.49666119]
[117.48684692 27.25787735]
[115.37222290 42.10807419]
[113.36820984 56.97360229]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[115.85051727 96.37506866]
[114.20864868 107.90526581]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[98.60160065 159.88175964]
[97.59734344 174.84809875]
[97.82067108 189.84643555]
[98.04399872 204.84477234]
[98.26732635 219.84310913]
[98.93711090 234.82815552]
[100.05275726 249.78660583]
[101.16840363 264.74505615]
[112.31835175 272.30105591]
[117.01214600 284.71792603]
[113.74579620 297.38336182]
[103.92874908 305.72933960]
[104.82156372 320.70272827]
[105.71437836 335.67614746]
[106.60719299 350.64953613]
[109.12576294 354.18661499]
[110.27245331 357.96145630]
[110.14096832 361.51367188]
[108.96492004 364.46044922]
[107.08039093 366.53570557]
[107.08039093 381.53570557]
[107.08039093 396.53570557]
[107.08039093 411.53570557]
[109.69185638 416.05535889]
[110.25246429 420.66394043]
[109.07177734 424.56536865]
[106.73045349 427.20175171]
[106.06066895 442.18679810]
[105.39088440 457.17184448]
[104.72109985 472.15686035]
[104.05131531 487.14190674]
[103.60470581 502.13525391]
[103.38137817 517.13360596]
[103.15805054 532.13195801]
[102.93472290 547.13024902]
[102.71139526 562.12860107]
[117.14414978 566.58648682]
[129.73558044 574.93109131]
[139.46498108 586.48596191]
[145.54360962 600.31445312]
[147.47869873 615.29553223]
[145.11340332 630.21466064]
[138.63945007 643.86254883]
[128.58166504 655.13275146]
[115.75536346 663.11169434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[23 188]
[24 187]
[25 186]
[26 185]
[27 180]
[28 179]
[29 178]
[30 177]
[33 173]
[34 172]
[35 171]
[40 170]
[41 169]
[42 168]
[43 167]
[55 166]
[56 165]
[57 164]
[58 163]
[60 160]
[61 159]
[62 158]
[63 157]
[65 156]
[70 155]
[71 154]
[72 153]
[73 152]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 138]
[82 137]
[83 136]
[84 135]
[87 131]
[88 130]
[89 129]
[90 124]
[91 123]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
