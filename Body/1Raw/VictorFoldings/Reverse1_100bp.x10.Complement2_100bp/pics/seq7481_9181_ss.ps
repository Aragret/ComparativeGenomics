%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[6.18476772 581.44165039]
[-5.71095371 590.58691406]
[-18.14710236 598.98248291]
[-31.07650757 606.59655762]
[-44.45011902 613.40026855]
[-58.21720886 619.36773682]
[-72.32554626 624.47637939]
[-86.72162628 628.70684814]
[-101.35083008 632.04302979]
[-116.15766144 634.47229004]
[-131.08596802 635.98541260]
[-146.07910156 636.57666016]
[-161.08018494 636.24377441]
[-176.03234863 634.98803711]
[-190.87882996 632.81427002]
[-205.56333923 629.73059082]
[-220.03016663 625.74884033]
[-234.22442627 620.88397217]
[-248.09226990 615.15454102]
[-261.58111572 608.58227539]
[-274.63977051 601.19207764]
[-287.21871948 593.01202393]
[-299.27023315 584.07305908]
[-310.74859619 574.40917969]
[-321.61026001 564.05700684]
[-331.81405640 553.05578613]
[-341.32122803 541.44726562]
[-350.09573364 529.27551270]
[-358.10430908 516.58673096]
[-365.31655884 503.42892456]
[-371.70510864 489.85211182]
[-377.24572754 475.90774536]
[-381.91741943 461.64874268]
[-385.70245361 447.12921143]
[-388.58645630 432.40417480]
[-390.55853271 417.52954102]
[-391.61114502 402.56173706]
[-391.74032593 387.55749512]
[-390.94558716 372.57376099]
[-389.22991943 357.66738892]
[-386.59988403 342.89489746]
[-383.06542969 328.31234741]
[-378.63995361 313.97500610]
[-373.34024048 299.93731689]
[-367.18640137 286.25253296]
[-360.20178223 272.97250366]
[-352.41287231 260.14764404]
[-343.84924316 247.82662964]
[-334.54336548 236.05615234]
[-324.53051758 224.88088989]
[-313.84869385 214.34321594]
[-302.53842163 204.48310852]
[-290.64263916 195.33798218]
[-278.20639038 186.94253540]
[-265.27691650 179.32858276]
[-251.90324402 172.52502441]
[-238.13609314 166.55766296]
[-224.02769470 161.44915771]
[-209.63157654 157.21885681]
[-195.00234985 153.88282776]
[-180.19548035 151.45372009]
[-165.26716614 149.94073486]
[-150.27403259 149.34962463]
[-135.27293396 149.68263245]
[-120.32080078 150.93849182]
[-105.47433472 153.11244202]
[-90.78985596 156.19624329]
[-76.32307434 160.17817688]
[-62.12886047 165.04315186]
[-48.26105881 170.77270508]
[-34.77228165 177.34510803]
[-21.71369362 184.73542786]
[-9.13482952 192.91564941]
[2.91659355 201.85470581]
[12.57740402 190.38000488]
[22.23821449 178.90530396]
[31.89902496 167.43060303]
[41.55983353 155.95590210]
[51.22064590 144.48120117]
[60.88145447 133.00650024]
[61.37286377 128.25596619]
[64.85374451 123.76370239]
[71.00476074 121.33954620]
[81.00293732 110.15757751]
[91.00110626 98.97560120]
[91.33375549 95.13349915]
[93.35832977 91.45668793]
[96.96303558 88.69749451]
[101.70409393 87.53036499]
[112.19159698 76.80598450]
[122.67909241 66.08160400]
[133.16659546 55.35722351]
[143.65409851 44.63284302]
[153.05624390 32.94526291]
[161.28504944 20.40386200]
[169.51387024 7.86246157]
[170.61535645 -7.92035484]
[184.06648254 -14.31695843]
[192.29528809 -26.85835838]
[180.80082703 -36.52344131]
[170.53019714 -47.48019791]
[161.62757874 -59.57481003]
[154.21795654 -72.63749695]
[148.40533447 -86.48487091]
[144.27131653 -100.92253876]
[141.87396240 -115.74782562]
[141.24688721 -130.75259399]
[142.39892578 -145.72621155]
[145.31388855 -160.45846558]
[149.95086670 -174.74253845]
[156.24476624 -188.37791443]
[164.10720825 -201.17315674]
[173.42782593 -212.94865417]
[184.07579041 -223.53909302]
[195.90159607 -232.79579163]
[208.73924255 -240.58882141]
[222.40850830 -246.80874634]
[236.71749878 -251.36828613]
[251.46531677 -254.20341492]
[266.44494629 -255.27432251]
[281.44610596 -254.56599426]
[296.25817871 -252.08834839]
[310.67324829 -247.87620544]
[324.48895264 -241.98866272]
[337.51129150 -234.50837708]
[349.55752563 -225.54037476]
[360.45846558 -215.21055603]
[370.06115723 -203.66390991]
[378.23074341 -191.06254578]
[384.85253906 -177.58337402]
[389.83361816 -163.41561890]
[393.10400391 -148.75816345]
[394.61782837 -133.81678772]
[394.35382080 -118.80124664]
[392.31567383 -103.92232513]
[388.53204346 -89.38890076]
[383.05599976 -75.40499878]
[375.96444702 -62.16694260]
[367.35693359 -49.86056137]
[357.35427856 -38.65862656]
[346.09692383 -28.71839333]
[333.74288940 -20.17940331]
[320.46563721 -13.16153336]
[306.45150757 -7.76330376]
[291.89727783 -4.06049633]
[277.00726318 -2.10509324]
[261.99047852 -1.92454493]
[247.05775452 -3.52138615]
[232.41870117 -6.87319994]
[218.27885437 -11.93293190]
[204.83668518 -18.62955093]
[196.60787964 -6.08815050]
[196.09497070 8.79762077]
[182.05526733 16.09126854]
[173.82646179 28.63266945]
[165.59765625 41.17406845]
[179.17414856 34.79608154]
[194.16917419 34.41010666]
[208.05581665 40.08118820]
[218.49392700 50.85364532]
[223.72450256 64.91213989]
[222.86608887 79.88755798]
[216.06335449 93.25627899]
[204.46267700 102.76544189]
[190.01896667 106.81259155]
[175.16625977 104.71570587]
[162.40748596 96.82814789]
[153.89271545 84.47910309]
[151.05685425 69.74961090]
[154.37847900 55.12034607]
[143.89097595 65.84472656]
[133.40347290 76.56910706]
[122.91597748 87.29347992]
[112.42847443 98.01786041]
[102.18308258 108.97377014]
[92.18490601 120.15574646]
[82.18673706 131.33772278]
[72.35615540 142.66731262]
[62.69534683 154.14201355]
[53.03453445 165.61671448]
[43.37372589 177.09141541]
[33.71291351 188.56611633]
[24.05210495 200.04081726]
[14.39129353 211.51551819]
[25.25306702 221.86759949]
[35.45695496 232.86869812]
[44.96424866 244.47709656]
[53.73888016 256.64877319]
[61.74757385 269.33752441]
[68.95993805 282.49523926]
[75.34862518 296.07199097]
[80.88938904 310.01629639]
[85.56121826 324.27523804]
[89.34639740 338.79473877]
[92.23055267 353.51974487]
[94.20275116 368.39434814]
[95.25551605 383.36215210]
[95.38484955 398.36639404]
[94.59025574 413.35012817]
[92.87475586 428.25653076]
[90.24485779 443.02905273]
[86.71053314 457.61163330]
[82.28519440 471.94900513]
[76.98561859 485.98675537]
[70.83192444 499.67163086]
[63.84743881 512.95172119]
[56.05867004 525.77661133]
[47.49515152 538.09771729]
[38.18937683 549.86828613]
[28.17664528 561.04364014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 184]
[75 183]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[83 177]
[84 176]
[85 175]
[89 174]
[90 173]
[91 172]
[92 171]
[93 170]
[94 156]
[95 155]
[96 154]
[98 152]
[99 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
