%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[156.58335876 561.30566406]
[152.94659424 546.73931885]
[150.82685852 531.87628174]
[150.24662781 516.87402344]
[151.21202087 501.89163208]
[153.71284485 487.08792114]
[157.72254944 472.61981201]
[163.19866943 458.64065552]
[170.08311462 445.29867554]
[178.30293274 432.73532104]
[187.77098083 421.08370972]
[198.38690186 410.46737671]
[210.03814697 400.99887085]
[222.60121155 392.77856445]
[215.72180176 379.44912720]
[203.00914001 371.68786621]
[203.55558777 355.87609863]
[196.67617798 342.54666138]
[189.79675293 329.21722412]
[182.91734314 315.88778687]
[179.68760681 314.47320557]
[176.98257446 311.42395020]
[175.56307983 307.00375366]
[176.04342651 301.80599976]
[169.76606750 288.18270874]
[157.41264343 279.86151123]
[158.66458130 264.08990479]
[152.38722229 250.46659851]
[146.10986328 236.84327698]
[139.83250427 223.21997070]
[137.25245667 222.12382507]
[134.95114136 219.93966675]
[133.34516907 216.76850891]
[132.80686951 212.86021423]
[133.61405945 208.59378052]
[128.15870667 194.62098694]
[122.70334625 180.64819336]
[117.24798584 166.67538452]
[111.79263306 152.70259094]
[106.43173981 147.61509705]
[106.36177063 138.48092651]
[101.11505127 124.42845917]
[95.86833191 110.37599182]
[90.51715088 96.36296844]
[85.06179047 82.39016724]
[79.60643768 68.41737366]
[74.15107727 54.44457245]
[61.92463684 44.40341949]
[64.50329590 29.73373222]
[49.86373901 18.56391525]
[53.18482590 1.33204746]
[47.52203751 -12.55797958]
[41.85925293 -26.44800568]
[36.19646454 -40.33803177]
[32.67382050 -42.87672424]
[30.37360001 -46.08195114]
[29.35523415 -49.48758698]
[29.52066803 -52.65606308]
[30.63731956 -55.22729492]
[25.81132126 -69.42974854]
[20.98532295 -83.63220215]
[16.05373001 -97.79833984]
[11.01681423 -111.92736816]
[5.97989798 -126.05639648]
[0.94298154 -140.18542480]
[-4.09393454 -154.31445312]
[-9.13085079 -168.44348145]
[-13.10835838 -171.82380676]
[-15.18395138 -175.97653198]
[-15.38189316 -180.04788208]
[-14.06180286 -183.31739807]
[-18.46280098 -197.65724182]
[-22.86379814 -211.99708557]
[-27.26479721 -226.33692932]
[-31.66579437 -240.67678833]
[-36.06679153 -255.01663208]
[-47.51254272 -265.93933105]
[-43.84994125 -280.37658691]
[-48.25093842 -294.71643066]
[-52.65193939 -309.05630493]
[-67.62358093 -307.52786255]
[-82.60570526 -308.94995117]
[-97.02243042 -313.26785278]
[-110.31961060 -320.31561279]
[-121.98615265 -329.82235718]
[-131.57360840 -341.42266846]
[-138.71348572 -354.67062378]
[-143.13131714 -369.05703735]
[-144.65731812 -384.02893066]
[-143.23281860 -399.01080322]
[-138.91258240 -413.42684937]
[-131.86265564 -426.72286987]
[-122.35402679 -438.38787842]
[-110.75218201 -447.97348022]
[-97.50306702 -455.11120605]
[-83.11593628 -459.52670288]
[-68.14379120 -461.05026245]
[-53.16213608 -459.62335205]
[-38.74681091 -455.30078125]
[-25.45190811 -448.24871826]
[-13.78844643 -438.73818970]
[-4.20474005 -427.13479614]
[2.93084002 -413.88452148]
[7.34402084 -399.49667358]
[8.86517143 -384.52429199]
[7.43582296 -369.54284668]
[3.11091542 -355.12823486]
[-3.94331264 -341.83447266]
[-13.45571613 -330.17254639]
[-25.06066322 -320.59072876]
[-38.31209183 -313.45727539]
[-33.91109085 -299.11743164]
[-29.51009369 -284.77758789]
[-18.37913513 -274.88058472]
[-21.72694588 -259.41763306]
[-17.32594872 -245.07777405]
[-12.92494965 -230.73793030]
[-8.52395153 -216.39808655]
[-4.12295389 -202.05824280]
[0.27804440 -187.71839905]
[4.99817848 -173.48040771]
[10.03509521 -159.35137939]
[15.07201099 -145.22235107]
[20.10892677 -131.09332275]
[25.14584351 -116.96428680]
[30.18276024 -102.83525848]
[35.38980103 -97.59040070]
[35.18777847 -88.45820618]
[40.01377869 -74.25574493]
[44.83977509 -60.05329132]
[50.08649445 -46.00082016]
[55.74927902 -32.11079407]
[61.41206741 -18.22076607]
[67.07485199 -4.33073902]
[78.09922791 0.64818078]
[82.93067169 12.17384624]
[78.47609711 24.27837372]
[90.31233215 33.32009888]
[88.12387848 48.98921585]
[93.57923126 62.96201324]
[99.03459167 76.93481445]
[104.48994446 90.90760803]
[110.12203979 96.67407227]
[109.92080688 105.12927246]
[115.16752625 119.18173981]
[120.41424561 133.23420715]
[125.76542664 147.24723816]
[131.22077942 161.22003174]
[136.67614746 175.19282532]
[142.13150024 189.16563416]
[147.58685303 203.13842773]
[153.45581055 216.94261169]
[159.73318481 230.56591797]
[166.01054382 244.18923950]
[172.28790283 257.81256104]
[185.09031677 267.10818481]
[183.38938904 281.90533447]
[189.66674805 295.52865601]
[196.24678040 309.00839233]
[203.12619019 322.33782959]
[210.00559998 335.66723633]
[216.88500977 348.99667358]
[230.08973694 357.71136475]
[229.05122375 372.56973267]
[235.93064880 385.89913940]
[249.90905762 380.42120361]
[264.37664795 376.40960693]
[279.18002319 373.90682983]
[294.16229248 372.93948364]
[309.16461182 373.51776123]
[324.02795410 375.63552856]
[338.59475708 379.27038574]
[352.71063232 384.38375854]
[366.22589111 390.92144775]
[378.99731445 398.81417847]
[390.88946533 407.97824097]
[401.77633667 418.31652832]
[411.54248047 429.71945190]
[420.08441162 442.06610107]
[427.31152344 455.22561646]
[433.14724731 469.05847168]
[437.52972412 483.41809082]
[440.41247559 498.15219116]
[441.76495361 513.10461426]
[441.57278442 528.11682129]
[439.83807373 543.02972412]
[436.57916260 557.68524170]
[431.83062744 571.92797852]
[425.64276123 585.60693359]
[418.08120728 598.57714844]
[409.22607422 610.70117188]
[399.17129517 621.85034180]
[388.02337646 631.90661621]
[375.90057373 640.76330566]
[362.93133545 648.32659912]
[349.25317383 654.51623535]
[335.01104736 659.26666260]
[320.35598755 662.52746582]
[305.44329834 664.26416016]
[290.43109131 664.45831299]
[275.47851562 663.10778809]
[260.74401855 660.22698975]
[246.38385010 655.84637451]
[232.55021667 650.01245117]
[219.38975525 642.78704834]
[207.04199219 634.24676514]
[195.63780212 624.48211670]
[185.29808044 613.59661865]
[176.13244629 601.70562744]
[168.23805237 588.93524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 165]
[15 164]
[17 162]
[18 161]
[19 160]
[20 159]
[24 158]
[25 157]
[27 155]
[28 154]
[29 153]
[30 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[41 146]
[42 145]
[43 144]
[44 142]
[45 141]
[46 140]
[47 139]
[49 137]
[51 134]
[52 133]
[53 132]
[54 131]
[59 130]
[60 129]
[61 128]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[78 113]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
