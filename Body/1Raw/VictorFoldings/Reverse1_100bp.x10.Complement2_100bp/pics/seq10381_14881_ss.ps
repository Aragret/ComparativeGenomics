%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[10.76899910 565.76226807]
[17.86371613 579.07073975]
[21.42505264 593.72570801]
[21.22913933 608.80590820]
[17.28829384 623.36340332]
[9.85024071 636.48309326]
[-0.61745912 647.34027100]
[-13.45679665 655.25244141]
[-27.86067963 659.72216797]
[-42.92367172 660.46862793]
[-57.69889450 657.44476318]
[-71.25756836 650.84075928]
[-82.74738312 641.07165527]
[-91.44607544 628.75164795]
[-96.80684662 614.65509033]
[-98.49271393 599.66815186]
[-96.39768982 584.73291016]
[-90.65348816 570.78814697]
[-81.62117004 558.71057129]
[-69.86853790 549.25933838]
[-56.13436127 543.02850342]
[-41.28197861 540.40979004]
[-26.24503326 541.56781006]
[-21.41903496 527.36535645]
[-16.59303665 513.16290283]
[-11.76703930 498.96044922]
[-6.94104195 484.75799561]
[-16.00628471 468.85400391]
[-10.47281647 451.06933594]
[6.59067154 442.83819580]
[10.99166965 428.49835205]
[15.39266777 414.15850830]
[19.79366684 399.81866455]
[24.19466400 385.47882080]
[28.59566116 371.13897705]
[32.99665833 356.79913330]
[37.39765930 342.45925903]
[41.79865646 328.11941528]
[45.33832932 313.54306030]
[48.00412369 298.78182983]
[50.66991806 284.02062988]
[53.33571625 269.25939941]
[55.89154816 254.47874451]
[58.33727646 239.67947388]
[52.77867889 225.86096191]
[62.66253281 213.50701904]
[65.10826111 198.70774841]
[52.96553040 207.51423645]
[37.99460983 206.58067322]
[27.04000282 196.33389282]
[25.11000633 181.45857239]
[33.08699036 168.75550842]
[47.32398605 164.03237915]
[61.31203079 169.44853210]
[68.65628052 182.52958679]
[72.62837982 168.06506348]
[66.91973877 157.40026855]
[70.11058044 145.31712341]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[92.62686157 70.77667236]
[103.60923767 60.71502304]
[107.79624939 46.31124115]
[111.98326111 31.90745926]
[100.10491180 41.06741714]
[85.25143433 43.15891647]
[71.30550385 37.63524628]
[61.91254425 25.94027710]
[59.52785110 11.13104916]
[64.77478027 -2.92134261]
[76.28179932 -12.54363632]
[91.04100037 -15.22058773]
[105.19435883 -10.25244808]
[115.04222107 1.06212318]
[118.01044464 15.76463795]
[112.77488708 1.09403038]
[119.33509064 -12.63252640]
[133.35354614 -17.53341675]
[139.63090515 -31.15673256]
[145.90826416 -44.78004837]
[152.18562317 -58.40336609]
[158.46298218 -72.02667999]
[157.21104431 -87.79827881]
[169.56446838 -96.11946106]
[175.84182739 -109.74278259]
[174.58990479 -125.51437378]
[186.94332886 -133.83557129]
[190.37438965 -148.43788147]
[190.82098389 -163.43124390]
[191.26759338 -178.42459106]
[191.71420288 -193.41793823]
[192.16081238 -208.41128540]
[192.60740662 -223.40463257]
[193.05401611 -238.39797974]
[178.80589294 -243.48190308]
[166.82737732 -252.72151184]
[158.29200745 -265.21160889]
[154.03598022 -279.72854614]
[154.47625732 -294.85009766]
[159.56971741 -309.09481812]
[168.81735229 -321.06713867]
[181.31317139 -329.59414673]
[195.83294678 -333.84042358]
[210.95420837 -333.39001465]
[225.19549561 -328.28701782]
[237.16162109 -319.03137207]
[245.68025208 -306.52984619]
[249.91682434 -292.00720215]
[249.45626831 -276.88626099]
[244.34373474 -262.64837646]
[235.08006287 -250.68847656]
[222.57283020 -242.17822266]
[208.04736328 -237.95138550]
[207.60076904 -222.95803833]
[207.15415955 -207.96467590]
[206.70755005 -192.97132874]
[206.26094055 -177.97798157]
[205.81434631 -162.98463440]
[205.36773682 -147.99128723]
[212.39294434 -161.24444580]
[222.06901550 -172.70628357]
[233.95574951 -181.85534668]
[247.51240540 -188.27540588]
[262.12222290 -191.67440796]
[277.12057495 -191.89770508]
[291.82510376 -188.93515015]
[305.56686401 -182.92150879]
[317.72070312 -174.13038635]
[327.73370361 -162.96168518]
[335.15036011 -149.92353821]
[339.63320923 -135.60906982]
[340.97836304 -120.66950226]
[339.12460327 -105.78449249]
[334.15628052 -91.63120270]
[326.29940796 -78.85350800]
[315.91140747 -68.03272247]
[303.46487427 -59.66110611]
[289.52603149 -54.11951828]
[274.72903442 -51.66006088]
[259.74703979 -52.39462662]
[245.26161194 -56.28979492]
[231.93174744 -63.16836548]
[220.36386108 -72.71739960]
[211.08422852 -84.50249481]
[204.51499939 -97.98749542]
[200.95503235 -112.55892181]
[200.56663513 -127.55820465]
[202.26757812 -112.76103973]
[189.46514893 -103.46542358]
[183.18778992 -89.84210205]
[184.88871765 -75.04493713]
[172.08630371 -65.74932098]
[165.80894470 -52.12600327]
[159.53158569 -38.50268936]
[153.25421143 -24.87937164]
[146.97685242 -11.25605583]
[152.35960388 2.58452654]
[146.18753052 16.48992920]
[131.63375854 22.04199982]
[126.38703918 36.09447098]
[122.20002747 50.49825287]
[118.01301575 64.90203094]
[121.89015961 79.28316498]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[100.22502136 160.39610291]
[87.09290314 172.03717041]
[83.12080383 186.50169373]
[79.90753174 201.15347290]
[77.46180725 215.95274353]
[82.84546661 230.82980347]
[73.13654327 242.12519836]
[70.69081879 256.92446899]
[72.37912750 265.90151978]
[68.09693146 271.92520142]
[65.43113708 286.68640137]
[62.76534271 301.44763184]
[60.09954453 316.20886230]
[71.82399750 306.85272217]
[86.80301666 306.05969238]
[99.44981384 314.12561035]
[105.04743195 328.04202271]
[101.50810242 342.61846924]
[90.15191650 352.41830444]
[75.21443939 353.78643799]
[62.26698303 346.21258545]
[56.13850403 332.52041626]
[51.73750687 346.86026001]
[47.33650589 361.20013428]
[42.93550873 375.53997803]
[38.53451157 389.87982178]
[34.13351440 404.21966553]
[29.73251534 418.55950928]
[25.33151627 432.89935303]
[20.93051910 447.23919678]
[28.43833923 456.45709229]
[30.54273605 468.03604126]
[26.83473778 479.07888794]
[18.34517670 486.87908936]
[7.26141357 489.58398438]
[2.43541622 503.78643799]
[-2.39058161 517.98889160]
[-7.21657896 532.19134521]
[-12.04257679 546.39379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 184]
[40 183]
[41 182]
[42 181]
[43 179]
[44 178]
[46 176]
[47 175]
[55 174]
[56 173]
[59 171]
[60 170]
[61 169]
[63 167]
[65 165]
[66 164]
[67 163]
[78 162]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[87 153]
[88 152]
[90 150]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
