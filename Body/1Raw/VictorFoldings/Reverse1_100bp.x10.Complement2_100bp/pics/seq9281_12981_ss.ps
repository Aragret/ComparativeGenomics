%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[89.02143097 540.93109131]
[76.71562958 550.03198242]
[61.58822632 552.36016846]
[47.11539841 547.38061523]
[36.62288666 536.23760986]
[32.52180099 521.49182129]
[35.75453949 506.53158569]
[45.57823944 494.79473877]
[59.73548889 488.97830200]
[61.07372284 474.03811646]
[62.41195679 459.09793091]
[55.84098053 445.73114014]
[64.77861786 432.67626953]
[66.11685181 417.73608398]
[67.45508575 402.79589844]
[60.88410950 389.42910767]
[69.82174683 376.37423706]
[71.15998077 361.43405151]
[72.38695526 346.48431396]
[65.61769867 333.21682739]
[74.35997772 320.03036499]
[75.47562408 305.07189941]
[76.36844635 290.09848022]
[77.03823090 275.11346436]
[69.87694550 262.05337524]
[78.22274017 248.61247253]
[71.06146240 235.55239868]
[79.40725708 222.11148071]
[80.07704163 207.12644958]
[80.74682617 192.14140320]
[68.97517395 201.43807983]
[54.06215668 199.82504272]
[44.55062485 188.22630310]
[45.88921738 173.28614807]
[57.31112671 163.56298828]
[72.27336121 164.62667847]
[82.20456696 175.86698914]
[84.20858002 161.00146484]
[86.21259308 146.13594055]
[88.21660614 131.27040100]
[90.22062683 116.40487671]
[81.51935577 104.81893158]
[83.45516968 90.45930481]
[94.91384888 81.59111023]
[96.91786194 66.72557831]
[98.47838593 51.80697632]
[99.59403229 36.84852219]
[100.70968628 21.89006805]
[101.82533264 6.93161440]
[102.94097900 -8.02683926]
[104.05662537 -22.98529243]
[105.17227936 -37.94374466]
[98.48281860 -52.28116989]
[107.14529419 -64.39771271]
[108.26094818 -79.35617065]
[98.35522461 -88.48257446]
[95.55529785 -101.45835876]
[100.66431427 -113.49912262]
[111.61080170 -120.29647064]
[112.94903564 -135.23664856]
[114.28726959 -150.17683411]
[115.62550354 -165.11701965]
[116.96373749 -180.05720520]
[118.30197144 -194.99739075]
[119.64020538 -209.93757629]
[120.97843933 -224.87776184]
[118.78061676 -229.61238098]
[118.63339996 -234.25260925]
[120.15744019 -238.03312683]
[122.72463989 -240.45011902]
[124.72865295 -255.31564331]
[111.12628174 -261.90603638]
[100.24166870 -272.36392212]
[93.13204193 -285.65609741]
[90.48258209 -300.47485352]
[92.54036713 -315.36672974]
[99.09140778 -328.87503052]
[109.48281860 -339.68237305]
[122.68786621 -346.73907471]
[137.40740967 -349.36511230]
[139.41142273 -364.23065186]
[141.41543579 -379.09619141]
[143.41944885 -393.96170044]
[141.46461487 -402.88452148]
[145.56555176 -409.03302002]
[147.34802246 -423.92672729]
[148.68626404 -438.86691284]
[150.02449036 -453.80709839]
[150.13615417 -468.80667114]
[149.02050781 -483.76513672]
[147.90486145 -498.72360229]
[146.78921509 -513.68206787]
[145.67356873 -528.64050293]
[130.93429565 -531.99389648]
[117.83911896 -539.54425049]
[107.55245209 -550.62017822]
[100.98897552 -564.23681641]
[98.73230743 -579.18334961]
[100.98311615 -594.13073730]
[107.54125214 -607.74993896]
[117.82357025 -618.82989502]
[130.91578674 -626.38537598]
[145.65373230 -629.74456787]
[160.72692871 -628.60876465]
[174.79508972 -623.07897949]
[186.60726929 -613.64691162]
[195.11312866 -601.15124512]
[199.55635071 -586.70312500]
[199.54182434 -571.58715820]
[195.07087708 -557.14758301]
[186.54103088 -544.66827393]
[174.71076965 -535.25891113]
[160.63201904 -529.75616455]
[161.74766541 -514.79766846]
[162.86331177 -499.83923340]
[163.97895813 -484.88079834]
[165.09461975 -469.92233276]
[172.60772705 -482.90515137]
[185.24417114 -490.98724365]
[200.18093872 -492.36303711]
[214.08111572 -486.72525024]
[223.83937073 -475.33328247]
[227.27569580 -460.73220825]
[223.62237549 -446.18389893]
[213.69560242 -434.93850708]
[199.71302795 -429.50823975]
[184.79838562 -431.10629272]
[172.28367615 -439.37561035]
[164.96467590 -452.46887207]
[163.62644958 -437.52868652]
[162.28820801 -422.58850098]
[163.98007202 -420.35339355]
[164.88853455 -417.31341553]
[164.70257568 -413.76367188]
[163.22367859 -410.10614014]
[160.39959717 -406.80789185]
[158.28497314 -391.95770264]
[156.28096008 -377.09216309]
[154.27694702 -362.22665405]
[152.27293396 -347.36111450]
[165.77162170 -340.93096924]
[176.63661194 -330.62942505]
[183.79521179 -317.45617676]
[186.53529358 -302.69531250]
[184.57615662 -287.79013062]
[178.09718323 -274.20199585]
[167.72151184 -263.26699829]
[154.45613098 -256.06475830]
[139.59417725 -253.31163025]
[137.59016418 -238.44610596]
[135.91862488 -223.53953552]
[134.58038330 -208.59934998]
[133.24215698 -193.65916443]
[131.90391541 -178.71897888]
[130.56568909 -163.77879333]
[129.22744751 -148.83860779]
[127.88922119 -133.89842224]
[126.55098724 -118.95823669]
[137.87619019 -106.52527618]
[136.68167114 -89.41130066]
[123.21939850 -78.24051666]
[122.10375214 -63.28206635]
[128.87301636 -50.01457214]
[120.13072968 -36.82809830]
[119.01508331 -21.86964417]
[117.89943695 -6.91119051]
[116.78378296 8.04726315]
[115.66813660 23.00571632]
[114.55249023 37.96416855]
[113.43683624 52.92262268]
[115.16179657 55.13229752]
[116.11540985 58.15839005]
[115.98233032 61.71052933]
[114.55805206 65.38965607]
[111.78339386 68.72959137]
[109.77937317 83.59512329]
[118.48064423 95.18106842]
[116.54483032 109.54069519]
[105.08615112 118.40888977]
[103.08213806 133.27441406]
[101.07812500 148.13995361]
[99.07411194 163.00547791]
[97.07009888 177.87100220]
[95.73186493 192.81118774]
[95.06208038 207.79623413]
[94.39229584 222.78126526]
[101.50566864 236.91316223]
[93.20777893 249.28225708]
[100.32115173 263.41415405]
[92.02326965 275.78323364]
[91.35348511 290.76828003]
[94.05632019 296.80203247]
[93.40415955 302.44754028]
[90.43408203 306.18756104]
[89.31843567 321.14599609]
[96.00788879 335.48342896]
[87.34541321 347.59997559]
[89.82788086 356.39059448]
[86.10016632 362.77227783]
[84.76193237 377.71246338]
[91.23719025 392.14791870]
[82.39527130 404.13412476]
[81.05703735 419.07431030]
[79.71880341 434.01449585]
[86.19406128 448.44992065]
[77.35214233 460.43615723]
[76.01390839 475.37634277]
[74.67567444 490.31652832]
[87.57386017 498.55639648]
[95.15531158 511.85226440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[13 204]
[14 203]
[15 202]
[17 200]
[18 199]
[19 197]
[21 195]
[22 194]
[23 191]
[24 190]
[26 188]
[28 186]
[29 185]
[30 184]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[44 176]
[45 175]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[54 162]
[55 161]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[66 151]
[70 150]
[71 149]
[80 140]
[81 139]
[82 138]
[83 137]
[85 136]
[86 131]
[87 130]
[88 129]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
