%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[281.36947632 638.77673340]
[294.23876953 630.91339111]
[289.83776855 616.57354736]
[285.43676758 602.23370361]
[281.03576660 587.89385986]
[276.63476562 573.55401611]
[272.23376465 559.21417236]
[267.83279419 544.87432861]
[263.11264038 530.63635254]
[258.07574463 516.50732422]
[253.03881836 502.37826538]
[248.00189209 488.24923706]
[242.96498108 474.12020874]
[237.92807007 459.99118042]
[232.89114380 445.86215210]
[227.85423279 431.73312378]
[222.08819580 417.88565063]
[215.60870361 404.35729980]
[209.12921143 390.82894897]
[202.64971924 377.30059814]
[196.17021179 363.77224731]
[189.69071960 350.24392700]
[183.21122742 336.71557617]
[170.73527527 328.57922363]
[171.75225830 312.79074097]
[165.27276611 299.26239014]
[162.67668152 298.20480347]
[160.34310913 296.05514526]
[158.69009399 292.90823364]
[158.09367371 289.00839233]
[158.83724976 284.73040771]
[153.17446899 270.84039307]
[147.51167297 256.95037842]
[141.84889221 243.06033325]
[136.18609619 229.17031860]
[130.52331543 215.28028870]
[124.86052704 201.39025879]
[119.19774628 187.50022888]
[113.53495789 173.61019897]
[107.66599274 159.80603027]
[105.66130829 174.67146301]
[97.85306549 187.47894287]
[85.55709076 196.07015991]
[70.84548187 198.99736023]
[56.19739532 195.76725769]
[44.08129501 186.92417908]
[36.53895187 173.95832825]
[34.84138870 159.05470276]
[39.27467346 144.72479248]
[49.09171677 133.38346863]
[62.63817596 126.94193268]
[77.63123322 126.48569489]
[91.54430389 132.09164429]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[81.70874786 67.45786285]
[83.40001678 60.26332092]
[80.29590607 45.58801651]
[75.45834351 37.83973694]
[77.25653839 30.67117500]
[74.37126923 15.95128441]
[71.48599243 1.23139262]
[68.60072327 -13.48849869]
[65.71545410 -28.20838928]
[62.83017731 -42.92827988]
[59.61690521 -57.58007050]
[56.07723236 -72.15644073]
[45.30190659 -83.74104309]
[49.81733322 -97.93470764]
[46.27766037 -112.51108551]
[35.68886185 -119.87587738]
[33.04074478 -132.08944702]
[39.21989822 -142.48870850]
[35.89764023 -157.11616516]
[25.41966438 -164.63778687]
[22.95368385 -176.88943481]
[29.28697968 -187.19554138]
[26.18287086 -201.87084961]
[23.07876015 -216.54614258]
[19.97464943 -231.22145081]
[16.87054062 -245.89675903]
[1.80756521 -246.13027954]
[-12.82565880 -249.71029663]
[-26.29513741 -256.45721436]
[-37.92524338 -266.03262329]
[-47.13262177 -277.95620728]
[-53.45542526 -291.62991333]
[-56.57651520 -306.36782837]
[-56.33933258 -321.43075562]
[-52.75577545 -336.06311035]
[-46.00559235 -349.53094482]
[-36.42737198 -361.15872192]
[-24.50155258 -370.36322021]
[-10.82632828 -376.68270874]
[3.91235662 -379.80023193]
[18.97521591 -379.55938721]
[33.60670471 -375.97229004]
[47.07291031 -369.21884155]
[58.69837570 -359.63781738]
[67.89997101 -347.70974731]
[74.21615601 -334.03302002]
[77.33010101 -319.29357910]
[77.08561707 -304.23077393]
[73.49496460 -289.60015869]
[66.73825836 -276.13558960]
[57.15440369 -264.51242065]
[45.22412491 -255.31372070]
[31.54584122 -249.00086975]
[34.64995193 -234.32556152]
[37.75406265 -219.65025330]
[40.85817337 -204.97496033]
[43.96228409 -190.29965210]
[56.37823105 -177.89758301]
[50.52510071 -160.43843079]
[53.84735870 -145.81095886]
[66.44657898 -133.59512329]
[60.85403824 -116.05075836]
[64.39370728 -101.47438049]
[74.91585541 -90.93238068]
[70.65361023 -75.69611359]
[74.19328308 -61.11973953]
[76.99799347 -58.98294067]
[78.90707397 -55.38148880]
[79.24340057 -50.75113678]
[77.55007172 -45.81355286]
[80.43534088 -31.09366226]
[83.32061768 -16.37377167]
[86.20588684 -1.65388000]
[89.09116364 13.06601143]
[91.97643280 27.78590202]
[94.97120667 42.48390579]
[98.07531738 57.15921021]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[121.38126373 153.73219299]
[126.48838043 157.93086243]
[128.41867065 163.27604675]
[127.42498016 167.94741821]
[133.08776855 181.83744812]
[138.75056458 195.72747803]
[144.41334534 209.61749268]
[150.07612610 223.50752258]
[155.73892212 237.39755249]
[161.40170288 251.28758240]
[167.06448364 265.17761230]
[172.72727966 279.06762695]
[178.80111694 292.78289795]
[185.28060913 306.31124878]
[198.22000122 315.41522217]
[196.73957825 330.23608398]
[203.21907043 343.76440430]
[209.69856262 357.29275513]
[216.17805481 370.82110596]
[222.65754700 384.34945679]
[229.13705444 397.87780762]
[235.61654663 411.40615845]
[240.51795959 397.22955322]
[253.32012939 389.41259766]
[268.17004395 391.52911377]
[278.27856445 402.61141968]
[279.02416992 417.59289551]
[270.06600952 429.62414551]
[255.49961853 433.20468140]
[241.98326111 426.69619751]
[247.02017212 440.82525635]
[252.05709839 454.95428467]
[257.09402466 469.08331299]
[262.13092041 483.21234131]
[267.16784668 497.34136963]
[272.20477295 511.47039795]
[277.24166870 525.59942627]
[281.21917725 528.97973633]
[283.29476929 533.13244629]
[283.49270630 537.20379639]
[282.17263794 540.47332764]
[286.57363892 554.81317139]
[290.97463989 569.15301514]
[295.37561035 583.49285889]
[299.77661133 597.83270264]
[304.17761230 612.17254639]
[308.57861328 626.51239014]
[323.64337158 625.80261230]
[338.41119385 628.86236572]
[351.95376587 635.49932861]
[363.41979980 645.29632568]
[372.08850098 657.63751221]
[377.41497803 671.74707031]
[379.06439209 686.73803711]
[376.93307495 701.66815186]
[371.15496826 715.59887695]
[362.09332275 727.65447998]
[350.31771851 737.07708740]
[336.56845093 743.27453613]
[321.70974731 745.85711670]
[306.67565918 744.66253662]
[292.41122437 739.76586914]
[279.81317139 731.47491455]
[269.67337036 720.31091309]
[262.62924194 706.97558594]
[259.12356567 692.30725098]
[259.37673950 677.22790527]
[263.37283325 662.68542480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[25 156]
[26 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 143]
[54 142]
[55 141]
[56 140]
[58 138]
[59 137]
[61 136]
[62 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 125]
[71 124]
[73 122]
[74 121]
[77 119]
[78 118]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
