%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[150.40745544 464.21621704]
[152.36758423 449.20169067]
[159.09895325 435.63821411]
[169.87138367 424.99710083]
[183.51640320 418.43261719]
[181.73393250 403.53890991]
[179.95146179 388.64520264]
[178.16900635 373.75146484]
[176.38653564 358.85775757]
[174.60406494 343.96405029]
[165.40919495 332.24636841]
[171.45178223 317.62454224]
[168.56651306 302.90466309]
[164.59442139 288.44012451]
[160.62231445 273.97561646]
[155.58540344 259.84658813]
[149.51156616 246.13131714]
[143.43772888 232.41604614]
[137.36390686 218.70079041]
[131.29006958 204.98551941]
[125.96873474 219.00990295]
[112.93950653 226.44221497]
[98.15917969 223.88450623]
[88.38511658 212.50611877]
[88.08588409 197.50910950]
[97.39829254 185.74989319]
[112.06482697 182.60464478]
[125.38141632 189.51266479]
[120.76740265 175.23994446]
[116.15339661 160.96720886]
[111.01143646 146.87606812]
[105.34864807 132.98603821]
[99.68585968 119.09600830]
[86.37151337 113.37985992]
[80.90144348 99.96253967]
[86.42411041 86.56678009]
[80.76132202 72.67675018]
[75.09853363 58.78672409]
[69.43575287 44.89669800]
[63.77296448 31.00667000]
[49.40666580 33.27220535]
[34.90443420 32.27729797]
[20.99651146 28.07541275]
[8.38247299 20.88140106]
[-2.30397820 11.06053925]
[-10.52683353 -0.89002967]
[-15.87467098 -14.36645699]
[-18.08123589 -28.68869972]
[-17.03870010 -43.13483810]
[-12.80291462 -56.97746277]
[-5.59044456 -69.52030182]
[4.23251343 -80.13324738]
[16.16871834 -88.28400421]
[10.71336079 -102.25680542]
[5.25800419 -116.22959900]
[-0.19735289 -130.20239258]
[-13.07351971 -134.15447998]
[-21.20385170 -144.64772034]
[-21.79728317 -157.71408081]
[-14.86098862 -168.57305908]
[-20.10770607 -182.62553406]
[-25.35442543 -196.67800903]
[-37.43001175 -206.90007019]
[-34.63322830 -221.52973938]
[-43.13980865 -209.17506409]
[-58.09136200 -207.97045898]
[-68.46615601 -218.80390930]
[-66.61627960 -233.68940735]
[-53.90539169 -241.65391541]
[-39.70466995 -236.82743835]
[-43.89168167 -251.23121643]
[-48.07869339 -265.63500977]
[-59.36055374 -276.72689819]
[-55.48340988 -291.10803223]
[-69.05255890 -298.75759888]
[-73.09359741 -313.42474365]
[-65.71728516 -326.31372070]
[-69.90429688 -340.71749878]
[-74.09130859 -355.12127686]
[-89.05191803 -353.56570435]
[-104.04985046 -354.70666504]
[-118.60298157 -358.50747681]
[-132.24348450 -364.84594727]
[-144.53288269 -373.51837158]
[-155.07611084 -384.24591064]
[-163.53425598 -396.68374634]
[-169.63542175 -410.43203735]
[-173.18347168 -425.04882812]
[-174.06436157 -440.06430054]
[-172.24977112 -454.99569702]
[-167.79803467 -469.36309814]
[-160.85226440 -482.70458984]
[-151.63572693 -494.59136963]
[-140.44468689 -504.64126587]
[-127.63890076 -512.53125000]
[-113.63002777 -518.00769043]
[-98.86839294 -520.89447021]
[-83.82851410 -521.09893799]
[-68.99385834 -518.61437988]
[-54.84131241 -513.52075195]
[-41.82581329 -505.98175049]
[-30.36575699 -496.23971558]
[-20.82953644 -484.60784912]
[-13.52370167 -471.46005249]
[-8.68310547 -457.21899414]
[-6.46335268 -442.34240723]
[-6.93579960 -427.30856323]
[-10.08525848 -412.60070801]
[-15.81048775 -398.69168091]
[-23.92744446 -386.02853394]
[-34.17520523 -375.01840210]
[-46.22433853 -366.01516724]
[-59.68752289 -359.30828857]
[-55.50051498 -344.90451050]
[-51.31350327 -330.50073242]
[-38.17715454 -323.57452393]
[-33.72574234 -309.02670288]
[-41.07962418 -295.29504395]
[-30.09725189 -285.23339844]
[-33.67491150 -269.82202148]
[-29.48790169 -255.41822815]
[-25.30088997 -241.01445007]
[-20.58075523 -226.77645874]
[-8.88044930 -217.55952454]
[-11.30195427 -201.92472839]
[-6.05523586 -187.87225342]
[-0.80851758 -173.81977844]
[14.77618790 -167.49871826]
[21.09153175 -151.54782104]
[13.77544498 -135.65776062]
[19.23080254 -121.68495941]
[24.68615913 -107.71215820]
[30.14151573 -93.73936462]
[45.48995972 -95.85872650]
[60.90908051 -94.25008392]
[75.50598145 -89.00241089]
[88.43439484 -80.41551971]
[98.94370270 -68.98293304]
[106.42256165 -55.36355972]
[110.43444061 -40.34367752]
[110.74310303 -24.79156494]
[107.32652283 -9.60729599]
[100.37837219 4.32934856]
[90.29708862 16.20985603]
[77.66299438 25.34388351]
[83.32577515 39.23390961]
[88.98856354 53.12393570]
[94.65135193 67.01396179]
[100.31414032 80.90399170]
[113.62848663 86.62014008]
[119.09855652 100.03746033]
[113.57588959 113.43321991]
[119.23867798 127.32324982]
[124.90146637 141.21327209]
[133.03642273 128.61080933]
[147.94549561 126.96156311]
[158.63822937 137.48132324]
[157.23237610 152.41528320]
[144.76425171 160.75471497]
[130.42613220 156.35319519]
[135.04014587 170.62593079]
[139.65414429 184.89866638]
[145.00534058 198.91168213]
[151.07916260 212.62695312]
[157.15299988 226.34222412]
[163.22683716 240.05747986]
[169.30067444 253.77275085]
[172.48785400 239.11526489]
[182.50343323 227.94886780]
[196.72933960 223.19244385]
[211.44694519 226.08927917]
[222.80914307 235.88217163]
[227.84584045 250.01127625]
[225.24047852 264.78329468]
[215.67408752 276.33682251]
[201.64729309 281.65182495]
[186.82669067 279.33895874]
[175.08683777 270.00350952]
[179.05894470 284.46804810]
[183.03103638 298.93255615]
[188.35726929 284.91003418]
[199.91847229 275.35290527]
[214.69255066 272.75939941]
[228.81762695 277.80740356]
[238.60140991 289.17742920]
[241.48645020 303.89736938]
[236.71862793 318.11944580]
[225.54420471 328.12606812]
[210.88418579 331.30151367]
[196.57063293 326.81573486]
[186.34550476 315.84210205]
[195.66786194 328.62506104]
[189.49778748 342.18157959]
[191.28025818 357.07528687]
[193.06271362 371.96899414]
[194.84518433 386.86273193]
[196.62765503 401.75643921]
[198.41011047 416.65014648]
[213.21884155 419.80932617]
[226.19812012 427.60784912]
[235.94006348 439.19979858]
[241.38793945 453.32775879]
[241.95079041 468.45925903]
[237.56756592 482.95291138]
[228.71374512 495.23657227]
[216.34970093 503.97781372]
[201.81658936 508.22842407]
[186.69088745 507.52734375]
[172.61328125 501.95062256]
[161.11082458 492.10317993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[12 191]
[13 180]
[14 179]
[15 178]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[28 162]
[29 161]
[30 160]
[31 154]
[32 153]
[33 152]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[53 133]
[54 132]
[55 131]
[56 130]
[60 127]
[61 126]
[62 125]
[64 123]
[70 122]
[71 121]
[72 120]
[74 118]
[77 115]
[78 114]
[79 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
