%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[129.14768982 517.10424805]
[126.04398346 502.39965820]
[125.16664124 487.39672852]
[126.53527832 472.43060303]
[130.11930847 457.83566284]
[135.83865356 443.93795776]
[143.56556702 431.04794312]
[153.12741089 419.45358276]
[164.31056213 409.41394043]
[176.86520386 401.15325928]
[190.51086426 394.85614014]
[186.32385254 380.45236206]
[182.13684082 366.04858398]
[177.94982910 351.64477539]
[173.76281738 337.24099731]
[157.17367554 335.80703735]
[142.37515259 328.09436035]
[131.65049744 315.26110840]
[126.66666412 299.25790405]
[128.21516418 282.53134155]
[136.08656311 267.65002441]
[149.09829712 256.91006470]
[144.48428345 242.63734436]
[139.76416016 228.39935303]
[134.83256531 214.23321533]
[129.79565430 200.10418701]
[124.75872803 185.97515869]
[119.61676788 171.88401794]
[103.66740417 167.99876404]
[93.07048798 155.24465942]
[92.15465546 138.52154541]
[101.47863007 124.40914917]
[96.02327728 110.43635559]
[90.46405029 96.50455475]
[84.80126190 82.61452484]
[79.13847351 68.72450256]
[73.47569275 54.83447266]
[67.70965576 40.98698807]
[61.84069443 27.18281174]
[55.97173309 13.37863445]
[50.10277557 -0.42554244]
[44.23381424 -14.22971916]
[38.36485291 -28.03389549]
[37.51885605 -13.05777168]
[33.28752899 1.33305347]
[25.89283562 14.38366699]
[15.72268677 25.40945816]
[3.31058955 33.83203888]
[-10.69234276 39.20957184]
[-25.55154419 41.25996780]
[-40.48752975 39.87566757]
[-54.71679306 35.12928391]
[-67.49288940 27.26980591]
[-78.14560699 16.70952606]
[-86.11613464 4.00241423]
[-90.98635101 -10.18493938]
[-92.50077057 -25.10829544]
[-90.57995605 -39.98480225]
[-85.32466888 -54.03406906]
[-77.01058197 -66.51910400]
[-66.07384491 -76.78495789]
[-53.08817291 -84.29310608]
[-38.73477173 -88.64969635]
[-23.76659012 -89.62618256]
[-8.96882915 -87.17134094]
[4.88225126 -81.41394806]
[17.06005096 -72.65602112]
[26.92574501 -61.35699463]
[33.96240616 -48.10803986]
[33.51580048 -63.10138702]
[25.37104607 -76.66507721]
[32.72597885 -89.61707306]
[32.27937317 -104.61042023]
[21.05817413 -115.41423798]
[20.81883812 -130.62599182]
[31.18778038 -141.25711060]
[30.74117470 -156.25045776]
[30.29456902 -171.24380493]
[29.84796333 -186.23715210]
[29.40135574 -201.23051453]
[28.84314537 -216.22012329]
[28.17336082 -231.20515442]
[27.50357437 -246.19020081]
[26.16534042 -261.13037109]
[24.16132736 -275.99591064]
[22.15731430 -290.86145020]
[20.15329933 -305.72695923]
[18.14928627 -320.59249878]
[16.14527321 -335.45800781]
[1.16637635 -337.21398926]
[-12.90493870 -342.64068604]
[-25.18413734 -351.39694214]
[-34.89934158 -362.93234253]
[-41.43984222 -376.52178955]
[-44.39449692 -391.31100464]
[-43.57757568 -406.37033081]
[-39.04043198 -420.75314331]
[-31.06827354 -433.55529785]
[-20.16223717 -443.97207642]
[-7.00788355 -451.34866333]
[7.56789160 -455.22131348]
[22.64884377 -455.34664917]
[37.28697205 -451.71676636]
[50.56210709 -444.55984497]
[61.63977051 -434.32577515]
[69.82360077 -421.65789795]
[74.59916687 -407.35247803]
[75.66626740 -392.30880737]
[72.95782471 -377.47253418]
[66.64408875 -363.77627563]
[57.12194824 -352.08096313]
[44.98997879 -343.12182617]
[31.01080132 -337.46203613]
[33.01481628 -322.59649658]
[35.01882935 -307.73098755]
[37.02284241 -292.86544800]
[39.02685547 -277.99990845]
[41.03086853 -263.13439941]
[50.96292496 -274.37512207]
[65.92521667 -275.43811035]
[77.34665680 -265.71438599]
[78.68453217 -250.77416992]
[69.17244720 -239.17588806]
[54.25934982 -237.56356812]
[42.48861313 -246.85998535]
[43.15839767 -231.87493896]
[43.82818604 -216.88990784]
[47.26721954 -210.34812927]
[44.39470673 -201.67710876]
[44.84131241 -186.68376160]
[45.28791809 -171.69041443]
[45.73452377 -156.69706726]
[46.18112946 -141.70372009]
[57.16446304 -131.70861816]
[57.83097076 -116.50959015]
[47.27272415 -105.05702972]
[47.71932983 -90.06367493]
[55.83213806 -77.57241821]
[48.50914764 -63.54799271]
[48.95575714 -48.55464554]
[52.16902924 -33.90285873]
[58.03799057 -20.09868050]
[63.90695190 -6.29450321]
[69.77590942 7.50967360]
[75.64487457 21.31385040]
[81.51383209 35.11802673]
[87.02381897 40.04365921]
[87.36571503 49.17168808]
[93.02850342 63.06171417]
[98.69129181 76.95174408]
[104.35408020 90.84176636]
[110.07139587 96.52373505]
[109.99607086 104.98099518]
[115.45143127 118.95379639]
[129.00843811 121.44341278]
[139.48188782 130.23690796]
[144.20486450 142.95552063]
[142.04397583 156.23989868]
[133.66923523 166.63729858]
[139.60266113 173.58224487]
[138.88775635 180.93824768]
[143.92468262 195.06727600]
[148.96159363 209.19630432]
[154.79095459 216.22882080]
[153.96661377 223.57334900]
[159.69062805 230.69187927]
[158.75701904 238.02333069]
[163.37103271 252.29606628]
[176.80807495 252.62017822]
[189.46992493 257.06143188]
[200.12904358 265.17437744]
[207.75662231 276.15829468]
[211.62191772 288.93630981]
[211.36221313 302.26083374]
[207.01681519 314.83544922]
[199.02186584 325.44104004]
[188.16659546 333.05398560]
[192.35360718 347.45776367]
[196.54061890 361.86157227]
[200.72763062 376.26535034]
[204.91464233 390.66912842]
[219.80961609 388.66983032]
[234.83621216 388.91296387]
[249.65872192 391.39306641]
[263.94601440 396.05474854]
[277.37887573 402.79385376]
[289.65722656 411.45986938]
[300.50680542 421.85913086]
[309.68515015 433.75933838]
[316.98727417 446.89468384]
[322.25003052 460.97164917]
[325.35583496 475.67578125]
[326.23532104 490.67858887]
[324.86880493 505.64489746]
[321.28686523 520.24035645]
[315.56948853 534.13885498]
[307.84442139 547.03002930]
[298.28421021 558.62573242]
[287.10247803 568.66693115]
[274.54901123 576.92938232]
[260.90426636 583.22851562]
[246.47306824 587.42346191]
[231.57778931 589.42065430]
[216.55123901 589.17535400]
[201.72908020 586.69317627]
[187.44247437 582.02941895]
[174.01055908 575.28839111]
[161.73342896 566.62066650]
[150.88536072 556.21984863]
[141.70869446 544.31829834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[22 168]
[23 167]
[24 165]
[25 163]
[26 162]
[27 161]
[28 159]
[32 154]
[33 153]
[34 151]
[35 150]
[36 149]
[37 148]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[69 140]
[70 139]
[72 137]
[73 136]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 127]
[82 126]
[83 125]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
