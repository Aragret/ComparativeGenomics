%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[42.95166016 576.04205322]
[40.94741821 591.26959229]
[31.58518982 603.44519043]
[17.38336372 609.29357910]
[2.16215968 607.24157715]
[-9.98399258 597.84124756]
[-15.78783989 583.62115479]
[-13.68817711 568.40643311]
[-4.24980259 556.28985596]
[9.98840904 550.53057861]
[11.99242210 535.66503906]
[13.99643612 520.79956055]
[11.86460876 516.52581787]
[12.39485073 510.86758423]
[16.28781128 505.52377319]
[18.73353767 490.72448730]
[13.17494011 476.90597534]
[23.05879784 464.55203247]
[25.50452614 449.75277710]
[19.94592667 435.93426514]
[29.82978439 423.58032227]
[32.27551270 408.78103638]
[34.72124100 393.98178101]
[37.16696548 379.18249512]
[39.61269379 364.38323975]
[42.05842209 349.58395386]
[33.20276260 337.66284180]
[35.47225571 322.61944580]
[48.03625870 313.41165161]
[50.48198700 298.61236572]
[52.92771530 283.81311035]
[50.92407608 279.47784424]
[51.62255096 273.83789062]
[55.67288971 268.61233521]
[58.55816269 253.89245605]
[61.44343567 239.17256165]
[64.32870483 224.45266724]
[67.21398163 209.73277283]
[62.06927490 195.75489807]
[72.31657410 183.70069885]
[70.66350555 180.58627319]
[70.43680573 176.51641846]
[72.06910706 172.17028809]
[75.67336273 168.39451599]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[106.21058655 42.64218521]
[109.75025940 28.06580925]
[101.46514893 17.44641876]
[100.81836700 4.18775558]
[107.82224274 -6.85886192]
[119.73054504 -11.78044224]
[123.48683929 -26.30250168]
[127.24314117 -40.82456207]
[130.99945068 -55.34661865]
[120.16269684 -66.14070129]
[116.20991516 -80.81286621]
[120.10596466 -95.39665985]
[130.70776367 -106.00126648]
[145.09724426 -109.84946442]
[148.85354614 -124.37152100]
[143.52282715 -141.99722290]
[156.30253601 -154.02410889]
[159.84220886 -168.60049438]
[161.95683289 -183.45068359]
[162.62661743 -198.43572998]
[163.29640198 -213.42076111]
[163.96618652 -228.40580750]
[164.63597107 -243.39083862]
[161.89286804 -252.10366821]
[165.42892456 -258.59350586]
[166.32173157 -273.56692505]
[167.21455383 -288.54031372]
[168.10737610 -303.51373291]
[159.48587036 -319.78491211]
[169.71353149 -334.04541016]
[170.38331604 -349.03045654]
[171.05310059 -364.01550293]
[171.38807678 -379.01174927]
[171.38807678 -394.01174927]
[158.79393005 -406.15286255]
[158.87561035 -423.30828857]
[171.09416199 -434.86447144]
[170.87083435 -449.86282349]
[170.64750671 -464.86114502]
[170.42417908 -479.85949707]
[170.20085144 -494.85781860]
[155.53675842 -498.38131714]
[142.21000671 -505.44168091]
[131.05833435 -515.59503174]
[122.78273010 -528.20318604]
[117.90341949 -542.47351074]
[116.72711182 -557.50909424]
[119.32775879 -572.36462402]
[125.54188538 -586.10638428]
[134.97885132 -597.87048340]
[147.04544067 -606.91748047]
[160.98315430 -612.67864990]
[175.91584778 -614.79180908]
[190.90484619 -613.12414551]
[205.00790405 -607.78051758]
[217.33851624 -599.09680176]
[227.12156677 -587.61889648]
[233.74206543 -574.06829834]
[236.78387451 -559.29675293]
[236.05575562 -544.23284912]
[231.60348511 -529.82354736]
[223.70695496 -516.97460938]
[212.86251831 -506.49368286]
[199.75189209 -499.03970337]
[185.19918823 -495.08114624]
[185.42253113 -480.08282471]
[185.64585876 -465.08447266]
[185.86918640 -450.08615112]
[186.09251404 -435.08779907]
[196.50311279 -427.49511719]
[200.70242310 -415.10772705]
[196.94515991 -402.37612915]
[186.38807678 -394.01174927]
[186.38807678 -379.01174927]
[188.60934448 -376.27343750]
[189.61465454 -372.32321167]
[188.84881592 -367.74426270]
[186.03814697 -363.34570312]
[185.36836243 -348.36065674]
[184.69857788 -333.37564087]
[192.62751770 -324.24005127]
[192.19213867 -311.75030518]
[183.08078003 -302.62091064]
[182.18795776 -287.64749146]
[181.29515076 -272.67410278]
[180.40232849 -257.70068359]
[179.62100220 -242.72105408]
[178.95121765 -227.73602295]
[178.28143311 -212.75097656]
[177.61164856 -197.76594543]
[176.94186401 -182.78089905]
[185.35705566 -195.19801331]
[198.05198669 -203.18791199]
[212.88735962 -205.40417480]
[227.36314392 -201.47331238]
[239.03991699 -192.05773926]
[245.94993591 -178.74415588]
[246.92874146 -163.77612305]
[241.81138611 -149.67602539]
[231.46025085 -138.81997681]
[217.61965942 -133.03741455]
[202.62200928 -133.30278015]
[188.99465942 -139.57139587]
[179.03405762 -150.78684998]
[174.41857910 -165.06082153]
[170.87890625 -150.48443604]
[176.90254211 -139.99433899]
[174.07287598 -127.82154846]
[163.37561035 -120.61522675]
[159.61930847 -106.09316254]
[170.33811951 -95.75041199]
[174.46826172 -81.33522034]
[170.80424500 -66.69139862]
[160.23295593 -55.77606201]
[145.52149963 -51.59032059]
[141.76519775 -37.06826019]
[138.00889587 -22.54620171]
[134.25259399 -8.02414227]
[143.39907837 6.08900023]
[139.43014526 22.77919006]
[124.32663727 31.60548210]
[120.78696442 46.18185806]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.24974060 171.93418884]
[87.03646851 186.58598328]
[91.97479248 201.61672974]
[81.93386841 212.61805725]
[79.04859924 227.33793640]
[76.16332245 242.05783081]
[73.27805328 256.77770996]
[70.39278412 271.49761963]
[67.72698212 286.25881958]
[65.28125763 301.05810547]
[62.83552933 315.85736084]
[71.76905060 328.61785889]
[69.07791901 343.59158325]
[56.85769272 352.02969360]
[54.41196442 366.82894897]
[51.96623993 381.62823486]
[49.52051163 396.42752075]
[47.07478333 411.22677612]
[44.62905502 426.02606201]
[50.01271820 440.90310669]
[40.30379486 452.19851685]
[37.85807037 466.99777222]
[43.24172974 481.87481689]
[33.53281021 493.17022705]
[31.08708191 507.96951294]
[28.86196518 522.80352783]
[26.85795021 537.66906738]
[24.85393715 552.53460693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[15 207]
[16 206]
[18 204]
[19 203]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[29 193]
[30 192]
[31 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[40 184]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[58 170]
[59 169]
[60 168]
[61 167]
[66 162]
[67 161]
[69 158]
[70 157]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[77 138]
[78 137]
[79 136]
[80 135]
[82 132]
[83 131]
[84 130]
[85 126]
[86 125]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
