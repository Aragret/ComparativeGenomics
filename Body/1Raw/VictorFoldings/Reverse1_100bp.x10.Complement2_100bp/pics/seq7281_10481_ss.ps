%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[192.67909241 482.97467041]
[201.69494629 470.92846680]
[212.82780457 460.80642700]
[225.67523193 452.97442627]
[220.42851257 438.92193604]
[215.18179321 424.86947632]
[204.31054688 419.56454468]
[199.82441711 407.90011597]
[204.63740540 395.93359375]
[199.60049438 381.80456543]
[194.56356812 367.67553711]
[189.52665710 353.54650879]
[184.31961060 348.30163574]
[184.52163696 339.16946411]
[179.69563293 324.96697998]
[174.86964417 310.76452637]
[169.93804932 296.59838867]
[164.90113831 282.46936035]
[146.69525146 278.24578857]
[134.61709595 263.78732300]
[133.68618774 244.82043457]
[144.45948792 229.00044250]
[132.48994446 220.13595581]
[134.44487000 204.43598938]
[128.78207397 190.54595947]
[123.11929321 176.65592957]
[117.45650482 162.76591492]
[111.79371643 148.87588501]
[99.82417297 140.01138306]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[76.31804657 59.06508636]
[77.46952057 51.76468277]
[73.28250885 37.36090088]
[62.37541962 30.47626877]
[59.18457794 18.39312744]
[64.89321899 7.72832489]
[60.92111969 -6.73619938]
[56.94902420 -21.20072365]
[52.97692871 -35.66524887]
[49.00483322 -50.12977219]
[45.03273392 -64.59429169]
[41.06063843 -79.05881500]
[37.08854294 -93.52334595]
[32.90153122 -107.92712402]
[28.50053406 -122.26697540]
[24.09953499 -136.60681152]
[20.60647774 -122.01920319]
[11.85918713 -109.83376312]
[-0.84472740 -101.85813904]
[-15.62071514 -99.27546692]
[-30.27684593 -102.46887207]
[-42.63896942 -110.96463013]
[-50.87324142 -123.50244141]
[-53.75815201 -138.22241211]
[-50.86574554 -152.94090271]
[-42.62509155 -165.47451782]
[-30.25864220 -173.96397400]
[-15.60088634 -177.14991760]
[-0.82621580 -174.55972290]
[11.87363529 -166.57762146]
[20.61392593 -154.38948059]
[19.27569008 -169.32966614]
[17.93745613 -184.26985168]
[16.59922218 -199.21002197]
[14.70593071 -214.09005737]
[12.26020336 -228.88932800]
[9.81447601 -243.68859863]
[5.32772017 -251.64517212]
[7.44421577 -258.72628784]
[5.21909857 -273.56033325]
[2.99398136 -288.39437866]
[0.76886415 -303.22842407]
[-1.45625305 -318.06246948]
[-3.68137026 -332.89651489]
[-16.10688972 -342.29034424]
[-18.15215874 -357.36587524]
[-9.11999226 -369.15380859]
[-11.34510994 -383.98785400]
[-13.57022667 -398.82189941]
[-28.56383705 -400.51129150]
[-42.60895157 -406.02465820]
[-54.74795151 -414.98608398]
[-64.15317535 -426.78454590]
[-70.18336487 -440.61566162]
[-72.42737579 -455.53634644]
[-70.73219299 -470.52929688]
[-65.21340942 -484.57229614]
[-56.24729538 -496.70782471]
[-44.44518661 -506.10848999]
[-30.61176109 -512.13336182]
[-15.69021130 -514.37158203]
[-0.69790906 -512.67059326]
[13.34294415 -507.14639282]
[25.47501945 -498.17559814]
[34.87113190 -486.36987305]
[40.89064026 -472.53411865]
[43.12311935 -457.61169434]
[41.41636276 -442.62005615]
[35.88673401 -428.58135986]
[26.91125488 -416.45272827]
[15.10188866 -407.06118774]
[1.26381683 -401.04702759]
[3.48893404 -386.21298218]
[5.71405125 -371.37893677]
[17.80728912 -362.75982666]
[20.27519226 -347.74768066]
[11.15267372 -335.12161255]
[13.37779045 -320.28756714]
[15.60290813 -305.45352173]
[17.82802582 -290.61947632]
[20.05314255 -275.78543091]
[22.27825928 -260.95141602]
[24.61374664 -246.13433838]
[27.05947304 -231.33506775]
[29.50520134 -216.53579712]
[40.22937393 -227.02349854]
[55.13343048 -225.32966614]
[63.23065567 -212.70291138]
[58.55207443 -198.45121765]
[44.54656601 -193.08039856]
[31.53940773 -200.54826355]
[32.87764359 -185.60807800]
[34.21587753 -170.66789246]
[35.55411148 -155.72770691]
[38.43938446 -141.00781250]
[42.84038162 -126.66796875]
[47.24137878 -112.32812500]
[50.96604538 -109.33882141]
[52.85239792 -103.97797394]
[51.55306625 -97.49543762]
[55.52516174 -83.03091431]
[59.49726105 -68.56639099]
[63.46935654 -54.10186768]
[67.44145203 -39.63734436]
[71.41355133 -25.17281914]
[75.38564301 -10.70829582]
[79.35774231 3.75622845]
[92.48986053 15.39729404]
[87.68629456 33.17388916]
[91.87330627 47.57767105]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[128.04371643 128.50663757]
[125.68374634 143.21308899]
[131.34652710 157.10311890]
[137.00932312 170.99314880]
[142.67210388 184.88317871]
[148.33488464 198.77320862]
[160.70947266 208.63121033]
[158.34950256 223.33766174]
[169.78788757 224.09770203]
[180.07019043 229.04895020]
[187.72752380 237.44163513]
[191.68196106 248.03744507]
[191.39807129 259.29223633]
[186.95512390 269.58099365]
[179.03016663 277.43246460]
[184.06707764 291.56149292]
[189.89643860 298.59399414]
[189.07209778 305.93853760]
[193.89810181 320.14099121]
[198.72409058 334.34344482]
[203.65568542 348.50958252]
[208.69259644 362.63861084]
[213.72952271 376.76763916]
[218.76643372 390.89666748]
[233.06694031 402.49740601]
[229.23426819 419.62277222]
[234.48098755 433.67523193]
[239.72770691 447.72769165]
[254.56431580 445.22341919]
[269.60675049 445.57250977]
[284.31121826 448.76232910]
[298.14617920 454.67761230]
[310.61148071 463.10449219]
[321.25653076 473.73837280]
[329.69653320 486.19479370]
[335.62637329 500.02352905]
[338.83166504 514.72460938]
[339.19659424 529.76666260]
[336.70791626 544.60589600]
[331.45559692 558.70593262]
[323.62954712 571.55694580]
[313.51266479 582.69451904]
[301.47061157 591.71594238]
[287.93878174 598.29510498]
[273.40628052 602.19421387]
[258.39846802 603.27227783]
[243.45787048 601.49035645]
[229.12458801 596.91284180]
[215.91674805 589.70526123]
[204.31181335 580.12811279]
[194.72929382 568.52758789]
[187.51559448 555.32312012]
[182.93147278 540.99194336]
[181.14265442 526.05218506]
[182.21379089 511.04385376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[9 179]
[10 178]
[11 177]
[12 176]
[14 175]
[15 174]
[16 173]
[17 171]
[18 170]
[22 163]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[30 155]
[31 154]
[38 153]
[39 152]
[40 151]
[42 150]
[43 149]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[54 137]
[55 136]
[56 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 125]
[76 124]
[77 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
