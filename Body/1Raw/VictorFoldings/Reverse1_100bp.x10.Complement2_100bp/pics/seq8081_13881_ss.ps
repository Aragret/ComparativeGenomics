%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[112.14384460 548.12939453]
[108.20447540 563.04534912]
[96.81089020 573.44677734]
[81.59873962 576.01464844]
[67.42216492 569.92956543]
[58.80485916 557.13323975]
[58.49657822 541.70892334]
[66.59568787 528.57849121]
[80.51779175 521.93182373]
[82.30026245 507.03811646]
[84.08272552 492.14440918]
[85.42095947 477.20422363]
[86.31377411 462.23080444]
[87.20658875 447.25738525]
[88.09941101 432.28399658]
[88.99222565 417.31057739]
[89.77354431 402.33096313]
[90.44332886 387.34591675]
[91.11311340 372.36087036]
[91.78289795 357.37582397]
[92.34111023 342.38623047]
[84.98618317 329.43423462]
[93.13093567 315.87054443]
[85.77600098 302.91854858]
[93.92075348 289.35485840]
[94.36736298 274.36151123]
[94.81396484 259.36816406]
[95.26057434 244.37480164]
[95.37223816 229.37522888]
[87.44630432 216.76455688]
[94.97728729 202.85072327]
[94.75395966 187.85238647]
[81.03533173 178.83702087]
[75.33647919 163.26509094]
[80.08935547 147.20545959]
[93.61080170 137.04344177]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[92.15429688 76.83886719]
[91.93096924 61.84053421]
[91.70764160 46.84219742]
[91.48431396 31.84385872]
[91.26098633 16.84552002]
[76.64553833 13.12746811]
[63.50078201 5.75855732]
[52.71981430 -4.75365782]
[45.03334808 -17.68829536]
[40.96017456 -32.16057587]
[40.77216721 -47.18235016]
[44.47613907 -61.72955322]
[51.81378174 -74.81203461]
[62.27967453 -85.54094696]
[75.15608978 -93.18913269]
[89.56222534 -97.24039459]
[89.33889771 -112.23873138]
[80.64426422 -121.76586151]
[80.76702881 -134.26260376]
[89.09598541 -143.03501892]
[89.09598541 -158.03501892]
[89.09598541 -173.03501892]
[89.09598541 -188.03501892]
[80.54415894 -197.69053650]
[80.85296631 -210.18406677]
[89.31160736 -218.83149719]
[89.53493500 -233.82983398]
[89.75826263 -248.82817078]
[89.98159027 -263.82650757]
[89.31180573 -278.81155396]
[87.75128174 -293.73016357]
[86.19075775 -308.64874268]
[70.70533752 -311.87713623]
[56.99234772 -319.72314453]
[46.38818359 -331.40835571]
[39.92199326 -345.78085327]
[38.21579361 -361.42874146]
[41.42466354 -376.81896973]
[49.22272873 -390.44744873]
[60.83621979 -400.98605347]
[75.12022400 -407.41207886]
[73.33775330 -422.30578613]
[71.55529022 -437.19949341]
[61.45697784 -426.10787964]
[46.48052216 -425.26779175]
[35.20511627 -435.16049194]
[34.08982468 -450.11895752]
[43.77354050 -461.57434082]
[58.70898819 -462.96444702]
[70.34001160 -453.49380493]
[69.89340210 -468.48715210]
[61.74864960 -482.05084229]
[69.10358429 -495.00283813]
[68.65697479 -509.99618530]
[65.51285553 -515.81219482]
[65.74331665 -521.49060059]
[68.42700195 -525.44116211]
[68.42700195 -540.44116211]
[68.42700195 -555.44116211]
[68.42700195 -570.44116211]
[55.08587265 -578.05102539]
[47.35090256 -591.31994629]
[47.30275726 -606.67877197]
[54.95439148 -619.99597168]
[68.24755096 -627.68933105]
[83.60644531 -627.68933105]
[96.89960480 -619.99597168]
[104.55123901 -606.67877197]
[104.50309753 -591.31994629]
[96.76812744 -578.05102539]
[83.42700195 -570.44116211]
[83.42700195 -555.44116211]
[83.42700195 -540.44116211]
[83.42700195 -525.44116211]
[83.65032959 -510.44281006]
[84.09693146 -495.44946289]
[92.20973969 -482.95819092]
[84.88675690 -468.93377686]
[85.33335876 -453.94042969]
[86.44900513 -438.98196411]
[88.23147583 -424.08825684]
[90.01393890 -409.19451904]
[104.06196594 -406.77816772]
[116.87368011 -400.49325562]
[127.40629578 -390.84140015]
[134.79971313 -378.59857178]
[138.44676208 -364.75283813]
[138.04302979 -350.42459106]
[133.61228943 -336.77590942]
[125.50528717 -324.91625977]
[114.37195587 -315.81234741]
[101.10936737 -310.20928955]
[102.66988373 -295.29067993]
[104.23040771 -280.37207031]
[112.87722015 -292.62899780]
[127.03950500 -297.57165527]
[141.43507385 -293.35650635]
[150.69474792 -281.55572510]
[151.36489868 -266.57070923]
[143.19555664 -253.99049377]
[129.23370361 -248.50717163]
[114.68675995 -252.16592407]
[104.97992706 -263.60317993]
[104.75659943 -248.60484314]
[104.53327179 -233.60650635]
[104.30994415 -218.60816956]
[113.67066956 -203.76419067]
[104.09598541 -188.03501892]
[104.09598541 -173.03501892]
[104.09598541 -158.03501892]
[104.09598541 -143.03501892]
[113.67667389 -128.33204651]
[104.33723450 -112.46205902]
[104.56056213 -97.46372223]
[119.08093262 -93.84317780]
[132.17935181 -86.58176422]
[142.96005249 -76.16921997]
[150.68395996 -63.31100464]
[154.81941223 -48.88053131]
[155.07873535 -33.85982132]
[151.43826294 -19.27268219]
[144.14031982 -6.11492443]
[133.67712402 4.71362019]
[120.75759125 12.47063255]
[106.25932312 16.62219238]
[106.48265076 31.62053108]
[106.70597839 46.61886978]
[106.92930603 61.61720657]
[107.15263367 76.61553955]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[108.60414886 136.59683228]
[120.53797913 143.49426270]
[127.45046997 155.29409790]
[127.62837219 168.86015320]
[121.13214874 180.64756775]
[109.75229645 187.62905884]
[109.97562408 202.62739563]
[117.91752625 216.31083679]
[110.37057495 229.15190125]
[113.04904175 233.63217163]
[113.67819977 238.23190308]
[112.55573273 242.15045166]
[110.25392151 244.82141113]
[109.80731964 259.81475830]
[109.36071014 274.80810547]
[108.91410065 289.80145264]
[116.23709106 303.82589722]
[108.12428284 316.31713867]
[115.44727325 330.34158325]
[107.33446503 342.83282471]
[110.20697784 351.50384521]
[106.76793671 358.04562378]
[106.09815216 373.03067017]
[105.42836761 388.01568604]
[104.75858307 403.00073242]
[107.50167847 411.71356201]
[103.96562958 418.20339966]
[103.07281494 433.17681885]
[102.18000031 448.15020752]
[101.28718567 463.12362671]
[100.39436340 478.09701538]
[102.47477722 481.90829468]
[103.16477203 485.79269409]
[102.61210632 489.30410767]
[101.09422302 492.09024048]
[98.97644043 493.92684937]
[97.19397736 508.82058716]
[95.41151428 523.71429443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 197]
[18 196]
[19 195]
[20 194]
[21 192]
[23 190]
[25 188]
[26 187]
[27 186]
[28 185]
[29 181]
[31 179]
[32 178]
[36 173]
[37 172]
[38 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[56 154]
[57 153]
[60 151]
[61 150]
[62 149]
[63 148]
[66 146]
[67 145]
[68 144]
[69 143]
[70 134]
[71 133]
[72 132]
[81 122]
[82 121]
[83 120]
[90 119]
[91 118]
[93 116]
[94 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
