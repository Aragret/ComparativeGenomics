%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[112.99724579 578.97357178]
[113.84962463 563.90118408]
[118.73796082 549.61810303]
[127.29950714 537.18420410]
[138.89894104 527.52209473]
[152.67549133 521.34887695]
[150.45037842 506.51483154]
[148.22526550 491.68078613]
[146.00015259 476.84674072]
[143.77502441 462.01269531]
[141.54991150 447.17864990]
[139.32479858 432.34460449]
[129.78512573 420.90591431]
[135.38967896 406.11065674]
[133.16456604 391.27661133]
[130.93945312 376.44256592]
[128.71432495 361.60852051]
[126.48921204 346.77447510]
[124.26409912 331.94042969]
[121.66120148 329.56192017]
[120.08103943 325.80450439]
[120.15914917 321.16262817]
[122.28624725 316.39581299]
[120.72572327 301.47720337]
[119.16519928 286.55859375]
[109.96880341 278.70028687]
[108.54660797 266.28411865]
[116.20291138 255.90415955]
[114.86466980 240.96397400]
[102.00825500 233.49066162]
[95.94594574 219.71704102]
[99.19446564 204.84086609]
[110.71277618 194.61175537]
[109.37454224 179.67156982]
[107.03905487 164.85450745]
[103.71679688 150.22705078]
[100.39453888 135.59957886]
[90.03050995 124.90209198]
[94.51913452 109.73097229]
[91.08807373 95.12865448]
[87.54840088 80.55227661]
[84.00872803 65.97590637]
[80.46905518 51.39952850]
[76.92938232 36.82315063]
[73.38970947 22.24677658]
[69.85003662 7.67040110]
[59.07471085 -3.91419768]
[63.59013748 -18.10786438]
[60.48305893 -21.14101982]
[58.68375397 -24.65200615]
[58.18185043 -28.17102432]
[58.81547165 -31.27990532]
[60.30118561 -33.65704346]
[57.63539124 -48.41826248]
[54.96959686 -63.17947769]
[50.36487579 -71.06835175]
[52.37570953 -78.18019867]
[49.92998123 -92.97946930]
[47.48425674 -107.77873993]
[45.03852844 -122.57801056]
[42.59280014 -137.37728882]
[39.71992493 -140.63313293]
[38.18673706 -144.26821899]
[37.94795609 -147.81481934]
[38.81104660 -150.86796570]
[40.46945190 -153.12802124]
[38.90893173 -168.04661560]
[37.34840775 -182.96522522]
[35.78788376 -197.88383484]
[22.51708031 -205.70635986]
[16.46776962 -219.67987061]
[19.76749420 -234.36238098]
[30.94633102 -244.16908264]
[29.38580894 -259.08770752]
[27.82528496 -274.00628662]
[26.26476288 -288.92489624]
[24.48229599 -303.81863403]
[22.47828293 -318.68414307]
[20.47426987 -333.54968262]
[18.47025490 -348.41519165]
[16.46624184 -363.28073120]
[14.46222878 -378.14627075]
[12.45821476 -393.01177979]
[10.45420074 -407.87731934]
[8.45018768 -422.74285889]
[6.22507000 -437.57687378]
[3.77934265 -452.37615967]
[1.33361530 -467.17544556]
[-1.11211205 -481.97470093]
[-16.11961746 -483.61096191]
[-30.12871742 -489.23660278]
[-42.09984589 -498.43411255]
[-51.14466095 -510.52105713]
[-56.59197617 -524.60046387]
[-58.03757095 -539.62750244]
[-55.37417221 -554.48718262]
[-48.79941559 -568.07666016]
[-38.80119324 -579.38763428]
[-26.12144661 -587.58074951]
[-11.70108891 -592.04791260]
[3.38979006 -592.45776367]
[18.03134727 -588.77978516]
[31.13708115 -581.28698730]
[41.73445892 -570.53533936]
[49.03709030 -557.32269287]
[52.50306320 -542.62951660]
[51.87518311 -527.54614258]
[47.20004654 -513.19183350]
[38.82457352 -500.63180542]
[27.37028313 -490.79809570]
[13.68715858 -484.42044067]
[16.13288689 -469.62115479]
[18.57861328 -454.82189941]
[21.02434158 -440.02261353]
[24.31624413 -436.56250000]
[25.46946907 -430.99768066]
[23.31571579 -424.74685669]
[25.31972885 -409.88131714]
[27.32374382 -395.01580811]
[29.32775688 -380.15026855]
[31.33176994 -365.28475952]
[33.33578491 -350.41921997]
[35.33979797 -335.55368042]
[37.34381104 -320.68817139]
[39.34782410 -305.82263184]
[42.53524780 -302.26602173]
[43.52227783 -296.66937256]
[41.18336868 -290.48541260]
[42.74388885 -275.56683350]
[44.30441284 -260.64822388]
[45.86493683 -245.72961426]
[58.83119965 -238.44853210]
[65.09790039 -224.76670837]
[62.07122803 -209.84382629]
[50.70648956 -199.44435120]
[52.26701355 -184.52574158]
[53.82753372 -169.60714722]
[55.38805771 -154.68853760]
[57.39207077 -139.82301331]
[59.83779907 -125.02374268]
[62.28352737 -110.22447205]
[64.72925568 -95.42520142]
[67.17498016 -80.62593079]
[69.73081207 -65.84527588]
[72.39660645 -51.08405685]
[75.06240082 -36.32283783]
[78.16651154 -21.64753723]
[88.68865967 -11.10553741]
[84.42641449 4.13072872]
[87.96608734 18.70710373]
[91.50576019 33.28347778]
[95.04543304 47.85985565]
[98.58509827 62.43622971]
[102.12477112 77.01260376]
[105.66444397 91.58898163]
[110.47563934 98.05619812]
[109.14659119 106.40871429]
[119.74824524 118.15245819]
[115.02199554 132.27732849]
[118.34425354 146.90478516]
[121.66651154 161.53224182]
[128.14772034 148.00471497]
[140.85736084 140.03822327]
[155.85722351 140.10128784]
[168.49945068 148.17434692]
[174.86668396 161.75588989]
[172.98599243 176.63751221]
[163.44010925 188.20800781]
[149.18695068 192.88211060]
[134.64299011 189.21150208]
[124.31472778 178.33334351]
[125.65296173 193.27352905]
[138.80583191 201.29277039]
[144.64642334 215.35479736]
[141.12846375 229.98654175]
[129.80485535 239.62573242]
[131.14309692 254.56591797]
[142.08288574 269.37817383]
[134.08380127 284.99807739]
[135.64433289 299.91668701]
[137.20484924 314.83526611]
[139.09814453 329.71530151]
[141.32325745 344.54934692]
[143.54837036 359.38339233]
[145.77349854 374.21743774]
[147.99861145 389.05148315]
[150.22372437 403.88552856]
[159.92256165 416.38525391]
[154.15884399 430.11947632]
[156.38395691 444.95352173]
[158.60906982 459.78756714]
[160.83418274 474.62161255]
[163.05931091 489.45565796]
[165.28442383 504.28970337]
[167.50953674 519.12371826]
[182.49102783 520.98327637]
[196.41481018 526.81683350]
[208.24768066 536.19158936]
[217.11152649 548.41186523]
[222.34861755 562.57080078]
[223.57032776 577.61773682]
[220.68598938 592.43603516]
[213.90962219 605.92614746]
[203.74411011 617.08703613]
[190.94378662 625.09045410]
[176.45851135 629.34240723]
[161.36320496 629.52752686]
[146.77803040 625.63201904]
[133.78530884 617.94488525]
[123.34918213 607.03662109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[23 181]
[24 180]
[25 179]
[28 177]
[29 176]
[33 172]
[34 171]
[35 161]
[36 160]
[37 159]
[39 157]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[48 147]
[53 146]
[54 145]
[55 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[66 138]
[67 137]
[68 136]
[69 135]
[73 131]
[74 130]
[75 129]
[76 128]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
