%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[246.36024475 448.60366821]
[250.51870728 434.17611694]
[256.21270752 420.28274536]
[263.37551880 407.08645630]
[271.92309570 394.74200439]
[281.75527954 383.39407349]
[292.75677490 373.17572021]
[283.79605103 361.14633179]
[274.83535767 349.11697388]
[265.87466431 337.08758545]
[256.91397095 325.05822754]
[244.99404907 322.99865723]
[237.43029785 313.05010986]
[238.71171570 300.21575928]
[229.93110657 288.05432129]
[221.15051270 275.89285278]
[212.36990356 263.73138428]
[203.58929443 251.56994629]
[194.80870056 239.40847778]
[186.02809143 227.24702454]
[177.24749756 215.08557129]
[161.81101990 220.33279419]
[145.49000549 220.55844116]
[129.87875366 215.72897339]
[116.50576782 206.30517578]
[106.68412018 193.19830322]
[101.38253021 177.68190002]
[101.12982178 161.26808167]
[105.96217346 145.56019592]
[115.41851807 132.09616089]
[106.27971649 120.20152283]
[97.14091492 108.30688477]
[94.16330719 107.65621948]
[91.35664368 105.90774536]
[89.12798309 103.12268829]
[87.85608673 99.51180267]
[87.83744812 95.42124939]
[79.42282867 83.00375366]
[71.00820923 70.58625793]
[55.74542618 71.58358002]
[42.12264252 64.85182190]
[33.75406647 52.28864670]
[32.80384445 37.32358551]
[39.42724228 23.98206520]
[31.01262474 11.56457043]
[22.59800720 -0.85292518]
[14.18338871 -13.27042103]
[0.03664983 -20.35423088]
[-0.69783336 -35.23071671]
[-9.11245155 -47.64821243]
[-17.52707100 -60.06570435]
[-25.94168854 -72.48320007]
[-34.35630798 -84.90069580]
[-42.77092743 -97.31819153]
[-55.26691055 -100.51399994]
[-62.01982498 -111.02979279]
[-59.86846924 -122.93349457]
[-68.09727478 -135.47489929]
[-76.32608795 -148.01629639]
[-89.73815155 -141.26246643]
[-103.83268738 -136.08154297]
[-118.42593384 -132.54109192]
[-133.32765198 -130.68725586]
[-148.34355164 -130.54420471]
[-163.27787781 -132.11380005]
[-177.93592834 -135.37557983]
[-192.12661743 -140.28703308]
[-205.66491699 -146.78410339]
[-218.37434387 -154.78211975]
[-230.08920288 -164.17678833]
[-240.65676880 -174.84564209]
[-249.93927002 -186.64958191]
[-257.81567383 -199.43472290]
[-264.18331909 -213.03439331]
[-268.95919800 -227.27127075]
[-272.08099365 -241.95977783]
[-273.50805664 -256.90838623]
[-273.22177124 -271.92224121]
[-271.22589111 -286.80560303]
[-267.54638672 -301.36441040]
[-262.23126221 -315.40887451]
[-255.34979248 -328.75592041]
[-246.99171448 -341.23150635]
[-237.26597595 -352.67300415]
[-226.29937744 -362.93124390]
[-214.23489380 -371.87249756]
[-201.22981262 -379.38018799]
[-187.45365906 -385.35644531]
[-173.08605957 -389.72332764]
[-158.31431580 -392.42395020]
[-143.33100891 -393.42309570]
[-128.33148193 -392.70770264]
[-113.51126862 -390.28713989]
[-99.06359100 -386.19293213]
[-85.17681122 -380.47845459]
[-72.03196716 -373.21826172]
[-59.80041885 -364.50692749]
[-48.64164352 -354.45806885]
[-38.70111084 -343.20269775]
[-30.10841751 -330.88751221]
[-22.97558784 -317.67312622]
[-17.39561272 -303.73175049]
[-13.44123936 -289.24517822]
[-11.16401958 -274.40228271]
[-10.59364128 -259.39651489]
[-11.73754311 -244.42358398]
[-14.58080959 -229.67861938]
[-19.08637238 -215.35389709]
[-25.19549561 -201.63616943]
[-32.82852936 -188.70423889]
[-41.88596725 -176.72674561]
[-52.24972153 -165.85980225]
[-63.78468323 -156.24510193]
[-55.55587769 -143.70370483]
[-47.32706833 -131.16230774]
[-31.25085449 -124.12509918]
[-30.35343170 -105.73281097]
[-21.93881226 -93.31531525]
[-13.52419376 -80.89781952]
[-5.10957479 -68.48032379]
[3.30504346 -56.06282806]
[11.71966171 -43.64533234]
[25.26453018 -37.44970703]
[26.60088348 -21.68503952]
[35.01550293 -9.26754379]
[43.43012238 3.14995170]
[51.84473801 15.56744671]
[66.69089508 14.36029243]
[80.23807526 20.78911972]
[88.80506134 33.21784210]
[90.00862122 48.36539078]
[83.42570496 62.17163849]
[91.84032440 74.58913422]
[100.25494385 87.00662994]
[109.03554535 99.16808319]
[118.17434692 111.06272125]
[127.31314850 122.95735168]
[140.10728455 117.88239288]
[153.76693726 116.29862976]
[167.35762024 118.30774689]
[179.95135498 123.76586151]
[190.68992615 132.29383850]
[198.84341431 143.30355835]
[203.85980225 156.03854370]
[205.40237427 169.62586975]
[203.37225342 183.13604736]
[197.91474915 195.64657593]
[189.40895081 206.30497742]
[198.18954468 218.46643066]
[206.97015381 230.62788391]
[215.75076294 242.78933716]
[224.53135681 254.95079041]
[233.31196594 267.11224365]
[242.09255981 279.27371216]
[250.87316895 291.43515015]
[267.84341431 298.58303833]
[268.94335938 316.09750366]
[277.90405273 328.12689209]
[286.86474609 340.15628052]
[295.82543945 352.18563843]
[304.78613281 364.21502686]
[317.72625732 356.59924316]
[331.41397095 350.42718506]
[345.68875122 345.77124023]
[360.38323975 342.68600464]
[375.32519531 341.20761108]
[390.33938599 341.35345459]
[405.24978638 343.12176514]
[419.88159180 346.49185181]
[434.06326294 351.42416382]
[447.62850952 357.86090088]
[460.41827393 365.72662354]
[472.28259277 374.92904663]
[483.08242798 385.36029053]
[492.69110107 396.89810181]
[500.99594116 409.40713501]
[507.89962769 422.74081421]
[513.32122803 436.74273682]
[517.19708252 451.24874878]
[519.48187256 466.08880615]
[520.14868164 481.08889771]
[519.18981934 496.07312012]
[516.61645508 510.86587524]
[512.45880127 525.29364014]
[506.76550293 539.18731689]
[499.60342407 552.38397217]
[491.05651855 564.72888184]
[481.22494507 576.07739258]
[470.22399902 586.29632568]
[458.18267822 595.26593018]
[445.24212646 602.88098145]
[431.55410767 609.05230713]
[417.27908325 613.70745850]
[402.58441162 616.79193115]
[387.64239502 618.26953125]
[372.62820435 618.12286377]
[357.71789551 616.35375977]
[343.08624268 612.98291016]
[328.90487671 608.04980469]
[315.33996582 601.61230469]
[302.55062866 593.74597168]
[290.68679810 584.54290771]
[279.88754272 574.11102295]
[270.27947998 562.57275391]
[261.97531128 550.06323242]
[255.07232666 536.72918701]
[249.65150452 522.72698975]
[245.77639771 508.22076416]
[243.49243164 493.38058472]
[242.82640076 478.38046265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[20 149]
[21 148]
[30 137]
[31 136]
[32 135]
[37 134]
[38 133]
[39 132]
[44 127]
[45 126]
[46 125]
[47 124]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[57 115]
[58 114]
[59 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
