%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[114.64976501 480.69662476]
[124.56030273 468.08071899]
[124.11370087 453.08737183]
[116.00089264 440.59609985]
[123.32388306 426.57168579]
[122.87727356 411.57833862]
[110.45121765 405.91174316]
[101.63661194 395.39358521]
[98.19733429 382.03991699]
[100.85979462 368.44250488]
[109.16033936 357.26586914]
[121.52487183 350.72515869]
[121.30154419 335.72680664]
[121.07821655 320.72848511]
[120.85488892 305.73013306]
[119.62791443 290.78042603]
[117.40279388 275.94638062]
[115.17768097 261.11233521]
[112.95256042 246.27827454]
[103.41444397 238.83845520]
[101.43926239 226.49818420]
[108.62443542 215.78669739]
[106.62042236 200.92115784]
[104.61640930 186.05563354]
[93.15727234 172.76446533]
[100.29273987 155.78900146]
[98.06762695 140.95495605]
[93.96667480 134.80645752]
[95.92151642 125.88365173]
[93.91750336 111.01811981]
[91.58201599 96.20105743]
[88.91622162 81.43983459]
[86.25042725 66.67861938]
[74.03277588 52.90144730]
[80.60642242 36.63018036]
[77.72114563 21.91028976]
[74.83587646 7.19039917]
[60.14154816 -2.30149651]
[56.92182922 -19.15226173]
[66.68936157 -32.84291458]
[63.58525467 -47.51821899]
[60.48114395 -62.19351959]
[56.61684036 -76.68721008]
[52.00283051 -90.95994568]
[47.38882065 -105.23268127]
[42.77481079 -119.50541687]
[38.16080093 -133.77815247]
[33.54679108 -148.05088806]
[28.93278313 -162.32360840]
[23.37355804 -176.25541687]
[16.89406204 -189.78375244]
[10.41456604 -203.31210327]
[3.93507028 -216.84045410]
[-2.54442573 -230.36878967]
[-9.02392101 -243.89714050]
[-15.55328465 -250.28503418]
[-15.49749756 -257.67547607]
[-21.93103027 -264.15988159]
[-21.76521683 -271.54867554]
[-27.83905029 -285.26394653]
[-33.91288376 -298.97921753]
[-39.98671722 -312.69448853]
[-46.06055069 -326.40975952]
[-52.13438416 -340.12500000]
[-58.20822144 -353.84027100]
[-72.55202484 -349.39373779]
[-87.31507111 -346.64251709]
[-102.29768372 -345.62384033]
[-117.29725647 -346.35144043]
[-132.11093140 -348.81549072]
[-146.53836060 -352.98269653]
[-160.38444519 -358.79669189]
[-173.46192932 -366.17883301]
[-185.59396362 -375.02929688]
[-196.61643982 -385.22836304]
[-206.38034058 -396.63812256]
[-214.75358582 -409.10430908]
[-221.62294006 -422.45828247]
[-226.89552307 -436.51943970]
[-230.50001526 -451.09765625]
[-232.38766479 -465.99572754]
[-232.53295898 -481.01223755]
[-230.93391418 -495.94409180]
[-227.61218262 -510.58929443]
[-222.61265564 -524.74987793]
[-216.00296021 -538.23425293]
[-207.87248230 -550.86004639]
[-198.33119202 -562.45666504]
[-187.50810242 -572.86706543]
[-175.54960632 -581.95062256]
[-162.61740112 -589.58441162]
[-148.88639832 -595.66522217]
[-134.54229736 -600.11077881]
[-119.77906799 -602.86102295]
[-104.79638672 -603.87872314]
[-89.79686737 -603.15008545]
[-74.98336029 -600.68505859]
[-60.55619812 -596.51690674]
[-46.71049881 -590.70196533]
[-33.63351059 -583.31896973]
[-21.50207710 -574.46771240]
[-10.48026752 -564.26788330]
[-0.71713847 -552.85748291]
[7.65527534 -540.39074707]
[14.52374744 -527.03631592]
[19.79538727 -512.97479248]
[23.39890480 -498.39633179]
[25.28556442 -483.49810791]
[25.42985153 -468.48159790]
[23.82981682 -453.54989624]
[20.50709534 -438.90487671]
[15.50662613 -424.74465942]
[8.89603329 -411.26071167]
[0.76471847 -398.63543701]
[-8.77735233 -387.03948975]
[-19.60113335 -376.62979126]
[-31.56024361 -367.54702759]
[-44.49295425 -359.91412354]
[-38.41912079 -346.19885254]
[-32.34528351 -332.48358154]
[-26.27145195 -318.76831055]
[-20.19761658 -305.05303955]
[-14.12378311 -291.33776855]
[-8.04994965 -277.62252808]
[-1.87418091 -263.95285034]
[4.50442410 -250.37663269]
[10.98392010 -236.84829712]
[17.46341515 -223.31994629]
[23.94291115 -209.79159546]
[30.42240715 -196.26325989]
[36.90190506 -182.73490906]
[40.22600555 -197.36195374]
[50.85554123 -207.94557190]
[65.49684143 -211.20631409]
[79.61312866 -206.13380432]
[88.83032990 -194.29980469]
[90.29238129 -179.37123108]
[83.54626465 -165.97384644]
[70.68232727 -158.25898743]
[55.68660355 -158.61717224]
[43.20551682 -166.93762207]
[47.81952667 -152.66488647]
[52.43353653 -138.39215088]
[57.04754639 -124.11942291]
[61.66155243 -109.84668732]
[66.27556610 -95.57395935]
[70.88957214 -81.30122375]
[77.64105988 -94.69589996]
[91.37280273 -100.73239899]
[105.80683136 -96.65089417]
[114.34411621 -84.31741333]
[113.08151245 -69.37064362]
[102.59626770 -58.64405441]
[87.68209839 -57.04169846]
[75.15644836 -65.29763031]
[78.26055908 -50.62232971]
[81.36466980 -35.94702530]
[93.04132843 -30.49862099]
[99.54496765 -19.15028191]
[98.30679321 -5.93372393]
[89.55576324 4.30512619]
[92.44104004 19.02501678]
[95.32630920 33.74490738]
[105.18711853 40.75140762]
[107.71135712 52.99118042]
[101.01164246 64.01282501]
[103.67743683 78.77404022]
[106.34323120 93.53526306]
[109.16778564 96.16095734]
[110.82125854 100.01892090]
[110.77925873 104.55821991]
[108.78302765 109.01410675]
[110.78704834 123.87963867]
[112.90167236 138.72982788]
[115.12678528 153.56387329]
[125.01630402 161.84399414]
[126.56422424 174.24510193]
[119.48193359 184.05162048]
[121.48594666 198.91714478]
[123.48995972 213.78268433]
[135.08024597 228.09165955]
[127.78660583 244.05316162]
[130.01171875 258.88720703]
[132.23683167 273.72125244]
[134.46195984 288.55529785]
[141.93133545 275.54727173]
[155.19830322 268.54815674]
[170.15193176 269.72668457]
[182.15869141 278.71765137]
[187.49813843 292.73516846]
[184.51580811 307.43569946]
[174.13580322 318.26412964]
[159.57446289 321.86520386]
[145.34379578 317.12304688]
[135.85322571 305.50680542]
[136.07655334 320.50515747]
[136.29988098 335.50347900]
[136.52320862 350.50183105]
[151.04629517 358.40573120]
[159.55297852 372.47454834]
[159.80250549 388.81942749]
[151.82144165 402.97775269]
[137.87062073 411.13174438]
[138.31723022 426.12509155]
[146.46197510 439.68875122]
[139.10705566 452.64077759]
[139.55364990 467.63412476]
[150.19754028 479.63775635]
[147.30722046 495.41830444]
[133.09989929 502.87026978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[5 204]
[6 203]
[12 198]
[13 197]
[14 196]
[15 195]
[16 185]
[17 184]
[18 183]
[19 182]
[22 180]
[23 179]
[24 178]
[26 175]
[27 174]
[29 173]
[30 172]
[31 168]
[32 167]
[33 166]
[35 163]
[36 162]
[37 161]
[40 157]
[41 156]
[42 155]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[57 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
