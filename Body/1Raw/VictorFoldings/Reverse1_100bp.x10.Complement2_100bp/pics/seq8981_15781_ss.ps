%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[35.02667236 737.90344238]
[22.58399773 746.32946777]
[9.04704189 752.85394287]
[-5.29565334 757.33776855]
[-20.13837242 759.68542480]
[-35.16474152 759.84686279]
[-50.05447388 757.81866455]
[-64.49019623 753.64398193]
[-78.16419983 747.41186523]
[-90.78503418 739.25512695]
[-102.08368683 729.34759521]
[-111.81931305 717.90057373]
[-119.78440857 705.15789795]
[-125.80918884 691.39129639]
[-129.76524353 676.89410400]
[-131.56825256 661.97546387]
[-131.17976379 646.95324707]
[-128.60807800 632.14770508]
[-123.90800476 617.87438965]
[-117.17972565 604.43756104]
[-108.56665039 592.12365723]
[-98.25238037 581.19506836]
[-86.45674896 571.88482666]
[-73.43119049 564.39129639]
[-59.45334244 558.87426758]
[-44.82114410 555.45129395]
[-29.84648132 554.19537354]
[-14.84854031 555.13323975]
[-11.74443054 540.45794678]
[-8.64032078 525.78265381]
[-5.53621006 511.10736084]
[-2.43210006 496.43206787]
[0.67201000 481.75674438]
[3.77612019 467.08145142]
[6.88023043 452.40615845]
[9.98434067 437.73083496]
[13.08845043 423.05554199]
[16.19256020 408.38024902]
[19.29667091 393.70492554]
[22.40078163 379.02963257]
[8.59671974 384.89886475]
[-4.67067194 377.90057373]
[-7.62116718 363.19360352]
[1.92022991 351.61941528]
[16.91995621 351.71005249]
[26.32038879 363.39712524]
[30.50740051 348.99334717]
[34.69441223 334.58953857]
[38.77407837 320.15499878]
[42.74617386 305.69046021]
[46.71826935 291.22595215]
[42.62744141 276.90414429]
[53.74290848 265.64550781]
[57.71500397 251.18096924]
[61.68709946 236.71644592]
[65.65919495 222.25192261]
[51.06315994 209.17810059]
[45.10958099 190.42642212]
[49.52617264 171.17343140]
[63.16619873 156.77690125]
[82.30482483 151.28494263]
[85.19010162 136.56504822]
[80.04539490 122.58716583]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[102.22295380 33.39873886]
[106.68259430 27.50523567]
[109.78670502 12.82993317]
[112.89081573 -1.84536922]
[100.07212067 -9.90181828]
[90.80063629 -21.83544922]
[86.18013000 -36.19411087]
[86.74989319 -51.23889160]
[92.42187500 -65.15471649]
[102.49362946 -76.26931000]
[115.73525238 -83.25418854]
[130.53956604 -85.28337860]
[133.64367676 -99.95867920]
[136.74778748 -114.63397980]
[139.85189819 -129.30928040]
[142.95600891 -143.98458862]
[146.06011963 -158.65988159]
[141.34611511 -173.76249695]
[151.54972839 -184.61309814]
[149.93009949 -189.57534790]
[150.33532715 -194.20018005]
[152.29780579 -197.77281189]
[155.13403320 -199.86761475]
[158.89033508 -214.38967896]
[162.64663696 -228.91174316]
[166.40293884 -243.43379211]
[170.05102539 -257.98342896]
[173.59069824 -272.55978394]
[177.13037109 -287.13616943]
[163.47784424 -293.46823120]
[151.32315063 -302.34231567]
[141.13348389 -313.41738892]
[133.30050659 -326.26770020]
[128.12528992 -340.39932251]
[125.80676270 -355.26913452]
[126.43404388 -370.30551147]
[129.98301697 -384.93051147]
[136.31727600 -398.58203125]
[145.19334412 -410.73529053]
[156.27005005 -420.92315674]
[169.12164307 -428.75405884]
[183.25411987 -433.92697144]
[198.12428284 -436.24310303]
[213.16056824 -435.61337280]
[227.78500366 -432.06204224]
[241.43547058 -425.72555542]
[253.58729553 -416.84753418]
[263.77337646 -405.76916504]
[271.60220337 -392.91632080]
[276.77282715 -378.78302002]
[279.08654785 -363.91247559]
[278.45440674 -348.87628174]
[274.90069580 -334.25241089]
[268.56201172 -320.60296631]
[259.68200684 -308.45260620]
[248.60200500 -298.26831055]
[235.74787903 -290.44155884]
[221.61372375 -285.27322388]
[206.74281311 -282.96191406]
[191.70674133 -283.59649658]
[188.16706848 -269.02011108]
[184.62739563 -254.44374084]
[186.10369873 -247.20204163]
[180.92498779 -239.67749023]
[177.16868591 -225.15544128]
[173.41238403 -210.63337708]
[169.65608215 -196.11131287]
[166.22502136 -181.50898743]
[171.16105652 -167.45605469]
[160.73542786 -155.55577087]
[157.63131714 -140.88047791]
[154.52720642 -126.20516968]
[151.42309570 -111.52986908]
[148.31898499 -96.85456848]
[145.21487427 -82.17926788]
[157.92955017 -74.32927704]
[167.20870972 -62.58082199]
[171.91728210 -48.33990097]
[171.46864319 -33.31924057]
[165.89762878 -19.33231735]
[155.85873413 -8.07440567]
[142.54914856 -0.91710633]
[127.56611633 1.25874090]
[124.46201324 15.93404293]
[121.35790253 30.60934639]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[109.95091248 128.44900513]
[99.90998840 139.45031738]
[97.02471924 154.17021179]
[106.12450409 159.63125610]
[113.33589935 167.38876343]
[118.10037231 176.82476807]
[120.05367279 187.19197083]
[119.05366516 197.67295837]
[115.19062042 207.44464111]
[108.77917480 215.74287415]
[100.33274078 221.92225647]
[90.52243805 225.50625610]
[80.12371826 226.22401428]
[76.15162659 240.68853760]
[72.17952728 255.15306091]
[68.20743561 269.61758423]
[72.01414490 284.97399902]
[61.18279266 295.19805908]
[57.21069717 309.66256714]
[53.23860168 324.12710571]
[53.98382187 333.23107910]
[49.09819412 338.77655029]
[44.91118240 353.18032837]
[40.72417068 367.58413696]
[37.07608414 382.13375854]
[33.97197342 396.80905151]
[30.86786270 411.48434448]
[27.76375198 426.15966797]
[24.65964317 440.83496094]
[21.55553246 455.51025391]
[18.45142174 470.18554688]
[15.34731197 484.86087036]
[12.24320221 499.53616333]
[9.13909245 514.21148682]
[6.03498220 528.88677979]
[2.93087196 543.56207275]
[-0.17323823 558.23736572]
[13.91991520 563.45281982]
[27.10346413 570.66473389]
[39.09640121 579.71942139]
[49.64309311 590.42388916]
[58.51873779 602.54992676]
[65.53414917 615.83905029]
[70.53980255 630.00811768]
[73.42898560 644.75500488]
[74.14012909 659.76538086]
[72.65807343 674.71936035]
[69.01439667 689.29815674]
[63.28677750 703.19104004]
[55.59729385 716.10186768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[46 184]
[47 183]
[48 182]
[49 180]
[50 179]
[51 178]
[53 176]
[54 175]
[55 174]
[56 173]
[61 163]
[62 162]
[64 160]
[66 158]
[67 157]
[68 156]
[69 155]
[71 154]
[72 153]
[73 152]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[88 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
