%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[69.20906067 754.97302246]
[54.21752167 755.61547852]
[39.21583939 755.28613281]
[24.26693726 753.98645020]
[9.43351555 751.72180176]
[-5.22220945 748.50177002]
[-19.63876534 744.33984375]
[-33.75568390 739.25341797]
[-47.51375198 733.26391602]
[-60.85526657 726.39636230]
[-73.72426605 718.67962646]
[-86.06677246 710.14611816]
[-97.83100891 700.83148193]
[-108.96765137 690.77496338]
[-119.42996979 680.01861572]
[-129.17408752 668.60760498]
[-138.15914917 656.58978271]
[-146.34744263 644.01562500]
[-153.70463562 630.93774414]
[-160.19987488 617.41107178]
[-165.80589294 603.49230957]
[-170.49920654 589.23986816]
[-174.26011658 574.71356201]
[-177.07284546 559.97424316]
[-178.92559814 545.08374023]
[-179.81060791 530.10461426]
[-179.72416687 515.09954834]
[-178.66661072 500.13156128]
[-176.64241028 485.26342773]
[-173.66003418 470.55749512]
[-169.73199463 456.07546997]
[-164.87477112 441.87805176]
[-159.10873413 428.02484131]
[-152.45806885 414.57391357]
[-144.95066833 401.58166504]
[-136.61802673 389.10266113]
[-127.49510193 377.18917847]
[-117.62014008 365.89120483]
[-107.03457642 355.25613403]
[-95.78279877 345.32858276]
[-83.91201019 336.15014648]
[-71.47199249 327.75939941]
[-58.51493454 320.19146729]
[-45.09517670 313.47811890]
[-31.26900673 307.64752197]
[-17.09441757 302.72412109]
[-2.63086319 298.72854614]
[12.06099129 295.67761230]
[26.91952324 293.58404541]
[41.88240814 292.45669556]
[56.88689041 292.30023193]
[71.87003326 293.11535645]
[73.65249634 278.22161865]
[75.43495941 263.32791138]
[77.21743011 248.43418884]
[67.91454315 239.51870728]
[65.40783691 226.68132019]
[70.83238220 214.56584167]
[82.41230011 207.68688965]
[84.41631317 192.82136536]
[78.44875336 179.17446899]
[87.96040344 166.53172302]
[89.40982056 151.60191345]
[82.44377899 138.43667603]
[90.98876190 125.12150574]
[91.88158417 110.14810181]
[92.32818604 95.15474701]
[92.32818604 80.15474701]
[92.32818604 65.15474701]
[92.32818604 50.15475082]
[84.59088898 36.35457993]
[92.32818604 23.62730598]
[92.32818604 8.62730598]
[92.32818604 -6.37269354]
[92.32818604 -21.37269402]
[92.32818604 -36.37269211]
[77.18072510 -40.06120682]
[63.36031342 -47.25669861]
[51.66496658 -57.53899765]
[42.76885223 -70.30982971]
[37.18345642 -84.82764435]
[35.22817230 -100.25064087]
[37.01203537 -115.68561554]
[42.42765808 -130.23966980]
[51.15766907 -143.07188416]
[62.69332886 -153.44184875]
[76.36417389 -160.75245667]
[91.37696075 -164.58425903]
[91.15363312 -179.58259583]
[90.93029785 -194.58093262]
[90.70697021 -209.57926941]
[82.76506805 -223.26271057]
[90.31201935 -236.10377502]
[90.08869171 -251.10211182]
[79.02959442 -262.07180786]
[79.01676178 -277.28543091]
[89.54283905 -287.76098633]
[89.31950378 -302.75933838]
[89.09617615 -317.75765991]
[75.41075134 -324.61096191]
[66.48720551 -337.04592896]
[64.37611389 -352.20516968]
[69.56258392 -366.60513306]
[80.85480499 -376.93682861]
[95.65791321 -380.82614136]
[110.57025146 -377.37930298]
[122.16508484 -367.38839722]
[127.77799225 -353.14923096]
[126.11918640 -337.93386841]
[117.56983185 -325.23870850]
[104.09452057 -317.98098755]
[104.31784821 -302.98266602]
[104.54117584 -287.98431396]
[115.37447357 -277.82681274]
[115.81462097 -262.61953735]
[105.08702850 -251.32543945]
[105.31035614 -236.32710266]
[113.23628998 -223.71643066]
[105.70531464 -209.80259705]
[105.92864227 -194.80426025]
[106.15196991 -179.80592346]
[106.37529755 -164.80758667]
[120.50531006 -161.76611328]
[133.60797119 -155.64686584]
[145.02189636 -146.75502014]
[154.17008972 -135.53581238]
[160.58918762 -122.55223846]
[163.95281982 -108.45679474]
[164.08831787 -93.95868683]
[160.98550415 -79.78815460]
[154.79739380 -66.65967560]
[145.83265686 -55.23596954]
[134.54019165 -46.09450912]
[121.48668671 -39.69835663]
[107.32818604 -36.37269211]
[107.32818604 -21.37269402]
[107.32818604 -6.37269354]
[107.32818604 8.62730598]
[107.32818604 23.62730598]
[115.06549072 36.35457993]
[107.32818604 50.15475082]
[107.32818604 65.15474701]
[107.32818604 80.15474701]
[107.32818604 95.15474701]
[109.29293823 97.48483276]
[110.45328522 100.58129883]
[110.52375031 104.14759827]
[109.33238983 107.78585052]
[106.85498810 111.04091644]
[105.96217346 126.01432037]
[112.86434937 140.25056458]
[104.38323212 152.49473572]
[117.16391754 144.64273071]
[131.32266235 149.59550476]
[136.42214966 163.70207214]
[128.70324707 176.56358337]
[113.85603333 178.69902039]
[102.82593536 168.53573608]
[108.65015411 183.24591064]
[99.28184509 194.82537842]
[97.27783203 209.69090271]
[108.13700867 223.40576172]
[105.76408386 240.39646912]
[92.11114502 250.21665955]
[90.32868195 265.11038208]
[88.54621124 280.00408936]
[86.76374817 294.89782715]
[101.51609039 297.64141846]
[116.05989838 301.33416748]
[130.33416748 305.96063232]
[144.27903748 311.50134277]
[157.83601379 317.93307495]
[170.94822693 325.22888184]
[183.56069946 333.35812378]
[195.62049866 342.28674316]
[207.07705688 351.97726440]
[217.88232422 362.38903809]
[227.99096680 373.47842407]
[237.36061096 385.19885254]
[245.95191956 397.50122070]
[253.72889709 410.33389282]
[260.65890503 423.64306641]
[266.71286011 437.37289429]
[271.86538696 451.46582031]
[276.09487915 465.86270142]
[279.38360596 480.50317383]
[281.71774292 495.32580566]
[283.08749390 510.26846313]
[283.48715210 525.26843262]
[282.91503906 540.26281738]
[281.37350464 555.18872070]
[278.86907959 569.98352051]
[275.41223145 584.58520508]
[271.01745605 598.93249512]
[265.70318604 612.96527100]
[259.49176025 626.62457275]
[252.40914917 639.85314941]
[244.48512268 652.59558105]
[235.75289917 664.79833984]
[226.24911499 676.41021729]
[216.01359558 687.38262939]
[205.08932495 697.66943359]
[193.52207947 707.22760010]
[181.36039734 716.01690674]
[168.65528870 724.00061035]
[155.46003723 731.14514160]
[141.83000183 737.42053223]
[127.82233429 742.80053711]
[113.49580383 747.26251221]
[98.91049194 750.78778076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 167]
[53 166]
[54 165]
[55 164]
[59 161]
[60 160]
[62 158]
[63 152]
[65 150]
[66 149]
[67 144]
[68 143]
[69 142]
[70 141]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[88 122]
[89 121]
[90 120]
[91 119]
[93 117]
[94 116]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
