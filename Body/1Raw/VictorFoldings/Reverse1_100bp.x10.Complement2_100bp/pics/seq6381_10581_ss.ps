%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[98.58834839 391.03778076]
[83.81861115 394.20504761]
[68.75493622 393.08157349]
[54.61845398 387.75836182]
[42.55514908 378.66696167]
[33.54293823 366.54440308]
[28.31240654 352.37335205]
[27.28756332 337.30264282]
[30.55149269 322.55398560]
[37.83959961 309.32293701]
[48.56106949 298.68212891]
[61.84676361 291.49417114]
[76.61966705 288.34170532]
[77.73532104 273.38327026]
[78.85096741 258.42480469]
[76.21366119 251.52072144]
[80.09621429 243.25248718]
[81.43444824 228.31230164]
[82.77268219 213.37211609]
[71.44907379 203.73292542]
[67.93111420 189.10118103]
[73.77170563 175.03913879]
[86.92457581 167.01989746]
[88.26280975 152.07971191]
[89.60104370 137.13952637]
[90.93927765 122.19934845]
[92.05493164 107.24089050]
[90.16163635 92.36085510]
[85.54763031 78.08812714]
[80.93361664 63.81539154]
[76.31961060 49.54265976]
[71.70559692 35.26992416]
[67.09159088 20.99719238]
[62.47758102 6.72445822]
[51.37034225 0.16762486]
[47.82115555 -11.81515598]
[53.20973206 -22.64519882]
[48.80873489 -36.98504639]
[37.80035019 -43.70652390]
[34.42996216 -55.74081802]
[39.97918320 -66.48943329]
[35.79217148 -80.89321136]
[31.60516167 -95.29699707]
[27.41814995 -109.70077515]
[23.23114014 -124.10456085]
[19.04412842 -138.50834656]
[14.64313030 -152.84819031]
[10.02912045 -167.12092590]
[5.41511154 -181.39366150]
[0.80110234 -195.66638184]
[-3.81290698 -209.93911743]
[-8.42691612 -224.21185303]
[-13.04092503 -238.48458862]
[-17.65493393 -252.75732422]
[-32.24272156 -249.23399353]
[-47.05519867 -246.82402039]
[-62.00751495 -245.54119873]
[-77.01402283 -245.39289856]
[-91.98877716 -246.37994385]
[-106.84598541 -248.49668884]
[-121.50056458 -251.73100281]
[-135.86856079 -256.06439209]
[-149.86767578 -261.47198486]
[-163.41772461 -267.92285156]
[-176.44108582 -275.38000488]
[-188.86318970 -283.80075073]
[-200.61283875 -293.13684082]
[-211.62277222 -303.33483887]
[-221.82989502 -314.33627319]
[-231.17576599 -326.07818604]
[-239.60684204 -338.49328613]
[-247.07481384 -351.51043701]
[-253.53692627 -365.05511475]
[-258.95617676 -379.04974365]
[-263.30148315 -393.41412354]
[-266.54797363 -408.06600952]
[-268.67706299 -422.92144775]
[-269.67654419 -437.89538574]
[-269.54071045 -452.90200806]
[-268.27032471 -467.85537720]
[-265.87265015 -482.66986084]
[-262.36145020 -497.26055908]
[-257.75683594 -511.54394531]
[-252.08514404 -525.43817139]
[-245.37889099 -538.86364746]
[-237.67649841 -551.74346924]
[-229.02206421 -564.00390625]
[-219.46517944 -575.57470703]
[-209.06056213 -586.38958740]
[-197.86782837 -596.38659668]
[-185.95109558 -605.50848389]
[-173.37860107 -613.70300293]
[-160.22236633 -620.92315674]
[-146.55775452 -627.12768555]
[-132.46304321 -632.28094482]
[-118.01896667 -636.35351562]
[-103.30824280 -639.32202148]
[-88.41514587 -641.16949463]
[-73.42498016 -641.88531494]
[-58.42361450 -641.46533203]
[-43.49696732 -639.91204834]
[-28.73054695 -637.23431396]
[-14.20893192 -633.44750977]
[-0.01529936 -628.57330322]
[13.76904774 -622.63952637]
[27.06515312 -615.68029785]
[39.79685974 -607.73541260]
[51.89123535 -598.85040283]
[63.27900696 -589.07617188]
[73.89494324 -578.46868896]
[83.67824554 -567.08868408]
[92.57286072 -555.00134277]
[100.52785492 -542.27593994]
[107.49765015 -528.98541260]
[113.44232941 -515.20574951]
[118.32784271 -501.01599121]
[122.12619781 -486.49740601]
[124.81565094 -471.73309326]
[126.38079071 -456.80770874]
[126.81265259 -441.80667114]
[126.10875702 -426.81594849]
[124.27314758 -411.92138672]
[121.31632233 -397.20831299]
[117.25523376 -382.76098633]
[112.11313629 -368.66220093]
[105.91948700 -354.99267578]
[98.70975494 -341.83068848]
[90.52525330 -329.25170898]
[81.41284180 -317.32772827]
[71.42473602 -306.12704468]
[60.61812973 -295.71383667]
[49.05493546 -286.14776611]
[36.80138397 -277.48358154]
[23.92766190 -269.77096558]
[10.50751019 -263.05404663]
[-3.38220143 -257.37133789]
[1.23180795 -243.09860229]
[5.84581709 -228.82586670]
[10.45982647 -214.55313110]
[15.07383537 -200.28039551]
[19.68784523 -186.00765991]
[24.30185509 -171.73492432]
[28.91586304 -157.46220398]
[32.68462372 -154.52868652]
[34.65058136 -149.19651794]
[33.44791031 -142.69535828]
[37.63492203 -128.29156494]
[41.82193375 -113.88778687]
[46.00894547 -99.48400879]
[50.19595337 -85.08022308]
[54.38296509 -70.67644501]
[67.68694305 -59.23218536]
[63.14858246 -41.38604355]
[67.54957581 -27.04619598]
[81.02247620 -15.80128384]
[76.75031281 2.11044884]
[81.36432648 16.38318253]
[85.97833252 30.65591621]
[90.59233856 44.92864990]
[95.20635223 59.20138168]
[99.82035828 73.47411346]
[104.43437195 87.74684906]
[106.61309814 72.90592194]
[112.11143494 58.94998169]
[120.64096069 46.61113358]
[131.75422668 36.53664398]
[144.86825562 29.25500298]
[159.29510498 25.14819145]
[174.27798462 24.43164444]
[189.03091431 27.14295006]
[202.77998352 33.13987732]
[214.80393982 42.10784149]
[224.47203064 53.57640076]
[231.27711487 66.94393921]
[234.86216736 81.50921631]
[235.03915405 96.50817108]
[231.79878235 111.15399170]
[225.31103516 124.67837524]
[215.91624451 136.37187195]
[204.10723877 145.62106323]
[190.50350952 151.94075012]
[175.81866455 154.99942017]
[160.82305908 154.63662720]
[146.30331421 150.87138367]
[133.02111816 143.90121460]
[121.67322540 134.09176636]
[112.85491943 121.95761108]
[107.02833557 108.13371277]
[109.64103699 114.20703888]
[108.90489960 119.84220886]
[105.87946320 123.53758240]
[104.54122925 138.47776794]
[103.20299530 153.41795349]
[101.86476135 168.35813904]
[113.38307190 178.58724976]
[116.63159180 193.46342468]
[110.56928253 207.23703003]
[97.71286774 214.71034241]
[96.37463379 229.65052795]
[95.03639984 244.59071350]
[93.80941772 259.54043579]
[92.69377136 274.49890137]
[91.57812500 289.45736694]
[105.71994781 294.76635742]
[117.79238129 303.84561157]
[126.81676483 315.95913696]
[132.06152344 330.12490845]
[133.10151672 345.19458008]
[129.85240173 359.94653320]
[122.57759094 373.18487549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[17 200]
[18 199]
[19 198]
[23 194]
[24 193]
[25 192]
[26 191]
[27 188]
[28 162]
[29 161]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[37 154]
[38 153]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
