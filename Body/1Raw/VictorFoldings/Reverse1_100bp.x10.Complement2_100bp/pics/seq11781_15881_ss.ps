%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[21.16853523 212.46342468]
[24.50540161 227.09744263]
[26.55411911 241.96661377]
[27.29909515 256.95776367]
[26.73466110 271.95678711]
[24.86511230 286.84954834]
[21.70467567 301.52267456]
[17.27740669 315.86453247]
[11.61699963 329.76593018]
[4.76653433 343.12109375]
[-3.22185230 355.82839966]
[-12.28736305 367.79107666]
[-22.36100197 378.91812134]
[-33.36610031 389.12484741]
[-45.21890640 398.33355713]
[-57.82920456 406.47418213]
[-71.10102081 413.48474121]
[-84.93335724 419.31192017]
[-99.22093201 423.91134644]
[-113.85500336 427.24798584]
[-128.72419739 429.29650879]
[-143.71534729 430.04129028]
[-158.71437073 429.47662354]
[-173.60710144 427.60687256]
[-188.28019714 424.44622803]
[-202.62197876 420.01876831]
[-216.52331543 414.35815430]
[-229.87837219 407.50750732]
[-242.58555603 399.51895142]
[-254.54811096 390.45327759]
[-265.67501831 380.37945557]
[-275.88159180 369.37423706]
[-285.09011841 357.52130127]
[-293.23056030 344.91088867]
[-300.24096680 331.63894653]
[-306.06793213 317.80654907]
[-310.66714478 303.51892090]
[-314.00360107 288.88479614]
[-316.05191040 274.01556396]
[-316.79647827 259.02441406]
[-316.23162842 244.02539062]
[-314.36163330 229.13269043]
[-311.20080566 214.45964050]
[-306.77313232 200.11791992]
[-301.11233521 186.21665955]
[-294.26150513 172.86169434]
[-286.27273560 160.15463257]
[-277.20690918 148.19219971]
[-267.13296509 137.06542969]
[-256.12756348 126.85902405]
[-244.27450562 117.65064240]
[-231.66397095 109.51037598]
[-218.39195251 102.50016785]
[-204.55946350 96.67338562]
[-190.27175903 92.07437134]
[-175.63758850 88.73812103]
[-160.76834106 86.69002533]
[-145.77717590 85.94567871]
[-130.77816772 86.51074982]
[-115.88549042 88.38092041]
[-101.21248627 91.54197693]
[-86.87081909 95.96984863]
[-72.96965027 101.63084412]
[-59.61477280 108.48186493]
[-46.90782547 116.47078705]
[-34.94551849 125.53680420]
[-23.81889725 135.61091614]
[-13.61263943 146.61643982]
[-4.40442419 158.46963501]
[8.19788742 150.33441162]
[20.80019951 142.19920349]
[33.40251160 134.06398010]
[46.00482178 125.92876434]
[58.60713577 117.79354858]
[71.20944977 109.65833282]
[83.81175995 101.52311707]
[86.94588470 90.30623627]
[96.77749634 84.06278992]
[108.26244354 85.99603271]
[120.98447418 78.04934692]
[132.60174561 68.56044769]
[142.92840576 57.68111420]
[153.25508118 46.80178070]
[163.58174133 35.92244339]
[173.90841675 25.04310989]
[184.23507690 14.16377640]
[194.56175232 3.28444195]
[184.43353271 -7.78841925]
[175.11163330 -19.54813385]
[166.64245605 -31.93611717]
[159.06823730 -44.89065170]
[152.42666626 -58.34719467]
[146.75086975 -72.23870850]
[142.06910706 -86.49599457]
[138.40469360 -101.04800415]
[135.77590942 -115.82225037]
[134.19583130 -130.74513245]
[133.67234802 -145.74229431]
[134.20805359 -160.73902893]
[135.80027771 -175.66061401]
[138.44110107 -190.43270874]
[142.11735535 -204.98173523]
[146.81072998 -219.23519897]
[152.49784851 -233.12208557]
[159.15036011 -246.57321167]
[166.73513794 -259.52157593]
[175.21440125 -271.90264893]
[184.54588318 -283.65478516]
[194.68310547 -294.71939087]
[205.57557678 -305.04135132]
[217.16900635 -314.56927490]
[229.40565491 -323.25564575]
[242.22456360 -331.05725098]
[255.56184387 -337.93515015]
[269.35107422 -343.85513306]
[283.52352905 -348.78768921]
[298.00863647 -352.70825195]
[312.73422241 -355.59725952]
[327.62689209 -357.44033813]
[342.61248779 -358.22830200]
[357.61633301 -357.95724487]
[372.56369019 -356.62850952]
[387.38009644 -354.24868774]
[401.99169922 -350.82968140]
[416.32574463 -346.38845825]
[430.31079102 -340.94723511]
[443.87719727 -334.53305054]
[456.95733643 -327.17785645]
[469.48608398 -318.91833496]
[481.40097046 -309.79562378]
[492.64270020 -299.85516357]
[503.15521240 -289.14648438]
[512.88616943 -277.72293091]
[521.78710938 -265.64144897]
[529.81359863 -252.96215820]
[536.92572021 -239.74829102]
[543.08801270 -226.06564331]
[548.26983643 -211.98239136]
[552.44531250 -197.56871033]
[555.59362793 -182.89639282]
[557.69915771 -168.03854370]
[558.75140381 -153.06918335]
[558.74505615 -138.06288147]
[557.68023682 -123.09442139]
[555.56213379 -108.23834991]
[552.40142822 -93.56869507]
[548.21380615 -79.15853882]
[543.02008057 -65.07967377]
[536.84625244 -51.40223312]
[529.72296143 -38.19436646]
[521.68572998 -25.52187157]
[512.77465820 -13.44788170]
[503.03405762 -2.03255105]
[492.51248169 8.66724968]
[481.26239014 18.59821320]
[469.33978271 27.71086502]
[456.80407715 35.95980453]
[443.71771240 43.30393600]
[430.14590454 49.70667267]
[416.15628052 55.13611221]
[401.81848145 59.56520844]
[387.20397949 62.97189713]
[372.38558960 65.33920288]
[357.43713379 66.65532684]
[342.43304443 66.91372681]
[327.44812012 66.11309814]
[312.55700684 64.25744629]
[297.83389282 61.35600281]
[283.35208130 57.42322922]
[269.18380737 52.47871399]
[255.39956665 46.54709625]
[242.06809998 39.65792465]
[229.25578308 31.84552193]
[217.02647400 23.14880753]
[205.44108582 13.61111069]
[195.11441040 24.49044418]
[184.78775024 35.36977768]
[174.46107483 46.24911499]
[164.13441467 57.12844849]
[153.80773926 68.00778198]
[143.48107910 78.88711548]
[157.73423767 74.21302032]
[172.73358154 74.35430908]
[186.89616394 79.29608917]
[198.72738647 88.51683807]
[206.97866821 101.04345703]
[210.77925110 115.55399323]
[209.72801208 130.51710510]
[203.93592834 144.35371399]
[194.01423645 155.60360718]
[181.00999451 163.07954407]
[166.29556274 165.99258423]
[151.42381287 164.03529358]
[137.96418762 157.41424561]
[127.33709717 146.82817078]
[120.66406250 133.39422607]
[118.64929962 118.53015137]
[121.50543213 103.80458069]
[128.93116760 90.77138519]
[116.20912170 98.71807098]
[108.71649170 113.72595215]
[91.94697571 114.12543488]
[79.34466553 122.26065063]
[66.74234772 130.39585876]
[54.14003754 138.53108215]
[41.53772736 146.66629028]
[28.93541527 154.80151367]
[16.33310318 162.93672180]
[3.73079157 171.07194519]
[10.74155235 184.34365845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 209]
[70 208]
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
[79 200]
[80 199]
[81 181]
[82 180]
[83 179]
[84 178]
[85 177]
[86 176]
[87 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
