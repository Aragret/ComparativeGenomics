%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[89.39951324 617.98364258]
[98.99481201 606.22375488]
[112.19225311 598.72760010]
[109.96714020 583.89355469]
[107.74201965 569.05950928]
[105.51689911 554.22546387]
[95.97722626 542.78680420]
[101.58178711 527.99151611]
[99.35667419 513.15747070]
[97.13155365 498.32345581]
[94.90644073 483.48941040]
[92.68132019 468.65536499]
[90.50979614 466.88262939]
[88.90963745 464.14288330]
[88.25267029 460.64950562]
[88.82670593 456.74630737]
[90.79271698 452.87475586]
[89.45448303 437.93457031]
[88.11624908 422.99438477]
[86.22295380 408.11434937]
[83.77722931 393.31509399]
[75.11345673 405.56005859]
[60.63817978 409.49276733]
[46.96929169 403.31527710]
[40.35602951 389.85180664]
[43.82188797 375.25769043]
[55.78231812 366.20516968]
[70.76917267 366.83294678]
[81.93154907 376.85559082]
[81.03873444 361.88220215]
[80.14591980 346.90878296]
[71.66479492 334.66461182]
[78.56697845 320.42837524]
[77.67416382 305.45495605]
[76.78134918 290.48156738]
[68.66857147 303.09832764]
[55.37987900 310.05612183]
[40.38889313 309.53613281]
[27.61422539 301.67434692]
[20.39514542 288.52575684]
[20.61870003 273.52743530]
[28.22645378 260.59985352]
[41.22975922 253.12228394]
[56.22957993 253.04933167]
[69.30500031 260.40008545]
[77.03789520 273.25216675]
[78.37612915 258.31198120]
[79.71436310 243.37181091]
[72.20125580 233.89131165]
[73.19388580 221.43344116]
[82.70381927 212.72000122]
[84.26434326 197.80140686]
[85.82486725 182.88279724]
[87.05184174 167.93305969]
[87.94465637 152.95965576]
[88.83747101 137.98625183]
[86.78312683 135.12059021]
[86.01473236 131.11750793]
[87.05175018 126.59226227]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[86.65393066 78.08496857]
[95.49584961 66.09873962]
[96.83408356 51.15855026]
[98.17231750 36.21836472]
[99.39929199 21.26863289]
[100.51494598 6.31017923]
[101.63059235 -8.64827442]
[93.82060242 -18.91310883]
[95.05777740 -31.34906960]
[104.13615417 -39.34341812]
[105.47438812 -54.28360367]
[106.36720276 -69.25701141]
[106.81381226 -84.25035858]
[107.26041412 -99.24370575]
[98.15829468 -115.25098419]
[107.95682526 -129.80967712]
[108.18015289 -144.80801392]
[108.40348053 -159.80635071]
[96.78954315 -167.22978210]
[90.41083527 -179.32649231]
[90.83886719 -192.88696289]
[97.85494995 -204.37255859]
[109.53519440 -210.83892822]
[109.98179626 -225.83229065]
[97.75472260 -238.34300232]
[98.34714508 -255.48837280]
[110.90435028 -266.67565918]
[111.12767792 -281.67398071]
[111.35100555 -296.67233276]
[108.34971619 -305.29962158]
[111.69097137 -311.89187622]
[104.36798096 -325.91629028]
[112.48078918 -338.40756226]
[112.92739868 -353.40090942]
[113.03906250 -368.40048218]
[112.81573486 -383.39883423]
[112.59240723 -398.39715576]
[98.90698242 -405.25045776]
[89.98343658 -417.68542480]
[87.87234497 -432.84466553]
[93.05881500 -447.24462891]
[104.35103607 -457.57632446]
[119.15414429 -461.46563721]
[134.06648254 -458.01879883]
[145.66131592 -448.02789307]
[151.27423096 -433.78872681]
[149.61541748 -418.57336426]
[141.06605530 -405.87820435]
[127.59074402 -398.62048340]
[127.81407166 -383.62216187]
[128.03739929 -368.62380981]
[130.29919434 -365.91888428]
[131.36318970 -361.98403931]
[130.66561890 -357.39419556]
[127.92074585 -352.95428467]
[127.47414398 -337.96093750]
[134.82907104 -325.00894165]
[126.68431854 -311.44525146]
[126.34934235 -296.44900513]
[126.12601471 -281.45065308]
[125.90268707 -266.45233154]
[136.08261108 -258.55303955]
[139.91125488 -246.04609680]
[135.77658081 -233.43202209]
[124.97514343 -225.38568115]
[124.52854156 -210.39233398]
[137.83091736 -200.77339172]
[142.82876587 -184.96252441]
[137.36354065 -169.13114929]
[123.40181732 -159.58302307]
[123.17848969 -144.58468628]
[122.95516205 -129.58634949]
[131.15258789 -120.69091797]
[131.08927917 -108.19372559]
[122.25376892 -98.79710388]
[121.80715942 -83.80375671]
[121.36055756 -68.81040192]
[123.18246460 -66.67995453]
[124.27024841 -63.69946671]
[124.29591370 -60.14492798]
[123.03733826 -56.40587234]
[120.41457367 -52.94536972]
[119.07633972 -38.00518417]
[127.30709839 -22.50609970]
[116.58904266 -7.53262520]
[115.47339630 7.42582798]
[114.35774994 22.38428116]
[116.99504852 29.28836823]
[113.11250305 37.55659866]
[111.77426910 52.49678421]
[110.43603516 67.43697357]
[117.00701141 80.80377960]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.81087494 138.87907410]
[102.91806030 153.85247803]
[102.02524567 168.82588196]
[104.36306763 173.49296570]
[104.64836884 178.12673950]
[103.23756409 181.95095825]
[100.74346924 184.44331360]
[99.18294525 199.36192322]
[97.62242126 214.28053284]
[105.50877380 230.92045593]
[94.65454865 244.71003723]
[93.31631470 259.65023804]
[91.97808075 274.59042358]
[91.75475311 289.58874512]
[92.64756775 304.56216431]
[93.54038239 319.53555298]
[102.08536530 332.85073853]
[95.11932373 346.01596069]
[96.01213837 360.98937988]
[96.90496063 375.96279907]
[98.57649994 390.86935425]
[101.02222443 405.66864014]
[111.74639893 395.18090820]
[126.65045166 396.87475586]
[134.74768066 409.50152588]
[130.06910706 423.75320435]
[116.06359100 429.12402344]
[103.05643463 421.65615845]
[104.39466858 436.59634399]
[105.73290253 451.53652954]
[107.51536560 466.43023682]
[109.74048615 481.26428223]
[111.96559906 496.09832764]
[114.19071960 510.93237305]
[116.41583252 525.76641846]
[126.11466217 538.26617432]
[120.35094452 552.00036621]
[122.57606506 566.83441162]
[124.80117798 581.66845703]
[127.02629852 596.50250244]
[141.84228516 599.79663086]
[154.46563721 608.22369385]
[163.18916321 620.64398193]
[166.83305359 635.37786865]
[164.90454102 650.43261719]
[157.66441345 663.77221680]
[146.09184265 673.59259033]
[131.75192261 678.56561279]
[116.58401489 678.01879883]
[102.63945007 672.02600098]
[91.80412292 661.39770508]
[85.54341888 647.57135010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[17 188]
[18 187]
[19 186]
[20 180]
[21 179]
[29 178]
[30 177]
[31 176]
[33 174]
[34 173]
[35 172]
[46 171]
[47 170]
[48 169]
[51 167]
[52 166]
[53 165]
[54 161]
[55 160]
[56 159]
[60 158]
[61 157]
[62 155]
[64 153]
[65 152]
[66 151]
[67 149]
[68 148]
[69 147]
[72 145]
[73 144]
[74 139]
[75 138]
[76 137]
[78 134]
[79 133]
[80 132]
[85 128]
[86 127]
[89 123]
[90 122]
[91 121]
[93 120]
[95 118]
[96 117]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
