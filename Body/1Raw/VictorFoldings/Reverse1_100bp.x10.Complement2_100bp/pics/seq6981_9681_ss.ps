%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-39.85438538 636.49542236]
[-44.30556870 650.84265137]
[-50.59141159 664.48602295]
[-58.60435486 677.19226074]
[-68.20728302 688.74383545]
[-79.23587799 698.94311523]
[-91.50143433 707.61553955]
[-104.79405975 714.61279297]
[-118.88630676 719.81500244]
[-133.53703308 723.13330078]
[-148.49555969 724.51086426]
[-163.50592041 723.92407227]
[-178.31124878 721.38299561]
[-192.65823364 716.93115234]
[-206.30136108 710.64465332]
[-219.00718689 702.63110352]
[-230.55830383 693.02764893]
[-240.75704956 681.99853516]
[-249.42890930 669.73260498]
[-256.42550659 656.43963623]
[-261.62707520 642.34710693]
[-264.94467163 627.69622803]
[-266.32150269 612.73767090]
[-265.73400879 597.72735596]
[-263.19226074 582.92211914]
[-258.73971558 568.57531738]
[-252.45256042 554.93249512]
[-244.43841553 542.22705078]
[-234.83438110 530.67639160]
[-223.80480957 520.47821045]
[-211.53843689 511.80691528]
[-198.24514771 504.81097412]
[-184.15240479 499.61004639]
[-169.50135803 496.29315186]
[-154.54269409 494.91702271]
[-139.53240967 495.50521851]
[-124.72731018 498.04769897]
[-110.38075256 502.50094604]
[-104.10338593 488.87762451]
[-97.82602692 475.25430298]
[-99.52696228 460.45715332]
[-86.72454071 451.16152954]
[-80.44717407 437.53820801]
[-74.16981506 423.91488647]
[-67.89245605 410.29156494]
[-61.61509705 396.66824341]
[-55.33773422 383.04495239]
[-55.39352417 375.65447998]
[-48.86415863 369.26660156]
[-42.38466263 355.73825073]
[-43.09854126 351.01602173]
[-40.85352707 345.79519653]
[-35.50555420 341.90795898]
[-28.62614059 328.57852173]
[-21.74672699 315.24911499]
[-26.50608444 301.18197632]
[-19.71926308 287.56604004]
[-4.93209505 282.66937256]
[1.94731748 269.33993530]
[-1.43076682 257.72463989]
[4.19149590 246.56336975]
[16.28719902 242.08488464]
[23.36430359 228.85935974]
[22.54712868 213.98718262]
[35.88013840 205.47006226]
[42.95724487 192.24453735]
[50.03434753 179.01901245]
[57.11145401 165.79348755]
[64.18856049 152.56794739]
[62.67820740 135.08407593]
[78.40038300 125.49790192]
[85.27979279 112.16847229]
[80.97425842 98.33342743]
[87.61955261 85.45761871]
[101.39077759 80.95211029]
[108.07096863 67.52173615]
[114.55046844 53.99339294]
[121.02996063 40.46504593]
[127.50946045 26.93670082]
[133.98895264 13.40835476]
[132.97196960 -2.38013220]
[145.44792175 -10.51647377]
[144.43093872 -26.30496025]
[156.90689087 -34.44130325]
[163.38638306 -47.96965027]
[167.57339478 -62.37343216]
[169.35585022 -77.26715088]
[171.13832092 -92.16086578]
[163.50059509 -108.91635895]
[174.55891418 -122.54281616]
[175.67456055 -137.50126648]
[176.34436035 -152.48631287]
[177.01414490 -167.47134399]
[177.68392944 -182.45639038]
[168.82113647 -198.59739685]
[178.83534241 -213.00860596]
[179.28195190 -228.00195312]
[179.72854614 -242.99530029]
[165.63586426 -248.57849121]
[154.30470276 -258.64727783]
[147.10334778 -271.98580933]
[144.90139771 -286.98336792]
[147.96475220 -301.82897949]
[155.92350769 -314.72988892]
[167.81658936 -324.12832642]
[182.20785522 -328.88934326]
[197.35949707 -328.43801880]
[211.44186401 -322.82885742]
[222.75445557 -312.73922729]
[229.93122864 -299.38745117]
[232.10552979 -284.38583374]
[229.01481628 -269.54589844]
[221.03230286 -256.65966797]
[209.12191772 -247.28317261]
[194.72189331 -242.54869080]
[194.27529907 -227.55534363]
[193.82868958 -212.56199646]
[201.89276123 -203.54550171]
[201.64340210 -191.05062866]
[192.66896057 -181.78660583]
[191.99917603 -166.80155945]
[191.32939148 -151.81652832]
[190.65960693 -136.83148193]
[192.44958496 -134.67414856]
[193.49287415 -131.67779541]
[193.46562195 -128.12326050]
[192.15151978 -124.40336609]
[189.47752380 -120.98229218]
[196.84864807 -111.39099121]
[195.67063904 -98.94928741]
[186.03204346 -90.37840271]
[184.24957275 -75.48468018]
[182.46710205 -60.59096527]
[190.73286438 -73.10804749]
[201.92129517 -83.09899139]
[215.29032898 -89.90113068]
[229.95321655 -93.06330872]
[244.93745422 -92.37578583]
[259.24917603 -87.88416290]
[271.93914795 -79.88636017]
[282.16564941 -68.91283417]
[289.25045776 -55.69142151]
[292.72360229 -41.09905624]
[292.35476685 -26.10359192]
[288.16839600 -11.69962502]
[280.44213867 1.15748048]
[269.68847656 11.61495876]
[256.62066650 18.97920227]
[242.10543823 22.76177025]
[227.10551453 22.71177483]
[212.61581421 18.83253288]
[199.59736633 11.38134289]
[188.91366577 0.85241318]
[181.27330017 -12.05590916]
[177.18302917 -26.48746300]
[176.91471863 -41.49015427]
[170.43522644 -27.96180725]
[171.91566467 -13.14095783]
[158.97627258 -4.03697824]
[160.45671082 10.78387070]
[147.51730347 19.88784981]
[141.03781128 33.41619492]
[134.55830383 46.94454193]
[128.07881165 60.47288895]
[121.59931946 74.00123596]
[122.31319427 78.72345734]
[120.06818390 83.94427490]
[114.72020721 87.83152771]
[119.02574158 101.66657257]
[112.38044739 114.54238129]
[98.60922241 119.04788971]
[91.72981262 132.37731934]
[94.90091705 144.87959290]
[88.89662170 155.84007263]
[77.41408539 159.64506531]
[70.33698273 172.87059021]
[63.25987625 186.09611511]
[56.18276978 199.32164001]
[49.10566711 212.54716492]
[49.41664124 228.36532593]
[36.58983231 235.93646240]
[29.51272583 249.16198730]
[30.53360939 267.54785156]
[15.27674675 276.21936035]
[8.39733410 289.54876709]
[12.97258854 304.43853760]
[5.80600309 317.85845947]
[-8.41729832 322.12850952]
[-15.29671097 335.45794678]
[-22.17612267 348.78738403]
[-28.85631752 362.21774292]
[-35.33581543 375.74609375]
[-41.71442032 389.32229614]
[-47.99177933 402.94561768]
[-54.26914215 416.56893921]
[-60.54650116 430.19226074]
[-66.82386017 443.81555176]
[-73.10121918 457.43887329]
[-71.84928894 473.21047974]
[-84.20271301 481.53167725]
[-90.48007202 495.15496826]
[-96.75743103 508.77828979]
[-84.05084229 516.79064941]
[-72.49880981 526.39300537]
[-62.29901886 537.42114258]
[-53.62599564 549.68627930]
[-46.62814331 562.97857666]
[-41.42520523 577.07055664]
[-38.10621262 591.72113037]
[-36.72795868 606.67956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 202]
[39 201]
[40 200]
[42 198]
[43 197]
[44 196]
[45 195]
[46 194]
[47 193]
[49 192]
[50 191]
[53 190]
[54 189]
[55 188]
[58 185]
[59 184]
[62 182]
[63 181]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[71 172]
[72 171]
[75 168]
[76 165]
[77 164]
[78 163]
[79 162]
[80 161]
[82 159]
[84 157]
[85 156]
[86 133]
[87 132]
[88 131]
[90 128]
[91 123]
[92 122]
[93 121]
[94 120]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
