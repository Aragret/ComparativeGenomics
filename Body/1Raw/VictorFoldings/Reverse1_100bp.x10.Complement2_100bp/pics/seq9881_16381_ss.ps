%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-9.23250389 608.64929199]
[-20.19894409 618.89263916]
[-31.86062622 628.33685303]
[-44.15945053 636.93499756]
[-57.03414536 644.64416504]
[-70.42057037 651.42596436]
[-84.25202942 657.24658203]
[-98.45960999 662.07702637]
[-112.97254944 665.89324951]
[-127.71852112 668.67626953]
[-142.62408447 670.41217041]
[-157.61495972 671.09234619]
[-172.61647034 670.71331787]
[-187.55386353 669.27709961]
[-202.35275269 666.79071045]
[-216.93939209 663.26666260]
[-231.24110413 658.72247314]
[-245.18666077 653.18078613]
[-258.70654297 646.66912842]
[-271.73345947 639.22003174]
[-284.20245361 630.87060547]
[-296.05142212 621.66241455]
[-307.22134399 611.64135742]
[-317.65655518 600.85729980]
[-327.30505371 589.36407471]
[-336.11880493 577.21881104]
[-344.05389404 564.48211670]
[-351.07080078 551.21740723]
[-357.13452148 537.49078369]
[-362.21487427 523.37066650]
[-366.28652954 508.92730713]
[-369.32922363 494.23269653]
[-371.32781982 479.36010742]
[-372.27230835 464.38354492]
[-372.15802002 449.37768555]
[-370.98550415 434.41726685]
[-368.76062012 419.57681274]
[-365.49444580 404.93029785]
[-361.20324707 390.55062866]
[-355.90838623 376.50949097]
[-349.63629150 362.87683105]
[-342.41818237 349.72055054]
[-334.29000854 337.10620117]
[-325.29226685 325.09661865]
[-315.46981812 313.75167847]
[-304.87155151 303.12783813]
[-293.55029297 293.27807617]
[-281.56243896 284.25143433]
[-268.96771240 276.09289551]
[-255.82885742 268.84307861]
[-242.21133423 262.53814697]
[-228.18299866 257.20950317]
[-213.81372070 252.88366699]
[-199.17509460 249.58221436]
[-184.34005737 247.32157898]
[-169.38250732 246.11302185]
[-154.37696838 245.96257019]
[-139.39819336 246.87098694]
[-124.52080536 248.83372498]
[-109.81893158 251.84100342]
[-95.36581421 255.87786865]
[-81.23345184 260.92419434]
[-67.49225616 266.95480347]
[-54.21068573 273.93972778]
[-41.45491409 281.84408569]
[-32.67430878 269.68264771]
[-23.89370728 257.52117920]
[-25.51139069 245.53327942]
[-18.29565430 235.32951355]
[-5.66943359 232.69487000]
[3.29126239 220.66549683]
[12.25195789 208.63610840]
[21.21265411 196.60673523]
[30.17334938 184.57736206]
[39.13404465 172.54798889]
[40.53206635 157.71913147]
[54.98100281 151.27407837]
[63.94169998 139.24468994]
[72.63152313 127.01821136]
[81.04614258 114.60071564]
[89.46076202 102.18321991]
[94.91611481 88.21041870]
[97.14123535 73.37637329]
[91.53667450 58.58112717]
[101.07634735 47.14242554]
[94.05145264 36.32514191]
[96.21014404 24.01564217]
[105.85797119 16.71865463]
[108.30369568 1.91938388]
[110.74942780 -12.87988663]
[101.81590271 -25.64036942]
[104.50703430 -40.61409378]
[116.72726440 -49.05220413]
[119.17298889 -63.85147476]
[113.78932953 -78.72853088]
[123.49824524 -90.02393341]
[125.94397736 -104.82320404]
[128.38970947 -119.62247467]
[114.48613739 -125.43518829]
[102.29821014 -134.29809570]
[92.48319244 -145.73321533]
[85.57038879 -159.12388611]
[81.93261719 -173.74795532]
[81.76604462 -188.81675720]
[85.07965851 -203.51766968]
[91.69475555 -217.05787659]
[101.25459290 -228.70716858]
[113.24362946 -237.83732605]
[127.01530457 -243.95596313]
[141.82691956 -246.73312378]
[156.87971497 -246.01901245]
[171.36192322 -241.85217285]
[184.49250793 -234.45729065]
[195.56338501 -224.23316956]
[203.97747803 -211.73118591]
[209.28106689 -197.62556458]
[211.18811035 -182.67698669]
[209.59576416 -167.69161987]
[204.58992004 -153.47760010]
[196.44052124 -140.80148315]
[185.58705139 -130.34687805]
[172.61482239 -122.67756653]
[158.22343445 -118.20716095]
[143.18898010 -117.17674255]
[140.74324036 -102.37747192]
[138.29751587 -87.57820129]
[143.85612488 -73.75968933]
[133.97225952 -61.40575027]
[131.52653503 -46.60647583]
[140.38218689 -34.68536758]
[138.11270142 -19.64196014]
[125.54869843 -10.43415928]
[123.10296631 4.36511135]
[120.65724182 19.16438293]
[127.71242523 35.23271179]
[115.91039276 49.36754227]
[121.67411041 63.10176468]
[111.97528076 75.60149384]
[109.75016022 90.43553925]
[118.33103180 78.13233948]
[129.11923218 67.71050262]
[141.71144104 59.55964661]
[155.63687134 53.98450089]
[170.37492371 51.19349289]
[185.37460327 51.29096985]
[200.07514954 54.27328873]
[213.92694092 60.02894974]
[226.41215515 68.34277344]
[237.06399536 78.90394592]
[245.48423767 91.31762695]
[251.35809326 105.11972046]
[254.46597290 119.79422760]
[254.69166565 134.79252625]
[252.02673340 149.55390930]
[246.57083130 163.52648926]
[238.52790833 176.18789673]
[228.19866943 187.06478882]
[215.96928406 195.75051880]
[202.29693604 201.92036438]
[187.69277954 205.34365845]
[172.70283508 205.89242554]
[157.88746643 203.54612732]
[143.80058289 198.39251709]
[130.96882629 190.62423706]
[119.87193298 180.53172302]
[110.92475891 168.49227905]
[104.46179199 154.95603943]
[100.72467041 140.42903137]
[99.85309601 125.45436859]
[101.87825775 110.59783936]
[93.46363831 123.01533508]
[85.04901886 135.43283081]
[84.67546082 140.63931274]
[82.55425262 144.76893616]
[79.38825226 147.33631897]
[75.97107697 148.20538330]
[67.01038361 160.23477173]
[64.97143555 175.92404175]
[51.16342545 181.50868225]
[42.20272827 193.53805542]
[33.24203110 205.56742859]
[24.28133583 217.59681702]
[15.32063961 229.62619019]
[6.35994387 241.65556335]
[4.64215612 259.98944092]
[-11.73225021 266.30178833]
[-20.51285362 278.46322632]
[-29.29345703 290.62469482]
[-17.77669907 300.24514771]
[-6.96724844 310.65402222]
[3.08104062 321.79946899]
[12.31810856 333.62594604]
[20.69793510 346.07452393]
[28.17877197 359.08322144]
[34.72335052 372.58718872]
[40.29906845 386.51919556]
[44.87814331 400.80978394]
[48.43776321 415.38778687]
[50.96019363 430.18054199]
[52.43286896 445.11441040]
[52.84844971 460.11495972]
[52.20487213 475.10745239]
[50.50533676 490.01718140]
[47.75830841 504.76989746]
[43.97748184 519.29211426]
[39.18168259 533.51141357]
[33.39481354 547.35705566]
[26.64569664 560.75994873]
[18.96796036 573.65344238]
[10.39985275 585.97320557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 188]
[66 187]
[67 186]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[77 177]
[78 176]
[79 172]
[80 171]
[81 170]
[82 139]
[83 138]
[85 136]
[88 134]
[89 133]
[90 132]
[93 129]
[94 128]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
