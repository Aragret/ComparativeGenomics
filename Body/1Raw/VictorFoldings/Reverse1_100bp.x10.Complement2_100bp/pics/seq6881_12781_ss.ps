%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[73.56842804 643.14453125]
[60.62627792 650.80432129]
[46.55058289 656.10015869]
[31.76907730 658.87109375]
[16.73096275 659.03302002]
[1.89322674 656.58093262]
[-12.29322815 651.58935547]
[-25.39729118 644.21002197]
[-37.02074432 634.66717529]
[-46.81036377 623.25073242]
[-54.46865463 610.30773926]
[-59.76289368 596.23144531]
[-62.53218842 581.44958496]
[-62.69238663 566.41149902]
[-60.23862076 551.57403564]
[-55.24545288 537.38812256]
[-47.86462784 524.28491211]
[-38.32043457 512.66253662]
[-26.90291405 502.87420654]
[-13.95902824 495.21737671]
[0.11787034 489.92474365]
[14.90000153 487.15713501]
[29.93815231 486.99862671]
[32.38388062 472.19937134]
[34.82960892 457.40008545]
[37.27533722 442.60083008]
[30.48816299 432.58779907]
[32.40462112 420.23825073]
[42.53628540 412.25625610]
[45.20207977 397.49505615]
[47.86787796 382.73382568]
[50.53367233 367.97262573]
[53.19946671 353.21139526]
[55.86526489 338.45016479]
[58.42109680 323.66952515]
[52.86249924 309.85101318]
[62.74635696 297.49707031]
[57.18775940 283.67855835]
[67.07161713 271.32461548]
[69.51734161 256.52532959]
[71.96307373 241.72607422]
[74.40879822 226.92680359]
[67.35360718 210.85847473]
[79.15564728 196.72364807]
[71.86200714 180.76213074]
[83.45229340 166.45315552]
[85.45630646 151.58763123]
[87.46031952 136.72210693]
[89.46433258 121.85657501]
[91.46834564 106.99104309]
[78.13905334 113.87071991]
[64.38790131 107.87857819]
[60.35172272 93.43180084]
[69.00584412 81.18002319]
[83.97076416 80.15478516]
[94.21440125 91.11029053]
[97.31851196 76.43498993]
[100.42262268 61.75968933]
[103.52673340 47.08438492]
[106.52150726 32.38638306]
[101.58317566 17.35563087]
[111.62409973 6.35430861]
[114.06983185 -8.44496155]
[116.07384491 -23.31048965]
[118.07785797 -38.17601776]
[120.08187103 -53.04154587]
[121.97516632 -67.92158508]
[123.75762939 -82.81529999]
[125.54009247 -97.70901489]
[127.32256317 -112.60273743]
[128.77197266 -127.53253937]
[129.88763428 -142.49099731]
[131.00328064 -157.44944763]
[132.11892700 -172.40789795]
[125.42946625 -186.74533081]
[134.09194946 -198.86187744]
[135.20759583 -213.82032776]
[136.32324219 -228.77877808]
[137.43888855 -243.73722839]
[134.91690063 -249.84878540]
[135.73686218 -255.47236633]
[138.81697083 -259.12228394]
[140.37750244 -274.04089355]
[141.93801880 -288.95950317]
[127.30519104 -292.34475708]
[113.19929504 -297.50259399]
[99.83418274 -304.35482788]
[87.41244507 -312.79760742]
[76.12241364 -322.70288086]
[66.13523102 -333.92053223]
[57.60230255 -346.28051758]
[50.65298462 -359.59542847]
[45.39263153 -373.66339111]
[41.90098190 -388.27120972]
[40.23097610 -403.19738770]
[40.40792465 -418.21563721]
[42.42914581 -433.09832764]
[46.26400375 -447.61981201]
[51.85435486 -461.55996704]
[59.11545944 -474.70742798]
[67.93723297 -486.86291504]
[78.18594360 -497.84216309]
[89.70622253 -507.47866821]
[102.32343292 -515.62640381]
[115.84628296 -522.16186523]
[130.06979370 -526.98590088]
[144.77832031 -530.02545166]
[159.74888611 -531.23443604]
[174.75456238 -530.59448242]
[189.56784058 -528.11529541]
[203.96417236 -523.83447266]
[217.72529602 -517.81695557]
[230.64262390 -510.15390015]
[242.52030945 -500.96148682]
[253.17829895 -490.37908936]
[262.45501709 -478.56713867]
[270.20980835 -465.70471191]
[276.32516479 -451.98675537]
[280.70834351 -437.62127686]
[283.29290771 -422.82601929]
[284.03967285 -407.82528687]
[282.93731689 -392.84646606]
[280.00253296 -378.11669922]
[275.27984619 -363.85919189]
[268.84082031 -350.29016113]
[260.78311157 -337.61529541]
[251.22882080 -326.02670288]
[240.32281494 -315.70010376]
[228.23043823 -306.79202271]
[215.13497925 -299.43750000]
[201.23498535 -293.74807739]
[186.74116516 -289.80993652]
[171.87324524 -287.68283081]
[156.85662842 -287.39898682]
[155.29609680 -272.48037720]
[153.73558044 -257.56176758]
[152.39733887 -242.62158203]
[151.28169250 -227.66313171]
[150.16604614 -212.70468140]
[149.05039978 -197.74621582]
[155.81965637 -184.47872925]
[147.07737732 -171.29225159]
[145.96173096 -156.33380127]
[144.84608459 -141.37535095]
[143.73043823 -126.41689301]
[145.74188232 -123.52096558]
[146.45059204 -119.50688934]
[145.34631348 -114.99758148]
[142.21627808 -110.82026672]
[140.43380737 -95.92655182]
[138.65135193 -81.03283691]
[136.86888123 -66.13911438]
[139.19526672 -59.12415314]
[134.94740295 -51.03753281]
[132.94338989 -36.17200470]
[130.93937683 -21.30647659]
[128.93536377 -6.44094849]
[130.52574158 -4.13252163]
[131.29754639 -1.05503464]
[130.95327759 2.48288608]
[129.31253052 6.07071352]
[126.34399414 9.23958111]
[131.48869324 23.21746635]
[121.24140167 35.27165604]
[123.03959656 42.44021606]
[118.20203400 50.18849564]
[115.09792328 64.86380005]
[111.99382019 79.53910065]
[108.88970947 94.21440125]
[106.33387756 108.99505615]
[104.32985687 123.86058807]
[102.32584381 138.72612000]
[100.32183075 153.59164429]
[98.31781769 168.45716858]
[105.50299072 179.16867065]
[103.52780914 191.50894165]
[93.98969269 198.94876099]
[101.01458740 209.76603699]
[98.85589600 222.07554626]
[89.20806885 229.37252808]
[86.76234436 244.17179871]
[84.31661224 258.97106934]
[81.87088776 273.77035522]
[87.25454712 288.64739990]
[77.54562378 299.94281006]
[82.92929077 314.81985474]
[73.22036743 326.11526489]
[74.90867615 335.09231567]
[70.62648010 341.11596680]
[67.96068573 355.87719727]
[65.29489136 370.63839722]
[62.62909317 385.39962769]
[59.96329880 400.16085815]
[57.29750443 414.92205811]
[63.92438889 432.10244751]
[52.07460785 445.04653931]
[49.62887955 459.84582520]
[47.18315125 474.64508057]
[44.73742294 489.44436646]
[58.92501068 494.43270874]
[72.03074646 501.80908203]
[83.65636444 511.34930420]
[93.44857025 522.76348877]
[101.10980225 535.70477295]
[106.40722656 549.77984619]
[109.17987823 564.56103516]
[109.34349060 579.59918213]
[106.89308929 594.43719482]
[101.90313721 608.62420654]
[94.52528381 621.72906494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 187]
[37 185]
[39 183]
[40 182]
[41 181]
[42 180]
[44 177]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[56 169]
[57 168]
[58 167]
[59 166]
[60 164]
[62 162]
[63 157]
[64 156]
[65 155]
[66 154]
[67 152]
[68 151]
[69 150]
[70 149]
[71 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 139]
[78 138]
[79 137]
[82 136]
[83 135]
[84 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
