%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[116.28999329 641.45581055]
[101.70048523 645.56945801]
[86.58411407 644.44201660]
[72.76625061 638.20965576]
[61.91546631 627.62493896]
[55.34205246 613.96600342]
[53.83977509 598.88226318]
[57.59004211 584.19519043]
[66.13999176 571.67822266]
[78.45717621 562.84289551]
[93.05423737 558.75616455]
[94.16988373 543.79766846]
[95.28553772 528.83923340]
[96.40118408 513.88079834]
[82.26172638 508.97921753]
[69.86336517 500.57818604]
[60.05462265 489.24536133]
[53.50867462 475.74932861]
[50.67713547 461.00744629]
[51.75891876 446.02349854]
[56.68627930 431.81930542]
[65.12900543 419.36511230]
[76.51655579 409.51324463]
[90.07660675 402.93978882]
[104.88744354 400.09823608]
[106.00309753 385.13980103]
[107.11874390 370.18133545]
[108.23439026 355.22286987]
[108.12272644 340.22329712]
[99.28080750 328.23706055]
[105.75606537 313.80163574]
[104.41783142 298.86145020]
[103.07959747 283.92126465]
[101.74136353 268.98107910]
[100.40312195 254.04089355]
[89.91973877 250.22654724]
[81.57881927 242.74140930]
[76.61095428 232.63838196]
[75.76820374 221.36015320]
[79.21051025 210.53321838]
[86.47705078 201.73333740]
[96.54756165 196.25619507]
[95.87777710 181.27116394]
[95.20799255 166.28611755]
[94.53820801 151.30108643]
[86.24031830 138.93199158]
[93.35369110 124.80010223]
[92.68390656 109.81506348]
[86.27854919 123.37866211]
[76.04116058 134.34205627]
[62.94750595 141.66026306]
[48.24559021 144.63577271]
[33.33670425 142.98497009]
[19.64186859 136.86520386]
[8.46638966 126.85977936]
[0.87544161 113.92233276]
[-2.40745521 99.28598785]
[-1.06939554 84.34578705]
[4.76208496 70.52573395]
[14.53116703 59.14307022]
[27.30672455 51.28271866]
[41.87107086 47.69387817]
[56.83602905 48.71860886]
[70.77523041 54.25924683]
[82.36007690 63.78768921]
[90.48638916 76.39575195]
[94.37972260 90.88283539]
[97.70198059 76.25537109]
[101.02423859 61.62791061]
[104.34649658 47.00045013]
[99.85787964 31.82933235]
[110.22190094 21.13184166]
[113.54416656 6.50438213]
[116.86642456 -8.12307835]
[120.18868256 -22.75053787]
[115.70006561 -37.92165756]
[126.06408691 -48.61914825]
[129.38635254 -63.24660873]
[132.70860291 -77.87406921]
[136.03086853 -92.50152588]
[139.35311890 -107.12899017]
[142.67538452 -121.75644684]
[129.43891907 -114.69981384]
[115.04997253 -118.93751526]
[107.75117493 -132.04200745]
[111.72361755 -146.50643921]
[124.69170380 -154.04492188]
[139.22671509 -150.33908081]
[147.00221252 -137.51272583]
[151.61621094 -151.78546143]
[156.23022461 -166.05818176]
[160.84423828 -180.33091736]
[165.24523926 -194.67077637]
[169.43225098 -209.07455444]
[173.61924744 -223.47833252]
[170.04159546 -238.88972473]
[181.02397156 -248.95137024]
[177.44630432 -264.36276245]
[188.42868042 -274.42440796]
[192.61569214 -288.82818604]
[179.30061340 -295.84912109]
[167.67161560 -305.40692139]
[158.20491028 -317.11016846]
[151.28814697 -330.47967529]
[147.20455933 -344.96789551]
[146.12135315 -359.98162842]
[148.08291626 -374.90600586]
[153.00891113 -389.12991333]
[160.69761658 -402.07086182]
[170.83418274 -413.19897461]
[183.00354004 -422.05853271]
[196.70733643 -428.28677368]
[211.38442993 -431.62860107]
[226.43379211 -431.94720459]
[241.23916626 -429.22952271]
[255.19429016 -423.58685303]
[267.72769165 -415.25027466]
[278.32614136 -404.56112671]
[286.55563354 -391.95715332]
[292.07919312 -377.95446777]
[294.67065430 -363.12649536]
[294.22381592 -348.08038330]
[290.75708008 -333.43228149]
[284.41232300 -319.78204346]
[275.44940186 -307.68862915]
[264.23532104 -297.64724731]
[251.22932434 -290.06906128]
[236.96397400 -285.26443481]
[222.02342224 -283.43011475]
[207.01947021 -284.64117432]
[202.83245850 -270.23739624]
[206.70960999 -255.85626221]
[195.42774963 -244.76435852]
[199.30490112 -230.38322449]
[188.02304077 -219.29132080]
[183.83602905 -204.88754272]
[179.64901733 -190.48376465]
[181.12329102 -185.94111633]
[179.75956726 -180.42411804]
[175.11697388 -175.71691895]
[170.50296021 -161.44418335]
[165.88894653 -147.17144775]
[161.27493286 -132.89871216]
[157.30284119 -118.43418884]
[153.98059082 -103.80673218]
[150.65832520 -89.17926788]
[147.33605957 -74.55181122]
[144.01380920 -59.92434692]
[140.69154358 -45.29688644]
[145.41780090 -31.17202187]
[134.81614685 -19.42827797]
[131.49388123 -4.80081844]
[128.17163086 9.82664108]
[124.84936523 24.45410156]
[129.57560730 38.57896805]
[118.97396088 50.32271194]
[115.65170288 64.95017242]
[112.32944489 79.57762909]
[109.00717926 94.20509338]
[107.66894531 109.14527893]
[108.33872986 124.13031769]
[116.68452454 137.57122803]
[109.52324677 150.63130188]
[110.19303131 165.61633301]
[110.86281586 180.60137939]
[111.53260040 195.58641052]
[127.93764496 205.44593811]
[135.02964783 223.06164551]
[130.11073303 241.24771118]
[115.34330750 252.70266724]
[116.68154144 267.64285278]
[118.01977539 282.58303833]
[119.35800934 297.52322388]
[120.69625092 312.46340942]
[129.63388062 325.51824951]
[123.06291199 338.88507080]
[130.38188171 325.79183960]
[142.89660645 317.52249146]
[157.81123352 315.92443848]
[171.79380798 321.35467529]
[181.72059631 332.60006714]
[185.37391663 347.14837646]
[181.93762207 361.74948120]
[172.17936707 373.14141846]
[158.27919006 378.77923584]
[143.34242249 377.40344238]
[130.70596313 369.32135010]
[123.19284821 356.33853149]
[122.07719421 371.29699707]
[120.96154785 386.25543213]
[119.84590149 401.21389771]
[134.07135010 406.22103882]
[146.50627136 414.73327637]
[156.30639648 426.16540527]
[162.80824280 439.73422241]
[165.57402039 454.51217651]
[164.42109680 469.49084473]
[159.43406677 483.64956665]
[150.95851135 496.02526855]
[139.57716370 505.77767944]
[126.06976318 512.24658203]
[111.35963440 514.99639893]
[110.24398804 529.95489502]
[109.12834167 544.91333008]
[108.01269531 559.87176514]
[121.84201813 566.07867432]
[132.71229553 576.64337158]
[139.31086731 590.29016113]
[140.84094238 605.37109375]
[137.11775208 620.06512451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 205]
[12 204]
[13 203]
[14 202]
[25 191]
[26 190]
[27 189]
[28 188]
[29 176]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[42 166]
[43 165]
[44 164]
[45 163]
[47 161]
[48 160]
[67 159]
[68 158]
[69 157]
[70 156]
[72 154]
[73 153]
[74 152]
[75 151]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 137]
[94 136]
[95 135]
[97 133]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
