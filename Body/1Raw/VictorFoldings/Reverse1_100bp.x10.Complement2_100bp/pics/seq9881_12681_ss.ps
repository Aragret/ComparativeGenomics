%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-5.31833506 433.14550781]
[-2.37582707 447.87939453]
[-1.51259482 462.87942505]
[-2.74544144 477.85360718]
[-6.05036926 492.51046753]
[-11.36304665 506.56472778]
[-18.58006096 519.74273682]
[-27.56093025 531.78808594]
[-38.13084030 542.46624756]
[-50.08404541 551.56939697]
[-63.18787003 558.92028809]
[-77.18724823 564.37591553]
[-91.80967712 567.83001709]
[-106.77052307 569.21533203]
[-121.77857208 568.50500488]
[-136.54168701 565.71276855]
[-150.77250671 560.89300537]
[-164.19400024 554.13952637]
[-176.54495239 545.58380127]
[-187.58491516 535.39239502]
[-197.09899902 523.76361084]
[-204.90202332 510.92385864]
[-210.84208679 497.12307739]
[-214.80357361 482.62988281]
[-216.70936584 467.72640991]
[-216.52236938 452.70269775]
[-214.24623108 437.85125732]
[-209.92524719 423.46115112]
[-203.64352417 409.81250000]
[-195.52333069 397.17095947]
[-185.72274780 385.78259277]
[-174.43255615 375.86907959]
[-161.87248230 367.62344360]
[-148.28704834 361.20611572]
[-133.94067383 356.74203491]
[-119.11264038 354.31811523]
[-104.09156036 353.98153687]
[-89.16983032 355.73883057]
[-74.63790131 359.55578613]
[-60.77865219 365.35815430]
[-53.11805344 352.46182251]
[-45.45745850 339.56549072]
[-37.79685974 326.66915894]
[-52.75529099 327.78512573]
[-63.06567383 316.89035034]
[-61.12757492 302.01608276]
[-48.36968994 294.12707520]
[-34.19665909 299.03881836]
[-29.05615425 313.12890625]
[-20.45759010 300.83804321]
[-11.85902691 288.54721069]
[-17.36320877 276.38391113]
[-16.12855721 262.98168945]
[-8.37107372 251.85104370]
[3.97072029 245.96047974]
[17.71922112 246.94514465]
[26.49982452 234.78369141]
[35.28042603 222.62223816]
[44.06103134 210.46076965]
[45.23811722 195.61274719]
[59.58949661 188.95329285]
[68.37010193 176.79182434]
[74.84959412 163.26348877]
[78.82169342 148.79896545]
[82.79378510 134.33444214]
[86.76588440 119.86991119]
[90.73797607 105.40538788]
[92.52044678 90.51167297]
[92.07383728 75.51831818]
[82.03507996 60.08119583]
[90.94969940 44.96509171]
[90.27991486 29.98005486]
[89.61012268 14.99501514]
[88.94033813 0.00997661]
[76.90514374 -6.70901108]
[69.81773376 -18.40461349]
[69.43787384 -31.96652031]
[75.75788116 -43.84934998]
[87.03253174 -50.99948883]
[86.58592224 -65.99283600]
[86.13932037 -80.98619080]
[85.58110809 -95.97579956]
[84.91132355 -110.96083832]
[84.24153900 -125.94587708]
[75.89574432 -139.38679504]
[83.05702209 -152.44685364]
[82.38723755 -167.43190002]
[81.71745300 -182.41693115]
[81.04766846 -197.40197754]
[70.15236664 -187.09214783]
[55.15491104 -187.36828613]
[44.64651871 -198.07220459]
[44.64687729 -213.07220459]
[55.15578079 -223.77560425]
[70.15325165 -224.05102539]
[81.04766846 -213.74154663]
[81.71745300 -228.72659302]
[82.38723755 -243.71162415]
[68.29177856 -249.24305725]
[56.75772476 -259.05346680]
[49.03619766 -272.07870483]
[45.96477509 -286.90588379]
[47.87662125 -301.92666626]
[54.56435394 -315.51168823]
[65.30253601 -326.18737793]
[78.92636871 -332.79568481]
[93.95804596 -334.61981201]
[108.76703644 -331.46191406]
[121.74697876 -323.66448975]
[131.48989868 -312.07336426]
[136.93896484 -297.94586182]
[137.50309753 -282.81442261]
[133.12110901 -268.32037354]
[124.26831818 -256.03594971]
[111.90501404 -247.29368591]
[97.37227631 -243.04183960]
[96.70249176 -228.05679321]
[96.03270721 -213.07176208]
[96.03270721 -198.07176208]
[96.70249176 -183.08671570]
[97.37227631 -168.10168457]
[98.04206085 -153.11663818]
[106.33995056 -140.74755859]
[99.22657776 -126.61566162]
[99.89636230 -111.63062286]
[100.56614685 -96.64558411]
[104.00518036 -90.10380554]
[101.13266754 -81.43279266]
[101.57926941 -66.43944550]
[102.02587891 -51.44609451]
[115.87720490 -42.63597488]
[121.80726624 -27.15062332]
[117.29402924 -11.02201748]
[103.92537689 -0.65980852]
[104.59516144 14.32523060]
[105.26495361 29.31026840]
[105.93473816 44.29530716]
[114.64709473 52.68705368]
[115.32774353 65.16585541]
[107.06719208 75.07171631]
[107.51379395 90.06506348]
[113.94472504 76.51356506]
[123.89000702 65.28452301]
[136.56530762 57.26350784]
[150.97100830 53.08308411]
[165.97100830 53.07294464]
[180.38233948 57.23388290]
[193.06846619 65.23775482]
[203.02893066 76.45333862]
[209.47817993 89.99613190]
[211.90760803 104.79808044]
[210.12562561 119.69185638]
[204.27276611 133.50286865]
[194.81060791 145.14192200]
[182.48536682 153.69111633]
[168.26908875 158.47621155]
[153.28289795 159.11985779]
[138.70869446 155.57127380]
[125.69583893 148.11033630]
[115.27059174 137.32542419]
[108.25513458 124.06709290]
[105.20249939 109.37748718]
[101.23040771 123.84201050]
[97.25830841 138.30653381]
[93.28621674 152.77105713]
[89.31411743 167.23558044]
[99.29183960 156.03535461]
[111.63207245 147.50782776]
[125.63692474 142.13528442]
[140.51434326 140.22157288]
[155.42294312 141.87490845]
[169.51957703 147.00178528]
[182.00700378 155.31227112]
[192.17900085 166.33636475]
[199.46029663 179.45057678]
[203.43910217 193.91326904]
[203.89038086 208.90647888]
[200.78862000 223.58227539]
[194.30923462 237.11067200]
[184.81867981 248.72657776]
[172.85366821 257.77304077]
[159.09091187 263.73846436]
[144.30873108 266.28546143]
[129.34313965 265.26998901]
[115.04051971 260.74948120]
[102.20975494 252.97956848]
[91.57647705 242.39971924]
[83.74205780 229.60823059]
[79.14956665 215.32856750]
[78.05873108 200.36828613]
[80.53155518 185.57243347]
[71.75095367 197.73388672]
[69.94581604 213.45178223]
[56.22248840 219.24137878]
[47.44188309 231.40283203]
[38.66128159 243.56428528]
[29.88067627 255.72573853]
[35.37353897 271.72338867]
[30.29908562 287.68432617]
[16.84593391 297.37835693]
[0.43181112 297.14578247]
[-8.16675282 309.43661499]
[-16.76531601 321.72744751]
[-24.90053177 334.32977295]
[-32.56113052 347.22610474]
[-40.22172928 360.12240601]
[-47.88232422 373.01873779]
[-36.15722275 382.41384888]
[-25.85383415 393.34942627]
[-17.17271233 405.61254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 207]
[41 206]
[42 205]
[43 204]
[49 203]
[50 202]
[51 201]
[56 197]
[57 196]
[58 195]
[59 194]
[61 192]
[62 191]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 141]
[69 140]
[71 137]
[72 136]
[73 135]
[74 134]
[79 130]
[80 129]
[81 128]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[89 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
