%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[60.07373810 434.44152832]
[54.99113083 448.63415527]
[46.65911484 461.19763184]
[35.56209946 471.40155029]
[22.34525299 478.65261841]
[7.77697992 482.52932739]
[-7.29573488 482.80627441]
[-21.99658585 479.46734619]
[-35.47088242 472.70666504]
[-46.93524933 462.91729736]
[-55.72315979 450.66839600]
[-61.32369995 436.67205811]
[-63.41125870 421.74203491]
[-61.86447144 406.74633789]
[-56.77326584 392.55679321]
[-48.43363190 379.99838257]
[-37.33043289 369.80120850]
[-24.10918999 362.55810547]
[-9.53857040 358.69024658]
[5.53430939 358.42242432]
[8.85656929 343.79498291]
[12.17882824 329.16751099]
[15.50108814 314.54006958]
[10.77483749 300.41519165]
[21.37649155 288.67144775]
[24.69875145 274.04397583]
[10.80883598 279.70706177]
[-2.35289073 272.51199341]
[-5.08409405 257.76272583]
[4.62856770 246.33187866]
[19.62528229 246.64584351]
[28.85066986 258.47155762]
[33.25166702 244.13171387]
[37.65266418 229.79185486]
[36.33257675 226.52235413]
[36.53051758 222.45100403]
[38.60610962 218.29826355]
[42.58361816 214.91795349]
[47.62053299 200.78892517]
[52.65745163 186.65989685]
[57.69436646 172.53086853]
[62.73128128 158.40184021]
[67.76819611 144.27281189]
[55.87802505 153.41740417]
[41.21567535 156.58212280]
[26.61221504 153.15591431]
[14.88734818 143.80029297]
[8.30496120 130.32171631]
[8.13600922 115.32266235]
[14.41311550 101.69923401]
[25.92426872 92.08188629]
[40.44684601 88.32758331]
[55.17676163 91.16122437]
[67.26990509 100.03567505]
[74.39127350 113.23741913]
[75.16563416 128.21867371]
[82.63337708 115.20971680]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[105.43872070 76.15857697]
[113.09931946 63.26225281]
[120.75991821 50.36592484]
[128.42051697 37.46960068]
[114.62680054 43.36312103]
[99.72284698 41.66837311]
[87.60450745 32.82835770]
[81.43949127 19.15383720]
[82.83930969 4.21929693]
[91.43805695 -8.07141113]
[104.98804474 -14.50552464]
[119.94734192 -13.40118217]
[132.40560913 -5.04705524]
[139.10630798 8.37310600]
[138.29814148 23.35046005]
[147.78703308 11.73319721]
[157.27593994 0.11593358]
[166.76483154 -11.50132942]
[169.50231934 -27.08390999]
[183.54591370 -32.04641724]
[183.03068542 -44.93429184]
[191.17317200 -54.41498947]
[203.19456482 -55.76140213]
[212.85537720 -67.23610687]
[222.51617432 -78.71080017]
[232.17698669 -90.18550110]
[229.48814392 -103.38340759]
[234.81375122 -115.54270935]
[246.00430298 -122.31423950]
[258.85830688 -121.41750336]
[268.68887329 -132.74708557]
[278.51947021 -144.07669067]
[288.35003662 -155.40628052]
[291.42669678 -173.56159973]
[308.22521973 -178.63859558]
[317.88604736 -190.11329651]
[327.54684448 -201.58799744]
[337.20767212 -213.06269836]
[326.74264526 -223.82662964]
[317.40139771 -235.57907104]
[309.27676392 -248.20320129]
[302.44946289 -261.57357788]
[296.98739624 -275.55728149]
[292.94479370 -290.01535034]
[290.36184692 -304.80410767]
[289.26425171 -319.77655029]
[289.66290283 -334.78387451]
[291.55383301 -349.67691040]
[294.91827393 -364.30767822]
[299.72274780 -378.53073120]
[305.91955566 -392.20474243]
[313.44705200 -405.19378662]
[322.23046875 -417.36877441]
[332.18246460 -428.60870361]
[343.20416260 -438.80187988]
[355.18603516 -447.84695435]
[368.00897217 -455.65408325]
[381.54553223 -462.14562988]
[395.66116333 -467.25711060]
[410.21560669 -470.93768311]
[425.06420898 -473.15081787]
[440.05935669 -473.87448120]
[455.05206299 -473.10147095]
[469.89331055 -470.83950806]
[484.43554688 -467.11108398]
[498.53430176 -461.95318604]
[512.04943848 -455.41714478]
[524.84661865 -447.56787109]
[536.79864502 -438.48339844]
[547.78674316 -428.25402832]
[557.70172119 -416.98141479]
[566.44506836 -404.77761841]
[573.92974854 -391.76385498]
[580.08154297 -378.06954956]
[584.83917236 -363.83074951]
[588.15545654 -349.18899536]
[589.99743652 -334.28979492]
[590.34667969 -319.28125000]
[589.19982910 -304.31250000]
[586.56823730 -289.53234863]
[582.47808838 -275.08764648]
[576.97003174 -261.12197876]
[570.09881592 -247.77413940]
[561.93267822 -235.17680359]
[552.55279541 -223.45516968]
[542.05242920 -212.72572327]
[530.53594971 -203.09510803]
[518.11773682 -194.65904236]
[504.92129517 -187.50135803]
[491.07775879 -181.69320679]
[476.72467041 -177.29231262]
[462.00473022 -174.34240723]
[447.06423950 -172.87281799]
[432.05163574 -172.89814758]
[417.11614990 -174.41813660]
[402.40625000 -177.41767883]
[388.06811523 -181.86697388]
[374.24423218 -187.72180176]
[361.07202148 -194.92396545]
[348.68237305 -203.40188599]
[339.02154541 -191.92718506]
[329.36074829 -180.45248413]
[319.69992065 -168.97778320]
[320.42150879 -156.90277100]
[312.46682739 -147.26394653]
[299.67962646 -145.57569885]
[289.84906006 -134.24610901]
[280.01846313 -122.91651154]
[270.18789673 -111.58692169]
[272.09204102 -94.87725067]
[261.10549927 -81.70109558]
[243.65168762 -80.52469635]
[233.99087524 -69.04999542]
[224.33006287 -57.57529449]
[214.66926575 -46.10059357]
[212.52879333 -28.68263245]
[195.16317749 -22.55751801]
[193.10441589 -7.80588341]
[178.38209534 -2.01243138]
[168.89320374 9.60483170]
[159.40429688 21.22209549]
[149.91540527 32.83935928]
[141.31683350 45.13019562]
[133.65625000 58.02652359]
[125.99564362 70.92285156]
[118.33504486 83.81917572]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[95.64233398 122.67745209]
[88.17459106 135.68640137]
[81.89723206 149.30972290]
[76.86031342 163.43875122]
[71.82339478 177.56777954]
[66.78647614 191.69680786]
[61.74956512 205.82583618]
[56.71264648 219.95486450]
[51.99251175 234.19285583]
[47.59151459 248.53271484]
[43.19051743 262.87255859]
[39.32621002 277.36624146]
[36.00395203 291.99371338]
[40.49257278 307.16482544]
[30.12854767 317.86230469]
[26.80628967 332.48977661]
[23.48402977 347.11724854]
[20.16176987 361.74468994]
[33.64016342 368.49719238]
[45.11046219 378.27963257]
[53.90579987 390.52322388]
[59.51482391 404.51614380]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 206]
[21 205]
[22 204]
[23 203]
[25 201]
[26 200]
[32 199]
[33 198]
[34 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[56 190]
[57 189]
[58 188]
[60 187]
[61 186]
[62 185]
[63 184]
[64 183]
[75 182]
[76 181]
[77 180]
[78 179]
[80 177]
[83 175]
[84 174]
[85 173]
[86 172]
[90 169]
[91 168]
[92 167]
[93 166]
[95 163]
[96 162]
[97 161]
[98 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
