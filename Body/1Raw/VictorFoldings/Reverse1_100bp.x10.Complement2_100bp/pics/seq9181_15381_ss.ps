%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[189.82646179 447.87771606]
[190.46812439 432.87600708]
[192.75624084 418.03591919]
[196.66302490 403.53765869]
[202.14106750 389.55715942]
[209.12384033 376.26412964]
[217.52661133 363.82000732]
[227.24736023 352.37576294]
[238.16807556 342.07040405]
[250.15621948 333.02896118]
[242.49562073 320.13262939]
[234.83502197 307.23629761]
[227.17443848 294.33996582]
[219.51383972 281.44363403]
[211.85324097 268.54730225]
[198.70115662 261.55645752]
[198.30549622 245.74020386]
[190.64489746 232.84388733]
[182.41609192 220.30249023]
[173.63548279 208.14102173]
[164.85488892 195.97956848]
[155.98399353 183.88381958]
[147.02330017 171.85444641]
[138.06260681 159.82505798]
[128.83549500 147.99879456]
[119.34660339 136.38153076]
[109.85770416 124.76426697]
[100.36880493 113.14700317]
[103.74658203 127.76174164]
[103.83345032 142.76148987]
[100.62519073 157.41438293]
[94.27832794 171.00544739]
[85.10253906 182.87158203]
[73.54553986 192.43377686]
[60.17121506 199.22549438]
[45.63212967 202.91535950]
[30.63767815 203.32330322]
[15.91947269 200.42944336]
[2.19564700 194.37496948]
[-9.86418247 185.45530701]
[-19.67159081 174.10563660]
[-26.74805069 160.87977600]
[-30.74828911 146.42300415]
[-31.47712326 131.44071960]
[-28.89899254 116.66394043]
[-23.13969040 102.81365204]
[-14.48022461 90.56564331]
[-3.34310985 80.51752472]
[9.72824860 73.15956879]
[24.09607124 68.85077667]
[39.05931854 67.80139160]
[53.88790131 70.06260681]
[67.85829926 75.52410126]
[80.28887177 83.91939545]
[90.56911469 94.83358002]
[86.16812134 80.49372864]
[74.72236633 69.57102966]
[78.38497162 55.13376236]
[66.93922424 44.21106339]
[70.60182190 29.77379608]
[66.20082092 15.43394947]
[61.79982376 1.09410214]
[57.39882660 -13.24574471]
[52.99782944 -27.58559227]
[48.59683228 -41.92543793]
[43.66523743 -56.09157562]
[38.20988083 -70.06436920]
[32.54709244 -83.95439911]
[26.67813301 -97.75857544]
[20.80917168 -111.56275177]
[14.94021130 -125.36692810]
[0.40274414 -121.56168365]
[-14.53386116 -119.91375732]
[-29.55122948 -120.45826721]
[-44.32926559 -123.18360901]
[-58.55297470 -128.03170776]
[-71.91917419 -134.89920044]
[-84.14296722 -143.63972473]
[-94.96380615 -154.06695557]
[-104.15103149 -165.95866394]
[-111.50882721 -179.06137085]
[-116.88036346 -193.09576416]
[-120.15113831 -207.76274109]
[-121.25143433 -222.74963379]
[-120.15780640 -237.73703003]
[-116.89355469 -252.40544128]
[-111.52827454 -266.44223022]
[-104.17630768 -279.54821777]
[-94.99436951 -291.44400024]
[-84.17817688 -301.87606812]
[-71.95827484 -310.62200928]
[-58.59512711 -317.49545288]
[-44.37357712 -322.34988403]
[-29.59675789 -325.08181763]
[-14.57963181 -325.63299561]
[0.35770506 -323.99172974]
[14.89686394 -320.19293213]
[28.72794342 -314.31762695]
[41.55612946 -306.49105835]
[53.10799026 -296.88000488]
[63.13729858 -285.68933105]
[71.43028259 -273.15762329]
[77.81016541 -259.55191040]
[82.14096832 -245.16226196]
[84.33038330 -230.29537964]
[84.33172607 -215.26814270]
[82.14498901 -200.40086365]
[77.81677246 -186.01043701]
[71.43933105 -172.40359497]
[63.14860153 -159.87037659]
[53.12130356 -148.67791748]
[41.57117081 -139.06478882]
[28.74438858 -131.23588562]
[34.61334991 -117.43171692]
[40.48231125 -103.62754059]
[46.35127258 -89.82335663]
[50.36671829 -87.23777771]
[52.80054855 -82.10226440]
[52.18267822 -75.51972961]
[57.63803482 -61.54693222]
[65.95973206 -74.02688599]
[80.89169312 -75.45397186]
[91.42662811 -64.77618408]
[89.79858398 -49.86479950]
[77.20767975 -41.71192932]
[62.93667984 -46.32643890]
[67.33767700 -31.98658943]
[71.73867798 -17.64674377]
[76.13967133 -3.30689597]
[80.54067230 11.03295135]
[84.94166565 25.37279892]
[96.07263184 35.26981735]
[92.72481537 50.73276520]
[103.85577393 60.62978363]
[100.50796509 76.09272766]
[104.90896606 90.43257904]
[111.98606873 103.65810394]
[121.47496796 115.27536774]
[130.96386719 126.89263153]
[140.45275879 138.50990295]
[145.33441162 140.35830688]
[148.68394470 143.57293701]
[150.23753357 147.34141541]
[150.09197998 150.86436462]
[159.05267334 162.89375305]
[168.01336670 174.92312622]
[175.64952087 179.93580627]
[177.01634216 187.19897461]
[185.79695129 199.36042786]
[194.57754517 211.52188110]
[198.03120422 196.92488098]
[210.72195435 188.92834473]
[225.37998962 192.11305237]
[233.60848999 204.65464783]
[230.69381714 219.36874390]
[218.30561829 227.82643127]
[203.54122925 225.18328857]
[211.20182800 238.07960510]
[224.90184021 245.99288940]
[224.74955750 260.88671875]
[232.41015625 273.78305054]
[240.07075500 286.67938232]
[247.73135376 299.57571411]
[255.39195251 312.47201538]
[263.05255127 325.36834717]
[276.72705078 319.16583252]
[291.00088501 314.50527954]
[305.70080566 311.44329834]
[320.64834595 310.01702881]
[335.66204834 310.24380493]
[350.55969238 312.12088013]
[365.16043091 315.62545776]
[379.28701782 320.71496582]
[392.76794434 327.32766724]
[405.43957520 335.38327026]
[417.14810181 344.78396606]
[427.75140381 355.41567993]
[437.12072754 367.14935303]
[445.14239502 379.84249878]
[451.71896362 393.34109497]
[456.77066040 407.48123169]
[460.23611450 422.09130859]
[462.07330322 436.99389648]
[462.25988770 452.00817871]
[460.79360962 466.95184326]
[457.69226074 481.64352417]
[452.99353027 495.90481567]
[446.75442505 509.56268311]
[439.05068970 522.45123291]
[429.97583008 534.41412354]
[419.64001465 545.30603027]
[408.16870117 554.99481201]
[395.70117188 563.36285400]
[382.38873291 570.30847168]
[368.39300537 575.74749756]
[353.88388062 579.61383057]
[339.03747559 581.86047363]
[324.03402710 582.46032715]
[309.05566406 581.40594482]
[294.28417969 578.71020508]
[279.89892578 574.40582275]
[266.07452393 568.54498291]
[252.97877502 561.19897461]
[240.77064514 552.45684814]
[229.59832764 542.42474365]
[219.59747314 531.22448730]
[210.88943481 518.99200439]
[203.57997131 505.87582397]
[197.75778198 492.03509521]
[193.49354553 477.63790894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[15 160]
[17 158]
[18 157]
[19 150]
[20 149]
[21 148]
[22 146]
[23 145]
[24 144]
[25 140]
[26 139]
[27 138]
[28 137]
[55 136]
[56 135]
[58 133]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 120]
[67 119]
[68 116]
[69 115]
[70 114]
[71 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
