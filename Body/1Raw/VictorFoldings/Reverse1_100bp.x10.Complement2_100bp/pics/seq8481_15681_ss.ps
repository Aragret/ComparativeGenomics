%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[216.08180237 285.45046997]
[206.42098999 273.97576904]
[196.76017761 262.50106812]
[194.40176392 277.31451416]
[182.34091187 286.23278809]
[167.48661804 284.14712524]
[158.34809875 272.25225830]
[160.16032410 257.36215210]
[171.88514709 248.00648499]
[186.80523682 249.54418945]
[178.20668030 237.25334167]
[169.60810852 224.96250916]
[161.00955200 212.67167664]
[152.41098022 200.38082886]
[143.81242371 188.08999634]
[139.34883118 186.39134216]
[135.90493774 181.87065125]
[135.14723206 175.30274963]
[126.91842651 162.76133728]
[121.35948181 176.69325256]
[107.04606628 181.17947388]
[94.52950287 172.91293335]
[93.03653717 157.98741150]
[103.66773224 147.40545654]
[118.58474731 148.96682739]
[111.31151581 135.84812927]
[104.03828430 122.72943115]
[96.76506042 109.61074066]
[90.41305542 104.64842224]
[89.48285675 96.24214172]
[82.40575409 83.01661682]
[77.97080994 80.26372528]
[75.30216217 76.46482849]
[74.50245667 72.46789551]
[75.32294464 69.03872681]
[68.84344482 55.51038361]
[62.36394882 41.98204041]
[55.88445282 28.45369339]
[49.40495682 14.92534828]
[48.68675232 29.90814400]
[43.20380402 43.87014008]
[33.53474808 55.33789062]
[20.69997597 63.10117722]
[6.05397463 66.34072113]
[-8.85762787 64.71465302]
[-22.46117592 58.39456558]
[-33.32105255 48.04743576]
[-40.29119110 34.76522446]
[-42.63601685 19.94963074]
[-40.10807037 5.16418123]
[-32.97413635 -8.03077984]
[-21.98707581 -18.24275589]
[-8.30637646 -24.39405632]
[6.62420273 -25.83551598]
[21.22900200 -22.41501617]
[33.96674347 -14.49352932]
[43.49327850 -2.90686417]
[40.60800552 -17.62675476]
[37.72273254 -32.34664536]
[34.83745956 -47.06653976]
[30.78712082 -52.29207993]
[30.08864784 -57.93204117]
[32.09228516 -62.26729965]
[29.64655876 -77.06657410]
[27.20083046 -91.86584473]
[24.75510406 -106.66511536]
[22.30937576 -121.46438599]
[17.95323372 -107.11084747]
[10.44548512 -94.12493896]
[0.17997038 -83.18788910]
[-12.30480194 -74.87341309]
[-26.35390663 -69.61768341]
[-41.23035431 -67.69640350]
[-56.15375519 -69.21036530]
[-70.34126282 -74.08013916]
[-83.04862213 -82.05027008]
[-93.60923004 -92.70265961]
[-101.46910858 -105.47851562]
[-106.21593475 -119.70762634]
[-107.60070038 -134.64356995]
[-105.55076599 -149.50283813]
[-100.17366791 -163.50593567]
[-91.75147247 -175.91828918]
[-80.72599792 -186.08879089]
[-67.67561340 -193.48388672]
[-53.28491974 -197.71566772]
[-38.30882263 -198.56211853]
[-23.53293800 -195.97886658]
[-9.73237896 -190.10140991]
[2.36890531 -181.23805237]
[12.13610458 -169.85377502]
[19.05685043 -156.54576111]
[22.76832008 -142.01048279]
[25.87243080 -156.68577576]
[28.97654152 -171.36108398]
[32.08065033 -186.03639221]
[35.18476105 -200.71168518]
[21.34976196 -206.63444519]
[8.93624306 -215.14271545]
[-1.57865369 -225.90948486]
[-9.79076290 -238.52088928]
[-15.38443375 -252.49218750]
[-18.14465904 -267.28634644]
[-17.96534538 -282.33474731]
[-14.85338306 -297.05892944]
[-8.92838860 -310.89297485]
[-0.41810301 -323.30511475]
[10.35036182 -333.81826782]
[22.96309471 -342.02835083]
[36.93529510 -347.61975098]
[51.72990799 -350.37759399]
[66.77826691 -350.19583130]
[81.50196075 -347.08148193]
[95.33504486 -341.15426636]
[107.74580383 -332.64196777]
[118.25721741 -321.87179565]
[126.46524048 -309.25772095]
[132.05439758 -295.28463745]
[134.80982971 -280.48956299]
[134.62564087 -265.44122314]
[131.50891113 -250.71804810]
[125.57944489 -236.88592529]
[117.06513977 -224.47653198]
[106.29327393 -213.96687317]
[93.67787933 -205.76087952]
[79.70387268 -200.17399597]
[64.90836334 -197.42095947]
[49.86006546 -197.60757446]
[46.75595474 -182.93228149]
[43.65184402 -168.25697327]
[40.54773331 -153.58168030]
[37.44362259 -138.90637207]
[37.10864639 -123.91011047]
[39.55437469 -109.11083984]
[42.00010300 -94.31156921]
[44.44582748 -79.51229858]
[46.89155579 -64.71302795]
[49.55735397 -49.95180893]
[52.44262314 -35.23191833]
[55.32789612 -20.51202774]
[58.21316910 -5.79213667]
[62.93330383 8.44585228]
[69.41280365 21.97419739]
[75.89229584 35.50254440]
[82.37178802 49.03088760]
[88.85128784 62.55923462]
[95.63127899 75.93950653]
[102.70838165 89.16503906]
[109.88375092 102.33750916]
[117.15698242 115.45620728]
[124.43020630 128.57490540]
[131.70344543 141.69358826]
[139.45982361 154.53253174]
[147.68864441 167.07392883]
[156.10325623 179.49142456]
[164.70182800 191.78227234]
[173.30038452 204.07310486]
[181.89895630 216.36393738]
[190.49751282 228.65478516]
[199.09606934 240.94561768]
[208.23487854 252.84025574]
[217.89569092 264.31494141]
[227.55650330 275.78964233]
[240.16775513 267.63125610]
[253.70210266 261.11782837]
[267.94610596 256.35214233]
[282.67507935 253.40930176]
[297.65676880 252.33575439]
[312.65484619 253.14842224]
[327.43283081 255.83450317]
[341.75756836 260.35162354]
[355.40322876 266.62850952]
[368.15454102 274.56622314]
[379.81042480 284.03955078]
[390.18701172 294.89907837]
[399.12069702 306.97354126]
[406.47058105 320.07250977]
[412.12069702 333.98937988]
[415.98196411 348.50466919]
[417.99349976 363.38946533]
[418.12356567 378.40899658]
[416.37011719 393.32638550]
[412.76077271 407.90637207]
[407.35250854 421.91900635]
[400.23059082 435.14328003]
[391.50735474 447.37063599]
[381.32034302 458.40823364]
[369.83029175 468.08197021]
[357.21835327 476.23931885]
[343.68344116 482.75158691]
[329.43905640 487.51611328]
[314.70980835 490.45770264]
[299.72805786 491.52996826]
[284.73001099 490.71603394]
[269.95227051 488.02871704]
[255.62789917 483.51040649]
[241.98278809 477.23233032]
[229.23213196 469.29354858]
[217.57705688 459.81924438]
[207.20137024 448.95886230]
[198.26869202 436.88363647]
[190.91993713 423.78405762]
[185.27098083 409.86672974]
[181.41091919 395.35110474]
[179.40065002 380.46615601]
[179.27185059 365.44659424]
[181.02656555 350.52935791]
[184.63713074 335.94967651]
[190.04656982 321.93750000]
[197.16960144 308.71383667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[18 154]
[19 153]
[25 152]
[26 151]
[27 150]
[28 149]
[30 148]
[31 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[57 141]
[58 140]
[59 139]
[60 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
