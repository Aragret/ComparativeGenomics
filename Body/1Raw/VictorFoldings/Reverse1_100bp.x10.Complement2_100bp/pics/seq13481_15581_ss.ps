%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[230.55912781 429.29171753]
[239.47134399 417.18911743]
[250.12663269 406.58886719]
[262.27523804 397.73944092]
[255.39581299 384.41003418]
[248.51640320 371.08059692]
[241.63699341 357.75115967]
[234.75756836 344.42172241]
[227.87815857 331.09231567]
[220.31378174 318.13931274]
[212.08497620 305.59790039]
[203.85617065 293.05651855]
[195.62736511 280.51510620]
[187.39854431 267.97369385]
[184.68444824 267.27243042]
[182.08459473 265.45379639]
[180.02597046 262.55596924]
[178.91387939 258.77075195]
[179.07923889 254.43179321]
[171.61149597 241.42283630]
[164.14376831 228.41389465]
[156.67602539 215.40493774]
[149.20828247 202.39598083]
[141.74053955 189.38703918]
[130.14981079 185.92561340]
[123.82183838 175.14875793]
[126.61930084 162.55761719]
[119.34606934 149.43891907]
[112.07284546 136.32022095]
[104.70214844 123.25603485]
[97.23441315 110.24708557]
[89.00559998 97.70568848]
[80.04490662 85.67630768]
[71.08421326 73.64692688]
[62.12351608 61.61755371]
[53.16281891 49.58817673]
[45.52666473 44.57549667]
[44.15984726 37.31232834]
[35.37924194 25.15087509]
[18.40899277 18.00300026]
[17.30905533 0.48851785]
[8.34836006 -11.54086018]
[7.17392063 3.41309261]
[-2.47793555 14.89532566]
[-17.00730515 18.62324905]
[-30.99509239 13.20644188]
[-39.22419739 0.66523731]
[-38.62537003 -14.32280445]
[-29.42195702 -26.16751480]
[-15.04660225 -30.45111084]
[-0.86002272 -25.57521439]
[-8.32776356 -38.58416748]
[-15.79550552 -51.59312057]
[-28.01918602 -55.70948029]
[-33.97126770 -66.69841003]
[-30.94051361 -78.40913391]
[-38.21374130 -91.52782440]
[-45.48697281 -104.64652252]
[-59.28590012 -98.73208618]
[-73.61239624 -94.24402618]
[-88.31943512 -91.22840881]
[-103.25610352 -89.71616364]
[-118.26913452 -89.72281647]
[-133.20445251 -91.24830627]
[-147.90881348 -94.27696991]
[-162.23132324 -98.77772522]
[-176.02499390 -104.70439911]
[-189.14830017 -111.99616241]
[-201.46656799 -120.57819366]
[-212.85339355 -130.36242676]
[-223.19192505 -141.24847412]
[-232.37608337 -153.12460327]
[-240.31159973 -165.86894226]
[-246.91705322 -179.35075378]
[-252.12467957 -193.43164062]
[-255.88102722 -207.96714783]
[-258.14752197 -222.80810547]
[-258.90097046 -237.80221558]
[-258.13357544 -252.79562378]
[-255.85325623 -267.63446045]
[-252.08338928 -282.16647339]
[-246.86265564 -296.24249268]
[-240.24464417 -309.71813965]
[-232.29727173 -322.45510864]
[-223.10208130 -334.32269287]
[-212.75341797 -345.19909668]
[-201.35749817 -354.97271729]
[-189.03123474 -363.54330444]
[-175.90115356 -370.82284546]
[-162.10195923 -376.73666382]
[-147.77526855 -381.22409058]
[-133.06809998 -384.23907471]
[-118.13136292 -385.75064087]
[-103.11833954 -385.74334717]
[-88.18308258 -384.21719360]
[-73.47885132 -381.18789673]
[-59.15654373 -376.68649292]
[-45.36312485 -370.75921631]
[-32.24013901 -363.46688843]
[-19.92225075 -354.88430786]
[-8.53585911 -345.09954834]
[1.80219257 -334.21307373]
[10.98581791 -322.33654785]
[18.92077827 -309.59182739]
[25.52564621 -296.10974121]
[30.73264885 -282.02862549]
[34.48834991 -267.49295044]
[36.75421143 -252.65188599]
[37.50698090 -237.65774536]
[36.73893356 -222.66438293]
[34.45795441 -207.82563782]
[30.68744659 -193.29380798]
[25.46610260 -179.21798706]
[18.84750175 -165.74264526]
[10.89956188 -153.00602722]
[1.70384145 -141.13885498]
[-8.64529514 -130.26290894]
[-20.04165077 -120.48976898]
[-32.36827850 -111.91974640]
[-25.09504890 -98.80105591]
[-17.82181931 -85.68235779]
[-2.31353641 -77.46894836]
[-2.78655267 -59.06085968]
[4.68118858 -46.05191040]
[12.14892960 -33.04295731]
[20.37773705 -20.50155640]
[29.33843422 -8.47217846]
[41.25836563 -6.41262531]
[48.82212067 3.53591251]
[47.54069901 16.37027168]
[56.32130051 28.53172684]
[65.19219971 40.62747955]
[74.15289307 52.65685654]
[83.11358643 64.68623352]
[92.07428741 76.71561432]
[101.03498077 88.74498749]
[102.20941925 73.79103851]
[111.86127472 62.30880356]
[126.39064789 58.58087921]
[140.37843323 63.99768829]
[148.60754395 76.53889465]
[148.00871277 91.52693176]
[138.80529785 103.37164307]
[124.42993927 107.65524292]
[110.24336243 102.77934265]
[117.71110535 115.78829956]
[124.69749451 121.67286682]
[125.19153595 129.04699707]
[132.46476746 142.16569519]
[139.73799133 155.28437805]
[155.73861694 164.39820862]
[154.74949646 181.91929626]
[162.21723938 194.92823792]
[169.68496704 207.93719482]
[177.15270996 220.94615173]
[184.62045288 233.95510864]
[192.08819580 246.96405029]
[199.93995667 259.74490356]
[208.16876221 272.28628540]
[216.39756775 284.82769775]
[224.62637329 297.36911011]
[232.85517883 309.91049194]
[235.81864929 295.20614624]
[247.46168518 285.74890137]
[262.46127319 285.86245728]
[273.95974731 295.49493408]
[276.70022583 310.24249268]
[269.42974854 323.36270142]
[255.47232056 328.85723877]
[241.20759583 324.21289062]
[248.08700562 337.54232788]
[254.96641541 350.87176514]
[261.84582520 364.20117188]
[268.72525024 377.53060913]
[275.60464478 390.86004639]
[289.85574341 386.08438110]
[304.66882324 383.54022217]
[319.69668579 383.28720093]
[334.58703613 385.33123779]
[348.99081421 389.62442017]
[362.57037354 396.06613159]
[375.00741577 404.50534058]
[386.01040649 414.74426270]
[395.32135010 426.54281616]
[402.72207642 439.62448120]
[408.03903198 453.68258667]
[411.14761353 468.38760376]
[411.97494507 483.39480591]
[410.50161743 498.35238647]
[406.76220703 512.90979004]
[400.84429932 526.72564697]
[392.88671875 539.47625732]
[383.07589722 550.86260986]
[371.64190674 560.61779785]
[358.85272217 568.51318359]
[345.00814819 574.36364746]
[330.43270874 578.03210449]
[315.46810913 579.43249512]
[300.46511841 578.53210449]
[285.77545166 575.35186768]
[271.74340820 569.96649170]
[258.69796753 562.50213623]
[246.94490051 553.13378906]
[236.75973511 542.08105469]
[228.38121033 529.60302734]
[222.00575256 515.99224854]
[217.78279114 501.56771851]
[215.81132507 486.66757202]
[216.13757324 471.64114380]
[218.75389099 456.84060669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[10 162]
[11 161]
[12 160]
[13 159]
[14 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[27 150]
[28 149]
[29 148]
[30 146]
[31 145]
[32 136]
[33 135]
[34 134]
[35 133]
[36 132]
[38 131]
[39 130]
[41 127]
[42 126]
[51 125]
[52 124]
[53 123]
[56 121]
[57 120]
[58 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
