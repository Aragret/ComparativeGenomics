%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[131.41201782 584.41204834]
[130.51921082 569.43865967]
[129.62638855 554.46527100]
[128.73358154 539.49182129]
[115.04966736 535.86358643]
[103.13720703 528.17498779]
[94.16805267 517.16662598]
[89.02937317 503.90640259]
[88.23593140 489.68597412]
[91.87853241 475.89492798]
[99.61385345 463.88497925]
[110.69675446 454.83749390]
[124.05204773 449.64733887]
[123.38226318 434.66229248]
[122.71247864 419.67724609]
[119.27343750 413.13546753]
[122.14595032 404.46444702]
[121.69934845 389.47109985]
[121.25273895 374.47775269]
[120.80613708 359.48440552]
[120.35952759 344.49105835]
[118.05771637 341.82009888]
[116.93524933 337.90155029]
[117.56440735 333.30181885]
[120.24287415 328.82153320]
[120.46620178 313.82321167]
[120.68952942 298.82485962]
[120.91285706 283.82653809]
[120.68952942 268.82818604]
[120.01974487 253.84315491]
[119.34996033 238.85810852]
[117.45666504 223.97808838]
[114.35255432 209.30278015]
[111.24844360 194.62747192]
[108.14434052 179.95217896]
[103.68469238 174.05867004]
[105.10497284 165.03533936]
[102.21970367 150.31544495]
[92.17877960 139.31411743]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[77.70732117 68.28988647]
[82.64334106 54.23694992]
[79.53923035 39.56164932]
[75.56713867 25.09712601]
[70.74114227 10.89466953]
[65.91513824 -3.30778599]
[61.08914566 -17.51024246]
[56.26314545 -31.71269798]
[51.43714905 -45.91515350]
[37.53995895 -52.95119476]
[32.84803009 -67.42325592]
[39.64146423 -80.62873840]
[33.91744614 -87.74726105]
[34.85105133 -95.07871246]
[30.23704338 -109.35144806]
[25.62303352 -123.62418365]
[21.00902557 -137.89691162]
[16.28889084 -152.13490295]
[11.46289253 -166.33735657]
[6.63689518 -180.53981018]
[4.67936993 -165.66809082]
[-0.61057889 -151.63183594]
[-8.95545101 -139.16735840]
[-19.91749001 -128.92852783]
[-32.92164993 -121.45245361]
[-47.28576279 -117.13130188]
[-62.25630951 -116.19175720]
[-77.04796600 -118.68311310]
[-90.88479614 -124.47467804]
[-103.04093933 -133.26263428]
[-112.87872314 -144.58596802]
[-119.88205719 -157.85070801]
[-123.68357849 -172.36099243]
[-124.08385468 -187.35565186]
[-121.06189728 -202.04809570]
[-114.77622986 -215.66757202]
[-105.55657959 -227.49964905]
[-93.88659668 -236.92364502]
[-80.37845612 -243.44515991]
[-65.74078369 -246.72213745]
[-50.74143600 -246.58262634]
[-36.16724014 -243.03398132]
[-22.78274155 -236.26234436]
[-11.29005623 -226.62292480]
[-2.29207063 -214.62141418]
[3.73968792 -200.88580322]
[4.40947294 -215.87083435]
[-3.70267963 -225.89859009]
[-2.83631635 -238.36587524]
[6.00001621 -246.62696838]
[6.89283228 -261.60037231]
[7.78564787 -276.57379150]
[8.67846394 -291.54718018]
[9.57127953 -306.52059937]
[-4.64801931 -311.61846924]
[-16.85429001 -320.51696777]
[-26.05802536 -332.49478149]
[-31.51311684 -346.58090210]
[-32.77734756 -361.63342285]
[-29.74823380 -376.43209839]
[-22.67132759 -389.77731323]
[-12.12032509 -400.58715820]
[1.04945314 -407.98538208]
[15.77039051 -411.37222290]
[30.84912682 -410.47311401]
[45.06329727 -405.36096191]
[57.26062393 -396.45019531]
[66.45231628 -384.46313477]
[71.89325714 -370.37155151]
[73.14237213 -355.31777954]
[70.09838867 -340.52212524]
[63.00807953 -327.18405151]
[52.44622040 -316.38479614]
[39.26901627 -308.99981689]
[24.54468536 -305.62777710]
[23.65186882 -290.65435791]
[22.75905418 -275.68096924]
[21.86623764 -260.70755005]
[20.97342110 -245.73416138]
[29.66199303 -230.48699951]
[19.39451218 -215.20104980]
[18.72472763 -200.21600342]
[20.83935165 -185.36581421]
[25.66534805 -171.16336060]
[30.49134636 -156.96090698]
[35.61972046 -151.63909912]
[35.28175735 -142.51092529]
[39.89576721 -128.23818970]
[44.50977707 -113.96545410]
[49.12378693 -99.69272614]
[53.84392166 -85.45473480]
[67.27643585 -79.12203217]
[72.37300110 -64.78746796]
[65.63960266 -50.74114990]
[70.46559906 -36.53869629]
[75.29160309 -22.33623886]
[80.11759949 -8.13378334]
[84.94359589 6.06867218]
[89.76959229 20.27112770]
[95.48693085 6.40346766]
[108.20276642 -1.55313861]
[123.17440033 -0.63107353]
[134.81777954 8.82575512]
[138.79022217 23.29018402]
[133.61010742 37.36734009]
[121.20946503 45.80678940]
[106.21345520 45.46083069]
[94.21453857 36.45753860]
[97.31864929 51.13284302]
[107.52224731 61.98345184]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[122.08429718 133.45228577]
[116.93959045 147.43016052]
[119.82486725 162.15005493]
[122.81964111 176.84806824]
[125.92375183 191.52336121]
[129.02786255 206.19866943]
[132.13197327 220.87397766]
[137.84321594 207.00379944]
[149.28659058 197.30592346]
[163.90565491 193.94686890]
[178.43443298 197.67706299]
[189.62719727 207.66316223]
[194.98341370 221.67425537]
[193.30651855 236.58023071]
[184.97113037 249.05104065]
[171.83938599 256.30068970]
[156.84497070 256.70959473]
[143.33764648 250.18637085]
[134.33499146 238.18832397]
[135.00479126 253.17337036]
[135.67457581 268.15841675]
[138.14019775 271.73257446]
[139.23056030 275.52410889]
[139.04620361 279.07394409]
[137.82641602 282.00289917]
[135.91119385 284.04986572]
[135.68786621 299.04818726]
[135.46453857 314.04653931]
[135.24121094 329.04486084]
[135.35287476 344.04446411]
[135.79948425 359.03781128]
[136.24609375 374.03115845]
[136.69270325 389.02450562]
[137.13929749 404.01785278]
[137.69750977 419.00747681]
[138.36729431 433.99249268]
[139.03707886 448.97753906]
[154.26193237 453.67260742]
[166.93733215 463.28091431]
[175.54180908 476.62615967]
[179.05049133 492.08480835]
[177.05706787 507.78378296]
[169.82080078 521.82720947]
[158.23292542 532.52563477]
[143.70698547 538.59899902]
[144.59979248 553.57244873]
[145.49261475 568.54583740]
[146.38542175 583.51922607]
[157.38198853 595.20062256]
[154.96279907 611.06024170]
[140.98365784 618.93194580]
[126.16815948 612.77716064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[13 195]
[14 194]
[15 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 179]
[30 178]
[31 177]
[32 165]
[33 164]
[34 163]
[35 162]
[37 161]
[38 160]
[40 158]
[41 157]
[42 155]
[43 154]
[45 152]
[46 151]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[55 134]
[57 133]
[58 132]
[59 131]
[60 130]
[61 128]
[62 127]
[63 126]
[89 125]
[90 124]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
