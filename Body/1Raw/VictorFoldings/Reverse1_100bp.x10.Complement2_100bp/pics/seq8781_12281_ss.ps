%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-50.29374695 439.72152710]
[-45.93524170 454.10729980]
[-43.88094711 468.99777222]
[-44.18144989 484.02627563]
[-46.82935333 498.82275391]
[-51.75945282 513.02276611]
[-58.85033417 526.27667236]
[-67.92738342 538.25805664]
[-78.76705933 548.67187500]
[-91.10243988 557.26171875]
[-104.62974548 563.81597900]
[-119.01586151 568.17327881]
[-133.90650940 570.22637939]
[-148.93499756 569.92462158]
[-163.73123169 567.27545166]
[-177.93084717 562.34423828]
[-191.18417358 555.25225830]
[-203.16481018 546.17419434]
[-213.57774353 535.33367920]
[-222.16653442 522.99755859]
[-228.71969604 509.46972656]
[-233.07582092 495.08325195]
[-235.12765503 480.19244385]
[-234.82467651 465.16397095]
[-232.17433167 450.36795044]
[-227.24188232 436.16873169]
[-220.14881897 422.91601562]
[-211.06979370 410.93612671]
[-200.22839355 400.52407837]
[-187.89160156 391.93630981]
[-174.36320496 385.38427734]
[-159.97637939 381.02932739]
[-145.08538818 378.97872925]
[-130.05694580 379.28292847]
[-115.26115417 381.93450928]
[-101.06235504 386.86810303]
[-93.98524475 373.64257812]
[-86.90814209 360.41705322]
[-79.83103180 347.19152832]
[-83.03581238 335.52722168]
[-77.24799347 324.45089722]
[-65.08695984 320.15301514]
[-57.81372833 307.03430176]
[-50.54049683 293.91561890]
[-43.26726913 280.79693604]
[-43.86293030 265.91424561]
[-30.40458870 257.59655762]
[-23.13135910 244.47787476]
[-15.85812950 231.35917664]
[-8.58490086 218.24047852]
[-1.31167102 205.12179565]
[-14.12386703 212.92227173]
[-28.87571907 215.63941956]
[-43.62636566 212.91574097]
[-56.43510437 205.10958862]
[-65.61672974 193.24797058]
[-69.96323395 178.89151001]
[-68.90277100 163.92904663]
[-62.57484818 150.32914734]
[-51.81202698 139.88110352]
[-38.03033066 133.95953369]
[-23.04298401 133.34353638]
[-8.82182980 138.11415100]
[2.76209641 147.64372253]
[10.18472862 160.67846680]
[12.46949196 175.50343323]
[9.31487274 190.17036438]
[19.31304550 178.98838806]
[29.31121635 167.80641174]
[39.30938721 156.62443542]
[49.30755997 145.44245911]
[59.30573273 134.26048279]
[69.30390167 123.07851410]
[79.30207825 111.89653778]
[76.25563049 97.52281189]
[82.20333099 84.08741760]
[94.89225769 76.67956543]
[109.51594543 78.10528564]
[119.51412201 66.92331696]
[104.62036896 65.14114380]
[96.59814453 52.46660233]
[101.36113739 38.24289322]
[115.39824677 32.95520401]
[128.36183167 40.50142288]
[130.69609070 55.31717300]
[141.49824524 44.90980148]
[152.30041504 34.50242615]
[163.10256958 24.09505272]
[164.12246704 11.23726940]
[173.33386230 2.79132867]
[185.43006897 2.88296843]
[196.38597107 -7.36242294]
[207.34188843 -17.60781479]
[216.83078003 -29.22507858]
[224.68254089 -42.00592041]
[232.53428650 -54.78676224]
[240.38604736 -67.56760406]
[248.23780823 -80.34844971]
[236.46067810 -89.66701508]
[225.86837769 -100.31311798]
[216.60960388 -112.13730621]
[208.81433105 -124.97358704]
[202.59199524 -138.64175415]
[198.02995300 -152.94995117]
[195.19224548 -167.69728088]
[194.11871338 -182.67672729]
[194.82441711 -197.67800903]
[197.29946899 -212.49050903]
[201.50909424 -226.90631104]
[207.39421082 -240.72303772]
[214.87220764 -253.74670410]
[223.83810425 -265.79449463]
[234.16603088 -276.69726562]
[245.71098328 -286.30197144]
[258.31091309 -294.47375488]
[271.78894043 -301.09790039]
[285.95581055 -306.08145142]
[300.61270142 -309.35443115]
[315.55380249 -310.87084961]
[330.56939697 -310.60949707]
[345.44866943 -308.57394409]
[359.98275757 -304.79284668]
[373.96762085 -299.31927490]
[387.20690918 -292.23004150]
[399.51480103 -283.62466431]
[410.71847534 -273.62399292]
[420.66070557 -262.36837769]
[429.20184326 -250.01583862]
[436.22204590 -236.73979187]
[441.62274170 -222.72662354]
[445.32809448 -208.17303467]
[447.28610229 -193.28335571]
[447.46926880 -178.26661682]
[445.87503052 -163.33360291]
[442.52578735 -148.69396973]
[437.46853638 -134.55322266]
[430.77426147 -121.10989380]
[422.53698730 -108.55269623]
[412.87228394 -97.05790710]
[401.91586304 -86.78690338]
[389.82156372 -77.88387299]
[376.75912476 -70.47380066]
[362.91195679 -64.66071320]
[348.47442627 -60.52621460]
[333.64923096 -58.12834930]
[318.64447021 -57.50077438]
[303.67080688 -58.65230560]
[288.93844604 -61.56677246]
[274.65423584 -66.20326233]
[261.01864624 -72.49669647]
[253.16688538 -59.71585083]
[245.31513977 -46.93500900]
[237.46337891 -34.15416336]
[229.61161804 -21.37332344]
[242.52302551 -29.00847816]
[257.14807129 -32.34141922]
[272.09274292 -31.05446815]
[285.93267822 -25.27029037]
[297.34866333 -15.54019928]
[305.25268555 -2.79160261]
[308.89132690 11.76038361]
[307.91778564 26.72875786]
[302.42486572 40.68682861]
[292.93609619 52.30420303]
[280.35589600 60.47358704]
[265.88333130 64.41632843]
[250.89785767 63.75662231]
[236.82775879 58.55735779]
[225.01412964 49.31408691]
[216.58294678 36.90782928]
[212.33784485 22.52106094]
[212.68342590 7.52504301]
[217.58728027 -6.65190554]
[206.63136292 3.59348631]
[195.67546082 13.83887768]
[191.48036194 30.87906837]
[173.50993347 34.89720917]
[162.70777893 45.30458450]
[151.90562439 55.71195602]
[141.10346985 66.11933136]
[130.69609070 76.92148590]
[120.69792175 88.10346222]
[123.74436951 102.47718811]
[117.79666901 115.91258240]
[105.10774231 123.32043457]
[90.48405457 121.89471436]
[80.48587799 133.07669067]
[70.48770905 144.25866699]
[60.48953629 155.44062805]
[50.49136353 166.62260437]
[40.49319077 177.80458069]
[30.49501991 188.98655701]
[20.49684715 200.16853333]
[11.80702305 212.39501953]
[4.53379345 225.51371765]
[-2.73943591 238.63240051]
[-10.01266575 251.75109863]
[-17.28589439 264.86978149]
[-17.21046448 280.69082642]
[-30.14857483 288.07015991]
[-37.42180252 301.18884277]
[-44.69503403 314.30755615]
[-51.96826172 327.42623901]
[-51.22122955 345.82525635]
[-66.60550690 354.26864624]
[-73.68260956 367.49417114]
[-80.75971985 380.71969604]
[-87.83682251 393.94522095]
[-75.85468292 403.02127075]
[-65.43996429 413.86010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 208]
[37 207]
[38 206]
[39 205]
[42 203]
[43 202]
[44 201]
[45 200]
[47 198]
[48 197]
[49 196]
[50 195]
[51 194]
[67 193]
[68 192]
[69 191]
[70 190]
[71 189]
[72 188]
[73 187]
[74 186]
[78 182]
[79 181]
[85 180]
[86 179]
[87 178]
[88 177]
[91 175]
[92 174]
[93 173]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
