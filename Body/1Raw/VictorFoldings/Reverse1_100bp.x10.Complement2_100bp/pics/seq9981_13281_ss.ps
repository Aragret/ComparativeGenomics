%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[48.91738892 368.72973633]
[45.76395035 354.04263306]
[44.55459976 339.06958008]
[45.31002808 324.06677246]
[48.01731491 309.29092407]
[52.63013077 294.99487305]
[59.06954575 281.42324829]
[67.22537231 268.80828857]
[76.95805359 257.36581421]
[88.10105896 247.29165649]
[100.46369934 238.75819397]
[113.83444977 231.91143799]
[108.79753113 217.78240967]
[103.76061249 203.65338135]
[101.48757172 218.48014832]
[94.58184814 231.79595947]
[83.77220917 242.19557190]
[70.19943237 248.58146667]
[55.29587555 250.27973938]
[40.63435745 247.11116028]
[27.76213837 239.41012573]
[18.03765297 227.98934937]
[12.48715019 214.05406189]
[11.69638824 199.07492065]
[15.74881744 184.63270569]
[24.21677589 172.25152588]
[36.20661926 163.23799133]
[50.45302963 158.54333496]
[65.45255280 158.66300964]
[79.62225342 163.58435059]
[91.46676636 172.78802490]
[99.73618317 185.30290222]
[98.39794922 170.36271667]
[97.05971527 155.42253113]
[95.72148132 140.48234558]
[94.38324738 125.54216766]
[93.04501343 110.60198212]
[87.54847717 124.55863190]
[78.66976929 136.64865112]
[66.99777222 146.07014465]
[53.30665970 152.19822693]
[38.50450134 154.62643433]
[23.57308197 153.19371033]
[9.50274372 147.99510193]
[-2.77327824 139.37539673]
[-12.44075871 127.90631866]
[-18.85848808 114.34855652]
[-21.60080147 99.60136414]
[-20.48581123 84.64286041]
[-15.58747196 70.46519470]
[-7.23067141 58.00871658]
[4.03031349 48.09962082]
[17.44858170 41.39513779]
[32.13414764 38.33995819]
[47.11297226 39.13671875]
[61.39156342 43.73257065]
[74.02287292 51.82269287]
[84.16910553 62.87049484]
[91.15731049 76.14321136]
[94.52447510 90.76562500]
[98.06414795 76.18924713]
[101.60382080 61.61287308]
[105.14349365 47.03649521]
[93.42538452 37.31809235]
[87.11456299 23.53185081]
[87.41402435 8.43448257]
[94.21083832 -4.98059797]
[106.10910034 -14.07679272]
[120.71633148 -17.09247017]
[124.25600433 -31.66884613]
[127.79567719 -46.24522018]
[131.33534241 -60.82159805]
[134.87501526 -75.39797211]
[120.60523224 -80.04510498]
[106.73304749 -85.77095032]
[93.33988190 -92.54190063]
[80.50432587 -100.31823730]
[68.30171204 -109.05430603]
[56.80364609 -118.69885254]
[46.07760239 -129.19526672]
[36.18653488 -140.48196411]
[27.18847847 -152.49269104]
[19.13624573 -165.15698242]
[12.07708645 -178.40051270]
[6.05242920 -192.14556885]
[1.09762919 -206.31146240]
[-2.75823689 -220.81507874]
[-5.49254084 -235.57131958]
[-7.08923626 -250.49356079]
[-7.53895330 -265.49423218]
[-6.83905315 -280.48532104]
[-4.99364233 -295.37887573]
[-2.01355124 -310.08743286]
[2.08373189 -324.52468872]
[7.27416229 -338.60598755]
[13.52727985 -352.24859619]
[20.80638885 -365.37252808]
[29.06877136 -377.90072632]
[38.26594162 -389.75967407]
[48.34392166 -400.87979126]
[59.24357605 -411.19583130]
[70.90093231 -420.64721680]
[83.24758911 -429.17849731]
[96.21108246 -436.73962402]
[109.71533966 -443.28619385]
[123.68111420 -448.77981567]
[138.02644348 -453.18826294]
[152.66714478 -456.48562622]
[167.51730347 -458.65258789]
[182.48976135 -459.67639160]
[197.49665833 -459.55105591]
[212.44993591 -458.27734375]
[227.26182556 -455.86267090]
[241.84541321 -452.32125854]
[256.11511230 -447.67382812]
[269.98718262 -441.94772339]
[283.38021851 -435.17651367]
[296.21563721 -427.39996338]
[308.41809082 -418.66366577]
[319.91595459 -409.01889038]
[330.64181519 -398.52227783]
[340.53265381 -387.23538208]
[349.53048706 -375.22448730]
[357.58248901 -362.56002808]
[364.64138794 -349.31637573]
[370.66580200 -335.57122803]
[375.62033081 -321.40521240]
[379.47592163 -306.90151978]
[382.20993042 -292.14523315]
[383.80633545 -277.22296143]
[384.25576782 -262.22229004]
[383.55560303 -247.23120117]
[381.70989990 -232.33770752]
[378.72952271 -217.62919617]
[374.63198853 -203.19200134]
[369.44128418 -189.11082458]
[363.18789673 -175.46832275]
[355.90853882 -162.34452820]
[347.64593506 -149.81649780]
[338.44851685 -137.95770264]
[328.37033081 -126.83778381]
[317.47048950 -116.52196503]
[305.81295776 -107.07080078]
[293.46612549 -98.53974915]
[280.50250244 -90.97886658]
[266.99810791 -84.43254089]
[253.03224182 -78.93917847]
[238.68682861 -74.53102112]
[224.04606628 -71.23393250]
[209.19586182 -69.06726074]
[194.22338867 -68.04373169]
[179.21649170 -68.16934204]
[164.26324463 -69.44335938]
[149.45140076 -71.85829926]
[145.91172791 -57.28192520]
[142.37205505 -42.70555115]
[138.83238220 -28.12917328]
[135.29270935 -13.55279827]
[146.89002991 -4.17370319]
[153.29141235 9.36630630]
[153.17872620 24.40453529]
[146.52076721 37.95783234]
[134.59004211 47.31436157]
[119.71986389 50.57616806]
[116.18019104 65.15254211]
[112.64051819 79.72891998]
[109.10084534 94.30529785]
[107.98519897 109.26374817]
[109.32343292 124.20393372]
[110.66166687 139.14411926]
[111.99990082 154.08430481]
[113.33813477 169.02449036]
[114.67636871 183.96467590]
[117.88964844 198.61645508]
[122.92655945 212.74548340]
[127.96347809 226.87452698]
[142.65013123 223.71897888]
[157.62301636 222.50749207]
[172.62593079 223.26077271]
[187.40216064 225.96595764]
[201.69886780 230.57673645]
[215.27140808 237.01420593]
[227.88754272 245.16822815]
[239.33139038 254.89927673]
[249.40713501 266.04083252]
[257.94238281 278.40228271]
[264.79104614 291.77203369]
[269.83596802 305.92138672]
[272.99078369 320.60818481]
[274.20156860 335.58111572]
[273.44757080 350.58401489]
[270.74169922 365.36010742]
[266.13024902 379.65658569]
[259.69210815 393.22882080]
[251.53749084 405.84457397]
[241.80589294 417.28796387]
[230.66384888 427.36318970]
[218.30201721 435.89782715]
[204.93193054 442.74584961]
[190.78234863 447.79010010]
[176.09539795 450.94424438]
[161.12239075 452.15429688]
[146.11955261 451.39959717]
[131.34356689 448.69299316]
[117.04730988 444.08087158]
[103.47537994 437.64208984]
[90.86001587 429.48687744]
[79.41709137 419.75473022]
[69.34240723 408.61221313]
[60.80835724 396.24996948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 176]
[13 175]
[14 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[60 167]
[61 166]
[62 165]
[63 164]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
