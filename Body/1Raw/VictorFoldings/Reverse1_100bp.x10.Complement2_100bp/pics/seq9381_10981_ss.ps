%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[78.72195435 664.68109131]
[63.85950470 662.49877930]
[49.40906906 658.39514160]
[35.61791611 652.44036865]
[22.72202873 644.73638916]
[10.94207668 635.41503906]
[0.47962773 624.63580322]
[-8.48629189 612.58312988]
[-15.80226326 599.46319580]
[-21.34309959 585.50061035]
[-25.01399231 570.93426514]
[-26.75212479 556.01330566]
[-26.52775764 540.99316406]
[-24.34472847 526.13079834]
[-20.24039268 511.68057251]
[-14.28498077 497.88970947]
[-6.58039713 484.99420166]
[2.74152231 473.21469116]
[13.52126789 462.75274658]
[25.57438278 453.78741455]
[38.69462204 446.47204590]
[52.65748596 440.93188477]
[67.22404480 437.26168823]
[82.14505005 435.52426147]
[82.36837769 420.52593994]
[82.59170532 405.52758789]
[82.81503296 390.52926636]
[83.03836060 375.53091431]
[81.18493652 373.42782593]
[80.05289459 370.46386719]
[79.97431183 366.91009521]
[81.17707825 363.15274048]
[83.74803162 359.65356445]
[84.86367798 344.69509888]
[85.97932434 329.73666382]
[87.09497833 314.77819824]
[80.32571411 301.51071167]
[89.06799316 288.32421875]
[90.18364716 273.36578369]
[91.18790436 258.39944458]
[92.08071899 243.42602539]
[92.97353363 228.45262146]
[93.86635590 213.47921753]
[94.20133209 198.48295593]
[93.97800446 183.48461914]
[93.75466919 168.48628235]
[93.53134155 153.48794556]
[93.30801392 138.48960876]
[93.08468628 123.49126434]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[90.18214417 48.55028152]
[89.51235962 33.56524277]
[86.00288391 25.13189316]
[88.94583893 18.35245323]
[88.49923706 3.35910368]
[88.05262756 -11.63424683]
[87.60602570 -26.62759590]
[73.50370026 -35.96678925]
[67.80336761 -51.71504211]
[72.56525421 -67.59856415]
[85.72295380 -77.41448975]
[85.05316925 -92.39952850]
[84.38338470 -107.38456726]
[83.15641022 -122.33430481]
[81.37393951 -137.22802734]
[79.59147644 -152.12173462]
[77.80900574 -167.01545715]
[68.48664093 -179.79841614]
[74.65672302 -193.35493469]
[72.87425995 -208.24865723]
[71.09178925 -223.14237976]
[69.30932617 -238.03608704]
[58.71202087 -243.42437744]
[52.09928131 -253.15950012]
[51.01819611 -264.75799561]
[55.62216187 -275.32772827]
[64.66134644 -282.28900146]
[63.32310867 -297.22918701]
[61.98487473 -312.16937256]
[46.70866394 -317.77038574]
[35.44462967 -329.43078613]
[30.41135788 -344.78091431]
[32.56829453 -360.73184204]
[41.43332672 -374.09689331]
[55.18935394 -382.22845459]
[53.62882996 -397.14706421]
[52.06830978 -412.06567383]
[50.50778580 -426.98425293]
[35.62427902 -429.51089478]
[21.97485924 -435.96038818]
[10.57240486 -445.85415649]
[2.26305270 -458.45800781]
[-2.33658743 -472.83666992]
[-2.88519216 -487.92312622]
[0.65794885 -502.59790039]
[8.02991104 -515.77197266]
[18.68364525 -526.46783447]
[31.82857513 -533.89166260]
[46.48925781 -537.49261475]
[61.57777405 -537.00347900]
[75.97445679 -532.46057129]
[88.61097717 -524.20098877]
[98.54961395 -512.83758545]
[105.05286407 -499.21371460]
[107.63813782 -484.34030151]
[106.11359406 -469.32101440]
[100.59236145 -455.27044678]
[91.48415375 -443.23123169]
[79.46485901 -434.09671021]
[65.42639160 -428.54479980]
[66.98691559 -413.62619019]
[68.54743958 -398.70758057]
[70.10795593 -383.78897095]
[83.38046265 -379.75054932]
[94.14526367 -370.93063354]
[100.75616455 -358.63528442]
[102.18598938 -344.70526123]
[98.18601227 -331.24026489]
[89.32849121 -320.28268433]
[76.92506409 -313.50762939]
[78.26329803 -298.56744385]
[79.60153198 -283.62725830]
[94.33022308 -272.75613403]
[96.47209167 -254.25408936]
[84.20304108 -239.81855774]
[85.98551178 -224.92483521]
[87.76797485 -210.03112793]
[89.55044556 -195.13740540]
[98.74531555 -183.41973877]
[92.70272827 -168.79792786]
[94.48519135 -153.90420532]
[96.26765442 -139.01048279]
[98.05012512 -124.11676788]
[109.23190308 -134.11515808]
[124.04545593 -131.75750732]
[131.57078552 -118.78179169]
[126.26050568 -104.75321960]
[112.02914429 -100.01313782]
[99.36842346 -108.05435944]
[100.03820801 -93.06932068]
[100.70799255 -78.08428192]
[112.48320770 -71.79251099]
[119.66951752 -60.41265869]
[120.29940033 -46.86006165]
[114.10150146 -34.66971588]
[102.59937286 -27.07420158]
[103.04597473 -12.08085251]
[103.49258423 2.91249752]
[103.93919373 17.90584755]
[104.49739838 32.89545822]
[105.16718292 47.88049698]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[111.12659454 116.53306580]
[108.08303070 123.26793671]
[108.30635834 138.26628113]
[108.52968597 153.26461792]
[108.75301361 168.26295471]
[108.97634125 183.26129150]
[109.19966888 198.25962830]
[121.36094666 189.47879028]
[135.84884644 193.36476135]
[141.98341370 207.05297852]
[135.24249268 220.45297241]
[120.59521484 223.68676758]
[108.83975983 214.37202454]
[107.94694519 229.34542847]
[107.05412292 244.31884766]
[106.16130829 259.29223633]
[108.77438354 268.04495239]
[105.14209747 274.48141479]
[104.02645111 289.43988037]
[110.71591187 303.77731323]
[102.05342865 315.89385986]
[100.93778229 330.85229492]
[99.82212830 345.81076050]
[98.70648193 360.76919556]
[98.03669739 375.75424194]
[97.81336975 390.75259399]
[97.59004211 405.75091553]
[97.36671448 420.74926758]
[97.14338684 435.74758911]
[112.00605011 437.92849731]
[126.45687103 442.03076172]
[140.24859619 447.98422241]
[153.14521790 455.68695068]
[164.92605591 465.00720215]
[175.38952637 475.78546143]
[184.35659790 487.83728027]
[191.67381287 500.95648193]
[197.21598816 514.91851807]
[200.88825989 529.48455811]
[202.62780762 544.40533447]
[202.40487671 559.42547607]
[200.22326660 574.28808594]
[196.12030029 588.73870850]
[190.16619873 602.53015137]
[182.46284485 615.42639160]
[173.14204407 627.20678711]
[162.36329651 637.66973877]
[150.31103516 646.63623047]
[137.19149780 653.95281982]
[123.22915649 659.49432373]
[108.66294861 663.16589355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 188]
[25 187]
[26 186]
[27 185]
[28 184]
[33 183]
[34 182]
[35 181]
[36 180]
[38 178]
[39 177]
[40 175]
[41 174]
[42 173]
[43 172]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 159]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[57 152]
[58 151]
[59 150]
[60 149]
[64 144]
[65 143]
[66 142]
[67 136]
[68 135]
[69 134]
[70 133]
[72 131]
[73 130]
[74 129]
[75 128]
[80 125]
[81 124]
[82 123]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
