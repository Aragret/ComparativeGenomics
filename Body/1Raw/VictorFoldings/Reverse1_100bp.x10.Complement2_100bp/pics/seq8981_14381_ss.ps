%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[178.57437134 463.22512817]
[185.29132080 449.75415039]
[194.58273315 437.91122437]
[206.06814575 428.18136597]
[219.27720642 420.96295166]
[214.87620544 406.62310791]
[210.47521973 392.28326416]
[206.07421875 377.94342041]
[201.35408020 363.70544434]
[196.31716919 349.57641602]
[191.28024292 335.44738770]
[186.24333191 321.31835938]
[180.78797913 307.34555054]
[174.91902161 293.54138184]
[169.05004883 279.73718262]
[157.95277405 274.92297363]
[152.95027161 263.47052002]
[157.22412109 251.30099487]
[151.56134033 237.41096497]
[145.79530334 223.56349182]
[139.92634583 209.75930786]
[134.05738831 195.95513916]
[119.48773956 186.17288208]
[121.87326813 167.91389465]
[115.79943848 154.19863892]
[109.72560120 140.48336792]
[97.49743652 131.97917175]
[98.98404694 116.22796631]
[88.39193726 111.38560486]
[83.75541687 100.70178986]
[87.45326996 89.65792084]
[81.58431244 75.85374451]
[73.63787842 88.57593536]
[58.75502396 90.44696808]
[47.90684128 80.08757782]
[49.09020233 65.13433075]
[61.43277740 56.61019516]
[75.83484650 60.79775620]
[71.00885010 46.59529877]
[66.18285370 32.39284515]
[54.41696548 21.81576920]
[57.64809036 7.27585459]
[46.44446182 0.88511819]
[42.71726608 -11.04349327]
[47.94400024 -21.95256233]
[43.32999039 -36.22529602]
[38.71598053 -50.49802780]
[34.10197067 -64.77075958]
[15.75393009 -72.95787811]
[9.43977642 -91.70980835]
[18.80540466 -108.79194641]
[13.55868626 -122.84441376]
[8.31196785 -136.89688110]
[3.06524992 -150.94935608]
[-9.75064945 -155.09269714]
[-17.72385025 -165.70582581]
[-18.12267876 -178.77958679]
[-11.02547836 -189.53408813]
[-16.06239510 -203.66311646]
[-21.09931183 -217.79214478]
[-26.45049667 -231.80516052]
[-32.11328506 -245.69519043]
[-37.77606964 -259.58523560]
[-43.43885803 -273.47525024]
[-49.10164261 -287.36526489]
[-61.47622681 -297.22326660]
[-59.11626053 -311.92974854]
[-64.77904510 -325.81976318]
[-70.44183350 -339.70977783]
[-76.10462189 -353.59982300]
[-81.76741028 -367.48983765]
[-87.43019104 -381.37988281]
[-93.09297943 -395.26989746]
[-107.72800446 -391.84024048]
[-122.71936798 -390.74234009]
[-137.69790649 -392.00323486]
[-152.29475403 -395.59188843]
[-166.15045166 -401.41995239]
[-178.92379761 -409.34384155]
[-190.30021667 -419.16848755]
[-199.99957275 -430.65191650]
[-207.78300476 -443.51132202]
[-213.45883179 -457.43008423]
[-216.88729858 -472.06536865]
[-217.98396301 -487.05682373]
[-216.72181702 -502.03527832]
[-213.13195801 -516.63183594]
[-207.30276489 -530.48706055]
[-199.37780762 -543.25970459]
[-189.55223083 -554.63531494]
[-178.06800842 -564.33374023]
[-165.20794678 -572.11608887]
[-151.28872681 -577.79077148]
[-136.65313721 -581.21807861]
[-121.66159821 -582.31347656]
[-106.68326569 -581.05010986]
[-92.08700562 -577.45904541]
[-78.23226929 -571.62872314]
[-65.46024323 -563.70269775]
[-54.08543777 -553.87615967]
[-44.38797760 -542.39117432]
[-36.60667038 -529.53045654]
[-30.93313217 -515.61077881]
[-27.50708580 -500.97488403]
[-26.41289711 -485.98324585]
[-27.67751122 -471.00503540]
[-31.26978874 -456.40905762]
[-37.10126495 -442.55480957]
[-45.02833176 -429.78344727]
[-54.85578537 -418.40945435]
[-66.34160614 -408.71292114]
[-79.20294952 -400.93267822]
[-73.54016876 -387.04266357]
[-67.87738037 -373.15261841]
[-62.21459198 -359.26260376]
[-56.55180740 -345.37258911]
[-50.88901901 -331.48254395]
[-45.22623444 -317.59252930]
[-33.25669098 -308.72802734]
[-35.21161652 -293.02807617]
[-29.54883003 -279.13803101]
[-23.88604355 -265.24801636]
[-18.22325706 -251.35798645]
[-12.56046963 -237.46795654]
[-9.46981049 -235.77084351]
[-7.04760695 -232.49243164]
[-6.02812815 -227.96321106]
[-6.97028160 -222.82905579]
[-1.93336523 -208.70002747]
[3.10355091 -194.57099915]
[18.59241867 -188.01861572]
[24.66957664 -171.97544861]
[17.11772156 -156.19607544]
[22.36443901 -142.14360046]
[27.61115837 -128.09112549]
[32.85787582 -114.03865814]
[42.99934006 -112.45069122]
[51.63406372 -106.75182343]
[57.16704941 -97.91445923]
[58.54310989 -87.49765015]
[55.44750595 -77.37221527]
[48.37470627 -69.38477325]
[52.98871613 -55.11203766]
[57.60272217 -40.83930588]
[62.21673203 -26.56657219]
[75.85555267 -15.52349663]
[71.85054779 2.44985676]
[83.27124023 12.01107788]
[80.38530731 27.56684685]
[85.21130371 41.76930237]
[90.03730011 55.97175980]
[95.38848877 69.98477936]
[101.25744629 83.78895569]
[114.91571045 93.52693176]
[112.69931793 110.15412903]
[125.36192322 119.63932800]
[123.44087219 134.40953064]
[129.51470947 148.12480164]
[135.58853149 161.84005737]
[147.31764221 167.20578003]
[152.09419250 178.75430298]
[147.86155701 190.08616638]
[153.73052979 203.89035034]
[159.59948730 217.69451904]
[165.83709717 224.36759949]
[165.45137024 231.74818420]
[171.11415100 245.63821411]
[185.91839600 256.58883667]
[182.85423279 273.86822510]
[188.72319031 287.67242432]
[194.59214783 301.47659302]
[198.15220642 303.96255493]
[200.49989319 307.13317871]
[201.56884766 310.52325439]
[201.45060730 313.69384766]
[200.37236023 316.28143311]
[205.40928650 330.41046143]
[210.44619751 344.53948975]
[215.48310852 358.66851807]
[219.46061707 362.04882812]
[221.53620911 366.20156860]
[221.73416138 370.27291870]
[220.41406250 373.54241943]
[224.81506348 387.88226318]
[229.21606445 402.22210693]
[233.61706543 416.56198120]
[248.60130310 415.12765503]
[263.56750488 416.73934937]
[277.90283203 421.33102417]
[291.02020264 428.71472168]
[302.38253784 438.58804321]
[311.52453613 450.54669189]
[318.07180786 464.10095215]
[321.75625610 478.69580078]
[322.42703247 493.73358154]
[320.05667114 508.59851074]
[314.74218750 522.68188477]
[306.70126343 535.40698242]
[296.26312256 546.25274658]
[283.85522461 554.77502441]
[269.98565674 560.62481689]
[255.22239685 563.56262207]
[240.16995239 563.46813965]
[225.44473267 560.34515381]
[211.64971924 554.32165527]
[199.34982300 545.64428711]
[189.04869080 534.66833496]
[181.16816711 521.84326172]
[176.03094482 507.69427490]
[173.84739685 492.80075073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[8 183]
[9 179]
[10 178]
[11 177]
[12 176]
[13 171]
[14 170]
[15 169]
[18 167]
[19 166]
[20 164]
[21 163]
[22 162]
[24 159]
[25 158]
[26 157]
[28 155]
[31 153]
[32 152]
[38 151]
[39 150]
[40 149]
[42 147]
[45 145]
[46 144]
[47 143]
[48 142]
[51 136]
[52 135]
[53 134]
[54 133]
[58 130]
[59 129]
[60 128]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
