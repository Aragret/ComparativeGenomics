%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[134.61865234 579.29754639]
[130.67927551 594.21343994]
[119.28569031 604.61486816]
[104.07353973 607.18273926]
[89.89696503 601.09765625]
[81.27966309 588.30139160]
[80.97138214 572.87707520]
[89.07048798 559.74664307]
[102.99259949 553.09997559]
[104.77506256 538.20623779]
[106.55753326 523.31256104]
[108.22907257 508.40597534]
[109.78959656 493.48736572]
[111.35011292 478.56875610]
[112.57709503 463.61901855]
[113.46990967 448.64562988]
[114.36272430 433.67221069]
[102.67236328 421.58197021]
[103.35679626 404.44000244]
[116.48051453 392.87335205]
[117.15029907 377.88830566]
[117.82008362 362.90328979]
[118.48986816 347.91824341]
[119.15965271 332.93319702]
[119.27132416 317.93362427]
[118.82471466 302.94027710]
[118.37811279 287.94692993]
[117.93150330 272.95355225]
[117.48489380 257.96020508]
[116.03547668 243.03041077]
[113.58975220 228.23114014]
[111.14402008 213.43186951]
[108.69829559 198.63259888]
[98.98937225 187.33718872]
[104.37303925 172.46014404]
[101.92730713 157.66087341]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[78.04660034 79.97486877]
[75.77710724 64.93146515]
[84.63276672 53.01035309]
[82.18703461 38.21108246]
[79.74131012 23.41181183]
[69.85745239 11.05786705]
[75.41605377 -2.76064444]
[72.97032166 -17.55991554]
[70.52459717 -32.35918427]
[68.07886505 -47.15845871]
[65.63314056 -61.95772934]
[63.18741226 -76.75699615]
[56.43124771 -63.36467743]
[43.93851089 -55.06217575]
[28.97477722 -54.01974487]
[15.45152950 -60.50987244]
[6.90371180 -72.83605957]
[5.56570339 -87.77626038]
[11.78725719 -101.42515564]
[23.94207191 -110.21494293]
[38.85291290 -111.84800720]
[52.62211609 -105.89746094]
[61.65011215 -93.91958618]
[61.42678452 -108.91792297]
[61.20345688 -123.91625977]
[60.98012924 -138.91459656]
[60.75680161 -153.91293335]
[60.53347397 -168.91127014]
[57.47629166 -174.77345276]
[57.79127121 -180.44776917]
[60.53347397 -184.35792542]
[60.75680161 -199.35626221]
[50.02921295 -210.65036011]
[50.46935654 -225.85762024]
[61.30265808 -236.01513672]
[61.52598572 -251.01347351]
[61.74931335 -266.01181030]
[61.97264099 -281.01016235]
[46.47263336 -284.25357056]
[31.89968109 -290.43875122]
[18.80611420 -299.32937622]
[7.68782282 -310.58663940]
[-1.03452134 -323.78210449]
[-7.03138113 -338.41409302]
[-10.07680511 -353.92669678]
[-10.05693817 -369.73089600]
[-6.97428179 -385.22695923]
[-0.94752628 -399.82717896]
[7.79301262 -412.97817993]
[18.91419792 -424.18188477]
[31.99276543 -433.01437378]
[46.53143692 -439.14193726]
[61.97782516 -442.33361816]
[61.75449753 -457.33193970]
[61.53116989 -472.33029175]
[61.30784225 -487.32861328]
[61.08451462 -502.32696533]
[60.86118698 -517.32531738]
[47.17575836 -524.17858887]
[38.25221252 -536.61358643]
[36.14112091 -551.77276611]
[41.32759094 -566.17272949]
[52.61981201 -576.50445557]
[67.42292023 -580.39379883]
[82.33525848 -576.94696045]
[93.93009186 -566.95599365]
[99.54299927 -552.71685791]
[97.88419342 -537.50152588]
[89.33483887 -524.80633545]
[75.85952759 -517.54864502]
[76.08285522 -502.55029297]
[76.30618286 -487.55194092]
[76.52951050 -472.55361938]
[76.75283813 -457.55526733]
[76.97616577 -442.55694580]
[90.98921967 -440.23385620]
[104.38403320 -435.49639893]
[116.74792480 -428.48925781]
[127.69975281 -419.42697144]
[136.90165710 -408.58749390]
[144.06947327 -396.30361938]
[148.98150635 -382.95278931]
[151.48542786 -368.94546509]
[151.50291443 -354.71255493]
[149.03219604 -340.69207764]
[144.14807129 -327.31576538]
[136.99969482 -314.99575806]
[127.80599976 -304.11181641]
[116.84896851 -294.99975586]
[104.46503448 -287.94100952]
[91.03472900 -283.15383911]
[76.97097778 -280.78683472]
[76.74765015 -265.78848267]
[76.52432251 -250.79014587]
[76.30099487 -235.79180908]
[86.82707214 -225.31625366]
[86.81423950 -210.10261536]
[75.75514221 -199.13293457]
[75.53181458 -184.13459778]
[75.53181458 -169.13459778]
[75.75514221 -154.13626099]
[75.97846985 -139.13792419]
[76.20179749 -124.13958740]
[76.42512512 -109.14125061]
[76.64845276 -94.14291382]
[77.98668671 -79.20272827]
[80.43241119 -64.40345764]
[82.87813568 -49.60418320]
[85.32386780 -34.80491257]
[87.76959229 -20.00564194]
[90.21532440 -5.20637178]
[99.92424774 6.08902931]
[94.54058075 20.96608353]
[96.98630524 35.76535416]
[99.43203735 50.56462479]
[111.65225983 59.00273514]
[114.34339905 73.97646332]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.72657776 155.21514893]
[119.17230988 170.01441956]
[129.05616760 182.36836243]
[123.49756622 196.18687439]
[125.94329834 210.98614502]
[128.38902283 225.78541565]
[130.83474731 240.58468628]
[138.10963440 227.46690369]
[151.27091980 220.27102661]
[166.24043274 221.22677612]
[178.37973022 230.03800964]
[183.92729187 243.97445679]
[181.16415405 258.71777344]
[170.94651794 269.69955444]
[156.44041443 273.51699829]
[142.14071655 268.98724365]
[132.47824097 257.51361084]
[132.92485046 272.50695801]
[133.37145996 287.50030518]
[133.81806946 302.49365234]
[134.26466370 317.48699951]
[146.29386902 308.52606201]
[160.83801270 312.19592285]
[167.17570496 325.79129028]
[160.63502502 339.29016113]
[146.03753662 342.74166870]
[134.14469910 333.60299683]
[133.47491455 348.58801270]
[132.80513000 363.57305908]
[132.13533020 378.55810547]
[131.46554565 393.54315186]
[141.63861084 402.37057495]
[144.82363892 415.25723267]
[140.07537842 427.44476318]
[129.33613586 434.56503296]
[128.44331360 449.53842163]
[127.55049896 464.51184082]
[129.88832092 469.17892456]
[130.17362976 473.81271362]
[128.76281738 477.63693237]
[126.26872253 480.12927246]
[124.70819855 495.04788208]
[123.14767456 509.96649170]
[125.36730957 518.82714844]
[121.45124817 525.09503174]
[119.66877747 539.98870850]
[117.88631439 554.88244629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 206]
[13 205]
[14 204]
[15 200]
[16 199]
[17 198]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 170]
[31 169]
[32 168]
[33 167]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[41 159]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[72 140]
[73 139]
[76 136]
[77 135]
[78 134]
[79 133]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
