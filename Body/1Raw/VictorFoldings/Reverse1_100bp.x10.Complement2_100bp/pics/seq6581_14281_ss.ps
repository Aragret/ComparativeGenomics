%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[50.27967834 351.24975586]
[50.67448425 366.27774048]
[48.65338516 381.17440796]
[44.26873016 395.55395508]
[37.63409424 409.04385376]
[28.92132950 421.29473877]
[18.35611534 431.98922729]
[6.21211767 440.85037231]
[-7.19610405 447.64859009]
[-21.52124596 452.20779419]
[-36.39225006 454.40994263]
[-51.42392349 454.19793701]
[-66.22691345 451.57730103]
[-80.41777802 446.61587524]
[-93.62894440 439.44223022]
[-105.51821136 430.24215698]
[-115.77762604 419.25396729]
[-124.14142609 406.76223755]
[-130.39299011 393.09057617]
[-134.37037659 378.59310913]
[-135.97055054 363.64535522]
[-135.15209961 348.63449097]
[-131.93617249 333.94931030]
[-126.40612030 319.97024536]
[-118.70514679 307.05935669]
[-109.03274536 295.55105591]
[-97.63945007 285.74343872]
[-84.82037354 277.89059448]
[-70.90756226 272.19586182]
[-56.26138687 268.80679321]
[-41.26122284 267.81118774]
[-26.29561234 269.23477173]
[-11.75219631 273.04071045]
[-5.67836237 259.32543945]
[0.39547151 245.61018372]
[6.46930552 231.89491272]
[12.54313946 218.17965698]
[18.61697388 204.46438599]
[24.69080734 190.74911499]
[12.33591080 199.25538635]
[-2.39552665 202.08111572]
[-17.02099991 198.75012207]
[-29.07586098 189.82373047]
[-36.52865219 176.80621338]
[-38.12344742 161.89123535]
[-33.59149551 147.59222412]
[-23.69651222 136.31883240]
[-10.10597324 129.97082520]
[4.88987541 129.61793518]
[18.76396942 135.31965637]
[29.17828178 146.11511230]
[34.37781525 160.18511963]
[33.48592758 175.16020203]
[42.08448792 162.86936951]
[41.83410645 159.35231018]
[43.27479935 155.53924561]
[46.52714539 152.22631836]
[51.35158920 150.23336792]
[60.49039078 138.33874512]
[69.62919617 126.44410706]
[78.76799774 114.54947662]
[80.35045624 107.33022308]
[88.13247681 102.54712677]
[74.35314941 108.47418976]
[59.40102005 109.67163086]
[44.85402679 106.01308441]
[32.24734497 97.88464355]
[22.91139221 86.14411163]
[17.83140945 72.03050995]
[17.54350281 57.03327560]
[22.07805252 42.73509979]
[30.95651817 30.64490318]
[43.24193573 22.03859520]
[57.63779449 17.82441902]
[72.62486267 18.44710732]
[86.62152100 23.84094620]
[98.15067291 33.43671036]
[105.99561310 46.22173691]
[109.32845306 60.84679031]
[107.79746246 75.76845551]
[101.56410980 89.41217041]
[113.52644348 80.36216736]
[125.48878479 71.31217194]
[131.82609558 56.81565475]
[146.64413452 55.30727768]
[158.60646057 46.25727844]
[170.56880188 37.20727921]
[182.53114319 28.15727997]
[189.29826355 11.03163719]
[206.78381348 9.54084587]
[218.61007690 0.31374785]
[230.43634033 -8.91335011]
[241.91104126 -18.57416153]
[253.01828003 -28.65530014]
[264.12551880 -38.73643875]
[275.23275757 -48.81757736]
[286.33999634 -58.89871597]
[297.44720459 -68.97985840]
[308.55444336 -79.06099701]
[299.50302124 -91.03504944]
[291.56140137 -103.77227783]
[284.79351807 -117.17011261]
[279.25387573 -131.12068176]
[274.98706055 -145.51167297]
[272.02740479 -160.22720337]
[270.39880371 -175.14878845]
[270.11431885 -190.15629578]
[271.17623901 -205.12889099]
[273.57604980 -219.94601440]
[277.29440308 -234.48837280]
[282.30136108 -248.63887024]
[288.55664062 -262.28356934]
[296.00982666 -275.31262207]
[304.60095215 -287.62112427]
[314.26080322 -299.10995483]
[324.91165161 -309.68661499]
[336.46768188 -319.26596069]
[348.83590698 -327.77087402]
[361.91671753 -335.13281250]
[375.60479736 -341.29260254]
[389.78994751 -346.20056152]
[404.35794067 -349.81719971]
[419.19146729 -352.11340332]
[434.17111206 -353.07070923]
[449.17626953 -352.68136597]
[464.08612061 -350.94851685]
[478.78060913 -347.88610840]
[493.14141846 -343.51882935]
[507.05294800 -337.88183594]
[520.40313721 -331.02050781]
[533.08459473 -322.99008179]
[544.99511719 -313.85519409]
[556.03881836 -303.68945312]
[566.12683105 -292.57464600]
[575.17785645 -280.60031128]
[583.11907959 -267.86285400]
[589.88659668 -254.46481323]
[595.42578125 -240.51406860]
[599.69219971 -226.12295532]
[602.65136719 -211.40733337]
[604.27954102 -196.48570251]
[604.56353760 -181.47817993]
[603.50115967 -166.50561523]
[601.10089111 -151.68856812]
[597.38208008 -137.14633179]
[592.37469482 -122.99598694]
[586.11901855 -109.35147095]
[578.66546631 -96.32264709]
[570.07397461 -84.01441956]
[560.41375732 -72.52587891]
[549.76257324 -61.94953537]
[538.20623779 -52.37054062]
[525.83776855 -43.86602020]
[512.75671387 -36.50445175]
[499.06845093 -30.34510803]
[484.88314819 -25.43757629]
[470.31506348 -21.82137489]
[455.48144531 -19.52561760]
[440.50177002 -18.56878853]
[425.49664307 -18.95859337]
[410.58685303 -20.69189072]
[395.89245605 -23.75472832]
[381.53176880 -28.12244415]
[367.62042236 -33.75986862]
[354.27041626 -40.62161636]
[341.58923340 -48.65243530]
[329.67898560 -57.78767014]
[318.63558960 -67.95375824]
[307.52835083 -57.87261963]
[296.42111206 -47.79148102]
[285.31387329 -37.71034241]
[274.20666504 -27.62920380]
[263.09942627 -17.54806519]
[251.99218750 -7.46692705]
[266.61972046 -4.14495611]
[273.27981567 9.29539871]
[267.06289673 22.94640732]
[252.55186462 26.74505424]
[240.44367981 17.89111900]
[239.66345215 2.91291928]
[227.83717346 12.14001751]
[216.01091003 21.36711502]
[214.21806335 33.33007050]
[204.44091797 41.11410522]
[191.58114624 40.11961746]
[179.61880493 49.16961670]
[167.65646362 58.21961594]
[155.69412231 67.26961517]
[150.21243286 81.11882019]
[134.53878784 83.27450562]
[122.57644653 92.32450867]
[110.61410522 101.37450409]
[99.88972473 111.86200714]
[90.66262817 123.68827820]
[81.52382660 135.58291626]
[72.38502502 147.47753906]
[63.24622345 159.37217712]
[54.37532806 171.46792603]
[45.77676392 183.75877380]
[38.40607452 196.82295227]
[32.33224106 210.53822327]
[26.25840569 224.25347900]
[20.18457222 237.96875000]
[14.11073780 251.68402100]
[8.03690434 265.39929199]
[1.96307027 279.11456299]
[14.55558491 287.32580566]
[25.66775894 297.45080566]
[35.01176071 309.22729492]
[42.34555817 322.35025024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 206]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[53 199]
[54 198]
[58 197]
[59 196]
[60 195]
[61 194]
[63 193]
[81 192]
[82 191]
[83 190]
[85 188]
[86 187]
[87 186]
[88 185]
[90 182]
[91 181]
[92 180]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
