%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[130.36582947 298.50759888]
[128.90043640 283.57257080]
[128.52914429 268.57040405]
[129.25393677 253.58117676]
[131.07093811 238.68484497]
[133.97045898 223.96087646]
[137.93704224 209.48783875]
[142.94949341 195.34295654]
[148.98110962 181.60169983]
[155.99967957 168.33738708]
[163.96775818 155.62077332]
[151.87200928 146.74987793]
[139.77624512 137.87898254]
[127.61479950 129.09838867]
[115.38831329 120.40856171]
[103.16182709 111.71873474]
[109.79858398 125.17063141]
[111.77323151 140.04008484]
[108.87737274 154.75790405]
[101.41662598 167.77085876]
[90.17832947 177.70568848]
[76.34848785 183.51393127]
[61.38660812 184.58262634]
[46.87164688 180.79899597]
[34.33539963 172.56233215]
[25.10085106 160.74188232]
[20.14254189 146.58506775]
[19.98373604 131.58590698]
[24.64119339 117.32730103]
[33.62339783 105.31397247]
[45.98244095 96.81373596]
[60.41403961 92.72363281]
[75.39519501 93.47529602]
[89.34506989 98.98951721]
[79.68426514 87.51481628]
[70.02345276 76.04011536]
[60.36264038 64.56541443]
[50.70183182 53.09071350]
[41.04101944 41.61601639]
[28.28036690 39.73757172]
[20.47008705 29.98137856]
[21.37137032 17.91844940]
[11.88247204 6.30118656]
[10.46484852 21.23404694]
[-0.13112849 31.85126305]
[-15.06112099 33.29878616]
[-27.49933815 24.91482735]
[-31.75919342 10.53242016]
[-25.89313889 -3.27299190]
[-12.58305645 -10.18976116]
[2.08743930 -7.05465603]
[-6.14136839 -19.59605598]
[-14.37017632 -32.13745499]
[-22.59898376 -44.67885590]
[-30.82779121 -57.22025681]
[-39.05659866 -69.76165771]
[-47.28540802 -82.30305481]
[-55.51421738 -94.84445953]
[-68.89811707 -88.03752136]
[-82.94961548 -82.74427032]
[-97.49814606 -79.02895355]
[-112.36708832 -76.93666840]
[-127.37596130 -76.49282074]
[-142.34255981 -77.70279694]
[-157.08520508 -80.55191040]
[-171.42495728 -85.00556946]
[-185.18769836 -91.00971985]
[-198.20640564 -98.49146271]
[-210.32302856 -107.35999298]
[-221.39047241 -117.50763702]
[-231.27439880 -128.81123352]
[-239.85482788 -141.13354492]
[-247.02760315 -154.32501221]
[-252.70562744 -168.22547913]
[-256.82000732 -182.66621399]
[-259.32080078 -197.47193909]
[-260.17761230 -212.46290588]
[-259.38006592 -227.45713806]
[-256.93786621 -242.27262878]
[-252.88059998 -256.72952271]
[-247.25756836 -270.65234375]
[-240.13702393 -283.87207031]
[-231.60539246 -296.22821045]
[-221.76623535 -307.57080078]
[-210.73899841 -317.76211548]
[-198.65753174 -326.67849731]
[-185.66851807 -334.21163940]
[-171.92961121 -340.27017212]
[-157.60758972 -344.78048706]
[-142.87632751 -347.68786621]
[-127.91461945 -348.95700073]
[-112.90411377 -348.57250977]
[-98.02700806 -346.53903198]
[-83.46390533 -342.88128662]
[-69.39158630 -337.64361572]
[-55.98087692 -330.88964844]
[-43.39456558 -322.70138550]
[-31.78544426 -313.17816162]
[-21.29443359 -302.43563843]
[-12.04888535 -290.60421753]
[-4.16103363 -277.82745361]
[2.27337098 -264.26052856]
[7.17622137 -250.06809998]
[10.48800087 -235.42243958]
[12.16850758 -220.50134277]
[12.19734097 -205.48594666]
[10.57415295 -190.55850220]
[7.31864548 -175.90023804]
[2.47033834 -161.68907166]
[-3.91191411 -148.09753418]
[-11.75063801 -135.29058838]
[-20.95067787 -123.42372894]
[-31.40035248 -112.64099121]
[-42.97281647 -103.07326508]
[-34.74400711 -90.53186798]
[-26.51519966 -77.99046326]
[-18.28639221 -65.44906616]
[-10.05758381 -52.90766525]
[-1.82877612 -40.36626434]
[6.40003157 -27.82486343]
[14.62883949 -15.28346348]
[23.49973488 -3.18771172]
[32.98863220 8.42955112]
[49.70972824 13.75608635]
[52.51572037 31.95520401]
[62.17652893 43.42990494]
[71.83734131 54.90460587]
[81.49815369 66.37930298]
[91.15895844 77.85400391]
[100.81977081 89.32870483]
[111.85164642 99.49224854]
[124.07813263 108.18207550]
[136.30462646 116.87190247]
[145.11244202 119.29265594]
[148.64714050 125.78324127]
[160.74290466 134.65412903]
[172.83865356 143.52502441]
[182.57301331 132.10379028]
[193.11509705 121.42358398]
[204.40867615 111.54139709]
[216.39347839 102.50995636]
[229.00555420 94.37744904]
[242.17764282 87.18726349]
[255.83943176 80.97776794]
[269.91802979 75.78208923]
[284.33834839 71.62794495]
[299.02343750 68.53750610]
[313.89492798 66.52725983]
[328.87350464 65.60793304]
[343.87921143 65.78443146]
[358.83200073 67.05580139]
[373.65209961 69.41527557]
[388.26040649 72.85025787]
[402.57904053 77.34242249]
[416.53155518 82.86779785]
[430.04351807 89.39691162]
[443.04281616 96.89492035]
[455.46014404 105.32182312]
[467.22921753 114.63265228]
[478.28723145 124.77773285]
[488.57519531 135.70294189]
[498.03823853 147.34997559]
[506.62582397 159.65669250]
[514.29217529 172.55744934]
[520.99639893 185.98339844]
[526.70269775 199.86289978]
[531.38061523 214.12191772]
[535.00518799 228.68435669]
[537.55712891 243.47253418]
[539.02276611 258.40753174]
[539.39428711 273.40969849]
[538.66973877 288.39892578]
[536.85296631 303.29528809]
[533.95367432 318.01931763]
[529.98736572 332.49240112]
[524.97515869 346.63735962]
[518.94372559 360.37872314]
[511.92538452 373.64315796]
[503.95751953 386.35989380]
[495.08264160 398.46109009]
[485.34808350 409.88217163]
[474.80584717 420.56219482]
[463.51208496 430.44418335]
[451.52713013 439.47543335]
[438.91491699 447.60775757]
[425.74273682 454.79769897]
[412.08084106 461.00698853]
[398.00213623 466.20242310]
[383.58175659 470.35632324]
[368.89663696 473.44653320]
[354.02508545 475.45654297]
[339.04650879 476.37561035]
[324.04080200 476.19888306]
[309.08804321 474.92724609]
[294.26797485 472.56753540]
[279.65969849 469.13232422]
[265.34115601 464.63992310]
[251.38874817 459.11431885]
[237.87689209 452.58499146]
[224.87770081 445.08676147]
[212.46051025 436.65966797]
[200.69160461 427.34863281]
[189.63375854 417.20336914]
[179.34596252 406.27798462]
[169.88313293 394.63079834]
[161.29573059 382.32394409]
[153.62957764 369.42306519]
[146.92559814 355.99700928]
[141.21954346 342.11740112]
[136.54187012 327.85830688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 133]
[15 132]
[16 131]
[34 130]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[42 123]
[43 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
