%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[15.16497040 602.41217041]
[10.76175785 616.78118896]
[4.26603889 630.33343506]
[-4.17706966 642.76611328]
[-14.37894535 653.80151367]
[-26.11167526 663.19305420]
[-39.11314392 670.73089600]
[-53.09289551 676.24670410]
[-67.73861694 679.61724854]
[-82.72312164 680.76721191]
[-97.71163940 679.67089844]
[-112.36933136 676.35278320]
[-126.36873627 670.88702393]
[-139.39709473 663.39575195]
[-151.16336060 654.04626465]
[-161.40466309 643.04748535]
[-169.89221191 630.64508057]
[-176.43640137 617.11621094]
[-180.89100647 602.76300049]
[-183.15652466 587.90618896]
[-183.18235779 572.87762451]
[-180.96789551 558.01312256]
[-176.56263733 543.64471436]
[-170.06498718 530.09338379]
[-161.62011719 517.66192627]
[-151.41667175 506.62802124]
[-139.68260193 497.23815918]
[-126.68005371 489.70214844]
[-112.69951630 484.18832397]
[-98.05331421 480.81988525]
[-83.06864929 479.67205811]
[-68.08028412 480.77050781]
[-53.42306900 484.09069824]
[-47.96771240 470.11788940]
[-42.51235580 456.14508057]
[-37.05699921 442.17230225]
[-31.60164070 428.19949341]
[-26.14628410 414.22668457]
[-38.67350769 406.01910400]
[-49.22450256 395.38204956]
[-57.33634186 382.77868652]
[-62.65241241 368.75866699]
[-64.93807220 353.93392944]
[-64.09100342 338.95211792]
[-60.14580917 324.46823120]
[-53.27258682 311.11596680]
[-43.76961136 299.48013306]
[-32.05037689 290.07083130]
[-18.62561607 283.30130005]
[-4.08104277 279.46957397]
[10.94821072 278.74548340]
[25.80532455 281.16311646]
[31.26068115 267.19033813]
[27.68340492 250.00981140]
[42.15504074 238.62327576]
[47.40176010 224.57080078]
[43.56908417 207.44544983]
[57.86959076 195.84471130]
[62.90650558 181.71568298]
[67.94342041 167.58665466]
[72.98033905 153.45762634]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[105.25158691 55.00503540]
[106.14440155 40.03163147]
[107.03721619 25.05822563]
[107.93003082 10.08481884]
[108.82284546 -4.88858652]
[109.71566010 -19.86199188]
[101.09416962 -36.13317490]
[111.32183075 -50.39367676]
[111.99161530 -65.37871552]
[112.66139984 -80.36375427]
[98.63450623 -89.11807251]
[90.98030090 -103.66828156]
[91.70408630 -119.99902344]
[100.51371002 -133.65721130]
[114.92512512 -140.96635437]
[115.37173462 -155.95971680]
[101.03259277 -160.67871094]
[88.61670685 -169.23838806]
[79.12543488 -180.93800354]
[73.32133484 -194.82398987]
[71.66690826 -209.76771545]
[74.28772736 -224.55714417]
[80.96298218 -237.99522400]
[91.14403534 -248.99667358]
[103.99951935 -256.67572021]
[118.48320770 -260.41738892]
[118.92981720 -275.41073608]
[119.37641907 -290.40408325]
[119.82302856 -305.39743042]
[120.26963043 -320.39077759]
[120.71623993 -335.38412476]
[121.16284180 -350.37747192]
[107.28412628 -356.57824707]
[96.83842468 -367.62161255]
[91.41863251 -381.82351685]
[91.85123444 -397.01831055]
[98.07025909 -410.88885498]
[109.12734222 -421.32000732]
[123.33637238 -426.72113037]
[138.53056335 -426.26852417]
[152.39292908 -420.03128052]
[162.80953979 -408.96047974]
[168.19194031 -394.74435425]
[167.71937561 -379.55075073]
[161.46388245 -365.69662476]
[150.37937927 -355.29458618]
[136.15618896 -349.93087769]
[135.70959473 -334.93753052]
[135.26298523 -319.94418335]
[134.81637573 -304.95083618]
[134.36976624 -289.95748901]
[133.92315674 -274.96414185]
[133.47656250 -259.97079468]
[147.71186829 -255.37367249]
[160.08749390 -246.94305420]
[169.59567261 -235.35511780]
[175.45924377 -221.54356384]
[177.19512939 -206.62434387]
[174.65417480 -191.80560303]
[168.03385925 -178.28968811]
[157.86303711 -167.17575073]
[144.95968628 -159.37026978]
[130.36508179 -155.51310730]
[129.91847229 -140.51976013]
[141.98521423 -134.12359619]
[150.15815735 -123.09944153]
[152.79649353 -109.56474304]
[149.32943726 -96.14990997]
[140.37835693 -85.48715210]
[127.64643860 -79.69396973]
[126.97665405 -64.70893097]
[126.30686951 -49.72389221]
[134.23580933 -40.58832932]
[133.80043030 -28.09856606]
[124.68907166 -18.96917725]
[123.79624939 -3.99577069]
[122.90343475 10.97763538]
[122.01062012 25.95104027]
[121.11780548 40.92444611]
[120.22499084 55.89785385]
[128.00668335 43.07423019]
[139.32908630 33.23537827]
[153.11303711 27.31907463]
[168.04473877 25.88922501]
[182.70098877 29.08210945]
[195.68482971 36.59340668]
[205.75875854 47.70718384]
[211.96257019 61.36415100]
[213.70495605 76.26261139]
[210.81987000 90.98253632]
[203.58226013 104.12091827]
[192.68199158 114.42549133]
[179.15800476 120.91408539]
[164.29933167 122.96825409]
[149.52218628 120.39220428]
[136.23504639 113.43147278]
[125.70434570 102.74950409]
[118.93381500 89.36444092]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[87.10936737 158.49453735]
[82.07244873 172.62358093]
[77.03553772 186.75260925]
[71.99861908 200.88163757]
[76.81161499 212.84815979]
[72.32547760 224.51257324]
[61.45423126 229.81752014]
[56.20751190 243.86999512]
[60.84180832 255.90686035]
[56.18250656 267.50317383]
[45.23347855 272.64569092]
[39.77812195 286.61846924]
[52.34303284 294.90713501]
[62.90580750 305.62304688]
[71.00646973 318.29608154]
[76.29298401 332.37100220]
[78.53654480 347.23175049]
[77.64149475 362.22836304]
[73.64939117 376.70547485]
[66.73706055 390.03091431]
[57.20881271 401.62338257]
[45.48301315 410.97766113]
[32.07372284 417.68679810]
[17.56815720 421.45968628]
[2.60097551 422.13378906]
[-12.17348576 419.68206787]
[-17.62884331 433.65484619]
[-23.08419991 447.62765503]
[-28.53955650 461.60043335]
[-33.99491501 475.57324219]
[-39.45027161 489.54605103]
[-26.42084122 497.03546143]
[-14.65324306 506.38327026]
[-4.41037178 517.38061523]
[4.07894421 529.78179932]
[10.62505054 543.30975342]
[15.08170509 557.66229248]
[17.34934425 572.51879883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[52 184]
[53 183]
[55 180]
[56 179]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[64 170]
[66 167]
[67 166]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[75 139]
[76 138]
[77 137]
[82 131]
[83 130]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
