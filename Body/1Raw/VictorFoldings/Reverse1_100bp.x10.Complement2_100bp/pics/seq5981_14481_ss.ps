%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[74.23679352 561.01007080]
[62.91101456 571.00524902]
[49.22746277 577.40344238]
[34.29539490 579.68597412]
[19.32529640 577.66790771]
[5.53071928 571.51269531]
[-5.97006893 561.71942139]
[-14.24475098 549.08190918]
[-18.62253571 534.62469482]
[-18.74853706 519.51965332]
[-14.61253834 504.99142456]
[-6.54982758 492.21765137]
[4.78598738 482.23385620]
[18.47596359 475.84939575]
[33.41031265 473.58184814]
[35.41432571 458.71630859]
[37.41834259 443.85076904]
[39.42235565 428.98526001]
[41.31564713 414.10522461]
[43.09811401 399.21148682]
[44.65863419 384.29290771]
[45.99686813 369.35272217]
[47.33510590 354.41253662]
[48.67333984 339.47235107]
[50.01157379 324.53216553]
[51.34980774 309.59197998]
[52.68804169 294.65179443]
[54.02627563 279.71160889]
[55.36450958 264.77142334]
[45.46990585 276.04513550]
[31.29611015 280.95468140]
[16.54811668 278.21667480]
[5.08101368 268.54684448]
[-0.10772378 254.47285461]
[2.33822751 239.67362976]
[11.77950191 228.01762390]
[25.74817276 222.55171204]
[40.59286118 224.70465088]
[52.43320465 233.91368103]
[58.17404556 247.77070618]
[61.71371841 233.19433594]
[65.25338745 218.61795044]
[68.68445587 204.01564026]
[72.00671387 189.38816833]
[75.32897186 174.76071167]
[61.26069641 168.53532410]
[48.67173004 159.69282532]
[38.04280090 148.57087708]
[29.77978897 135.59417725]
[24.19822311 121.25828552]
[21.51124573 106.11061096]
[21.82146263 90.72959900]
[25.11702728 75.70258331]
[31.27209473 61.60339737]
[40.05162430 48.97043610]
[51.12036133 38.28610611]
[64.05562592 29.95839882]
[78.36347961 24.30531883]
[93.49754333 21.54273796]
[108.87991333 21.77614784]
[104.16591644 6.67353868]
[114.36952209 -4.17707014]
[117.47363281 -18.85237312]
[105.92612457 -9.27870655]
[91.04905701 -7.36224174]
[77.45224762 -13.69681454]
[69.34882355 -26.31958961]
[69.24971008 -41.31926346]
[77.18562317 -54.04801941]
[90.69753265 -60.56172180]
[105.59862518 -58.84202194]
[117.27163696 -49.42179108]
[122.09957123 -35.21973038]
[127.13648987 -49.34876251]
[132.17340088 -63.47779083]
[137.21032715 -77.60681915]
[142.24723816 -91.73584747]
[147.28414917 -105.86487579]
[149.06661987 -120.75859833]
[147.50610352 -135.67720032]
[145.94557190 -150.59580994]
[144.38505554 -165.51440430]
[142.82452393 -180.43301392]
[141.26400757 -195.35162354]
[133.22123718 -182.69010925]
[119.65498352 -176.29035950]
[104.76889038 -178.13542175]
[93.17557526 -187.65356445]
[88.46736145 -201.89550781]
[92.10313416 -216.44821167]
[102.95630646 -226.80236816]
[117.66390991 -229.74963379]
[131.66862488 -224.37677002]
[140.63104248 -212.34835815]
[141.07765198 -227.34170532]
[141.52426147 -242.33505249]
[127.15948486 -247.00729370]
[114.69367981 -255.53845215]
[105.13740540 -267.23690796]
[99.26533508 -281.15435791]
[97.55348969 -296.16256714]
[100.14065552 -311.04489136]
[106.81708527 -324.59487915]
[117.04155731 -335.71408081]
[129.98522949 -343.50112915]
[144.59880066 -347.32476807]
[159.69761658 -346.87503052]
[174.05769348 -342.18835449]
[186.51492310 -333.64468384]
[196.05944824 -321.93661499]
[201.91752625 -308.01327515]
[203.61428833 -293.00335693]
[201.01217651 -278.12365723]
[194.32214355 -264.58038330]
[184.08650208 -253.47145081]
[171.13500977 -245.69740295]
[156.51760864 -241.88845825]
[156.07099915 -226.89509583]
[155.62440491 -211.90174866]
[156.18261719 -196.91213989]
[157.74313354 -181.99354553]
[159.30364990 -167.07493591]
[160.86418152 -152.15632629]
[162.42469788 -137.23771667]
[163.98522949 -122.31912231]
[169.21171570 -136.37911987]
[177.04634094 -149.17047119]
[187.19618225 -160.21496582]
[199.28178406 -169.09968567]
[212.85131836 -175.49246216]
[227.39749146 -179.15431213]
[242.37646484 -179.94833374]
[257.22824097 -177.84483337]
[271.39758301 -172.92245483]
[284.35473633 -165.36521912]
[295.61532593 -155.45567322]
[304.75836182 -143.56428528]
[311.44198608 -130.13562012]
[315.41638184 -115.67172241]
[316.53289795 -100.71333313]
[314.74984741 -85.81968689]
[310.13388062 -71.54759216]
[302.85754395 -58.43061447]
[293.19290161 -46.95914841]
[281.50125122 -37.56206512]
[268.21969604 -30.59067726]
[253.84475708 -26.30561638]
[238.91390991 -24.86708260]
[223.98530579 -26.32885551]
[209.61706543 -30.63628769]
[196.34637451 -37.62834167]
[184.66937256 -47.04361343]
[175.02258301 -58.53010941]
[167.76667786 -71.65839386]
[163.17292786 -85.93766022]
[161.41317749 -100.82796478]
[156.37626648 -86.69893646]
[151.33935547 -72.56990051]
[146.30242920 -58.44087601]
[141.26551819 -44.31184387]
[136.22860718 -30.18281555]
[132.14894104 -15.74826241]
[129.04483032 -1.07295990]
[133.98085022 12.97997284]
[123.55522156 24.88025856]
[136.99588013 30.50806236]
[149.16912842 38.51650620]
[159.65797424 48.63122940]
[168.10305786 60.50573349]
[174.21510315 73.73322296]
[177.78468323 87.86054993]
[178.68955994 102.40374756]
[176.89869690 116.86460114]
[172.47346497 130.74771118]
[165.56544495 143.57746887]
[156.41131592 154.91436768]
[145.32464600 164.37002563]
[132.68527222 171.62049866]
[118.92617035 176.41743469]
[104.51869965 178.59646606]
[89.95642853 178.08297729]
[86.63417053 192.71043396]
[83.31191254 207.33789062]
[84.46290588 216.39952087]
[79.82976532 222.15762329]
[76.29009247 236.73400879]
[72.75041962 251.31037903]
[70.30469513 266.10964966]
[68.96646118 281.04983521]
[67.62822723 295.99002075]
[66.28999329 310.93020630]
[64.95175934 325.87039185]
[63.61352158 340.81057739]
[62.27528763 355.75076294]
[60.93705368 370.69094849]
[59.59881973 385.63113403]
[62.02954102 391.77957153]
[61.12594604 397.39031982]
[57.99182892 400.99395752]
[56.20936584 415.88769531]
[58.29683304 424.78039551]
[54.28788376 430.98925781]
[52.28387070 445.85479736]
[50.27985382 460.72033691]
[48.27584076 475.58584595]
[62.07659531 481.72717285]
[73.58721924 491.50891113]
[81.87458801 504.13809204]
[86.26689911 518.59094238]
[86.40807343 533.69580078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 205]
[16 204]
[17 203]
[18 202]
[19 200]
[20 199]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[40 187]
[41 186]
[42 185]
[43 183]
[44 182]
[45 181]
[60 165]
[62 163]
[63 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
