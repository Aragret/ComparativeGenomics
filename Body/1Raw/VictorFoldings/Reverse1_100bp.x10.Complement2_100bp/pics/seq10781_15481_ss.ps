%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[126.57556915 529.32855225]
[117.83424377 541.61840820]
[106.31065369 551.34759521]
[92.72918701 557.90460205]
[77.94357300 560.87725830]
[62.88326263 560.07861328]
[48.49494934 555.55902100]
[35.68309784 547.60241699]
[25.25307083 536.70904541]
[17.86050987 523.56365967]
[13.97011757 508.99261475]
[13.82644653 493.91183472]
[17.43852997 479.26928711]
[24.57930565 465.98547363]
[34.79990005 454.89535522]
[47.45783997 446.69613647]
[61.75743484 441.90316772]
[76.79979706 440.81777954]
[79.46559143 426.05657959]
[74.11334991 412.15682983]
[84.18004608 399.95141602]
[86.84584045 385.19018555]
[89.51163483 370.42898560]
[92.17742920 355.66775513]
[93.84896851 340.76119995]
[94.51875305 325.77615356]
[95.18854523 310.79110718]
[86.27392578 295.67501831]
[96.31268311 280.23788452]
[96.75929260 265.24453735]
[97.20589447 250.25119019]
[97.20589447 235.25119019]
[96.75929260 220.25782776]
[96.31268311 205.26448059]
[95.86608124 190.27113342]
[95.41947174 175.27778625]
[94.97286987 160.28443909]
[84.95865631 145.87324524]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[90.28736877 25.82962036]
[81.32515717 37.85786819]
[67.32048035 43.23087311]
[52.61285019 40.28374863]
[41.75957489 29.92969322]
[38.12366867 15.37702560]
[42.83174896 1.13504589]
[54.42496872 -8.38321209]
[69.31104279 -10.22841358]
[82.87735748 -3.82880116]
[90.92031860 8.83288193]
[92.48084259 -6.08572340]
[84.59449768 -22.72564507]
[95.44871521 -36.51523590]
[88.97346497 -50.95066452]
[97.81538391 -62.93689728]
[99.15361786 -77.87708282]
[91.15791321 -65.18579865]
[79.94873810 -55.21812820]
[66.41010284 -48.76016235]
[51.60971451 -46.32120132]
[36.71479416 -48.09359741]
[22.90002060 -53.93757248]
[11.25488091 -63.39223862]
[2.69776082 -75.71196747]
[-2.09648967 -89.92517090]
[-2.74977565 -104.91093445]
[0.78942329 -119.48742676]
[8.24199104 -132.50508118]
[19.02018738 -142.93725586]
[32.27399826 -149.96125793]
[46.95817566 -153.02311707]
[61.91465759 -151.88137817]
[75.96392059 -146.62606812]
[87.99797821 -137.67166138]
[97.06777191 -125.72431946]
[102.45802307 -111.72628021]
[103.74344635 -96.77800751]
[109.40623474 -110.66803741]
[115.06901550 -124.55806732]
[120.62824249 -138.48986816]
[126.08360291 -152.46266174]
[131.53895569 -166.43545532]
[124.74687958 -178.06654358]
[125.87726593 -191.29275513]
[134.29418945 -201.30462646]
[146.75326538 -204.59112549]
[152.41604614 -218.48115540]
[158.07884216 -232.37117004]
[163.74162292 -246.26119995]
[169.40440369 -260.15124512]
[175.06719971 -274.04125977]
[180.72998047 -287.93127441]
[186.39277649 -301.82131958]
[173.59304810 -309.70910645]
[162.26629639 -319.59619141]
[152.72149658 -331.21282959]
[145.21905518 -344.24215698]
[139.96362305 -358.32867432]
[137.09860229 -373.08813477]
[136.70211792 -388.11785889]
[138.78501892 -403.00784302]
[143.29045105 -417.35186768]
[150.09552002 -430.75860596]
[159.01458740 -442.86233521]
[169.80432129 -453.33285522]
[182.17037964 -461.88449097]
[195.77539062 -468.28396606]
[210.24821472 -472.35671997]
[225.19401550 -473.99163818]
[240.20504761 -473.14410400]
[254.87184143 -469.83721924]
[268.79421997 -464.16122437]
[281.59243774 -456.27099609]
[292.91726685 -446.38171387]
[302.45983887 -434.76321411]
[309.95977783 -421.73245239]
[315.21249390 -407.64492798]
[318.07467651 -392.88491821]
[318.46826172 -377.85510254]
[316.38250732 -362.96554565]
[311.87429810 -348.62237549]
[305.06661987 -335.21694946]
[296.14523315 -323.11492920]
[285.35348511 -312.64651489]
[272.98577881 -304.09725952]
[259.37954712 -297.70037842]
[244.90594482 -293.63043213]
[229.95982361 -291.99838257]
[214.94894409 -292.84881592]
[200.28279114 -296.15853882]
[194.62001038 -282.26849365]
[188.95722961 -268.37847900]
[183.29443359 -254.48844910]
[177.63165283 -240.59841919]
[171.96885681 -226.70838928]
[166.30607605 -212.81835938]
[160.64329529 -198.92832947]
[167.82223511 -183.71974182]
[161.65905762 -167.70942688]
[145.51174927 -160.98010254]
[140.05639648 -147.00730896]
[134.60104370 -133.03450012]
[135.09661865 -125.66048431]
[128.95904541 -118.89527893]
[123.29625702 -105.00524902]
[117.63347626 -91.11522675]
[114.09380341 -76.53884888]
[112.75556946 -61.59866333]
[119.32653809 -48.23185349]
[110.38890076 -35.17700195]
[117.90201569 -25.69650650]
[116.90937805 -13.23864079]
[107.39945221 -4.52520037]
[105.83892822 10.39340496]
[105.28071594 25.38301468]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[117.78092194 138.32646179]
[118.03029633 150.82133484]
[109.96621704 159.83782959]
[110.41281891 174.83117676]
[110.85942841 189.82452393]
[111.30603790 204.81787109]
[111.75263977 219.81123352]
[112.19924927 234.80458069]
[114.61138153 238.41505432]
[115.64517212 242.22239685]
[115.40798950 245.76910400]
[114.14472961 248.67956543]
[112.19924927 250.69778442]
[111.75263977 265.69113159]
[111.30603790 280.68447876]
[119.56658936 290.59036255]
[118.88594055 303.06915283]
[110.17358398 311.46090698]
[109.50379181 326.44592285]
[108.83400726 341.43096924]
[118.66601562 330.10263062]
[133.03152466 325.78610229]
[147.47921753 329.81896973]
[157.53233337 340.95159912]
[160.07580566 355.73437500]
[154.32148743 369.58673096]
[142.05244446 378.21636963]
[127.07035828 378.94927979]
[114.01760101 371.55838013]
[106.93864441 358.33355713]
[104.27285004 373.09478760]
[101.60705566 387.85598755]
[98.94126129 402.61721802]
[104.10282898 417.57278442]
[94.22681427 428.72238159]
[91.56101990 443.48358154]
[105.27352905 449.76196289]
[116.99335480 459.25387573]
[125.98377228 471.36267090]
[131.67964172 485.32720947]
[133.72290039 500.26962280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[21 202]
[22 201]
[23 200]
[24 199]
[25 189]
[26 188]
[27 187]
[29 184]
[30 183]
[31 182]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[39 169]
[40 168]
[43 166]
[44 165]
[45 164]
[46 163]
[47 162]
[57 161]
[58 160]
[60 157]
[62 155]
[63 154]
[84 153]
[85 152]
[86 151]
[87 149]
[88 148]
[89 147]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
