%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[11.87735939 358.22640991]
[9.03771305 372.96374512]
[5.00627613 387.42059326]
[-0.19012178 401.50073242]
[-6.51689911 415.11047363]
[-13.93195152 428.15921021]
[-22.38593292 440.56015015]
[-31.82258034 452.23071289]
[-42.17909622 463.09329224]
[-53.38655853 473.07556152]
[-65.37037659 482.11108398]
[-78.05081177 490.13973999]
[-91.34346771 497.10812378]
[-105.15988159 502.96981812]
[-119.40810394 507.68582153]
[-133.99331665 511.22479248]
[-148.81846619 513.56311035]
[-163.78488159 514.68530273]
[-178.79296875 514.58380127]
[-193.74282837 513.25939941]
[-208.53500366 510.72076416]
[-223.07102966 506.98489380]
[-237.25418091 502.07662964]
[-250.99006653 496.02865601]
[-264.18728638 488.88116455]
[-276.75796509 480.68176270]
[-288.61853027 471.48501587]
[-299.68997192 461.35211182]
[-309.89865112 450.35046387]
[-319.17660522 438.55334473]
[-327.46212769 426.03924561]
[-334.70004272 412.89141846]
[-340.84222412 399.19738770]
[-345.84774780 385.04824829]
[-349.68331909 370.53820801]
[-352.32342529 355.76382446]
[-353.75045776 340.82339478]
[-353.95498657 325.81637573]
[-352.93560791 310.84262085]
[-350.69909668 296.00177002]
[-347.26034546 281.39257812]
[-342.64227295 267.11230469]
[-336.87554932 253.25598145]
[-329.99862671 239.91580200]
[-322.05718994 227.18055725]
[-313.10415649 215.13497925]
[-303.19906616 203.85925293]
[-292.40786743 193.42839050]
[-280.80233765 183.91184998]
[-268.45974731 175.37292480]
[-255.46223450 167.86845398]
[-241.89625549 161.44839478]
[-227.85212708 156.15544128]
[-213.42330933 152.02485657]
[-198.70581055 149.08409119]
[-183.79757690 147.35273743]
[-168.79783630 146.84231567]
[-153.80639648 147.55621338]
[-138.92303467 149.48968506]
[-124.24680328 152.62986755]
[-109.87535095 156.95587158]
[-95.90432739 162.43887329]
[-82.42671967 169.04241943]
[-69.53221130 176.72254944]
[-57.30661011 185.42816162]
[-45.83128738 195.10130310]
[-35.18260193 205.67761230]
[-23.78013802 195.93164062]
[-12.37767601 186.18568420]
[-0.97521365 176.43971252]
[10.42724895 166.69374084]
[21.82971191 156.94778442]
[33.23217392 147.20181274]
[44.63463593 137.45585632]
[37.68893051 124.19907379]
[33.86675644 109.72924042]
[33.35970306 94.77170563]
[36.19319534 80.07625580]
[42.22518921 66.37953949]
[51.15332031 54.36814499]
[62.53003311 44.64418793]
[75.78504181 37.69510269]
[90.25389862 33.86923981]
[105.21130371 33.35837173]
[119.90747833 36.18811798]
[133.60572815 42.21662140]
[145.61940002 51.14168549]
[157.02186584 41.39572144]
[168.42431641 31.64975548]
[179.82678223 21.90378952]
[191.22924805 12.15782452]
[202.63171387 2.41185856]
[207.12190247 -5.54276657]
[214.27725220 -7.39279127]
[225.82356262 -16.96791077]
[237.36985779 -26.54302979]
[228.73750305 -38.81994247]
[221.10784912 -51.74389267]
[214.52914429 -65.23316956]
[209.04295349 -79.20248413]
[204.68397522 -93.56352234]
[201.47978210 -108.22548676]
[199.45060730 -123.09568024]
[198.60929871 -138.08007812]
[198.96118164 -153.08395386]
[200.50401306 -168.01245117]
[203.22804260 -182.77116394]
[207.11605835 -197.26679993]
[212.14346313 -211.40769958]
[218.27848816 -225.10447693]
[225.48234558 -238.27052307]
[233.70947266 -250.82258606]
[242.90785217 -262.68133545]
[253.01934814 -273.77175903]
[263.98001099 -284.02377319]
[275.72058105 -293.37255859]
[288.16677856 -301.75897217]
[301.23995972 -309.13000488]
[314.85742188 -315.43908691]
[328.93310547 -320.64630127]
[343.37802124 -324.71871948]
[358.10083008 -327.63061523]
[373.00845337 -329.36358643]
[388.00662231 -329.90664673]
[403.00051880 -329.25634766]
[417.89535522 -327.41687012]
[432.59698486 -324.39978027]
[447.01239014 -320.22415161]
[461.05050659 -314.91644287]
[474.62252808 -308.51016235]
[487.64263916 -301.04583740]
[500.02856445 -292.57064819]
[511.70199585 -283.13815308]
[522.58905029 -272.80804443]
[532.62103271 -261.64559937]
[541.73437500 -249.72138977]
[549.87158203 -237.11082458]
[556.98107910 -223.89361572]
[563.01800537 -210.15332031]
[567.94421387 -195.97683716]
[571.72845459 -181.45376587]
[574.34692383 -166.67594910]
[575.78295898 -151.73681641]
[576.02752686 -136.73080444]
[575.07910156 -121.75279999]
[572.94366455 -106.89749908]
[569.63476562 -92.25881958]
[565.17321777 -77.92931366]
[559.58728027 -63.99958038]
[552.91229248 -50.55768585]
[545.19042969 -37.68861771]
[536.47052002 -25.47373962]
[526.80767822 -13.99027729]
[516.26300049 -3.31083488]
[504.90322876 6.49706745]
[492.80007935 15.37142086]
[480.03012085 23.25611877]
[466.67410278 30.10130882]
[452.81643677 35.86371231]
[438.54476929 40.50690079]
[423.94927979 44.00151825]
[409.12231445 46.32546616]
[394.15756226 47.46405029]
[379.14965820 47.41007996]
[364.19348145 46.16389084]
[349.38360596 43.73336029]
[334.81362915 40.13386154]
[320.57571411 35.38814545]
[306.75985718 29.52621841]
[293.45343018 22.58514404]
[280.74050903 14.60880470]
[268.70150757 5.64763069]
[257.41253662 -4.24172211]
[246.94497681 -14.99672890]
[235.39868164 -5.42160892]
[223.85237122 4.15351057]
[212.37767029 13.81432152]
[200.97521973 23.56028748]
[189.57275391 33.30625153]
[178.17028809 43.05221939]
[166.76782227 52.79818344]
[155.36535645 62.54415131]
[162.31106567 75.80092621]
[166.13323975 90.27075958]
[166.64028931 105.22829437]
[163.80680847 119.92374420]
[157.77481079 133.62046814]
[148.84667969 145.63185120]
[137.46997070 155.35580444]
[124.21495819 162.30490112]
[109.74610138 166.13076782]
[94.78869629 166.64163208]
[80.09252167 163.81188965]
[66.39427185 157.78338623]
[54.38060379 148.85830688]
[42.97813797 158.60427856]
[31.57567787 168.35025024]
[20.17321396 178.09620667]
[8.77075195 187.84217834]
[-2.63171053 197.58813477]
[-14.03417301 207.33410645]
[-25.43663597 217.08007812]
[-16.64730072 229.24562073]
[-8.87882328 242.08709717]
[-2.18290305 255.51904297]
[3.39590001 269.45208740]
[7.82045889 283.79351807]
[11.06132889 298.44784546]
[13.09694099 313.31756592]
[13.91374969 328.30377197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[72 197]
[73 196]
[74 195]
[87 182]
[88 181]
[89 180]
[90 179]
[91 178]
[92 177]
[94 176]
[95 175]
[96 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
