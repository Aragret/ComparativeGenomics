%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACCUCCUAGUCCGUCCGCGGUUCCUCACUCGGCUUCAAAGUAGUACGCCUCUACAACCUACCCCACCCCUCCAGCUACUUACUCACCAAUUAAUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[100.08882904 548.80279541]
[89.26529694 538.36981201]
[80.25561523 526.33563232]
[73.29314423 513.01196289]
[68.55823517 498.74389648]
[66.17352295 483.90109253]
[66.20079803 468.86795044]
[68.63932800 454.03387451]
[73.42597198 439.78311157]
[80.43672943 426.48477173]
[89.49001312 414.48336792]
[100.35131836 404.08969116]
[112.73931122 395.57302856]
[126.33311462 389.15393066]
[140.78060913 384.99868774]
[138.99813843 370.10498047]
[137.21568298 355.21124268]
[125.95570374 341.75094604]
[133.34312439 324.88360596]
[131.33911133 310.01806641]
[121.97079468 298.43859863]
[127.79501343 283.72845459]
[125.79100037 268.86291504]
[116.42269135 257.28344727]
[122.24691010 242.57327271]
[118.23796082 236.36441040]
[120.32543182 227.47169495]
[118.54296112 212.57797241]
[116.76049805 197.68426514]
[114.97803497 182.79054260]
[111.98326111 168.09254456]
[107.79624939 153.68876648]
[96.81387329 143.62710571]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.40366364 47.29477310]
[71.26170349 33.20363235]
[66.01498413 19.15115929]
[60.76826859 5.09868860]
[55.52154922 -8.95378304]
[50.27483368 -23.00625420]
[41.76824951 -10.65157700]
[26.81669617 -9.44696808]
[16.44190407 -20.28041840]
[18.29178047 -35.16591263]
[31.00266838 -43.13042068]
[45.20338821 -38.30395126]
[41.01637650 -52.70773315]
[36.82936478 -67.11151123]
[32.64235306 -81.51529694]
[24.48764801 -68.92559052]
[9.84858036 -65.65485382]
[-2.88892579 -73.57671356]
[-6.42824888 -88.15317535]
[1.25809610 -101.03417206]
[15.76702213 -104.84088898]
[28.78657150 -97.39340973]
[25.90129852 -112.11330414]
[23.01602745 -126.83319092]
[20.13075447 -141.55308533]
[17.24548149 -156.27297974]
[14.36020851 -170.99287415]
[11.36543465 -185.69087219]
[8.26132393 -200.36618042]
[5.15721416 -215.04147339]
[1.72615302 -229.64379883]
[-2.03014755 -244.16586304]
[-5.78644848 -258.68792725]
[-20.67904091 -256.74102783]
[-35.69800186 -256.63909912]
[-50.61565018 -258.38363647]
[-65.20584106 -261.94818115]
[-79.24738312 -267.27871704]
[-92.52741241 -274.29443359]
[-104.84461212 -282.88897705]
[-116.01225281 -292.93206787]
[-125.86103821 -304.27142334]
[-134.24165344 -316.73516846]
[-141.02706909 -330.13433838]
[-146.11441040 -344.26580811]
[-149.42654419 -358.91537476]
[-150.91326904 -373.86090088]
[-150.55204773 -388.87588501]
[-148.34835815 -403.73263550]
[-144.33560181 -418.20596313]
[-138.57461548 -432.07647705]
[-131.15274048 -445.13385010]
[-122.18247223 -457.18017578]
[-111.79981232 -468.03283691]
[-100.16215515 -477.52728271]
[-87.44592285 -485.51959229]
[-73.84388733 -491.88858032]
[-59.56225967 -496.53775024]
[-44.81754303 -499.39660645]
[-29.83326340 -500.42175293]
[-14.83657837 -499.59771729]
[-0.05483329 -496.93698120]
[14.28788376 -492.47982788]
[27.97414207 -486.29388428]
[40.79645920 -478.47290039]
[52.56045151 -469.13543701]
[63.08778381 -458.42306519]
[72.21886444 -446.49816895]
[79.81526184 -433.54153442]
[85.76182556 -419.74960327]
[89.96839905 -405.33139038]
[92.37121582 -390.50555420]
[92.93385315 -375.49676514]
[91.64777374 -360.53262329]
[88.53247833 -345.83996582]
[83.63519287 -331.64151001]
[77.03016663 -318.15249634]
[68.81752014 -305.57745361]
[59.12175751 -294.10696411]
[48.08986282 -283.91494751]
[35.88908386 -275.15594482]
[22.70437241 -267.96267700]
[8.73561096 -262.44421387]
[12.49191189 -247.92216492]
[16.24821281 -233.40010071]
[19.08443069 -231.30529785]
[21.04692078 -227.73266602]
[21.45215034 -223.10783386]
[19.83251572 -218.14558411]
[22.93662643 -203.47029114]
[26.04073715 -188.79498291]
[30.50037766 -182.90147400]
[29.08010101 -173.87814331]
[31.96537209 -159.15824890]
[34.85064697 -144.43835449]
[37.73591614 -129.71846008]
[40.62118912 -114.99857330]
[43.50646210 -100.27868652]
[47.04613495 -85.70230865]
[51.23314667 -71.29852295]
[55.42015839 -56.89474487]
[59.60717010 -42.49096298]
[64.32730103 -28.25297165]
[69.57402039 -14.20050144]
[74.82073975 -0.14802973]
[80.06745911 13.90444183]
[85.31417847 27.95691299]
[90.59872437 33.12366486]
[90.53269196 42.25785446]
[93.00466156 43.57979965]
[95.10192871 45.96057129]
[96.41858673 49.26235962]
[96.60605621 53.20309067]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[126.07717133 135.12062073]
[122.20002747 149.50175476]
[126.38703918 163.90553284]
[131.05084229 149.64898682]
[141.74124146 139.12684631]
[156.06997681 134.68978882]
[170.83595276 137.32904053]
[182.74043274 146.45501709]
[189.12393188 160.02893066]
[188.56033325 175.01834106]
[181.17556763 188.07456970]
[168.61940002 196.28082275]
[153.69691467 197.80381775]
[139.74183655 192.30329895]
[129.87174988 181.00807190]
[131.65422058 195.90179443]
[133.43667603 210.79551697]
[135.21914673 225.68922424]
[137.11244202 240.56925964]
[146.62408447 253.21200562]
[140.65652466 266.85888672]
[142.66053772 281.72442627]
[152.17219543 294.36718750]
[146.20463562 308.01406860]
[148.20864868 322.87957764]
[157.97380066 331.30603027]
[159.33689880 343.72882080]
[152.10939026 353.42880249]
[153.89186096 368.32250977]
[155.67433167 383.21621704]
[170.69435120 383.84481812]
[185.41900635 386.87478638]
[199.46688843 392.22763062]
[212.47413635 399.76473999]
[224.10380554 409.29086304]
[234.05468750 420.55920410]
[242.06901550 433.27798462]
[247.93919373 447.11767578]
[251.51319885 461.71981812]
[252.69841003 476.70617676]
[251.46417236 491.68859863]
[247.84242249 506.27899170]
[241.92700195 520.09942627]
[233.87110901 532.79187012]
[223.88340759 544.02764893]
[212.22262573 553.51562500]
[199.19079590 561.01013184]
[185.12547302 566.31701660]
[170.39099121 569.29876709]
[155.36898804 569.87823486]
[140.44859314 568.04034424]
[126.01626587 563.83270264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 188]
[16 187]
[17 186]
[19 183]
[20 182]
[22 180]
[23 179]
[25 177]
[27 176]
[28 175]
[29 174]
[30 173]
[31 161]
[32 160]
[34 158]
[35 157]
[37 155]
[38 154]
[39 153]
[40 148]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[51 141]
[52 140]
[53 139]
[54 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 130]
[68 129]
[69 128]
[70 124]
[71 123]
[72 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
