%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[83.14502716 580.02264404]
[80.24508667 594.87005615]
[72.89720917 608.09362793]
[61.82125854 618.39794922]
[48.10234833 624.77343750]
[33.08451462 626.59545898]
[18.23905373 623.68560791]
[5.02036953 616.32885742]
[-5.27650356 605.24597168]
[-11.64278316 591.52282715]
[-13.45476627 576.50378418]
[-10.53493404 561.66027832]
[-3.16934037 548.44653320]
[7.92040825 538.15704346]
[21.64785004 531.79998779]
[36.66811371 529.99804688]
[39.55338669 515.27819824]
[42.43865967 500.55828857]
[45.32392883 485.83837891]
[48.20920181 471.11849976]
[51.09447479 456.39859009]
[53.65030670 441.61795044]
[55.87542725 426.78390503]
[58.10054398 411.94985962]
[60.32566071 397.11581421]
[62.55077744 382.28176880]
[53.51861191 370.49383545]
[55.56388092 355.41830444]
[67.98940277 346.02447510]
[70.21451569 331.19042969]
[72.43963623 316.35638428]
[74.44364929 301.49084473]
[76.22611237 286.59713745]
[78.00857544 271.70339966]
[79.79104614 256.80969238]
[81.57350922 241.91598511]
[83.35597992 227.02226257]
[85.13844299 212.12854004]
[86.80998230 197.22196960]
[88.37050629 182.30335999]
[89.93103027 167.38476562]
[90.93528748 152.41841125]
[91.38189697 137.42506409]
[91.82849884 122.43171692]
[92.27510834 107.43836975]
[90.49264526 92.54464722]
[86.52054596 78.08012390]
[82.54844666 63.61560059]
[71.43298340 52.35696030]
[75.52381134 38.03514481]
[71.55171204 23.57062149]
[67.36470795 9.16683865]
[62.96370697 -5.17300844]
[51.51795578 -16.09570885]
[55.18055725 -30.53297424]
[50.77956009 -44.87282181]
[46.37856293 -59.21266937]
[41.97756195 -73.55251312]
[37.57656479 -87.89236450]
[32.64496994 -102.05850220]
[27.18961525 -116.03129578]
[21.73425674 -130.00408936]
[7.09469652 -141.17390442]
[10.41578484 -158.40577698]
[4.75299788 -172.29580688]
[-0.90978861 -186.18583679]
[-6.57257509 -200.07585144]
[-12.23536205 -213.96588135]
[-26.74469566 -210.08226013]
[-41.62636948 -208.04782104]
[-56.64568329 -207.89463806]
[-71.56575775 -209.62513733]
[-86.15128326 -213.21202087]
[-100.17222595 -218.59870911]
[-113.40744781 -225.70027161]
[-125.64821625 -234.40467834]
[-136.70147705 -244.57466125]
[-146.39291382 -256.04983521]
[-154.56965637 -268.64920044]
[-161.10276794 -282.17404175]
[-165.88919067 -296.41110229]
[-168.85345459 -311.13577271]
[-169.94879150 -326.11587524]
[-169.15794373 -341.11514282]
[-166.49337769 -355.89700317]
[-161.99711609 -370.22833252]
[-155.74008179 -383.88308716]
[-147.82093811 -396.64593506]
[-138.36457825 -408.31558228]
[-127.52017212 -418.70797729]
[-115.45872498 -427.65924072]
[-102.37047577 -435.02813721]
[-88.46183777 -440.69851685]
[-73.95217896 -444.58093262]
[-59.07033157 -446.61410522]
[-44.05100632 -446.76602173]
[-29.13107872 -445.03427124]
[-14.54585552 -441.44616699]
[-0.52536952 -436.05828857]
[12.70925713 -428.95562744]
[24.94929504 -420.25018311]
[36.00170135 -410.07928467]
[45.69216537 -398.60330200]
[53.86785126 -386.00323486]
[60.39981842 -372.47781372]
[65.18505096 -358.24038696]
[68.14807129 -343.51544189]
[69.24215698 -328.53524780]
[68.45004272 -313.53607178]
[65.78423309 -298.75442505]
[61.28676605 -284.42349243]
[55.02857208 -270.76925659]
[47.10835266 -258.00704956]
[37.65102005 -246.33821106]
[26.80573273 -235.94671631]
[14.74353504 -226.99649048]
[1.65466511 -219.62867737]
[7.31745148 -205.73864746]
[12.98023796 -191.84861755]
[18.64302444 -177.95858765]
[24.30581093 -164.06855774]
[35.33018875 -159.08964539]
[40.16162872 -147.56398010]
[35.70705414 -135.45945740]
[41.16241074 -121.48665619]
[46.61777115 -107.51385498]
[54.93946838 -119.99381256]
[69.87142944 -121.42089844]
[80.40636444 -110.74311066]
[78.77831268 -95.83172607]
[66.18741608 -87.67885590]
[51.91641235 -92.29335785]
[56.31740952 -77.95351410]
[60.71840668 -63.61366653]
[65.11940765 -49.27381897]
[69.52040100 -34.93397141]
[80.65136719 -25.03695297]
[77.30355072 -9.57400608]
[81.70455170 4.76584053]
[85.42921448 7.75513887]
[87.31556702 13.11598778]
[86.01624298 19.59852409]
[89.98833466 34.06304932]
[100.81968689 44.28709030]
[97.01296997 59.64350510]
[100.98506927 74.10803223]
[104.95716858 88.57255554]
[108.00862122 73.88621521]
[115.02322388 60.62742615]
[125.44776917 49.84184265]
[138.46012878 42.38005066]
[153.03411865 38.83052444]
[168.02033997 39.47319031]
[182.23693848 44.25737000]
[194.56272888 52.80575943]
[204.02563477 64.44419861]
[209.87939453 78.25482941]
[211.66235352 93.14848328]
[209.23387146 107.95059967]
[202.78550720 121.49380493]
[192.82577515 132.71003723]
[180.14016724 140.71473694]
[165.72909546 144.87661743]
[150.72909546 144.86744690]
[136.32313538 140.68795776]
[123.64731598 132.66775513]
[113.70130157 121.43936920]
[107.26845551 107.88497162]
[106.82185364 122.87831879]
[106.37524414 137.87167358]
[105.92864227 152.86502075]
[118.46987915 144.63597107]
[132.76980591 149.16499329]
[138.28704834 163.11346436]
[130.95449829 176.19909668]
[116.17744446 178.77565002]
[104.84963226 168.94528198]
[103.28910828 183.86389160]
[101.72859192 198.78248596]
[103.94822693 207.64314270]
[100.03215790 213.91101074]
[98.24969482 228.80473328]
[96.46723175 243.69844055]
[94.68476105 258.59216309]
[92.90229797 273.48587036]
[91.11982727 288.37960815]
[89.33736420 303.27331543]
[91.58394623 309.49139404]
[90.51370239 315.07275391]
[87.27367401 318.58148193]
[85.04856110 333.41552734]
[82.82344055 348.24957275]
[91.94596100 360.87564087]
[89.47805786 375.88778687]
[77.38481903 384.50689697]
[75.15970612 399.34094238]
[72.93458557 414.17498779]
[70.70947266 429.00903320]
[68.48435211 443.84307861]
[70.39646912 448.70010376]
[70.26723480 453.34085083]
[68.52087402 457.02395630]
[65.81436920 459.28387451]
[62.92909622 474.00375366]
[60.04382324 488.72366333]
[57.15855026 503.44354248]
[54.27327728 518.16345215]
[51.38800430 532.88336182]
[64.61653137 540.22235107]
[74.92825317 551.29138184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[29 192]
[30 191]
[31 190]
[32 187]
[33 186]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 179]
[40 178]
[41 177]
[42 171]
[43 170]
[44 169]
[45 168]
[46 147]
[47 146]
[48 145]
[50 143]
[51 142]
[52 139]
[53 138]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 126]
[61 125]
[62 124]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
