%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[25.28906250 819.45336914]
[10.30940342 820.32824707]
[-4.69553423 820.24163818]
[-19.66409302 819.19384766]
[-34.53476334 817.18914795]
[-49.24643707 814.23577881]
[-63.73865891 810.34588623]
[-77.95188141 805.53546143]
[-91.82769775 799.82434082]
[-105.30908203 793.23583984]
[-118.34064484 785.79718018]
[-130.86883545 777.53881836]
[-142.84216309 768.49475098]
[-154.21144104 758.70214844]
[-164.92993164 748.20123291]
[-174.95361328 737.03515625]
[-184.24127197 725.24975586]
[-192.75476074 712.89355469]
[-200.45909119 700.01727295]
[-207.32260132 686.67376709]
[-213.31707764 672.91796875]
[-218.41790771 658.80639648]
[-222.60412598 644.39697266]
[-225.85852051 629.74896240]
[-228.16772461 614.92254639]
[-229.52223206 599.97857666]
[-229.91650391 584.97857666]
[-229.34892273 569.98413086]
[-227.82179260 555.05688477]
[-225.34140015 540.25811768]
[-221.91793823 525.64868164]
[-217.56549072 511.28857422]
[-212.30191040 497.23687744]
[-206.14886475 483.55126953]
[-199.13160706 470.28802490]
[-191.27899170 457.50161743]
[-182.62327576 445.24462891]
[-173.20002747 433.56738281]
[-163.04798889 422.51785278]
[-152.20884705 412.14151001]
[-140.72717285 402.48092651]
[-128.65011597 393.57586670]
[-116.02732849 385.46286011]
[-102.91066742 378.17526245]
[-89.35404205 371.74304199]
[-75.41315460 366.19259644]
[-61.14529037 361.54678345]
[-46.60908127 357.82464600]
[-31.86425781 355.04150391]
[-16.97141457 353.20877075]
[-1.99174583 352.33401489]
[13.01319122 352.42080688]
[27.98173904 353.46878052]
[29.98575211 338.60324097]
[31.98976517 323.73773193]
[33.99377823 308.87219238]
[35.99779129 294.00668335]
[38.00180817 279.14114380]
[27.19833946 289.54714966]
[12.50501728 292.56481934]
[-1.52527416 287.25906372]
[-10.54509640 275.27395630]
[-11.75956059 260.32321167]
[-4.79234982 247.03945923]
[8.19766903 239.53883362]
[23.18539619 240.14547729]
[35.52672195 248.67141724]
[41.39758682 262.47506714]
[45.36968231 248.01052856]
[49.34177780 233.54600525]
[53.31387329 219.08148193]
[57.28596878 204.61695862]
[56.02592850 197.33450317]
[61.42638016 189.96749878]
[65.61338806 175.56370544]
[64.38304138 173.04490662]
[64.07629395 169.88697815]
[64.94157410 166.43927002]
[67.09638214 163.13452148]
[70.50215149 160.44107056]
[75.53907013 146.31204224]
[80.57598114 132.18301392]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[106.36177063 61.51906967]
[110.33386993 47.05454636]
[112.99966431 32.29332733]
[115.66545868 17.53211021]
[118.33125305 2.77089310]
[111.70436859 -14.40950012]
[123.55415344 -27.35359573]
[125.99987793 -42.15286636]
[128.44560242 -56.95213699]
[126.75730133 -65.92919159]
[131.03948975 -71.95285797]
[133.70529175 -86.71407318]
[119.93881989 -92.85800934]
[108.04315948 -102.11849213]
[98.70988464 -113.95713806]
[92.48164368 -127.68566132]
[89.72052002 -142.50590515]
[90.58704376 -157.55624390]
[95.03084564 -171.96165466]
[102.79356384 -184.88464355]
[113.42388153 -195.57388306]
[126.30377197 -203.40789795]
[140.68440247 -207.93125916]
[155.72972107 -208.88095093]
[170.56500244 -206.20178223]
[184.32774353 -200.04951477]
[196.21778870 -190.78181458]
[205.54388428 -178.93751526]
[211.76379395 -165.20521545]
[214.51594543 -150.38330078]
[213.64028931 -135.33349609]
[209.18775940 -120.93077087]
[201.41720581 -108.01248932]
[190.78041077 -97.32970428]
[177.89576721 -89.50348663]
[163.51239014 -84.98885345]
[148.46650696 -84.04827881]
[145.80070496 -69.28706360]
[143.24487305 -54.50640869]
[140.79914856 -39.70713806]
[138.35342407 -24.90786743]
[145.14059448 -14.89483356]
[143.22413635 -2.54530120]
[133.09246826 5.43668842]
[130.42668152 20.19790649]
[127.76087952 34.95912170]
[125.09508514 49.72034073]
[135.33512878 38.75943375]
[149.28526306 33.24639130]
[164.25193787 34.24568939]
[177.34532166 41.56438446]
[186.03729248 53.78934860]
[188.64955139 68.56013489]
[184.67773438 83.02473450]
[174.88871765 94.39025879]
[161.17260742 100.46220398]
[146.17778015 100.06816864]
[132.79949951 93.28424835]
[123.62091064 81.42029572]
[120.41424561 66.76578522]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[94.70501709 137.21992493]
[89.66809845 151.34895325]
[84.63117981 165.47798157]
[80.01717377 179.75071716]
[75.83016205 194.15451050]
[71.75049591 208.58905029]
[67.77839661 223.05357361]
[63.80630112 237.51811218]
[59.83420563 251.98263550]
[55.86211014 266.44714355]
[52.86733627 281.14514160]
[50.86331940 296.01068115]
[48.85930634 310.87622070]
[46.85529327 325.74172974]
[44.85128021 340.60726929]
[42.84726715 355.47280884]
[57.55897141 358.42599487]
[72.05123901 362.31570435]
[86.26451111 367.12594604]
[100.14039612 372.83697510]
[113.62185669 379.42529297]
[126.65349579 386.86383057]
[139.18177795 395.12203979]
[151.15521240 404.16595459]
[162.52459717 413.95843506]
[173.24320984 424.45925903]
[183.26699829 435.62521362]
[192.55479431 447.41049194]
[201.06842041 459.76663208]
[208.77288818 472.64282227]
[215.63655090 485.98620605]
[221.63119507 499.74194336]
[226.73217773 513.85345459]
[230.91854858 528.26287842]
[234.17309570 542.91082764]
[236.48246765 557.73724365]
[237.83714294 572.68115234]
[238.23158264 587.68115234]
[237.66415405 602.67559814]
[236.13719177 617.60290527]
[233.65696716 632.40173340]
[230.23367310 647.01116943]
[225.88137817 661.37127686]
[220.61796570 675.42309570]
[214.46507263 689.10876465]
[207.44795227 702.37207031]
[199.59548950 715.15856934]
[190.93991089 727.41564941]
[181.51678467 739.09301758]
[171.36486816 750.14263916]
[160.52584839 760.51910400]
[149.04426575 770.17980957]
[136.96731567 779.08502197]
[124.34461975 787.19818115]
[111.22804260 794.48590088]
[97.67148590 800.91827393]
[83.73065948 806.46887207]
[69.46284485 811.11486816]
[54.92667770 814.83715820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[74 156]
[75 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[86 149]
[87 148]
[88 147]
[89 134]
[90 133]
[91 132]
[92 131]
[94 128]
[95 127]
[96 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
