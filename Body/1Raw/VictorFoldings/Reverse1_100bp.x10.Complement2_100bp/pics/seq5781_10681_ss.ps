%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[145.89517212 520.44628906]
[140.61370850 506.33761597]
[138.60466003 491.40740967]
[139.96878052 476.40451050]
[144.63766479 462.08145142]
[152.37710571 449.15673828]
[162.79890442 438.27859497]
[175.38031006 429.99270630]
[189.49023438 424.71466064]
[187.48622131 409.84912109]
[185.48220825 394.98361206]
[183.47819519 380.11807251]
[181.47418213 365.25256348]
[179.47016907 350.38702393]
[177.46615601 335.52148438]
[175.46214294 320.65597534]
[173.45812988 305.79043579]
[170.27070618 302.23382568]
[169.28367615 296.63717651]
[171.62258911 290.45321655]
[170.06205750 275.53463745]
[168.50154114 260.61602783]
[166.94100952 245.69741821]
[163.40133667 231.12103271]
[157.94598389 217.14823914]
[152.49063110 203.17544556]
[147.03526306 189.20265198]
[141.57991028 175.22984314]
[136.12455750 161.25704956]
[128.65681458 148.24809265]
[119.34193420 136.49084473]
[110.02704620 124.73359680]
[100.71216583 112.97634125]
[91.05135345 101.50164032]
[81.05318451 90.31967163]
[71.05501556 79.13769531]
[61.05683899 67.95571899]
[48.24591827 66.45803833]
[40.14862061 56.93871307]
[40.69034576 44.85429764]
[30.85976410 33.52470779]
[21.02918434 22.19511414]
[11.19860268 10.86552048]
[1.36802173 -0.46407294]
[-8.46255875 -11.79366589]
[-16.45039177 -16.22450829]
[-18.35363197 -23.36589813]
[-22.21765137 -8.87212944]
[-35.89654541 -2.71681762]
[-49.30673981 -9.43743038]
[-52.56274414 -24.07978058]
[-43.26434708 -35.85007477]
[-28.26748657 -36.07237625]
[-37.04808807 -48.23383331]
[-45.82869339 -60.39528656]
[-53.38936996 -65.52110291]
[-54.64789963 -72.80381012]
[-63.24646378 -85.09465027]
[-71.84502411 -97.38549042]
[-85.08184052 -90.29161835]
[-99.06478119 -84.81313324]
[-113.59754181 -81.02694702]
[-128.47610474 -78.98620605]
[-143.49160767 -78.71956635]
[-158.43325806 -80.23077393]
[-173.09127808 -83.49860382]
[-187.25990295 -88.47718811]
[-200.74023438 -95.09663391]
[-213.34301758 -103.26401520]
[-224.89134216 -112.86466980]
[-235.22308350 -123.76382446]
[-244.19319153 -135.80847168]
[-251.67575073 -148.82951355]
[-257.56570435 -162.64416504]
[-261.78039551 -177.05850220]
[-264.26062012 -191.87014771]
[-264.97158813 -206.87117004]
[-263.90328979 -221.85099792]
[-261.07073975 -236.59931946]
[-256.51373291 -250.90910339]
[-250.29617310 -264.57943726]
[-242.50540161 -277.41845703]
[-233.25077820 -289.24588013]
[-222.66220093 -299.89572144]
[-210.88833618 -309.21838379]
[-198.09446716 -317.08306885]
[-184.46020508 -323.37936401]
[-170.17694092 -328.01882935]
[-155.44519043 -330.93637085]
[-140.47178650 -332.09103394]
[-125.46689606 -331.46661377]
[-110.64119720 -329.07183838]
[-96.20280457 -324.94033813]
[-82.35440826 -319.13015747]
[-69.29042816 -311.72280884]
[-57.19425201 -302.82232666]
[-46.23569870 -292.55358887]
[-36.56860352 -281.06082153]
[-28.32868385 -268.50537109]
[-21.63160896 -255.06343079]
[-16.57139778 -240.92373657]
[-13.21908760 -226.28480530]
[-11.62174034 -211.35212708]
[-11.80177975 -196.33534241]
[-13.75667858 -181.44525146]
[-17.45899391 -166.89089966]
[-22.85674858 -152.87660217]
[-29.87416840 -139.59909058]
[-38.41273880 -127.24477386]
[-48.35259247 -115.98708344]
[-59.55418777 -105.98405457]
[-50.95562363 -93.69321442]
[-42.35705948 -81.40237427]
[-33.66723633 -69.17588806]
[-24.88663292 -57.01443481]
[-16.10602951 -44.85297775]
[-6.87893152 -33.02671051]
[2.86703396 -21.62424660]
[12.69761467 -10.29465389]
[22.52819633 1.03493929]
[32.35877609 12.36453247]
[42.18935776 23.69412613]
[52.01993942 35.02371979]
[68.89221191 39.85004425]
[72.23881531 57.95754623]
[82.23698425 69.13951874]
[92.23516083 80.32149506]
[102.23332977 91.50347137]
[105.25108337 91.93087006]
[108.18002319 93.46575165]
[110.60964203 96.07733917]
[112.14659119 99.58362579]
[112.46942139 103.66146088]
[121.78430176 115.41870880]
[131.09918213 127.17596436]
[140.41406250 138.93321228]
[137.47601318 124.22377014]
[138.74371338 109.27742767]
[144.11718750 95.27294159]
[153.17265320 83.31474304]
[165.19598389 74.34591675]
[179.23893738 69.07377625]
[194.19403076 67.91410828]
[208.88186646 70.95837402]
[222.14408875 77.96647644]
[232.93478394 88.38573456]
[240.40293884 101.39444733]
[243.95960999 115.96668243]
[243.32427979 130.95321655]
[238.54707336 145.17216492]
[230.00471497 157.50213623]
[218.37092590 166.97074890]
[204.56315613 172.83128357]
[189.67037964 174.62152100]
[174.86708069 172.20030212]
[161.32070923 165.75856018]
[150.09735107 155.80169678]
[155.55270386 169.77449036]
[161.00807190 183.74728394]
[166.46342468 197.72009277]
[171.91877747 211.69288635]
[177.37414551 225.66567993]
[179.07507324 210.76243591]
[185.24085999 197.08825684]
[195.28381348 185.94648743]
[208.24671936 178.39909363]
[222.89401245 175.16543579]
[237.82963562 176.55372620]
[251.62998962 182.43165588]
[262.97973633 192.23896790]
[270.79708862 205.04087830]
[274.33691406 219.61721802]
[273.26187134 234.57864380]
[267.67437744 248.49913025]
[258.10702515 260.05187988]
[245.47172546 268.13574219]
[230.97276306 271.98019409]
[215.99209595 271.21887207]
[201.95758057 265.92428589]
[190.20692444 256.60107422]
[181.85961914 244.13688660]
[183.42013550 259.05551147]
[184.98066711 273.97409058]
[186.54118347 288.89270020]
[188.32365417 303.78643799]
[190.32766724 318.65194702]
[192.33168030 333.51748657]
[194.33569336 348.38299561]
[196.33970642 363.24853516]
[198.34371948 378.11407471]
[200.34773254 392.97958374]
[202.35174561 407.84512329]
[204.35575867 422.71066284]
[219.35964966 424.06387329]
[233.68606567 428.72232056]
[246.61642456 436.45239258]
[257.50213623 446.86627197]
[265.79718018 459.44165039]
[271.08547974 473.54772949]
[273.10174561 488.47698975]
[271.74490356 503.48052979]
[267.08297729 517.80584717]
[259.34979248 530.73431396]
[248.93325806 541.61749268]
[236.35586548 549.90948486]
[222.24850464 555.19433594]
[207.31877136 557.20703125]
[192.31555176 555.84655762]
[177.99137878 551.18115234]
[165.06477356 543.44482422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 193]
[10 192]
[11 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 136]
[31 135]
[32 134]
[33 133]
[34 128]
[35 127]
[36 126]
[37 125]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[45 118]
[47 117]
[53 116]
[54 115]
[55 114]
[57 113]
[58 112]
[59 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
