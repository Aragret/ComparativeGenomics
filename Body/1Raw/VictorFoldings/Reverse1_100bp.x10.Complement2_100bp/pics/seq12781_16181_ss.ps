%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[200.00747681 615.16217041]
[196.63519287 600.53356934]
[194.71301270 585.64495850]
[194.25946045 570.63958740]
[195.27888489 555.66198730]
[197.76148987 540.85650635]
[201.68333435 526.36560059]
[207.00668335 512.32891846]
[213.68025208 498.88159180]
[221.63975525 486.15313721]
[230.80856323 474.26617432]
[241.09835815 463.33517456]
[252.41003418 453.46539307]
[264.63467407 444.75189209]
[257.16693115 431.74295044]
[249.69918823 418.73397827]
[242.23144531 405.72503662]
[234.76370239 392.71609497]
[230.46946716 390.62597656]
[227.44262695 385.81607056]
[227.27391052 379.20675659]
[220.19679260 365.98123169]
[213.11968994 352.75570679]
[206.04258728 339.53018188]
[202.79214478 338.16381836]
[200.04200745 335.15518188]
[198.55686951 330.75659180]
[198.95977783 325.55227661]
[192.48028564 312.02395630]
[186.00079346 298.49560547]
[179.52128601 284.96725464]
[173.04179382 271.43890381]
[166.56230164 257.91055298]
[160.08280945 244.38221741]
[147.60685730 236.24588013]
[148.62384033 220.45738220]
[142.14434814 206.92904663]
[135.66484070 193.40069580]
[124.36366272 189.08679199]
[118.85477448 177.86912537]
[122.58097076 165.52091980]
[116.30361176 151.89759827]
[101.44917297 142.55349731]
[103.29000854 124.23156738]
[96.81050873 110.70322418]
[90.23048401 97.22348785]
[83.55028534 83.79311371]
[76.87009430 70.36273193]
[70.24634552 64.07276154]
[70.19209290 56.68230057]
[63.71260071 43.15395737]
[57.23310471 29.62561226]
[42.59828186 24.29084206]
[36.21987152 10.47887230]
[41.39594650 -3.44031620]
[34.91645050 -16.96866226]
[28.43695450 -30.49700737]
[21.95746040 -44.02535248]
[10.07379627 -49.03946686]
[4.95551777 -60.44065094]
[8.84888268 -71.89352417]
[-6.23308420 -75.03047180]
[-16.45649910 -86.31475830]
[-18.05606842 -101.27822876]
[-10.62674904 -114.16012573]
[-16.90410995 -127.78343964]
[-23.18147087 -141.40675354]
[-35.98389435 -150.70237732]
[-34.28295898 -165.49954224]
[-40.56032181 -179.12284851]
[-54.97804642 -174.88645935]
[-69.85896301 -172.79454041]
[-84.88588715 -172.89169312]
[-99.73851776 -175.17582703]
[-114.10026550 -179.59828186]
[-127.66500854 -186.06477356]
[-140.14361572 -194.43746948]
[-151.27011108 -204.53791809]
[-160.80732727 -216.15080261]
[-168.55198669 -229.02862549]
[-174.33898926 -242.89688110]
[-178.04501343 -257.45996094]
[-179.59103394 -272.40747070]
[-178.94412231 -287.42077637]
[-176.11805725 -302.17987061]
[-171.17306519 -316.37017822]
[-164.21458435 -329.68923950]
[-155.39089966 -341.85314941]
[-144.89010620 -352.60260010]
[-132.93601990 -361.70852661]
[-119.78343964 -368.97680664]
[-105.71273041 -374.25250244]
[-91.02380371 -377.42315674]
[-76.02974701 -378.42123413]
[-61.05016327 -377.22540283]
[-46.40434647 -373.86120605]
[-32.40446854 -368.40029907]
[-19.34894180 -360.95913696]
[-7.51604462 -351.69628906]
[2.84200525 -340.80920410]
[11.50442505 -328.52993774]
[18.28657341 -315.12023926]
[23.04389191 -300.86590576]
[25.67497444 -286.07080078]
[26.12373924 -271.05026245]
[24.38062477 -256.12445068]
[20.48278236 -241.61154175]
[14.51329422 -227.82086182]
[6.59940243 -215.04634094]
[-3.09020901 -203.56030273]
[-14.34900475 -193.60754395]
[-26.93700409 -185.40022278]
[-20.65964317 -171.77690125]
[-8.30621910 -163.45571899]
[-9.55815411 -147.68411255]
[-3.28079343 -134.06080627]
[2.99656725 -120.43748474]
[17.61598206 -117.71521759]
[27.95138359 -106.77705383]
[29.88682556 -91.67382812]
[22.47219849 -78.17088318]
[37.32664108 -68.82677460]
[35.48580551 -50.50484848]
[41.96530151 -36.97650146]
[48.44479752 -23.44815826]
[54.92429352 -9.91981220]
[69.01415253 -5.22817945]
[75.77799988 8.39918423]
[70.76145172 23.14611626]
[77.24094391 36.67446136]
[83.72044373 50.20280838]
[90.30046844 63.68254089]
[96.98066711 77.11291504]
[103.66085815 90.54328918]
[109.78495026 95.78429413]
[110.33885956 104.22372437]
[116.81835175 117.75207520]
[128.70201111 122.76618958]
[133.82029724 134.16737366]
[129.92692566 145.62023926]
[136.20428467 159.24356079]
[151.48272705 169.52220154]
[149.19319153 186.92120361]
[155.67268372 200.44953918]
[162.15219116 213.97789001]
[175.09158325 223.08187866]
[173.61114502 237.90272522]
[180.09065247 251.43106079]
[186.57014465 264.95941162]
[193.04963684 278.48776245]
[199.52912903 292.01611328]
[206.00862122 305.54443359]
[212.48812866 319.07278442]
[219.26811218 332.45306396]
[226.34521484 345.67858887]
[233.42233276 358.90411377]
[240.49943542 372.12963867]
[247.77265930 385.24835205]
[255.24040222 398.25729370]
[262.70812988 411.26623535]
[270.17587280 424.27520752]
[277.64361572 437.28414917]
[291.33279419 431.12191772]
[305.56008911 426.33117676]
[320.18844604 422.95800781]
[335.07696533 421.03494263]
[350.08230591 420.58047485]
[365.05993652 421.59899902]
[379.86560059 424.08071899]
[394.35675049 428.00170898]
[408.39376831 433.32418823]
[421.84146118 439.99694824]
[434.57037354 447.95571899]
[446.45788574 457.12380981]
[457.38952637 467.41293335]
[467.25997925 478.72402954]
[475.97421265 490.94815063]
[483.44830322 503.96752930]
[489.61026001 517.65686035]
[494.40072632 531.88421631]
[497.77359009 546.51263428]
[499.69638062 561.40118408]
[500.15051270 576.40655518]
[499.13168335 591.38415527]
[496.64968872 606.18981934]
[492.72842407 620.68084717]
[487.40563965 634.71777344]
[480.73260498 648.16534424]
[472.77362061 660.89410400]
[463.60528564 672.78143311]
[453.31591797 683.71282959]
[442.00463867 693.58306885]
[429.78036499 702.29705811]
[416.76080322 709.77087402]
[403.07138062 715.93255615]
[388.84390259 720.72277832]
[374.21542358 724.09533691]
[359.32681274 726.01782227]
[344.32144165 726.47167969]
[329.34384155 725.45251465]
[314.53826904 722.97021484]
[300.04730225 719.04864502]
[286.01049805 713.72558594]
[272.56304932 707.05230713]
[259.83447266 699.09307861]
[247.94732666 689.92449951]
[237.01611328 679.63488770]
[227.14610291 668.32342529]
[218.43235779 656.09893799]
[210.95878601 643.07928467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 162]
[15 161]
[16 160]
[17 159]
[18 158]
[21 157]
[22 156]
[23 155]
[24 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[36 145]
[37 144]
[38 143]
[41 141]
[42 140]
[44 137]
[45 136]
[46 134]
[47 133]
[48 132]
[50 131]
[51 130]
[52 129]
[55 126]
[56 125]
[57 124]
[58 123]
[61 121]
[65 117]
[66 116]
[67 115]
[69 113]
[70 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
