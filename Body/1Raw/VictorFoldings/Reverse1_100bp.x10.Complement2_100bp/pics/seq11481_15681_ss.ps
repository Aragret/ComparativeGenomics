%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[83.23609924 553.58148193]
[79.87721252 537.89404297]
[90.15898132 525.57879639]
[90.15898132 510.57879639]
[90.15898132 495.57879639]
[90.15898132 480.57879639]
[90.15898132 465.57879639]
[89.71237946 450.58544922]
[88.81956482 435.61203003]
[79.63407135 447.47064209]
[65.26521301 451.77597046]
[51.07221222 446.92224121]
[42.34870911 434.71978760]
[42.34835434 419.71978760]
[51.07127762 407.51687622]
[65.26404572 402.66247559]
[79.63311005 406.96713257]
[88.81956482 418.82641602]
[89.71237946 403.85299683]
[90.49369812 388.87335205]
[91.16348267 373.88830566]
[91.83326721 358.90328979]
[92.50305176 343.91824341]
[92.94966125 328.92489624]
[93.17298889 313.92654419]
[93.17298889 298.92654419]
[92.94966125 283.92822266]
[92.72633362 268.92987061]
[84.26769257 260.28247070]
[83.95888519 247.78892517]
[92.51071167 238.13339233]
[92.51071167 223.13339233]
[92.51071167 208.13339233]
[79.54338837 200.80441284]
[71.93498993 187.88278198]
[71.81515503 172.78802490]
[79.31620026 159.57321167]
[92.51071167 151.83679199]
[92.51071167 136.83679199]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[78.56604004 68.28273773]
[70.48201752 53.96686935]
[70.71925354 37.62182236]
[79.11832428 23.70738792]
[93.30572510 15.97240353]
[93.30572510 0.97240371]
[93.30572510 -14.02759647]
[93.30572510 -29.02759552]
[93.30572510 -44.02759552]
[85.56842804 -57.82777023]
[93.30572510 -70.55503845]
[85.56842804 -84.35520935]
[93.30572510 -97.08248138]
[93.30572510 -112.08248138]
[81.01506042 -103.48368073]
[66.58662415 -107.58493805]
[60.65653229 -121.36296082]
[67.59622192 -134.66110229]
[82.29001617 -137.67648315]
[93.90548706 -128.18774414]
[95.02113342 -143.14619446]
[81.50202942 -150.03890991]
[71.67829132 -161.55139160]
[67.02321625 -175.90910339]
[68.21653748 -190.91455078]
[75.04536438 -204.28361511]
[86.44137573 -213.99322510]
[100.64778137 -218.58747864]
[101.76343536 -233.54594421]
[102.87908173 -248.50439453]
[88.90856171 -254.27346802]
[77.42077637 -264.06494141]
[69.53259277 -276.91036987]
[66.00580597 -291.54516602]
[67.17356110 -306.53311157]
[72.90895844 -320.40740967]
[82.63868713 -331.81411743]
[95.40029907 -339.64425659]
[109.93743896 -343.14178467]
[111.05308533 -358.10021973]
[112.16873169 -373.05868530]
[109.68626404 -381.84930420]
[113.41397858 -388.23101807]
[114.75221252 -403.17120361]
[116.09044647 -418.11138916]
[117.42868042 -433.05157471]
[118.43293762 -448.01791382]
[119.10272217 -463.00292969]
[119.77250671 -477.98797607]
[120.44229126 -492.97302246]
[121.11208344 -507.95806885]
[121.78186798 -522.94311523]
[122.45165253 -537.92816162]
[123.12143707 -552.91314697]
[109.02597809 -558.44464111]
[97.49192047 -568.25500488]
[89.77039337 -581.28027344]
[86.69897461 -596.10742188]
[88.61081696 -611.12823486]
[95.29855347 -624.71325684]
[106.03672791 -635.38891602]
[119.66056824 -641.99725342]
[134.69224548 -643.82135010]
[149.50123596 -640.66345215]
[162.48117065 -632.86602783]
[172.22409058 -621.27490234]
[177.67315674 -607.14739990]
[178.23730469 -592.01593018]
[173.85530090 -577.52191162]
[165.00251770 -565.23748779]
[152.63922119 -556.49523926]
[138.10647583 -552.24340820]
[137.43669128 -537.25836182]
[136.76690674 -522.27331543]
[136.09712219 -507.28826904]
[135.42733765 -492.30322266]
[134.75755310 -477.31820679]
[134.08776855 -462.33316040]
[133.41798401 -447.34811401]
[135.51475525 -444.51336670]
[136.34266663 -440.52215576]
[135.37313843 -435.98199463]
[132.36886597 -431.71331787]
[131.03062439 -416.77313232]
[129.69239807 -401.83294678]
[128.35415649 -386.89276123]
[127.12718964 -371.94302368]
[126.01153564 -356.98458862]
[124.89588928 -342.02612305]
[138.75337219 -336.41085815]
[150.21224976 -326.77426147]
[158.14224243 -314.05044556]
[161.75605774 -299.47885132]
[160.68757629 -284.48348999]
[155.02885437 -270.53378296]
[145.32244873 -259.00064087]
[132.50927734 -251.02157593]
[117.83753204 -247.38874817]
[116.72188568 -232.43029785]
[115.60623932 -217.47183228]
[128.97395325 -210.82101440]
[138.80354309 -199.52833557]
[143.57363892 -185.29418945]
[142.52783203 -170.27772522]
[135.79441833 -156.76940918]
[124.37158966 -146.84156799]
[109.97958374 -142.03054810]
[108.86393738 -127.07209778]
[108.30572510 -112.08248138]
[108.30572510 -97.08248138]
[116.04302979 -84.35520935]
[108.30572510 -70.55503845]
[116.04302979 -57.82777023]
[108.30572510 -44.02759552]
[108.30572510 -29.02759552]
[108.30572510 -14.02759647]
[108.30572510 0.97240371]
[108.30572510 15.97240353]
[120.55755615 22.00645256]
[129.05509949 32.78237915]
[132.09524536 46.23252869]
[129.02912903 59.74464035]
[120.39949799 70.66918182]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[107.51071167 136.83679199]
[107.51071167 151.83679199]
[120.70522308 159.57321167]
[128.20626831 172.78802490]
[128.08642578 187.88278198]
[120.47803497 200.80441284]
[107.51071167 208.13339233]
[107.51071167 223.13339233]
[107.51071167 238.13339233]
[117.08539581 253.86257935]
[107.72467041 268.70654297]
[107.94799805 283.70489502]
[108.17132568 298.70321655]
[111.22850800 304.56539917]
[110.91352844 310.23971558]
[108.17132568 314.14987183]
[107.94799805 329.14822388]
[110.82928467 335.09881592]
[110.34550476 340.76123047]
[107.48809052 344.58801270]
[106.81830597 359.57305908]
[106.14852142 374.55810547]
[105.47873688 389.54315186]
[108.22183228 398.25595093]
[104.68578339 404.74581909]
[103.79296875 419.71920776]
[103.79296875 434.71920776]
[104.68578339 449.69262695]
[107.20434570 453.22967529]
[108.35104370 457.00454712]
[108.21955872 460.55676270]
[107.04351044 463.50354004]
[105.15898132 465.57879639]
[105.15898132 480.57879639]
[105.15898132 495.57879639]
[105.15898132 510.57879639]
[105.15898132 525.57879639]
[115.44075012 537.89404297]
[112.08187103 553.58148193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 199]
[9 198]
[18 197]
[19 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 188]
[25 187]
[26 184]
[27 183]
[28 182]
[31 180]
[32 179]
[33 178]
[38 173]
[39 172]
[40 171]
[41 170]
[43 169]
[44 168]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[55 156]
[57 154]
[58 153]
[64 152]
[65 151]
[72 144]
[73 143]
[74 142]
[83 133]
[84 132]
[85 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
