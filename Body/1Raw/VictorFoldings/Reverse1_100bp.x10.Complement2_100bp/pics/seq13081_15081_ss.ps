%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[56.70753860 718.37127686]
[42.15539169 722.03576660]
[27.37890244 724.65277100]
[12.45336819 726.20892334]
[-2.54515481 726.69635010]
[-17.54023552 726.11254883]
[-32.45545959 724.46044922]
[-47.21482468 721.74859619]
[-61.74312210 717.99066162]
[-75.96630859 713.20587158]
[-89.81192017 707.41864014]
[-103.20938873 700.65838623]
[-116.09044647 692.95953369]
[-128.38945007 684.36145020]
[-140.04374695 674.90783691]
[-150.99392700 664.64691162]
[-161.18418884 653.63092041]
[-170.56262207 641.91601562]
[-179.08142090 629.56195068]
[-186.69717407 616.63165283]
[-193.37109375 603.19091797]
[-199.06915283 589.30834961]
[-203.76231384 575.05468750]
[-207.42666626 560.50250244]
[-210.04353333 545.72601318]
[-211.59957886 530.80047607]
[-212.08689880 515.80194092]
[-211.50297546 500.80685425]
[-209.85079956 485.89163208]
[-207.13877869 471.13229370]
[-203.38076782 456.60403442]
[-198.59587097 442.38088989]
[-192.80850220 428.53530884]
[-186.04814148 415.13790894]
[-178.34924316 402.25689697]
[-169.75102234 389.95794678]
[-160.29731750 378.30374146]
[-150.03630066 367.35363770]
[-139.02024841 357.16345215]
[-127.30529785 347.78512573]
[-114.95114899 339.26641846]
[-102.02075958 331.65075684]
[-88.58001709 324.97695923]
[-74.69741821 319.27899170]
[-60.44369888 314.58593750]
[-45.89149475 310.92169189]
[-31.11496544 308.30496216]
[-16.18940544 306.74899292]
[-1.19087589 306.26181030]
[13.80419540 306.84585571]
[28.71939659 308.49813843]
[43.47872162 311.21026611]
[47.23501968 296.68820190]
[50.99132156 282.16613770]
[46.68771744 267.90682983]
[57.63432693 256.48394775]
[61.39062500 241.96188354]
[65.14692688 227.43981934]
[68.57798767 212.83749390]
[71.68209839 198.16220093]
[74.78620911 183.48689270]
[66.47168732 171.18225098]
[69.41064453 156.25518799]
[82.37326050 147.61758423]
[85.47737122 132.94227600]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[89.34180450 65.95244598]
[75.08540344 61.28820801]
[68.18001556 47.97221756]
[72.58135223 33.63247681]
[85.76813507 26.48343849]
[100.18637848 30.62039948]
[107.57652283 43.67257690]
[112.61344147 29.54354668]
[117.65036011 15.41451645]
[122.68727112 1.28548694]
[127.72418976 -12.84354305]
[126.78203583 -17.97768593]
[127.80151367 -22.50691986]
[130.22372437 -25.78533173]
[133.31437683 -27.48243523]
[138.97715759 -41.37246323]
[144.63995361 -55.26248932]
[150.30273438 -69.15251923]
[155.96553040 -83.04254150]
[161.62831116 -96.93257141]
[167.29109192 -110.82259369]
[172.95388794 -124.71262360]
[178.51310730 -138.64442444]
[183.96846008 -152.61721802]
[170.91427612 -160.06074524]
[159.08303833 -169.32571411]
[148.72694397 -180.21466064]
[140.06674194 -192.49548340]
[133.28700256 -205.90641785]
[128.53224182 -220.16159058]
[125.90381622 -234.95716858]
[125.45774841 -249.97778320]
[127.20354462 -264.90325928]
[131.10398865 -279.41549683]
[137.07595825 -293.20510864]
[144.99214172 -305.97817993]
[154.68382263 -317.46249390]
[165.94441223 -327.41323853]
[178.53387451 -335.61828613]
[192.18389893 -341.90280151]
[206.60350037 -346.13278198]
[221.48535156 -348.21807861]
[236.51223755 -348.11422729]
[251.36384583 -345.82348633]
[265.72363281 -341.39465332]
[279.28549194 -334.92211914]
[291.76037598 -326.54385376]
[302.88238525 -316.43847656]
[312.41442871 -304.82131958]
[320.15335083 -291.94006348]
[325.93417358 -278.06924438]
[329.63369751 -263.50451660]
[331.17309570 -248.55633545]
[330.51950073 -233.54331970]
[327.68685913 -218.78546143]
[322.73556519 -204.59735107]
[315.77114868 -191.28140259]
[306.94204712 -179.12142944]
[296.43646240 -168.37663269]
[284.47833252 -159.27603149]
[271.32254028 -152.01362610]
[257.24948120 -146.74418640]
[242.55912781 -143.58004761]
[227.56463623 -142.58865356]
[212.58558655 -143.79113770]
[197.94126892 -147.16186523]
[192.48590088 -133.18907166]
[192.98149109 -125.81504059]
[186.84391785 -119.04983521]
[181.18112183 -105.15981293]
[175.51834106 -91.26978302]
[169.85554504 -77.37976074]
[164.19276428 -63.48973083]
[158.52998352 -49.59970474]
[152.86718750 -35.70967484]
[147.20440674 -21.81964874]
[141.85322571 -7.80662632]
[136.81629944 6.32240295]
[131.77938843 20.45143318]
[126.74246979 34.58046341]
[121.70555115 48.70949173]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[100.15267181 136.04638672]
[97.04856110 150.72167969]
[105.40338898 163.86834717]
[102.04632568 178.70697021]
[89.46150970 186.59100342]
[86.35739899 201.26631165]
[83.25328827 215.94160461]
[84.87292480 220.90385437]
[84.46769714 225.52868652]
[82.50520325 229.10131836]
[79.66898346 231.19612122]
[75.91268158 245.71818542]
[72.15638733 260.24023438]
[76.19131470 275.53826904]
[65.51338196 285.92245483]
[61.75708008 300.44451904]
[58.00077820 314.96655273]
[72.22404480 319.75112915]
[86.06974030 325.53817749]
[99.46730804 332.29821777]
[112.34848785 339.99682617]
[124.64762878 348.59475708]
[136.30206299 358.04818726]
[147.25239563 368.30895996]
[157.44284058 379.32479858]
[166.82144165 391.03952026]
[175.34043884 403.39346313]
[182.95639038 416.32369995]
[189.63050842 429.76428223]
[195.32878113 443.64675903]
[200.02215576 457.90036011]
[203.68673706 472.45248413]
[206.30383301 487.22894287]
[207.86010742 502.15447998]
[208.34765625 517.15301514]
[207.76396179 532.14807129]
[206.11201477 547.06329346]
[203.40022278 561.82269287]
[199.64242554 576.35101318]
[194.85775757 590.57427979]
[189.07060242 604.41992188]
[182.31044006 617.81744385]
[174.61174011 630.69854736]
[166.01371765 642.99761963]
[156.56018066 654.65197754]
[146.29933167 665.60223389]
[135.28343201 675.79260254]
[123.56862640 685.17108154]
[111.21461487 693.69000244]
[98.28433990 701.30584717]
[84.84370422 707.97985840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 176]
[53 175]
[54 174]
[56 172]
[57 171]
[58 170]
[59 166]
[60 165]
[61 164]
[64 161]
[65 160]
[66 159]
[67 158]
[71 157]
[72 156]
[73 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
