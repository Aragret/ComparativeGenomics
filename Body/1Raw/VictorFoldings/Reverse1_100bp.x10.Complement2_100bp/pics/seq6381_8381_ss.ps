%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[68.72898865 551.60125732]
[68.32694244 566.65625000]
[64.69747925 581.27270508]
[58.01036072 594.76702881]
[48.57834625 606.50799561]
[36.84259796 615.94653320]
[23.35201454 622.64117432]
[8.73757362 626.27880859]
[-6.31718016 626.68927002]
[-21.10810852 623.85333252]
[-34.94341278 617.90362549]
[-47.17599106 609.11853027]
[-57.23370361 597.90887451]
[-64.64613342 584.79895020]
[-69.06658173 570.40197754]
[-70.28830719 555.39123535]
[-68.25415802 540.46893311]
[-63.05928421 526.33288574]
[-54.94665146 513.64434814]
[-44.29570007 502.99673462]
[-31.60460472 494.88809204]
[-17.46694183 489.69766235]
[-2.54396105 487.66821289]
[12.46636581 488.89465332]
[16.86736298 474.55480957]
[13.20476341 460.11752319]
[24.65051270 449.19482422]
[29.05150986 434.85498047]
[33.45250702 420.51513672]
[37.85350800 406.17529297]
[42.04051971 391.77151489]
[46.01261520 377.30697632]
[49.98471069 362.84246826]
[53.84901428 348.34875488]
[57.60531616 333.82672119]
[52.01180649 317.19302368]
[65.02783203 304.16748047]
[68.56750488 289.59109497]
[72.10717773 275.01473999]
[75.64685059 260.43835449]
[79.18652344 245.86198425]
[82.61758423 231.25965881]
[85.93984222 216.63220215]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[94.95018005 42.51409149]
[87.62718964 28.48966980]
[95.73999786 15.99840927]
[94.40176392 1.05822396]
[91.29765320 -13.61707878]
[88.19354248 -28.29238129]
[85.08943176 -42.96768188]
[81.98532104 -57.64298630]
[78.88121033 -72.31829071]
[73.16997528 -58.44811249]
[61.72658539 -48.75023270]
[47.10753250 -45.39117813]
[32.57874298 -49.12137222]
[21.38599205 -59.10747910]
[16.02976608 -73.11857605]
[17.70665932 -88.02455139]
[26.04204941 -100.49536896]
[39.17378998 -107.74501038]
[54.16821671 -108.15390015]
[67.67553711 -101.63068390]
[76.67818451 -89.63264465]
[76.00839996 -104.61768341]
[75.33861542 -119.60272217]
[74.66883087 -134.58776855]
[66.32303619 -148.02868652]
[73.48431396 -161.08874512]
[65.13852692 -174.52966309]
[72.29980469 -187.58973694]
[71.63002014 -202.57476807]
[70.96023560 -217.55981445]
[63.06391144 -204.80645752]
[50.19243240 -197.10418701]
[35.22132111 -196.17369080]
[21.49515915 -202.22286987]
[12.08040810 -213.90029907]
[9.08034706 -228.59722900]
[13.16519547 -243.03031921]
[23.42238998 -253.97517395]
[37.56044769 -258.98669434]
[52.42088699 -256.94528198]
[64.68385315 -248.30702209]
[71.60976410 -235.00167847]
[73.39223480 -249.89538574]
[75.17469788 -264.78912354]
[76.95716095 -279.68283081]
[63.06650543 -285.61801147]
[51.41152573 -295.22726440]
[42.93703842 -307.73165894]
[38.33003998 -322.11749268]
[37.96398926 -337.21856689]
[41.86856842 -351.81072998]
[49.72724915 -364.71102905]
[60.90295792 -374.87371826]
[74.48973846 -381.47494507]
[89.38616180 -383.97958374]
[104.38465118 -382.18457031]
[118.26934052 -376.23544312]
[129.91465759 -366.61447144]
[138.37658691 -354.10156250]
[142.96913147 -339.71112061]
[143.32000732 -324.60968018]
[139.40077209 -310.02145386]
[131.52912903 -297.12905884]
[120.34321594 -286.97760010]
[106.74981689 -280.39001465]
[91.85088348 -277.90036011]
[90.06841278 -263.00665283]
[88.28594971 -248.11293030]
[86.50348663 -233.21920776]
[85.94527435 -218.22959900]
[86.61505890 -203.24455261]
[87.28484344 -188.25952148]
[95.58272552 -175.89042664]
[88.46935272 -161.75852966]
[96.76724243 -149.38945007]
[89.65386963 -135.25755310]
[90.32365417 -120.27251434]
[90.99343872 -105.28747559]
[91.66322327 -90.30243683]
[93.55651855 -75.42240143]
[96.66062164 -60.74709702]
[99.76473236 -46.07179260]
[102.86884308 -31.39649010]
[105.97295380 -16.72118950]
[109.07706451 -2.04588628]
[113.46141815 -16.39083099]
[122.43226624 -28.41264534]
[134.93569946 -36.69901657]
[149.50285339 -40.27647781]
[164.42237854 -38.72474289]
[177.94154358 -32.22611237]
[188.47212219 -21.54404068]
[194.77702332 -7.93344402]
[196.11552429 7.00671721]
[192.33038330 21.52128792]
[183.86628723 33.90510941]
[171.71759033 42.70334625]
[157.31149292 46.88238525]
[142.34040833 45.95128250]
[128.56315613 40.01942062]
[117.59823608 29.78366852]
[110.73334503 16.44501495]
[118.08827972 29.39701271]
[109.94352722 42.96069717]
[112.88648224 49.74013901]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[111.61275482 190.20573425]
[124.70128632 182.87835693]
[139.66729736 181.86914062]
[153.62107849 187.37294006]
[163.86839294 198.32705688]
[168.43063354 212.61642456]
[166.42689514 227.48197937]
[158.24407959 240.05343628]
[145.46215820 247.90344238]
[130.54910278 249.51626587]
[116.38442230 244.58050537]
[105.70307922 234.04917908]
[100.56729889 219.95445251]
[97.24504089 234.58190918]
[98.39603424 243.64353943]
[93.76289368 249.40165710]
[90.22322083 263.97802734]
[86.68354797 278.55441284]
[83.14387512 293.13076782]
[79.60420990 307.70715332]
[85.63601685 319.10803223]
[82.38773346 331.17584229]
[72.12737274 337.58300781]
[68.37107849 352.10507202]
[69.25175476 361.19692993]
[64.44923401 366.81454468]
[60.47713852 381.27908325]
[56.50504303 395.74359131]
[57.80437088 402.22613525]
[55.91801834 407.58697510]
[52.19335556 410.57629395]
[47.79235458 424.91613770]
[43.39135742 439.25598145]
[38.99036026 453.59582520]
[42.33817291 469.05877686]
[31.20721054 478.95581055]
[26.80621338 493.29565430]
[39.92026138 500.70077515]
[51.13552475 510.75222778]
[59.92744827 522.97991943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 207]
[25 206]
[27 204]
[28 203]
[29 202]
[30 201]
[31 198]
[32 197]
[33 196]
[34 194]
[35 193]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 184]
[43 183]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[52 162]
[53 161]
[54 160]
[55 158]
[57 156]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[75 133]
[76 132]
[77 131]
[78 130]
[80 128]
[82 126]
[83 125]
[84 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
