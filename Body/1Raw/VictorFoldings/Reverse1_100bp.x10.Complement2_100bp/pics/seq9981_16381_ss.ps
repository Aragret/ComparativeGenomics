%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[134.23904419 566.50097656]
[128.76846313 552.50744629]
[125.29871368 537.88873291]
[123.89733887 522.92938232]
[124.59162140 507.92059326]
[127.36804962 493.15451050]
[132.17257690 478.91851807]
[138.91166687 465.48980713]
[147.45416260 453.12969971]
[157.63377380 442.07882690]
[169.25233459 432.55230713]
[182.08372498 424.73553467]
[195.87814331 418.78070068]
[191.90603638 404.31616211]
[187.93394470 389.85165405]
[183.96185303 375.38711548]
[179.77484131 360.98333740]
[175.37384033 346.64349365]
[162.13583374 339.91366577]
[157.46832275 325.43371582]
[164.61694336 311.59411621]
[160.21594238 297.25424194]
[146.97793579 290.52441406]
[142.31040955 276.04446411]
[149.45904541 262.20486450]
[145.05804443 247.86500549]
[140.65704346 233.52516174]
[136.25604248 219.18531799]
[131.85504150 204.84547424]
[127.45404816 190.50561523]
[116.32308960 180.60859680]
[119.67089844 165.14566040]
[114.42418671 151.09318542]
[108.35034943 137.37791443]
[102.27651215 123.66265106]
[96.20268250 109.94738770]
[89.02731323 96.77490997]
[80.79850769 84.23350525]
[72.56970215 71.69210815]
[64.24775696 59.21231461]
[50.10101700 52.12850571]
[49.36653519 37.25201797]
[40.95191574 24.83452415]
[32.53729630 12.41702938]
[24.12267876 -0.00046657]
[15.70805931 -12.41796207]
[17.66823006 2.45341086]
[15.76532078 17.33221817]
[10.12554550 31.23160553]
[1.12296867 43.22967148]
[-10.64529991 52.53063202]
[-24.39871407 58.51758575]
[-39.22505951 60.79343796]
[-54.14095688 59.20724106]
[-68.15708923 53.86420441]
[-80.34381104 45.11870956]
[-89.89282990 33.55081177]
[-96.17079163 19.92777252]
[-98.76129913 5.15315771]
[-97.49253845 -9.79308701]
[-92.44865417 -23.91963005]
[-83.96418762 -36.28950882]
[-72.60189056 -46.08227539]
[-59.11538315 -52.64840698]
[-44.39917374 -55.55239487]
[-29.42933655 -54.60163498]
[-15.19876575 -49.85918045]
[-2.65132570 -41.63958740]
[7.38367033 -30.48380089]
[3.41157413 -44.94832611]
[-7.70389080 -56.20696640]
[-3.61306310 -70.52877808]
[-7.58515930 -84.99330139]
[-10.51382446 -70.28198242]
[-17.10256195 -56.80650711]
[-26.91436768 -45.46064758]
[-39.29845810 -36.99694061]
[-53.43343735 -31.97675323]
[-68.38179016 -30.73305321]
[-83.15203857 -33.34833527]
[-96.76453400 -39.64913177]
[-108.31639862 -49.21753693]
[-117.04145050 -61.41891098]
[-122.36096954 -75.44398499]
[-123.92214966 -90.36251831]
[-121.62143707 -105.18502808]
[-115.61143494 -118.92838287]
[-106.29074860 -130.68103027]
[-94.27760315 -139.66348267]
[-80.36878204 -145.27993774]
[-65.48680115 -147.15789795]
[-50.61873627 -145.17279053]
[-36.75072861 -139.45628357]
[-24.80259895 -130.38754272]
[-15.56681728 -118.56804657]
[-9.65456390 -104.77682495]
[-8.76174831 -119.75022888]
[-7.86893272 -134.72363281]
[-6.97611666 -149.69703674]
[-20.89632225 -155.69734192]
[-31.92268181 -166.09904480]
[-38.72370911 -179.64605713]
[-40.47814178 -194.70254517]
[-36.97413254 -209.45034790]
[-28.63480186 -222.10861206]
[-16.46716499 -231.14875793]
[-1.94052398 -235.47917175]
[13.19095898 -234.57693481]
[27.10008240 -228.55097961]
[38.10725403 -218.12899780]
[44.88330460 -204.56945801]
[46.60998917 -189.50976562]
[43.07880783 -174.76844788]
[34.71615982 -162.12557983]
[22.53188515 -153.10786438]
[7.99728918 -148.80422974]
[7.10447311 -133.83081055]
[6.21165752 -118.85741425]
[5.31884146 -103.88400269]
[6.87936449 -88.96540070]
[10.85146046 -74.50087738]
[21.68281555 -64.27683258]
[17.87609863 -48.92042160]
[21.84819412 -34.45589828]
[28.12555504 -20.83258057]
[36.54017258 -8.41508484]
[44.95479202 4.00241041]
[53.36941147 16.41990662]
[61.78403091 28.83740044]
[75.32889557 35.03302765]
[76.66525269 50.79769516]
[83.01979828 54.57149124]
[85.11109924 63.46329880]
[93.33990479 76.00469971]
[101.56871796 88.54610443]
[101.84439850 73.54863739]
[108.97711182 60.35301590]
[121.37339783 51.90718079]
[136.26388550 50.09794617]
[150.32200623 55.32950592]
[160.40715027 66.43311310]
[164.26625061 80.92819214]
[161.03718567 95.57650757]
[151.44132996 107.10559082]
[137.62243652 112.93980408]
[122.66767120 111.77578735]
[109.91794586 103.87355042]
[115.99178314 117.58881378]
[122.06561279 131.30407715]
[128.13945007 145.01934814]
[132.59678650 130.69691467]
[144.55204773 121.63758850]
[159.54624939 121.22026825]
[171.98689270 129.60061646]
[177.23394775 143.65296936]
[173.33038330 158.13613892]
[161.73213196 167.64825439]
[146.76506042 168.64155579]
[134.01074219 160.74465942]
[145.45649719 171.66735840]
[141.79389954 186.10462952]
[146.19490051 200.44447327]
[150.59588623 214.78431702]
[154.99688721 229.12416077]
[159.39788818 243.46401978]
[163.79888916 257.80386353]
[177.48042297 265.25054932]
[181.73939514 279.85589600]
[174.55578613 292.85327148]
[178.95678711 307.19311523]
[192.63832092 314.63980103]
[196.89729309 329.24514771]
[189.71368408 342.24249268]
[194.11468506 356.58233643]
[198.68669128 361.35815430]
[199.96812439 366.89483643]
[198.42637634 371.41503906]
[202.39846802 385.87954712]
[206.37057495 400.34408569]
[210.34266663 414.80859375]
[225.24366760 412.88339233]
[240.26757812 413.05084229]
[255.12197876 415.30764771]
[269.51770020 419.60989380]
[283.17453003 425.87384033]
[295.82662964 433.97756958]
[307.22775269 443.76330566]
[317.15594482 455.04058838]
[325.41793823 467.58990479]
[331.85293579 481.16699219]
[336.33569336 495.50753784]
[338.77890015 510.33239746]
[339.13504028 525.35302734]
[337.39718628 540.27703857]
[333.59915161 554.81390381]
[327.81484985 568.68072510]
[320.15689087 581.60748291]
[310.77432251 593.34265137]
[299.84982300 603.65777588]
[287.59597778 612.35198975]
[274.25137329 619.25616455]
[260.07574463 624.23583984]
[245.34498596 627.19409180]
[230.34588623 628.07342529]
[215.37039185 626.85662842]
[200.71000671 623.56738281]
[186.65008545 618.26971436]
[173.46432495 611.06683350]
[161.40937805 602.09887695]
[150.71990967 591.54040527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 180]
[14 179]
[15 178]
[16 177]
[17 174]
[18 173]
[21 170]
[22 169]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[32 159]
[33 150]
[34 149]
[35 148]
[36 147]
[37 135]
[38 134]
[39 133]
[40 131]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[69 124]
[70 123]
[72 121]
[73 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
