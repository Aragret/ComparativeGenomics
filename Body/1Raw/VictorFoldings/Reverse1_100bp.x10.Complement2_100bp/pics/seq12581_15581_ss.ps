%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[35.60824966 449.03356934]
[23.68738747 459.40991211]
[7.92687225 458.23443604]
[-2.32286119 446.20452881]
[-0.98082817 430.45733643]
[11.15676689 420.33535767]
[12.27241516 405.37689209]
[13.38806438 390.41845703]
[14.50371265 375.45999146]
[15.61936092 360.50155640]
[16.73501015 345.54309082]
[17.85065842 330.58462524]
[8.12500286 342.00442505]
[-5.97412682 347.12445068]
[-20.76125145 344.60632324]
[-32.37105179 335.10827637]
[-37.76875687 321.11312866]
[-35.54341507 306.27911377]
[-26.27672768 294.48382568]
[-12.39098454 288.81054688]
[2.48411465 290.74224854]
[14.46025467 299.77395630]
[20.40676880 313.54397583]
[23.72902870 298.91653442]
[27.05128860 284.28906250]
[30.37354851 269.66159058]
[33.69580841 255.03413391]
[37.01806641 240.40667725]
[32.29181671 226.28181458]
[42.89347076 214.53807068]
[32.40547943 225.26197815]
[18.49267006 230.86854553]
[3.49958920 230.41299438]
[-10.04716301 223.97206116]
[-19.86472130 212.63117981]
[-24.29865456 198.30148315]
[-22.60176659 183.39778137]
[-15.06001472 170.43159485]
[-2.94431448 161.58796692]
[11.70362473 158.35719299]
[26.41536903 161.28372192]
[38.71173096 169.87438965]
[46.52055359 182.68150330]
[48.52579880 197.54850769]
[46.60474396 182.77830505]
[59.26734924 173.29310608]
[65.34118652 159.57785034]
[71.41501617 145.86257935]
[77.48885345 132.14730835]
[83.56268311 118.43204498]
[89.63652039 104.71677399]
[76.35779572 111.69355774]
[61.40616989 110.48986816]
[49.41456604 101.47868347]
[44.09871292 87.45221710]
[47.10578918 72.75672150]
[57.50401306 61.94576263]
[72.07138824 58.36922455]
[86.29405212 63.13534164]
[95.76495361 74.76728058]
[97.54940033 89.66101074]
[105.40115356 76.88016510]
[106.03224182 61.07155228]
[119.28695679 54.27729416]
[127.13871002 41.49645233]
[127.76979828 25.68783569]
[141.02450562 18.89357948]
[148.87626648 6.11273623]
[156.72802734 -6.66810656]
[164.57977295 -19.44894981]
[172.43153381 -32.22978973]
[172.57223511 -37.44776917]
[174.50692749 -41.66798782]
[177.55513000 -44.37418365]
[180.93009949 -45.39496613]
[189.34471130 -57.81246185]
[197.75933838 -70.22995758]
[206.17395020 -82.64745331]
[214.58856201 -95.06494904]
[223.00318909 -107.48244476]
[218.44108582 -117.12666321]
[218.29487610 -127.71372223]
[222.52392578 -137.33238220]
[230.30380249 -144.27403259]
[240.18605042 -147.33613586]
[250.36767578 -146.03016663]
[259.32836914 -158.05953979]
[268.28906250 -170.08891296]
[277.24975586 -182.11830139]
[286.21044922 -194.14767456]
[285.12026978 -206.99967957]
[292.83129883 -216.83450317]
[304.78057861 -218.71636963]
[313.91937256 -230.61099243]
[323.05816650 -242.50563049]
[332.19699097 -254.40026855]
[321.24606323 -264.66888428]
[311.35440063 -275.96142578]
[302.61724854 -288.16915894]
[295.11874390 -301.17453003]
[288.93112183 -314.85223389]
[284.11395264 -329.07061768]
[280.71365356 -343.69265747]
[278.76296997 -358.57760620]
[278.28063965 -373.58209229]
[279.27139282 -388.56158447]
[281.72558594 -403.37182617]
[285.61968994 -417.87020874]
[290.91610718 -431.91708374]
[297.56390381 -445.37716675]
[305.49902344 -458.12081909]
[314.64501953 -470.02532959]
[324.91384888 -480.97601318]
[336.20660400 -490.86746216]
[348.41452026 -499.60437012]
[361.42001343 -507.10260010]
[375.09786987 -513.28997803]
[389.31631470 -518.10687256]
[403.93844604 -521.50683594]
[418.82342529 -523.45727539]
[433.82791138 -523.93927002]
[448.80740356 -522.94824219]
[463.61758423 -520.49371338]
[478.11590576 -516.59936523]
[492.16265869 -511.30264282]
[505.62261963 -504.65457153]
[518.36608887 -496.71920776]
[530.27044678 -487.57296753]
[541.22094727 -477.30392456]
[551.11212158 -466.01098633]
[559.84881592 -453.80288696]
[567.34680176 -440.79724121]
[573.53387451 -427.11926270]
[578.35046387 -412.90069580]
[581.75018311 -398.27850342]
[583.70031738 -383.39349365]
[584.18200684 -368.38900757]
[583.19067383 -353.40954590]
[580.73583984 -338.59939575]
[576.84118652 -324.10116577]
[571.54418945 -310.05450439]
[564.89587402 -296.59469604]
[556.96026611 -283.85134888]
[547.81378174 -271.94720459]
[537.54449463 -260.99691772]
[526.25134277 -251.10592651]
[514.04309082 -242.36950684]
[501.03729248 -234.87178040]
[487.35919189 -228.68498230]
[473.14053345 -223.86866760]
[458.51828003 -220.46923828]
[443.63320923 -218.51943970]
[428.62872314 -218.03802490]
[413.64929199 -219.02964783]
[398.83917236 -221.48475647]
[384.34103394 -225.37971497]
[370.29449463 -230.67700195]
[356.83480835 -237.32559204]
[344.09161377 -245.26145935]
[334.95281982 -233.36682129]
[325.81402588 -221.47219849]
[316.67520142 -209.57756042]
[315.31463623 -192.08139038]
[298.23983765 -185.18698120]
[289.27914429 -173.15759277]
[280.31845093 -161.12821960]
[271.35775757 -149.09884644]
[262.39706421 -137.06945801]
[266.62222290 -118.05204773]
[255.32473755 -101.80795288]
[235.42068481 -99.06782532]
[227.00605774 -86.65032959]
[218.59144592 -74.23283386]
[210.17681885 -61.81533813]
[201.76220703 -49.39784241]
[193.34759521 -36.98034668]
[185.21237183 -24.37803650]
[177.36061096 -11.59719372]
[169.50886536 1.18364894]
[161.65710449 13.96449184]
[153.80535889 26.74533463]
[153.73587036 41.63977814]
[139.91955566 49.34820557]
[132.06779480 62.12904739]
[131.99832153 77.02349091]
[118.18199158 84.73191833]
[110.33023834 97.51276398]
[103.35178375 110.79061127]
[97.27795410 124.50587463]
[91.20411682 138.22114563]
[85.13028717 151.93641663]
[79.05644989 165.65167236]
[72.98262024 179.36694336]
[74.46923065 195.11814880]
[62.24106598 203.62234497]
[57.52093124 217.86033630]
[62.00955200 233.03144836]
[51.64552689 243.72894287]
[48.32326889 258.35641479]
[45.00100708 272.98385620]
[41.67874908 287.61132812]
[38.35648727 302.23876953]
[35.03422928 316.86624146]
[32.80911255 331.70028687]
[31.69346428 346.65875244]
[30.57781410 361.61718750]
[29.46216583 376.57565308]
[28.34651756 391.53408813]
[27.23086929 406.49255371]
[26.11521912 421.45101929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[30 196]
[44 195]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[51 188]
[61 187]
[62 186]
[64 184]
[65 183]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[86 168]
[87 167]
[88 166]
[89 165]
[90 164]
[93 162]
[94 161]
[95 160]
[96 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
