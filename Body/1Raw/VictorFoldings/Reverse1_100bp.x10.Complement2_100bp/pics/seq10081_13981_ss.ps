%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[89.36994171 690.15307617]
[77.34986877 681.13226318]
[66.80860901 670.42059326]
[57.98165131 658.25744629]
[51.06620407 644.91448975]
[46.21675491 630.68981934]
[43.54164505 615.90130615]
[43.10063171 600.87921143]
[44.90357590 585.95916748]
[48.91019440 571.47454834]
[55.03097534 557.74890137]
[63.12918472 545.08880615]
[73.02390289 533.77722168]
[84.49407196 524.06677246]
[97.28345490 516.17443848]
[111.10632324 510.27645874]
[125.65386963 506.50466919]
[124.09335327 491.58605957]
[122.42180634 476.67950439]
[120.63934326 461.78576660]
[118.85688019 446.89205933]
[117.07440948 431.99835205]
[115.29194641 417.10461426]
[113.50948334 402.21090698]
[101.67822266 393.23553467]
[99.65838623 378.15658569]
[109.15278625 365.80773926]
[107.37031555 350.91403198]
[105.25253296 349.07742310]
[103.73465729 346.29125977]
[103.18199158 342.77984619]
[103.87198639 338.89547729]
[105.95239258 335.08419800]
[105.05957794 320.11077881]
[93.78352356 310.44714355]
[92.66477966 295.27468872]
[102.87736511 283.51284790]
[101.98454285 268.53942871]
[101.09172821 253.56604004]
[100.19891357 238.59262085]
[99.30609894 223.61921692]
[95.77005005 217.12937927]
[98.51314545 208.41654968]
[97.84336090 193.43151855]
[87.61569977 179.17100525]
[96.23719025 162.89982605]
[95.34437561 147.92642212]
[94.45156097 132.95301819]
[93.55874634 117.97961426]
[82.79138947 108.28372192]
[81.92896271 93.81989288]
[91.46784973 82.91320038]
[90.57503510 67.93979645]
[89.68222046 52.96639252]
[79.79155731 64.24357605]
[64.98568726 66.64902496]
[52.03364944 59.08300018]
[46.85694122 45.00458527]
[51.82228470 30.85024452]
[64.65959167 23.09115028]
[79.49981689 25.27465630]
[89.55891418 36.40420532]
[90.22869873 21.41916656]
[90.89849091 6.43412781]
[91.56827545 -8.55091095]
[92.23806000 -23.53594971]
[92.90784454 -38.52098846]
[93.57762909 -53.50602722]
[94.02423096 -68.49937439]
[94.24755859 -83.49771118]
[83.51997375 -94.79180908]
[83.96011353 -109.99907684]
[94.79341888 -120.15659332]
[95.01674652 -135.15492249]
[95.24007416 -150.15325928]
[95.46340179 -165.15159607]
[95.46340179 -180.15159607]
[95.24007416 -195.14993286]
[95.01674652 -210.14828491]
[87.07483673 -223.83172607]
[94.62178802 -236.67277527]
[94.39846039 -251.67111206]
[94.17513275 -266.66946411]
[93.84015656 -281.66571045]
[93.39355469 -296.65905762]
[92.94694519 -311.65240479]
[92.50034332 -326.64575195]
[92.05373383 -341.63912964]
[91.60713196 -356.63247681]
[91.16052246 -371.62582397]
[90.71392059 -386.61917114]
[81.87840271 -396.01577759]
[81.81509399 -408.51296997]
[90.01251984 -417.40841675]
[89.78919220 -432.40673828]
[75.27565765 -436.63153076]
[62.65310287 -444.94793701]
[53.04392242 -456.61648560]
[47.30255890 -470.59960938]
[45.93952560 -485.65396118]
[49.07602310 -500.44091797]
[56.43316269 -513.64562988]
[67.35674286 -524.09387207]
[80.87545776 -530.85675049]
[95.78721619 -533.33276367]
[110.76609039 -531.30181885]
[124.48016357 -524.94445801]
[135.70999146 -514.82604980]
[143.45701599 -501.84625244]
[147.03239441 -487.15924072]
[146.11817932 -472.07098389]
[140.79570007 -457.92312622]
[131.53819275 -445.97363281]
[119.16884613 -437.28509521]
[104.78752899 -432.63006592]
[105.01085663 -417.63174438]
[114.80939484 -403.07305908]
[105.70726776 -387.06576538]
[106.15387726 -372.07241821]
[106.60047913 -357.07907104]
[107.04708862 -342.08572388]
[107.49369049 -327.09237671]
[107.94029999 -312.09902954]
[108.38690186 -297.10568237]
[108.83351135 -282.11233521]
[112.17476654 -275.52008057]
[109.17347717 -266.89279175]
[109.39680481 -251.89443970]
[109.62013245 -236.89610291]
[117.54605865 -224.28544617]
[110.01508331 -210.37161255]
[110.23841095 -195.37326050]
[110.46173859 -180.37492371]
[113.20394135 -176.46476746]
[113.51892090 -170.79045105]
[110.46173859 -164.92826843]
[110.23841095 -149.92993164]
[110.01508331 -134.93159485]
[109.79175568 -119.93326569]
[120.31782532 -109.45770264]
[120.30500031 -94.24407196]
[109.24589539 -83.27438354]
[109.02256775 -68.27604675]
[111.64714050 -64.28597260]
[111.79302979 -58.60480118]
[108.56266785 -52.83624268]
[107.89288330 -37.85120392]
[107.22309875 -22.86616516]
[106.55331421 -7.88112593]
[105.88352966 7.10391283]
[105.21373749 22.08895111]
[104.54395294 37.07398987]
[104.65562439 52.07357407]
[105.54843903 67.04698181]
[106.44125366 82.02038574]
[117.20861053 91.71627808]
[118.07103729 106.18010712]
[108.53215027 117.08679962]
[109.42496490 132.06019592]
[110.31777954 147.03361511]
[111.21060181 162.00701904]
[120.32196808 171.13639832]
[120.75733948 183.62617493]
[112.82839966 192.76173401]
[113.49818420 207.74676514]
[114.27950287 222.72640991]
[115.17231750 237.69981384]
[116.06513977 252.67321777]
[116.95795441 267.64663696]
[117.85076904 282.62002563]
[129.38865662 293.08496094]
[130.08079529 308.28283691]
[120.03298187 319.21795654]
[120.92580414 334.19137573]
[122.26403809 349.13156128]
[124.04650116 364.02526855]
[136.18682861 373.78491211]
[137.78233337 388.91464233]
[128.40319824 400.42843628]
[130.18566895 415.32214355]
[131.96812439 430.21588135]
[133.75059509 445.10958862]
[135.53306580 460.00329590]
[137.31552124 474.89703369]
[141.44252014 483.04598999]
[139.01194763 490.02554321]
[140.57247925 504.94415283]
[155.58566284 505.62380981]
[170.32984924 508.53359985]
[184.47563171 513.60845947]
[197.70700073 520.73504639]
[209.72836304 529.75421143]
[220.27114868 540.46435547]
[229.09983826 552.62628174]
[236.01718140 565.96820068]
[240.86865234 580.19213867]
[243.54586792 594.98034668]
[243.98902893 610.00238037]
[242.18820190 624.92266846]
[238.18365479 639.40783691]
[232.06481934 653.13439941]
[223.96841431 665.79559326]
[214.07531738 677.10858154]
[202.60652161 686.82067871]
[189.81826782 694.71484375]
[175.99623108 700.61480713]
[161.44921875 704.38867188]
[146.50221252 705.95214844]
[131.48912048 705.27032471]
[116.74536133 702.35845947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 187]
[18 186]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[27 176]
[28 175]
[33 174]
[34 173]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[43 165]
[44 164]
[46 161]
[47 160]
[48 159]
[49 158]
[52 155]
[53 154]
[54 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 143]
[70 142]
[73 139]
[74 138]
[75 137]
[76 136]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[83 127]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
