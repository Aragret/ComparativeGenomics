%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[102.68316650 685.71752930]
[89.80961609 677.92285156]
[78.70430756 667.76611328]
[69.79409790 655.63787842]
[63.42147827 642.00427246]
[59.83139038 627.38928223]
[59.16183090 612.35473633]
[61.43853378 597.47845459]
[66.57398987 583.33233643]
[74.37080383 570.46002197]
[84.52928925 559.35638428]
[96.65898132 550.44812012]
[110.29364777 544.07769775]
[124.90920258 540.48999023]
[124.23941803 525.50494385]
[123.56963348 510.51992798]
[122.89984894 495.53488159]
[122.11852264 480.55523682]
[121.22570801 465.58181763]
[120.33289337 450.60842896]
[109.05683899 440.94476318]
[107.93809509 425.77233887]
[118.15067291 414.01049805]
[117.25785828 399.03707886]
[116.36504364 384.06369019]
[115.24939728 369.10522461]
[113.91116333 354.16503906]
[112.57292938 339.22485352]
[101.01414490 329.90121460]
[99.44416046 314.76879883]
[109.30201721 302.70809937]
[107.96378326 287.76791382]
[95.10736084 280.29461670]
[89.04505920 266.52099609]
[92.29357910 251.64482117]
[103.81188965 241.41571045]
[102.47365570 226.47552490]
[101.13542175 211.53533936]
[99.79718781 196.59516907]
[96.06947327 190.21347046]
[98.55194092 181.42283630]
[97.43629456 166.46438599]
[86.01760864 156.96969604]
[84.67309570 141.81558228]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[85.24273682 106.82658386]
[84.46299744 95.20619965]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[88.97615814 41.12509155]
[77.21909332 50.44020462]
[62.57212830 47.20501709]
[55.83246231 33.80438232]
[61.96833038 20.11675644]
[76.45659637 16.23214149]
[88.61624908 25.01268768]
[85.61495972 16.38540077]
[88.95621490 9.79314899]
[89.40281677 -5.20020056]
[89.84942627 -20.19355011]
[90.29602814 -35.18690109]
[90.74263763 -50.18025208]
[91.18924713 -65.17359924]
[91.63584900 -80.16695404]
[92.08245850 -95.16030121]
[81.52420807 -106.61286163]
[82.19071198 -121.81188965]
[93.17404938 -131.80699158]
[93.62065125 -146.80033875]
[83.06240845 -158.25289917]
[83.72891235 -173.45191956]
[94.71224976 -183.44702148]
[95.15885162 -198.44036865]
[95.60546112 -213.43371582]
[88.28247070 -227.45814514]
[96.39527893 -239.94940186]
[96.84188843 -254.94274902]
[97.28849030 -269.93609619]
[97.73509979 -284.92944336]
[87.52826691 -273.93762207]
[72.83260345 -270.93136597]
[59.12922668 -277.03198242]
[51.52915955 -289.96408081]
[52.86703873 -304.90429688]
[62.64386749 -316.28030396]
[77.21312714 -319.84915161]
[91.14085388 -314.27972412]
[99.23263550 -301.64816284]
[101.45775604 -316.48220825]
[103.68286896 -331.31625366]
[105.90798950 -346.15026855]
[107.69045258 -361.04400635]
[109.02868652 -375.98419189]
[110.36692047 -390.92437744]
[111.70515442 -405.86456299]
[113.04338837 -420.80474854]
[98.98217773 -426.32369995]
[87.04626465 -435.58169556]
[78.20323181 -447.82824707]
[73.16995239 -462.07052612]
[72.35445404 -477.15402222]
[75.82283783 -491.85595703]
[83.29393768 -504.98452759]
[94.16211700 -515.47546387]
[107.54632568 -522.47827148]
[122.36157990 -525.42529297]
[137.40686035 -524.07763672]
[151.46252441 -518.54455566]
[163.38912964 -509.27459717]
[172.21984863 -497.01916504]
[177.23883057 -482.77185059]
[178.03916931 -467.68753052]
[174.55601501 -452.98910522]
[167.07173157 -439.86804199]
[156.19302368 -429.38803101]
[142.80177307 -422.39865112]
[127.98357391 -419.46649170]
[126.64533997 -404.52630615]
[125.30710602 -389.58612061]
[123.96887207 -374.64596558]
[122.63063812 -359.70578003]
[124.32250977 -357.47064209]
[125.23096466 -354.43069458]
[125.04501343 -350.88095093]
[123.56611633 -347.22341919]
[120.74203491 -343.92517090]
[118.51691437 -329.09112549]
[116.29180145 -314.25708008]
[114.06668091 -299.42303467]
[112.72844696 -284.48284912]
[112.28183746 -269.48950195]
[111.83523560 -254.49615479]
[111.38862610 -239.50279236]
[118.74356079 -226.55079651]
[110.59880829 -212.98712158]
[110.15219879 -197.99375916]
[109.70559692 -183.00041199]
[120.07453918 -172.36929321]
[119.83520508 -157.15754700]
[108.61400604 -146.35372925]
[108.16739655 -131.36038208]
[118.53633881 -120.72926331]
[118.29700470 -105.51750946]
[107.07580566 -94.71369171]
[106.62919617 -79.72034454]
[106.18259430 -64.72699738]
[105.73598480 -49.73364639]
[105.28938293 -34.74029541]
[104.84277344 -19.74694443]
[104.39617157 -4.75359440]
[103.94956207 10.23975563]
[103.61458588 25.23601532]
[103.94956207 40.23227310]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[116.22325897 98.91139984]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[121.36030579 139.07934570]
[122.27864075 154.26522827]
[112.39474487 165.34873962]
[113.51039886 180.30718994]
[114.73737335 195.25692749]
[116.07560730 210.19711304]
[117.41384125 225.13729858]
[118.75207520 240.07748413]
[131.90493774 248.09672546]
[137.74552917 262.15875244]
[134.22756958 276.79049683]
[122.90396881 286.42968750]
[124.24220276 301.36987305]
[136.08656311 311.48663330]
[137.23089600 326.65716553]
[127.51310730 337.88662720]
[128.85134888 352.82681274]
[130.18957520 367.76699829]
[133.67430115 373.38555908]
[133.78222656 379.06756592]
[131.33845520 383.17086792]
[132.23126221 398.14425659]
[133.12408447 413.11767578]
[144.66197205 423.58261108]
[145.35411072 438.78048706]
[135.30630493 449.71560669]
[136.19911194 464.68902588]
[137.09193420 479.66241455]
[140.72657776 488.04257202]
[137.88488770 494.86508179]
[138.55467224 509.85012817]
[139.22445679 524.83514404]
[139.89424133 539.82019043]
[154.77159119 542.08966064]
[168.92022705 547.21826172]
[181.79631042 555.00885010]
[192.90490723 565.16192627]
[201.81903076 577.28729248]
[208.19607544 590.91888428]
[211.79089355 605.53265381]
[212.46531677 620.56701660]
[210.19342041 635.44403076]
[205.06254578 649.59179688]
[197.26989746 662.46661377]
[187.11502075 673.57354736]
[174.98820496 682.48571777]
[161.35560608 688.86059570]
[146.74121094 692.45300293]
[131.70675659 693.12500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 194]
[15 193]
[16 192]
[17 191]
[18 189]
[19 188]
[20 187]
[23 184]
[24 183]
[25 182]
[26 179]
[27 178]
[28 177]
[31 174]
[32 173]
[36 169]
[37 168]
[38 167]
[39 166]
[41 165]
[42 164]
[45 161]
[46 160]
[49 158]
[50 157]
[51 156]
[52 155]
[58 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[70 143]
[71 142]
[74 139]
[75 138]
[76 137]
[78 135]
[79 134]
[80 133]
[81 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
