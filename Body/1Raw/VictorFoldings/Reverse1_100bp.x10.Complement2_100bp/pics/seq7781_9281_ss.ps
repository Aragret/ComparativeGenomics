%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[108.65074921 560.00183105]
[105.84431458 545.16857910]
[107.14508057 530.12823486]
[112.45650482 515.99700928]
[121.38446045 503.82351685]
[133.26641846 494.51107788]
[147.22067261 488.75076294]
[145.43821716 473.85705566]
[143.65574646 458.96331787]
[141.87327576 444.06961060]
[140.09082031 429.17590332]
[130.89593506 417.45822144]
[136.93852234 402.83642578]
[135.15606689 387.94268799]
[133.26277161 373.06265259]
[131.14814758 358.21246338]
[119.05490875 349.59335327]
[116.58700562 334.58120728]
[125.70952606 321.95513916]
[123.48440552 307.12109375]
[113.94473267 295.68240356]
[119.54929352 280.88714600]
[110.00962067 269.44845581]
[115.61418152 254.65321350]
[113.38906860 239.81916809]
[103.84939575 228.38046265]
[109.45395660 213.58520508]
[107.22883606 198.75117493]
[105.00372314 183.91712952]
[102.77860260 169.08308411]
[100.55348969 154.24903870]
[91.01380920 142.81033325]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[80.45669556 86.84085083]
[66.52923584 92.41094208]
[51.95980453 88.84280396]
[42.18243408 77.46725464]
[40.84384537 62.52710342]
[48.44329834 49.59465027]
[62.14638138 43.49338150]
[76.84218597 46.49892044]
[87.05004120 57.49133682]
[86.60343170 42.49798584]
[86.15682983 27.50463486]
[85.71022034 12.51128578]
[82.32669067 4.02662039]
[85.37025452 -2.70825171]
[85.14692688 -17.70658875]
[84.92359924 -32.70492554]
[84.70027161 -47.70326233]
[71.92676544 -59.65552902]
[71.75301361 -76.81025696]
[83.79815674 -88.54708862]
[83.35155487 -103.54043579]
[82.90494537 -118.53379059]
[71.68374634 -129.33760071]
[71.44441223 -144.54936218]
[81.81335449 -155.18048096]
[81.36674500 -170.17382812]
[80.92014313 -185.16717529]
[72.08462524 -194.56379700]
[72.02131653 -207.06098938]
[80.21874237 -215.95642090]
[79.99541473 -230.95475769]
[79.77208710 -245.95309448]
[79.54875946 -260.95144653]
[66.99496460 -267.12112427]
[58.36533356 -278.04565430]
[55.29921341 -291.55776978]
[58.33937073 -305.00793457]
[66.83690643 -315.78384399]
[79.08873749 -321.81790161]
[79.08873749 -336.81790161]
[68.54438019 -326.14941406]
[53.62158966 -324.62948608]
[41.14285278 -332.95303345]
[36.81328583 -347.31460571]
[42.61230469 -361.14828491]
[55.88868332 -368.12954712]
[70.57263184 -365.06661987]
[79.95145416 -353.35806274]
[81.51197815 -368.27667236]
[83.07250214 -383.19528198]
[84.63302612 -398.11386108]
[86.19355011 -413.03247070]
[78.30719757 -429.67239380]
[89.16142273 -443.46200562]
[90.49965668 -458.40219116]
[91.83789062 -473.34237671]
[85.36263275 -487.77780151]
[94.20455170 -499.76403809]
[95.54278564 -514.70422363]
[96.88101959 -529.64440918]
[82.70951080 -534.82421875]
[70.36209106 -543.49621582]
[60.68061447 -555.06909180]
[54.32519150 -568.75378418]
[51.72914124 -583.61730957]
[53.06946564 -598.64611816]
[58.25478363 -612.81561279]
[66.93154907 -625.15972900]
[78.50816345 -634.83673096]
[92.19531250 -641.18682861]
[107.05979156 -643.77716064]
[122.08811188 -642.43103027]
[136.25561523 -637.24023438]
[148.59634399 -628.55871582]
[158.26887512 -616.97839355]
[164.61372375 -603.28875732]
[167.19830322 -588.42327881]
[165.84635925 -573.39550781]
[160.65010071 -559.22998047]
[151.96382141 -546.89263916]
[140.37973022 -537.22454834]
[126.68767548 -530.88500977]
[111.82120514 -528.30615234]
[110.48297119 -513.36596680]
[109.14473724 -498.42578125]
[115.71571350 -485.05899048]
[106.77807617 -472.00411987]
[105.43984222 -457.06393433]
[104.10160828 -442.12374878]
[111.61471558 -432.64324951]
[110.62207794 -420.18539429]
[101.11215210 -411.47195435]
[99.55162811 -396.55334473]
[97.99110413 -381.63473511]
[96.43058014 -366.71615601]
[94.87005615 -351.79754639]
[94.08873749 -336.81790161]
[94.08873749 -321.81790161]
[108.27614594 -314.08291626]
[116.67520905 -300.16848755]
[116.91245270 -283.82342529]
[108.82842255 -269.50756836]
[94.54709625 -261.17477417]
[94.77042389 -246.17642212]
[94.99375153 -231.17808533]
[95.21707916 -216.17974854]
[105.01561737 -201.62104797]
[95.91349030 -185.61378479]
[96.36009979 -170.62043762]
[96.80670166 -155.62707520]
[107.79003906 -145.63198853]
[108.45654297 -130.43295288]
[97.89829254 -118.98039246]
[98.34490204 -103.98704529]
[98.79151154 -88.99369812]
[109.31400299 -81.55684662]
[113.69728088 -69.23333740]
[110.12998199 -56.44721985]
[99.69861603 -47.92658997]
[99.92194366 -32.92825317]
[100.14527130 -17.92991638]
[100.36859894 -2.93157935]
[100.70357513 12.06468010]
[101.15017700 27.05802917]
[101.59678650 42.05138016]
[102.04338837 57.04473114]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[121.15125275 138.28970337]
[115.38753510 152.02392578]
[117.61264801 166.85795593]
[119.83776855 181.69200134]
[122.06288147 196.52604675]
[124.28800201 211.36009216]
[133.98683167 223.85981750]
[128.22311401 237.59403992]
[130.44822693 252.42808533]
[140.14706421 264.92782593]
[134.38334656 278.66204834]
[144.08216858 291.16177368]
[138.31845093 304.89599609]
[140.54356384 319.73004150]
[152.96908569 329.12387085]
[155.01435852 344.19940186]
[145.98219299 355.98733521]
[150.34999084 364.00982666]
[148.12829590 371.05865479]
[152.37617493 379.14526367]
[150.04977417 386.16021729]
[151.83224487 401.05395508]
[161.15461731 413.83691406]
[154.98452759 427.39343262]
[156.76699829 442.28713989]
[158.54946899 457.18087769]
[160.33192444 472.07458496]
[162.11439514 486.96829224]
[177.03387451 489.27304077]
[190.77780151 495.51861572]
[202.32629395 505.24151611]
[210.82237244 517.72027588]
[215.63558960 532.02880859]
[216.40873718 547.10546875]
[213.08448792 561.83135986]
[205.90948486 575.11376953]
[195.41616821 585.96697998]
[182.38322449 593.58575439]
[167.77778625 597.40454102]
[152.68365479 597.14013672]
[138.22093201 592.81207275]
[125.46284485 584.74151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[13 190]
[14 189]
[15 187]
[16 185]
[19 182]
[20 181]
[22 179]
[24 177]
[25 176]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[33 168]
[34 167]
[36 165]
[37 164]
[46 163]
[47 162]
[48 161]
[49 160]
[51 159]
[52 158]
[53 157]
[54 156]
[57 152]
[58 151]
[59 150]
[62 147]
[63 146]
[64 145]
[67 143]
[68 142]
[69 141]
[70 140]
[76 135]
[77 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
