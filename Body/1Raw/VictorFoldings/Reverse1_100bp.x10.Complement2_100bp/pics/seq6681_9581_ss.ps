%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[152.55110168 533.31378174]
[159.62252808 520.03564453]
[169.01359558 508.28308105]
[180.40444946 498.45642090]
[193.40710449 490.89035034]
[188.37017822 476.76129150]
[183.33326721 462.63226318]
[178.29635620 448.50323486]
[173.25942993 434.37420654]
[168.22251892 420.24517822]
[163.18560791 406.11614990]
[151.62382507 396.72604370]
[154.27783203 381.12902832]
[149.24092102 367.00000000]
[144.20401001 352.87097168]
[139.16708374 338.74194336]
[134.13017273 324.61291504]
[122.56838989 315.22277832]
[125.22240448 299.62576294]
[120.18548584 285.49673462]
[115.14857483 271.36770630]
[110.11165619 257.23867798]
[107.96775818 272.08468628]
[101.39757538 285.56921387]
[91.02733612 296.40701294]
[77.84546661 303.56512451]
[63.10837936 306.36123657]
[48.22072220 304.52886963]
[34.60148239 298.24267578]
[23.54877090 288.10177612]
[16.11605263 275.07278442]
[13.01177120 260.39752197]
[14.53180599 245.47473145]
[20.53127670 231.72677612]
[30.43835258 220.46401978]
[43.30875397 212.75993347]
[57.91575623 209.34886169]
[72.86711121 210.55589294]
[86.73775482 216.26599121]
[98.20562744 225.93490601]
[106.17812347 238.64210510]
[105.06247711 223.68365479]
[103.94682312 208.72520447]
[102.83117676 193.76675415]
[101.71553040 178.80828857]
[100.59987640 163.84983826]
[99.03935242 148.93124390]
[89.67104340 137.35177612]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[80.14869690 69.20989227]
[78.97069550 56.76818466]
[86.34181976 47.17688370]
[84.78129578 32.25827789]
[73.41132355 25.03759193]
[68.34991455 12.76597691]
[71.23772430 0.00891436]
[80.80192566 -8.62563610]
[79.46369171 -23.56582069]
[78.12545776 -38.50600433]
[76.78722382 -53.44618988]
[64.94286346 -63.56295776]
[63.79853439 -78.73348999]
[73.51631927 -89.96292877]
[72.17808533 -104.90311432]
[70.83985138 -119.84329987]
[69.50161743 -134.78349304]
[68.16338348 -149.72367859]
[62.10546494 -136.00137329]
[51.76962280 -125.13074493]
[38.37009811 -118.38888550]
[23.48105240 -116.56780243]
[8.85163784 -119.88144684]
[-3.79949737 -127.94052887]
[-12.98611069 -139.79826355]
[-17.62896729 -154.06164551]
[-17.18263054 -169.05500793]
[-11.69953442 -183.01693726]
[-1.82382679 -194.30722046]
[11.28430271 -201.59947205]
[26.08492470 -204.03701782]
[40.83927536 -201.33348083]
[53.81403351 -193.80647278]
[63.48492813 -182.34027100]
[68.71612549 -168.28038025]
[70.94124603 -183.11441040]
[73.16636658 -197.94845581]
[66.14146423 -208.76574707]
[68.30016327 -221.07524109]
[77.94798279 -228.37223816]
[80.39371490 -243.17150879]
[82.83943939 -257.97076416]
[85.28517151 -272.77005005]
[87.73089600 -287.56930542]
[90.17662048 -302.36859131]
[92.62235260 -317.16784668]
[78.81788635 -323.24136353]
[66.95803833 -332.55773926]
[57.78833389 -344.53134155]
[51.88518906 -358.40951538]
[49.61967468 -373.31985474]
[51.13420486 -388.32510376]
[56.33358002 -402.48199463]
[64.89095306 -414.90060425]
[76.26840973 -424.80032349]
[89.75075531 -431.55880737]
[104.49046326 -434.75125122]
[119.56099701 -434.17697144]
[134.01501465 -429.87203979]
[146.94390869 -422.10708618]
[157.53495789 -411.37020874]
[165.12242126 -398.33636475]
[169.22932434 -383.82482910]
[169.59750366 -368.74786377]
[166.20382690 -354.05316162]
[159.26161194 -340.66448975]
[149.20727539 -329.42346191]
[136.67280579 -321.03668213]
[122.44615936 -316.03134155]
[107.42162323 -314.72213745]
[104.97589111 -299.92285156]
[102.53016663 -285.12359619]
[100.08444214 -270.32431030]
[97.63871002 -255.52503967]
[95.19298553 -240.72576904]
[92.74725342 -225.92649841]
[99.80244446 -209.85816956]
[88.00040436 -195.72334290]
[85.77529144 -180.88929749]
[83.55017090 -166.05525208]
[83.10356903 -151.06190491]
[84.44180298 -136.12171936]
[85.78003693 -121.18153381]
[87.11827087 -106.24134827]
[88.45650482 -91.30116272]
[100.01528168 -81.97753143]
[101.58527374 -66.84511566]
[91.72740936 -54.78442383]
[93.06564331 -39.84424210]
[94.40387726 -24.90405464]
[95.74211121 -9.96387005]
[109.09661102 0.25846130]
[110.96260834 17.31228638]
[99.69990540 30.69775581]
[101.26042938 45.61635971]
[112.31874847 59.24281693]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[119.87244415 133.28033447]
[113.90488434 146.92723083]
[116.67955017 150.26716614]
[118.10382843 153.94628906]
[118.23690796 157.49842834]
[117.28329468 160.52452087]
[115.55833435 162.73419189]
[116.67398071 177.69264221]
[117.78962708 192.65110779]
[118.90528107 207.60955811]
[120.02092743 222.56800842]
[121.13657379 237.52645874]
[124.24068451 252.20176697]
[129.27760315 266.33078003]
[134.31451416 280.45980835]
[139.35144043 294.58883667]
[151.27349854 304.98959351]
[148.25920105 319.57598877]
[153.29611206 333.70501709]
[158.33303833 347.83404541]
[163.36994934 361.96307373]
[168.40686035 376.09210205]
[180.32891846 386.49282837]
[177.31463623 401.07925415]
[182.35154724 415.20828247]
[187.38847351 429.33731079]
[192.42538452 443.46633911]
[197.46229553 457.59536743]
[202.49922180 471.72439575]
[207.53613281 485.85342407]
[222.39273071 483.48782349]
[237.43104553 483.89263916]
[252.13885498 487.05410767]
[266.01525879 492.86447144]
[278.58758545 501.12591553]
[289.42764282 511.55700684]
[298.16619873 523.80249023]
[304.50567627 537.44531250]
[308.23013306 552.02069092]
[309.21267700 567.03234863]
[307.41989136 581.96893311]
[302.91284180 596.32165527]
[295.84497070 609.60168457]
[286.45709229 621.35681152]
[275.06887817 631.18652344]
[262.06826782 638.75610352]
[247.89802551 643.80767822]
[233.04078674 646.16931152]
[218.00257874 645.76043701]
[203.29560852 642.59503174]
[189.42079163 636.78088379]
[176.85070801 628.51605225]
[166.01345825 618.08203125]
[157.27816772 605.83422852]
[150.94238281 592.18969727]
[147.22186279 577.61328125]
[146.24334717 562.60137939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[19 169]
[20 168]
[21 167]
[22 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 155]
[49 153]
[50 152]
[52 151]
[53 150]
[56 148]
[57 147]
[61 144]
[62 143]
[63 142]
[64 141]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[88 133]
[89 132]
[90 131]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
