%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[80.25196838 689.41046143]
[79.13632202 674.45202637]
[78.02067566 659.49353027]
[76.90502167 644.53509521]
[75.78937531 629.57666016]
[74.67372894 614.61816406]
[60.54723740 613.13330078]
[46.89419937 609.20153809]
[34.13515472 602.94268799]
[22.66334534 594.54833984]
[12.83258057 584.27581787]
[4.94632673 572.44036865]
[-0.75165886 559.40557861]
[-4.08486176 545.57208252]
[-4.94948006 531.36547852]
[-3.31765461 517.22277832]
[0.76163340 503.57946777]
[7.16403294 490.85583496]
[15.69361210 479.44396973]
[26.08885574 469.69589233]
[38.03068542 461.91253662]
[51.15224075 456.33450317]
[65.05017090 453.13458252]
[61.61113739 446.59280396]
[64.48365021 437.92178345]
[64.03704834 422.92843628]
[63.59043884 407.93508911]
[63.14383316 392.94174194]
[55.03102493 380.45046997]
[62.35401154 366.42605591]
[61.90740585 351.43270874]
[54.15727997 364.27542114]
[41.64998627 372.55596924]
[26.80048943 374.67553711]
[12.47599602 370.22482300]
[1.44234002 360.06320190]
[-4.17005253 346.15274048]
[-3.27751637 331.17932129]
[3.94761372 318.03405762]
[16.11027908 309.25512695]
[30.86205673 306.53759766]
[45.35461426 310.40615845]
[56.78966141 320.11386108]
[62.95952988 333.78756714]
[65.18464661 318.95352173]
[59.42092896 305.21929932]
[69.11975861 292.71957397]
[71.34487152 277.88552856]
[73.56999207 263.05148315]
[71.50202942 258.74655151]
[72.11645508 253.09681702]
[76.08854675 247.81153870]
[78.75434113 233.05032349]
[81.42013550 218.28910828]
[83.53475952 203.43891907]
[85.09528351 188.52030945]
[86.65580750 173.60169983]
[88.21633148 158.68309021]
[81.84509277 145.21994019]
[90.97611237 132.29960632]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[93.91949463 52.23343658]
[94.36609650 37.24008942]
[86.10554504 27.33422661]
[86.78619385 14.85542488]
[95.49855042 6.46367979]
[88.38517761 -7.66821671]
[96.68306732 -20.03730583]
[97.35285187 -35.02234268]
[90.23947906 -49.15423965]
[98.53736115 -61.52333069]
[99.20714569 -76.50836945]
[99.65375519 -91.50171661]
[99.87708282 -106.50005341]
[96.87578583 -115.12734222]
[100.21704865 -121.71959686]
[100.66365051 -136.71293640]
[101.11026001 -151.70629883]
[92.84970856 -161.61215210]
[93.53034973 -174.09095764]
[102.24271393 -182.48269653]
[102.91249847 -197.46774292]
[103.58228302 -212.45277405]
[101.17523193 -217.08453369]
[100.82096863 -221.71356201]
[102.17468262 -225.55836487]
[104.63139343 -228.08757019]
[105.96962738 -243.02775574]
[107.30786133 -257.96795654]
[108.64609528 -272.90814209]
[109.98432922 -287.84829712]
[103.50907898 -302.28375244]
[112.35099030 -314.26998901]
[113.24381256 -329.24337769]
[113.69041443 -344.23672485]
[114.13702393 -359.23007202]
[100.56504822 -366.21322632]
[91.37385559 -378.39865112]
[88.38835144 -393.36694336]
[92.20131683 -408.14611816]
[102.05568695 -419.80175781]
[115.99485779 -426.01965332]
[131.25120544 -425.56521606]
[144.79557800 -418.52868652]
[153.93872070 -406.30715942]
[156.86524963 -391.32720947]
[152.99411011 -376.56317139]
[143.09391785 -364.94641113]
[129.13037109 -358.78347778]
[128.68376160 -343.79013062]
[128.23715210 -328.79678345]
[130.05906677 -326.66632080]
[131.14685059 -323.68582153]
[131.17251587 -320.13128662]
[129.91394043 -316.39224243]
[127.29117584 -312.93173218]
[133.86215210 -299.56494141]
[124.92451477 -286.51007080]
[123.58628082 -271.56988525]
[122.24804688 -256.62969971]
[120.90981293 -241.68952942]
[119.57157898 -226.74934387]
[118.56732178 -211.78298950]
[117.89753723 -196.79795837]
[117.22775269 -181.81291199]
[126.14236450 -166.69680786]
[116.10360718 -151.25968933]
[115.65699768 -136.26634216]
[115.21039581 -121.27298737]
[114.87541962 -106.27672577]
[114.65209198 -91.27838898]
[117.27665710 -87.28831482]
[117.42255402 -81.60713959]
[114.19218445 -75.83858490]
[113.52239990 -60.85354614]
[120.68368530 -47.79347992]
[112.33789062 -34.35255814]
[111.66810608 -19.36752129]
[118.82938385 -6.30745411]
[110.48358917 7.13346481]
[119.39820862 22.24956703]
[109.35945129 37.68669510]
[108.91284180 52.68004227]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[119.51495361 109.55080414]
[133.81488037 114.07983398]
[139.33212280 128.02830505]
[131.99957275 141.11393738]
[117.22251892 143.69049072]
[105.89471436 133.86012268]
[112.15432739 148.39036560]
[103.13493347 160.24362183]
[101.57440948 175.16223145]
[100.01388550 190.08082581]
[98.45336914 204.99943542]
[111.57191467 197.72595215]
[125.49538422 203.30601501]
[129.95989990 217.62620544]
[121.67440033 230.13021851]
[106.74663544 231.60055542]
[96.18135071 220.95491028]
[93.51555634 235.71612549]
[90.84976196 250.47734070]
[88.40403748 265.27661133]
[86.17891693 280.11065674]
[83.95380402 294.94470215]
[89.55836487 309.73995972]
[80.01869202 321.17864990]
[77.79357147 336.01269531]
[76.90075684 350.98608398]
[77.34736633 365.97946167]
[85.49211884 379.54312134]
[78.13718414 392.49511719]
[78.58378601 407.48849487]
[79.03039551 422.48184204]
[79.47700500 437.47518921]
[80.03520966 452.46478271]
[95.70079041 454.77987671]
[110.61605835 460.08670044]
[124.21558380 468.18222046]
[135.98420715 478.75775146]
[145.47650146 491.41067505]
[152.33363342 505.65979004]
[156.29698181 520.96362305]
[157.21783447 536.74096680]
[155.06298828 552.39300537]
[149.91593933 567.32611084]
[141.97366333 580.97399902]
[131.53904724 592.81982422]
[119.00939178 602.41510010]
[104.86121368 609.39715576]
[89.63217926 613.50256348]
[90.74782562 628.46099854]
[91.86347961 643.41943359]
[92.97912598 658.37786865]
[94.09477234 673.33636475]
[95.21042633 688.29479980]
[107.34802246 698.41674805]
[108.69004822 714.16400146]
[98.44031525 726.19390869]
[82.67980194 727.36932373]
[70.75894165 716.99298096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[23 185]
[25 184]
[26 183]
[27 182]
[28 181]
[30 179]
[31 178]
[44 177]
[45 176]
[47 174]
[48 173]
[49 172]
[52 171]
[53 170]
[54 169]
[55 163]
[56 162]
[57 161]
[58 160]
[60 158]
[61 152]
[64 149]
[65 148]
[66 147]
[67 146]
[70 144]
[72 142]
[73 141]
[75 139]
[76 138]
[77 135]
[78 134]
[80 133]
[81 132]
[82 131]
[85 129]
[86 128]
[87 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
