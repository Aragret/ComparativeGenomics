%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-13.01409912 707.44427490]
[-13.67456055 692.34277344]
[-9.85282516 677.71795654]
[-1.88871849 664.87023926]
[9.50959682 654.94195557]
[23.32859039 648.81604004]
[21.54612350 633.92236328]
[19.76365852 619.02862549]
[17.98119164 604.13488770]
[16.19872665 589.24121094]
[14.41625977 574.34747314]
[12.63379383 559.45373535]
[10.85132790 544.56005859]
[9.06886196 529.66632080]
[7.28639650 514.77258301]
[5.16861439 512.93597412]
[3.65073586 510.14984131]
[3.09807038 506.63842773]
[3.78806543 502.75405884]
[5.86847353 498.94277954]
[4.97565794 483.96936035]
[-1.12911057 497.67089844]
[-10.95597267 509.00372314]
[-23.65480614 516.98742676]
[-38.12703323 520.93133545]
[-53.12066650 520.49432373]
[-67.33860016 515.71411133]
[-79.55084991 507.00427246]
[-88.70092010 495.11831665]
[-93.99725342 481.08447266]
[-94.98165131 466.11682129]
[-91.56896210 451.51019287]
[-84.05441284 438.52822876]
[-73.08808899 428.29397583]
[-59.61869049 421.69281006]
[-44.81145096 419.29580688]
[-29.94734192 421.31033325]
[-16.31226158 427.56210327]
[-5.08578205 437.51028442]
[2.76089644 450.29425049]
[6.54857874 464.80456543]
[9.87083817 450.17709351]
[13.19309807 435.54962158]
[16.51535797 420.92218018]
[19.83761597 406.29470825]
[23.15987587 391.66726685]
[26.48213577 377.03979492]
[24.89817238 369.82086182]
[29.96428108 362.22006226]
[33.50395584 347.64367676]
[28.98852539 333.45001221]
[39.76385117 321.86541748]
[43.30352402 307.28903198]
[46.84319687 292.71267700]
[42.32777023 278.51901245]
[53.10309601 266.93438721]
[56.64276505 252.35803223]
[60.18243790 237.78164673]
[63.72211075 223.20527649]
[67.26178741 208.62890625]
[70.80145264 194.05252075]
[74.23252106 179.45019531]
[77.55477905 164.82273865]
[80.87703705 150.19528198]
[84.19929504 135.56782532]
[87.52155304 120.94036102]
[90.84381866 106.31290436]
[77.60735321 113.36953735]
[63.21840286 109.13183594]
[55.91960907 96.02734375]
[59.89205170 81.56291962]
[72.86013794 74.02442932]
[87.39515686 77.73027039]
[95.17063904 90.55662537]
[99.78464508 76.28389740]
[96.66742706 60.77281952]
[107.94450378 51.04261780]
[112.45213318 36.73593140]
[116.85313416 22.39608574]
[121.25412750 8.05623817]
[125.65512848 -6.28360939]
[129.30322266 -20.83322906]
[132.18849182 -35.55311966]
[135.07376099 -50.27301407]
[137.62959290 -65.05366516]
[139.85470581 -79.88771057]
[134.25015259 -94.68296051]
[143.78982544 -106.12165833]
[146.01493835 -120.95570374]
[148.24005127 -135.78974915]
[149.13287354 -150.76315308]
[148.68626404 -165.75650024]
[148.23965454 -180.74984741]
[147.79306030 -195.74320984]
[133.17564392 -199.55215454]
[120.22416687 -207.32620239]
[109.98852539 -218.43513489]
[103.29848480 -231.97839355]
[100.69637299 -246.85810852]
[102.39313507 -261.86801147]
[108.25122070 -275.79138184]
[117.79574585 -287.49942017]
[130.25296021 -296.04309082]
[144.61303711 -300.72976685]
[159.71186829 -301.17950439]
[174.32543945 -297.35589600]
[187.26910400 -289.56881714]
[197.49357605 -278.44961548]
[204.17001343 -264.89965820]
[206.75717163 -250.01733398]
[205.04533386 -235.00912476]
[199.17326355 -221.09167480]
[189.61698914 -209.39320374]
[177.15118408 -200.86204529]
[162.78640747 -196.18980408]
[163.23301697 -181.19645691]
[163.67961121 -166.20310974]
[164.12622070 -151.20976257]
[171.87634277 -164.05247498]
[184.38363647 -172.33303833]
[199.23313904 -174.45259094]
[213.55763245 -170.00186157]
[224.59129333 -159.84025574]
[230.20367432 -145.92979431]
[229.31114197 -130.95635986]
[222.08601379 -117.81111908]
[209.92335510 -109.03218842]
[195.17156982 -106.31465149]
[180.67901611 -110.18321991]
[169.24397278 -119.89093018]
[163.07409668 -133.56463623]
[160.84898376 -118.73059082]
[158.62387085 -103.89654541]
[164.38758850 -90.16232300]
[154.68875122 -77.66259003]
[152.46363831 -62.82854843]
[154.25411987 -59.79103470]
[154.66232300 -55.73537064]
[153.22570801 -51.32068253]
[149.79365540 -47.38774109]
[146.90838623 -32.66784668]
[144.02310181 -17.94795799]
[156.42265320 -26.38899803]
[171.35914612 -25.01011658]
[182.00381470 -14.44171715]
[183.49005127 0.48447046]
[175.13839722 12.94439316]
[160.76708984 17.24154282]
[146.94650269 11.41132069]
[139.99497986 -1.88261116]
[135.59397888 12.45723629]
[131.19297791 26.79708290]
[126.79198456 41.13692856]
[127.83464050 48.45366669]
[122.21723938 55.65662766]
[125.66448212 70.14682007]
[114.05738068 80.89790344]
[109.44337463 95.17063904]
[105.47127533 109.63516235]
[102.14901733 124.26261902]
[98.82675934 138.89007568]
[95.50449371 153.51754761]
[92.18223572 168.14500427]
[88.85997772 182.77246094]
[90.01097107 191.83409119]
[85.37783051 197.59219360]
[81.83815765 212.16857910]
[78.29848480 226.74494934]
[74.75881195 241.32131958]
[71.21913910 255.89770508]
[67.67946625 270.47406006]
[71.94171906 285.71032715]
[61.41957092 296.25234985]
[57.87989807 310.82870483]
[54.34022903 325.40509033]
[58.60247421 340.64135742]
[48.08032990 351.18334961]
[44.54065704 365.75973511]
[41.10959625 380.36206055]
[37.78733826 394.98950195]
[34.46507645 409.61697388]
[31.14281845 424.24444580]
[27.82055855 438.87188721]
[24.49829865 453.49935913]
[21.17603874 468.12680054]
[19.94906425 483.07653809]
[20.84187889 498.04995728]
[22.18011284 512.99011230]
[23.96257973 527.88385010]
[25.74504471 542.77758789]
[27.52751160 557.67126465]
[29.30997658 572.56500244]
[31.09244347 587.45874023]
[32.87490845 602.35241699]
[34.65737534 617.24615479]
[36.43984222 632.13989258]
[38.22230530 647.03356934]
[53.09661102 649.72552490]
[66.51586151 656.68359375]
[77.28684235 667.28918457]
[84.45178223 680.59912109]
[87.37359619 695.42999268]
[85.79247284 710.46301270]
[79.84900665 724.36145020]
[70.07168579 735.88946533]
[57.32990646 744.02203369]
[42.75664902 748.03594971]
[27.64776802 747.57434082]
[13.34672928 742.67822266]
[1.12517297 733.78302002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[20 187]
[21 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[49 178]
[50 177]
[52 175]
[53 174]
[54 173]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[74 158]
[75 157]
[77 155]
[78 153]
[79 152]
[80 151]
[81 150]
[82 142]
[83 141]
[84 140]
[85 136]
[86 135]
[88 133]
[89 132]
[90 131]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
