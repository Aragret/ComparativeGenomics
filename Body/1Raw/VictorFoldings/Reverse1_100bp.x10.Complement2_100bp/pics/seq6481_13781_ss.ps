%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[99.38281250 760.33837891]
[84.37597656 759.66760254]
[69.58509064 757.04376221]
[55.26324081 752.51165771]
[41.65549469 746.14892578]
[28.99470329 738.06445312]
[17.49750519 728.39648438]
[7.36063290 717.31048584]
[-1.24245822 704.99621582]
[-8.16455841 691.66430664]
[-13.28722000 677.54290771]
[-16.52278900 662.87371826]
[-17.81590080 647.90765381]
[-17.14442635 632.90081787]
[-14.51985836 618.11004639]
[-9.98710442 603.78845215]
[-3.62372661 590.18103027]
[4.46138906 577.52056885]
[14.12989616 566.02386475]
[25.21635246 555.88751221]
[37.53105545 547.28503418]
[50.86328506 540.36352539]
[64.98490906 535.24157715]
[79.65428925 532.00665283]
[94.62040710 530.71429443]
[95.29019165 515.72924805]
[95.95997620 500.74420166]
[96.40657806 485.75085449]
[96.62990570 470.75250244]
[96.85323334 455.75418091]
[96.96490479 440.75460815]
[96.96490479 425.75460815]
[96.96490479 410.75460815]
[96.96490479 395.75460815]
[96.96490479 380.75460815]
[96.96490479 365.75460815]
[96.96490479 350.75460815]
[96.96490479 335.75460815]
[84.82648468 327.16409302]
[80.01717377 312.90454102]
[84.57992554 298.37750244]
[96.96490479 289.21679688]
[96.96490479 274.21679688]
[89.22760010 261.48953247]
[96.96490479 247.68936157]
[96.96490479 232.68936157]
[96.96490479 217.68936157]
[96.96490479 202.68936157]
[96.96490479 187.68936157]
[96.96490479 172.68936157]
[96.96490479 157.68936157]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[82.50352478 75.45942688]
[89.07450104 62.09262085]
[87.73626709 47.15243530]
[86.39803314 32.21224976]
[85.05979919 17.27206421]
[83.72156525 2.33187914]
[73.29749298 13.11791897]
[58.30266190 13.51173019]
[47.32679749 3.28771949]
[46.65737152 -11.69733524]
[56.67786026 -22.85931396]
[71.64807892 -23.80412865]
[82.99196625 -13.99139404]
[82.99196625 -28.99139404]
[82.99196625 -43.99139404]
[82.99196625 -58.99139404]
[75.25466919 -72.79156494]
[82.99196625 -85.51883698]
[82.99196625 -100.51883698]
[82.99196625 -115.51883698]
[82.99196625 -130.51884460]
[82.99196625 -145.51884460]
[82.99196625 -160.51884460]
[82.99196625 -175.51884460]
[75.25466919 -189.31901550]
[82.99196625 -202.04627991]
[82.99196625 -217.04627991]
[82.99196625 -232.04627991]
[70.60698700 -241.20698547]
[66.04423523 -255.73402405]
[70.85354614 -269.99356079]
[82.99196625 -278.58407593]
[82.99196625 -293.58407593]
[82.99196625 -308.58407593]
[82.99196625 -323.58407593]
[82.88030243 -338.58364868]
[82.65697479 -353.58200073]
[82.43364716 -368.58032227]
[82.21031952 -383.57867432]
[81.98698425 -398.57699585]
[67.58728790 -403.25964355]
[55.48974991 -412.36614990]
[47.00664139 -424.90872192]
[43.05813217 -439.52679443]
[44.07253647 -454.63470459]
[49.93981552 -468.59371948]
[60.02352905 -479.88961792]
[73.22987366 -487.29711914]
[88.12632751 -490.01272583]
[103.09702301 -487.74185181]
[116.51806641 -480.73083496]
[126.93363190 -469.74017334]
[133.21391296 -455.96203613]
[134.67768860 -440.89102173]
[131.16616821 -426.16186523]
[123.06025696 -413.37228394]
[111.23922729 -403.90963745]
[96.98532867 -398.80032349]
[97.20865631 -383.80200195]
[97.43198395 -368.80364990]
[97.65531158 -353.80532837]
[97.87863922 -338.80697632]
[101.12137604 -332.16571045]
[97.99196625 -323.58407593]
[97.99196625 -308.58407593]
[97.99196625 -293.58407593]
[97.99196625 -278.58407593]
[110.13038635 -269.99356079]
[114.93969727 -255.73402405]
[110.37694550 -241.20698547]
[97.99196625 -232.04627991]
[97.99196625 -217.04627991]
[97.99196625 -202.04627991]
[105.72926331 -189.31901550]
[97.99196625 -175.51884460]
[97.99196625 -160.51884460]
[97.99196625 -145.51884460]
[97.99196625 -130.51884460]
[97.99196625 -115.51883698]
[97.99196625 -100.51883698]
[97.99196625 -85.51883698]
[105.72926331 -72.79156494]
[97.99196625 -58.99139404]
[97.99196625 -43.99139404]
[97.99196625 -28.99139404]
[97.99196625 -13.99139404]
[98.66175079 0.99364507]
[99.99998474 15.93383026]
[101.33821869 30.87401581]
[102.67645264 45.81420135]
[104.01468658 60.75438690]
[112.85660553 72.74061584]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[121.65937805 130.58004761]
[136.65420532 130.18623352]
[147.63006592 140.41024780]
[148.29949951 155.39530945]
[138.27900696 166.55728149]
[123.30879211 167.50209045]
[111.96490479 157.68936157]
[111.96490479 172.68936157]
[111.96490479 187.68936157]
[111.96490479 202.68936157]
[111.96490479 217.68936157]
[111.96490479 232.68936157]
[111.96490479 247.68936157]
[119.70220184 261.48953247]
[111.96490479 274.21679688]
[111.96490479 289.21679688]
[124.34988403 298.37750244]
[128.91262817 312.90454102]
[124.10332489 327.16409302]
[111.96490479 335.75460815]
[111.96490479 350.75460815]
[111.96490479 365.75460815]
[111.96490479 380.75460815]
[111.96490479 395.75460815]
[111.96490479 410.75460815]
[111.96490479 425.75460815]
[111.96490479 440.75460815]
[115.09431458 449.33624268]
[111.85157776 455.97750854]
[111.62825012 470.97583008]
[111.40491486 485.97418213]
[114.28620148 491.92477417]
[113.80242157 497.58721924]
[110.94501495 501.41400146]
[110.27523041 516.39904785]
[109.60544586 531.38409424]
[124.39658356 534.00653076]
[138.71885681 538.53723145]
[152.32720947 544.89868164]
[164.98876953 552.98199463]
[176.48689270 562.64886475]
[186.62481689 573.73382568]
[195.22908020 586.04730225]
[202.15245056 599.37854004]
[207.27645874 613.49945068]
[210.51342773 628.16839600]
[211.80795288 643.13427734]
[211.13790894 658.14117432]
[208.51475525 672.93218994]
[203.98336792 687.25427246]
[197.62127686 700.86230469]
[189.53736877 713.52349854]
[179.86996460 725.02111816]
[168.78446960 735.15850830]
[156.47058105 743.76220703]
[143.13900757 750.68493652]
[129.01788330 755.80828857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 189]
[26 188]
[27 187]
[28 184]
[29 183]
[30 182]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[42 169]
[43 168]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 153]
[53 152]
[54 151]
[56 149]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[69 142]
[70 141]
[71 140]
[72 139]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[82 129]
[83 128]
[84 127]
[88 123]
[89 122]
[90 121]
[91 120]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
