%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[99.34981537 393.06332397]
[102.77336121 378.22421265]
[111.94171906 366.06439209]
[125.26641083 358.69064331]
[116.42449951 346.70440674]
[122.89974976 332.26898193]
[121.56151581 317.32879639]
[112.71959686 305.34255981]
[119.19485474 290.90713501]
[117.85662079 275.96694946]
[116.51838684 261.02676392]
[115.18015289 246.08656311]
[113.84191895 231.14637756]
[111.38520813 228.61717224]
[110.03149414 224.77236938]
[110.38575745 220.14334106]
[112.79280853 215.51158142]
[112.12301636 200.52655029]
[111.45323181 185.54150391]
[110.78344727 170.55647278]
[110.11366272 155.57142639]
[109.44387817 140.58639526]
[105.47178650 126.12187195]
[98.39467621 112.89633942]
[90.92693329 99.88739014]
[83.07518005 87.10654449]
[75.22342682 74.32570648]
[67.37167358 61.54486084]
[53.55535126 53.83643341]
[53.48587036 38.94198990]
[45.63411331 26.16114616]
[37.78236008 13.38030338]
[23.96603966 5.67187452]
[23.89655876 -9.22256851]
[16.04480362 -22.00341225]
[6.90600061 -33.89804459]
[-3.42066789 -44.77737808]
[-16.27050400 -45.89296722]
[-24.64763641 -55.16698456]
[-24.46594810 -67.26216888]
[-34.62949753 -78.29404449]
[-44.87488556 -89.24995422]
[-55.20155716 -100.12929535]
[-65.52822113 -111.00862885]
[-75.85489655 -121.88796234]
[-86.18156433 -132.76728821]
[-96.50823212 -143.64662170]
[-108.31521606 -134.37681580]
[-120.93837738 -126.25336456]
[-134.26676941 -119.34767914]
[-148.18325806 -113.72043610]
[-162.56553650 -109.42109680]
[-177.28723145 -106.48744202]
[-192.21894836 -104.94525909]
[-207.22946167 -104.80809021]
[-222.18685913 -106.07714844]
[-236.95970154 -108.74127960]
[-251.41816711 -112.77707672]
[-265.43515015 -118.14906311]
[-278.88751221 -124.81002808]
[-291.65701294 -132.70143127]
[-303.63143921 -141.75393677]
[-314.70553589 -151.88798523]
[-324.78201294 -163.01449585]
[-333.77227783 -175.03570557]
[-341.59735107 -187.84596252]
[-348.18844604 -201.33268738]
[-353.48764038 -215.37736511]
[-357.44839478 -229.85656738]
[-360.03585815 -244.64302063]
[-361.22732544 -259.60681152]
[-361.01229858 -274.61642456]
[-359.39270020 -289.53991699]
[-356.38272095 -304.24621582]
[-352.00881958 -318.60598755]
[-346.30947876 -332.49310303]
[-339.33474731 -345.78549194]
[-331.14593506 -358.36636353]
[-321.81500244 -370.12509155]
[-311.42395020 -380.95840454]
[-300.06411743 -390.77105713]
[-287.83529663 -399.47683716]
[-274.84497070 -406.99923706]
[-261.20733643 -413.27209473]
[-247.04220581 -418.24035645]
[-232.47407532 -421.86032104]
[-217.63098145 -424.10018921]
[-202.64335632 -424.94027710]
[-187.64292908 -424.37316895]
[-172.76152039 -422.40390015]
[-158.12991333 -419.04974365]
[-143.87667847 -414.34017944]
[-130.12709045 -408.31661987]
[-117.00199127 -401.03195190]
[-104.61671448 -392.55026245]
[-93.08011627 -382.94601440]
[-82.49356842 -372.30368042]
[-72.95011139 -360.71673584]
[-64.53362274 -348.28704834]
[-57.31806564 -335.12384033]
[-51.36684799 -321.34277344]
[-46.73227692 -307.06500244]
[-43.45507812 -292.41595459]
[-41.56405258 -277.52441406]
[-41.07581711 -262.52120972]
[-41.99466705 -247.53819275]
[-44.31252670 -232.70707703]
[-48.00902176 -218.15818787]
[-53.05167007 -204.01936340]
[-59.39615631 -190.41488647]
[-66.98672485 -177.46429443]
[-75.75666046 -165.28140259]
[-85.62889862 -153.97329712]
[-75.30223083 -143.09396362]
[-64.97555542 -132.21463013]
[-54.64889145 -121.33529663]
[-44.32221985 -110.45596313]
[-33.99555206 -99.57662964]
[-27.11073112 -96.88942719]
[-23.59761810 -88.45759583]
[-13.43407154 -77.42572021]
[3.57441688 -73.10388184]
[7.45866632 -55.10404587]
[17.78533554 -44.22471237]
[14.41633320 -58.84147644]
[16.82155418 -73.64738464]
[24.64419556 -86.44606781]
[36.72381592 -95.33892059]
[51.26847839 -99.00672913]
[66.12055969 -96.90541077]
[79.07685852 -89.34667206]
[88.21536255 -77.45182037]
[92.18045044 -62.98537064]
[90.38391113 -48.09334564]
[83.09225464 -34.98488235]
[71.38716125 -25.60454750]
[57.00500107 -21.34385681]
[42.07928848 -22.83485794]
[28.82564545 -29.85516739]
[36.67740250 -17.07432365]
[49.93210983 -10.28006649]
[50.56320190 5.52854824]
[58.41495514 18.30939102]
[66.26671600 31.09023285]
[79.52142334 37.88449097]
[80.15251160 53.69310760]
[88.00426483 66.47394562]
[95.85602570 79.25479126]
[103.70777893 92.03563690]
[106.60153961 92.99254608]
[109.21106720 95.02352142]
[111.13788605 98.02532196]
[112.02722931 101.74893951]
[111.62020874 105.81923676]
[118.69731140 119.04476166]
[118.22913361 104.05207062]
[120.65502930 89.24953461]
[125.88429260 75.19055939]
[133.72143555 62.40075302]
[143.87345886 51.35826492]
[155.96081543 42.47593307]
[169.53160095 36.08582306]
[184.07849121 32.42684174]
[199.05761719 31.63577652]
[213.90898132 33.74220276]
[228.07734680 38.66737366]
[241.03303528 46.22715759]
[252.29167175 56.13892365]
[261.43234253 68.03211212]
[268.11334229 81.46209717]
[272.08486938 95.92677307]
[273.19845581 110.88538361]
[271.41247559 125.77867889]
[266.79367065 140.04986572]
[259.51477051 153.16540527]
[249.84783936 164.63496399]
[238.15434265 174.02973938]
[224.87141418 180.99851990]
[210.49565125 185.28074646]
[195.56449890 186.71633911]
[180.63618469 185.25161743]
[166.26879883 180.94136047]
[152.99949646 173.94668579]
[141.32434082 164.52911377]
[131.67980957 153.04072571]
[124.42891693 139.91661072]
[125.09870148 154.90164185]
[125.76848602 169.88668823]
[126.43827057 184.87171936]
[127.10805511 199.85676575]
[127.77784729 214.84179688]
[128.78210449 229.80815125]
[130.12033081 244.74833679]
[131.45857239 259.68850708]
[132.79681396 274.62869263]
[134.13504028 289.56887817]
[143.07267761 302.62374878]
[136.50170898 315.99053955]
[137.83993530 330.93072510]
[146.77757263 343.98559570]
[140.20660400 357.35238647]
[154.62963867 362.24072266]
[165.81309509 372.57754517]
[171.81933594 386.57202148]
[171.60775757 401.79946899]
[165.21502686 415.62164307]
[153.74871826 425.64379883]
[139.19541931 430.12951660]
[124.07660675 428.30160522]
[111.01168060 420.47680664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[6 199]
[7 198]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 155]
[24 154]
[25 149]
[26 148]
[27 147]
[28 146]
[30 144]
[31 143]
[32 142]
[34 140]
[35 139]
[36 124]
[37 123]
[40 121]
[41 120]
[42 118]
[43 117]
[44 116]
[45 115]
[46 114]
[47 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
