%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[262.32623291 451.92657471]
[257.71221924 437.65383911]
[253.09820557 423.38110352]
[241.82112122 413.65090942]
[244.93833923 398.13983154]
[240.32434082 383.86709595]
[229.04725647 374.13690186]
[232.16447449 358.62582397]
[227.55047607 344.35308838]
[222.93646240 330.08035278]
[218.32244873 315.80761719]
[211.74241638 302.32788086]
[203.32780457 289.91040039]
[191.51171875 287.32064819]
[184.39973450 277.04428101]
[186.25297546 264.27993774]
[178.02415466 251.73854065]
[165.16558838 250.90992737]
[154.98004150 242.70404053]
[151.32667542 229.94224548]
[155.75466919 217.22189331]
[147.71348572 204.55935669]
[139.67231750 191.89683533]
[131.63114929 179.23431396]
[123.58997345 166.57179260]
[115.54880524 153.90925598]
[115.44445038 168.90890503]
[108.92017365 182.41571045]
[97.23571014 191.82173157]
[82.64714050 195.31082153]
[67.97129822 192.20927429]
[56.04185104 183.11596680]
[49.16218948 169.78666687]
[48.66066742 154.79505920]
[54.63412476 141.03576660]
[65.92917633 131.16552734]
[80.36492920 127.09010315]
[95.15406799 129.59640503]
[107.44188690 138.20144653]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[74.78282928 69.76802826]
[78.44542694 55.33076096]
[66.99967957 44.40806198]
[70.66228485 29.97079468]
[66.15465546 15.66410828]
[61.54064560 1.39137506]
[56.92663574 -12.88135815]
[52.31262589 -27.15409088]
[41.20538712 -33.71092606]
[37.65620041 -45.69370651]
[43.04477692 -56.52374649]
[38.64377975 -70.86359406]
[34.24278259 -85.20344543]
[29.84178352 -99.54328918]
[18.83339691 -106.26476288]
[15.46301174 -118.29906464]
[21.01223373 -129.04766846]
[16.82522202 -143.45146179]
[11.42477131 -150.81848145]
[12.68481350 -158.10092163]
[8.71271706 -172.56544495]
[4.74062109 -187.02996826]
[0.76852489 -201.49449158]
[-14.09949684 -199.36254883]
[-29.11748314 -199.11093140]
[-44.04858017 -200.74359131]
[-58.65730286 -204.23480225]
[-72.71324921 -209.52947998]
[-85.99473572 -216.54412842]
[-98.29229736 -225.16812134]
[-109.41197968 -235.26544189]
[-119.17841339 -246.67683411]
[-127.43756866 -259.22235107]
[-134.05918884 -272.70407104]
[-138.93882751 -286.90945435]
[-141.99954224 -301.61437988]
[-143.19303894 -316.58697510]
[-142.50053406 -331.59109497]
[-139.93290710 -346.39010620]
[-135.53067017 -360.75061035]
[-129.36326599 -374.44607544]
[-121.52794647 -387.26055908]
[-112.14828491 -398.99194336]
[-101.37222290 -409.45520020]
[-89.36971283 -418.48532104]
[-76.33003998 -425.93984985]
[-62.45886993 -431.70126343]
[-47.97497177 -435.67868042]
[-33.10676956 -437.80938721]
[-18.08876228 -438.05975342]
[-3.15780258 -436.42581177]
[11.45062542 -432.93338013]
[25.50612450 -427.63751221]
[38.78702164 -420.62176514]
[51.08385849 -411.99673462]
[62.20269394 -401.89846802]
[71.96817017 -390.48626709]
[80.22626495 -377.94006348]
[86.84674072 -364.45776367]
[91.72518921 -350.25198364]
[94.78466034 -335.54678345]
[95.97691345 -320.57409668]
[95.28313446 -305.57000732]
[92.71426392 -290.77124023]
[88.31082153 -276.41110229]
[82.14225769 -262.71615601]
[74.30586243 -249.90232849]
[64.92521667 -238.17173767]
[54.14827347 -227.70939636]
[42.14500046 -218.68029785]
[29.10470200 -211.22683716]
[15.23304844 -205.46659851]
[19.20514488 -191.00207520]
[23.17724037 -176.53755188]
[27.14933777 -162.07302856]
[31.22900391 -147.63847351]
[35.41601562 -133.23468018]
[48.71999741 -121.79042816]
[44.18162918 -103.94429016]
[48.58263016 -89.60443878]
[52.98362732 -75.26459503]
[57.38462448 -60.92474747]
[70.85752106 -49.67983246]
[66.58535767 -31.76810074]
[71.19937134 -17.49536705]
[75.81337738 -3.22263408]
[80.42738342 11.05009937]
[85.47595978 16.44766426]
[85.00212860 25.56979752]
[96.13308716 35.46681595]
[92.78527832 50.92976379]
[103.91623688 60.82678223]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[121.33191681 132.53866577]
[128.21131897 145.86808777]
[136.25250244 158.53060913]
[144.29367065 171.19314575]
[152.33483887 183.85566711]
[160.37602234 196.51818848]
[168.41719055 209.18070984]
[185.55735779 212.67842102]
[194.68505859 227.20425415]
[190.56556702 243.50973511]
[198.79437256 256.05114746]
[215.42852783 263.94964600]
[215.74530029 281.49575806]
[224.15991211 293.91326904]
[222.41107178 279.01556396]
[225.07202148 264.25347900]
[231.91256714 250.90405273]
[242.34095764 240.12217712]
[255.45500183 232.84057617]
[270.12023926 229.68919373]
[285.06793213 230.94064331]
[299.00500488 236.48664856]
[310.72570801 245.84745789]
[319.21615601 258.21322632]
[323.74176025 272.51425171]
[323.91107178 287.51327515]
[319.70941162 301.91281128]
[311.50027466 314.46710205]
[299.99383545 324.09008789]
[286.18551636 329.94927979]
[271.26986694 331.53781128]
[256.53723145 328.71826172]
[243.26217651 321.73452759]
[232.59518433 311.19360352]
[237.20919800 325.46633911]
[241.82319641 339.73907471]
[246.43721008 354.01181030]
[258.04431152 364.76287842]
[254.59707642 379.25308228]
[259.21109009 393.52581787]
[270.81817627 404.27688599]
[267.37094116 418.76708984]
[271.98495483 433.03982544]
[276.59896851 447.31256104]
[291.66738892 446.53466797]
[306.42349243 449.68420410]
[319.86117554 456.54647827]
[331.06427002 466.65353394]
[339.26892090 479.31634521]
[343.91567993 493.67147827]
[344.68777466 508.74020386]
[341.53253174 523.49511719]
[334.66506958 536.93011475]
[324.55364990 548.12933350]
[311.88769531 556.32910156]
[297.53076172 560.97027588]
[282.46176147 561.73657227]
[267.70806885 558.57562256]
[254.27568054 551.70300293]
[243.08039856 541.58728027]
[234.88554382 528.91815186]
[230.24986267 514.55938721]
[229.48942566 499.49011230]
[232.65605164 484.73764038]
[239.53387451 471.30789185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[5 185]
[6 184]
[8 182]
[9 181]
[10 180]
[11 179]
[12 159]
[13 158]
[16 156]
[17 155]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 147]
[39 146]
[40 145]
[41 144]
[48 143]
[49 142]
[51 140]
[53 138]
[54 136]
[55 135]
[56 134]
[57 133]
[60 131]
[61 130]
[62 129]
[63 128]
[66 126]
[67 125]
[69 124]
[70 123]
[71 122]
[72 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
