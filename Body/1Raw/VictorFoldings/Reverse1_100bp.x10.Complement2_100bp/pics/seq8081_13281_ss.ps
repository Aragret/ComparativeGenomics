%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[102.77066040 827.66644287]
[90.32798767 836.09246826]
[76.79103088 842.61688232]
[62.44833374 847.10076904]
[47.60561371 849.44842529]
[32.57924652 849.60986328]
[17.68951225 847.58166504]
[3.25379300 843.40698242]
[-10.42021561 837.17486572]
[-23.04104996 829.01812744]
[-34.33969879 819.11059570]
[-44.07532501 807.66357422]
[-52.04042053 794.92089844]
[-58.06520462 781.15429688]
[-62.02125931 766.65710449]
[-63.82426071 751.73846436]
[-63.43577576 736.71624756]
[-60.86408997 721.91064453]
[-56.16401672 707.63739014]
[-49.43573761 694.20056152]
[-40.82266617 681.88659668]
[-30.50839043 670.95806885]
[-18.71276093 661.64776611]
[-5.68720245 654.15429688]
[8.29064560 648.63726807]
[22.92284393 645.21429443]
[37.89750671 643.95837402]
[52.89544678 644.89624023]
[55.99955750 630.22094727]
[59.10366821 615.54565430]
[62.20777893 600.87036133]
[65.31188965 586.19506836]
[67.31590271 571.32952881]
[60.34986115 558.16430664]
[68.89484406 544.84912109]
[69.78765869 529.87573242]
[62.82161713 516.71044922]
[71.36660004 503.39529419]
[72.25941467 488.42187500]
[73.15222931 473.44848633]
[74.04505157 458.47506714]
[63.99723053 447.53994751]
[64.68936920 432.34207153]
[76.22726440 421.87713623]
[77.12007904 406.90371704]
[78.01289368 391.93032837]
[78.90571594 376.95690918]
[79.79853058 361.98352051]
[69.75070953 351.04840088]
[70.44285583 335.85049438]
[81.98074341 325.38558960]
[82.87355804 310.41217041]
[74.18498993 295.16500854]
[84.45246887 279.87905884]
[77.29119110 266.81900024]
[85.63698578 253.37808228]
[86.30677032 238.39303589]
[86.97655487 223.40800476]
[76.76704407 212.62368774]
[77.23283386 197.41717529]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[95.57647705 31.00271606]
[96.24626160 16.01767731]
[96.91604614 1.03263938]
[94.17295074 -7.68018055]
[97.70900726 -14.17002869]
[98.60182190 -29.14343452]
[82.10826874 -39.03522491]
[72.96732330 -55.86339569]
[73.64157104 -74.92022705]
[83.86090088 -90.92237854]
[100.72045135 -99.47568512]
[100.72045135 -114.47568512]
[100.72045135 -129.47569275]
[100.49712372 -144.47402954]
[100.05052185 -159.46737671]
[91.90576935 -173.03106689]
[99.26069641 -185.98306274]
[91.11594391 -199.54673767]
[98.47087860 -212.49874878]
[98.02426910 -227.49209595]
[97.57766724 -242.48544312]
[89.43291473 -256.04913330]
[96.78784180 -269.00112915]
[88.64308929 -282.56481934]
[95.99802399 -295.51681519]
[95.55141449 -310.51016235]
[95.10481262 -325.50350952]
[81.14125824 -331.66644287]
[71.24106598 -343.28320312]
[67.36993408 -358.04727173]
[70.29646301 -373.02719116]
[79.43960571 -385.24871826]
[92.98397064 -392.28524780]
[108.24032593 -392.73968506]
[122.17949677 -386.52178955]
[132.03385925 -374.86614990]
[135.84683228 -360.08697510]
[132.86132812 -345.11868286]
[123.67013550 -332.93325806]
[110.09815979 -325.95010376]
[110.54476929 -310.95675659]
[110.99137115 -295.96340942]
[119.10417938 -283.47216797]
[111.78119659 -269.44772339]
[119.89400482 -256.95648193]
[112.57101440 -242.93205261]
[113.01762390 -227.93869019]
[113.46422577 -212.94534302]
[121.57703400 -200.45408630]
[114.25405121 -186.42965698]
[122.36685944 -173.93840027]
[115.04386902 -159.91398621]
[115.49047852 -144.92062378]
[118.29058838 -141.05172729]
[118.69001770 -135.38273621]
[115.72045135 -129.47569275]
[115.72045135 -114.47568512]
[115.72045135 -99.47568512]
[126.06880951 -95.60546112]
[134.76872253 -88.75224304]
[140.98437500 -79.55383301]
[144.11231995 -68.87432098]
[143.84011841 -57.72288895]
[140.17742920 -47.15846252]
[133.45661926 -38.18915176]
[124.30271149 -31.67605972]
[113.57522583 -28.25061798]
[112.68241119 -13.27721310]
[111.90108490 1.70242453]
[111.23130035 16.68746376]
[110.56151581 31.67250252]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[113.98524475 199.05990601]
[113.09252167 214.24731445]
[101.96159363 224.07778931]
[101.29180908 239.06282043]
[100.62202454 254.04786682]
[107.73539734 268.17974854]
[99.43750763 280.54885864]
[107.54965973 290.57659912]
[106.68329620 303.04388428]
[97.84696960 311.30499268]
[96.95414734 326.27838135]
[107.16673279 338.04022217]
[106.04798889 353.21267700]
[94.77193451 362.87634277]
[93.87911987 377.84973145]
[92.98630524 392.82315063]
[92.09348297 407.79653931]
[91.20066833 422.76995850]
[101.41325378 434.53179932]
[100.29450989 449.70422363]
[89.01845551 459.36788940]
[88.12564087 474.34130859]
[87.23281860 489.31469727]
[86.34000397 504.28811646]
[93.24218750 518.52435303]
[84.76106262 530.76849365]
[83.86824799 545.74194336]
[90.77043152 559.97814941]
[82.28930664 572.22235107]
[91.84386444 560.65899658]
[105.86519623 555.32965088]
[120.68817902 557.62731934]
[132.43809509 566.95147705]
[138.04357910 580.86468506]
[136.03933716 595.73022461]
[126.94928741 607.66217041]
[113.14955139 613.54156494]
[98.24734497 611.83154297]
[86.13806152 602.97912598]
[79.98719025 589.29913330]
[76.88307953 603.97448730]
[73.77896881 618.64978027]
[70.67485809 633.32507324]
[67.57074738 648.00036621]
[81.66390228 653.21582031]
[94.84745026 660.42773438]
[106.84038544 669.48242188]
[117.38707733 680.18688965]
[126.26272583 692.31292725]
[133.27813721 705.60205078]
[138.28378296 719.77111816]
[141.17297363 734.51800537]
[141.88412476 749.52838135]
[140.40205383 764.48236084]
[136.75839233 779.06115723]
[131.03076172 792.95404053]
[123.34128571 805.86486816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 182]
[35 180]
[36 179]
[38 177]
[39 176]
[40 175]
[41 174]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[51 164]
[52 163]
[54 160]
[56 158]
[57 157]
[58 156]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[68 146]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[76 139]
[77 138]
[82 129]
[83 128]
[84 127]
[85 124]
[86 123]
[88 121]
[90 119]
[91 118]
[92 117]
[94 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
