%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[4.04458666 631.19836426]
[1.59189737 616.33459473]
[2.50872588 601.29772949]
[6.74908400 586.84204102]
[14.10027790 573.69256592]
[24.19357300 562.50897217]
[36.52269745 553.85217285]
[50.46922302 548.15637207]
[48.02349472 533.35705566]
[45.57776642 518.55780029]
[43.13203812 503.75854492]
[40.68631363 488.95925903]
[38.24058533 474.16000366]
[35.79485703 459.36071777]
[33.34912872 444.56146240]
[28.97434616 458.90933228]
[21.33537292 471.81848145]
[10.86423302 482.55883789]
[-1.84688234 490.52297974]
[-16.07909584 495.26049805]
[-31.02750969 496.50344849]
[-45.84671402 494.18157959]
[-59.69861603 488.42614746]
[-71.79981995 479.56268311]
[-81.46594238 468.09246826]
[-88.15032196 454.66418457]
[-91.47492981 440.03726196]
[-91.25172424 425.03890991]
[-87.49334717 410.51739502]
[-80.41234589 397.29394531]
[-70.40918732 386.11642456]
[-58.04959106 377.61700439]
[-44.03256226 372.27630615]
[-29.15082741 370.39642334]
[-14.24602127 372.08364868]
[-0.16108294 377.24258423]
[12.30741692 385.58145142]
[22.45432281 396.62863159]
[29.70577812 409.75936890]
[33.65183640 424.23211670]
[36.53710938 409.51223755]
[39.42238235 394.79232788]
[42.30765533 380.07244873]
[45.19292831 365.35253906]
[48.07820129 350.63265991]
[50.96347427 335.91278076]
[40.99318695 322.36904907]
[43.96166229 305.47222900]
[58.51304245 295.76260376]
[61.17883682 281.00137329]
[63.84463120 266.24017334]
[53.67380524 252.84640503]
[56.39038467 235.90724182]
[70.79558563 225.98205566]
[73.24131775 211.18278503]
[75.68704224 196.38351440]
[73.67620850 189.27166748]
[78.28092957 181.38278198]
[80.94672394 166.62156677]
[75.59448242 152.72183228]
[85.66117096 140.51641846]
[88.32697296 125.75519562]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[103.29373169 27.48278427]
[105.18701935 12.60274887]
[106.74754333 -2.31585622]
[108.30806732 -17.23446083]
[109.53504181 -32.18419266]
[110.42785645 -47.15760040]
[111.32067108 -62.13100433]
[101.10809326 -73.89284515]
[102.22683716 -89.06529236]
[113.50289154 -98.72894287]
[114.39570618 -113.70234680]
[114.17237854 -128.70068359]
[112.83414459 -143.64086914]
[111.49591064 -158.58105469]
[110.15767670 -173.52124023]
[100.77853394 -182.37530518]
[99.97148895 -194.84657288]
[107.62491608 -204.21415710]
[106.50926208 -219.17260742]
[97.76698303 -232.35908508]
[104.53623962 -245.62657166]
[89.62707520 -247.75514221]
[75.52421570 -253.03939819]
[62.88727188 -261.23217773]
[52.30730438 -271.95031738]
[44.27915573 -284.69247437]
[39.17831802 -298.86273193]
[37.24336243 -313.79824829]
[38.56479645 -328.80050659]
[43.08081055 -343.16781616]
[50.58018112 -356.22821045]
[60.71215057 -367.37078857]
[73.00283051 -376.07443237]
[86.87735748 -381.93203735]
[101.68680573 -384.66961670]
[116.73850250 -384.15914917]
[131.32844543 -380.42453003]
[144.77426147 -373.64041138]
[156.44703674 -364.12408447]
[165.80082703 -352.32067871]
[172.39813232 -338.78222656]
[175.93040466 -324.14196777]
[176.23240662 -309.08465576]
[173.29003906 -294.31451416]
[167.24089050 -280.52243042]
[158.36791992 -268.35342407]
[147.08612061 -258.37670898]
[133.92315674 -251.05888367]
[119.49469757 -246.74221802]
[128.15718079 -234.62568665]
[121.46772003 -220.28825378]
[122.58336639 -205.32980347]
[133.23107910 -191.38014221]
[125.09786224 -174.85948181]
[126.43609619 -159.91929626]
[127.77433014 -144.97911072]
[129.11256409 -130.03892517]
[136.84608459 -142.89164734]
[149.92173767 -150.24198914]
[164.92155457 -150.16857910]
[177.92463684 -142.69061279]
[185.53199768 -129.76281738]
[185.75509644 -114.76447296]
[178.53561401 -101.61612701]
[165.76071167 -93.75470734]
[150.76971436 -93.23519135]
[137.48123169 -100.19335938]
[129.36911011 -112.80953217]
[128.47630310 -97.83612823]
[138.52410889 -86.90100098]
[137.83197021 -71.70311737]
[126.29408264 -61.23818970]
[125.40126038 -46.26478577]
[124.50844574 -31.29137802]
[126.56278992 -28.42571640]
[127.33118439 -24.42264175]
[126.29416656 -19.89739037]
[123.22666931 -15.67393780]
[121.66614532 -0.75533324]
[120.10562134 14.16327190]
[122.02996063 17.11780548]
[122.61884308 21.15119934]
[121.38079834 25.62563133]
[118.12776947 29.70790100]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[107.66719055 119.46324158]
[106.43124390 125.01026917]
[103.08818817 128.42098999]
[100.42239380 143.18220520]
[105.58396149 158.13777161]
[95.70793915 169.28736877]
[93.04214478 184.04858398]
[90.48631287 198.82923889]
[88.04058838 213.62850952]
[85.59485626 228.42778015]
[94.64685822 238.40153503]
[96.27798462 251.57537842]
[90.11511230 263.11230469]
[78.60585022 268.90597534]
[75.94005585 283.66717529]
[73.27426147 298.42840576]
[82.17675781 308.53582764]
[83.61156464 321.73248291]
[77.27761078 333.17639160]
[65.68336487 338.79803467]
[62.79809189 353.51794434]
[59.91281891 368.23782349]
[57.02754593 382.95770264]
[54.14227295 397.67761230]
[51.25699997 412.39749146]
[48.37172699 427.11740112]
[48.14839935 442.11572266]
[50.59412766 456.91500854]
[53.03985596 471.71426392]
[55.48558426 486.51354980]
[57.93130875 501.31280518]
[60.37703705 516.11206055]
[62.82276535 530.91137695]
[65.26849365 545.71063232]
[80.30601501 546.61651611]
[94.76478577 550.84637451]
[107.91956329 558.18798828]
[119.11051178 568.27319336]
[127.77628326 580.59600830]
[133.48222351 594.53839111]
[135.94210815 609.40093994]
[135.03257751 624.43829346]
[130.79922485 638.89599609]
[123.45439911 652.04901123]
[113.36652374 663.23748779]
[101.04160309 671.90032959]
[87.09783173 677.60284424]
[72.23464966 680.05914307]
[57.19756317 679.14599609]
[42.74084473 674.90911865]
[29.58962631 667.56109619]
[18.40357018 657.47052002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[49 174]
[50 173]
[51 172]
[54 168]
[55 167]
[56 166]
[58 165]
[59 164]
[61 162]
[62 161]
[63 158]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[70 148]
[71 147]
[72 146]
[73 142]
[74 141]
[75 140]
[78 137]
[79 136]
[80 125]
[81 124]
[82 123]
[83 122]
[86 120]
[87 119]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
