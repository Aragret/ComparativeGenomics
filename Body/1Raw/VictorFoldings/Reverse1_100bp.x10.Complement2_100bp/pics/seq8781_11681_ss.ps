%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-27.66189575 757.91717529]
[-19.20645714 743.86590576]
[-19.42978477 728.86761475]
[-19.65311241 713.86926270]
[-27.31429672 726.76525879]
[-39.51115799 735.49658203]
[-54.18831253 738.59191895]
[-68.87239838 735.52966309]
[-81.08889771 726.82580566]
[-88.77909851 713.94708252]
[-90.64708710 699.06384277]
[-86.37805939 684.68414307]
[-76.69143677 673.23126221]
[-63.21956635 666.63513184]
[-48.23270798 666.00738525]
[-34.25640869 671.45373535]
[-23.64591789 682.05645752]
[-18.18901825 696.03039551]
[-15.52322197 681.26916504]
[-12.85742664 666.50793457]
[-10.19163132 651.74676514]
[-7.52583551 636.98553467]
[-4.86004019 622.22430420]
[-2.41431260 607.42504883]
[-8.17803097 593.69079590]
[1.52079880 581.19110107]
[3.74591589 566.35705566]
[5.97103310 551.52301025]
[8.19614983 536.68896484]
[10.42126751 521.85491943]
[12.64638424 507.02087402]
[14.87150192 492.18682861]
[17.09661865 477.35278320]
[4.92307806 472.76803589]
[-6.11406946 465.87289429]
[-15.58144283 456.93551636]
[-23.10678673 446.30422974]
[-28.39360237 434.39413452]
[-31.23283577 421.67065430]
[-31.51114655 408.63159180]
[-29.21541595 395.78747559]
[-24.43336105 383.64169312]
[-17.35018539 372.67065430]
[-8.24139786 363.30517578]
[2.53789878 355.91354370]
[14.56684589 350.78704834]
[27.37526894 348.12847900]
[40.46204758 348.04412842]
[43.56615829 333.36880493]
[46.67026901 318.69351196]
[49.77437973 304.01821899]
[52.87849045 289.34292603]
[55.98260117 274.66760254]
[44.60145187 262.83767700]
[42.49306870 246.39030457]
[50.68484879 231.78222656]
[66.12120056 224.86737061]
[69.00646973 210.14747620]
[71.89174652 195.42758179]
[74.77701569 180.70770264]
[72.97882080 173.53913879]
[77.81637573 165.79086304]
[80.92048645 151.11555481]
[74.58718872 140.80944824]
[77.05317688 128.55780029]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[100.16556549 62.38362122]
[103.05083466 47.66373062]
[105.16545868 32.81353378]
[106.50370026 17.87334824]
[100.02844238 3.43791890]
[108.87036133 -8.54831314]
[110.20859528 -23.48849869]
[97.17849731 -31.36110306]
[88.89242554 -44.05866241]
[86.94901276 -59.03342056]
[91.68061829 -73.30832672]
[102.09790039 -84.06888580]
[116.09617615 -89.21804810]
[117.43441010 -104.15823364]
[118.77264404 -119.09841919]
[120.11087799 -134.03860474]
[121.44911194 -148.97879028]
[122.56475830 -163.93724060]
[123.45757294 -178.91064453]
[124.35038757 -193.88404846]
[115.72889709 -210.15524292]
[125.95655823 -224.41574097]
[126.62634277 -239.40077209]
[127.29612732 -254.38581848]
[127.74272919 -269.37918091]
[127.96605682 -284.37750244]
[120.43508148 -298.29135132]
[128.36100769 -310.90200806]
[114.10711670 -316.01132202]
[102.28607941 -325.47396851]
[94.18016815 -338.26354980]
[90.66864777 -352.99267578]
[92.13241577 -368.06372070]
[98.41270447 -381.84185791]
[108.82826996 -392.83251953]
[122.24931335 -399.84353638]
[137.22001648 -402.11441040]
[152.11647034 -399.39880371]
[165.32281494 -391.99130249]
[175.40652466 -380.69540405]
[181.27380371 -366.73638916]
[182.28820801 -351.62844849]
[178.33970642 -337.01037598]
[169.85658264 -324.46783447]
[157.75904846 -315.36132812]
[143.35934448 -310.67868042]
[150.90629578 -297.83761597]
[142.96440125 -284.15417480]
[142.74107361 -269.15585327]
[145.36563110 -265.16577148]
[145.51153564 -259.48458862]
[142.28115845 -253.71603394]
[141.61137390 -238.73098755]
[140.94158936 -223.74595642]
[148.87052917 -214.61039734]
[148.43516541 -202.12063599]
[139.32379150 -192.99124146]
[138.43098450 -178.01783752]
[137.53816223 -163.04443359]
[139.98194885 -158.94114685]
[139.87402344 -153.25912476]
[136.38929749 -147.64056396]
[135.05105591 -132.70037842]
[133.71282959 -117.76018524]
[132.37458801 -102.81999969]
[131.03636169 -87.87981415]
[143.89668274 -80.32485199]
[152.23577881 -67.88423157]
[154.35511780 -52.99566650]
[149.78134155 -38.60467148]
[139.37057495 -27.58184052]
[125.14878082 -22.15026474]
[123.81054688 -7.21007872]
[130.38151550 6.15672874]
[121.44387817 19.21158218]
[120.10564423 34.15176773]
[131.55975342 24.46654510]
[146.55863953 24.28402901]
[158.24502563 33.68766403]
[161.27604675 48.37823486]
[154.26597595 61.63941193]
[140.41969299 67.40836334]
[126.06756592 63.04759598]
[117.77072906 50.54900360]
[114.88545990 65.26889801]
[116.68365479 72.43745422]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[108.01174164 141.81759644]
[95.59579468 154.21966553]
[92.49168396 168.89497375]
[89.49691010 183.59297180]
[86.61163330 198.31286621]
[83.72636414 213.03276062]
[80.84108734 227.75263977]
[90.95085907 237.12191772]
[95.07820129 250.15969849]
[92.24701691 263.42822266]
[83.30140686 273.48406982]
[70.65790558 277.77172852]
[67.55379486 292.44702148]
[64.44968414 307.12231445]
[61.34557343 321.79763794]
[58.24146271 336.47293091]
[55.13735199 351.14822388]
[70.51344299 358.65267944]
[83.44196320 369.84423828]
[93.06081390 383.96984863]
[98.73033142 400.08096313]
[100.07585144 417.09738159]
[97.01242065 433.87957764]
[89.75019073 449.30505371]
[78.77996063 462.34332275]
[64.84004974 472.12490845]
[48.86658859 477.99923706]
[31.93066216 479.57791138]
[29.70554543 494.41195679]
[27.48042870 509.24597168]
[25.25531197 524.08001709]
[23.03019333 538.91406250]
[20.80507660 553.74810791]
[18.57995987 568.58215332]
[16.35484314 583.41619873]
[21.95940590 598.21142578]
[12.41973114 609.65014648]
[14.48018074 615.93237305]
[13.24423122 621.47937012]
[9.90117741 624.89007568]
[7.23538160 639.65130615]
[4.56958628 654.41253662]
[1.90379071 669.17376709]
[-0.76200479 683.93499756]
[-3.42780042 698.69616699]
[-4.65477562 713.64593506]
[-4.43144798 728.64428711]
[-4.20812035 743.64257812]
[4.66192675 757.43585205]
[-3.08788610 771.88830566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 208]
[3 207]
[4 206]
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 197]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[57 167]
[58 166]
[59 165]
[60 164]
[62 163]
[63 162]
[66 160]
[67 159]
[68 157]
[69 156]
[70 154]
[71 153]
[72 145]
[73 144]
[75 142]
[76 141]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 128]
[88 127]
[89 126]
[91 123]
[92 122]
[93 121]
[94 118]
[95 117]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
