%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[122.11434937 550.55023193]
[128.83129883 537.07922363]
[138.12271118 525.23632812]
[149.60812378 515.50646973]
[162.81718445 508.28805542]
[158.41618347 493.94821167]
[154.01519775 479.60836792]
[149.61419678 465.26852417]
[145.21319580 450.92868042]
[137.24684143 463.63839722]
[122.65808868 467.12670898]
[109.80404663 459.39538574]
[106.04809570 444.87322998]
[113.54180908 431.87921143]
[127.99245453 427.85690308]
[141.12144470 435.10971069]
[138.01733398 420.43441772]
[134.91322327 405.75912476]
[131.80911255 391.08380127]
[128.70500183 376.40850830]
[125.60089111 361.73321533]
[122.49678040 347.05789185]
[115.81489563 360.48742676]
[102.98805237 368.26382446]
[87.99078369 367.97744751]
[75.47016144 359.71704102]
[69.30583191 346.04220581]
[71.40789032 331.19024658]
[81.12497711 319.76315308]
[95.44615173 315.30178833]
[109.93384552 319.18850708]
[120.09900665 330.21923828]
[118.98335266 315.26080322]
[110.32087708 303.14425659]
[117.01033783 288.80682373]
[115.89468384 273.84835815]
[114.77903748 258.88992310]
[113.66339111 243.93145752]
[112.54773712 228.97300720]
[103.88526154 216.85646057]
[110.57472229 202.51904297]
[109.45906830 187.56059265]
[108.00965118 172.63078308]
[106.22718811 157.73706055]
[104.44471741 142.84333801]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[75.26779938 47.87698364]
[71.94373322 45.08332443]
[69.88827515 41.71588898]
[69.12602997 38.24394608]
[69.52666473 35.09654999]
[70.83146667 32.61549377]
[67.07516479 18.09343529]
[63.31886292 3.57137585]
[59.56256104 -10.95068359]
[49.81682205 0.45197132]
[34.82107925 0.09456144]
[25.62964058 -11.75944424]
[29.01809120 -26.37171364]
[42.48859024 -32.97062683]
[56.11013031 -26.69297600]
[53.44433594 -41.45419312]
[49.47224426 -46.73945999]
[48.85781860 -52.38919449]
[50.92578125 -56.69414139]
[48.70066452 -71.52818298]
[46.47554779 -86.36222839]
[43.22252274 -90.44449615]
[41.98447418 -94.91893005]
[42.57336044 -98.95232391]
[44.49769211 -101.90686035]
[42.93717194 -116.82546234]
[41.37664795 -131.74406433]
[39.81612396 -146.66267395]
[37.14213181 -150.08374023]
[35.82802963 -153.80364990]
[35.80076981 -157.35816956]
[36.84405518 -160.35452271]
[38.63404083 -162.51187134]
[37.96425629 -177.49690247]
[37.29447174 -192.48194885]
[36.62468719 -207.46697998]
[35.95490265 -222.45202637]
[35.28511429 -237.43705750]
[34.61532974 -252.42210388]
[26.26953888 -265.86300659]
[33.43081665 -278.92309570]
[32.76103210 -293.90811157]
[21.38022614 -304.54367065]
[20.91443634 -319.75018311]
[31.12394714 -330.53448486]
[30.45416260 -345.51953125]
[16.26377678 -351.04699707]
[5.55304956 -361.87289429]
[0.17767967 -376.12158203]
[1.06898248 -391.32440186]
[8.07253456 -404.84735107]
[19.97492599 -414.34750366]
[34.71400070 -418.17889404]
[49.73611832 -415.67773438]
[62.43861008 -407.27734375]
[70.62068939 -394.43316650]
[72.86476898 -379.37048340]
[68.78204346 -364.69903564]
[59.07986450 -352.96075439]
[45.43920135 -346.18933105]
[46.10898590 -331.20428467]
[57.23991394 -321.37380981]
[58.13263702 -306.18640137]
[47.74607086 -294.57791138]
[48.41585541 -279.59286499]
[56.71374130 -267.22378540]
[49.60036850 -253.09188843]
[50.27015305 -238.10684204]
[50.93994141 -223.12181091]
[51.60972595 -208.13676453]
[52.27951050 -193.15173340]
[52.94929504 -178.16668701]
[53.61907959 -163.18165588]
[54.73472977 -148.22319031]
[56.29525375 -133.30459595]
[57.85577393 -118.38598633]
[59.41629791 -103.46738434]
[61.30958939 -88.58734894]
[63.53470612 -73.75330353]
[65.75982666 -58.91925812]
[68.20555115 -44.11998749]
[70.87134552 -29.35877228]
[74.08462524 -14.70698452]
[77.84091949 -0.18492490]
[81.59722137 14.33713436]
[85.35352325 28.85919380]
[89.54053497 43.26297379]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[119.04451752 109.00133514]
[128.14280701 97.07569122]
[141.26585388 89.81029510]
[156.20216370 88.42949677]
[170.43472290 93.16598511]
[181.56507874 103.22158051]
[187.71759033 116.90173340]
[187.85545349 131.90109253]
[181.95541382 145.69201660]
[171.01174927 155.95048523]
[156.86865234 160.94776917]
[141.90948486 159.84173584]
[128.65513611 152.81877136]
[119.33843994 141.06088257]
[121.12090302 155.95458984]
[122.90336609 170.84831238]
[126.03340912 175.02563477]
[127.13768768 179.53494263]
[126.42897034 183.54901123]
[124.41752625 186.44494629]
[125.53317261 201.40339661]
[134.27545166 214.58987427]
[127.50619507 227.85736084]
[128.62184143 242.81581116]
[129.73748779 257.77426147]
[130.85313416 272.73272705]
[131.96879578 287.69116211]
[140.71107483 300.87765503]
[133.94180298 314.14514160]
[135.05746460 329.10360718]
[137.17208862 343.95379639]
[140.27618408 358.62908936]
[143.38029480 373.30441284]
[146.48440552 387.97970581]
[149.58851624 402.65499878]
[152.69262695 417.33032227]
[155.79673767 432.00561523]
[159.55303955 446.52767944]
[163.95404053 460.86752319]
[168.35504150 475.20736694]
[172.75604248 489.54721069]
[177.15702820 503.88705444]
[192.14128113 502.45272827]
[207.10748291 504.06442261]
[221.44279480 508.65612793]
[234.56019592 516.03979492]
[245.92251587 525.91314697]
[255.06449890 537.87176514]
[261.61178589 551.42602539]
[265.29623413 566.02087402]
[265.96701050 581.05865479]
[263.59664917 595.92358398]
[258.28216553 610.00695801]
[250.24122620 622.73205566]
[239.80310059 633.57781982]
[227.39520264 642.10009766]
[213.52565002 647.94989014]
[198.76237488 650.88769531]
[183.70993042 650.79321289]
[168.98471069 647.67028809]
[155.18969727 641.64678955]
[142.88980103 632.96936035]
[132.58866882 621.99340820]
[124.70814514 609.16833496]
[119.57092285 595.01934814]
[117.38737488 580.12585449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[32 174]
[33 173]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[41 165]
[42 164]
[43 160]
[44 159]
[45 158]
[46 144]
[47 143]
[49 141]
[50 140]
[51 139]
[52 138]
[57 137]
[58 136]
[59 135]
[60 134]
[66 133]
[67 132]
[70 131]
[71 130]
[72 129]
[76 128]
[77 127]
[78 126]
[79 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[92 116]
[93 115]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
