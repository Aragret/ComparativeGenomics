%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-23.00042725 753.67272949]
[-36.82897186 760.35607910]
[-52.14532471 759.21368408]
[-64.82946014 750.55297852]
[-71.46941376 736.70355225]
[-70.27906799 721.39086914]
[-61.57862091 708.73394775]
[-47.70845032 702.13745117]
[-46.59280014 687.17895508]
[-45.47715378 672.22052002]
[-44.36150360 657.26208496]
[-43.24585342 642.30358887]
[-42.13020706 627.34515381]
[-53.43883896 637.19982910]
[-68.43334961 637.60565186]
[-80.25844574 628.37707520]
[-83.50785828 613.73321533]
[-76.69599152 600.36914062]
[-62.93714905 594.39471436]
[-48.52167892 598.54132080]
[-40.03967667 610.91497803]
[-37.37388229 596.15374756]
[-34.70808792 581.39251709]
[-32.04228973 566.63134766]
[-33.94701767 559.49035645]
[-29.22535515 551.67089844]
[-26.34008217 536.95098877]
[-23.45480919 522.23107910]
[-20.56953621 507.51119995]
[-31.97391701 502.17163086]
[-41.90144730 494.41061401]
[-49.84645081 484.61849976]
[-55.40313339 473.28933716]
[-58.28631210 460.99569702]
[-58.34603882 448.35998535]
[-55.57540131 436.02273560]
[-50.11108017 424.61022949]
[-42.22658920 414.70275879]
[-32.31860733 406.80496216]
[-20.88701057 401.32031250]
[-8.50965595 398.53030396]
[4.18682718 398.58020020]
[7.94312811 384.05816650]
[11.69942856 369.53610229]
[15.45572948 355.01403809]
[14.08740139 347.75115967]
[19.37757111 340.30453491]
[23.34966660 325.84002686]
[27.32176208 311.37548828]
[31.29385948 296.91098022]
[35.26595688 282.44644165]
[27.69856071 269.66873169]
[31.52077866 254.94305420]
[44.97453690 247.09231567]
[48.94663239 232.62779236]
[52.91872787 218.16326904]
[56.89082336 203.69874573]
[60.86292267 189.23422241]
[46.73398972 194.27142334]
[33.90666962 186.49583435]
[31.83677864 171.63932800]
[42.05016708 160.65357971]
[57.01790237 161.63687134]
[65.70604706 173.86271667]
[59.10997391 160.55755615]
[64.01684570 146.15695190]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[102.16429138 60.59273148]
[107.37133026 55.34787369]
[112.40824890 41.21884537]
[117.44515991 27.08981514]
[122.48207855 12.96078587]
[127.51899719 -1.16824389]
[119.73304749 -16.83343697]
[125.57067108 -32.96530151]
[140.96026611 -39.74756622]
[145.78627014 -53.95002365]
[149.97328186 -68.35380554]
[153.51295471 -82.93017578]
[157.05262756 -97.50655365]
[155.58145142 -102.51482391]
[156.12419128 -107.12554169]
[158.19218445 -110.63815308]
[161.08952332 -112.64758301]
[165.27653503 -127.05136871]
[169.46354675 -141.45515442]
[173.43563843 -155.91967773]
[177.19194031 -170.44172668]
[180.84002686 -184.99134827]
[184.37969971 -199.56773376]
[187.91937256 -214.14410400]
[191.45904541 -228.72047424]
[194.99871826 -243.29685974]
[198.42977905 -257.89916992]
[201.75202942 -272.52664185]
[188.21910095 -279.15661621]
[176.58030701 -288.72921753]
[167.46331787 -300.72827148]
[161.35980225 -314.50665283]
[158.59892273 -329.32131958]
[159.32955933 -344.37332153]
[163.51229858 -358.85095215]
[170.92160034 -371.97341919]
[181.15786743 -383.03305054]
[193.66908264 -391.43341064]
[207.78053284 -396.72149658]
[222.73118591 -398.61212158]
[237.71479797 -397.00332642]
[251.92330933 -391.98187256]
[264.59045410 -383.81854248]
[275.03314209 -372.95361328]
[282.68820190 -359.97299194]
[287.14282227 -345.57669067]
[288.15670776 -330.54110718]
[285.67526245 -315.67709351]
[279.83224487 -301.78622437]
[270.94277954 -289.61764526]
[259.48629761 -279.82757568]
[246.08059692 -272.94400024]
[231.44863892 -269.33810425]
[216.37950134 -269.20437622]
[213.05723572 -254.57691956]
[214.64120483 -247.35800171]
[209.57508850 -239.75718689]
[206.03541565 -225.18080139]
[202.49574280 -210.60443115]
[198.95606995 -196.02806091]
[195.41639709 -181.45167542]
[196.89271545 -174.20997620]
[191.71400452 -166.68544006]
[187.95770264 -152.16337585]
[189.56657410 -147.66664124]
[188.36770630 -142.11149597]
[183.86732483 -137.26814270]
[179.68031311 -122.86435699]
[175.49330139 -108.46057892]
[171.62899780 -93.96688080]
[168.08932495 -79.39051056]
[164.54965210 -64.81413269]
[177.88970947 -71.67291260]
[192.21397400 -67.22145081]
[199.31684875 -54.00974655]
[195.12948608 -39.60606384]
[182.05061340 -32.26148605]
[167.57237244 -36.18332291]
[159.98872375 -49.12402344]
[155.16271973 -34.92156982]
[162.41925049 -24.27392769]
[162.21511841 -11.19568634]
[154.40081787 -0.46502352]
[141.64802551 3.86867237]
[136.61111450 17.99770164]
[131.57418823 32.12673187]
[126.53727722 46.25576019]
[121.50035858 60.38478851]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[98.66980743 158.51052856]
[93.36038208 172.76762390]
[79.83507538 178.89962769]
[75.32744598 193.20631409]
[71.35534668 207.67083740]
[67.38325500 222.13536072]
[63.41115570 236.59988403]
[59.43906021 251.06440735]
[66.99657440 264.68505859]
[62.76224899 279.29754639]
[49.73048019 286.41854858]
[45.75838089 300.88305664]
[41.78628540 315.34759521]
[37.81418991 329.81210327]
[33.84209442 344.27664185]
[29.97778893 358.77032471]
[26.22148705 373.29238892]
[22.46518707 387.81445312]
[18.70888710 402.33651733]
[33.71446609 411.45285034]
[45.17681503 424.72994995]
[51.99240494 440.87326050]
[53.51010895 458.31311035]
[49.59335709 475.35729980]
[40.63237762 490.35534668]
[27.50533676 501.85818481]
[11.49228764 508.75836182]
[-5.84964514 510.39648438]
[-8.73491764 525.11639404]
[-11.62019062 539.83624268]
[-14.50546265 554.55615234]
[-17.28107452 569.29711914]
[-19.94686890 584.05834961]
[-22.61266518 598.81958008]
[-25.27846146 613.58074951]
[-27.17175293 628.46081543]
[-28.28740120 643.41925049]
[-29.40304947 658.37768555]
[-30.51869965 673.33618164]
[-31.63434792 688.29461670]
[-32.74999619 703.25305176]
[-20.01181412 711.83410645]
[-13.28517056 725.64166260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[21 202]
[22 201]
[23 200]
[24 199]
[26 198]
[27 197]
[28 196]
[29 195]
[42 186]
[43 185]
[44 184]
[45 183]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[64 170]
[67 167]
[68 166]
[69 165]
[71 162]
[72 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[81 152]
[82 151]
[83 144]
[84 143]
[85 142]
[89 141]
[90 140]
[91 139]
[92 136]
[93 135]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
