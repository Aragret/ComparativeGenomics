%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[137.87765503 646.55718994]
[126.18442535 637.15203857]
[115.18376160 626.94543457]
[104.93046570 615.98828125]
[95.47562408 604.33520508]
[86.86633301 592.04418945]
[79.14548492 579.17645264]
[72.35154724 565.79620361]
[66.51837158 551.97003174]
[61.67501068 537.76684570]
[57.84560013 523.25738525]
[55.04921722 508.51394653]
[53.29978943 493.60998535]
[52.60603333 478.61972046]
[52.97141266 463.61788940]
[54.39409637 448.67916870]
[56.86700439 433.87802124]
[60.37781525 419.28820801]
[64.90903473 404.98236084]
[70.43808746 391.03179932]
[76.93743896 377.50598145]
[84.37469482 364.47235107]
[92.71281433 351.99575806]
[101.91024780 340.13845825]
[111.92117310 328.95944214]
[122.69573212 318.51443481]
[134.18022156 308.85549927]
[146.31744385 300.03070068]
[159.04693604 292.08407593]
[172.30525208 285.05514526]
[166.23141479 271.33987427]
[160.15759277 257.62460327]
[154.08375549 243.90934753]
[148.00991821 230.19407654]
[141.93608093 216.47882080]
[135.86225891 202.76354980]
[123.31085205 199.84945679]
[114.59956360 190.09263611]
[113.07588959 176.90594482]
[119.51865387 165.07778931]
[113.64969635 151.27360535]
[107.78073120 137.46943665]
[101.91177368 123.66525269]
[96.04280853 109.86107635]
[89.26281738 96.48080444]
[81.60222626 83.58448029]
[74.52899933 77.80457306]
[73.92521667 70.43862152]
[66.45748138 57.42967224]
[58.98973846 44.42071915]
[51.52199554 31.41176605]
[44.05425262 18.40281296]
[36.58651352 5.39386129]
[29.11877251 -7.61509132]
[27.47376442 7.29443407]
[18.67423630 19.44220352]
[5.02036428 25.65282059]
[-9.91876411 24.30284309]
[-22.23809624 15.74515247]
[-28.71738815 2.21670890]
[-27.66296768 -12.74618530]
[-19.35045815 -25.23226547]
[-5.95272970 -31.97769928]
[9.02808285 -31.21924782]
[21.67543030 -23.15582085]
[16.22007370 -37.12862015]
[10.76471615 -51.10141754]
[5.30935955 -65.07421112]
[-0.14599758 -79.04701233]
[-5.60135460 -93.01981354]
[-11.05671215 -106.99260712]
[-16.51206970 -120.96540833]
[-31.15638733 -117.59468079]
[-46.13543701 -116.39219666]
[-61.12993622 -117.38359070]
[-75.82027435 -120.54772949]
[-89.89333344 -125.81716156]
[-103.04914093 -133.07957458]
[-115.00727081 -142.18017578]
[-125.51285553 -152.92497253]
[-134.34194946 -165.08494568]
[-141.30636597 -178.40089417]
[-146.25765991 -192.58900452]
[-149.09030151 -207.34686279]
[-149.74389648 -222.35987854]
[-148.20451355 -237.30805969]
[-144.50497437 -251.87278748]
[-138.72415161 -265.74362183]
[-130.98522949 -278.62487793]
[-121.45317841 -290.24200439]
[-110.33117676 -300.34741211]
[-97.85629272 -308.72564697]
[-84.29442596 -315.19818115]
[-69.93464661 -319.62701416]
[-55.08303452 -321.91778564]
[-40.05615616 -322.02160645]
[-25.17431068 -319.93630981]
[-10.75469971 -315.70632935]
[2.89531684 -309.42184448]
[15.48478985 -301.21676636]
[26.74537468 -291.26605225]
[36.43704987 -279.78173828]
[44.35323715 -267.00863647]
[50.32519913 -253.21902466]
[54.22565079 -238.70681763]
[55.97144699 -223.78132629]
[55.52537918 -208.76071167]
[52.89695740 -193.96513367]
[48.14220047 -179.70996094]
[41.36245728 -166.29902649]
[32.70224380 -154.01820374]
[22.34615135 -143.12925720]
[10.51491833 -133.86428833]
[-2.53927088 -126.42076111]
[2.91608620 -112.44796753]
[8.37144279 -98.47516632]
[13.82680035 -84.50237274]
[19.28215790 -70.52957153]
[24.73751450 -56.55677414]
[30.19287109 -42.58397675]
[35.64822769 -28.61117744]
[42.12772369 -15.08283234]
[49.59546661 -2.07387996]
[57.06320572 10.93507195]
[64.53094482 23.94402504]
[71.99868774 36.95297623]
[79.46643066 49.96192932]
[86.93417358 62.97088242]
[94.49855042 75.92388153]
[102.15914917 88.82020569]
[104.16503143 73.95493317]
[113.80796051 62.46519852]
[128.09996033 57.91122818]
[142.61250305 61.70411682]
[152.84872437 72.66859436]
[155.63681030 87.40720367]
[150.11285400 101.35301971]
[137.98849487 110.18478394]
[123.02062225 111.16587830]
[109.84699249 103.99211884]
[115.71595001 117.79629517]
[121.58490753 131.60046387]
[127.45387268 145.40464783]
[133.32283020 159.20883179]
[149.66333008 165.45440674]
[156.30047607 181.27410889]
[149.57751465 196.68971252]
[155.65135193 210.40498352]
[161.72518921 224.12025452]
[167.79902649 237.83551025]
[173.87284851 251.55078125]
[179.94668579 265.26605225]
[186.02052307 278.98132324]
[200.13591003 273.88772583]
[214.57543945 269.80252075]
[229.26716614 266.74603271]
[244.13790894 264.73352051]
[259.11355591 263.77499390]
[274.11950684 263.87521362]
[289.08102417 265.03369141]
[303.92355347 267.24468994]
[318.57315063 270.49713135]
[332.95681763 274.77484131]
[347.00292969 280.05651855]
[360.64144897 286.31582642]
[373.80450439 293.52160645]
[386.42645264 301.63796997]
[398.44445801 310.62442017]
[409.79861450 320.43624878]
[420.43237305 331.02456665]
[430.29275513 342.33657837]
[439.33062744 354.31597900]
[447.50097656 366.90304565]
[454.76309204 380.03509521]
[461.08078003 393.64669800]
[466.42257690 407.67001343]
[470.76190186 422.03524780]
[474.07705688 436.67074585]
[476.35162354 451.50366211]
[477.57418823 466.46008301]
[477.73870850 481.46548462]
[476.84432983 496.44509888]
[474.89553833 511.32431030]
[471.90203857 526.02899170]
[467.87872314 540.48590088]
[462.84567261 554.62298584]
[456.82791138 568.36981201]
[449.85546875 581.65795898]
[441.96304321 594.42114258]
[433.19000244 606.59576416]
[423.57998657 618.12127686]
[413.18093872 628.94018555]
[402.04461670 638.99859619]
[390.22653198 648.24633789]
[377.78555298 656.63751221]
[364.78366089 664.13012695]
[351.28564453 670.68695068]
[337.35870361 676.27532959]
[323.07229614 680.86737061]
[308.49752808 684.44024658]
[293.70703125 686.97607422]
[278.77453613 688.46234131]
[263.77438354 688.89154053]
[248.78131104 688.26153564]
[233.87002563 686.57556152]
[219.11480713 683.84191895]
[204.58918762 680.07427979]
[190.36550903 675.29138184]
[176.51464844 669.51708984]
[163.10560608 662.78015137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 130]
[46 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
