%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCAUCUCUUUACUAGGCAUUAUAUCCGGAGCGGGCUACACAUCCUUCUCCGUCUAUUUCUUAUAACUCCGCGGUAACCGCACUUCCAUCGCCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[122.71392822 607.07885742]
[124.08305359 592.08483887]
[128.54005432 577.70330811]
[135.89010620 564.56292725]
[145.81187439 553.23803711]
[157.87164307 544.22387695]
[171.54219055 537.91436768]
[168.21994019 523.28692627]
[164.89767456 508.65945435]
[154.53364563 497.96194458]
[159.02227783 482.79083252]
[155.70001221 468.16336060]
[152.37774658 453.53591919]
[149.05549622 438.90844727]
[145.73323059 424.28100586]
[133.03242493 416.58520508]
[129.45481873 401.79821777]
[137.61297607 388.52862549]
[134.29072571 373.90115356]
[130.96846008 359.27368164]
[126.42156982 353.44723511]
[127.70734406 344.40374756]
[124.60323334 329.72845459]
[121.49912262 315.05316162]
[118.39501953 300.37783813]
[115.29090881 285.70254517]
[112.18679810 271.02725220]
[109.08268738 256.35192871]
[105.97857666 241.67663574]
[97.87021637 254.29624939]
[83.58497620 258.87139893]
[69.65388489 253.31040955]
[62.44604492 240.15567017]
[65.25678253 225.42137146]
[76.80107117 215.84381104]
[91.80101013 215.80174255]
[103.39978790 225.31597900]
[101.83926392 210.39738464]
[100.27873993 195.47877502]
[98.71821594 180.56016541]
[95.63809967 176.91024780]
[94.81814575 171.28666687]
[97.34013367 165.17510986]
[96.22448730 150.21665955]
[95.10884094 135.25820923]
[93.99318695 120.29975128]
[83.47323608 113.22980499]
[78.87767029 101.41733551]
[81.85388184 89.09679413]
[91.33497620 80.68474579]
[90.44215393 65.71134186]
[89.43789673 50.74499893]
[88.32225037 35.78654480]
[76.62982941 25.49455643]
[75.71148682 10.30866337]
[85.59538269 -0.77484691]
[84.47973633 -15.73330021]
[83.36408997 -30.69175339]
[69.44390869 -32.72591019]
[56.26170349 -37.62088776]
[44.39822006 -45.15821838]
[34.37551880 -55.00308990]
[26.63400269 -66.71921539]
[21.51307106 -79.78814697]
[19.23622322 -93.63227081]
[19.90132141 -107.64027405]
[23.47638321 -121.19416809]
[29.80110168 -133.69656372]
[38.59404373 -144.59700012]
[49.46516037 -153.41610718]
[61.93309784 -159.76683044]
[75.44651031 -163.37127686]
[74.77672577 -178.35632324]
[60.05706024 -181.63757324]
[46.69873428 -188.61184692]
[35.60955811 -198.79841614]
[27.54138374 -211.49845886]
[23.03912163 -225.84304810]
[22.40394402 -240.85256958]
[25.67314911 -255.50360107]
[32.61802673 -268.79876709]
[42.75983810 -279.83453369]
[55.40283203 -287.86270142]
[69.68196106 -292.34109497]
[69.01217651 -307.32611084]
[68.34239197 -322.31115723]
[67.67260742 -337.29620361]
[59.32681274 -350.73712158]
[66.48809052 -363.79718018]
[58.14229965 -377.23809814]
[65.30358124 -390.29815674]
[64.63379669 -405.28320312]
[63.96400833 -420.26824951]
[63.29422379 -435.25329590]
[48.66133499 -439.04406738]
[35.79676819 -446.98095703]
[25.84443092 -458.35824585]
[19.68928146 -472.16421509]
[17.87862778 -487.17132568]
[20.57347488 -502.04510498]
[27.53419685 -515.46301270]
[38.14185333 -526.23187256]
[51.45321655 -533.39422607]
[66.28464508 -536.31311035]
[81.31735229 -534.72906494]
[95.21462250 -528.78283691]
[106.74073029 -519.00329590]
[114.87078094 -506.25988770]
[118.88185883 -491.68585205]
[118.41728973 -476.57705688]
[113.51839447 -462.27697754]
[104.62077332 -450.05718994]
[92.51560211 -441.00421143]
[78.27925873 -435.92306519]
[78.94905090 -420.93801880]
[79.61883545 -405.95300293]
[80.28862000 -390.96795654]
[88.58650208 -378.59887695]
[81.47312927 -364.46697998]
[89.77101898 -352.09786987]
[82.65764618 -337.96597290]
[83.32743073 -322.98095703]
[83.99721527 -307.99591064]
[84.66699982 -293.01086426]
[99.28872681 -289.82424927]
[112.59754181 -282.95605469]
[123.68347931 -272.86911011]
[131.78678894 -260.24655151]
[136.35006714 -245.94560242]
[137.05650330 -230.93928528]
[133.85195923 -216.25021362]
[126.94899750 -202.88099670]
[116.81284332 -191.74572754]
[104.12999725 -183.60749817]
[89.76176453 -179.02610779]
[90.43154907 -164.04106140]
[106.13349915 -161.08078003]
[120.68569183 -154.46133423]
[133.24841309 -144.56025696]
[143.09565735 -131.94462585]
[149.65718079 -117.33850098]
[152.55142212 -101.58142853]
[151.60775757 -85.58013153]
[146.87654114 -70.25637054]
[138.62638855 -56.49383545]
[127.32900238 -45.08718109]
[113.63214874 -36.69614792]
[98.32254028 -31.80740166]
[99.43818665 -16.84894943]
[100.55384064 -1.89049566]
[111.97251892 7.60420179]
[113.31703949 22.75830841]
[103.28070068 34.67089462]
[104.39634705 49.62934875]
[108.02863312 56.06583023]
[105.41556549 64.81852722]
[106.30838013 79.79193115]
[118.89916992 90.46150208]
[120.00409698 106.92803955]
[108.95164490 119.18410492]
[110.06729126 134.14254761]
[111.18293762 149.10101318]
[112.29859161 164.05946350]
[113.63682556 178.99964905]
[115.19734192 193.91825867]
[116.75786591 208.83685303]
[118.31838989 223.75546265]
[120.65387726 238.57252502]
[123.75798798 253.24783325]
[126.86209869 267.92312622]
[129.96620178 282.59844971]
[133.07031250 297.27374268]
[136.17442322 311.94903564]
[139.27853394 326.62432861]
[142.38264465 341.29965210]
[145.59591675 355.95144653]
[148.91818237 370.57888794]
[152.24044800 385.20635986]
[165.33023071 393.64999390]
[168.49110413 408.53164673]
[160.36070251 420.95874023]
[163.68295288 435.58618164]
[167.00521851 450.21365356]
[170.32746887 464.84112549]
[173.64973450 479.46856689]
[184.25138855 491.21231079]
[179.52513123 505.33718872]
[182.84739685 519.96466064]
[186.16966248 534.59210205]
[201.22447205 534.37738037]
[215.99488831 537.29772949]
[229.83517456 543.22564697]
[242.14033508 551.90185547]
[252.37240601 562.94714355]
[260.08410645 575.87866211]
[264.93829346 590.13104248]
[266.72277832 605.08123779]
[265.35955811 620.07574463]
[260.90820312 634.45904541]
[253.56332397 647.60235596]
[243.64599609 658.93109131]
[231.58978271 667.95007324]
[217.92172241 674.26495361]
[203.23930359 677.59967041]
[188.18440247 677.80853271]
[173.41514587 674.88226318]
[159.57717896 668.94897461]
[147.27545166 660.26788330]
[137.04771423 649.21856689]
[129.34111023 636.28405762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[18 178]
[19 177]
[20 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[37 167]
[38 166]
[39 165]
[40 164]
[43 163]
[44 162]
[45 161]
[46 160]
[50 157]
[51 156]
[52 154]
[53 153]
[56 150]
[57 149]
[58 148]
[72 136]
[73 135]
[84 124]
[85 123]
[86 122]
[87 121]
[89 119]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
