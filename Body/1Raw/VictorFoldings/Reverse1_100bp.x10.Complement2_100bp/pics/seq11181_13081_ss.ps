%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[60.64568710 597.78332520]
[52.65574265 584.81878662]
[50.63617706 569.72436523]
[54.93688965 555.11529541]
[64.81275177 543.52276611]
[78.55272675 536.95520020]
[78.10611725 521.96185303]
[77.65950775 506.96847534]
[69.54669952 494.47723389]
[76.86968994 480.45278931]
[76.42308807 465.45944214]
[73.62297058 461.59054565]
[73.22354126 455.92156982]
[76.19310760 450.01449585]
[76.19310760 435.01449585]
[76.19310760 420.01449585]
[76.19310760 405.01449585]
[76.19310760 390.01449585]
[67.86415100 381.24209595]
[67.74138641 368.74536133]
[76.43601990 359.21823120]
[76.65934753 344.21987915]
[76.88267517 329.22155762]
[77.10600281 314.22320557]
[69.55905151 301.38217163]
[77.50096130 287.69869995]
[77.72428894 272.70037842]
[77.94761658 257.70202637]
[78.17094421 242.70370483]
[78.39427185 227.70536804]
[78.61759949 212.70703125]
[78.84092712 197.70869446]
[79.06425476 182.71035767]
[79.28758240 167.71202087]
[79.51091003 152.71368408]
[72.30958557 165.87197876]
[61.43779373 176.20658875]
[47.93176651 182.73248291]
[33.07880783 184.82763672]
[18.29461479 182.29237366]
[4.98831511 175.36833191]
[-5.57181644 164.71545410]
[-12.37925625 151.34913635]
[-14.78516197 136.54333496]
[-12.56021786 121.70926666]
[-5.91649199 108.26081085]
[4.51277828 97.47978973]
[17.73354149 90.39379120]
[32.48567963 87.67819214]
[47.36310959 89.59184265]
[60.94781494 95.95233154]
[71.94498444 106.15342712]
[79.30643463 119.22281647]
[82.33058167 133.91595459]
[86.51759338 119.51216888]
[90.70460510 105.10838318]
[94.24427795 90.53201294]
[97.12954712 75.81211853]
[100.01482391 61.09222794]
[102.90009308 46.37233734]
[105.78536987 31.65244484]
[108.67063904 16.93255424]
[111.55590820 2.21266222]
[114.44118500 -12.50722885]
[117.32645416 -27.22712135]
[112.38812256 -42.25786972]
[122.42905426 -53.25919342]
[125.31432343 -67.97908783]
[128.19960022 -82.69897461]
[131.08486938 -97.41886902]
[133.97013855 -112.13875580]
[136.85540771 -126.85865021]
[128.30577087 -139.87945557]
[131.44154358 -154.76641846]
[143.90759277 -162.83694458]
[146.79286194 -177.55683899]
[149.67813110 -192.27673340]
[152.34393311 -207.03794861]
[154.78965759 -221.83721924]
[157.23538208 -236.63648987]
[159.68110657 -251.43576050]
[154.29743958 -266.31280518]
[164.00636292 -277.60821533]
[157.12442017 -294.68804932]
[168.78018188 -307.80712891]
[170.67347717 -322.68716431]
[172.23399353 -337.60577393]
[173.79450989 -352.52438354]
[175.35504150 -367.44299316]
[176.91555786 -382.36157227]
[162.40780640 -386.30126953]
[148.71994019 -392.51724243]
[136.20651245 -400.84854126]
[125.19166565 -411.07934570]
[115.96070862 -422.94464111]
[108.75273132 -436.13711548]
[103.75444794 -450.31503296]
[101.09532166 -465.11114502]
[100.84423828 -480.14224243]
[103.00769043 -495.01892090]
[107.52964783 -509.35586548]
[114.29297638 -522.78173828]
[123.12248993 -534.94873047]
[133.78948975 -545.54168701]
[146.01766968 -554.28631592]
[159.49028015 -560.95599365]
[173.85836792 -565.37799072]
[188.74974060 -567.43786621]
[203.77870178 -567.08209229]
[218.55595398 -564.32000732]
[232.69873047 -559.22314453]
[245.84069824 -551.92352295]
[257.64144897 -542.61016846]
[267.79531860 -531.52435303]
[276.03927612 -518.95324707]
[282.15982056 -505.22241211]
[285.99841309 -490.68759155]
[287.45556641 -475.72521973]
[286.49359131 -460.72283936]
[283.13742065 -446.06909180]
[277.47393799 -432.14355469]
[269.64984131 -419.30688477]
[259.86785889 -407.89160156]
[248.38128662 -398.19338989]
[235.48770142 -390.46347046]
[221.52107239 -384.90206909]
[206.84317017 -381.65319824]
[191.83416748 -380.80105591]
[190.27363586 -365.88244629]
[188.71311951 -350.96383667]
[187.15260315 -336.04525757]
[185.59207153 -321.12664795]
[187.51640320 -318.17211914]
[188.10528564 -314.13870239]
[186.86724854 -309.66427612]
[183.61422729 -305.58200073]
[190.54971313 -295.67114258]
[188.81733704 -283.29443359]
[178.80563354 -275.16247559]
[184.36424255 -261.34396362]
[174.48037720 -248.99003601]
[172.03465271 -234.19076538]
[169.58892822 -219.39149475]
[167.14320374 -204.59222412]
[169.14683533 -200.25695801]
[168.44836426 -194.61700439]
[164.39802551 -189.39146423]
[161.51275635 -174.67156982]
[158.62747192 -159.95167542]
[167.12426758 -147.77218628]
[164.40788269 -132.80302429]
[151.57530212 -123.97338104]
[148.69003296 -109.25348663]
[145.80476379 -94.53359222]
[142.91949463 -79.81370544]
[140.03421021 -65.09381104]
[137.14894104 -50.37392044]
[142.29364014 -36.39603424]
[132.04634094 -24.34184837]
[129.16107178 -9.62195683]
[126.27580261 5.09793472]
[123.39053345 19.81782532]
[120.50525665 34.53771591]
[117.61998749 49.25761032]
[114.73471069 63.97750092]
[111.84944153 78.69739532]
[108.96416473 93.41728210]
[121.98465729 85.96968079]
[136.49340820 89.77709198]
[144.17912292 102.65845490]
[140.63911438 117.23474884]
[127.90122223 125.15599823]
[113.26231384 121.88456726]
[105.10838318 109.29539490]
[100.92137146 123.69918060]
[96.73435974 138.10296631]
[94.50924683 152.93701172]
[94.28591919 167.93534851]
[94.06259155 182.93368530]
[93.83926392 197.93202209]
[93.61593628 212.93035889]
[93.39260864 227.92869568]
[93.16928101 242.92703247]
[92.94595337 257.92535400]
[92.72262573 272.92370605]
[92.49929810 287.92202759]
[100.03027344 301.83587646]
[92.10433960 314.44653320]
[91.88101196 329.44488525]
[91.65768433 344.44320679]
[91.43435669 359.44155884]
[100.77380371 375.31155396]
[91.19310760 390.01449585]
[91.19310760 405.01449585]
[91.19310760 420.01449585]
[91.19310760 435.01449585]
[91.19310760 450.01449585]
[91.41643524 465.01284790]
[91.86303711 480.00619507]
[100.00778961 493.56988525]
[92.65286255 506.52188110]
[93.09946442 521.51525879]
[93.54607391 536.50860596]
[107.65258789 542.24670410]
[118.20095062 553.23089600]
[123.36357880 567.55804443]
[122.24603271 582.74584961]
[115.04191589 596.16302490]
[102.99939728 605.48492432]
[88.20491791 609.09649658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[10 199]
[11 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[21 191]
[22 190]
[23 189]
[24 188]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[54 176]
[55 175]
[56 174]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[75 149]
[76 148]
[77 147]
[78 144]
[79 143]
[80 142]
[81 141]
[83 139]
[85 136]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
