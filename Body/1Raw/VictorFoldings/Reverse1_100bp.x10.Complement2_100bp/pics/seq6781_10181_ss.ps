%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[164.51390076 516.80841064]
[155.22593689 505.02386475]
[146.67369080 492.69506836]
[138.88897705 479.86776733]
[131.90072632 466.58978271]
[125.73497009 452.91043091]
[120.41462708 438.88064575]
[115.95949554 424.55261230]
[112.38614655 409.97964478]
[109.70787811 395.21591187]
[107.93464661 380.31634521]
[107.07305145 365.33642578]
[107.12629700 350.33181763]
[108.09419250 335.35836792]
[109.97312164 320.47177124]
[112.75611115 305.72744751]
[116.43280029 291.18017578]
[120.98950958 276.88412476]
[126.40929413 262.89245605]
[132.67198181 249.25721741]
[139.75428772 236.02914429]
[147.62985229 223.25744629]
[156.26939392 210.98962402]
[165.64074707 199.27133179]
[175.70907593 188.14614868]
[165.22157288 177.42176819]
[154.73406982 166.69738770]
[144.24656677 155.97300720]
[133.75907898 145.24864197]
[119.32873535 141.55882263]
[115.21196747 126.28260803]
[104.72446442 115.55822754]
[88.45991516 111.45449829]
[84.47737122 95.15984344]
[73.83136749 84.59279633]
[63.18535614 74.02574921]
[52.53934479 63.45870209]
[41.89333725 52.89165497]
[31.24732971 42.32460403]
[20.60132027 31.75755692]
[21.65816116 46.72027969]
[13.81637859 59.50724411]
[0.00076268 65.34922791]
[-14.63580227 62.06731415]
[-24.63424110 50.88557816]
[-26.26538086 35.97452927]
[-18.92084885 22.89562035]
[-5.33997345 16.52696037]
[9.41294479 19.24445724]
[0.09806203 7.48720598]
[-14.53636265 1.47520280]
[-16.37527275 -13.30544949]
[-25.69015694 -25.06270027]
[-35.00503922 -36.81995010]
[-47.69757080 -28.79924202]
[-61.17075348 -22.17312813]
[-75.27193451 -17.01668930]
[-89.84132385 -13.38835049]
[-104.71385193 -11.32922459]
[-119.72100067 -10.86264229]
[-134.69271851 -11.99389172]
[-149.45936584 -14.71015358]
[-163.85363770 -18.98065186]
[-177.71241760 -24.75699806]
[-190.87869263 -31.97374153]
[-203.20327759 -40.54911041]
[-214.54650879 -50.38594055]
[-224.77986145 -61.37276840]
[-233.78739929 -73.38511658]
[-241.46704102 -86.28685760]
[-247.73179626 -99.93182373]
[-252.51065063 -114.16539764]
[-255.74948120 -128.82629395]
[-257.41159058 -143.74841309]
[-257.47811890 -158.76266479]
[-255.94831848 -173.69892883]
[-252.83953857 -188.38795471]
[-248.18699646 -202.66331482]
[-242.04341125 -216.36326599]
[-234.47839355 -229.33255005]
[-225.57766724 -241.42425537]
[-215.44207764 -252.50134277]
[-204.18646240 -262.43829346]
[-191.93836975 -271.12255859]
[-178.83656311 -278.45568848]
[-165.02951050 -284.35461426]
[-150.67366028 -288.75250244]
[-135.93165588 -291.59951782]
[-120.97054291 -292.86340332]
[-105.95985413 -292.52984619]
[-91.06966400 -290.60260010]
[-76.46868896 -287.10351562]
[-62.32236862 -282.07223511]
[-48.79099274 -275.56576538]
[-36.02788162 -267.65786743]
[-24.17765427 -258.43807983]
[-13.37457943 -248.01092529]
[-3.74106574 -236.49452209]
[4.61373234 -224.01937866]
[11.59514809 -210.72682190]
[17.12407684 -196.76748657]
[21.13787079 -182.29953003]
[23.59105301 -167.48690796]
[24.45582581 -152.49743652]
[23.72238922 -137.50096130]
[21.39905357 -122.66741180]
[17.51214790 -108.16485596]
[12.10570908 -94.15763092]
[5.24099874 -80.80442810]
[-3.00420094 -68.25656891]
[-12.53646564 -56.65622711]
[-23.24778748 -46.13483429]
[-13.93290520 -34.37758255]
[-4.61802244 -22.62033272]
[9.35013962 -17.44928551]
[11.85531330 -1.82767689]
[21.17019653 9.92957401]
[31.16836739 21.11154938]
[41.81437683 31.67859650]
[52.46038437 42.24564362]
[63.10639572 52.81269073]
[73.75240326 63.37974167]
[84.39841461 73.94678497]
[95.04441833 84.51383209]
[106.67230225 85.17234039]
[114.87692261 93.43827057]
[115.44884491 105.07072449]
[125.93634796 115.79510498]
[141.11682129 120.25199890]
[144.48344421 134.76113892]
[154.97094727 145.48551941]
[165.45845032 156.20989990]
[175.94595337 166.93428040]
[186.43345642 177.65864563]
[197.78070068 167.84127808]
[209.70535278 158.73394775]
[222.16305542 150.37052917]
[235.10743713 142.78213501]
[248.49037170 135.99700928]
[262.26205444 130.04037476]
[276.37127686 124.93440247]
[290.76553345 120.69808960]
[305.39126587 117.34718323]
[320.19409180 114.89415741]
[335.11892700 113.34813690]
[350.11026001 112.71486664]
[365.11230469 112.99671173]
[380.06924438 114.19261932]
[394.92547607 116.29814148]
[409.62573242 119.30544281]
[424.11526489 123.20333862]
[438.34024048 127.97733307]
[452.24771118 133.60964966]
[465.78594971 140.07936096]
[478.90460205 147.36238098]
[491.55480957 155.43162537]
[503.68957520 164.25706482]
[515.26373291 173.80586243]
[526.23425293 184.04252625]
[536.56024170 194.92893982]
[546.20336914 206.42463684]
[555.12774658 218.48683167]
[563.30017090 231.07064819]
[570.69018555 244.12928772]
[577.27038574 257.61416626]
[583.01623535 271.47512817]
[587.90637207 285.66058350]
[591.92260742 300.11779785]
[595.05004883 314.79293823]
[597.27697754 329.63146973]
[598.59515381 344.57815552]
[598.99963379 359.57739258]
[598.48895264 374.57339478]
[597.06506348 389.51037598]
[594.73315430 404.33276367]
[591.50195312 418.98541260]
[587.38348389 433.41381836]
[582.39300537 447.56430054]
[576.54919434 461.38424683]
[569.87371826 474.82220459]
[562.39141846 487.82821655]
[554.13018799 500.35388184]
[545.12066650 512.35260010]
[535.39636230 523.77972412]
[524.99359131 534.59277344]
[513.95086670 544.75152588]
[502.30944824 554.21820068]
[490.11251831 562.95751953]
[477.40548706 570.93701172]
[464.23562622 578.12701416]
[450.65194702 584.50073242]
[436.70495605 590.03442383]
[422.44653320 594.70764160]
[407.92974854 598.50286865]
[393.20858765 601.40606689]
[378.33782959 603.40637207]
[363.37277222 604.49633789]
[348.36911011 604.67199707]
[333.38265991 603.93267822]
[318.46914673 602.28100586]
[303.68405151 599.72326660]
[289.08239746 596.26892090]
[274.71847534 591.93084717]
[260.64578247 586.72509766]
[246.91659546 580.67114258]
[233.58201599 573.79150391]
[220.69166565 566.11163330]
[208.29348755 557.66027832]
[196.43359375 548.46875000]
[185.15612793 538.57128906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[31 128]
[32 127]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[49 117]
[50 116]
[52 114]
[53 113]
[54 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
