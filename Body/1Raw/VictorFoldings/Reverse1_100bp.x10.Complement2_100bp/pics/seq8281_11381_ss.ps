%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[8.25086594 821.70056152]
[-6.64181519 823.51501465]
[-21.60356903 824.62420654]
[-36.60100937 825.02557373]
[-51.60066986 824.71826172]
[-66.56908417 823.70294189]
[-81.47284698 821.98181152]
[-96.27870941 819.55883789]
[-110.95362091 816.43939209]
[-125.46485138 812.63037109]
[-139.78001404 808.14031982]
[-153.86715698 802.97924805]
[-167.69485474 797.15869141]
[-181.23226929 790.69158936]
[-194.44915771 783.59246826]
[-207.31605530 775.87707520]
[-219.80422974 767.56262207]
[-231.88583374 758.66772461]
[-243.53390503 749.21221924]
[-254.72244263 739.21716309]
[-265.42648315 728.70489502]
[-275.62216187 717.69891357]
[-285.28668213 706.22363281]
[-294.39852905 694.30480957]
[-302.93734741 681.96899414]
[-310.88409424 669.24365234]
[-318.22100830 656.15728760]
[-324.93176270 642.73901367]
[-331.00134277 629.01873779]
[-336.41622925 615.02722168]
[-341.16430664 600.79559326]
[-345.23501587 586.35559082]
[-348.61926270 571.73944092]
[-351.30950928 556.97979736]
[-353.29971313 542.10955811]
[-354.58547974 527.16198730]
[-355.16390991 512.17028809]
[-355.03372192 497.16806030]
[-354.19519043 482.18872070]
[-352.65023804 467.26565552]
[-350.40225220 452.43222046]
[-347.45626831 437.72149658]
[-343.81887817 423.16632080]
[-339.49816895 408.79913330]
[-334.50381470 394.65200806]
[-328.84692383 380.75656128]
[-322.54016113 367.14373779]
[-315.59756470 353.84393311]
[-308.03463745 340.88684082]
[-299.86825562 328.30133057]
[-291.11663818 316.11553955]
[-281.79931641 304.35662842]
[-271.93710327 293.05087280]
[-261.55194092 282.22341919]
[-250.66708374 271.89852905]
[-239.30676270 262.09915161]
[-227.49635315 252.84719849]
[-215.26220703 244.16331482]
[-202.63160706 236.06687927]
[-189.63275146 228.57594299]
[-176.29464722 221.70722961]
[-162.64704895 215.47605896]
[-148.72042847 209.89634705]
[-134.54582214 204.98052979]
[-120.15489960 200.73959351]
[-105.57975769 197.18299866]
[-90.85291290 194.31866455]
[-76.00723267 192.15299988]
[-61.07584381 190.69082642]
[-46.09206390 189.93542480]
[-31.08932686 189.88845825]
[-16.10111046 190.55003357]
[-1.16085982 191.91868591]
[13.69808769 193.99136353]
[28.44257736 196.76342773]
[43.03970718 200.22869873]
[57.45690155 204.37945557]
[62.28290176 190.17700195]
[67.10890198 175.97454834]
[71.93489838 161.77209473]
[67.59403992 144.76844788]
[81.54280090 132.74707031]
[86.15681458 118.47433472]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[100.38722992 75.54917145]
[105.21322632 61.34671402]
[110.03923035 47.14426041]
[114.86522675 32.94180298]
[119.69122314 18.73934746]
[124.51721954 4.53689241]
[129.34321594 -9.66556358]
[134.16921997 -23.86801910]
[138.99520874 -38.07047272]
[138.79319763 -47.20267105]
[144.00022888 -52.44752884]
[149.03715515 -66.57656097]
[135.86878967 -73.82848358]
[124.03432465 -83.09896088]
[113.84030914 -94.14785767]
[105.55078888 -106.68898773]
[99.38047791 -120.39750671]
[95.48919678 -134.91831970]
[93.97775269 -149.87532043]
[94.88529205 -164.88107300]
[98.18830109 -179.54689026]
[103.80123138 -193.49290466]
[111.57868195 -206.35786438]
[121.31921387 -217.80856323]
[132.77050781 -227.54837036]
[145.63597107 -235.32501221]
[159.58233643 -240.93705750]
[174.24836731 -244.23913574]
[189.25416565 -245.14573669]
[204.21107483 -243.63334656]
[218.73164368 -239.74114990]
[232.43977356 -233.56997681]
[244.98037720 -225.27966309]
[256.02862549 -215.08496094]
[265.29837036 -203.24990845]
[272.54946899 -190.08110046]
[277.59411621 -175.91960144]
[280.30160522 -161.13226318]
[280.60186768 -146.10209656]
[278.48709106 -131.21841431]
[274.01208496 -116.86674500]
[267.29269409 -103.41883850]
[258.50305176 -91.22302246]
[247.87075806 -80.59519196]
[235.67124939 -71.81064606]
[222.22053528 -65.09690857]
[207.86698914 -60.62789917]
[192.98242188 -58.51936722]
[177.95239258 -58.82592773]
[163.16618347 -61.53964233]
[158.12925720 -47.41061020]
[153.19766235 -33.24447632]
[148.37167358 -19.04202080]
[143.54566956 -4.83956575]
[138.71968079 9.36289024]
[133.89367676 23.56534576]
[129.06768799 37.76780319]
[124.24168396 51.97025681]
[119.41568756 66.17271423]
[114.58969116 80.37516785]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[100.42955017 123.08834839]
[95.81553650 137.36108398]
[100.98268890 149.17900085]
[96.84583282 160.97181702]
[86.13735199 166.59808350]
[81.31135559 180.80053711]
[76.48535919 195.00299072]
[71.65935516 209.20544434]
[85.62070465 214.69773865]
[99.30709839 220.84321594]
[112.68801117 227.62815857]
[125.73357391 235.03744507]
[138.41468811 243.05453491]
[150.70304871 251.66154480]
[162.57122803 260.83926392]
[173.99276733 270.56719971]
[184.94215393 280.82366943]
[195.39497375 291.58575439]
[205.32791138 302.82949829]
[214.71876526 314.52975464]
[223.54661560 326.66043091]
[231.79174805 339.19445801]
[239.43576050 352.10388184]
[246.46160889 365.35989380]
[252.85362244 378.93292236]
[258.59750366 392.79263306]
[263.68048096 406.90814209]
[268.09118652 421.24795532]
[271.81976318 435.78005981]
[274.85791016 450.47201538]
[277.19885254 465.29107666]
[278.83737183 480.20413208]
[279.76977539 495.17794800]
[279.99404907 510.17907715]
[279.50961304 525.17407227]
[278.31759644 540.12945557]
[276.42065430 555.01184082]
[273.82302856 569.78808594]
[270.53048706 584.42510986]
[266.55038452 598.89038086]
[261.89163208 613.15148926]
[256.56457520 627.17675781]
[250.58114624 640.93475342]
[243.95466614 654.39483643]
[236.69993591 667.52697754]
[228.83314514 680.30187988]
[220.37184143 692.69104004]
[211.33491516 704.66674805]
[201.74250793 716.20233154]
[191.61604309 727.27209473]
[180.97811890 737.85125732]
[169.85247803 747.91625977]
[158.26391602 757.44464111]
[146.23832703 766.41510010]
[133.80252075 774.80767822]
[120.98425293 782.60357666]
[107.81213379 789.78546143]
[94.31554413 796.33728027]
[80.52460480 802.24444580]
[66.47010040 807.49371338]
[52.18337250 812.07342529]
[37.69631195 815.97338867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 156]
[78 155]
[79 154]
[80 153]
[82 150]
[83 149]
[84 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[97 137]
[98 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
