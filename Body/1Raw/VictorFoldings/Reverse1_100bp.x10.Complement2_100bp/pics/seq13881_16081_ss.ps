%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[66.57315063 611.52691650]
[62.45706558 625.97943115]
[56.28045654 639.67864990]
[48.17497635 652.33245850]
[38.31339264 663.67120361]
[26.90590286 673.45318604]
[14.19566441 681.46984863]
[0.45359397 687.55047607]
[-14.02739525 691.56524658]
[-28.93864059 693.42877197]
[-43.96230698 693.10119629]
[-58.77816772 690.58959961]
[-73.07041168 685.94744873]
[-86.53441620 679.27374268]
[-98.88317871 670.71069336]
[-109.85348511 660.44079590]
[-119.21151733 648.68304443]
[-126.75779724 635.68798828]
[-132.33148193 621.73260498]
[-135.81375122 607.11444092]
[-137.13040161 592.14501953]
[-136.25335693 577.14337158]
[-133.20130920 562.42932129]
[-128.03932190 548.31652832]
[-120.87742615 535.10571289]
[-111.86826324 523.07855225]
[-101.20388031 512.49133301]
[-89.11157227 503.56979370]
[-75.84909821 496.50405884]
[-61.69914627 491.44473267]
[-46.96332550 488.49969482]
[-31.95572853 487.73162842]
[-16.99624443 489.15701294]
[-2.40373349 492.74539185]
[3.25905323 478.85537720]
[8.92183971 464.96533203]
[14.58462620 451.07531738]
[20.24741364 437.18527222]
[25.91020012 423.29525757]
[23.55023384 408.58880615]
[35.92481613 398.73080444]
[41.58760452 384.84075928]
[45.77461624 370.43698120]
[48.44041061 355.67578125]
[51.10620499 340.91455078]
[53.77199936 326.15332031]
[39.11568069 319.78884888]
[26.39100838 310.11071777]
[16.33323288 297.67309570]
[9.52470589 283.18978882]
[6.36116934 267.49313354]
[7.02874613 251.48638916]
[11.49300003 236.09149170]
[19.50068855 222.19621277]
[30.59411812 210.60275269]
[44.13731384 201.98158264]
[59.35247421 196.83259583]
[75.36463165 195.45610046]
[77.58974457 180.62205505]
[79.81486511 165.78800964]
[82.03997803 150.95396423]
[80.48414612 148.62211609]
[79.75824738 145.53347778]
[80.15515137 142.00106812]
[81.84912872 138.43806458]
[84.86451721 135.31375122]
[87.96862793 120.63845062]
[91.07273865 105.96315002]
[91.74252319 90.97811127]
[89.96006012 76.08438873]
[88.17758942 61.19067383]
[86.39512634 46.29695511]
[84.50183105 31.41692162]
[82.49781799 16.55139351]
[80.49380493 1.68586493]
[69.81745148 -3.54405165]
[63.06050110 -13.17963982]
[61.80685425 -24.76075745]
[66.25293732 -35.39786148]
[75.18747711 -42.49295044]
[73.62695312 -57.41155624]
[72.06642914 -72.33016205]
[70.50591278 -87.24876404]
[68.94538879 -102.16736603]
[67.38486481 -117.08597565]
[58.00762177 -105.37839508]
[43.32392883 -102.31423187]
[30.04696655 -109.29437256]
[24.24678993 -123.12758636]
[28.57515717 -137.48953247]
[41.05319977 -145.81410217]
[55.97612000 -144.29542542]
[66.52214813 -133.62612915]
[66.52214813 -148.62612915]
[66.52214813 -163.62612915]
[66.52214813 -178.62612915]
[66.52214813 -193.62612915]
[58.78484726 -207.42630005]
[66.52214813 -220.15357971]
[66.52214813 -235.15357971]
[53.18101883 -242.76342773]
[45.44604874 -256.03240967]
[45.39790726 -271.39123535]
[53.04954147 -284.70843506]
[66.34269714 -292.40176392]
[81.70159149 -292.40176392]
[94.99475098 -284.70843506]
[102.64638519 -271.39123535]
[102.59824371 -256.03240967]
[94.86327362 -242.76342773]
[81.52214813 -235.15357971]
[81.52214813 -220.15357971]
[89.25944519 -207.42630005]
[81.52214813 -193.62612915]
[81.52214813 -178.62612915]
[81.52214813 -163.62612915]
[81.52214813 -148.62612915]
[81.52214813 -133.62612915]
[82.30346680 -118.64649963]
[83.86399078 -103.72789001]
[85.42451477 -88.80928802]
[86.98503876 -73.89068604]
[88.54556274 -58.97207642]
[90.10608673 -44.05347443]
[104.99500275 -33.40285110]
[107.41210175 -14.93475437]
[95.35933685 -0.31814876]
[97.36334991 14.54737949]
[99.36736298 29.41290855]
[103.37631226 35.62178040]
[101.28884125 44.51449203]
[103.07131195 59.40820694]
[104.85377502 74.30192566]
[106.63623810 89.19564056]
[111.71479797 75.08152771]
[120.22960663 62.73251724]
[131.61592102 52.96768188]
[145.11849976 46.43468475]
[159.84179688 43.56683731]
[174.80926514 44.55435562]
[189.02813721 49.33173752]
[201.55535889 57.58211517]
[211.56002808 68.75827789]
[218.37858582 82.11894226]
[221.55876160 96.77794647]
[220.88963318 111.76301575]
[216.41558838 126.08023834]
[208.43336487 138.78001404]
[197.47241211 149.01998901]
[184.25970459 156.12101746]
[169.67161560 159.61209106]
[154.67570496 159.26165771]
[140.26661682 155.09297180]
[127.40003204 147.38250732]
[116.92935944 136.64170837]
[109.54907227 123.58293152]
[105.74803925 109.06726074]
[102.64392853 123.74256134]
[99.53981781 138.41786194]
[96.87402344 153.17907715]
[94.64891052 168.01312256]
[92.42378998 182.84716797]
[90.19867706 197.68121338]
[103.32259369 202.74794006]
[115.09324646 210.44099426]
[124.99269867 220.41870117]
[132.58599854 232.23893738]
[137.54029846 245.37869263]
[139.63949585 259.25726318]
[138.79354858 273.26184082]
[135.04241943 286.77462769]
[128.55416870 299.20007324]
[119.61745453 309.99114990]
[108.62862396 318.67333984]
[96.07421112 324.86566162]
[82.50933838 328.29721069]
[68.53321838 328.81912231]
[65.86742401 343.58035278]
[63.20162582 358.34155273]
[60.53583145 373.10278320]
[70.33014679 361.74182129]
[83.69181824 354.92523193]
[98.63871765 353.66424561]
[112.95356750 358.14587402]
[124.51284027 367.70532227]
[131.60179138 380.92449951]
[133.16880798 395.84243774]
[128.98144531 410.24612427]
[119.66086578 421.99884033]
[106.58972168 429.35717773]
[91.70704651 431.22958374]
[77.22058105 427.33822632]
[65.27932739 418.26043701]
[57.65467834 405.34283447]
[55.47763062 390.50354004]
[49.81484222 404.39358521]
[51.76976776 420.09353638]
[39.80022812 428.95803833]
[34.13743973 442.84808350]
[28.47465324 456.73809814]
[22.81186676 470.62811279]
[17.14908028 484.51815796]
[11.48629379 498.40817261]
[24.42821312 506.04522705]
[36.12019348 515.48535156]
[46.31301880 526.52728271]
[54.78942871 538.93566895]
[61.36874771 552.44604492]
[65.91074371 566.77044678]
[68.31858826 581.60351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[41 196]
[42 195]
[43 180]
[44 179]
[45 178]
[46 177]
[58 163]
[59 162]
[60 161]
[61 160]
[66 159]
[67 158]
[68 157]
[69 134]
[70 133]
[71 132]
[72 131]
[73 129]
[74 128]
[75 127]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
