%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[43.77736282 588.10986328]
[44.47938538 603.17498779]
[41.41200638 617.94122314]
[34.76803589 631.48034668]
[24.96512413 642.94134521]
[12.61949062 651.60363770]
[-1.49280930 656.92285156]
[-16.48466492 658.56451416]
[-31.41367340 656.42547607]
[-45.34138870 650.64019775]
[-57.39229965 641.57232666]
[-66.80887604 629.79187012]
[-72.99918365 616.03936768]
[-75.57409668 601.17938232]
[-74.37174988 586.14587402]
[-69.46773529 571.88397217]
[-61.17030716 559.29022217]
[-50.00105667 549.15618896]
[-36.66209412 542.11889648]
[-21.99191475 538.62084961]
[-6.91270018 538.88177490]
[-2.94060421 524.41723633]
[1.03149211 509.95272827]
[5.00358820 495.48822021]
[8.97568417 481.02368164]
[12.94778061 466.55917358]
[11.68006706 464.05895996]
[11.32633495 460.90594482]
[12.14018822 457.44573975]
[14.24555397 454.10928345]
[17.61084747 451.36541748]
[22.43684387 437.16296387]
[27.26284218 422.96051025]
[32.08884048 408.75805664]
[36.91483688 394.55560303]
[41.74083710 380.35314941]
[38.50970840 365.81323242]
[50.27559280 355.23614502]
[55.10159302 341.03369141]
[59.92758942 326.83123779]
[64.75358582 312.62878418]
[69.57958221 298.42633057]
[73.98058319 284.08648682]
[77.95268250 269.62194824]
[81.92477417 255.15742493]
[84.37050629 240.35815430]
[85.26332092 225.38475037]
[78.29727936 212.21951294]
[86.84226227 198.90434265]
[87.73507690 183.93093872]
[88.62789154 168.95753479]
[89.52070618 153.98413086]
[90.41352081 139.01071167]
[91.30634308 124.03731537]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[78.85192871 58.62734222]
[67.45812988 48.69994354]
[60.16199493 35.49817276]
[57.82723618 20.62474442]
[60.71656799 5.87776995]
[68.46233368 -6.96659184]
[80.11313629 -16.36807632]
[94.25067902 -21.20700645]
[94.47400665 -36.20534134]
[94.69733429 -51.20368195]
[94.92066193 -66.20201874]
[84.01681519 -72.31544495]
[76.78880310 -82.42604828]
[74.55837250 -94.57942963]
[77.68845367 -106.45813751]
[85.52568054 -115.82353210]
[96.53570557 -120.93769836]
[97.20549011 -135.92274475]
[97.87527466 -150.90777588]
[90.76190186 -165.03967285]
[99.05979156 -177.40876770]
[99.72957611 -192.39379883]
[87.43839264 -196.61581421]
[76.67142487 -203.86979675]
[68.15962982 -213.65483093]
[62.47869873 -225.29849243]
[60.01008224 -238.00297546]
[60.91540909 -250.89984131]
[65.12591553 -263.10934448]
[72.34760284 -273.80041504]
[82.08177948 -282.24725342]
[93.65948486 -287.87863159]
[106.28743744 -290.31649780]
[99.81218719 -304.75195312]
[108.65409851 -316.73815918]
[109.99233246 -331.67834473]
[111.33057404 -346.61853027]
[112.66880798 -361.55871582]
[113.67306519 -376.52508545]
[114.34284973 -391.51010132]
[115.01263428 -406.49514771]
[101.10694885 -412.57760620]
[90.34027863 -423.27542114]
[84.16873169 -437.14181519]
[83.42694855 -452.30142212]
[88.21526337 -466.70410156]
[97.88608551 -478.40194702]
[111.13151550 -485.81292725]
[126.16022491 -487.93481445]
[140.93969727 -484.48059082]
[153.47113037 -475.91744995]
[162.05976868 -463.40347290]
[165.54403687 -448.63104248]
[163.45274353 -433.59805298]
[156.06871033 -420.33758545]
[144.39056396 -410.64297485]
[129.99768066 -405.82537842]
[129.32789612 -390.84033203]
[128.65809631 -375.85528564]
[130.75488281 -373.02053833]
[131.58279419 -369.02932739]
[130.61326599 -364.48913574]
[127.60898590 -360.22048950]
[126.27075195 -345.28030396]
[124.93251801 -330.34011841]
[123.59428406 -315.39993286]
[130.16526794 -302.03314209]
[121.22762299 -288.97827148]
[136.89231873 -282.11755371]
[149.28343201 -270.29565430]
[156.89457703 -254.92643738]
[158.79254150 -237.85636902]
[154.73159790 -221.14271545]
[145.18519592 -206.80558777]
[131.29084778 -196.58381653]
[114.71461487 -191.72401428]
[114.04483032 -176.73898315]
[121.20610809 -163.67890930]
[112.86031342 -150.23799133]
[112.19052887 -135.25294495]
[111.52074432 -120.26791382]
[125.82700348 -109.91403961]
[131.10054016 -92.89521027]
[125.04951477 -75.96994781]
[109.91899872 -65.97869110]
[109.69567108 -50.98035431]
[109.47234344 -35.98201370]
[109.24901581 -20.98367882]
[123.23621368 -15.72596741]
[134.60192871 -5.98176241]
[141.96183777 7.08752537]
[144.41082764 21.91398811]
[141.63426208 36.71131134]
[133.94828796 49.68999100]
[122.26396942 59.27375412]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[109.81579590 118.44027710]
[106.27974701 124.93013000]
[105.38693237 139.90353394]
[104.49411011 154.87693787]
[103.60129547 169.85034180]
[102.70848083 184.82374573]
[101.81566620 199.79716492]
[108.71784973 214.03340149]
[100.23672485 226.27757263]
[99.34391022 241.25097656]
[107.71878815 228.80664062]
[120.17576599 220.45057678]
[134.86691284 217.42236328]
[149.61288452 220.17118835]
[162.22622681 228.28930664]
[170.83580017 240.57244873]
[174.16442871 255.19845581]
[171.71833801 269.99765015]
[163.86038208 282.77468872]
[151.75625610 291.63415527]
[137.20152283 295.26181030]
[122.35530090 293.11947632]
[109.41992188 285.52499390]
[100.31429291 273.60494995]
[96.38929749 259.12951660]
[92.41720581 273.59405518]
[88.44510651 288.05856323]
[89.69177246 292.21786499]
[89.56299591 296.16094971]
[88.29563904 299.48199463]
[86.23404694 301.89373779]
[83.78204346 303.25231934]
[78.95603943 317.45477295]
[74.13004303 331.65722656]
[69.30404663 345.85968018]
[64.47805023 360.06213379]
[67.36399078 375.61791992]
[55.94329071 385.17913818]
[51.11729431 399.38159180]
[46.29129410 413.58404541]
[41.46529770 427.78649902]
[36.63930130 441.98895264]
[31.81330299 456.19140625]
[27.41230392 470.53125000]
[23.44020844 484.99578857]
[19.46811295 499.46029663]
[15.49601555 513.92480469]
[11.52392006 528.38934326]
[7.55182362 542.85388184]
[20.64952660 550.33056641]
[31.47578812 560.83026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[38 195]
[39 194]
[40 193]
[41 192]
[42 191]
[43 186]
[44 185]
[45 184]
[46 169]
[47 168]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 159]
[56 156]
[57 155]
[58 154]
[66 146]
[67 145]
[68 144]
[69 143]
[75 139]
[76 138]
[77 137]
[79 135]
[80 134]
[91 126]
[93 124]
[94 123]
[95 122]
[96 121]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
