%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[124.62390900 447.65222168]
[119.58699799 433.52319336]
[114.55007935 419.39416504]
[109.51316071 405.26513672]
[107.56247711 420.13775635]
[101.55345154 433.88153076]
[91.95997620 445.41259766]
[79.53863525 453.82153320]
[65.26902008 458.44519043]
[50.27650452 458.91891479]
[35.74345398 455.20538330]
[22.81600380 447.59741211]
[12.51367092 436.69503784]
[5.64893866 423.35803223]
[2.76318765 408.63824463]
[4.08400106 393.69650269]
[9.50721359 379.71121216]
[18.60512924 367.78527832]
[30.66024590 358.85922241]
[44.72185135 353.63705444]
[59.68098068 352.53054810]
[74.35790253 355.62698364]
[87.59513092 362.68215942]
[98.34872437 373.13970947]
[105.77188110 386.17813110]
[105.10209656 371.19308472]
[104.43231201 356.20803833]
[103.76252747 341.22299194]
[103.09274292 326.23797607]
[99.65370178 319.69619751]
[102.52621460 311.02517700]
[102.07961273 296.03182983]
[101.63300323 281.03848267]
[101.18640137 266.04513550]
[91.17219543 251.63392639]
[100.03498840 235.49290466]
[98.91933441 220.53445435]
[97.35881042 205.61584473]
[95.79828644 190.69725037]
[84.46888733 200.52804565]
[69.69207764 197.95010376]
[62.36076736 184.86378479]
[67.87932587 170.91583252]
[82.17967987 166.38815308]
[94.71928406 174.61698914]
[94.27268219 159.62364197]
[93.82607269 144.63027954]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.74240112 40.97288895]
[88.84958649 25.99948311]
[87.95677185 11.02607632]
[77.46284485 -4.10531425]
[85.92344666 -19.48013687]
[84.80779266 -34.43859100]
[78.90769958 -20.64769173]
[69.25065613 -9.16982174]
[56.67209625 -0.99793011]
[42.26018906 3.16103339]
[27.26171112 2.94727612]
[12.97418213 -1.62070930]
[0.63361365 -10.14774704]
[-8.69241142 -21.89616203]
[-14.19709778 -35.84960175]
[-15.40423489 -50.80094910]
[-12.20939445 -65.45676422]
[-4.88896132 -78.54917908]
[5.92377377 -88.94556427]
[19.29339981 -95.74652100]
[34.06331253 -98.36370850]
[48.95576859 -96.57071686]
[62.68241501 -90.52264404]
[74.05576324 -80.74272156]
[82.09190369 -68.07700348]
[86.09520721 -53.62469482]
[89.19931793 -68.29999542]
[92.19409180 -82.99800110]
[95.07936096 -97.71788788]
[97.96463776 -112.43778229]
[86.50463104 -122.56771088]
[81.68554688 -136.97859192]
[84.70664978 -151.76843262]
[94.65846252 -162.98526001]
[108.79337311 -167.68310547]
[111.67864227 -182.40299988]
[114.56391907 -197.12289429]
[116.56793213 -211.98841858]
[117.68357849 -226.94688416]
[118.79923248 -241.90533447]
[119.91487885 -256.86376953]
[121.03052521 -271.82223511]
[122.14617920 -286.78070068]
[107.85490417 -291.59841919]
[95.21118927 -299.81954956]
[85.00981140 -310.92733765]
[77.89205933 -324.22351074]
[74.30534363 -338.87228394]
[74.47513580 -353.95278931]
[78.39076233 -368.51708984]
[85.80607605 -381.64962769]
[96.25495911 -392.52493286]
[109.08056641 -400.45928955]
[123.47669220 -404.95404053]
[138.53836060 -405.72656250]
[153.31880188 -402.72830200]
[166.88890076 -396.14776611]
[178.39561462 -386.39862061]
[187.11563110 -374.09365845]
[192.50082397 -360.00640869]
[194.21263123 -345.02239990]
[192.14349365 -330.08352661]
[186.42344666 -316.12890625]
[177.41206360 -304.03567505]
[165.67581177 -294.56408691]
[151.95245361 -288.30947876]
[137.10462952 -285.66503906]
[135.98898315 -270.70657349]
[134.87333679 -255.74813843]
[133.75769043 -240.78968811]
[132.64202881 -225.83122253]
[131.52638245 -210.87277222]
[142.21385193 -221.39788818]
[157.02908325 -223.74493408]
[170.44639587 -217.03851318]
[177.46142578 -203.77996826]
[175.45776367 -188.91438293]
[165.18272400 -177.98628235]
[150.46864319 -175.07156372]
[136.80349731 -181.25733948]
[129.28381348 -194.23762512]
[126.39853668 -179.51773071]
[123.51326752 -164.79783630]
[134.82868958 -155.11141968]
[139.80952454 -140.96760559]
[137.02362061 -126.13167572]
[127.12075806 -114.60647583]
[112.68452454 -109.55251312]
[109.79925537 -94.83261871]
[106.91397858 -80.11272430]
[108.71218109 -72.94416809]
[103.87461853 -65.19588470]
[100.77050781 -50.52058411]
[99.76625061 -35.55423737]
[100.88189697 -20.59578514]
[109.84024811 -12.46716022]
[110.89213562 -0.01415636]
[102.93017578 10.13326073]
[103.82299042 25.10666656]
[104.71581268 40.08007050]
[108.25186157 46.56991959]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.81941986 144.18368530]
[109.26602936 159.17703247]
[109.71263123 174.17037964]
[110.71689606 189.13671875]
[112.27742004 204.05532837]
[113.83794403 218.97393799]
[116.51193237 222.39500427]
[117.82603455 226.11489868]
[117.85329437 229.66943359]
[116.81000519 232.66578674]
[115.02002716 234.82312012]
[123.99446106 244.08715820]
[124.24382782 256.58203125]
[116.17974854 265.59851074]
[116.62635803 280.59185791]
[117.07295990 295.58520508]
[117.51956940 310.57855225]
[118.07778168 325.56817627]
[118.74756622 340.55322266]
[119.41735077 355.53826904]
[120.08713531 370.52328491]
[120.75691986 385.50833130]
[123.64218903 400.22821045]
[128.67910767 414.35723877]
[133.71601868 428.48626709]
[138.75294495 442.61532593]
[153.75083923 441.09008789]
[168.67785645 443.19912720]
[182.66612244 448.81979370]
[194.90238953 457.62530518]
[204.67526245 469.10372925]
[211.41654968 482.58773804]
[214.73432922 497.29336548]
[214.43571472 512.36566162]
[210.53805542 526.92834473]
[203.26795959 540.13476562]
[193.04811096 551.21710205]
[180.47265625 559.53106689]
[166.27273560 564.59320068]
[151.27391052 566.10937500]
[136.34819031 563.99127197]
[122.36333466 558.36212158]
[110.13240814 549.54919434]
[100.36650085 538.06481934]
[93.63338470 524.57672119]
[90.32451630 509.86911011]
[90.63227081 494.79699707]
[94.53875732 480.23666382]
[101.81685638 467.03466797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[31 178]
[32 177]
[33 176]
[34 175]
[36 172]
[37 167]
[38 166]
[39 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[51 157]
[52 156]
[53 155]
[54 153]
[55 152]
[56 151]
[58 148]
[59 147]
[79 146]
[80 145]
[81 143]
[82 142]
[83 141]
[88 136]
[89 135]
[90 134]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
