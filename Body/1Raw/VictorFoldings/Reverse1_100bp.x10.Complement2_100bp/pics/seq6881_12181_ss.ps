%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[54.03146362 762.71557617]
[41.70294952 771.28527832]
[28.53336143 778.49597168]
[14.67192268 784.26593018]
[0.27569366 788.52978516]
[-14.49220562 791.23925781]
[-29.46444321 792.36364746]
[-44.47137070 791.89013672]
[-59.34295273 789.82421875]
[-73.91067505 786.18914795]
[-88.00948334 781.02624512]
[-101.47962189 774.39392090]
[-114.16846466 766.36737061]
[-125.93223572 757.03753662]
[-136.63764954 746.51013184]
[-146.16339111 734.90447998]
[-154.40153503 722.35198975]
[-161.25874329 708.99493408]
[-166.65730286 694.98461914]
[-170.53607178 680.47991943]
[-172.85105896 665.64508057]
[-173.57608032 650.64819336]
[-172.70288086 635.65917969]
[-170.24137878 620.84796143]
[-166.21945190 606.38226318]
[-160.68267822 592.42602539]
[-153.69380188 579.13739014]
[-145.33200073 566.66693115]
[-135.69201660 555.15594482]
[-124.88307953 544.73486328]
[-113.02767181 535.52172852]
[-100.26012421 527.62103271]
[-86.72509003 521.12213135]
[-72.57595062 516.09881592]
[-57.97300720 512.60797119]
[-43.08173370 510.68908691]
[-28.07085991 510.36392212]
[-13.11046600 511.63623047]
[1.62993348 514.49151611]
[6.03093147 500.15167236]
[10.43192959 485.81182861]
[14.83292770 471.47198486]
[19.23392487 457.13214111]
[23.63492393 442.79229736]
[26.52019691 428.07238770]
[27.85843086 413.13220215]
[29.19666481 398.19201660]
[30.53489876 383.25183105]
[18.35987091 392.01361084]
[3.53375411 389.73626709]
[-5.45037937 377.72439575]
[-3.44600940 362.85891724]
[8.39867020 353.65545654]
[23.29848862 355.38619995]
[32.71788025 367.05874634]
[35.38367462 352.29754639]
[38.04947281 337.53631592]
[40.71526718 322.77508545]
[31.95953560 313.32171631]
[30.22137070 300.35787964]
[36.35742188 288.58676147]
[48.32625198 282.40924072]
[51.21152496 267.68936157]
[54.09679794 252.96945190]
[56.98207092 238.24955750]
[55.53190994 235.85057068]
[54.94464874 232.73260498]
[55.49888992 229.22143555]
[57.35026932 225.73764038]
[60.50216293 222.75108337]
[64.25846100 208.22901917]
[68.01476288 193.70695496]
[71.77106476 179.18489075]
[75.52736664 164.66284180]
[79.28366852 150.14077759]
[74.98005676 135.88145447]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[91.76004028 71.00914764]
[102.43797302 60.62498093]
[98.40304565 45.32694244]
[109.08097839 34.94277191]
[107.77252197 30.80249214]
[107.84258270 26.85792351]
[109.06034851 23.51839638]
[111.08580780 21.07623672]
[113.51731873 19.68128014]
[118.13132477 5.40854740]
[122.74533081 -8.86418629]
[127.03945923 -23.23639870]
[131.01155090 -37.70092392]
[127.20483398 -53.05733871]
[138.03619385 -63.28137970]
[142.00828552 -77.74590302]
[128.36195374 -84.05679321]
[115.94055939 -92.52785492]
[105.08296967 -102.92798615]
[96.08539581 -114.97345734]
[89.19329071 -128.33567810]
[84.59467316 -142.65008545]
[82.41500854 -157.52621460]
[82.71375275 -172.55819702]
[85.48274994 -187.33596802]
[90.64647675 -201.45637512]
[98.06404114 -214.53419495]
[107.53310394 -226.21267700]
[118.79533386 -236.17320251]
[131.54348755 -244.14404297]
[145.42979431 -249.90776062]
[160.07542419 -253.30709839]
[175.08081055 -254.24934387]
[190.03663635 -252.70877075]
[204.53486633 -248.72741699]
[218.17999268 -242.41389465]
[230.59974670 -233.94044495]
[241.45533752 -223.53822327]
[250.45059204 -211.49101257]
[257.34011841 -198.12747192]
[261.93597412 -183.81217957]
[264.11276245 -168.93563843]
[263.81112671 -153.90370178]
[261.03927612 -139.12646484]
[255.87284851 -125.00705719]
[248.45275879 -111.93066406]
[238.98144531 -100.25401306]
[227.71730042 -90.29565430]
[214.96760559 -82.32727051]
[201.08020020 -76.56623077]
[186.43391418 -73.16970825]
[171.42832947 -72.23035431]
[156.47280884 -73.77380371]
[152.50071716 -59.30928421]
[156.59153748 -44.98746872]
[145.47607422 -33.72882843]
[141.50398254 -19.26430321]
[142.92083740 -16.03554535]
[142.84419250 -11.96010971]
[140.89317322 -7.74741697]
[137.01806641 -4.25017691]
[132.40405273 10.02255630]
[127.79004669 24.29528999]
[123.60303497 38.69907379]
[127.90664673 52.95839310]
[116.96003723 64.38127899]
[121.26364136 78.64060211]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[104.48365784 143.51290894]
[93.80572510 153.89707947]
[90.04942322 168.41914368]
[86.29312134 182.94119263]
[82.53681946 197.46325684]
[78.78052521 211.98532104]
[75.02422333 226.50737000]
[71.70195770 241.13484192]
[68.81668854 255.85472107]
[65.93141937 270.57461548]
[63.04614258 285.29452515]
[73.06974792 299.63140869]
[69.68972015 316.45074463]
[55.47648239 325.44088745]
[52.81068802 340.20211792]
[50.14489365 354.96331787]
[47.47909927 369.72454834]
[45.47508240 384.59008789]
[44.13684845 399.53027344]
[42.79861450 414.47045898]
[41.46038055 429.41064453]
[50.20206451 417.22116089]
[62.90230560 409.23968506]
[77.67710114 406.65023804]
[92.33470154 409.83688354]
[104.70073700 418.32696533]
[112.94077301 430.86096191]
[115.83245850 445.57962036]
[112.94682312 460.29943848]
[104.71193695 472.83685303]
[92.34939575 481.33200073]
[77.69310760 484.52468872]
[62.91725159 481.94128418]
[50.21372604 473.96502686]
[41.46703339 461.77917480]
[37.97476959 447.19329834]
[33.57377243 461.53314209]
[29.17277527 475.87298584]
[24.77177620 490.21282959]
[20.37077904 504.55267334]
[15.96978092 518.89251709]
[29.77412033 524.79779053]
[42.87254715 532.13696289]
[55.11665344 540.82684326]
[66.36769867 550.76898193]
[76.49819946 561.85070801]
[85.39337158 573.94653320]
[92.95242310 586.91925049]
[99.08970642 600.62207031]
[103.73567963 614.89953613]
[106.83770752 629.59002686]
[108.36063385 644.52697754]
[108.28720093 659.54119873]
[106.61824799 674.46252441]
[103.37268829 689.12194824]
[98.58728027 703.35333252]
[92.31626129 716.99542236]
[84.63068390 729.89361572]
[75.61762238 741.90179443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 172]
[46 171]
[47 170]
[48 169]
[55 168]
[56 167]
[57 166]
[58 165]
[62 162]
[63 161]
[64 160]
[65 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[77 151]
[78 150]
[80 148]
[82 146]
[84 144]
[89 143]
[90 142]
[91 141]
[92 137]
[93 136]
[95 134]
[96 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
