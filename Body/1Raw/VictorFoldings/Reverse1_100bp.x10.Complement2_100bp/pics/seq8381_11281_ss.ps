%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[126.20278168 485.92742920]
[120.79779816 471.92529297]
[116.59976196 457.51522827]
[113.63892365 442.80102539]
[111.93660736 427.88876343]
[111.50508118 412.88583374]
[112.34746552 397.90036011]
[114.45767212 383.04031372]
[117.82051086 368.41278076]
[122.41175079 354.12310791]
[128.19830322 340.27429199]
[135.13847351 326.96612549]
[143.18228149 314.29446411]
[152.27174377 302.35061646]
[162.34136963 291.22064209]
[173.31861877 280.98471069]
[185.12440491 271.71664429]
[176.89559937 259.17523193]
[170.59794617 255.30725098]
[168.63925171 246.38528442]
[160.59808350 233.72276306]
[152.55691528 221.06024170]
[144.51573181 208.39770508]
[136.47456360 195.73518372]
[128.43339539 183.07266235]
[126.14997864 197.89784241]
[115.67085266 208.63040161]
[100.90444946 211.26734924]
[87.35829163 204.82519531]
[80.08474731 191.70666504]
[81.79667664 176.80467224]
[91.85556793 165.67729187]
[106.50971222 162.47474670]
[120.29434204 168.39228821]
[117.69826508 167.33468628]
[115.36469269 165.18502808]
[113.71167755 162.03813171]
[113.11524963 158.13829041]
[113.85882568 153.86032104]
[108.19603729 139.97029114]
[102.53325653 126.08026123]
[96.87046814 112.19023132]
[90.89890289 98.43013000]
[84.62154388 84.80681610]
[78.34418488 71.18350220]
[72.06681824 57.56018448]
[65.48679352 44.08044815]
[58.60737991 30.75102043]
[51.72797012 17.42159081]
[45.01131058 11.23092842]
[44.84703064 3.84209919]
[38.16683578 -9.58827686]
[31.48664093 -23.01865196]
[24.70664978 -36.39892578]
[17.82723808 -49.72835541]
[10.94782543 -63.05778503]
[4.06841230 -76.38721466]
[-2.81100011 -89.71664429]
[-9.69041252 -103.04607391]
[-16.56982613 -116.37550354]
[-30.55803871 -110.92137146]
[-45.03974152 -106.95930481]
[-59.85626602 -104.53271484]
[-74.84527588 -103.66819763]
[-89.84253693 -104.37521362]
[-104.68373108 -106.64601898]
[-119.20626068 -110.45574188]
[-133.25099182 -115.76263428]
[-146.66406250 -122.50854492]
[-159.29849243 -130.61956787]
[-171.01586914 -140.00685120]
[-181.68780518 -150.56750488]
[-191.19735718 -162.18585205]
[-199.44035339 -174.73458862]
[-206.32647705 -188.07621765]
[-211.78027344 -202.06455994]
[-215.74198914 -216.54637146]
[-218.16821289 -231.36294556]
[-219.03236389 -246.35197449]
[-218.32498169 -261.34921265]
[-216.05381775 -276.19036865]
[-212.24374390 -290.71279907]
[-206.93650818 -304.75741577]
[-200.19026184 -318.17031860]
[-192.07893372 -330.80453491]
[-182.69137573 -342.52169800]
[-172.13044739 -353.19335938]
[-160.51187134 -362.70263672]
[-147.96293640 -370.94534302]
[-134.62113953 -377.83111572]
[-120.63266754 -383.28457642]
[-106.15077209 -387.24594116]
[-91.33412933 -389.67181396]
[-76.34507751 -390.53561401]
[-61.34785461 -389.82785034]
[-46.50676727 -387.55633545]
[-31.98442650 -383.74591064]
[-17.93994904 -378.43832397]
[-4.52720976 -371.69177246]
[8.10683060 -363.58010864]
[19.82374763 -354.19229126]
[30.49516487 -343.63110352]
[40.00416183 -332.01229858]
[48.24654770 -319.46316528]
[55.13201904 -306.12118530]
[60.58513260 -292.13256836]
[64.54614258 -277.65057373]
[66.97164917 -262.83389282]
[67.83507538 -247.84481812]
[67.12696838 -232.84761047]
[64.85507965 -218.00657654]
[61.04430008 -203.48432922]
[55.73638535 -189.43997192]
[48.98949432 -176.02740479]
[40.87754440 -163.39355469]
[31.48941994 -151.67686462]
[20.92797852 -141.00570679]
[9.30893803 -131.49699402]
[-3.24039602 -123.25491333]
[3.63901663 -109.92548370]
[10.51842880 -96.59605408]
[17.39784241 -83.26662445]
[24.27725410 -69.93719482]
[31.15666580 -56.60776901]
[38.03607941 -43.27833939]
[43.89715576 -38.77616501]
[44.91701889 -29.69884682]
[51.59721375 -16.26847076]
[58.27740860 -2.83809543]
[65.05739594 10.54217815]
[71.93681335 23.87160683]
[78.81622314 37.20103455]
[82.04596710 38.61563873]
[84.75099945 41.66487885]
[86.17048645 46.08509827]
[85.69013977 51.28282166]
[91.96749878 64.90613556]
[98.24485779 78.52945709]
[104.52221680 92.15277100]
[107.91429901 93.98748016]
[110.48120117 97.30845642]
[111.57727051 101.71363831]
[110.76049042 106.52745056]
[116.42327881 120.41747284]
[122.08606720 134.30749512]
[127.74885559 148.19752502]
[133.82269287 161.91279602]
[141.09591675 175.03149414]
[149.13708496 187.69401550]
[157.17826843 200.35653687]
[165.21943665 213.01905823]
[173.26060486 225.68159485]
[181.30178833 238.34411621]
[189.43699646 250.94642639]
[197.66580200 263.48782349]
[210.86772156 256.34756470]
[224.62762451 250.35266113]
[238.84635925 245.54626465]
[253.42147827 241.96302795]
[268.24798584 239.62878418]
[283.21902466 238.56031799]
[298.22674561 238.76535034]
[313.16302490 240.24240112]
[327.92022705 242.98081970]
[342.39202881 246.96087646]
[356.47415161 252.15391541]
[370.06512451 258.52249146]
[383.06707764 266.02072144]
[395.38626099 274.59460449]
[406.93395996 284.18234253]
[417.62692261 294.71487427]
[427.38815308 306.11627197]
[436.14730835 318.30444336]
[443.84127808 331.19152832]
[450.41461182 344.68466187]
[455.81994629 358.68667603]
[460.01837158 373.09664917]
[462.97958374 387.81076050]
[464.68228149 402.72299194]
[465.11419678 417.72589111]
[464.27221680 432.71136475]
[462.16238403 447.57147217]
[458.79992676 462.19909668]
[454.20904541 476.48889160]
[448.42285156 490.33786011]
[441.48300171 503.64620972]
[433.43954468 516.31811523]
[424.35040283 528.26214600]
[414.28103638 539.39239502]
[403.30404663 549.62860107]
[391.49850464 558.89697266]
[378.94949341 567.13079834]
[365.74737549 574.27069092]
[351.98733521 580.26525879]
[337.76846313 585.07128906]
[323.19326782 588.65417480]
[308.36669922 590.98803711]
[293.39562988 592.05609131]
[278.38790894 591.85070801]
[263.45166016 590.37322998]
[248.69454956 587.63446045]
[234.22285461 583.65399170]
[220.14085388 578.46063232]
[206.55003357 572.09167480]
[193.54829407 564.59307861]
[181.22932434 556.01892090]
[169.68188477 546.43084717]
[158.98916626 535.89807129]
[149.22822571 524.49639893]
[140.46939087 512.30804443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 155]
[18 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[34 147]
[39 146]
[40 145]
[41 144]
[42 143]
[43 139]
[44 138]
[45 137]
[46 136]
[47 132]
[48 131]
[49 130]
[51 129]
[52 128]
[53 127]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
