%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[263.33084106 395.75570679]
[271.09304810 382.90090942]
[280.27005005 371.01473999]
[290.74215698 360.25216675]
[281.25323486 348.63491821]
[271.76434326 337.01763916]
[265.09844971 333.82583618]
[262.22219849 325.15606689]
[252.90731812 313.39880371]
[243.59243774 301.64154053]
[234.27755737 289.88430786]
[224.96267700 278.12704468]
[210.11373901 278.93151855]
[197.48905945 270.74121094]
[192.04425049 256.52124023]
[196.06307983 241.64994812]
[186.74818420 229.89270020]
[177.43330383 218.13545227]
[168.11842346 206.37818909]
[154.15026855 201.20715332]
[151.64509583 185.58554077]
[142.33020020 173.82829285]
[133.01531982 162.07104492]
[123.70043945 150.31378174]
[114.38555908 138.55653381]
[115.44898224 153.51879883]
[109.52196503 167.29814148]
[97.92861176 176.81623840]
[83.25891113 179.94671631]
[68.79011536 175.99023438]
[57.75458145 165.83065796]
[52.61767960 151.73767090]
[54.52701187 136.85968018]
[63.05602264 124.52047729]
[76.29930878 117.47666168]
[91.29828644 117.30184174]
[104.70217133 124.03508759]
[97.42893982 110.91639709]
[93.38002014 125.35960388]
[81.06583405 133.92469788]
[66.11625671 132.69581604]
[55.36603546 122.23480225]
[53.73002625 107.32428741]
[61.95619583 94.78115845]
[76.28364563 90.33995819]
[90.16342926 96.03239441]
[84.29447174 82.22821808]
[78.42550659 68.42403412]
[72.55654907 54.61986160]
[66.48271179 40.90459442]
[60.20535278 27.28127861]
[53.92799377 13.65796185]
[38.70684052 12.15336514]
[26.36396217 3.29051447]
[20.15577888 -10.46902180]
[21.65830612 -25.38875389]
[30.36838531 -37.47180176]
[24.09102440 -51.09511948]
[17.81366539 -64.71843719]
[17.00280952 -49.74036789]
[11.66185665 -35.72344208]
[2.29987407 -24.00366020]
[-10.19081497 -15.69807911]
[-24.61967850 -11.59833241]
[-39.61144638 -12.09518337]
[-53.73720169 -17.14127541]
[-65.65056610 -26.25564384]
[-74.21603394 -38.56956863]
[-78.61720276 -52.90936661]
[-78.43457031 -67.90825653]
[-73.68556213 -82.13663483]
[-64.82279968 -94.23834991]
[-52.69104767 -103.05994415]
[-38.44661713 -107.76059723]
[-23.44719315 -107.89227295]
[-9.12243176 -103.44242096]
[3.16232562 -94.83517456]
[12.23671150 -82.88991547]
[9.79098415 -97.68918610]
[7.34525681 -112.48845673]
[4.89952946 -127.28772736]
[-4.98432779 -139.64167786]
[0.57426971 -153.46018982]
[-1.87145770 -168.25946045]
[-4.31718493 -183.05873108]
[-6.76291275 -197.85800171]
[-9.20864010 -212.65727234]
[-11.65436745 -227.45654297]
[-26.67890549 -228.76576233]
[-40.90555573 -233.77108765]
[-53.44001770 -242.15786743]
[-63.49436569 -253.39891052]
[-70.43656921 -266.78756714]
[-73.83024597 -281.48226929]
[-73.46206665 -296.55923462]
[-69.35516357 -311.07077026]
[-61.76770401 -324.10461426]
[-51.17664719 -334.84149170]
[-38.24775696 -342.60644531]
[-23.79374695 -346.91137695]
[-8.72321224 -347.48565674]
[6.01650095 -344.29321289]
[19.49884033 -337.53472900]
[30.87629890 -327.63500977]
[39.43367386 -315.21640015]
[44.63304901 -301.05950928]
[46.14757919 -286.05429077]
[43.88206482 -271.14392090]
[37.97891998 -257.26574707]
[28.80921555 -245.29214478]
[16.94937134 -235.97576904]
[3.14490342 -229.90226746]
[5.59063101 -215.10299683]
[8.03635788 -200.30372620]
[10.48208618 -185.50445557]
[12.92781353 -170.70518494]
[15.37354088 -155.90591431]
[25.08246231 -144.61050415]
[19.69880104 -129.73345947]
[22.14452744 -114.93418884]
[24.59025574 -100.13491058]
[27.03598213 -85.33563995]
[31.43698120 -70.99579620]
[37.71434021 -57.37247849]
[43.99170303 -43.74916458]
[58.83601379 -42.51951981]
[71.15369415 -33.96787643]
[77.57955170 -20.30863953]
[76.29722595 -5.16755581]
[67.55130768 7.38060141]
[73.82866669 21.00391769]
[80.10603333 34.62723541]
[84.19667816 37.09211349]
[86.78233337 42.15288544]
[86.36072540 48.75090027]
[92.22968292 62.55507660]
[98.09864807 76.35925293]
[103.96760559 90.16342926]
[110.54763794 103.64316559]
[117.82086182 116.76185608]
[126.14280701 129.24165344]
[135.45768738 140.99890137]
[144.77256775 152.75614929]
[154.08746338 164.51341248]
[163.40234375 176.27066040]
[178.03675842 182.28265381]
[179.87567139 197.06330872]
[189.19055176 208.82057190]
[198.50544739 220.57781982]
[207.82032776 232.33506775]
[223.21659851 231.82440186]
[235.81413269 240.37750244]
[240.89958191 254.54092407]
[236.71992493 268.81216431]
[246.03480530 280.56942749]
[255.34968567 292.32666016]
[264.66458130 304.08392334]
[273.97946167 315.84115601]
[283.38162231 327.52874756]
[292.87051392 339.14602661]
[302.35940552 350.76327515]
[314.99606323 342.65075684]
[328.47512817 336.03164673]
[342.62084961 330.99218750]
[357.24884033 327.59811401]
[372.16836548 325.89367676]
[387.18493652 325.90106201]
[402.10281372 327.62017822]
[416.72744751 331.02865601]
[430.86819458 336.08203125]
[444.34075928 342.71441650]
[456.96942139 350.83935547]
[468.58956909 360.35092163]
[479.04971313 371.12509155]
[488.21347046 383.02145386]
[495.96142578 395.88485718]
[502.19250488 409.54763794]
[506.82546997 423.83166504]
[509.79998779 438.55068970]
[511.07720947 453.51284790]
[510.64053345 468.52310181]
[508.49563599 483.38571167]
[504.67047119 497.90692139]
[499.21490479 511.89743042]
[492.20007324 525.17486572]
[483.71740723 537.56610107]
[473.87753296 548.90954590]
[462.80871582 559.05743408]
[450.65527344 567.87738037]
[437.57562256 575.25439453]
[423.74029541 581.09234619]
[409.32965088 585.31506348]
[394.53161621 587.86755371]
[379.53903198 588.71655273]
[364.54742432 587.85089111]
[349.75219727 585.28198242]
[335.34628296 581.04321289]
[321.51745605 575.18994141]
[308.44598389 567.79840088]
[296.30233765 558.96496582]
[285.24478149 548.80480957]
[275.41751099 537.45043945]
[266.94863892 525.04980469]
[259.94854736 511.76458740]
[254.50852966 497.76803589]
[250.69947815 483.24258423]
[248.57107544 468.37759399]
[248.15106201 453.36688232]
[249.44491577 438.40612793]
[252.43576050 423.69039917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[16 150]
[17 149]
[18 148]
[19 147]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[37 140]
[38 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 132]
[51 131]
[52 130]
[57 125]
[58 124]
[59 123]
[78 122]
[79 121]
[80 120]
[81 119]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
