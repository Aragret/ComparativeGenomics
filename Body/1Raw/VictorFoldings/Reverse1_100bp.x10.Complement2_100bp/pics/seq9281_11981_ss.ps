%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[69.29706573 574.93518066]
[62.23324203 588.51312256]
[49.66192627 597.24359131]
[34.47191238 599.12030029]
[20.15375900 593.71209717]
[9.99767017 582.26165771]
[6.33744144 567.40020752]
[10.01416588 552.54290771]
[20.18296051 541.10375977]
[34.50711060 535.71142578]
[36.28957367 520.81768799]
[38.07204056 505.92398071]
[39.85450745 491.03024292]
[41.63697433 476.13653564]
[43.41943741 461.24282837]
[45.20190430 446.34909058]
[46.98437119 431.45538330]
[32.56454468 419.56582642]
[28.18928909 401.24136353]
[35.80263138 383.84463501]
[52.49395370 374.47793579]
[53.60960388 359.51947021]
[46.84034348 346.25198364]
[55.58262253 333.06549072]
[56.69827271 318.10705566]
[57.81392288 303.14859009]
[58.92956924 288.19015503]
[60.04521942 273.23168945]
[57.66279602 269.09246826]
[57.85531235 263.41268921]
[61.42330170 257.84661865]
[62.98382568 242.92802429]
[51.38679504 252.44163513]
[36.38684845 252.40081787]
[24.84176445 242.82423401]
[22.02979469 228.09016418]
[29.23653793 214.93482971]
[43.16716385 209.37266541]
[57.45278168 213.94664001]
[65.56261444 226.56736755]
[68.66672516 211.89205933]
[63.73070145 197.83912659]
[74.15633392 185.93884277]
[77.26044464 171.26354980]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[96.24726105 39.92955399]
[106.28818512 28.92823219]
[109.17346191 14.20833969]
[112.05873108 -0.51155126]
[113.73027039 -15.41812515]
[114.17687988 -30.41147614]
[114.62348175 -45.40482712]
[104.06523895 -56.85738754]
[104.73174286 -72.05641174]
[115.71508026 -82.05151367]
[116.16168213 -97.04486084]
[116.60829163 -112.03820801]
[117.05489349 -127.03156281]
[117.50150299 -142.02491760]
[117.72483063 -157.02325439]
[117.72483063 -172.02325439]
[117.72483063 -187.02325439]
[117.72483063 -202.02325439]
[117.72483063 -217.02325439]
[110.10549927 -204.10249329]
[98.16796875 -195.01979065]
[83.68311310 -191.12251282]
[68.79965973 -192.98876953]
[55.72549438 -200.34173584]
[46.40008163 -212.09063721]
[42.20679474 -226.49259949]
[43.76768494 -241.41116333]
[50.85120010 -254.63327026]
[62.40654373 -264.19747925]
[76.71955109 -268.68499756]
[91.66696930 -267.43014526]
[105.03144073 -260.61904907]
[114.83042145 -249.26211548]
[119.61004639 -235.04595947]
[122.71415710 -249.72126770]
[125.81826782 -264.39657593]
[111.62834930 -269.32095337]
[98.16754150 -275.98501587]
[85.64812469 -284.28366089]
[74.26755524 -294.08599854]
[64.20532990 -305.23745728]
[55.62012863 -317.56210327]
[48.64736557 -330.86563110]
[43.39700317 -344.93820190]
[39.95185089 -359.55786133]
[38.36624146 -374.49401855]
[38.66518402 -389.51113892]
[40.84396362 -404.37237549]
[44.86821747 -418.84332275]
[50.67448044 -432.69577026]
[58.17117310 -445.71127319]
[67.24006653 -457.68450928]
[77.73812866 -468.42666626]
[89.49979401 -477.76831055]
[102.33956146 -485.56213379]
[116.05492401 -491.68521118]
[130.42958069 -496.04095459]
[145.23681641 -498.56069946]
[160.24308777 -499.20465088]
[175.21176147 -497.96270752]
[189.90672302 -494.85446167]
[204.09622192 -489.92886353]
[217.55647278 -483.26367188]
[230.07519531 -474.96398926]
[241.45492554 -465.16067505]
[251.51622009 -454.00839233]
[260.10037231 -441.68298340]
[267.07202148 -428.37887573]
[272.32119751 -414.30587769]
[275.76513672 -399.68594360]
[277.34948730 -384.74963379]
[277.04928589 -369.73254395]
[274.86923218 -354.87149048]
[270.84378052 -340.40087891]
[265.03634644 -326.54891968]
[257.53854370 -313.53405762]
[248.46865845 -301.56158447]
[237.96968079 -290.82031250]
[226.20722961 -281.47964478]
[213.36682129 -273.68692017]
[199.65093994 -267.56500244]
[185.27590942 -263.21044922]
[170.46846008 -260.69195557]
[155.46212769 -260.04925537]
[140.49357605 -261.29244995]
[137.38946533 -246.61715698]
[134.28535461 -231.94184875]
[132.72482300 -217.02325439]
[132.72482300 -202.02325439]
[132.72482300 -187.02325439]
[132.72482300 -172.02325439]
[132.72482300 -157.02325439]
[135.40850830 -153.07269287]
[135.63897705 -147.39431763]
[132.49485779 -141.57830811]
[132.04824829 -126.58495331]
[131.60163879 -111.59160614]
[131.15502930 -96.59825134]
[130.70841980 -81.60490417]
[141.07736206 -70.97378540]
[140.83802795 -55.76203537]
[129.61683655 -44.95821762]
[129.17022705 -29.96486855]
[128.72361755 -14.97151947]
[137.54663086 -27.10224915]
[150.95532227 -33.82585526]
[165.95417786 -33.64026642]
[179.19239807 -26.58694458]
[187.71253967 -14.24161720]
[189.61119080 0.63773572]
[184.46417236 14.72702980]
[173.42134094 24.87867928]
[158.94970703 28.82478142]
[144.28225708 25.68376732]
[132.69575500 16.15734482]
[126.77862549 2.37372136]
[123.89334869 17.09361267]
[121.00807953 31.81350327]
[126.15278625 45.79138947]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[91.93574524 174.36766052]
[88.83163452 189.04295349]
[93.54563141 204.14556885]
[83.34202576 214.99617004]
[80.23791504 229.67147827]
[77.90242767 244.48854065]
[76.34190369 259.40716553]
[75.00366974 274.34735107]
[73.88802338 289.30578613]
[72.77237701 304.26425171]
[71.65672302 319.22268677]
[70.54107666 334.18115234]
[77.23053741 348.51858521]
[68.56805420 360.63513184]
[67.45240784 375.59356689]
[77.35538483 381.36810303]
[84.35669708 390.38046265]
[87.47511292 401.30508423]
[86.29694366 412.55322266]
[81.03047943 422.50384521]
[72.47039795 429.73733521]
[61.87808990 433.23785400]
[60.09562302 448.13156128]
[58.31315613 463.02529907]
[56.53068924 477.91900635]
[54.74822617 492.81271362]
[52.96575928 507.70645142]
[51.18329239 522.60015869]
[49.40082550 537.49389648]
[62.04796219 546.11413574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[21 195]
[22 194]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[31 187]
[32 186]
[40 185]
[41 184]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[50 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 156]
[58 155]
[59 154]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[86 139]
[87 138]
[88 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
