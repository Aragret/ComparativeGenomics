%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-48.02344131 420.04962158]
[-46.28472900 434.96520996]
[-46.25763321 449.98178101]
[-47.94250488 464.90353394]
[-51.31738281 479.53598022]
[-56.33826828 493.68829346]
[-62.93969727 507.17602539]
[-71.03561401 519.82330322]
[-80.52046967 531.46527100]
[-91.27059937 541.95013428]
[-103.14587402 551.14123535]
[-115.99145508 558.91864014]
[-129.63989258 565.18109131]
[-143.91322327 569.84686279]
[-158.62539673 572.85516357]
[-173.58459473 574.16674805]
[-188.59577942 573.76458740]
[-203.46328735 571.65380859]
[-217.99324036 567.86199951]
[-231.99626160 562.43853760]
[-245.28974915 555.45422363]
[-257.70040894 547.00006104]
[-269.06646729 537.18627930]
[-279.23971558 526.14080811]
[-288.08755493 514.00762939]
[-295.49459839 500.94491577]
[-301.36428833 487.12304688]
[-305.62011719 472.72216797]
[-308.20657349 457.92999268]
[-309.08996582 442.93942261]
[-308.25878906 427.94586182]
[-305.72384644 413.14477539]
[-301.51818848 398.72915649]
[-295.69665527 384.88690186]
[-288.33517456 371.79852295]
[-279.52966309 359.63461304]
[-269.39492798 348.55377197]
[-258.06311035 338.70043945]
[-245.68197632 330.20309448]
[-232.41287231 323.17254639]
[-218.42883301 317.70037842]
[-203.91217041 313.85800171]
[-189.05210876 311.69546509]
[-174.04240417 311.24096680]
[-159.07873535 312.50045776]
[-144.35618591 315.45748901]
[-130.06668091 320.07354736]
[-116.39652252 326.28842163]
[-103.52393341 334.02108765]
[-94.38513184 322.12646484]
[-85.24633026 310.23181152]
[-76.10752106 298.33718872]
[-66.96871948 286.44256592]
[-57.82991791 274.54791260]
[-59.08996201 262.51718140]
[-51.57361984 252.53277588]
[-38.87455368 250.27522278]
[-29.55967140 238.51797485]
[-30.64045334 226.46980286]
[-22.97629356 216.59840393]
[-10.24502373 214.53018188]
[-0.75612485 202.91291809]
[8.73277378 191.29565430]
[-6.26124954 191.71905518]
[-17.25727272 181.51673889]
[-17.95627403 166.53303528]
[-7.95783329 155.35128784]
[7.01048708 154.37693787]
[18.37415504 164.16810608]
[19.62382889 179.11508179]
[30.11133003 168.39070129]
[40.59883118 157.66632080]
[51.08633423 146.94194031]
[61.57383347 136.21755981]
[72.06133270 125.49317932]
[81.55023193 113.87591553]
[89.96485138 101.45841980]
[91.52022552 93.54935455]
[98.59833527 88.91996765]
[107.19689941 76.62912750]
[115.79546356 64.33828735]
[118.15058136 55.51268768]
[124.61466980 51.92976761]
[133.39527893 39.76831055]
[142.17587280 27.60685349]
[150.95648193 15.44539833]
[157.43597412 1.91705287]
[161.40806580 -12.54747105]
[165.38017273 -27.01199532]
[164.63494873 -36.11597443]
[169.52058411 -41.66146469]
[173.70759583 -56.06524658]
[177.89459229 -70.46902466]
[179.78788757 -85.34906006]
[179.34129333 -100.34241486]
[178.89468384 -115.33576202]
[178.44807434 -130.32911682]
[164.22488403 -135.69281006]
[153.14039612 -146.09484863]
[146.88490295 -159.94898987]
[146.41232300 -175.14257812]
[151.79472351 -189.35870361]
[162.21133423 -200.42950439]
[176.07369995 -206.66676331]
[191.26789856 -207.11935425]
[205.47692871 -201.71826172]
[216.53401184 -191.28709412]
[222.75303650 -177.41653442]
[223.18563843 -162.22175598]
[217.76583862 -148.01985168]
[207.32014465 -136.97648621]
[193.44142151 -130.77571106]
[193.88803101 -115.78237152]
[194.33464050 -100.78901672]
[194.78123474 -85.79566956]
[201.14869690 -99.37710571]
[210.90234375 -110.77300262]
[223.33805847 -119.16065979]
[237.55810547 -123.93458557]
[252.53591919 -124.75012970]
[267.19024658 -121.54843140]
[280.46316528 -114.56060791]
[291.39648438 -104.29113007]
[299.20095825 -91.48135376]
[303.31314087 -77.05603027]
[303.43618774 -62.05653381]
[299.56118774 -47.56569672]
[291.96789551 -34.62961578]
[281.20449829 -24.18216324]
[268.04800415 -16.97755051]
[253.44818115 -13.53588295]
[238.45899963 -14.10561848]
[224.16256714 -18.64562607]
[211.59092712 -26.82815933]
[201.65164185 -38.06251526]
[195.06225586 -51.53767395]
[192.29838562 -66.28201294]
[188.11137390 -51.87823486]
[183.92436218 -37.47445297]
[179.84469604 -23.03989792]
[175.87258911 -8.57537460]
[171.90049744 5.88914919]
[181.87821960 -5.31107903]
[194.21846008 -13.83860016]
[208.22329712 -19.21114159]
[223.10072327 -21.12485886]
[238.00932312 -19.47152328]
[252.10595703 -14.34463882]
[264.59338379 -6.03415585]
[274.76538086 4.98992825]
[282.04669189 18.10414696]
[286.02548218 32.56682968]
[286.47674561 47.56003952]
[283.37500000 62.23583984]
[276.89562988 75.76423645]
[267.40505981 87.38014221]
[255.44004822 96.42662048]
[241.67729187 102.39204407]
[226.89511108 104.93903351]
[211.92951965 103.92356110]
[197.62690735 99.40304565]
[184.79612732 91.63314056]
[174.16285706 81.05328369]
[166.32843018 68.26180267]
[161.73594666 53.98213577]
[160.64511108 39.02185059]
[163.11793518 24.22600174]
[154.33732605 36.38745880]
[145.55673218 48.54891205]
[136.77612305 60.71036911]
[128.08630371 72.93685150]
[119.48773956 85.22769165]
[110.88917542 97.51853180]
[102.38234711 109.87303925]
[93.96772766 122.29053497]
[107.76904297 116.41484070]
[122.75672150 117.02270508]
[136.03688049 123.99675751]
[145.04531860 135.99041748]
[148.04267883 150.68789673]
[144.45018005 165.25134277]
[134.96150208 176.86878967]
[121.40874481 183.29707336]
[106.40874481 183.29501343]
[92.85776520 176.86299133]
[83.37228394 165.24293518]
[79.78379822 150.67849731]
[82.78571320 135.98068237]
[72.29821014 146.70506287]
[61.81071091 157.42944336]
[51.32321167 168.15382385]
[40.83570862 178.87820435]
[30.34820938 189.60258484]
[20.35003662 200.78456116]
[10.86113834 212.40182495]
[1.37224007 224.01907349]
[-1.16248477 242.25796509]
[-17.80241966 247.83285522]
[-27.11730385 259.59011841]
[-29.38019753 277.86471558]
[-45.93528748 283.68673706]
[-55.07408905 295.58135986]
[-64.21289062 307.47598267]
[-73.35169220 319.37063599]
[-82.49049377 331.26525879]
[-91.62929535 343.15988159]
[-80.84139252 353.60589600]
[-71.31459045 365.21356201]
[-63.17308807 377.83154297]
[-56.52302551 391.29534912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[54 201]
[57 199]
[58 198]
[61 196]
[62 195]
[63 194]
[70 193]
[71 192]
[72 191]
[73 190]
[74 189]
[75 188]
[76 175]
[77 174]
[79 173]
[80 172]
[81 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 142]
[88 141]
[89 140]
[91 139]
[92 138]
[93 137]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
