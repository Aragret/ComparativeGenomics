%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[190.21875000 632.41479492]
[192.69606018 613.19207764]
[192.91938782 598.19372559]
[193.03106689 583.19415283]
[193.03106689 568.19415283]
[193.03106689 553.19415283]
[193.03106689 538.19415283]
[193.03106689 523.19415283]
[193.03106689 508.19415283]
[193.03106689 493.19415283]
[191.02705383 478.32864380]
[187.05494690 463.86410522]
[183.08285522 449.39959717]
[179.11076355 434.93505859]
[168.75614929 428.68136597]
[165.32855225 416.66323853]
[171.18995667 405.17382812]
[167.43365479 390.65176392]
[163.67735291 376.12973022]
[159.92105103 361.60766602]
[149.24311829 351.22348022]
[153.27804565 335.92544556]
[149.52174377 321.40338135]
[145.76544189 306.88131714]
[135.08750916 296.49716187]
[139.12243652 281.19912720]
[135.36613464 266.67706299]
[124.68820953 256.29287720]
[128.72312927 240.99485779]
[124.96683502 226.47279358]
[121.21053314 211.95072937]
[108.28623199 204.63650513]
[104.26993561 189.96258545]
[112.02939606 176.45597839]
[108.27310181 161.93391418]
[104.51679993 147.41186523]
[100.76049805 132.88980103]
[97.00419617 118.36774445]
[82.09110260 105.06163025]
[87.83280945 85.91780853]
[83.43180847 71.57795715]
[79.03080750 57.23811340]
[74.62981415 42.89826584]
[70.22881317 28.55841827]
[65.82781219 14.21857166]
[61.32018661 -0.08811490]
[49.71308517 -10.83919525]
[53.16032791 -25.32939148]
[37.44218826 -33.00788879]
[32.24288940 -49.35665512]
[40.31434250 -64.11099243]
[35.48834229 -78.31344604]
[30.66234589 -92.51589966]
[25.83634758 -106.71836090]
[21.01035118 -120.92081451]
[12.13969421 -108.82489014]
[-2.84109569 -108.06597137]
[-12.88873672 -119.20352173]
[-10.59648323 -134.02734375]
[2.34590149 -141.60986328]
[16.39662361 -136.36271667]
[12.64032269 -150.88478088]
[8.88402176 -165.40684509]
[5.12772131 -179.92889404]
[1.26341593 -194.42259216]
[-2.70868039 -208.88711548]
[-6.68077660 -223.35163879]
[-10.65287304 -237.81616211]
[-24.05094337 -250.44839478]
[-18.95516205 -267.24124146]
[-23.14217377 -281.64501953]
[-27.32918549 -296.04879761]
[-30.35293388 -281.35675049]
[-37.71408081 -268.28717041]
[-48.71100998 -258.08581543]
[-62.29556656 -251.72502136]
[-77.17295074 -249.81101990]
[-91.92515564 -252.52627563]
[-105.14608002 -259.61196899]
[-115.57560730 -270.39273071]
[-122.21964264 -283.84103394]
[-124.44493103 -298.67504883]
[-122.03937531 -313.48092651]
[-115.23224640 -326.84741211]
[-104.67236328 -337.50051880]
[-91.36622620 -344.42486572]
[-76.58209229 -346.96047974]
[-61.72908783 -344.86566162]
[-48.22290421 -338.34008789]
[-37.35087204 -328.00573730]
[-30.14885712 -314.84652710]
[-30.37218475 -329.84487915]
[-30.59551239 -344.84320068]
[-38.53741837 -358.52667236]
[-30.99046707 -371.36770630]
[-31.21379471 -386.36605835]
[-31.43712234 -401.36437988]
[-31.66044998 -416.36273193]
[-45.67997360 -422.31024170]
[-56.06362152 -433.45025635]
[-61.01237106 -447.85266113]
[-59.66881943 -463.02221680]
[-52.26574326 -476.33062744]
[-40.08577347 -485.47219849]
[-25.23916054 -488.86306763]
[-10.29817104 -485.91574097]
[2.14857912 -477.14086914]
[9.94461441 -464.05874634]
[11.73922348 -448.93594360]
[7.22148180 -434.39257812]
[-2.82588601 -422.94833374]
[-16.66211319 -416.58605957]
[-16.43878555 -401.58770752]
[-16.21545792 -386.58938599]
[-15.99212933 -371.59103394]
[-8.06619644 -358.98037720]
[-15.59717560 -345.06652832]
[-15.37384796 -330.06820679]
[-15.15052032 -315.06985474]
[-12.92540264 -300.23580933]
[-8.73839188 -285.83203125]
[-4.55138016 -271.42825317]
[5.89519453 -265.32943726]
[9.50134468 -253.36367798]
[3.81165123 -241.78826904]
[7.78374720 -227.32373047]
[11.75584316 -212.85920715]
[15.72793961 -198.39468384]
[20.53046227 -192.77708435]
[19.64978027 -183.68519592]
[23.40608215 -169.16314697]
[27.16238213 -154.64108276]
[30.91868210 -140.11901855]
[35.21280670 -125.74681091]
[40.03880310 -111.54435730]
[44.86480331 -97.34189606]
[49.69079971 -83.13944244]
[54.51679611 -68.93698883]
[66.75816345 -64.91473389]
[74.56425476 -54.41963959]
[74.90539551 -41.14959717]
[67.43305969 -29.94339943]
[78.71014404 -20.21320152]
[75.59291840 -4.70212412]
[80.64149475 0.69544125]
[80.16766357 9.81757355]
[84.56866455 24.15742111]
[88.96965790 38.49726868]
[93.37065887 52.83711624]
[97.77165222 67.17696381]
[102.17265320 81.51680756]
[110.32852936 84.51871490]
[116.23202515 90.89669037]
[118.59572601 99.25987244]
[116.90417480 107.78444672]
[111.52625275 114.61144257]
[115.28255463 129.13349915]
[119.03885651 143.65556335]
[122.79515839 158.17761230]
[126.55146027 172.69967651]
[139.88684082 180.74986267]
[143.48939514 195.53079224]
[135.73258972 208.19444275]
[139.48889160 222.71649170]
[143.24519348 237.23855591]
[154.19180298 248.66143799]
[149.88819885 262.92077637]
[153.64450073 277.44281006]
[164.59111023 288.86572266]
[160.28750610 303.12503052]
[164.04380798 317.64709473]
[167.80010986 332.16915894]
[178.74671936 343.59204102]
[174.44311523 357.85134888]
[178.19940186 372.37341309]
[181.95570374 386.89547729]
[185.71200562 401.41754150]
[198.92051697 414.24783325]
[193.57528687 430.96295166]
[197.54737854 445.42749023]
[201.51947021 459.89199829]
[205.49157715 474.35653687]
[208.73373413 459.71112061]
[216.28865051 446.75259399]
[227.43623352 436.71609497]
[241.11399841 430.55825806]
[256.01821899 428.86596680]
[270.72836304 431.80056763]
[283.84234619 439.08230591]
[294.11019897 450.01718140]
[300.55328369 463.56289673]
[302.55746460 478.42840576]
[299.93173218 493.19680786]
[292.92636108 506.46044922]
[282.20901489 516.95520020]
[268.80126953 523.68066406]
[253.98101807 525.99584961]
[239.16084290 523.68017578]
[225.75332642 516.95422363]
[215.03636169 506.45913696]
[208.03106689 493.19415283]
[208.03106689 508.19415283]
[208.03106689 523.19415283]
[208.03106689 538.19415283]
[208.03106689 553.19415283]
[208.03106689 568.19415283]
[208.03106689 583.19415283]
[211.16047668 591.77581787]
[207.91772461 598.41705322]
[207.69439697 613.41540527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 182]
[12 181]
[13 180]
[14 179]
[17 177]
[18 176]
[19 175]
[20 174]
[22 172]
[23 171]
[24 170]
[26 168]
[27 167]
[29 165]
[30 164]
[31 163]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 144]
[48 142]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 128]
[66 127]
[67 126]
[68 125]
[70 122]
[71 121]
[72 120]
[91 119]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
