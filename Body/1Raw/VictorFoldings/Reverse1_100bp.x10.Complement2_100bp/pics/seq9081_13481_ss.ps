%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[115.65593719 778.15673828]
[101.99208069 771.91955566]
[89.21772003 764.01904297]
[77.53431702 754.57965088]
[67.12615204 743.75036621]
[58.15736389 731.70196533]
[50.76940536 718.62445068]
[45.07880020 704.72412109]
[41.17528915 690.22009277]
[39.12044525 675.34124756]
[38.94667053 660.32214355]
[40.65670776 645.39971924]
[44.22358704 630.80926514]
[49.59105301 616.78094482]
[56.67445374 603.53601074]
[65.36207581 591.28332520]
[75.51689911 580.21612549]
[86.97876740 570.50897217]
[99.56690979 562.31494141]
[113.08279419 555.76330566]
[127.31326294 550.95739746]
[142.03387451 547.97290039]
[140.91821289 533.01446533]
[139.80256653 518.05603027]
[138.68692017 503.09756470]
[137.34869385 488.15737915]
[135.78816223 473.23876953]
[134.22764587 458.32019043]
[118.88558960 456.77993774]
[104.19093323 452.09039307]
[90.78306580 444.45306396]
[79.24590302 434.19793701]
[70.08245850 421.76898193]
[63.69289780 407.70495605]
[60.35706711 392.61624146]
[60.22224426 377.15811157]
[63.29662704 362.00244141]
[69.44889069 347.80838013]
[78.41378784 335.19384766]
[89.80356598 324.70843506]
[103.12477112 316.80960083]
[117.79961395 311.84271240]
[116.01714325 296.94897461]
[114.23468018 282.05526733]
[112.45221710 267.16156006]
[110.66974640 252.26783752]
[108.88728333 237.37411499]
[107.10482025 222.48039246]
[105.32234955 207.58668518]
[96.12747955 195.86901855]
[102.17006683 181.24719238]
[92.97519684 169.52954102]
[99.01778412 154.90771484]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.21613312 65.69294739]
[84.44052887 50.95198059]
[81.11826324 36.32452393]
[77.79600525 21.69706154]
[74.47374725 7.06960201]
[71.15148926 -7.55785847]
[67.82923126 -22.18531799]
[64.50696564 -36.81277847]
[61.44539261 -39.89185715]
[59.69855881 -43.42924500]
[59.24910736 -46.95534515]
[59.92893982 -50.05444717]
[61.44988632 -52.40920258]
[48.88588333 -61.61700439]
[46.61639023 -76.66040802]
[55.47204971 -88.58152008]
[53.02632141 -103.38079071]
[50.58059311 -118.18006134]
[48.13486481 -132.97933960]
[45.68914032 -147.77861023]
[43.24341202 -162.57788086]
[40.79768372 -177.37715149]
[38.35195541 -192.17642212]
[35.47908020 -195.43226624]
[33.94589233 -199.06735229]
[33.70711136 -202.61395264]
[34.57020569 -205.66709900]
[36.22860718 -207.92715454]
[34.66808701 -222.84574890]
[33.10756302 -237.76435852]
[29.10234451 -245.97386169]
[31.63656425 -252.91645813]
[30.29833031 -267.85662842]
[28.96009445 -282.79681396]
[14.14189243 -285.72897339]
[0.75065202 -292.71835327]
[-10.12805653 -303.19836426]
[-17.61234665 -316.31939697]
[-21.09549904 -331.01785278]
[-20.29515076 -346.10214233]
[-15.27618313 -360.34948730]
[-6.44546032 -372.60488892]
[5.48115015 -381.87487793]
[19.53681183 -387.40798950]
[34.58209229 -388.75561523]
[49.39734268 -385.80859375]
[62.78155518 -378.80575562]
[73.64973450 -368.31484985]
[81.12083435 -355.18627930]
[84.58921814 -340.48434448]
[83.77371979 -325.40084839]
[78.74044037 -311.15856934]
[69.89740753 -298.91201782]
[57.96149445 -289.65402222]
[43.90028000 -284.13507080]
[45.23851395 -269.19488525]
[46.57674789 -254.25468445]
[48.02616882 -239.32487488]
[49.58668900 -224.40628052]
[51.14721298 -209.48767090]
[53.15122604 -194.62214661]
[55.59695435 -179.82287598]
[58.04268265 -165.02360535]
[60.48841095 -150.22433472]
[62.93413544 -135.42506409]
[65.37986755 -120.62578583]
[67.82559204 -105.82651520]
[70.27131653 -91.02724457]
[82.49154663 -82.58913422]
[85.18267822 -67.61540985]
[76.24915314 -54.85493088]
[79.13442993 -40.13503647]
[82.45668793 -25.50757790]
[85.77894592 -10.88011742]
[89.10120392 3.74734235]
[92.42346954 18.37480164]
[95.74572754 33.00226212]
[99.06798553 47.62972260]
[109.14890289 36.52228928]
[124.12735748 37.32601929]
[132.96177673 49.44843292]
[129.13977051 63.95333862]
[115.47877502 70.14825439]
[102.05017853 63.46782684]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[113.91149902 153.12524414]
[123.23386383 165.90820312]
[117.06378174 179.46473694]
[126.38615417 192.24769592]
[120.21606445 205.80421448]
[121.99853516 220.69793701]
[123.78099823 235.59164429]
[125.56346893 250.48536682]
[127.34593201 265.37908936]
[129.12840271 280.27279663]
[130.91085815 295.16650391]
[132.69332886 310.06024170]
[147.25421143 311.25909424]
[161.29435730 315.28228760]
[174.27159119 321.97238159]
[185.68521118 331.06909180]
[195.09527588 342.21926880]
[202.13952637 354.99069214]
[206.54740906 368.88876343]
[208.15037537 383.37570190]
[206.88842773 397.89132690]
[202.81227112 411.87475586]
[196.08131409 424.78601074]
[186.95747375 436.12695312]
[175.79490662 445.46041870]
[163.02635193 452.42718506]
[149.14624023 456.75964355]
[150.70677185 471.67825317]
[152.26728821 486.59686279]
[155.83528137 492.16293335]
[156.02780151 497.84271240]
[153.64537048 501.98193359]
[154.76103210 516.94036865]
[155.87667847 531.89880371]
[156.99232483 546.85729980]
[171.99278259 547.62506104]
[186.77871704 550.26684570]
[201.11695862 554.74102783]
[214.78134155 560.97705078]
[227.55636597 568.87652588]
[239.24055481 578.31494141]
[249.64962769 589.14331055]
[258.61944580 601.19097900]
[266.00848389 614.26788330]
[271.70025635 628.16772461]
[275.60501099 642.67144775]
[277.66110229 657.55010986]
[277.83612061 672.56921387]
[276.12734985 687.49176025]
[272.56170654 702.08251953]
[267.19540405 716.11126709]
[260.11312866 729.35681152]
[251.42654419 741.61022949]
[241.27265930 752.67828369]
[229.81159973 762.38641357]
[217.22415161 770.58148193]
[203.70881653 777.13427734]
[189.47874451 781.94140625]
[174.75839233 784.92706299]
[159.77990723 786.04425049]
[144.77951050 785.27520752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 184]
[23 183]
[24 182]
[25 181]
[26 178]
[27 177]
[28 176]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[51 152]
[53 150]
[54 149]
[55 148]
[56 147]
[57 144]
[58 143]
[59 142]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[71 129]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[86 118]
[87 117]
[88 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
