%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[87.12461853 422.59155273]
[71.78104401 421.90576172]
[58.84466934 413.62652588]
[51.79531097 399.98092651]
[52.52921295 384.63958740]
[60.84896088 371.72921753]
[74.51657867 364.72265625]
[75.18636322 349.73760986]
[75.85614777 334.75259399]
[76.52593231 319.76754761]
[77.19571686 304.78250122]
[77.86550140 289.79745483]
[78.53528595 274.81243896]
[71.37400818 261.75234985]
[79.71980286 248.31144714]
[70.80518341 233.19534302]
[80.84394073 217.75820923]
[81.29055023 202.76486206]
[81.73715973 187.77151489]
[82.18376160 172.77816772]
[82.63037109 157.78482056]
[74.12957001 170.14347839]
[61.15158081 177.66490173]
[46.20225525 178.89683533]
[32.16807175 173.60139465]
[21.75880623 162.80105591]
[16.98433113 148.58120728]
[18.76651764 133.68745422]
[26.76125717 120.99555969]
[39.42488861 112.95613098]
[54.31226349 111.12145233]
[68.54886627 115.84577179]
[79.38582611 126.21690369]
[84.73088074 140.23359680]
[87.83499146 125.55828857]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[88.10233307 59.17718887]
[90.79346466 44.20346451]
[103.01369476 35.76535416]
[105.45941925 20.96608353]
[107.90514374 6.16681290]
[110.35087585 -8.63245773]
[98.48570251 -16.31128502]
[90.46770477 -27.89731026]
[87.48028564 -41.62250137]
[89.94221497 -55.40761566]
[97.44929504 -67.17720032]
[108.84027100 -75.17205048]
[122.37638092 -78.21212006]
[125.04217529 -92.97333527]
[127.70796967 -107.73455811]
[121.00826263 -118.75620270]
[123.53249359 -130.99597168]
[133.39331055 -138.00247192]
[136.27857971 -152.72236633]
[139.16384888 -167.44226074]
[132.62898254 -178.56242371]
[135.33515930 -190.76325989]
[145.29919434 -197.62216187]
[148.40330505 -212.29747009]
[151.50741577 -226.97277832]
[154.61152649 -241.64807129]
[156.94700623 -256.46514893]
[158.50753784 -271.38375854]
[160.06805420 -286.30236816]
[161.62858582 -301.22094727]
[146.86822510 -303.93395996]
[132.36250305 -307.78262329]
[118.19864655 -312.74380493]
[104.46183014 -318.78765869]
[91.23468018 -325.87786865]
[78.59674835 -333.97174072]
[66.62403870 -343.02062988]
[55.38855362 -352.97012329]
[44.95787048 -363.76037598]
[35.39472198 -375.32644653]
[26.75661850 -387.59884644]
[19.09551430 -400.50372314]
[12.45748520 -413.96347046]
[6.88245153 -427.89715576]
[2.40394330 -442.22094727]
[-0.95110428 -456.84872437]
[-3.16251373 -471.69250488]
[-4.21698523 -486.66302490]
[-4.10817719 -501.67025757]
[-2.83674335 -516.62390137]
[-0.41033080 -531.43408203]
[3.15646768 -546.01165771]
[7.84220028 -560.26898193]
[13.61868668 -574.12036133]
[20.45118523 -587.48248291]
[28.29860497 -600.27490234]
[37.11375046 -612.42071533]
[46.84360123 -623.84692383]
[57.42964935 -634.48480225]
[68.80821991 -644.27032471]
[80.91088104 -653.14465332]
[93.66484833 -661.05444336]
[106.99341583 -667.95208740]
[120.81641388 -673.79614258]
[135.05072021 -678.55145264]
[149.61073303 -682.18939209]
[164.40887451 -684.68804932]
[179.35614014 -686.03247070]
[194.36264038 -686.21453857]
[209.33813477 -685.23321533]
[224.19253540 -683.09429932]
[238.83651733 -679.81066895]
[253.18202209 -675.40216064]
[267.14276123 -669.89520264]
[280.63473511 -663.32299805]
[293.57687378 -655.72497559]
[305.89129639 -647.14691162]
[317.50393677 -637.64031982]
[328.34497070 -627.26245117]
[338.34918213 -616.07568359]
[347.45642090 -604.14727783]
[355.61190796 -591.54901123]
[362.76660156 -578.35662842]
[368.87747192 -564.64953613]
[373.90774536 -550.51000977]
[377.82717896 -536.02325439]
[380.61221313 -521.27636719]
[382.24609375 -506.35794067]
[382.71896362 -491.35778809]
[382.02804565 -476.36608887]
[380.17742920 -461.47302246]
[377.17828369 -446.76812744]
[373.04861450 -432.33990479]
[367.81329346 -418.27505493]
[361.50378418 -404.65820312]
[354.15805054 -391.57125854]
[345.82025146 -379.09289551]
[336.54055786 -367.29818726]
[326.37472534 -356.25805664]
[315.38397217 -346.03887939]
[303.63433838 -336.70217896]
[291.19650269 -328.30404663]
[278.14526367 -320.89498901]
[264.55914307 -314.51962280]
[250.51982117 -309.21624756]
[236.11174011 -305.01675415]
[221.42156982 -301.94644165]
[206.53762817 -300.02371216]
[191.54945374 -299.26019287]
[176.54718018 -299.66043091]
[174.98666382 -284.74182129]
[173.42614746 -269.82321167]
[171.86561584 -254.90461731]
[183.46264648 -264.41824341]
[198.46258545 -264.37741089]
[210.00767517 -254.80082703]
[212.81964111 -240.06675720]
[205.61289978 -226.91142273]
[191.68228149 -221.34927368]
[177.39665222 -225.92323303]
[169.28683472 -238.54396057]
[166.18272400 -223.86866760]
[163.07861328 -209.19335938]
[159.97450256 -194.51806641]
[166.30516052 -178.15072632]
[153.88374329 -164.55697632]
[150.99847412 -149.83709717]
[148.11318970 -135.11720276]
[154.68684387 -118.84593201]
[142.46919250 -105.06876373]
[139.80339050 -90.30754089]
[137.13760376 -75.54632568]
[150.25073242 -66.41416168]
[158.09715271 -52.42676544]
[159.06175232 -36.35961914]
[152.90072632 -21.42636299]
[140.80062866 -10.63602638]
[125.15014648 -6.18673038]
[122.70441437 8.61254025]
[120.25868988 23.41181183]
[117.81296539 38.21108246]
[126.66862488 50.13219452]
[124.39912415 65.17559814]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[107.24946594 118.14803314]
[107.05115509 122.78634644]
[105.25014496 126.44303894]
[102.51029205 128.66239929]
[99.40618134 143.33770752]
[97.62371826 158.23141479]
[97.17710876 173.22477722]
[96.73050690 188.21812439]
[96.28389740 203.21147156]
[95.83729553 218.20481873]
[104.09784698 228.11068726]
[103.41719818 240.58947754]
[94.70484161 248.98123169]
[101.81821442 263.11312866]
[93.52032471 275.48220825]
[92.85054016 290.46725464]
[92.18075562 305.45230103]
[91.51097107 320.43731689]
[90.84118652 335.42236328]
[90.17140198 350.40740967]
[89.50161743 365.39245605]
[102.48963928 373.59042358]
[109.62440491 387.19155884]
[108.98669434 402.53720093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[15 199]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[34 191]
[35 190]
[36 186]
[38 184]
[39 183]
[42 180]
[43 179]
[44 178]
[45 177]
[52 171]
[53 170]
[54 169]
[57 167]
[58 166]
[59 165]
[62 163]
[63 162]
[64 161]
[65 160]
[66 152]
[67 151]
[68 150]
[69 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
