%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[122.06674957 622.03070068]
[109.63218689 613.62774658]
[97.88617706 604.28643799]
[86.89937592 594.06298828]
[76.73785400 583.01892090]
[67.46272278 571.22058105]
[59.12977600 558.73901367]
[51.78911972 545.64916992]
[45.48490524 532.02990723]
[40.25504684 517.96301270]
[36.13099670 503.53317261]
[33.13756180 488.82714844]
[31.29273987 473.93334961]
[30.60762978 458.94137573]
[31.08634949 443.94140625]
[32.72602081 429.02365112]
[35.51678467 414.27780151]
[39.44185257 399.79257202]
[44.47762299 385.65505981]
[50.59380341 371.95028687]
[57.75362015 358.76068115]
[65.91400146 346.16558838]
[75.02587891 334.24075317]
[85.03443909 323.05786133]
[95.87950134 312.68420410]
[107.49584198 303.18212891]
[119.81359100 294.60885620]
[132.75866699 287.01586914]
[146.25321960 280.44888306]
[160.21607971 274.94735718]
[155.81507874 260.60751343]
[151.41407776 246.26765442]
[147.01309204 231.92781067]
[142.61209106 217.58796692]
[138.21109009 203.24812317]
[132.85990906 189.23509216]
[126.58254242 175.61178589]
[120.30518341 161.98846436]
[114.02782440 148.36514282]
[107.75046539 134.74183655]
[101.47309875 121.11851501]
[85.86410522 115.75875092]
[78.84612274 100.82169342]
[84.68429565 85.38525391]
[78.20479584 71.85691071]
[71.72530365 58.32856369]
[65.24580383 44.80021667]
[58.76630783 31.27187347]
[52.28681183 17.74352646]
[45.80731964 4.21518183]
[39.32782364 -9.31316376]
[32.64762878 -22.74353981]
[25.76821518 -36.07296753]
[18.88880157 -49.40239716]
[12.00938988 -62.73182678]
[11.58018112 -47.73796844]
[6.11303902 -33.76977921]
[-3.74976349 -22.46822357]
[-16.84955406 -15.16100121]
[-31.64738083 -12.70655632]
[-46.40481186 -15.39323330]
[-59.38815689 -22.90540504]
[-69.07215118 -34.36054993]
[-74.31911469 -48.41292572]
[-74.51265717 -63.41167831]
[-69.63003540 -77.59476471]
[-60.24484634 -89.29597473]
[-47.45965958 -97.14065552]
[-32.77646637 -100.20722961]
[-17.92023468 -98.13542938]
[-4.63625717 -91.16865540]
[5.51572514 -80.12403870]
[1.97605288 -94.70041656]
[-1.56361961 -109.27678680]
[-5.10329199 -123.85316467]
[-8.64296436 -138.42953491]
[-23.60043716 -136.99609375]
[-38.60966110 -137.70597839]
[-53.36507034 -140.54475403]
[-67.56626129 -145.45465088]
[-80.92411804 -152.33566284]
[-93.16668701 -161.04774475]
[-104.04473114 -171.41349792]
[-113.33678436 -183.22190857]
[-120.85366821 -196.23255920]
[-126.44235992 -210.18058777]
[-129.98907471 -224.78201294]
[-131.42160034 -239.73956299]
[-130.71078491 -254.74874878]
[-127.87108612 -269.50396729]
[-122.96031952 -283.70486450]
[-116.07847595 -297.06228638]
[-107.36563873 -309.30432129]
[-96.99921417 -320.18173218]
[-85.19023132 -329.47305298]
[-72.17910767 -336.98913574]
[-58.23073959 -342.57696533]
[-43.62909698 -346.12277222]
[-28.67144585 -347.55438232]
[-13.66230965 -346.84262085]
[1.09274673 -344.00201416]
[15.29332924 -339.09036255]
[28.65033340 -332.20770264]
[40.89182663 -323.49411011]
[51.76858521 -313.12701416]
[61.05917740 -301.31744385]
[68.57445526 -288.30584717]
[74.16141510 -274.35714722]
[77.70632172 -259.75527954]
[79.13700104 -244.79754639]
[78.42432404 -229.78845215]
[75.58280182 -215.03356934]
[70.67028046 -200.83329773]
[63.78677750 -187.47671509]
[55.07242966 -175.23576355]
[44.70465469 -164.35964966]
[32.89451981 -155.06977844]
[19.88246918 -147.55531311]
[5.93341112 -141.96920776]
[9.47308350 -127.39283752]
[13.01275539 -112.81645966]
[16.55242729 -98.24008942]
[20.09210014 -83.66371155]
[25.33881950 -69.61123657]
[32.21823120 -56.28181076]
[39.09764481 -42.95238113]
[45.97705460 -29.62295151]
[50.17368698 -27.34318733]
[52.98273849 -22.40291786]
[52.85616684 -15.79265976]
[59.33566284 -2.26431417]
[65.81516266 11.26403141]
[72.29465485 24.79237747]
[78.77415466 38.32072449]
[85.25364685 51.84906769]
[91.73313904 65.37741089]
[98.21263885 78.90576172]
[110.58345795 81.66555023]
[119.16040039 90.99773407]
[120.86886597 103.55698395]
[115.09642029 114.84115601]
[121.37377930 128.46446228]
[127.65113831 142.08778381]
[133.92849731 155.71110535]
[140.20585632 169.33441162]
[146.48321533 182.95773315]
[150.02473450 168.38180542]
[160.81066895 157.95762634]
[175.49888611 154.91522217]
[189.53808594 160.19734192]
[198.57807922 172.16725159]
[199.81770325 187.11593628]
[192.87286377 200.41139221]
[179.89549255 207.93388367]
[164.90676880 207.35247803]
[152.55093384 198.84712219]
[156.95193481 213.18696594]
[161.35293579 227.52680969]
[165.75393677 241.86665344]
[170.15493774 256.20651245]
[174.55592346 270.54635620]
[189.20106506 267.26788330]
[204.05621338 265.13415527]
[219.03204346 264.15802002]
[234.03848267 264.34533691]
[248.98527527 265.69497681]
[263.78253174 268.19882202]
[278.34127808 271.84185791]
[292.57391357 276.60211182]
[306.39489746 282.45095825]
[319.72103882 289.35327148]
[332.47225952 297.26751709]
[344.57180786 306.14608765]
[355.94696045 315.93557739]
[366.52929688 326.57711792]
[376.25515747 338.00671387]
[385.06607056 350.15563965]
[392.90902710 362.95083618]
[399.73684692 376.31527710]
[405.50848389 390.16867065]
[410.18923950 404.42767334]
[413.75094604 419.00650024]
[416.17221069 433.81750488]
[417.43841553 448.77160645]
[417.54199219 463.77886963]
[416.48226929 478.74902344]
[414.26568604 493.59204102]
[410.90554810 508.21862793]
[406.42202759 522.54089355]
[400.84213257 536.47259521]
[394.19940186 549.93005371]
[386.53378296 562.83221436]
[377.89138794 575.10162354]
[368.32421875 586.66436768]
[357.88977051 597.45092773]
[346.65081787 607.39648438]
[334.67492676 616.44122314]
[322.03417969 624.53070068]
[308.80456543 631.61627197]
[295.06564331 637.65533447]
[280.90002441 642.61157227]
[266.39297485 646.45513916]
[251.63166809 649.16302490]
[236.70492554 650.71881104]
[221.70249939 651.11322021]
[206.71463013 650.34387207]
[191.83143616 648.41540527]
[177.14245605 645.33935547]
[162.73600769 641.13427734]
[148.69874573 635.82543945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[41 141]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 127]
[53 126]
[54 125]
[55 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
