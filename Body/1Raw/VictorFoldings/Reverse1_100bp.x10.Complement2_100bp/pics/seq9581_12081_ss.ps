%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[116.01577759 817.53149414]
[106.82455444 805.62799072]
[99.84015656 792.30926514]
[95.27481842 777.97998047]
[93.26728821 763.07556152]
[93.87856293 748.04901123]
[97.09007263 733.35693359]
[102.80422211 719.44580078]
[110.84736633 706.73834229]
[120.97507477 695.62078857]
[132.87959290 686.43090820]
[146.19914246 679.44799805]
[160.52896118 674.88427734]
[158.52494812 660.01873779]
[156.52091980 645.15325928]
[154.51690674 630.28771973]
[152.51289368 615.42218018]
[150.50888062 600.55664062]
[141.08259583 592.97564697]
[139.29135132 580.60736084]
[146.63520813 570.00402832]
[144.85275269 555.11029053]
[143.07028198 540.21655273]
[141.28781128 525.32287598]
[132.09294128 513.60516357]
[138.13552856 498.98336792]
[136.35305786 484.08966064]
[134.57060242 469.19592285]
[132.78813171 454.30221558]
[131.00566101 439.40850830]
[116.24591827 436.97393799]
[102.75660706 430.47241211]
[91.63465118 420.42312622]
[83.78713226 407.63418579]
[79.85731506 393.13754272]
[80.17193604 378.10580444]
[84.71403503 363.75738525]
[93.12367249 351.25765991]
[104.72639465 341.62442017]
[118.58734894 335.64495850]
[116.80487823 320.75125122]
[115.02241516 305.85751343]
[100.58412170 304.51751709]
[86.73651886 300.19552612]
[74.08872223 293.07897949]
[63.19763184 283.47833252]
[54.54340363 271.81347656]
[48.50827408 258.59536743]
[45.35969162 244.40368652]
[45.23844910 229.86137390]
[48.15240479 215.60726929]
[53.97602463 202.26812744]
[62.45576859 190.43099976]
[73.22116089 180.61738586]
[85.80093384 173.26029968]
[99.64371490 168.68515015]
[98.08319092 153.76654053]
[96.52267456 138.84794617]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.38268280 49.42300415]
[72.36234283 43.30932236]
[63.34411621 31.07950401]
[61.66937637 16.07744980]
[67.68836975 2.34327126]
[79.69290161 -6.47471333]
[70.37053680 -19.25767326]
[76.54061890 -32.81419754]
[74.75814819 -47.70791626]
[72.97568512 -62.60163116]
[62.87737274 -51.51000977]
[47.90091705 -50.66992188]
[36.62551117 -60.56260681]
[35.51021957 -75.52108765]
[45.19393158 -86.97646332]
[60.12937927 -88.36657715]
[71.76040649 -78.89594269]
[71.31379700 -93.88929749]
[70.86719513 -108.88264465]
[70.42058563 -123.87599182]
[69.97397614 -138.86933899]
[69.52737427 -153.86270142]
[68.52311707 -168.82904053]
[66.96259308 -183.74765015]
[65.40206909 -198.66624451]
[63.84154510 -213.58485413]
[62.28102112 -228.50346375]
[47.36104965 -230.70463562]
[33.45754242 -236.54788208]
[21.44449425 -245.66584778]
[12.07705212 -257.48541260]
[5.94405985 -271.26354980]
[3.43104362 -286.13418579]
[4.69597387 -301.16250610]
[9.65933609 -315.40383911]
[18.00912857 -327.96298218]
[29.22047615 -338.05041504]
[42.58862686 -345.03207397]
[57.27324295 -348.46905518]
[72.35124207 -348.14532471]
[86.87480164 -344.08120728]
[99.93096924 -336.53219604]
[110.69901276 -325.97283936]
[118.50204468 -313.06689453]
[122.84957123 -298.62564087]
[123.46829224 -283.55688477]
[120.31931305 -268.80780029]
[113.60058594 -255.30560303]
[103.73445892 -243.89901733]
[91.34111786 -235.30506897]
[77.19962311 -230.06398010]
[78.76014709 -215.14537048]
[80.32067108 -200.22677612]
[81.88119507 -185.30816650]
[83.44171906 -170.38955688]
[94.77111816 -180.22036743]
[109.54792786 -177.64242554]
[116.87924194 -164.55610657]
[111.36067963 -150.60813904]
[97.06032562 -146.08047485]
[84.52072144 -154.30929565]
[84.96733093 -139.31594849]
[85.41393280 -124.32260132]
[85.86054230 -109.32925415]
[86.30714417 -94.33589935]
[86.75375366 -79.34255219]
[87.86940002 -64.38409424]
[89.65187073 -49.49037933]
[91.43433380 -34.59666443]
[100.62920380 -22.87900162]
[94.58661652 -8.25717926]
[108.33296967 -2.52103591]
[117.42295074 9.40491486]
[119.33566284 24.37848854]
[113.45809937 38.39101791]
[101.27640533 47.64053726]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.44127655 137.28741455]
[113.00180054 152.20602417]
[114.56232452 167.12461853]
[129.99235535 168.94931030]
[144.62579346 174.15138245]
[157.73345947 182.46833801]
[168.66293335 193.48255920]
[176.87103271 206.64224243]
[181.95080566 221.28907776]
[183.65167236 236.69120789]
[181.89186096 252.07968140]
[176.76225281 266.68698120]
[168.52171326 279.78524780]
[157.58407593 290.72250366]
[144.49732971 298.95516968]
[129.91613770 304.07504272]
[131.69859314 318.96878052]
[133.48106384 333.86248779]
[148.36158752 336.40219116]
[161.90985107 343.02539062]
[173.03164673 353.18762207]
[180.83139038 366.05899048]
[184.68429565 380.59194946]
[184.28634644 395.60653687]
[179.67837524 409.88613892]
[171.24192810 422.27615356]
[159.66778564 431.77725220]
[145.89938354 437.62603760]
[147.68185425 452.51974487]
[149.46430969 467.41348267]
[151.24678040 482.30718994]
[153.02925110 497.20089722]
[162.35160828 509.98385620]
[156.18153381 523.54040527]
[157.96400452 538.43408203]
[159.74645996 553.32781982]
[161.52893066 568.22155762]
[172.90489197 582.70147705]
[165.37442017 598.55261230]
[167.37843323 613.41815186]
[169.38244629 628.28369141]
[171.38645935 643.14923096]
[173.39047241 658.01477051]
[175.39448547 672.88031006]
[190.42124939 673.48645020]
[205.11442566 676.69293213]
[219.02749634 682.40234375]
[231.73767090 690.44116211]
[242.85870361 700.56512451]
[252.05262756 712.46649170]
[259.04003906 725.78369141]
[263.60861206 740.11193848]
[265.61953735 755.01586914]
[265.01165771 770.04260254]
[261.80349731 784.73541260]
[256.09249878 798.64782715]
[248.05224609 811.35705566]
[237.92704773 822.47692871]
[226.02462769 831.66949463]
[212.70666504 838.65545654]
[198.37788391 843.22241211]
[183.47370911 845.23162842]
[168.44708252 844.62207031]
[153.75463867 841.41217041]
[139.84284973 835.69964600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[21 182]
[22 181]
[23 180]
[24 179]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[40 163]
[41 162]
[42 161]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 142]
[62 141]
[63 140]
[64 139]
[69 134]
[71 132]
[72 131]
[73 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
