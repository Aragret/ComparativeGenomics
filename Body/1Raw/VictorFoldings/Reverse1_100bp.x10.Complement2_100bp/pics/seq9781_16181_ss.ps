%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[130.82757568 536.71813965]
[125.41744232 522.68597412]
[122.52634430 507.92749023]
[122.24214172 492.89120483]
[124.57346344 478.03399658]
[129.44947815 463.80743408]
[136.72200012 450.64376831]
[146.17002869 438.94308472]
[157.50643921 429.06094360]
[170.38674927 421.29763794]
[184.41952515 415.88909912]
[181.53424072 401.16921997]
[178.64897156 386.44931030]
[175.76370239 371.72943115]
[172.55043030 357.07763672]
[169.01075745 342.50125122]
[165.47108459 327.92489624]
[160.83795166 322.16677856]
[161.98893738 313.10516357]
[149.28813171 305.40936279]
[145.71051025 290.62237549]
[153.86868286 277.35278320]
[150.54641724 262.72531128]
[147.22416687 248.09785461]
[143.90190125 233.47039795]
[139.50090027 219.13053894]
[134.04554749 205.15774536]
[128.59019470 191.18495178]
[123.13483429 177.21215820]
[117.67948151 163.23934937]
[112.12025452 149.30755615]
[106.45746613 135.41752625]
[100.79467773 121.52750397]
[95.13189697 107.63747406]
[91.82511902 105.65312958]
[89.40906525 102.22084808]
[88.51079559 97.77111816]
[89.54170227 92.99858093]
[84.50479126 78.86955261]
[79.46787262 64.74052429]
[74.43095398 50.61149216]
[69.39404297 36.48246384]
[64.14732361 22.42999268]
[58.69196320 8.45719433]
[54.28916168 22.79648781]
[42.90188980 32.56019974]
[28.05862427 34.72293854]
[14.35870934 28.61455917]
[6.04721308 16.12780380]
[5.69954300 1.13183403]
[13.42342854 -11.72668839]
[26.82554054 -18.46340942]
[41.75308609 -16.99088287]
[53.58075714 -7.76517725]
[50.04108810 -22.34155273]
[46.50141525 -36.91792679]
[30.59908295 -39.28946304]
[16.85736275 -47.56204605]
[7.36519575 -60.44359970]
[3.55225778 -75.94409180]
[5.97368240 -91.68295288]
[14.22945595 -105.25466156]
[27.03014183 -114.59642029]
[23.27384186 -129.11848450]
[19.51753998 -143.64053345]
[15.16335297 -148.61573792]
[14.13042068 -154.20411682]
[15.87246704 -158.65095520]
[12.55020809 -173.27841187]
[9.22794819 -187.90586853]
[5.90568876 -202.53334045]
[-4.69596481 -214.27708435]
[0.03028514 -228.40194702]
[-3.29197431 -243.02940369]
[-13.89362812 -254.77314758]
[-9.16737843 -268.89801025]
[-12.48963737 -283.52548218]
[-27.47195244 -282.36441040]
[-42.46365356 -283.39721680]
[-57.14519501 -286.60195923]
[-71.20362854 -291.91024780]
[-84.33931732 -299.20901489]
[-96.27225494 -308.34262085]
[-106.74809265 -319.11642456]
[-115.54354858 -331.30075073]
[-122.47113800 -344.63589478]
[-127.38319397 -358.83764648]
[-130.17503357 -373.60327148]
[-130.78712463 -388.61801147]
[-129.20643616 -403.56188965]
[-125.46666718 -418.11633301]
[-119.64751434 -431.97113037]
[-111.87302399 -444.83096313]
[-102.30890656 -456.42172241]
[-91.15901947 -466.49633789]
[-78.66102600 -474.84005737]
[-65.08132172 -481.27508545]
[-50.70935440 -485.66421509]
[-35.85147095 -487.91390991]
[-20.82436180 -487.97622681]
[-5.94833374 -485.84979248]
[8.45952988 -481.57998657]
[22.09212494 -475.25778198]
[34.65887070 -467.01794434]
[45.89191055 -457.03613281]
[55.55180740 -445.52508545]
[63.43265915 -432.73016357]
[69.36648560 -418.92410278]
[73.22681427 -404.40115356]
[74.93135071 -389.47091675]
[74.44377136 -374.45156860]
[71.77446747 -359.66333008]
[66.98032379 -345.42132568]
[60.16354370 -332.02920532]
[51.46942139 -319.77236938]
[41.08327103 -308.91207886]
[29.22647667 -299.67984009]
[16.15176392 -292.27243042]
[2.13782263 -286.84771729]
[5.46008205 -272.22027588]
[15.82410526 -261.52279663]
[11.33548546 -246.35166931]
[14.65774536 -231.72419739]
[25.02176857 -221.02671814]
[20.53314972 -205.85559082]
[23.85540771 -191.22813416]
[27.17766762 -176.60067749]
[30.49992752 -161.97320557]
[34.03960037 -147.39683533]
[37.79590225 -132.87477112]
[41.55220032 -118.35272217]
[55.51347733 -116.93071747]
[68.17774200 -110.81558228]
[78.01489258 -100.72350311]
[83.82866669 -87.85252380]
[84.90214539 -73.74031067]
[81.08603668 -60.08050156]
[72.81909943 -48.51940155]
[61.07778931 -40.45759964]
[64.61746216 -25.88122559]
[68.15713501 -11.30484962]
[72.66476440 3.00183702]
[78.12011719 16.97463417]
[82.05680084 19.67862511]
[84.33665466 24.88432693]
[83.52307129 31.44554710]
[88.55998230 45.57457733]
[93.59690094 59.70360565]
[98.63381958 73.83263397]
[103.67073822 87.96166229]
[109.02191925 101.97468567]
[114.68470764 115.86471558]
[120.34749603 129.75474548]
[126.01027679 143.64477539]
[132.14785767 150.40997314]
[131.65228271 157.78399658]
[137.10763550 171.75679016]
[142.56298828 185.72959900]
[148.01834106 199.70239258]
[153.47370911 213.67518616]
[157.31221008 199.17463684]
[167.81639099 188.46659851]
[182.24049377 184.35012817]
[196.81408691 187.90126038]
[207.72766113 198.19172668]
[212.12843323 212.53164673]
[208.86607361 227.17257690]
[198.79333496 238.28742981]
[184.54321289 242.97079468]
[169.84065247 239.99847412]
[158.52935791 230.14813232]
[161.85162354 244.77558899]
[165.17388916 259.40304565]
[168.49613953 274.03051758]
[181.58592224 282.47418213]
[184.74679565 297.35580444]
[176.61639404 309.78289795]
[180.04745483 324.38522339]
[183.58712769 338.96157837]
[187.12680054 353.53796387]
[190.73106384 357.31372070]
[192.36335754 361.65988159]
[192.13665771 365.72970581]
[190.48359680 368.84414673]
[193.36886597 383.56405640]
[196.25413513 398.28393555]
[199.13940430 413.00381470]
[214.17561340 412.71450806]
[229.03359985 415.04077148]
[243.26184082 419.91195679]
[256.42794800 427.17999268]
[268.13183594 436.62402344]
[278.01785278 447.95709229]
[285.78552246 460.83474731]
[291.19885254 474.86569214]
[294.09329224 489.62350464]
[294.38092041 504.65972900]
[292.05294800 519.51745605]
[287.18017578 533.74511719]
[279.91064453 546.91046143]
[270.46527100 558.61328125]
[259.13110352 568.49798584]
[246.25254822 576.26422119]
[232.22100830 581.67596436]
[217.46284485 584.56872559]
[202.42658997 584.85461426]
[187.56913757 582.52496338]
[173.34199524 577.65057373]
[160.17752075 570.37951660]
[148.47576904 560.93286133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 187]
[12 186]
[13 185]
[14 184]
[15 180]
[16 179]
[17 178]
[19 177]
[22 174]
[23 173]
[24 172]
[25 171]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 154]
[32 153]
[33 152]
[34 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 143]
[44 142]
[54 141]
[55 140]
[56 139]
[63 131]
[64 130]
[65 129]
[68 128]
[69 127]
[70 126]
[71 125]
[73 123]
[74 122]
[76 120]
[77 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
