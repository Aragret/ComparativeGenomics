%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[90.40810394 571.51770020]
[89.07543182 556.52044678]
[90.89038086 541.57391357]
[95.77359772 527.33142090]
[103.51162720 514.41564941]
[113.76618958 503.39126587]
[126.08898926 494.74011230]
[139.94132996 488.84045410]
[137.05606079 474.12057495]
[134.17079163 459.40066528]
[131.28552246 444.68078613]
[128.40025330 429.96087646]
[125.51497650 415.24099731]
[122.62969971 400.52108765]
[112.58877563 389.51977539]
[117.52710724 374.48904419]
[114.64183807 359.76913452]
[111.75656128 345.04925537]
[108.87129211 330.32934570]
[95.29141998 327.49114990]
[83.78267670 319.66677856]
[76.10119629 308.01028442]
[73.43429565 294.26333618]
[76.21704102 280.49520874]
[84.06164551 268.79107666]
[95.81118011 260.93643188]
[93.14538574 246.17523193]
[90.47958374 231.41401672]
[85.49127960 245.56027222]
[75.78504944 256.99658203]
[62.63792801 264.21829224]
[47.77963638 266.27526855]
[33.16503906 262.89688110]
[20.71693993 254.52758789]
[12.07309914 242.26855469]
[8.37076473 227.73263550]
[10.09704018 212.83230591]
[17.02480507 199.52793884]
[28.24259377 189.56997681]
[42.27451324 184.26852417]
[57.27441788 184.32112122]
[71.26882172 189.72080994]
[82.41651154 199.75720215]
[89.25150299 213.11209106]
[89.92128754 198.12704468]
[90.47949982 183.13743591]
[90.92610931 168.14408875]
[91.37271118 153.15074158]
[91.81932068 138.15739441]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[92.48928833 33.16320801]
[81.14450073 42.97624588]
[66.17433167 42.03071594]
[56.15437698 30.86825562]
[56.82452011 15.88323212]
[67.80087280 5.65974760]
[82.79568481 6.05427742]
[93.21888733 16.83993530]
[94.55712128 1.89974976]
[95.89535522 -13.04043484]
[97.23358917 -27.98061943]
[98.57183075 -42.92080688]
[87.05351257 -53.14991379]
[83.80500031 -68.02608490]
[89.86730194 -81.79969788]
[102.72372437 -89.27301788]
[104.06195831 -104.21320343]
[105.40019226 -119.15338898]
[97.26697540 -135.67404175]
[107.91468811 -149.62371826]
[109.03033447 -164.58216858]
[110.14598846 -179.54061890]
[111.26163483 -194.49906921]
[112.37728119 -209.45751953]
[105.68782043 -223.79495239]
[114.35030365 -235.91149902]
[103.63265991 -241.35028076]
[95.40041351 -250.05934143]
[90.60085297 -261.00253296]
[89.77478790 -272.88870239]
[92.99569702 -284.32400513]
[99.86384583 -293.97528076]
[109.55574036 -300.72564697]
[120.92282104 -303.80355835]
[122.70529175 -318.69726562]
[124.48775482 -333.59097290]
[126.27021790 -348.48471069]
[128.05268860 -363.37841797]
[128.83401489 -378.35806274]
[128.61068726 -393.35638428]
[128.38735962 -408.35473633]
[128.16403198 -423.35305786]
[127.94069672 -438.35140991]
[113.92117310 -444.29891968]
[103.53752899 -455.43890381]
[98.58877563 -469.84133911]
[99.93232727 -485.01086426]
[107.33540344 -498.31930542]
[119.51537323 -507.46087646]
[134.36198425 -510.85174561]
[149.30297852 -507.90441895]
[161.74972534 -499.12954712]
[169.54576111 -486.04742432]
[171.34037781 -470.92462158]
[166.82263184 -456.38125610]
[156.77526855 -444.93701172]
[142.93904114 -438.57473755]
[143.16236877 -423.57638550]
[143.38569641 -408.57806396]
[143.60902405 -393.57971191]
[143.83235168 -378.58139038]
[152.97264099 -390.47485352]
[167.05575562 -395.63876343]
[181.71788025 -392.47299194]
[192.41580200 -381.95849609]
[195.83464050 -367.35330200]
[190.91503906 -353.18298340]
[179.18139648 -343.83840942]
[164.26948547 -342.21502686]
[150.79995728 -348.81591797]
[142.94641113 -361.59594727]
[141.16394043 -346.70223999]
[139.38146973 -331.80850220]
[137.59899902 -316.91479492]
[135.81654358 -302.02108765]
[150.80567932 -291.83795166]
[158.58703613 -275.37850952]
[156.92819214 -257.16262817]
[146.20233154 -242.24125671]
[129.30876160 -234.79585266]
[136.07801819 -221.52835083]
[127.33573914 -208.34187317]
[126.22008514 -193.38342285]
[125.10443878 -178.42497253]
[123.98879242 -163.46652222]
[122.87313843 -148.50805664]
[130.52656555 -139.14047241]
[129.71952820 -126.66921234]
[120.34037781 -117.81515503]
[119.00214386 -102.87496948]
[117.66390991 -87.93478394]
[128.98751831 -78.29559326]
[132.50547791 -63.66384888]
[126.66487885 -49.60181427]
[113.51200867 -41.58257294]
[112.17377472 -26.64238548]
[110.83554077 -11.70220089]
[109.49730682 3.23798394]
[108.15907288 18.17816925]
[107.48928833 33.16320801]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[110.15393066 132.01174927]
[106.81266785 138.60398865]
[106.36606598 153.59735107]
[105.91945648 168.59069824]
[105.47285461 183.58404541]
[108.34536743 192.25506592]
[104.90632629 198.79682922]
[104.23654175 213.78187561]
[105.24080658 228.74821472]
[107.90660095 243.50942993]
[110.57239532 258.27066040]
[126.28739166 262.48645020]
[138.54679871 273.09542847]
[144.92947388 287.93530273]
[144.20419312 304.01501465]
[136.56689453 318.11770630]
[123.59117889 327.44409180]
[126.47645569 342.16397095]
[129.36172485 356.88388062]
[132.24699402 371.60375977]
[142.49429321 383.65795898]
[137.34959412 397.63583374]
[140.23486328 412.35571289]
[143.12013245 427.07562256]
[146.00541687 441.79550171]
[148.89068604 456.51538086]
[151.77595520 471.23529053]
[154.66122437 485.95516968]
[169.71577454 486.18875122]
[184.39266968 489.54763794]
[198.05033875 495.88497925]
[210.09170532 504.92373657]
[219.99038696 516.26873779]
[227.31364441 529.42413330]
[231.74133301 543.81469727]
[233.07991028 558.81146240]
[231.27084351 573.75872803]
[226.39321899 588.00311279]
[218.66027832 600.92193604]
[208.41006470 611.95037842]
[196.09065247 620.60632324]
[182.24063110 626.51147461]
[167.46543884 629.40759277]
[152.41099548 629.16809082]
[137.73541260 625.80340576]
[124.08023834 619.46069336]
[112.04242706 610.41723633]
[102.14821625 599.06829834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[16 182]
[17 181]
[18 180]
[19 179]
[26 173]
[27 172]
[28 171]
[44 170]
[45 169]
[46 167]
[47 166]
[48 165]
[49 164]
[50 162]
[51 161]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[71 146]
[72 145]
[73 144]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[81 135]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
