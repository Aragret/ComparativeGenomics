%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[13.01072979 359.02056885]
[14.72360039 373.93798828]
[14.78500652 388.95330811]
[13.19420433 403.88421631]
[9.97050190 418.54953003]
[5.15303469 432.77117920]
[-1.19971919 446.37652588]
[-9.01064301 459.20043945]
[-18.18491745 471.08721924]
[-28.61117935 481.89260864]
[-40.16285706 491.48541260]
[-52.69972992 499.74920654]
[-66.06961060 506.58361816]
[-80.11019897 511.90576172]
[-94.65105438 515.65100098]
[-109.51567078 517.77380371]
[-124.52359772 518.24853516]
[-139.49264526 517.06933594]
[-154.24113464 514.25054932]
[-168.58999634 509.82635498]
[-182.36506653 503.85052490]
[-195.39912415 496.39553833]
[-207.53395081 487.55194092]
[-218.62223816 477.42709351]
[-228.52937317 466.14382935]
[-237.13511658 453.83917236]
[-244.33499146 440.66250610]
[-250.04159546 426.77374268]
[-254.18565369 412.34146118]
[-256.71685791 397.54092407]
[-257.60449219 382.55175781]
[-256.83779907 367.55590820]
[-254.42604065 352.73544312]
[-250.39851379 338.27023315]
[-244.80412292 324.33587646]
[-237.71076965 311.10156250]
[-229.20454407 298.72790527]
[-219.38873291 287.36511230]
[-208.38246155 277.15112305]
[-196.31936646 268.20993042]
[-183.34585571 260.65008545]
[-169.61944580 254.56333923]
[-155.30673218 250.02357483]
[-140.58146667 247.08592224]
[-125.62240601 245.78602600]
[-110.61113739 246.13966370]
[-95.72988892 248.14254761]
[-81.15929413 251.77035522]
[-67.07624054 256.97906494]
[-53.65166855 263.70544434]
[-41.04854965 271.86782837]
[-31.55965233 260.25057983]
[-22.07075500 248.63331604]
[-12.58185577 237.01605225]
[-3.09295774 225.39878845]
[6.39594078 213.78152466]
[15.79809189 202.09393311]
[25.11297417 190.33668518]
[34.16297531 178.37434387]
[35.34006119 163.52633667]
[49.69144058 156.86686707]
[50.86852646 142.01884460]
[65.21990204 135.35937500]
[74.00050354 123.19791412]
[75.17758942 108.34989166]
[89.52896881 101.69042969]
[97.75777435 89.14902496]
[105.41837311 76.25270081]
[113.07897186 63.35637283]
[120.73957062 50.46004486]
[128.40016174 37.56371689]
[135.37861633 24.28587341]
[134.12667847 8.51427650]
[146.48010254 0.19308850]
[152.75747681 -13.43022728]
[159.03483582 -27.05354309]
[165.31219482 -40.67686081]
[171.58955383 -54.30017471]
[177.86691284 -67.92349243]
[184.14427185 -81.54680634]
[177.78695679 -97.84416199]
[185.04051208 -113.39089203]
[200.97381592 -118.77311707]
[207.04765320 -132.48838806]
[213.12149048 -146.20365906]
[205.33795166 -157.57939148]
[204.20077515 -171.20748901]
[209.90040588 -183.51942444]
[220.85105896 -191.34422302]
[234.13018799 -192.72503662]
[240.40754700 -206.34835815]
[239.15562439 -222.11994934]
[251.50904846 -230.44114685]
[257.78640747 -244.06445312]
[264.06375122 -257.68777466]
[270.34112549 -271.31109619]
[276.61846924 -284.93441772]
[282.89584351 -298.55770874]
[270.25695801 -306.68203735]
[258.87179565 -316.48632812]
[248.96199036 -327.77978516]
[240.72042847 -340.34252930]
[234.30754089 -353.93005371]
[229.84815979 -368.27789307]
[227.42909241 -383.10671997]
[227.09741211 -398.12789917]
[228.85957336 -413.04907227]
[232.68128967 -427.57974243]
[238.48817444 -441.43710327]
[246.16717529 -454.35140991]
[255.56883240 -466.07125854]
[266.51013184 -476.36853027]
[278.77810669 -485.04281616]
[292.13394165 -491.92523193]
[306.31765747 -496.88183594]
[321.05319214 -499.81613159]
[336.05371094 -500.67098999]
[351.02722168 -499.42977905]
[365.68222046 -496.11666870]
[379.73348999 -490.79614258]
[392.90750122 -483.57177734]
[404.94784546 -474.58419800]
[415.62008667 -464.00833130]
[424.71655273 -452.05004883]
[432.06015015 -438.94210815]
[437.50793457 -424.93969727]
[440.95388794 -410.31533813]
[442.33087158 -395.35372925]
[441.61215210 -380.34609985]
[438.81167603 -365.58453369]
[433.98397827 -351.35641479]
[427.22302246 -337.93865967]
[418.66043091 -325.59249878]
[408.46282959 -314.55822754]
[396.82876587 -305.05062866]
[383.98464966 -297.25476074]
[370.18057251 -291.32241821]
[355.68515015 -287.36901855]
[340.78060913 -285.47152710]
[325.75701904 -285.66690063]
[310.90686035 -287.95135498]
[296.51916504 -292.28036499]
[290.24179077 -278.65704346]
[283.96444702 -265.03372192]
[277.68707275 -251.41041565]
[271.40972900 -237.78709412]
[265.13235474 -224.16378784]
[266.83328247 -209.36662292]
[254.03086853 -200.07099915]
[247.75350952 -186.44767761]
[256.23187256 -172.39082336]
[254.64505005 -155.88496399]
[243.42126465 -143.45402527]
[226.83676147 -140.12982178]
[220.76292419 -126.41455078]
[214.68908691 -112.69928741]
[220.96675110 -101.44670868]
[219.59664917 -88.43882751]
[210.85615540 -78.44811249]
[197.76759338 -75.26944733]
[191.49023438 -61.64613342]
[185.21287537 -48.02281570]
[178.93550110 -34.39949799]
[172.65814209 -20.77618217]
[166.38078308 -7.15286684]
[160.10342407 6.47044897]
[161.80436707 21.26761436]
[149.00193787 30.56323242]
[163.04319763 25.28660202]
[177.23246765 30.15122795]
[185.08261108 42.93306732]
[183.00462341 57.78843689]
[171.94854736 67.92565918]
[156.96908569 68.71013641]
[144.91462708 59.78321457]
[141.29649353 45.22431564]
[133.63589478 58.12064362]
[125.97529602 71.01696777]
[118.31470490 83.91329956]
[110.65410614 96.80962372]
[125.41942596 94.16667175]
[137.80722046 102.62496185]
[140.72119141 117.33919525]
[132.49208069 129.88040161]
[117.83390045 133.06439209]
[105.14352417 125.06725311]
[101.69042969 110.47103119]
[99.88529205 126.18891907]
[86.16196442 131.97851562]
[77.38135529 144.13996887]
[75.57622528 159.85786438]
[61.85289383 165.64746094]
[60.04776001 181.36535645]
[46.32442856 187.15495300]
[45.79602051 192.34800720]
[43.55279922 196.41264343]
[40.31175613 198.88462830]
[36.87022400 199.65156555]
[27.55534363 211.40882874]
[24.67909241 220.07859802]
[18.01320457 223.27041626]
[8.52430534 234.88768005]
[-0.96459281 246.50494385]
[-10.45349121 258.12222290]
[-19.94239044 269.73947144]
[-29.43128777 281.35671997]
[-18.91699791 292.07647705]
[-9.64580727 303.88784790]
[-1.73025787 316.64743042]
[4.73356199 330.20037842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 206]
[52 205]
[53 204]
[54 203]
[55 202]
[56 201]
[57 199]
[58 198]
[59 194]
[61 192]
[63 190]
[64 189]
[66 187]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 168]
[74 166]
[75 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[83 156]
[84 155]
[85 154]
[90 150]
[91 149]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
