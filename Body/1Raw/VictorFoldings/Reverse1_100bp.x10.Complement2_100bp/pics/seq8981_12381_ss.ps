%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[112.76990509 473.00067139]
[122.36520386 461.24081421]
[135.56263733 453.74465942]
[133.33752441 438.91061401]
[131.11241150 424.07656860]
[121.57273102 412.63787842]
[127.17729950 397.84262085]
[124.95217896 383.00857544]
[122.72706604 368.17453003]
[113.18738556 356.73583984]
[118.79195404 341.94058228]
[116.56683350 327.10653687]
[113.96393585 324.72805786]
[112.38377380 320.97064209]
[112.46189117 316.32873535]
[114.58898163 311.56192017]
[113.02845764 296.64331055]
[111.46793365 281.72470093]
[102.44853973 269.87145996]
[108.70815277 255.34121704]
[95.74188995 248.06013489]
[89.47518921 234.37831116]
[92.50186157 219.45541382]
[103.86660004 209.05595398]
[102.30608368 194.13734436]
[100.74555969 179.21875000]
[89.04924774 170.06823730]
[87.25412750 154.96087646]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[75.92167664 62.95936966]
[74.21815491 45.88854980]
[85.16815948 33.12390518]
[83.38569641 18.23019028]
[81.60322571 3.33647227]
[79.82076263 -11.55724525]
[70.49839783 -24.34020424]
[76.66847992 -37.89672852]
[74.88600922 -52.79044724]
[73.10354614 -67.68416595]
[71.32107544 -82.57788086]
[69.53861237 -97.47159576]
[67.75614929 -112.36531830]
[65.97367859 -127.25903320]
[64.19121552 -142.15275574]
[54.59440613 -143.21810913]
[45.34099579 -145.95745850]
[36.72043228 -150.28312683]
[29.00200844 -156.05784607]
[22.42647362 -163.09915161]
[17.19849968 -171.18505859]
[13.48032188 -180.06115723]
[11.38671017 -189.44853210]
[10.98141670 -199.05259705]
[12.27524090 -208.57229614]
[15.22575474 -217.70956421]
[19.73868179 -226.17863464]
[25.67091942 -233.71498108]
[32.83506393 -240.08363342]
[41.00534821 -245.08639526]
[49.92472839 -248.56816101]
[59.31299973 -250.42153931]
[59.75960541 -265.41488647]
[60.20621109 -280.40823364]
[60.65281677 -295.40158081]
[61.09942245 -310.39495850]
[61.54602814 -325.38830566]
[58.67351532 -334.05929565]
[62.11254883 -340.60107422]
[62.78233719 -355.58612061]
[63.45212173 -370.57116699]
[64.12190247 -385.55621338]
[64.79169464 -400.54122925]
[52.12932587 -392.49981689]
[37.89841461 -397.24124146]
[32.58945465 -411.27032471]
[40.11601639 -424.24533081]
[54.92979431 -426.60159302]
[66.10998535 -416.60363770]
[67.89245605 -431.49737549]
[69.67491913 -446.39108276]
[67.61903381 -451.18905640]
[67.61003876 -455.83160400]
[69.24597168 -459.56506348]
[71.88398743 -461.90454102]
[74.32971954 -476.70382690]
[76.77544403 -491.50308228]
[79.22117615 -506.30236816]
[77.54856110 -510.30938721]
[77.26641846 -514.24450684]
[78.18139648 -517.67932129]
[79.98089600 -520.29248047]
[82.27825928 -521.89880371]
[85.60051727 -536.52624512]
[88.92277527 -551.15368652]
[92.24503326 -565.78118896]
[78.71209717 -572.41113281]
[67.07330322 -581.98376465]
[57.95631790 -593.98278809]
[51.85280609 -607.76116943]
[49.09191895 -622.57586670]
[49.82255173 -637.62786865]
[54.00530243 -652.10546875]
[61.41460037 -665.22790527]
[71.65087128 -676.28759766]
[84.16208649 -684.68792725]
[98.27352905 -689.97601318]
[113.22418976 -691.86663818]
[128.20779419 -690.25787354]
[142.41630554 -685.23638916]
[155.08346558 -677.07305908]
[165.52615356 -666.20812988]
[173.18121338 -653.22747803]
[177.63580322 -638.83123779]
[178.64971924 -623.79565430]
[176.16825867 -608.93164062]
[170.32524109 -595.04077148]
[161.43579102 -582.87219238]
[149.97929382 -573.08209229]
[136.57359314 -566.19848633]
[121.94162750 -562.59265137]
[106.87249756 -562.45892334]
[103.55023193 -547.83142090]
[100.22797394 -533.20397949]
[96.90571594 -518.57653809]
[94.02044678 -503.85662842]
[91.57471466 -489.05737305]
[89.12899017 -474.25808716]
[86.68325806 -459.45883179]
[84.56863403 -444.60861206]
[82.78617096 -429.71490479]
[81.00370789 -414.82119751]
[79.77673340 -399.87145996]
[79.10694122 -384.88641357]
[78.43715668 -369.90136719]
[77.76737213 -354.91635132]
[77.09758759 -339.93130493]
[76.53937531 -324.94168091]
[76.09277344 -309.94833374]
[75.64616394 -294.95498657]
[75.19956207 -279.96163940]
[74.75295258 -264.96829224]
[74.30635071 -249.97494507]
[93.82174683 -242.64051819]
[109.13336182 -228.44935608]
[117.95086670 -209.49472046]
[118.94422150 -188.58459473]
[111.94424438 -168.82566833]
[97.97093201 -153.16175842]
[79.08493042 -143.93521118]
[80.86740112 -129.04150391]
[82.64986420 -114.14778137]
[84.43232727 -99.25406647]
[86.21479797 -84.36034393]
[87.99726105 -69.46662903]
[89.77973175 -54.57291031]
[91.56219482 -39.67919540]
[100.75706482 -27.96153450]
[94.71447754 -13.33971119]
[96.49694061 1.55400634]
[98.27941132 16.44772339]
[100.06187439 31.34144020]
[111.20588684 37.80986023]
[116.67114258 49.69317245]
[114.25878906 62.74656296]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[123.84360504 151.13352966]
[125.21367645 166.28533936]
[115.66416168 177.65821838]
[117.22468567 192.57682800]
[118.78520966 207.49543762]
[132.05601501 215.31796265]
[138.10531616 229.29147339]
[134.80560303 243.97398376]
[123.62676239 253.78068542]
[132.75778198 266.70101929]
[126.38654327 280.16418457]
[127.94705963 295.08279419]
[129.50758362 310.00140381]
[131.40087891 324.88143921]
[133.62599182 339.71548462]
[143.32482910 352.21520996]
[137.56111145 365.94943237]
[139.78622437 380.78347778]
[142.01133728 395.61752319]
[151.71017456 408.11724854]
[145.94645691 421.85147095]
[148.17156982 436.68551636]
[150.39668274 451.51956177]
[165.21266174 454.81365967]
[177.83602905 463.24072266]
[186.55953979 475.66104126]
[190.20344543 490.39489746]
[188.27493286 505.44964600]
[181.03479004 518.78924561]
[169.46221924 528.60961914]
[155.12231445 533.58270264]
[139.95440674 533.03582764]
[126.00984192 527.04302979]
[115.17451477 516.41473389]
[108.91380310 502.58840942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[16 188]
[17 187]
[18 186]
[20 184]
[24 180]
[25 179]
[26 178]
[29 175]
[30 174]
[31 173]
[33 171]
[34 170]
[37 166]
[38 165]
[39 164]
[40 163]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[83 136]
[84 135]
[85 134]
[89 133]
[90 132]
[91 131]
[92 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
