%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[37.61499405 484.58956909]
[44.89309311 497.79156494]
[48.79957962 512.35186768]
[49.10733414 527.42401123]
[45.79846954 542.13165283]
[39.06535339 555.61975098]
[29.29944038 567.10406494]
[17.06851196 575.91699219]
[3.08365703 581.54614258]
[-11.84206486 583.66424561]
[-26.84089088 582.14813232]
[-41.04080963 577.08593750]
[-53.61625671 568.77197266]
[-63.83610916 557.68963623]
[-71.10620117 544.48321533]
[-75.00386047 529.92059326]
[-75.30248260 514.84826660]
[-71.98469543 500.14263916]
[-65.24340820 486.65863037]
[-55.47053146 475.18017578]
[-43.23426437 466.37466431]
[-29.24599838 460.75399780]
[-14.31899452 458.64498901]
[0.67890954 460.17019653]
[5.71582556 446.04116821]
[10.75274181 431.91213989]
[15.78965855 417.78311157]
[11.70243931 400.71670532]
[25.82863998 388.90435791]
[30.65463829 374.70190430]
[35.48063660 360.49945068]
[40.30663300 346.29699707]
[44.38629913 331.86242676]
[47.70856094 317.23498535]
[39.57815933 304.80789185]
[42.73902893 289.92623901]
[55.82881165 281.48260498]
[59.15107346 266.85513306]
[62.47333145 252.22767639]
[65.79559326 237.60021973]
[69.11785126 222.97274780]
[64.39160156 208.84788513]
[74.99325562 197.10414124]
[78.31551361 182.47668457]
[81.20079041 167.75679016]
[83.64651489 152.95751953]
[86.09223938 138.15824890]
[88.53797150 123.35898590]
[76.91046143 111.99556732]
[74.29770660 95.94876862]
[81.71978760 81.48368073]
[96.27893829 74.24783325]
[98.50405121 59.41379166]
[100.72917175 44.57975006]
[102.95428467 29.74570656]
[105.17940521 14.91166210]
[105.51438141 -0.08459722]
[96.38336945 -13.00493622]
[102.75460052 -26.46809387]
[90.76093292 -36.40739441]
[89.39086151 -51.55921173]
[98.94037628 -62.93208694]
[97.37985229 -77.85069275]
[95.81932831 -92.76929474]
[86.68831635 -105.68963623]
[93.05955505 -119.15279388]
[91.49903107 -134.07139587]
[82.36801910 -146.99174500]
[88.73925018 -160.45489502]
[87.17872620 -175.37350464]
[85.61820221 -190.29209900]
[84.05767822 -205.21070862]
[82.49716187 -220.12931824]
[80.93663788 -235.04791260]
[65.96968842 -236.65083313]
[51.66869736 -241.32891846]
[38.65801239 -248.87536621]
[27.50511551 -258.95822144]
[18.69587708 -271.13491821]
[12.61338711 -284.87182617]
[9.52128983 -299.56750488]
[9.55236244 -314.57907104]
[12.70281601 -329.25036621]
[18.83256340 -342.94061279]
[27.67144966 -355.05242920]
[38.83115768 -365.05776978]
[51.82226181 -372.52117920]
[66.07570648 -377.11846924]
[64.51518250 -392.03704834]
[62.95465851 -406.95565796]
[48.03468704 -409.15686035]
[34.13118362 -415.00009155]
[22.11813354 -424.11807251]
[12.75068951 -435.93762207]
[6.61769772 -449.71575928]
[4.10468149 -464.58639526]
[5.36961174 -479.61471558]
[10.33297348 -493.85604858]
[18.68276596 -506.41519165]
[29.89411545 -516.50262451]
[43.26226425 -523.48425293]
[57.94688034 -526.92126465]
[73.02487946 -526.59753418]
[87.54843903 -522.53338623]
[100.60460663 -514.98443604]
[111.37265015 -504.42504883]
[119.17568207 -491.51910400]
[123.52320862 -477.07785034]
[124.14192963 -462.00909424]
[120.99295044 -447.26000977]
[114.27422333 -433.75781250]
[104.40809631 -422.35122681]
[92.01475525 -413.75726318]
[77.87326813 -408.51617432]
[79.43378448 -393.59759521]
[80.99430847 -378.67898560]
[95.89057922 -377.13082886]
[110.14495087 -372.51739502]
[123.13360596 -365.03799438]
[134.28758240 -355.01751709]
[143.11772156 -342.89208984]
[149.23606873 -329.19033813]
[152.37297058 -314.51013184]
[152.38893127 -299.49270630]
[149.28083801 -284.79443359]
[143.18214417 -271.05831909]
[134.35722351 -258.88574219]
[123.18983459 -248.81021118]
[110.16649628 -241.27394104]
[95.85523987 -236.60844421]
[97.41576385 -221.68983459]
[98.97628784 -206.77124023]
[100.53681183 -191.85263062]
[102.09733582 -176.93402100]
[103.65785217 -162.01542664]
[112.67725372 -150.16215515]
[106.41763306 -135.63192749]
[107.97815704 -120.71331787]
[116.99755096 -108.86005402]
[110.73793793 -94.32981873]
[112.29846191 -79.41121674]
[113.85898590 -64.49260712]
[125.55529785 -55.34209824]
[127.35041046 -40.23474503]
[117.67321014 -28.02861786]
[126.69260406 -16.17535782]
[120.43298340 -1.64512026]
[126.14063263 -15.51677513]
[135.99357605 -26.82692719]
[148.95201111 -34.38199234]
[163.64839172 -37.38466263]
[178.53179932 -35.51805878]
[192.03153992 -28.97917175]
[202.72296143 -18.45806313]
[209.47775269 -5.06505156]
[211.58306885 9.78646660]
[208.81675720 24.52917671]
[201.47071838 37.60724258]
[190.32022095 47.64050674]
[176.54199219 53.57013321]
[161.59008789 54.77035904]
[147.04241943 51.11451721]
[134.43423462 42.98841476]
[125.09609222 31.24962616]
[120.01345062 17.13677979]
[117.78833008 31.97082329]
[115.56321716 46.80486679]
[113.33809662 61.63891220]
[111.11298370 76.47295380]
[121.24951935 84.98406982]
[125.88744354 97.38076782]
[123.82662964 110.45523071]
[115.60034180 120.82425690]
[103.33724213 125.80471039]
[100.89151001 140.60397339]
[98.44578552 155.40324402]
[96.00006104 170.20252991]
[97.67266846 174.20956421]
[97.95481110 178.14465332]
[97.03983307 181.57949829]
[95.24033356 184.19262695]
[92.94297791 185.79895020]
[89.62071228 200.42640686]
[94.10933685 215.59751892]
[83.74530792 226.29501343]
[80.42304993 240.92247009]
[77.10079193 255.54994202]
[73.77853394 270.17739868]
[70.45627594 284.80487061]
[78.61444092 298.07443237]
[75.03681946 312.86145020]
[62.33602142 320.55722046]
[59.01375961 335.18469238]
[71.65913391 327.11657715]
[86.54794312 328.93957520]
[96.87322998 339.82022095]
[97.91441345 354.78402710]
[89.19547272 366.98977661]
[74.70259094 370.85711670]
[61.06172180 364.61801147]
[54.50909042 351.12298584]
[49.68309021 365.32543945]
[44.85709381 379.52789307]
[40.03109741 393.73034668]
[45.02172089 405.62390137]
[40.70975113 417.35379028]
[29.91868782 422.82003784]
[24.88177109 436.94906616]
[19.84485435 451.07809448]
[14.80793953 465.20712280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[29 204]
[30 203]
[31 202]
[32 201]
[33 193]
[34 192]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[43 183]
[44 182]
[45 177]
[46 176]
[47 175]
[48 174]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 147]
[59 145]
[62 142]
[63 141]
[64 140]
[66 138]
[67 137]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
