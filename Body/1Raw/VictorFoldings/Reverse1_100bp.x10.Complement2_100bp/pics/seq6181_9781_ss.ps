%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[55.81009674 574.18322754]
[45.44984818 585.06347656]
[33.70453262 594.43151855]
[20.79295349 602.11303711]
[6.95564699 607.96472168]
[-7.54960680 611.87768555]
[-22.45258331 613.77905273]
[-37.47565079 613.63330078]
[-52.33893585 611.44317627]
[-66.76554108 607.24957275]
[-80.48672485 601.13049316]
[-93.24684906 593.19995117]
[-104.80820465 583.60577393]
[-114.95542145 572.52661133]
[-123.49945831 560.16888428]
[-130.28114319 546.76281738]
[-135.17413330 532.55816650]
[-138.08728027 517.81951904]
[-138.96630859 502.82150269]
[-137.79484558 487.84347534]
[-134.59472656 473.16445923]
[-129.42555237 459.05795288]
[-122.38362885 445.78674316]
[-113.60013580 433.59808350]
[-103.23870850 422.71896362]
[-91.49237823 413.35214233]
[-78.57997131 405.67208862]
[-64.74202728 399.82186890]
[-50.23635483 395.91046143]
[-35.33317184 394.01074219]
[-20.31011963 394.15811157]
[-5.44707251 396.34979248]
[-1.26006126 381.94601440]
[2.92694998 367.54223633]
[7.11396122 353.13845825]
[11.30097198 338.73468018]
[15.48798370 324.33090210]
[19.67499542 309.92712402]
[14.12577248 299.17849731]
[17.49615860 287.14419556]
[28.50454521 280.42272949]
[32.90554428 266.08288574]
[37.30654144 251.74304199]
[41.70753860 237.40318298]
[46.10853577 223.06333923]
[41.26334000 206.19647217]
[54.84800339 193.76512146]
[59.03501511 179.36134338]
[63.22202301 164.95756531]
[51.34367752 174.11752319]
[36.49020386 176.20901489]
[22.54427147 170.68534851]
[13.15130997 158.99038696]
[10.76661777 144.18115234]
[16.01354790 130.12876892]
[27.52056694 120.50646973]
[42.27976608 117.82951355]
[56.43312454 122.79766083]
[66.28099060 134.11222839]
[69.24920654 148.81474304]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[115.03712463 44.12742996]
[117.04113770 29.26190186]
[119.04515076 14.39637375]
[121.04916382 -0.46915466]
[122.72071075 -15.37572861]
[124.05894470 -30.31591415]
[125.39717865 -45.25609970]
[126.73541260 -60.19628525]
[128.07363892 -75.13646698]
[129.41188049 -90.07665253]
[122.93662262 -104.51208496]
[131.77853394 -116.49831390]
[131.66687012 -131.49789429]
[130.10635376 -146.41650391]
[128.54582214 -161.33511353]
[126.98530579 -176.25370789]
[125.42478180 -191.17231750]
[123.86425781 -206.09092712]
[108.86534119 -207.21891785]
[94.30892944 -211.00714111]
[80.66294861 -217.33381653]
[68.36605835 -225.99559021]
[57.81356049 -236.71400452]
[49.34466171 -249.14451599]
[43.23160934 -262.88754272]
[39.67091370 -277.50128174]
[38.77703476 -292.51596069]
[40.57870483 -307.44891357]
[45.01801300 -321.82015991]
[51.95224762 -335.16766357]
[61.15850830 -347.06240845]
[72.34084320 -357.12197876]
[85.13980103 -365.02304077]
[99.14392853 -370.51156616]
[113.90306854 -373.41116333]
[128.94276428 -373.62860107]
[143.77955627 -371.15689087]
[157.93650818 -366.07550049]
[170.95852661 -358.54776001]
[182.42700195 -348.81564331]
[191.97328186 -337.19204712]
[199.29048157 -324.05056763]
[204.14338684 -309.81369019]
[206.37600708 -294.93902588]
[205.91656494 -279.90478516]
[202.77983093 -265.19421387]
[197.06663513 -251.28022766]
[188.96063232 -238.61009216]
[178.72239685 -227.59107971]
[166.68106079 -218.57743835]
[153.22367859 -211.85890198]
[138.78286743 -207.65144348]
[140.34338379 -192.73284912]
[141.90391541 -177.81423950]
[143.46443176 -162.89562988]
[145.02494812 -147.97702026]
[146.58547974 -133.05842590]
[153.06558228 -146.58647156]
[164.43484497 -156.37115479]
[178.77731323 -160.76359558]
[193.67605591 -159.02357483]
[206.62034607 -151.44432068]
[215.42886353 -139.30307007]
[218.61721802 -124.64583588]
[215.64811707 -109.94262695]
[207.02189636 -97.67118835]
[194.19223022 -89.89946747]
[179.32113647 -87.93714142]
[164.91467285 -92.11489868]
[153.40055847 -101.72870636]
[146.71871948 -115.16007996]
[153.28970337 -101.79327393]
[144.35206604 -88.73841858]
[143.01382446 -73.79823303]
[141.67559814 -58.85805130]
[140.33735657 -43.91786575]
[138.99913025 -28.97768021]
[137.66088867 -14.03749466]
[139.62899780 -11.11193752]
[140.27787781 -7.08775854]
[139.10658264 -2.59539080]
[135.91468811 1.53485894]
[133.91067505 16.40038681]
[131.90666199 31.26591492]
[129.90264893 46.13144302]
[138.45707703 33.80984497]
[150.10015869 24.35263062]
[163.91365051 18.50563812]
[178.80818176 16.72998619]
[193.60910034 19.16570663]
[207.14915466 25.62071228]
[218.36050415 35.58592987]
[226.35897827 48.27546692]
[230.51379395 62.68856812]
[230.49728394 77.68856049]
[226.31072998 92.09247589]
[218.28433228 104.76436615]
[207.05107117 114.70487976]
[193.49684143 121.13005066]
[178.69058228 123.53317261]
[163.80000305 121.72473145]
[149.99942017 115.84733582]
[138.37719727 106.36450195]
[129.84992981 94.02410126]
[125.09009552 79.79933167]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[82.87252808 155.09210205]
[77.62580872 169.14457703]
[73.43879700 183.54835510]
[69.25178528 197.95213318]
[74.76850891 209.61097717]
[70.98460388 221.52172852]
[60.44838333 227.46434021]
[56.04738617 241.80418396]
[51.64638901 256.14404297]
[47.24539185 270.48388672]
[42.84439087 284.82373047]
[47.38275909 302.66986084]
[34.07877731 314.11413574]
[29.89176559 328.51791382]
[25.70475388 342.92169189]
[21.51774406 357.32546997]
[17.33073235 371.72924805]
[13.14372063 386.13302612]
[8.95670986 400.53680420]
[22.67854881 406.65441895]
[35.43953323 414.58352661]
[47.00193024 424.17648315]
[57.15034485 435.25454712]
[65.69571686 447.61132812]
[72.47885132 461.01666260]
[77.37337494 475.22079468]
[80.28811646 489.95910645]
[81.16877747 504.95706177]
[79.99893951 519.93524170]
[76.80040741 534.61456299]
[71.63275909 548.72161865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[47 183]
[48 182]
[49 181]
[60 180]
[61 179]
[62 178]
[63 177]
[65 175]
[66 174]
[67 173]
[68 152]
[69 151]
[70 150]
[71 149]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[79 138]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
