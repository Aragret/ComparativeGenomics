%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[-61.39314651 346.47448730]
[-54.36987305 359.75051880]
[-49.03134918 373.78903198]
[-45.45849991 388.37719727]
[-43.70549393 403.29385376]
[-43.79890060 418.31286621]
[-45.73730850 433.20654297]
[-49.49132919 447.74914551]
[-55.00405502 461.72015381]
[-62.19191360 474.90783691]
[-70.94593811 487.11218262]
[-81.13342285 498.14825439]
[-92.59992218 507.84872437]
[-105.17160797 516.06652832]
[-118.65790558 522.67706299]
[-132.85435486 527.58020020]
[-147.54574585 530.70153809]
[-162.50936890 531.99371338]
[-177.51835632 531.43725586]
[-192.34519958 529.04052734]
[-206.76512146 524.83984375]
[-220.55950928 518.89892578]
[-233.51925659 511.30783081]
[-245.44789124 502.18164062]
[-256.16458130 491.65872192]
[-265.50683594 479.89855957]
[-273.33309937 467.07943726]
[-279.52465820 453.39572144]
[-283.98767090 439.05484009]
[-286.65447998 424.27416992]
[-287.48468018 409.27783203]
[-286.46563721 394.29312134]
[-283.61285400 379.54724121]
[-278.96954346 365.26370239]
[-272.60610962 351.65905762]
[-264.61901855 338.93954468]
[-255.12933350 327.29800415]
[-244.28094482 316.91088867]
[-232.23829651 307.93569946]
[-219.18395996 300.50845337]
[-205.31582642 294.74179077]
[-190.84413147 290.72311401]
[-175.98828125 288.51330566]
[-160.97346497 288.14593506]
[-146.02731323 289.62655640]
[-131.37640381 292.93267822]
[-117.24283600 298.01422119]
[-103.84088898 304.79412842]
[-91.37371063 313.16964722]
[-81.54312897 301.84005737]
[-71.71254730 290.51046753]
[-61.96658707 279.10800171]
[-52.30577469 267.63330078]
[-42.64496613 256.15859985]
[-32.98415375 244.68389893]
[-35.87131119 232.12628174]
[-30.92472458 220.01788330]
[-19.74290657 212.86404419]
[-6.28730440 213.46519470]
[3.54327655 202.13560486]
[6.04034424 187.45179749]
[20.92862320 182.09925842]
[30.67458725 170.69679260]
[32.95275879 155.97744751]
[47.75969696 150.40382385]
[57.42050552 138.92912292]
[67.08131409 127.45442963]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[121.27207184 62.74219894]
[130.58695984 50.98494720]
[139.90184021 39.22769547]
[136.13088989 18.54071426]
[148.67602539 2.03269458]
[169.03173828 0.17895389]
[177.63031006 -12.11188412]
[186.22886658 -24.40272141]
[187.79978943 -40.14574432]
[201.43539429 -46.13902283]
[208.31481934 -59.46845245]
[213.35173035 -73.59748077]
[218.38864136 -87.72650909]
[214.65167236 -105.75749969]
[228.45339966 -116.59629059]
[233.27940369 -130.79875183]
[238.10539246 -145.00120544]
[242.93139648 -159.20365906]
[247.75740051 -173.40611267]
[252.47752380 -187.64410400]
[257.09152222 -201.91683960]
[261.70553589 -216.18957520]
[266.31954956 -230.46229553]
[252.84545898 -237.11563110]
[240.48374939 -245.65997314]
[229.49789429 -255.91320801]
[220.12207031 -267.65679932]
[212.55610657 -280.64041138]
[206.96130371 -294.58731079]
[203.45689392 -309.20019531]
[202.11756897 -324.16763306]
[202.97189331 -339.17056274]
[206.00164795 -353.88922119]
[211.14224243 -368.00982666]
[218.28413391 -381.23147583]
[227.27507019 -393.27227783]
[237.92340088 -403.87561035]
[250.00218201 -412.81546021]
[263.25393677 -419.90127563]
[277.39620972 -424.98202515]
[292.12756348 -427.94940186]
[307.13397217 -428.74017334]
[322.09561157 -427.33746338]
[336.69354248 -423.77117920]
[350.61660767 -418.11734009]
[363.56805420 -410.49645996]
[375.27182007 -401.07098389]
[385.47842407 -390.04180908]
[393.97033691 -377.64401245]
[400.56652832 -364.14184570]
[405.12640381 -349.82315063]
[407.55279541 -334.99310303]
[407.79394531 -319.96780396]
[405.84472656 -305.06750488]
[401.74670410 -290.60983276]
[395.58721924 -276.90295410]
[387.49755859 -264.23904419]
[377.65014648 -252.88798523]
[366.25488281 -243.09176636]
[353.55465698 -235.05917358]
[339.82022095 -228.96144104]
[325.34423828 -224.92852783]
[310.43533325 -223.04641724]
[295.41128540 -223.35519409]
[280.59228516 -225.84829712]
[275.97827148 -211.57556152]
[271.36425781 -197.30282593]
[266.75027466 -183.03009033]
[267.68386841 -175.69863892]
[261.95983887 -168.58010864]
[257.13385010 -154.37765503]
[252.30786133 -140.17520142]
[247.48185730 -125.97274780]
[242.65585327 -111.77029419]
[247.71958923 -100.78461456]
[243.81521606 -88.91281891]
[232.51766968 -82.68959808]
[227.48075867 -68.56056213]
[222.44384766 -54.43153763]
[233.49574280 -64.57331085]
[247.11447144 -70.86061859]
[262.00198364 -72.69419098]
[276.73928833 -69.89926147]
[289.92175293 -62.74223328]
[300.29284668 -51.90525818]
[306.86413574 -38.42125320]
[309.00921631 -23.57542610]
[306.52368164 -8.78278828]
[299.64443970 4.54672098]
[289.02713013 15.14261818]
[275.68377686 21.99497032]
[260.88616943 24.45065308]
[246.04469299 22.27560997]
[232.57395935 15.67714882]
[221.75793457 5.28419352]
[214.62751770 -7.91266441]
[211.86231995 -22.65558624]
[213.72624207 -37.54045868]
[212.77035522 -22.67655945]
[198.51971436 -15.80415821]
[189.92114258 -3.51331997]
[181.32258606 8.77751827]
[185.70678711 17.04124451]
[186.78669739 26.39168930]
[184.37205505 35.54918671]
[178.75381470 43.24499893]
[170.66969299 48.39708328]
[161.20756531 50.26213074]
[151.65908813 48.54257965]
[142.34420776 60.29983139]
[133.02932739 72.05708313]
[132.67958069 76.82013702]
[129.33398438 81.41405487]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[78.55601501 137.11523438]
[68.89520264 148.58993530]
[59.23439407 160.06463623]
[56.26522064 175.60473633]
[42.14928818 180.35760498]
[39.01618195 188.93789673]
[32.25821686 191.92984009]
[29.05799866 207.42399597]
[14.87286949 211.96618652]
[5.04228878 223.29577637]
[6.59777403 240.71989441]
[-4.70709515 253.62394714]
[-21.50945473 254.34471130]
[-31.17026520 265.81942749]
[-40.83107376 277.29412842]
[-50.49188614 288.76882935]
[-53.62499237 297.34912109]
[-60.38295746 300.34103394]
[-70.21353912 311.67065430]
[-80.04412079 323.00024414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 210]
[50 209]
[51 208]
[52 206]
[53 205]
[54 204]
[55 203]
[59 200]
[60 199]
[62 197]
[63 195]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[71 187]
[72 186]
[73 183]
[74 182]
[75 181]
[78 174]
[79 173]
[80 172]
[82 170]
[83 151]
[84 150]
[85 149]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 140]
[93 139]
[94 138]
[95 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
