%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-19.12977791 530.50476074]
[-11.69760704 543.61425781]
[-7.48961401 558.08453369]
[-6.73273134 573.13525391]
[-9.46777630 587.95471191]
[-15.54725266 601.74371338]
[-24.64330101 613.75866699]
[-36.26538086 623.35156250]
[-49.78673172 630.00512695]
[-64.47816467 633.36053467]
[-79.54738617 633.23675537]
[-94.18173218 629.64056396]
[-107.59198761 622.76586914]
[-119.05496216 612.98339844]
[-127.95246887 600.82067871]
[-133.80467224 586.93371582]
[-136.29597473 572.07135010]
[-135.29203796 557.03509521]
[-130.84696960 542.63580322]
[-123.20050812 529.65014648]
[-112.76501465 518.77825928]
[-100.10326385 510.60656738]
[-85.89808655 505.57571411]
[-70.91554260 503.95700073]
[-55.96363831 505.83770752]
[-50.71691895 491.78524780]
[-53.51370239 477.15557861]
[-41.43811798 466.93350220]
[-36.19139862 452.88104248]
[-30.94468117 438.82855225]
[-25.69796181 424.77609253]
[-40.21994781 428.53268433]
[-52.30241394 419.64370728]
[-53.03862000 404.66177368]
[-41.88586044 394.63101196]
[-27.06553268 396.94573975]
[-19.50277328 409.89794922]
[-13.22541332 396.27465820]
[-14.00952053 391.56356812]
[-11.84248257 386.30990601]
[-6.55297756 382.34347534]
[0.12721729 368.91308594]
[6.80741215 355.48272705]
[13.48760700 342.05233765]
[20.16780090 328.62194824]
[26.84799576 315.19158936]
[32.51078415 301.30154419]
[37.12479019 287.02883911]
[41.73880005 272.75610352]
[46.13979721 258.41625977]
[50.32680893 244.01246643]
[54.51382065 229.60868835]
[58.70083237 215.20489502]
[62.88784409 200.80111694]
[67.07485199 186.39733887]
[71.26186371 171.99354553]
[75.44887543 157.58976746]
[79.63588715 143.18598938]
[67.29242706 134.78421021]
[58.14767075 122.98062897]
[53.09596252 108.92960358]
[52.63134003 94.00528717]
[56.79924011 79.66723633]
[65.19206238 67.31768036]
[76.98899841 58.16436386]
[91.03635406 53.10245514]
[105.96032715 52.62699890]
[110.14733887 38.22321701]
[106.56967926 22.81182861]
[117.55205536 12.75018311]
[113.97439575 -2.66120601]
[124.95676422 -12.72285175]
[123.75409698 -19.22401428]
[125.72005463 -24.55618477]
[129.48881531 -27.48969650]
[134.10282898 -41.76243210]
[138.71682739 -56.03516388]
[135.59960938 -71.54624176]
[146.87669373 -81.27644348]
[141.70954895 -93.09436798]
[145.84638977 -104.88716888]
[156.55487061 -110.51344299]
[161.38087463 -124.71589661]
[166.20687866 -138.91835022]
[153.60353088 -130.78472900]
[138.60414124 -130.64970398]
[125.85642242 -138.55511475]
[119.31038666 -152.05139160]
[120.99440002 -166.95655823]
[130.38665771 -178.65209961]
[144.57685852 -183.51400757]
[159.16801453 -180.03578186]
[169.63890076 -169.29518127]
[172.74497986 -154.62004089]
[179.42518616 -168.05041504]
[186.10537720 -181.48078918]
[192.78556824 -194.91116333]
[199.46575928 -208.34153748]
[206.14596558 -221.77191162]
[212.82615662 -235.20230103]
[200.48809814 -243.78077698]
[189.53062439 -254.06433105]
[180.18728638 -265.83377075]
[172.65725708 -278.83825684]
[167.10101318 -292.80056763]
[163.63699341 -307.42309570]
[162.33905029 -322.39416504]
[163.23483276 -337.39468384]
[166.30526733 -352.10491943]
[171.48487854 -366.21127319]
[178.66326904 -379.41311646]
[187.68745422 -391.42901611]
[198.36505127 -402.00286865]
[210.46850586 -410.90930176]
[223.73979187 -417.95846558]
[237.89605713 -423.00012207]
[252.63554382 -425.92675781]
[267.64407349 -426.67605591]
[282.60177612 -425.23199463]
[297.18978882 -421.62539673]
[311.09719849 -415.93310547]
[324.02752686 -408.27645874]
[335.70520020 -398.81866455]
[345.88128662 -387.76129150]
[354.33889771 -375.34008789]
[360.89773560 -361.81976318]
[365.41802979 -347.48849487]
[367.80340576 -332.65179443]
[368.00302124 -317.62588501]
[366.01266479 -302.73104858]
[361.87469482 -288.28475952]
[355.67733765 -274.59497070]
[347.55270386 -261.95343018]
[337.67395020 -250.62963867]
[326.25164795 -240.86495972]
[313.52929688 -232.86750793]
[299.77801514 -226.80775452]
[285.29098511 -222.81486511]
[270.37692261 -220.97395325]
[255.35375977 -221.32426453]
[240.54173279 -223.85832214]
[226.25653076 -228.52209473]
[219.57633972 -215.09172058]
[212.89613342 -201.66134644]
[206.21594238 -188.23097229]
[199.53575134 -174.80059814]
[192.85556030 -161.37022400]
[186.17535400 -147.93984985]
[180.40933228 -134.09236145]
[175.58332825 -119.88990021]
[170.75733948 -105.68744659]
[175.09819031 -88.68380737]
[161.14942932 -76.66242981]
[164.59666443 -62.17223358]
[152.98956299 -51.42115402]
[148.37556458 -37.14842224]
[143.76155090 -22.87568855]
[139.36054993 -8.53584099]
[143.23768616 5.84529352]
[131.95584106 16.93719482]
[135.83297729 31.31832886]
[124.55112457 42.41022873]
[120.36411285 56.81401062]
[132.70758057 65.21578979]
[141.85232544 77.01937103]
[146.90403748 91.07039642]
[147.36866760 105.99471283]
[143.20075989 120.33276367]
[134.80793762 132.68232727]
[123.01100159 141.83563232]
[108.96364594 146.89753723]
[94.03967285 147.37300110]
[89.85266113 161.77677917]
[85.66564941 176.18055725]
[81.47863770 190.58435059]
[77.29162598 204.98812866]
[73.10461426 219.39190674]
[68.91760254 233.79568481]
[64.73059082 248.19947815]
[60.54358292 262.60324097]
[61.74625015 269.10443115]
[59.78029251 274.43658447]
[56.01153564 277.37008667]
[51.39752579 291.64282227]
[46.78351593 305.91555786]
[58.92932510 297.11334229]
[73.83848572 295.46499634]
[87.61376953 301.40145874]
[96.65436554 313.37091064]
[98.59707642 328.24456787]
[92.93408203 342.13449097]
[81.14566803 351.40991211]
[66.31331635 353.64624023]
[52.31414795 348.25891113]
[42.80752563 336.65615845]
[40.27837372 321.87176514]
[33.59817886 335.30215454]
[26.91798210 348.73254395]
[20.23778725 362.16290283]
[13.55759335 375.59329224]
[6.87739849 389.02365112]
[0.39790282 402.55200195]
[-5.87945795 416.17532349]
[-11.64549160 430.02279663]
[-16.89221001 444.07528687]
[-22.13892746 458.12774658]
[-27.38564682 472.18020630]
[-24.96413994 487.81503296]
[-36.66444778 497.03195190]
[-41.91116714 511.08444214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[28 207]
[29 206]
[30 205]
[31 204]
[37 203]
[38 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 185]
[48 184]
[49 183]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[67 163]
[68 162]
[70 160]
[72 158]
[75 157]
[76 156]
[77 155]
[79 153]
[82 151]
[83 150]
[84 149]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
