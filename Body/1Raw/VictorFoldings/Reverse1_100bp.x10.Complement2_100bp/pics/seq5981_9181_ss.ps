%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[-23.13115311 475.62692261]
[-20.08241844 490.33206177]
[-18.79434586 505.29458618]
[-19.28502083 520.30444336]
[-21.54755402 535.15087891]
[-25.55018234 549.62554932]
[-31.23671722 563.52514648]
[-38.52732468 576.65466309]
[-47.31966019 588.82971191]
[-57.49029160 599.87933350]
[-68.89643860 609.64849854]
[-81.37797546 618.00000000]
[-94.75968170 624.81658936]
[-108.85369873 630.00262451]
[-123.46217346 633.48529053]
[-138.38002014 635.21563721]
[-153.39781189 635.16949463]
[-168.30473328 633.34735107]
[-182.89151001 629.77490234]
[-196.95336914 624.50231934]
[-210.29289246 617.60351562]
[-222.72282410 609.17535400]
[-234.06866455 599.33624268]
[-244.17114258 588.22424316]
[-252.88841248 575.99536133]
[-260.09811401 562.82128906]
[-265.69906616 548.88696289]
[-269.61257935 534.38793945]
[-271.78375244 519.52789307]
[-272.18209839 504.51528931]
[-270.80200195 489.56097412]
[-267.66287231 474.87484741]
[-262.80877686 460.66308594]
[-256.30783081 447.12521362]
[-248.25131226 434.45126343]
[-238.75231934 422.81918335]
[-227.94421387 412.39221191]
[-215.97871399 403.31680298]
[-203.02380371 395.72030640]
[-189.26135254 389.70941162]
[-174.88453674 385.36843872]
[-160.09523010 382.75839233]
[-145.10101318 381.91586304]
[-130.11239624 382.85272217]
[-115.33978271 385.55578613]
[-100.99058533 389.98712158]
[-87.26622009 396.08450317]
[-74.35935974 403.76235962]
[-65.22055817 391.86773682]
[-56.08175659 379.97308350]
[-46.94295502 368.07846069]
[-38.25313187 355.85198975]
[-30.02432251 343.31057739]
[-21.79551506 330.76916504]
[-13.56670666 318.22778320]
[-5.33789921 305.68637085]
[-5.28239393 288.13748169]
[11.23231983 279.99218750]
[19.27349281 267.32965088]
[26.44886017 254.15718079]
[24.74792480 239.36001587]
[37.55035019 230.06440735]
[43.82770920 216.44108582]
[50.10506821 202.81776428]
[56.38243103 189.19445801]
[54.68149567 174.39729309]
[67.48391724 165.10166931]
[73.76128387 151.47834778]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[92.82003784 68.05900574]
[106.45885468 57.01593018]
[111.07286835 42.74319458]
[115.68687439 28.47046280]
[120.30088043 14.19772911]
[123.07649231 -0.54323411]
[123.96931458 -15.51663971]
[124.86212921 -30.49004555]
[125.64344788 -45.46968460]
[118.53007507 -59.60157776]
[126.82796478 -71.97066498]
[127.49774933 -86.95570374]
[128.16752625 -101.94074249]
[128.83731079 -116.92578125]
[129.50709534 -131.91082764]
[129.84207153 -146.90708923]
[129.84207153 -161.90708923]
[126.87251282 -167.81413269]
[127.27194214 -173.48312378]
[130.07205200 -177.35202026]
[130.51866150 -192.34538269]
[130.96527100 -207.33872986]
[116.51057434 -211.66587830]
[103.66887665 -219.58757019]
[93.31573486 -230.56367493]
[86.15705109 -243.84584045]
[82.68091583 -258.52844238]
[83.12433624 -273.61041260]
[87.45706940 -288.06344604]
[95.38372040 -300.90206909]
[106.36382294 -311.25097656]
[119.64874268 -318.40451050]
[134.33268738 -321.87500000]
[149.41448975 -321.42575073]
[163.86582947 -317.08743286]
[176.70141602 -309.15582275]
[187.04606628 -298.17172241]
[194.19448853 -284.88406372]
[197.65928650 -270.19876099]
[197.20422363 -255.11714172]
[192.86033630 -240.66748047]
[184.92376709 -227.83496094]
[173.93568420 -217.49453735]
[160.64523315 -210.35124207]
[145.95861816 -206.89212036]
[145.51200867 -191.89877319]
[145.06539917 -176.90542603]
[144.84207153 -161.90708923]
[144.84207153 -146.90708923]
[147.06333923 -144.16877747]
[148.06864929 -140.21853638]
[147.30281067 -135.63958740]
[144.49214172 -131.24104309]
[143.82235718 -116.25599670]
[143.15257263 -101.27095795]
[142.48278809 -86.28591919]
[141.81300354 -71.30088043]
[148.97427368 -58.24081802]
[140.62849426 -44.79989624]
[143.47018433 -37.97739410]
[139.83552551 -29.59722900]
[138.94271851 -14.62382412]
[138.04989624 0.34958178]
[145.94291687 -12.40582085]
[157.50810242 -21.95811462]
[171.52497864 -27.29922295]
[186.51428223 -27.86548615]
[200.89418030 -23.59714699]
[213.14710999 -14.94464970]
[221.97999573 -2.82111573]
[226.46067810 11.49403000]
[226.11631775 26.49007607]
[220.98324585 40.58445358]
[211.60314941 52.28975296]
[198.96595764 60.37068176]
[184.40530396 63.97443771]
[169.45779419 62.72071457]
[155.70086670 56.74181747]
[144.58634949 46.66871643]
[137.28717041 33.56444550]
[134.57362366 18.81173706]
[129.95960999 33.08447266]
[125.34559631 47.35720444]
[120.73159027 61.62994003]
[125.95832825 72.53900909]
[122.23112488 84.46762085]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[106.93907928 135.66377258]
[121.55744934 139.02581787]
[130.69473267 150.92161560]
[130.17350769 165.91255188]
[120.23205566 177.14498901]
[105.41548157 179.48359680]
[92.49771881 171.85920715]
[87.38459778 157.75572205]
[81.10723877 171.37902832]
[82.35916901 187.15063477]
[70.00574493 195.47181702]
[63.72838593 209.09513855]
[57.45102692 222.71844482]
[51.17366409 236.34176636]
[52.42559814 252.11335754]
[40.07217407 260.43453979]
[53.45330429 253.65623474]
[68.38535309 255.08241272]
[80.24146271 264.27111816]
[85.34789276 278.37518311]
[82.12236023 293.02429199]
[71.56432343 303.67922974]
[56.94531631 307.03848267]
[42.79518890 302.06112671]
[33.49851608 290.28948975]
[31.93601799 275.37084961]
[23.89484596 288.03335571]
[25.93791008 300.76870728]
[18.97971344 311.14981079]
[7.20350122 313.91519165]
[-1.02530682 326.45657349]
[-9.25411510 338.99798584]
[-17.48292160 351.53939819]
[-25.71173096 364.08078003]
[-10.71838951 363.63388062]
[-0.90476823 374.97817993]
[-3.50510359 389.75106812]
[-16.60252571 397.06253052]
[-30.54210091 391.52282715]
[-35.04832077 377.21725464]
[-44.18712616 389.11190796]
[-53.32592773 401.00653076]
[-62.46472931 412.90115356]
[-51.72096252 423.39437866]
[-42.29370499 435.08468628]
[-34.31529999 447.80795288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 207]
[49 206]
[50 205]
[51 204]
[52 198]
[53 197]
[54 196]
[55 195]
[56 194]
[58 191]
[59 190]
[60 180]
[62 178]
[63 177]
[64 176]
[65 175]
[67 173]
[68 172]
[69 164]
[70 163]
[71 162]
[73 160]
[75 157]
[76 156]
[77 155]
[78 154]
[79 136]
[80 135]
[81 134]
[82 132]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 122]
[90 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
