%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[205.79653931 589.91119385]
[216.70755005 579.53021240]
[229.59530640 571.73791504]
[224.76931763 557.53546143]
[219.94331360 543.33300781]
[215.11730957 529.13055420]
[210.29132080 514.92810059]
[205.46531677 500.72567749]
[194.04463196 491.16445923]
[196.93055725 475.60867310]
[193.94639587 473.73062134]
[191.72361755 470.31384277]
[190.97554016 465.73196411]
[192.22160339 460.66299438]
[188.03459167 446.25921631]
[183.84757996 431.85543823]
[179.66056824 417.45166016]
[175.47355652 403.04788208]
[160.51437378 403.05242920]
[146.14550781 398.83734131]
[133.53387451 390.73596191]
[123.70614624 379.39767456]
[117.46526337 365.73577881]
[115.32477570 350.85391235]
[117.46660614 335.95687866]
[123.72563934 322.25326538]
[133.60241699 310.85714722]
[146.30293274 302.69769287]
[142.11592102 288.29388428]
[137.92890930 273.89010620]
[133.74189758 259.48632812]
[129.55488586 245.08255005]
[125.36787415 230.67877197]
[122.47054291 228.66934204]
[120.40255737 225.15672302]
[119.85980988 220.54600525]
[121.33097839 215.53773499]
[117.79130554 200.96136475]
[114.25163269 186.38497925]
[110.71195984 171.80860901]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.24803162 75.49746704]
[69.41928101 87.62401581]
[56.84569550 95.80355835]
[42.18154526 98.95994568]
[27.35615540 96.67788696]
[14.32005596 89.25763702]
[4.78837204 77.67545319]
[0.01516054 63.45516968]
[0.62841904 48.46771240]
[6.54746294 34.68493271]
[16.99353981 23.92020226]
[30.59229088 17.58979797]
[45.55456161 16.52659798]
[59.91181564 20.87048340]
[71.77510071 30.04994011]
[79.58444977 42.85947800]
[79.13784790 27.86612701]
[78.69123840 12.87277699]
[78.24463654 -2.12057304]
[77.79802704 -17.11392212]
[65.76882935 -8.15298939]
[51.22468185 -11.82283974]
[44.88699341 -25.41819572]
[51.42766953 -38.91706848]
[66.02516937 -42.36858749]
[77.91800690 -33.22989655]
[78.58779144 -48.21493912]
[79.25757599 -63.19997787]
[72.14420319 -77.33187103]
[80.44209290 -89.70095825]
[81.11187744 -104.68599701]
[73.99850464 -118.81789398]
[82.29638672 -131.18698120]
[82.96617126 -146.17202759]
[75.85279846 -160.30392456]
[84.15068817 -172.67300415]
[84.82047272 -187.65805054]
[70.04975128 -190.40974426]
[55.80575943 -195.19042969]
[42.36577225 -201.90704346]
[29.99139214 -210.42883301]
[18.92349815 -220.58993530]
[9.37752628 -232.19253540]
[1.53929245 -245.01081848]
[-4.43863058 -258.79525757]
[-8.43987942 -273.27752686]
[-10.38656998 -288.17572021]
[-10.24080944 -303.19985962]
[-8.00543308 -318.05749512]
[-3.72395539 -332.45941162]
[2.52028441 -346.12527466]
[10.60574055 -358.78906250]
[20.37502670 -370.20428467]
[31.63798141 -380.14871216]
[44.17536545 -388.42880249]
[57.74314117 -394.88339233]
[72.07720184 -399.38684082]
[86.89852905 -401.85144043]
[101.91863251 -402.22924805]
[116.84513092 -400.51290894]
[131.38748169 -396.73583984]
[145.26260376 -390.97155762]
[158.20042419 -383.33224487]
[169.94909668 -373.96664429]
[180.27993774 -363.05700684]
[188.99185181 -350.81573486]
[195.91526794 -337.48110962]
[200.91539001 -323.31265259]
[203.89492798 -308.58621216]
[204.79585266 -293.58837891]
[203.60064697 -278.61114502]
[200.33256531 -263.94604492]
[195.05522156 -249.87847900]
[187.87135315 -236.68234253]
[178.92079163 -224.61447144]
[168.37774658 -213.90979004]
[156.44746399 -204.77664185]
[143.36215210 -197.39282227]
[129.37652588 -191.90205383]
[114.76282501 -188.41120911]
[99.80551147 -186.98826599]
[99.13572693 -172.00321960]
[106.29700470 -158.94316101]
[97.95121002 -145.50224304]
[97.28142548 -130.51719666]
[104.44271088 -117.45713806]
[96.09691620 -104.01621246]
[95.42713165 -89.03117371]
[102.58840942 -75.97110748]
[94.24261475 -62.53018951]
[93.57283020 -47.54515076]
[92.90304565 -32.56011200]
[92.79138184 -17.56052971]
[93.23798370 -2.56717896]
[93.68459320 12.42617130]
[94.13119507 27.41952133]
[94.57780457 42.41287231]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[126.76464844 161.02723694]
[125.28833771 168.26893616]
[128.82800293 182.84532166]
[132.36767578 197.42169189]
[135.90734863 211.99806213]
[139.77165222 226.49176025]
[143.95866394 240.89553833]
[148.14567566 255.29931641]
[152.33268738 269.70309448]
[156.51969910 284.10687256]
[160.70671082 298.51068115]
[175.80220032 298.59014893]
[190.24906921 302.91567993]
[202.87896729 311.12850952]
[212.67300415 322.55590820]
[218.84391785 336.26617432]
[220.89939880 351.14474487]
[218.68135071 365.98458862]
[212.37797546 379.58432007]
[202.50785828 390.84542847]
[189.87734985 398.86087036]
[194.06436157 413.26464844]
[198.25137329 427.66842651]
[202.43838501 442.07220459]
[206.62539673 456.47598267]
[211.13301086 470.78268433]
[222.89889526 481.35974121]
[219.66777039 495.89965820]
[224.49377441 510.10211182]
[229.31977844 524.30456543]
[234.14576721 538.50701904]
[238.97177124 552.70947266]
[243.79776001 566.91192627]
[258.76492310 565.23913574]
[273.74169922 566.82336426]
[288.02764893 571.59057617]
[300.95452881 579.31774902]
[311.91778564 589.64355469]
[320.40460205 602.08489990]
[326.01806641 616.05999756]
[328.49560547 630.91516113]
[327.72134399 645.95556641]
[323.73150635 660.47784424]
[316.71270752 673.80261230]
[306.99319458 685.30676270]
[295.02761841 694.45220947]
[281.37557983 700.81115723]
[266.67562866 704.08618164]
[251.61534119 704.12420654]
[236.89907837 700.92333984]
[223.21514893 694.63330078]
[211.20358276 685.54833984]
[201.42617798 674.09338379]
[194.34024048 660.80413818]
[190.27720642 646.30224609]
[189.42709351 631.26586914]
[191.82968140 616.39843750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[10 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 153]
[42 152]
[43 151]
[44 150]
[46 148]
[47 147]
[48 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[74 140]
[75 139]
[76 138]
[78 136]
[79 135]
[81 133]
[82 132]
[84 130]
[85 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
