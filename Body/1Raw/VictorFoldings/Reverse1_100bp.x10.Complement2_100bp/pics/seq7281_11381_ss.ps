%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[69.97441864 612.20397949]
[56.91442108 604.79559326]
[44.73197937 596.01861572]
[33.56993103 585.97595215]
[23.55913925 574.78527832]
[14.81698132 562.57781982]
[7.44595194 549.49670410]
[1.53247309 535.69531250]
[-2.85412264 521.33551025]
[-5.66240501 506.58554077]
[-6.85944796 491.61843872]
[-6.43121672 476.60964966]
[-4.38273239 461.73513794]
[-0.73801243 447.16931152]
[4.46021080 433.08294678]
[11.15099144 419.64120483]
[19.25588226 407.00164795]
[28.67985916 395.31253052]
[39.31242752 384.71084595]
[51.02893066 375.32092285]
[63.69199753 367.25280762]
[77.15315247 360.60116577]
[91.25458527 355.44393921]
[105.83094788 351.84161377]
[103.82693481 336.97610474]
[101.82292175 322.11056519]
[99.81890869 307.24502563]
[97.81489563 292.37951660]
[95.81088257 277.51397705]
[93.80686951 262.64843750]
[90.61944580 259.09185791]
[89.63241577 253.49517822]
[91.97132874 247.31124878]
[90.41080475 232.39263916]
[88.85028076 217.47402954]
[80.80751038 230.13554382]
[67.24125671 236.53529358]
[52.35516357 234.69023132]
[40.76185226 225.17208862]
[36.05363464 210.93014526]
[39.68940735 196.37744141]
[50.54257965 186.02328491]
[65.25018311 183.07601929]
[79.25490570 188.44888306]
[88.21732330 200.47729492]
[80.15324402 191.46080017]
[80.40261841 178.96594238]
[89.37705231 169.70190430]
[90.04683685 154.71685791]
[90.71662140 139.73182678]
[91.38640594 124.74678802]
[92.05619049 109.76174927]
[92.39116669 94.76548767]
[92.39116669 79.76548767]
[92.39116669 64.76548767]
[92.39116669 49.76548767]
[92.39116669 34.76548767]
[92.39116669 19.76548767]
[92.39116669 4.76548815]
[83.83934021 -4.89003420]
[84.14814758 -17.38356781]
[92.60678864 -26.03099251]
[90.06290436 -30.58903503]
[89.57097626 -35.20545197]
[90.80961609 -39.08885193]
[93.18993378 -41.69009018]
[94.08274841 -56.66349792]
[94.97556305 -71.63690186]
[95.86837769 -86.61030579]
[96.76119995 -101.58371735]
[88.86817932 -88.82830811]
[77.30298615 -79.27601624]
[63.28612137 -73.93490601]
[48.29681396 -73.36864471]
[33.91692352 -77.63698578]
[21.66399193 -86.28948212]
[12.83110332 -98.41301727]
[8.35041237 -112.72816467]
[8.69477654 -127.72420502]
[13.82785511 -141.81858826]
[23.20794106 -153.52388000]
[35.84513474 -161.60481262]
[50.40579605 -165.20857239]
[65.35330963 -163.95484924]
[79.11022949 -157.97595215]
[90.22474670 -147.90284729]
[97.52393341 -134.79856873]
[100.23748016 -120.04586792]
[104.85148621 -134.31860352]
[109.46549988 -148.59133911]
[109.12754059 -157.71951294]
[114.25591278 -163.04132080]
[119.08190918 -177.24377441]
[123.90790558 -191.44622803]
[128.73390198 -205.64868164]
[133.55990601 -219.85113525]
[138.38589478 -234.05358887]
[143.21189880 -248.25604248]
[129.96539307 -255.36799622]
[118.07022095 -264.56335449]
[107.85091400 -275.59130859]
[99.58624268 -288.15097046]
[93.50169373 -301.89971924]
[89.76324463 -316.46249390]
[88.47288513 -331.44195557]
[89.66581726 -346.42950439]
[93.30949402 -361.01626587]
[99.30451965 -374.80429077]
[107.48734283 -387.41741943]
[117.63473511 -398.51159668]
[129.46986389 -407.78411865]
[142.66984558 -414.98205566]
[156.87458801 -419.90902710]
[171.69657898 -422.43060303]
[186.73146057 -422.47805786]
[201.56906128 -420.05001831]
[215.80462646 -415.21276855]
[229.04975891 -408.09826660]
[240.94316101 -398.90060425]
[251.16033936 -387.87069702]
[259.42257690 -375.30944824]
[265.50448608 -361.55950928]
[269.24014282 -346.99603271]
[270.52761841 -332.01632690]
[269.33178711 -317.02899170]
[265.68530273 -302.44293213]
[259.68762207 -288.65606689]
[251.50236511 -276.04452515]
[241.35282898 -264.95230103]
[229.51593018 -255.68206787]
[216.31454468 -248.48667908]
[202.10885620 -243.56243896]
[187.28637695 -241.04370117]
[172.25149536 -240.99916077]
[157.41435242 -243.43005371]
[152.58834839 -229.22760010]
[147.76235962 -215.02514648]
[142.93635559 -200.82267761]
[138.11036682 -186.62022400]
[133.28436279 -172.41777039]
[128.45837402 -158.21531677]
[123.73823547 -143.97732544]
[119.12422180 -129.70458984]
[114.51021576 -115.43186188]
[111.73460388 -100.69089508]
[110.84178925 -85.71749115]
[109.94897461 -70.74408722]
[109.05615234 -55.77067947]
[108.16333771 -40.79727554]
[107.60512543 -25.80766487]
[116.96585083 -10.96368504]
[107.39116669 4.76548815]
[107.39116669 19.76548767]
[107.39116669 34.76548767]
[107.39116669 49.76548767]
[107.39116669 64.76548767]
[107.39116669 79.76548767]
[107.39116669 94.76548767]
[109.70411682 97.85136414]
[110.64563751 101.94177246]
[109.79757690 106.40134430]
[107.04122925 110.43153381]
[106.37144470 125.41657257]
[105.70166016 140.40161133]
[105.03187561 155.38664246]
[104.36209106 170.37168884]
[113.22488403 186.51271057]
[103.21067810 200.92390442]
[103.76888275 215.91351318]
[105.32940674 230.83212280]
[106.88993073 245.75071716]
[108.67239380 260.64443970]
[110.67641449 275.50997925]
[112.68042755 290.37548828]
[114.68444061 305.24102783]
[116.68845367 320.10653687]
[118.69246674 334.97207642]
[120.69647980 349.83761597]
[135.70640564 349.45141602]
[150.67010498 350.69039917]
[165.41212463 353.53997803]
[179.75961304 357.96679688]
[193.54437256 363.91891479]
[206.60476685 371.32656860]
[218.78768921 380.10287476]
[229.95027161 390.14498901]
[239.96166992 401.33514404]
[248.70448303 413.54211426]
[256.07623291 426.62280273]
[261.99044800 440.42385864]
[266.37780762 454.78347778]
[269.18688965 469.53326416]
[270.38473511 484.50030518]
[269.95730591 499.50912476]
[267.90963745 514.38372803]
[264.26568604 528.94976807]
[259.06823730 543.03643799]
[252.37817383 556.47851562]
[244.27395630 569.11853027]
[234.85061646 580.80816650]
[224.21861267 591.41040039]
[212.50260925 600.80096436]
[199.83998108 608.86975098]
[186.37918091 615.52209473]
[172.27803040 620.68005371]
[157.70185852 624.28320312]
[142.82156372 626.28918457]
[127.81160736 626.67456055]
[112.84797668 625.43481445]
[98.10611725 622.58441162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[33 171]
[34 170]
[35 169]
[45 168]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[62 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[88 144]
[89 143]
[90 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
