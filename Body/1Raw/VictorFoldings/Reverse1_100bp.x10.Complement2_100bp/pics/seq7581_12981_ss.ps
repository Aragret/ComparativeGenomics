%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[41.79897308 787.11096191]
[26.97470665 789.92230225]
[11.92801285 788.80010986]
[-2.31520271 783.82080078]
[-14.78381348 775.32397461]
[-24.62768936 763.88891602]
[-31.17565918 750.29528809]
[-33.98126984 735.46997070]
[-32.85322952 720.42370605]
[-27.86845016 706.18243408]
[-19.36680603 693.71710205]
[-7.92794895 683.87762451]
[5.66819859 677.33489990]
[20.49462891 674.53503418]
[21.61027908 659.57653809]
[22.72592735 644.61810303]
[23.84157562 629.65966797]
[24.95722389 614.70117188]
[22.31992149 607.79711914]
[26.20246887 599.52886963]
[27.54070282 584.58868408]
[28.87893677 569.64849854]
[17.55533028 560.00933838]
[14.03737164 545.37756348]
[19.87796593 531.31555176]
[33.03083420 523.29632568]
[34.36906815 508.35610962]
[35.70730209 493.41592407]
[33.38677216 489.24169922]
[33.66382980 483.56539917]
[37.31429291 478.05310059]
[39.09675980 463.15936279]
[40.87922287 448.26565552]
[42.66168976 433.37194824]
[44.44415665 418.47821045]
[42.24893570 414.23675537]
[42.69487762 408.57122803]
[46.50784302 403.17004395]
[48.73295975 388.33599854]
[50.95807648 373.50195312]
[48.84158325 366.42083740]
[53.32833862 358.46426392]
[55.77406693 343.66500854]
[58.21979141 328.86572266]
[60.66551971 314.06646729]
[63.11124802 299.26718140]
[65.55697632 284.46792603]
[68.00270081 269.66864014]
[70.44843292 254.86938477]
[58.91137314 240.65628052]
[61.47103500 222.20741272]
[76.96410370 211.30424500]
[78.96811676 196.43872070]
[80.97212982 181.57318115]
[82.97615051 166.70765686]
[84.98016357 151.84213257]
[86.98417664 136.97660828]
[84.76248932 129.92778015]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[89.64981842 62.64536667]
[99.01812744 51.06590271]
[91.93454742 42.81171799]
[90.59072113 32.23937607]
[95.19081116 22.86987877]
[103.99919128 17.69055748]
[106.44492340 2.89128613]
[101.06125641 -11.98576832]
[110.77017975 -23.28116989]
[113.21591187 -38.08044052]
[115.66163635 -52.87971115]
[118.10736084 -67.67897797]
[120.55309296 -82.47825623]
[122.99881744 -97.27752686]
[125.44454193 -112.07679749]
[120.06088257 -126.95384979]
[129.76980591 -138.24925232]
[132.21553040 -153.04852295]
[134.66125488 -167.84779358]
[129.27760315 -182.72483826]
[138.98652649 -194.02024841]
[141.43225098 -208.81951904]
[143.87797546 -223.61878967]
[146.32369995 -238.41806030]
[144.63539124 -247.39511108]
[148.91758728 -253.41877747]
[151.58338928 -268.17999268]
[146.42181396 -283.13555908]
[156.29783630 -294.28515625]
[158.96362305 -309.04638672]
[161.62942505 -323.80758667]
[164.29522705 -338.56881714]
[150.18347168 -343.76782227]
[137.18901062 -351.33850098]
[125.70672607 -361.05078125]
[116.08554077 -372.60949707]
[108.61783600 -385.66339111]
[103.53055573 -399.81579590]
[100.97828674 -414.63662720]
[101.03858948 -429.67550659]
[103.70963287 -444.47537231]
[108.91024780 -458.58654785]
[116.48239899 -471.58013916]
[126.19596863 -483.06134033]
[137.75578308 -492.68121338]
[150.81053162 -500.14743042]
[164.96351624 -505.23309326]
[179.78463745 -507.78369141]
[194.82350159 -507.72167969]
[209.62307739 -505.04895020]
[223.73364258 -499.84674072]
[236.72639465 -492.27313232]
[248.20648193 -482.55825806]
[257.82504272 -470.99734497]
[265.28976440 -457.94174194]
[270.37384033 -443.78817749]
[272.92276001 -428.96676636]
[272.85903931 -413.92791748]
[270.18463135 -399.12863159]
[264.98083496 -385.01867676]
[257.40573120 -372.02679443]
[247.68955994 -360.54779053]
[236.12756348 -350.93054199]
[223.07112122 -343.46728516]
[208.91697693 -338.38482666]
[194.09527588 -335.83758545]
[179.05644226 -335.90301514]
[176.39064026 -321.14178467]
[173.72483826 -306.38058472]
[171.05905151 -291.61935425]
[176.41130066 -277.71963501]
[166.34460449 -265.51419067]
[163.67880249 -250.75299072]
[161.12297058 -235.97233582]
[158.67724609 -221.17306519]
[156.23152161 -206.37379456]
[153.78579712 -191.57452393]
[159.34439087 -177.75601196]
[149.46052551 -165.40206909]
[147.01480103 -150.60279846]
[144.56907654 -135.80352783]
[150.12767029 -121.98500824]
[140.24382019 -109.63106537]
[137.79809570 -94.83179474]
[135.35235596 -80.03252411]
[132.90663147 -65.23325348]
[130.46090698 -50.43398285]
[128.01518250 -35.63471222]
[125.56945038 -20.83544159]
[131.12805176 -7.01693058]
[121.24419403 5.33701372]
[118.79846191 20.13628387]
[126.91242218 37.68766022]
[113.88365936 53.06991577]
[119.85121918 66.71679688]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[101.84970093 138.98062134]
[99.84568787 153.84614563]
[97.84167480 168.71166992]
[95.83766174 183.57719421]
[93.83364868 198.44273376]
[91.82963562 213.30825806]
[100.73994446 221.17863464]
[104.70411682 232.25953674]
[102.84626007 243.75920105]
[95.74211121 252.83923340]
[85.24770355 257.31509399]
[82.80197144 272.11437988]
[80.35624695 286.91363525]
[77.91051483 301.71292114]
[75.46479034 316.51220703]
[73.01906586 331.31146240]
[70.57333374 346.11074829]
[68.12760925 360.91000366]
[65.79212189 375.72708130]
[63.56700516 390.56112671]
[61.34188843 405.39517212]
[59.33787537 420.26068115]
[57.55540848 435.15441895]
[55.77294159 450.04812622]
[53.99047470 464.94183350]
[52.20801163 479.83557129]
[50.64748764 494.75415039]
[49.30925369 509.69433594]
[47.97101974 524.63452148]
[59.48933029 534.86364746]
[62.73785019 549.73980713]
[56.67554092 563.51342773]
[43.81912231 570.98675537]
[42.48088837 585.92694092]
[41.14265442 600.86712646]
[39.91567612 615.81683350]
[38.80002975 630.77532959]
[37.68437958 645.73376465]
[36.56873322 660.69219971]
[35.45308304 675.65063477]
[49.70013809 680.61895752]
[62.17530823 689.10614014]
[72.02801514 700.53356934]
[78.58647919 714.12213135]
[81.40353394 728.94531250]
[80.28711700 743.99243164]
[75.31333160 758.23760986]
[66.82131958 770.70947266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[20 197]
[21 196]
[22 195]
[26 191]
[27 190]
[28 189]
[31 188]
[32 187]
[33 186]
[34 185]
[35 184]
[38 183]
[39 182]
[40 181]
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[59 162]
[60 161]
[61 159]
[62 158]
[64 156]
[68 154]
[69 153]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[79 143]
[80 142]
[81 141]
[83 139]
[84 138]
[85 137]
[86 136]
[88 135]
[89 134]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
