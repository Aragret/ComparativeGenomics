%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[54.77329636 721.51593018]
[42.06099319 729.51055908]
[28.50651169 735.97521973]
[14.29316044 740.82263184]
[-0.38684034 743.98712158]
[-15.33496094 745.42596436]
[-30.34904289 745.11968994]
[-45.22604370 743.07238770]
[-59.76475906 739.31176758]
[-73.76857758 733.88867188]
[-87.04811096 726.87652588]
[-99.42377472 718.37005615]
[-110.72818756 708.48437500]
[-120.80848694 697.35314941]
[-129.52833557 685.12695312]
[-136.76982117 671.97106934]
[-142.43498230 658.06341553]
[-146.44723511 643.59210205]
[-148.75231934 628.75286865]
[-149.31903076 613.74633789]
[-148.13973999 598.77551270]
[-145.23036194 584.04284668]
[-140.63026428 569.74755859]
[-134.40165710 556.08294678]
[-126.62877655 543.23388672]
[-117.41673279 531.37408447]
[-106.89011383 520.66394043]
[-95.19128418 511.24835205]
[-82.47844696 503.25457764]
[-68.92353058 496.79077148]
[-54.70985413 491.94433594]
[-40.02964401 488.78079224]
[-25.08142853 487.34295654]
[-10.06736469 487.65026855]
[4.80949640 489.69857788]
[8.56579685 475.17651367]
[12.32209778 460.65444946]
[16.07839775 446.13238525]
[11.77479362 431.87307739]
[22.72140312 420.45019531]
[26.47770309 405.92813110]
[29.58181381 391.25283813]
[32.02754211 376.45355225]
[18.49932289 382.93331909]
[4.93267298 376.53442383]
[1.32842088 361.97387695]
[10.34348679 349.98519897]
[25.33230019 349.40597534]
[35.24520874 360.66162109]
[38.78488159 346.08523560]
[42.32455444 331.50885010]
[45.86422729 316.93249512]
[49.40390015 302.35610962]
[52.83496094 287.75378418]
[56.15721893 273.12631226]
[59.47948074 258.49887085]
[62.80173874 243.87139893]
[56.71546555 227.41163635]
[69.33789825 214.00433350]
[72.44200897 199.32902527]
[75.54611969 184.65373230]
[69.21545410 168.28639221]
[81.63687134 154.69265747]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[91.50232697 54.58470535]
[103.54351807 41.81847000]
[106.20931244 27.05725479]
[108.65503693 12.25798321]
[110.88015747 -2.57606053]
[105.27558899 -17.37131119]
[114.81526947 -28.81001091]
[117.04038239 -43.64405441]
[101.91996765 -53.33615875]
[92.59149933 -68.62153625]
[90.89577484 -86.39489746]
[97.12844849 -103.06919098]
[109.98973083 -115.29954529]
[126.85517120 -120.65424347]
[128.41569519 -135.57284546]
[129.97621155 -150.49145508]
[131.53674316 -165.41006470]
[133.09725952 -180.32865906]
[121.73252869 -190.72813416]
[118.70584869 -205.65101624]
[124.97255707 -219.33283997]
[137.93881226 -226.61392212]
[139.38822937 -241.54373169]
[140.72647095 -256.48391724]
[142.06469727 -271.42410278]
[143.06896973 -286.39044189]
[143.73875427 -301.37548828]
[144.40853882 -316.36053467]
[130.17219543 -321.44165039]
[118.06702423 -330.49462891]
[109.16940308 -342.71444702]
[104.27050781 -357.01452637]
[103.80593872 -372.12332153]
[107.81701660 -386.69735718]
[115.94706726 -399.44073486]
[127.47317505 -409.22030640]
[141.37045288 -415.16650391]
[156.40315247 -416.75057983]
[171.23458862 -413.83166504]
[184.54594421 -406.66934204]
[195.15359497 -395.90045166]
[202.11431885 -382.48254395]
[204.80917358 -367.60876465]
[202.99851990 -352.60168457]
[196.84336853 -338.79568481]
[186.89103699 -327.41839600]
[174.02645874 -319.48150635]
[159.39356995 -315.69073486]
[158.72378540 -300.70568848]
[158.05400085 -285.72067261]
[160.15078735 -282.88589478]
[160.97869873 -278.89471436]
[160.00917053 -274.35452271]
[157.00488281 -270.08587646]
[155.66665649 -255.14567566]
[154.32841492 -240.20549011]
[156.86264038 -233.26290894]
[152.85742188 -225.05339050]
[164.03625488 -215.24668884]
[167.33598328 -200.56419373]
[161.28666687 -186.59066772]
[148.01586914 -178.76814270]
[146.45535278 -163.84953308]
[144.89482117 -148.93092346]
[143.33430481 -134.01232910]
[141.77377319 -119.09371948]
[152.81314087 -113.82201385]
[161.72065735 -105.40102386]
[167.62696838 -94.63199615]
[169.94934082 -82.54629517]
[168.44905090 -70.30665588]
[163.25590515 -59.09530640]
[154.85716248 -49.99979019]
[144.05175781 -43.90746307]
[131.87443542 -41.41893768]
[129.64930725 -26.58489418]
[135.41302490 -12.85067368]
[125.71420288 -0.35094327]
[123.48908234 14.48310089]
[125.55704498 18.78804779]
[124.94261932 24.43778419]
[120.97052765 29.72304916]
[118.30473328 44.48426819]
[124.94207001 54.59724045]
[122.84196472 66.91687012]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.35676575 157.57792664]
[102.89163971 168.69808960]
[100.18544769 180.89892578]
[90.22142029 187.75784302]
[87.11730957 202.43313599]
[84.01319885 217.10844421]
[90.38179016 228.32467651]
[87.49424744 240.48387146]
[77.42919922 247.19366455]
[74.10694122 261.82113647]
[70.78468323 276.44857788]
[67.46241760 291.07604980]
[68.61341095 300.13766479]
[63.98027420 305.89578247]
[60.44060135 320.47216797]
[56.90093231 335.04852295]
[53.36125946 349.62490845]
[49.82158661 364.20129395]
[46.82681274 378.89929199]
[44.38108444 393.69854736]
[57.17406082 385.86657715]
[71.78973389 389.24032593]
[79.85557556 401.88714600]
[76.75111389 416.56237793]
[64.25472260 424.85937500]
[49.52489853 422.02523804]
[40.99976349 409.68444824]
[37.24346161 424.20648193]
[41.27838898 439.50451660]
[30.60045815 449.88870239]
[26.84415627 464.41076660]
[23.08785629 478.93283081]
[19.33155632 493.45486450]
[33.33573532 498.87701416]
[46.61573792 505.88827515]
[58.99196625 514.39392090]
[70.29704285 524.27880859]
[80.37808228 535.40936279]
[89.09874725 547.63500977]
[96.34110260 560.79046631]
[102.00720215 574.69769287]
[106.02042389 589.16870117]
[108.32648468 604.00781250]
[108.89421082 619.01428223]
[107.71590424 633.98516846]
[104.80751801 648.71807861]
[100.20838165 663.01367188]
[93.98069000 676.67871094]
[86.20866394 689.52825928]
[76.99740601 701.38867188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 193]
[36 192]
[37 191]
[38 190]
[40 188]
[41 187]
[42 180]
[43 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 172]
[55 171]
[56 170]
[57 169]
[59 166]
[60 165]
[61 164]
[63 161]
[64 160]
[65 159]
[66 158]
[68 156]
[69 155]
[71 152]
[72 151]
[73 148]
[74 147]
[76 145]
[77 144]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[91 127]
[92 125]
[93 124]
[94 123]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
