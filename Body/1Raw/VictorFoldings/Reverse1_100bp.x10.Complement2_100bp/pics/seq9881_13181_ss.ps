%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[92.83206940 523.46185303]
[95.98297119 508.75668335]
[101.63971710 494.82211304]
[109.63039398 482.08160400]
[119.71218109 470.92236328]
[131.57868958 461.68350220]
[144.86933899 454.64575195]
[140.25532532 440.37301636]
[135.20675659 434.97543335]
[135.68058777 425.85330200]
[131.27958679 411.51345825]
[126.87859344 397.17361450]
[122.47759247 382.83377075]
[118.07659149 368.49392700]
[113.67559814 354.15408325]
[104.44873047 365.98052979]
[89.45198822 366.29306030]
[79.74040985 354.86129761]
[82.47300720 340.11230469]
[95.63541412 332.91848755]
[109.52368164 338.58163452]
[106.20141602 323.95419312]
[102.87915802 309.32672119]
[98.70886230 323.73535156]
[89.91800690 335.88940430]
[77.53932190 344.36099243]
[63.02705383 348.15493774]
[48.08608246 346.82553101]
[34.47166061 340.52890015]
[23.78319740 330.00479126]
[17.27636147 316.48956299]
[15.71557236 301.57098389]
[19.28418732 287.00167847]
[27.56296921 274.49319458]
[39.57933426 265.51507568]
[53.92161560 261.12200928]
[68.90489197 261.83010864]
[82.76894379 267.55618286]
[93.88504028 277.62756348]
[100.94776154 290.86251831]
[101.17108917 275.86419678]
[101.39441681 260.86584473]
[101.61774445 245.86750793]
[101.84107208 230.86917114]
[102.06439972 215.87083435]
[101.50618744 200.88122559]
[100.16795349 185.94104004]
[98.82971954 171.00085449]
[97.49148560 156.06066895]
[96.15325165 141.12048340]
[94.81501770 126.18030548]
[93.47678375 111.24011993]
[91.69431305 96.34640503]
[89.46920013 81.51235962]
[87.24407959 66.67831421]
[85.01896667 51.84427261]
[75.32013702 39.34453964]
[81.08385468 25.61032104]
[78.85873413 10.77627659]
[76.63362122 -4.05776691]
[72.82064819 -9.45895386]
[72.37471008 -15.12447834]
[74.56993103 -19.36594582]
[72.78746796 -34.25966263]
[71.00499725 -49.15338135]
[68.55927277 -63.95265198]
[65.45516205 -78.62795258]
[62.35105133 -93.30325317]
[51.92541885 -105.20354462]
[56.86144638 -119.25647736]
[53.75733566 -133.93177795]
[50.65322495 -148.60708618]
[47.54911423 -163.28237915]
[43.42142487 -168.44703674]
[42.63905716 -174.07597351]
[44.57792664 -178.44058228]
[41.91213226 -193.20179749]
[39.24633408 -207.96302795]
[36.58053970 -222.72424316]
[33.91474533 -237.48545837]
[31.24894905 -252.24667358]
[28.58315468 -267.00790405]
[25.91735840 -281.76910400]
[23.25156212 -296.53033447]
[20.58576775 -311.29153442]
[5.53637552 -311.74923706]
[-9.08889675 -315.32626343]
[-22.65069580 -321.86624146]
[-34.55615616 -331.08328247]
[-44.28482819 -342.57443237]
[-51.41140747 -355.83737183]
[-55.62435532 -370.29229736]
[-56.73950195 -385.30728149]
[-54.70809174 -400.22595215]
[-49.61893463 -414.39614868]
[-41.69450378 -427.19839478]
[-31.28122330 -438.07299805]
[-18.83431435 -446.54461670]
[-4.89790583 -452.24285889]
[9.91876507 -454.91867065]
[24.96797562 -454.45504761]
[39.59183884 -450.87228394]
[53.15106583 -444.32696533]
[65.05290222 -435.10525513]
[74.77704620 -423.61029053]
[81.89840698 -410.34454346]
[86.10567474 -395.88796997]
[87.21490479 -380.87252808]
[85.17762756 -365.95465088]
[80.08290100 -351.78646851]
[72.15343475 -338.98733521]
[61.73587418 -328.11682129]
[49.28563309 -319.65011597]
[35.34698486 -313.95733643]
[38.01277924 -299.19610596]
[40.67857742 -284.43490601]
[43.34437180 -269.67367554]
[46.01016617 -254.91247559]
[48.67596054 -240.15124512]
[51.34175873 -225.39002991]
[54.00755310 -210.62881470]
[56.67334747 -195.86759949]
[59.33914566 -181.10638428]
[62.22441483 -166.38648987]
[65.32852936 -151.71119690]
[68.43264008 -137.03588867]
[71.53675079 -122.36058807]
[81.74034882 -111.50997925]
[77.02635193 -96.40736389]
[80.13046265 -81.73206329]
[83.23457336 -67.05676270]
[92.30307007 -79.00508118]
[107.14485931 -81.17795563]
[119.25788116 -72.33065796]
[121.70325470 -57.53133011]
[113.08015442 -45.25769424]
[98.32828522 -42.54064560]
[85.89871979 -50.93584824]
[87.68118286 -36.04212952]
[89.46364594 -21.14841270]
[91.46765900 -6.28288412]
[93.69277954 8.55115986]
[95.91790009 23.38520241]
[105.45757294 34.82390213]
[99.85300446 49.61915588]
[102.07812500 64.45320129]
[104.30324554 79.28723907]
[106.52835846 94.12128448]
[108.81701660 96.13413239]
[110.42386627 99.02421570]
[111.02257538 102.54060364]
[110.38410187 106.31533813]
[108.41696930 109.90188599]
[109.75520325 124.84207153]
[111.09343719 139.78225708]
[112.43167114 154.72244263]
[113.76990509 169.66262817]
[115.10813904 184.60281372]
[116.44637299 199.54299927]
[125.99687958 187.97633362]
[140.72456360 185.13111877]
[153.89613342 192.30816650]
[159.48971558 206.22619629]
[154.94799805 220.52210999]
[142.34739685 228.65997314]
[127.44874573 226.91928101]
[117.06273651 216.09416199]
[116.83940887 231.09249878]
[116.61608124 246.09083557]
[116.39275360 261.08917236]
[116.16942596 276.08752441]
[115.94609833 291.08584595]
[117.50662231 306.00445557]
[120.82888031 320.63192749]
[124.15113831 335.25936890]
[128.01544189 349.75308228]
[132.41644287 364.09292603]
[136.81744385 378.43276978]
[141.21844482 392.77261353]
[145.61943054 407.11245728]
[150.02043152 421.45230103]
[154.52806091 435.75900269]
[159.14207458 450.03173828]
[174.03735352 447.95770264]
[189.06649780 448.50189209]
[203.77276611 451.64779663]
[217.70925903 457.29980469]
[230.45248413 465.28613281]
[241.61515808 475.36413574]
[250.85806274 487.22750854]
[257.90032959 500.51574707]
[262.52795410 514.82507324]
[264.60031128 529.72058105]
[264.05441284 544.74963379]
[260.90682983 559.45556641]
[255.25325012 573.39141846]
[247.26547241 586.13372803]
[237.18621826 597.29522705]
[225.32179260 606.53680420]
[212.03274536 613.57757568]
[197.72291565 618.20361328]
[182.82716370 620.27423096]
[167.79815674 619.72662354]
[153.09259033 616.57739258]
[139.15737915 610.92224121]
[126.41597748 602.93298340]
[115.25558472 592.85247803]
[106.01536560 580.98699951]
[98.97610474 567.69720459]
[94.35173035 553.38684082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[21 175]
[22 174]
[23 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 148]
[54 147]
[55 146]
[56 145]
[58 143]
[59 142]
[60 141]
[63 140]
[64 139]
[65 138]
[66 131]
[67 130]
[68 129]
[70 127]
[71 126]
[72 125]
[73 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
