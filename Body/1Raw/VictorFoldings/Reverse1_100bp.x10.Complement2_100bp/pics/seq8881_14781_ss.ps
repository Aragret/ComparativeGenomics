%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[208.93495178 552.52392578]
[219.84597778 542.14300537]
[232.73373413 534.35070801]
[227.90773010 520.14825439]
[216.48704529 510.58703613]
[219.37298584 495.03128052]
[214.54698181 480.82882690]
[209.72097778 466.62637329]
[204.89498901 452.42391968]
[191.46246338 446.09121704]
[186.36590576 431.75665283]
[193.09930420 417.71032715]
[188.27330017 403.50787354]
[176.85260010 393.94665527]
[179.73854065 378.39086914]
[174.91255188 364.18841553]
[164.20407104 358.56216431]
[160.06721497 346.76934814]
[165.23435974 334.95141602]
[160.62034607 320.67868042]
[156.00634766 306.40594482]
[151.39233398 292.13320923]
[146.77832031 277.86047363]
[132.46112061 278.54214478]
[118.44444275 275.48797607]
[105.68715668 268.90048218]
[95.06363678 259.22409058]
[87.30384064 247.11515808]
[82.94316101 233.39747620]
[82.28546906 219.00627136]
[85.38198090 204.92434692]
[92.02731323 192.11500549]
[101.77308655 181.45622253]
[113.95816803 173.68035889]
[109.55716705 159.34051514]
[104.58951569 153.86839294]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[84.42077637 104.65475464]
[88.59729004 88.40874481]
[84.19628906 74.06889343]
[79.79529572 59.72904587]
[75.39429474 45.38919830]
[70.82229614 40.61338806]
[69.54086304 35.07669830]
[71.08261108 30.55651665]
[67.11051178 16.09199142]
[63.13841629 1.62746799]
[59.16632080 -12.83705616]
[55.19422531 -27.30158043]
[51.00721359 -41.70536041]
[39.56146240 -52.62806320]
[43.22406387 -67.06533051]
[38.82306671 -81.40517426]
[34.42206955 -95.74502563]
[30.02107048 -110.08486938]
[25.51344109 -124.39155579]
[20.79330635 -138.62954712]
[15.96730900 -152.83200073]
[-0.28288367 -155.88537598]
[-12.70470238 -166.65542603]
[-17.96981621 -182.13107300]
[-14.73082638 -198.05792236]
[-3.96457219 -210.10783386]
[-9.00148869 -224.23686218]
[-14.03840446 -238.36589050]
[-19.07532120 -252.49491882]
[-24.11223793 -266.62396240]
[-38.77175140 -263.35617065]
[-53.72172546 -261.91470337]
[-68.73552704 -262.32141113]
[-83.58554840 -264.57006836]
[-98.04666901 -268.62661743]
[-111.89965057 -274.42959595]
[-124.93450165 -281.89099121]
[-136.95361328 -290.89767456]
[-147.77476501 -301.31317139]
[-157.23393250 -312.97952271]
[-165.18769836 -325.71987915]
[-171.51550293 -339.34115601]
[-176.12139893 -353.63677979]
[-178.93557739 -368.39010620]
[-179.91535950 -383.37741089]
[-179.04591370 -398.37152100]
[-176.34040833 -413.14514160]
[-171.83985901 -427.47430420]
[-165.61250305 -441.14175415]
[-157.75271606 -453.94033813]
[-148.37968445 -465.67599487]
[-137.63548279 -476.17086792]
[-125.68300629 -485.26577759]
[-112.70343018 -492.82290649]
[-98.89353180 -498.72769165]
[-84.46266174 -502.89059448]
[-69.62959290 -505.24850464]
[-54.61919403 -505.76568604]
[-39.65901184 -504.43429565]
[-24.97584343 -501.27453613]
[-10.79227924 -496.33425903]
[2.67666149 -489.68841553]
[15.22679138 -481.43774414]
[26.66785431 -471.70727539]
[36.82640839 -460.64459229]
[45.54845047 -448.41732788]
[52.70175552 -435.21090698]
[58.17788315 -421.22549438]
[61.89381790 -406.67312622]
[63.79322433 -391.77441406]
[63.84731293 -376.75518799]
[62.05525589 -361.84317017]
[58.44422531 -347.26443481]
[53.06896210 -333.23992920]
[46.01095581 -319.98233032]
[37.37720490 -307.69259644]
[27.29858780 -296.55700684]
[15.92790127 -286.74441528]
[3.43751907 -278.40353394]
[-9.98320770 -271.66085815]
[-4.94629145 -257.53182983]
[0.09062479 -243.40280151]
[5.12754107 -229.27377319]
[10.16445732 -215.14474487]
[23.73108864 -213.57516479]
[35.35371399 -206.27835083]
[42.73383331 -194.63005066]
[44.38303757 -180.87294006]
[39.92288208 -167.68493652]
[30.16976547 -157.65800476]
[34.99576187 -143.45553589]
[40.12413788 -138.13374329]
[39.78617477 -129.00556946]
[44.83474731 -123.60800171]
[44.36091614 -114.48587036]
[48.76191330 -100.14601898]
[53.16291428 -85.80617523]
[57.56391144 -71.46632385]
[68.69487000 -61.56930542]
[65.34706116 -46.10636139]
[69.07172394 -43.11706161]
[70.95807648 -37.75621414]
[69.65874481 -31.27367592]
[73.63084412 -16.80915260]
[77.60294342 -2.34462810]
[81.57503510 12.11989594]
[85.54713440 26.58441925]
[89.73414612 40.98820114]
[94.13513947 55.32804871]
[98.53614044 69.66789246]
[102.93714142 84.00774384]
[112.87877655 90.07446289]
[116.21287537 101.23354340]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[123.89701843 154.93951416]
[128.29801941 169.27937317]
[144.02304077 169.02902222]
[159.16867065 173.21144104]
[172.51217651 181.48048401]
[182.97872925 193.16046143]
[189.72793579 207.30131531]
[192.22135925 222.75585938]
[190.26539612 238.27294922]
[184.02633667 252.59867859]
[174.01629639 264.57769775]
[161.05105591 273.24649048]
[165.66506958 287.51922607]
[170.27908325 301.79193115]
[174.89308167 316.06466675]
[179.50709534 330.33740234]
[193.45585632 342.35879517]
[189.11500549 359.36242676]
[193.94099426 373.56488037]
[205.70687866 384.14196777]
[202.47575378 398.68188477]
[207.30175781 412.88433838]
[221.19894409 419.92037964]
[225.89086914 434.39242554]
[219.09744263 447.59793091]
[223.92343140 461.80038452]
[228.74943542 476.00283813]
[233.57543945 490.20529175]
[245.34132385 500.78234863]
[242.11019897 515.32226562]
[246.93618774 529.52471924]
[261.90335083 527.85192871]
[276.88012695 529.43615723]
[291.16607666 534.20336914]
[304.09295654 541.93054199]
[315.05621338 552.25628662]
[323.54302979 564.69769287]
[329.15649414 578.67279053]
[331.63403320 593.52795410]
[330.85977173 608.56835938]
[326.86993408 623.09063721]
[319.85113525 636.41540527]
[310.13162231 647.91955566]
[298.16601562 657.06500244]
[284.51400757 663.42395020]
[269.81405640 666.69897461]
[254.75376892 666.73693848]
[240.03750610 663.53607178]
[226.35357666 657.24609375]
[214.34201050 648.16113281]
[204.56460571 636.70617676]
[197.47866821 623.41693115]
[193.41563416 608.91497803]
[192.56552124 593.87866211]
[194.96809387 579.01123047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[6 183]
[7 182]
[8 181]
[9 180]
[12 177]
[13 176]
[15 174]
[16 173]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[34 157]
[35 156]
[37 155]
[38 154]
[39 153]
[41 150]
[42 149]
[43 148]
[44 147]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[52 139]
[54 137]
[55 136]
[56 135]
[57 134]
[58 132]
[59 130]
[60 129]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
