%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[130.56846619 514.54638672]
[118.85731506 523.97210693]
[105.78575134 531.39709473]
[91.69235992 536.62896729]
[76.94219971 539.53222656]
[61.91732788 540.03167725]
[47.00692749 538.11431885]
[32.59721756 533.82989502]
[19.06143951 527.28936768]
[6.75020313 518.66210938]
[-4.01759958 508.17156982]
[-12.96305656 496.08956909]
[-19.85445976 482.72900391]
[-24.51330566 468.43594360]
[-26.81891823 453.58065796]
[-26.71157646 438.54785156]
[-24.19405937 423.72698975]
[-19.33157921 409.50192261]
[-12.25008583 396.24111938]
[-3.13300586 384.28808594]
[7.78350639 373.95242310]
[20.21668625 365.50186157]
[33.84448624 359.15527344]
[48.31391144 355.07702637]
[63.25017166 353.37283325]
[78.26638031 354.08676147]
[81.37049103 339.41146851]
[76.43446350 325.35852051]
[86.86009216 313.45825195]
[85.16883087 306.26370239]
[90.12120819 298.58831787]
[93.44347382 283.96084595]
[96.76573181 269.33337402]
[100.08798981 254.70591736]
[103.41024780 240.07846069]
[104.74848175 225.13827515]
[104.07869720 210.15324402]
[103.40891266 195.16819763]
[102.73912811 180.18316650]
[101.40089417 165.24298096]
[99.39688110 150.37745667]
[97.39286804 135.51191711]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[86.96765137 60.46582031]
[80.89382172 46.75055313]
[68.23121643 37.26535797]
[70.15226746 22.49515724]
[64.07843018 8.77989006]
[58.00460052 -4.93537664]
[51.82883072 -18.60504723]
[45.55147171 -32.22836304]
[39.27410889 -45.85168076]
[32.89550400 -59.42788696]
[26.41600800 -72.95623016]
[19.93651199 -86.48458099]
[13.45701694 -100.01292419]
[6.08658504 -86.94859314]
[-8.69787502 -84.41487122]
[-19.99781036 -94.27953339]
[-19.48332787 -109.27070618]
[-7.53368664 -118.33746338]
[7.04100180 -114.79716492]
[1.58564484 -128.76995850]
[-3.86971211 -142.74276733]
[-9.32506943 -156.71556091]
[-14.78042603 -170.68835449]
[-20.23578262 -184.66114807]
[-34.93463898 -181.50840759]
[-49.94889069 -180.75447083]
[-64.88963318 -182.41889954]
[-79.36987305 -186.45857239]
[-93.01452637 -192.76885986]
[-105.47016907 -201.18627930]
[-116.41416931 -211.49284363]
[-125.56304932 -223.42155457]
[-132.67984009 -236.66343689]
[-137.58018494 -250.87550354]
[-140.13716125 -265.68960571]
[-140.28453064 -280.72204590]
[-138.01849365 -295.58346558]
[-133.39773560 -309.88888550]
[-126.54193878 -323.26773071]
[-117.62869263 -335.37353516]
[-106.88886261 -345.89266968]
[-94.60064697 -354.55270386]
[-81.08233643 -361.12927246]
[-66.68408966 -365.45205688]
[-51.77885056 -367.40911865]
[-36.75270081 -366.94970703]
[-21.99485970 -364.08575439]
[-7.88758564 -358.89141846]
[5.20370626 -351.50128174]
[16.93992043 -342.10671997]
[27.01706314 -330.95114136]
[35.17410660 -318.32342529]
[41.19977188 -304.55072021]
[44.93797302 -289.98974609]
[46.29188156 -275.01766968]
[45.22643280 -260.02230835]
[41.76922226 -245.39205933]
[36.00979996 -231.50590515]
[28.09734726 -218.72352600]
[18.23681831 -207.37602234]
[6.68362141 -197.75729370]
[-6.26298571 -190.11651611]
[-0.80762851 -176.14370728]
[4.64772844 -162.17091370]
[10.10308552 -148.19812012]
[15.55844307 -134.22532654]
[21.01379967 -120.25252533]
[26.98536301 -106.49241638]
[33.46485901 -92.96407318]
[39.94435501 -79.43572998]
[46.42385101 -65.90737915]
[52.14828110 -61.23270035]
[52.89742661 -52.12903976]
[59.17478561 -38.50572205]
[65.45214844 -24.88240814]
[71.10634613 -20.12301445]
[71.71986389 -11.00921059]
[77.79370117 2.70605588]
[83.86753082 16.42132187]
[96.09569550 24.92551231]
[94.60908508 40.67671967]
[100.68292236 54.39198685]
[101.35525513 39.40706253]
[105.68416595 25.04528809]
[113.40493011 12.18489265]
[124.04542542 1.61229253]
[136.95497131 -6.02599239]
[151.34416199 -10.26287842]
[166.33308411 -10.83927822]
[181.00515747 -7.71994448]
[194.46318054 -1.09562624]
[205.88420105 8.62859726]
[214.56979370 20.85808563]
[219.98884583 34.84500122]
[221.80999756 49.73403931]
[219.92184448 64.61473083]
[214.43988037 78.57711029]
[205.69932556 90.76737976]
[194.23466492 100.44009399]
[180.74696350 107.00376892]
[166.06098938 110.05702209]
[151.07481384 109.41316223]
[136.70484924 105.11154938]
[123.82980347 97.41522980]
[113.23700714 86.79483795]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[112.25839233 133.50790405]
[114.26240540 148.37344360]
[116.26641846 163.23896790]
[126.19847870 151.99822998]
[141.16076660 150.93525696]
[152.58221436 160.65896606]
[153.92008972 175.59918213]
[144.40800476 187.19746399]
[129.49490356 188.80979919]
[117.72416687 179.51338196]
[118.39395142 194.49841309]
[119.06373596 209.48345947]
[119.73352051 224.46849060]
[126.13888550 210.90489197]
[136.37626648 199.94149780]
[149.46992493 192.62329102]
[164.17184448 189.64778137]
[179.08073425 191.29858398]
[192.77555847 197.41835022]
[203.95103455 207.42378235]
[211.54199219 220.36122131]
[214.82489014 234.99757385]
[213.48683167 249.93777466]
[207.65534973 263.75781250]
[197.88626099 275.14047241]
[185.11070251 283.00082397]
[170.54635620 286.58969116]
[155.58140564 285.56494141]
[141.64219666 280.02432251]
[130.05734253 270.49588013]
[121.93104553 257.88781738]
[118.03771210 243.40072632]
[114.71544647 258.02819824]
[111.39318848 272.65563965]
[108.07093048 287.28311157]
[104.74867249 301.91055298]
[101.53540039 316.56234741]
[106.24939728 331.66494751]
[96.04579163 342.51556396]
[92.94168091 357.19088745]
[106.96085358 362.61846924]
[119.92776489 370.22476196]
[131.50653076 379.81268311]
[141.39724731 391.13388062]
[149.34371948 403.89514160]
[155.14010620 417.76593018]
[158.63626099 432.38690186]
[159.74165344 447.37936401]
[158.42761230 462.35501099]
[154.72821045 476.92587280]
[148.73924255 490.71459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 199]
[27 198]
[29 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 172]
[37 171]
[38 170]
[39 169]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[49 157]
[50 156]
[51 132]
[52 131]
[54 129]
[55 128]
[56 127]
[57 125]
[58 124]
[59 123]
[60 121]
[61 120]
[62 119]
[63 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
