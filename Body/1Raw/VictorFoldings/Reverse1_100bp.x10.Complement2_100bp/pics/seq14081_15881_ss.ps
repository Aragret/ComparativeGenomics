%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[24.56105042 730.49072266]
[10.60928440 736.01245117]
[-3.65315461 740.67327881]
[-18.17321014 744.45599365]
[-32.89686966 747.34643555]
[-47.76935577 749.33392334]
[-62.73534012 750.41101074]
[-77.73915100 750.57373047]
[-92.72497559 749.82141113]
[-107.63706207 748.15692139]
[-122.41993713 745.58636475]
[-137.01860046 742.11944580]
[-151.37875366 737.76892090]
[-165.44697571 732.55108643]
[-179.17091370 726.48522949]
[-192.49954224 719.59405518]
[-205.38325500 711.90307617]
[-217.77413940 703.44097900]
[-229.62608337 694.23925781]
[-240.89500427 684.33209229]
[-251.53898621 673.75628662]
[-261.51843262 662.55133057]
[-270.79620361 650.75878906]
[-279.33779907 638.42260742]
[-287.11145020 625.58862305]
[-294.08822632 612.30456543]
[-300.24215698 598.61993408]
[-305.55038452 584.58557129]
[-309.99313354 570.25366211]
[-313.55389404 555.67761230]
[-316.21942139 540.91156006]
[-317.97976685 526.01049805]
[-318.82843018 511.02981567]
[-318.76223755 496.02526855]
[-317.78140259 481.05264282]
[-315.88961792 466.16769409]
[-313.09390259 451.42575073]
[-309.40466309 436.88168335]
[-304.83560181 422.58956909]
[-299.40371704 408.60256958]
[-293.12927246 394.97274780]
[-286.03555298 381.75079346]
[-278.14895630 368.98590088]
[-269.49880981 356.72555542]
[-260.11734009 345.01538086]
[-250.03941345 333.89889526]
[-239.30252075 323.41748047]
[-227.94660950 313.61013794]
[-216.01393127 304.51330566]
[-203.54885864 296.16088867]
[-190.59777832 288.58395386]
[-177.20886230 281.81063843]
[-163.43191528 275.86614990]
[-149.31820679 270.77264404]
[-134.92021179 266.54901123]
[-120.29151917 263.21102905]
[-105.48654175 260.77108765]
[-90.56034851 259.23822021]
[-75.56847382 258.61819458]
[-60.56667709 258.91326904]
[-45.61077881 260.12237549]
[-30.75641060 262.24102783]
[-16.05883408 265.26129150]
[-1.57272315 269.17199707]
[12.64803123 273.95852661]
[26.55052567 279.60311890]
[33.03002167 266.07479858]
[39.50951767 252.54644775]
[45.98901367 239.01809692]
[44.50857544 224.19725037]
[57.44797897 215.09326172]
[63.92747498 201.56492615]
[70.40696716 188.03657532]
[76.88646698 174.50822449]
[81.50047302 160.23548889]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[91.70700836 55.59949875]
[94.23123932 43.35972595]
[104.09204865 36.35322571]
[106.97732544 21.63333511]
[109.86259460 6.91344404]
[103.49223328 -10.36370945]
[115.53342438 -23.12994385]
[118.19921875 -37.89116287]
[120.86501312 -52.65237808]
[123.53080750 -67.41359711]
[126.19660187 -82.17481232]
[128.86239624 -96.93602753]
[114.75065613 -102.13504791]
[101.75619507 -109.70572662]
[90.27390289 -119.41799164]
[80.65271759 -130.97671509]
[73.18502045 -144.03062439]
[68.09773254 -158.18302917]
[65.54546356 -173.00386047]
[65.60576630 -188.04272461]
[68.27680969 -202.84260559]
[73.47743225 -216.95376587]
[81.04958344 -229.94737244]
[90.76315308 -241.42855835]
[102.32295990 -251.04843140]
[115.37771606 -258.51464844]
[129.53070068 -263.60034180]
[144.35182190 -266.15090942]
[159.39068604 -266.08889771]
[174.19026184 -263.41619873]
[188.30082703 -258.21395874]
[201.29356384 -250.64035034]
[212.77365112 -240.92547607]
[222.39221191 -229.36457825]
[229.85696411 -216.30897522]
[234.94104004 -202.15541077]
[237.48994446 -187.33399963]
[237.42622375 -172.29515076]
[234.75183105 -157.49586487]
[229.54800415 -143.38589478]
[221.97291565 -130.39401245]
[212.25672913 -118.91502380]
[200.69474792 -109.29777527]
[187.63829041 -101.83451080]
[173.48416138 -96.75204468]
[158.66246033 -94.20481110]
[143.62361145 -94.27023315]
[140.95782471 -79.50901794]
[138.29202271 -64.74780273]
[135.62623596 -49.98658371]
[132.96043396 -35.22536469]
[130.29463196 -20.46414948]
[136.93197632 -10.35117340]
[134.83186340 1.96845710]
[124.58248901 9.79871655]
[121.69721222 24.51860809]
[118.81194305 39.23849869]
[125.38558960 55.50976562]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[96.26168823 162.90129089]
[105.51209259 151.09323120]
[117.92343903 142.66955566]
[132.31275940 138.43313599]
[147.30857849 138.78776550]
[161.48155212 143.69964600]
[173.48083496 152.70060730]
[182.16271973 164.93272400]
[186.69970703 179.23013306]
[186.65934753 194.23007202]
[182.04550171 208.50286865]
[173.29792786 220.68809509]
[161.25039673 229.62437439]
[147.05119324 234.45993042]
[132.05369568 234.73387146]
[117.68737030 230.42008972]
[105.32152557 221.92974854]
[96.13479614 210.07209778]
[91.00279236 195.97732544]
[90.41481018 180.98773193]
[83.93531799 194.51606750]
[77.45581818 208.04441833]
[70.97632599 221.57276917]
[71.99330139 237.36125183]
[59.51736069 245.49758911]
[53.03786469 259.02593994]
[46.55836868 272.55429077]
[40.07887268 286.08264160]
[53.19120789 293.37698364]
[65.83446503 301.45712280]
[77.96160126 310.29306030]
[89.52750397 319.85183716]
[100.48915100 330.09796143]
[110.80577087 340.99331665]
[120.43896484 352.49731445]
[129.35292053 364.56723022]
[137.51445007 377.15811157]
[144.89321899 390.22311401]
[151.46174622 403.71368408]
[157.19563293 417.57958984]
[162.07353210 431.76925659]
[166.07728577 446.22991943]
[169.19201660 460.90777588]
[171.40612793 475.74822998]
[172.71139526 490.69604492]
[173.10293579 505.69561768]
[172.57933044 520.69116211]
[171.14250183 535.62689209]
[168.79779053 550.44726562]
[165.55393982 565.09710693]
[161.42300415 579.52197266]
[156.42034912 593.66815186]
[150.56459045 607.48303223]
[143.87751770 620.91522217]
[136.38400269 633.91479492]
[128.11190796 646.43328857]
[119.09202576 658.42425537]
[109.35790253 669.84295654]
[98.94575500 680.64703369]
[87.89431000 690.79626465]
[76.24468231 700.25286865]
[64.04020691 708.98162842]
[51.32629776 716.95013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 175]
[67 174]
[68 173]
[69 172]
[71 170]
[72 169]
[73 168]
[74 167]
[75 148]
[76 147]
[77 146]
[78 145]
[81 142]
[82 141]
[85 139]
[86 138]
[87 137]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
