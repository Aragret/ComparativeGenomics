%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[73.45735931 676.88342285]
[58.62185669 679.16137695]
[43.64544296 680.15563965]
[28.63900185 679.85870361]
[13.71363735 678.27288818]
[-1.02014780 675.40985107]
[-15.45326614 671.29077148]
[-29.47885895 665.94622803]
[-42.99308395 659.41577148]
[-55.89588547 651.74768066]
[-68.09173584 642.99884033]
[-79.49033356 633.23388672]
[-90.00728607 622.52526855]
[-99.56473541 610.95214844]
[-108.09191895 598.60028076]
[-115.52569580 585.56109619]
[-121.81103516 571.93115234]
[-126.90140533 557.81134033]
[-130.75910950 543.30615234]
[-133.35559082 528.52307129]
[-134.67161560 513.57153320]
[-134.69744873 498.56216431]
[-133.43290710 483.60614014]
[-130.88734436 468.81417847]
[-127.07960510 454.29583740]
[-122.03788757 440.15856934]
[-115.79950714 426.50704956]
[-108.41066742 413.44235229]
[-99.92606354 401.06118774]
[-90.40851593 389.45526123]
[-79.92848969 378.71044922]
[-68.56358337 368.90637207]
[-56.39793015 360.11557007]
[-43.52160645 352.40310669]
[-30.02994537 345.82614136]
[-16.02283669 340.43334961]
[-1.60398495 336.26461792]
[13.11985493 333.35086060]
[28.03967094 331.71365356]
[43.04500198 331.36508179]
[58.02474976 332.30773926]
[60.24986649 317.47369385]
[62.47498322 302.63964844]
[64.70010376 287.80560303]
[66.92521667 272.97155762]
[69.15033722 258.13751221]
[63.38661575 244.40328979]
[73.08544922 231.90354919]
[75.31056213 217.06951904]
[77.53568268 202.23547363]
[79.76079559 187.40142822]
[70.72863007 175.61347961]
[72.77390289 160.53794861]
[85.19942474 151.14411926]
[87.42453766 136.31007385]
[89.53916168 121.45987701]
[91.54317474 106.59434509]
[91.31984711 91.59600830]
[88.87412262 76.79673767]
[86.42839050 61.99746704]
[83.98266602 47.19819641]
[81.53694153 32.39892578]
[79.09120941 17.59965324]
[76.64548492 2.80038285]
[74.19975281 -11.99888802]
[71.75402832 -26.79815865]
[62.16105652 -15.26668644]
[47.23704910 -13.75870228]
[35.53115845 -23.13804817]
[33.74904633 -38.03180695]
[42.91159439 -49.90816116]
[57.77007294 -51.96379089]
[69.81237793 -43.02195358]
[68.69673157 -57.98040771]
[54.96335983 -64.71403503]
[46.50022125 -77.33433533]
[45.49702454 -92.39620972]
[52.12328339 -105.84793091]
[64.50958252 -114.12108612]
[63.39393234 -129.07954407]
[62.27828598 -144.03799438]
[61.16263580 -158.99644470]
[60.04698944 -173.95489502]
[58.15369415 -188.83493042]
[55.48789978 -203.59614563]
[52.82210541 -218.35737610]
[50.15631104 -233.11859131]
[47.49051285 -247.87980652]
[32.45325089 -249.12202454]
[18.25020981 -254.21476746]
[5.84977674 -262.81079102]
[-3.90256453 -274.32403564]
[-10.34188366 -287.96945190]
[-13.02913857 -302.81671143]
[-11.78110600 -317.85348511]
[-6.68287897 -332.05456543]
[1.91793585 -344.45166016]
[13.43492126 -354.19955444]
[27.08283043 -360.63360596]
[41.93112564 -363.31512451]
[56.96742249 -362.06130981]
[71.16652679 -356.95758057]
[83.56031799 -348.35198975]
[93.30376434 -336.83123779]
[99.73254395 -323.18084717]
[102.40833282 -308.33151245]
[101.14868927 -293.29571533]
[96.03949738 -279.09857178]
[87.42911530 -266.70809937]
[75.90460205 -256.96911621]
[62.25173187 -250.54559326]
[64.91752625 -235.78437805]
[67.58332062 -221.02316284]
[70.24911499 -206.26194763]
[72.91490936 -191.50073242]
[81.39540863 -203.87332153]
[95.81053162 -208.02113342]
[109.56987762 -202.04782104]
[116.38285828 -188.68431091]
[113.13467407 -174.04022217]
[101.31034851 -164.81063843]
[86.31580353 -165.21519470]
[75.00543976 -175.07055664]
[76.12109375 -160.11209106]
[77.23674011 -145.15364075]
[78.35238647 -130.19519043]
[79.46803284 -115.23673248]
[92.94454956 -108.89250946]
[101.49293518 -96.57256317]
[102.73513794 -81.52851868]
[96.23773956 -67.79241180]
[83.65518188 -59.09605789]
[84.77083588 -44.13760376]
[86.55329895 -29.24388695]
[88.99902344 -14.44461536]
[91.44475555 0.35465539]
[93.89048004 15.15392590]
[96.33621216 29.95319748]
[98.78193665 44.75246811]
[101.22766113 59.55173874]
[103.67339325 74.35101318]
[106.11911774 89.15028381]
[110.68190765 74.86109161]
[119.03781891 62.40401459]
[130.52787781 52.76147079]
[144.24591064 46.69391251]
[159.11009216 44.67984772]
[173.94813538 46.87811661]
[187.58985901 53.11535645]
[198.95944214 62.89966965]
[207.16020203 75.45942688]
[211.54541016 89.80410767]
[211.76922607 104.80244446]
[207.81399536 119.27158356]
[199.99165344 132.07044983]
[188.91909790 142.18966675]
[175.46954346 148.83117676]
[160.70370483 151.47120667]
[145.78605652 149.90156555]
[131.89306641 144.24604797]
[120.12040710 134.95063782]
[111.39651489 122.74844360]
[106.40870667 108.59835815]
[104.40469360 123.46389008]
[106.35952759 132.38668823]
[102.25858307 138.53518677]
[100.03346252 153.36923218]
[109.15598297 165.99530029]
[106.68807983 181.00743103]
[94.59484100 189.62654114]
[92.36972809 204.46058655]
[90.14460754 219.29463196]
[87.91949463 234.12867737]
[93.52405548 248.92391968]
[83.98438263 260.36260986]
[81.75926208 275.19665527]
[79.53414154 290.03070068]
[77.30902863 304.86474609]
[75.08390808 319.69879150]
[72.85879517 334.53283691]
[87.45585632 338.02673340]
[101.69852448 342.76251221]
[115.48135376 348.70516968]
[128.70230103 355.81066895]
[141.26347351 364.02639771]
[153.07188416 373.29156494]
[164.04008484 383.53750610]
[174.08689880 394.68844604]
[183.13790894 406.66177368]
[191.12612915 419.36883545]
[197.99240112 432.71560669]
[203.68589783 446.60321045]
[208.16447449 460.92883301]
[211.39494324 475.58645630]
[213.35340881 490.46749878]
[214.02537537 505.46182251]
[213.40585327 520.45843506]
[211.49943542 535.34625244]
[208.32023621 550.01507568]
[203.89178467 564.35626221]
[198.24688721 578.26367188]
[191.42732239 591.63433838]
[183.48358154 604.36932373]
[174.47448730 616.37420654]
[164.46673584 627.56018066]
[153.53442383 637.84442139]
[141.75849915 647.15081787]
[129.22612000 655.41046143]
[116.03010559 662.56213379]
[102.26813507 668.55291748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[48 173]
[49 172]
[50 171]
[51 170]
[54 167]
[55 166]
[56 164]
[57 163]
[58 142]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[73 133]
[74 132]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
