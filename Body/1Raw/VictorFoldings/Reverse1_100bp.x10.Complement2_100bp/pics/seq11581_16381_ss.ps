%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[16.09874535 762.03826904]
[2.04836273 767.36791992]
[-12.62830544 770.59484863]
[-27.61842537 771.65039062]
[-42.60248184 770.51202393]
[-57.26108932 767.20397949]
[-71.28179932 761.79681396]
[-84.36575317 754.40570068]
[-96.23406982 745.18829346]
[-106.63378143 734.34100342]
[-115.34320831 722.09503174]
[-122.17671204 708.71142578]
[-126.98863983 694.47540283]
[-129.67642212 679.69049072]
[-130.18276978 664.67181396]
[-128.49688721 649.73944092]
[-124.65470123 635.21166992]
[-118.73812866 621.39819336]
[-110.87326050 608.59344482]
[-101.22775269 597.07037354]
[-90.00719452 587.07452393]
[-77.45075226 578.81896973]
[-63.82606506 572.47979736]
[-49.42354584 568.19195557]
[-34.55018616 566.04693604]
[-19.52301407 566.09045410]
[-17.29789734 551.25646973]
[-15.07277966 536.42242432]
[-12.84766197 521.58837891]
[-10.62254524 506.75430298]
[-8.39742756 491.92025757]
[-21.82767296 498.60073853]
[-35.48808670 492.40451050]
[-39.30872726 477.89926147]
[-30.47315216 465.77767944]
[-15.49462509 464.97534180]
[-5.41523361 476.08215332]
[-2.09297395 461.45471191]
[1.22928548 446.82723999]
[4.55154514 432.19976807]
[-5.38274336 421.13415527]
[-6.91435003 406.16357422]
[0.75258553 393.00793457]
[14.85891914 386.81781006]
[8.67976665 376.41854858]
[11.32788372 364.20498657]
[21.91668320 356.84017944]
[25.45635414 342.26379395]
[23.98004532 335.02209473]
[29.15875816 327.49755859]
[32.91505814 312.97549438]
[31.30618286 308.47875977]
[32.50504684 302.92361450]
[37.00543213 298.08026123]
[41.19244385 283.67648315]
[45.37945557 269.27270508]
[49.56646729 254.86891174]
[53.75347900 240.46513367]
[57.94048691 226.06135559]
[62.12749863 211.65757751]
[66.31451416 197.25378418]
[65.16303253 189.95338440]
[70.67256927 182.66758728]
[75.07357025 168.32774353]
[79.47456360 153.98789978]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[90.90052795 71.26733398]
[101.26454926 60.56984711]
[104.58681488 45.94238663]
[107.90907288 31.31492805]
[110.68468475 16.57396507]
[112.90979767 1.73992097]
[115.13491821 -13.09412289]
[116.80645752 -28.00069618]
[117.92210388 -42.95914841]
[119.03775787 -57.91760254]
[111.22776031 -68.18243408]
[112.46494293 -80.61840057]
[121.54331970 -88.61274719]
[122.88155365 -103.55293274]
[116.40629578 -117.98836517]
[125.24821472 -129.97459412]
[118.77295685 -144.41001892]
[127.61487579 -156.39625549]
[128.95310974 -171.33644104]
[130.29135132 -186.27662659]
[122.63504791 -196.65660095]
[124.05723572 -209.07276917]
[133.25363159 -216.93106079]
[134.81416321 -231.84967041]
[136.37467957 -246.76828003]
[122.08113861 -251.51260376]
[109.14189148 -259.21908569]
[98.16213989 -269.52731323]
[89.65541077 -281.95507812]
[84.01959991 -295.92117310]
[81.51828766 -310.77233887]
[82.26847839 -325.81399536]
[86.23506927 -340.34259033]
[93.23255157 -353.67861938]
[102.93362427 -365.19830322]
[114.88455963 -374.36285400]
[128.52639771 -380.74365234]
[143.22106934 -384.04223633]
[158.28129578 -384.10430908]
[173.00265503 -380.92700195]
[186.69664001 -374.65890503]
[198.72273254 -365.59317017]
[208.51844788 -354.15386963]
[215.62564087 -340.87600708]
[219.71188354 -326.38058472]
[220.58605957 -311.34564209]
[218.20727539 -296.47433472]
[212.68679810 -282.46224976]
[204.28282166 -269.96478271]
[193.38842773 -259.56640625]
[180.51316833 -251.75347900]
[166.25921631 -246.89146423]
[151.29328918 -245.20774841]
[149.73275757 -230.28915405]
[148.17224121 -215.37054443]
[156.17132568 -199.75062561]
[145.23153687 -184.93838501]
[143.89329529 -169.99821472]
[142.55506897 -155.05802917]
[149.12603760 -141.69120789]
[140.18840027 -128.63636780]
[146.75936890 -115.26955414]
[137.82173157 -102.21469879]
[136.48350525 -87.27451324]
[144.71426392 -71.77542877]
[133.99621582 -56.80195618]
[132.88055420 -41.84350204]
[131.76490784 -26.88504791]
[144.66108704 -34.54589844]
[158.74452209 -29.38286591]
[163.63342285 -15.20194244]
[155.72389221 -2.45677900]
[140.84652710 -0.54263538]
[129.96896362 -10.86900520]
[127.74384308 3.96503806]
[125.51873016 18.79908180]
[138.94897461 12.11862183]
[152.60939026 18.31483269]
[156.43002319 32.82009888]
[147.59445190 44.94167709]
[132.61592102 45.74399185]
[122.53652954 34.63718796]
[119.21427155 49.26464844]
[115.89201355 63.89210892]
[120.61826324 78.01697540]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[111.85624695 137.15339661]
[125.01797485 144.34846497]
[127.74917603 159.09771729]
[118.03651428 170.52856445]
[103.03980255 170.21459961]
[93.81441498 158.38890076]
[89.41341400 172.72874451]
[85.01242065 187.06858826]
[80.71829224 201.44079590]
[76.53128052 215.84458923]
[72.34426880 230.24836731]
[68.15725708 244.65214539]
[63.97024918 259.05593872]
[59.78323746 273.45971680]
[55.59622574 287.86349487]
[51.40921402 302.26727295]
[47.43711853 316.73181152]
[43.68081665 331.25384521]
[40.03273010 345.80346680]
[36.49305725 360.37985229]
[42.08559799 377.92422485]
[29.48637962 390.14007568]
[39.53481293 401.81631470]
[40.76673889 416.99313354]
[32.91861343 429.83334351]
[19.17900467 435.52203369]
[15.85674572 450.14950562]
[12.53448582 464.77694702]
[9.21222687 479.40441895]
[6.43661594 494.14538574]
[4.21149874 508.97943115]
[1.98638141 523.81347656]
[-0.23873580 538.64752197]
[-2.46385288 553.48156738]
[-4.68897009 568.31561279]
[9.68962574 572.68298340]
[23.27906227 579.09741211]
[35.78968048 587.42218018]
[46.95481491 597.47991943]
[56.53647614 609.05615234]
[64.33043671 621.90423584]
[70.17057037 635.75018311]
[73.93238068 650.29895020]
[75.53569794 665.24041748]
[74.94634247 680.25610352]
[72.17687988 695.02587891]
[67.28633118 709.23504639]
[60.37894821 722.58068848]
[51.60195923 734.77832031]
[41.14244843 745.56799316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[37 189]
[38 188]
[39 187]
[40 186]
[44 182]
[47 180]
[48 179]
[50 178]
[51 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[63 168]
[64 167]
[65 166]
[66 160]
[67 159]
[68 158]
[70 156]
[72 154]
[73 153]
[74 152]
[75 146]
[76 145]
[77 144]
[78 138]
[79 137]
[80 136]
[83 134]
[84 133]
[86 131]
[88 129]
[89 128]
[90 127]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
