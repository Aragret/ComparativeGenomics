%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[74.04029846 392.83999634]
[72.47977448 377.92138672]
[70.91925049 363.00277710]
[69.35872650 348.08419800]
[63.12495041 361.72750854]
[52.19711685 372.00283813]
[38.19631195 377.38589478]
[23.19947052 377.07815552]
[9.43128204 371.12527466]
[-1.06582201 360.41027832]
[-6.73465919 346.52273560]
[-6.73429108 331.52273560]
[-1.06477249 317.63543701]
[9.43285751 306.92098999]
[23.20133781 300.96875000]
[38.19819641 300.66174316]
[52.19873810 306.04550171]
[63.12606430 316.32138062]
[69.35872650 329.96313477]
[70.91925049 315.04452515]
[72.47977448 300.12591553]
[74.04029846 285.20733643]
[67.66905975 271.74417114]
[76.80007935 258.82382202]
[70.42884064 245.36067200]
[79.55986023 232.44033813]
[81.12037659 217.52172852]
[82.01319885 202.54832458]
[82.23652649 187.54998779]
[82.45985413 172.55165100]
[82.68318176 157.55331421]
[74.36732483 170.03715515]
[61.50275803 177.75097656]
[46.57343292 179.20533752]
[32.46195984 174.11944580]
[21.89304924 163.47528076]
[16.90738869 149.32809448]
[18.46763420 134.40945435]
[26.27252388 121.59993744]
[38.81505585 113.37285614]
[53.67346573 111.31673431]
[67.97882843 115.82856750]
[78.96899414 126.03720093]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[106.52850342 27.70218658]
[93.59128571 19.83748055]
[84.14315033 8.04321098]
[79.30937958 -6.24506664]
[79.65508270 -21.29666328]
[85.11925507 -35.29539108]
[95.02440643 -46.55870819]
[108.16057587 -53.73995590]
[122.93303680 -55.98933411]
[125.81830597 -70.70922852]
[128.70358276 -85.42911530]
[131.58885193 -100.14900970]
[134.47412109 -114.86890411]
[135.36694336 -129.84230042]
[134.25129700 -144.80076599]
[133.13563538 -159.75921631]
[132.01998901 -174.71766663]
[130.90434265 -189.67611694]
[129.56611633 -204.61630249]
[128.00558472 -219.53491211]
[126.44506836 -234.45352173]
[122.87707520 -240.01957703]
[122.68456268 -245.69935608]
[125.06697845 -249.83857727]
[123.95133209 -264.79702759]
[122.83568573 -279.75549316]
[121.72003937 -294.71392822]
[112.97775269 -307.90042114]
[119.74701691 -321.16790771]
[117.74300385 -336.03341675]
[114.85772705 -350.75332642]
[111.97245789 -365.47320557]
[109.08718109 -380.19311523]
[106.20191193 -394.91299438]
[103.31663513 -409.63290405]
[88.25816345 -410.21520996]
[73.74005127 -414.25515747]
[60.54523849 -421.53482056]
[49.38531113 -431.66165161]
[40.86210632 -444.08950806]
[35.43526840 -458.14819336]
[33.39746475 -473.07949829]
[34.85858536 -488.07821655]
[39.73983765 -502.33551025]
[47.77798462 -515.08245850]
[58.53953171 -525.63165283]
[71.44412994 -533.41424561]
[85.79584503 -538.01043701]
[100.82070923 -539.17236328]
[115.70845032 -536.83746338]
[129.65618896 -531.13159180]
[141.91174316 -522.36242676]
[151.81419373 -511.00289917]
[158.82949829 -497.66564941]
[162.57934570 -483.06991577]
[162.86149597 -468.00283813]
[159.66075134 -453.27694702]
[153.14971924 -439.68640137]
[143.67950439 -427.96411133]
[131.76086426 -418.74224854]
[118.03652954 -412.51815796]
[120.92179871 -397.79827881]
[123.80707550 -383.07836914]
[126.69234467 -368.35848999]
[129.57762146 -353.63861084]
[132.46289062 -338.91870117]
[139.98171997 -351.89819336]
[153.64656067 -358.08462524]
[168.36079407 -355.17062378]
[178.63635254 -344.24298096]
[180.64071655 -329.37750244]
[173.62631226 -316.11862183]
[160.20933533 -309.41156006]
[145.39398193 -311.75790405]
[134.70547485 -322.28353882]
[143.36795044 -310.16699219]
[136.67848206 -295.82958984]
[137.79414368 -280.87112427]
[138.90979004 -265.91268921]
[140.02543640 -250.95422363]
[141.36366272 -236.01403809]
[142.92419434 -221.09542847]
[144.48471069 -206.17683411]
[147.56483459 -202.52690125]
[148.38479614 -196.90332031]
[145.86279297 -190.79176331]
[146.97843933 -175.83331299]
[148.09410095 -160.87486267]
[149.20974731 -145.91641235]
[150.32539368 -130.95796204]
[156.32408142 -144.70625305]
[166.23049927 -155.96958923]
[179.10046387 -163.67440796]
[193.70727539 -167.08631897]
[208.65869141 -165.88015747]
[222.52966309 -160.17085266]
[233.99809265 -150.50257874]
[241.97087097 -137.79689026]
[245.68809509 -123.26477814]
[244.79544067 -108.29135895]
[239.37802124 -94.30381012]
[229.95217896 -82.63533020]
[217.41632080 -74.39808655]
[202.96528625 -70.37719727]
[187.97645569 -70.95591736]
[173.87846375 -76.07907104]
[162.01504517 -85.25836945]
[153.51695251 -97.61888885]
[149.19401550 -111.98362732]
[146.30874634 -97.26374054]
[143.42347717 -82.54384613]
[140.53819275 -67.82395172]
[137.65292358 -53.10406113]
[150.48306274 -45.44424820]
[159.93611145 -33.83524704]
[164.85620117 -19.66600800]
[164.63124084 -4.64033365]
[159.26908875 9.42798233]
[149.39891052 20.83411217]
[136.19737244 28.18877792]
[121.24839783 30.58745766]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[97.68151855 157.77664185]
[97.45819092 172.77497864]
[97.23486328 187.77331543]
[97.01153564 202.77165222]
[108.50116730 193.12860107]
[123.45559692 194.29692078]
[133.30825806 205.60731506]
[132.41508484 220.58070374]
[121.28772736 230.63963318]
[106.30045319 230.02189636]
[96.03898621 219.08224487]
[94.47846222 234.00085449]
[100.73807526 248.53109741]
[91.71868134 260.38433838]
[97.97829437 274.91458130]
[88.95890045 286.76785278]
[87.39837646 301.68646240]
[85.83786011 316.60507202]
[84.27733612 331.52365112]
[84.27733612 346.52365112]
[85.83786011 361.44226074]
[87.39837646 376.36087036]
[88.95890045 391.27947998]
[102.46011353 398.92779541]
[108.85659790 413.06515503]
[105.68876648 428.25543213]
[94.17472839 438.65765381]
[78.74185181 440.27197266]
[65.32440186 432.47763062]
[59.08166122 418.27172852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[19 199]
[20 198]
[21 197]
[22 196]
[24 194]
[26 192]
[27 191]
[28 184]
[29 183]
[30 182]
[31 181]
[44 180]
[45 179]
[46 178]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 134]
[71 133]
[72 132]
[75 131]
[76 130]
[77 129]
[78 128]
[80 126]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
