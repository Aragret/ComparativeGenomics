%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[140.35746765 363.54046631]
[135.01722717 349.51785278]
[130.57710266 335.18472290]
[127.05499268 320.59887695]
[124.46506500 305.81900024]
[122.81775665 290.90460205]
[122.11968994 275.91577148]
[122.37368774 260.91284180]
[123.57872009 245.95622253]
[125.72994232 231.10615540]
[128.81867981 216.42240906]
[132.83250427 201.96414185]
[137.75524902 187.78953552]
[143.56710815 173.95570374]
[150.24464417 160.51834106]
[157.76100159 147.53153992]
[145.28120422 139.20959473]
[132.80140686 130.88764954]
[120.32161713 122.56570435]
[107.84182739 114.24376678]
[91.08011627 113.59465790]
[83.81175995 98.47688293]
[71.20944977 90.34166718]
[58.60713577 82.20645142]
[46.00482178 74.07123566]
[37.05134964 86.11286926]
[27.32160759 97.53643036]
[16.85814667 108.29197693]
[5.70671892 118.33246613]
[-6.08391047 127.61399078]
[-18.46218491 136.09597778]
[-31.37397766 143.74131775]
[-44.76282501 150.51660156]
[-58.57018661 156.39218140]
[-72.73567963 161.34239197]
[-87.19736481 165.34555054]
[-101.89200592 168.38418579]
[-116.75534058 170.44499207]
[-131.72238159 171.51895142]
[-146.72767639 171.60139465]
[-161.70561218 170.69194031]
[-176.59069824 168.79457092]
[-191.31784058 165.91757202]
[-205.82263184 162.07354736]
[-220.04165649 157.27928162]
[-233.91275024 151.55575562]
[-247.37522888 144.92799377]
[-260.37023926 137.42497253]
[-272.84097290 129.07951355]
[-284.73287964 119.92808533]
[-295.99392700 110.01073456]
[-306.57495117 99.37080383]
[-316.42959595 88.05483246]
[-325.51486206 76.11229706]
[-333.79092407 63.59542465]
[-341.22167969 50.55894470]
[-347.77456665 37.05986023]
[-353.42098999 23.15720749]
[-358.13619995 8.91177464]
[-361.89962769 -5.61414576]
[-364.69479370 -20.35703468]
[-366.50946045 -35.25242233]
[-367.33572388 -50.23517990]
[-367.16998291 -65.23978424]
[-366.01290894 -80.20063019]
[-363.86959839 -95.05229950]
[-360.74938965 -109.72983551]
[-356.66598511 -124.16906738]
[-351.63720703 -138.30685425]
[-345.68502808 -152.08137512]
[-338.83551025 -165.43238831]
[-331.11856079 -178.30152893]
[-322.56799316 -190.63250732]
[-313.22113037 -202.37141418]
[-303.11886597 -213.46690369]
[-292.30538940 -223.87048340]
[-280.82794189 -233.53663635]
[-268.73678589 -242.42309570]
[-256.08474731 -250.49102783]
[-242.92713928 -257.70510864]
[-229.32151794 -264.03384399]
[-215.32736206 -269.44952393]
[-201.00588989 -273.92849731]
[-186.41970825 -277.45114136]
[-171.63261414 -280.00207520]
[-156.70924377 -281.57012939]
[-141.71487427 -282.14846802]
[-126.71505737 -281.73455811]
[-111.77539062 -280.33016968]
[-96.96121216 -277.94152832]
[-82.33728790 -274.57897949]
[-67.96757507 -270.25729370]
[-53.91489792 -264.99536133]
[-40.24071503 -258.81616211]
[-27.00481415 -251.74676514]
[-14.26507568 -243.81802368]
[-2.07720947 -235.06465149]
[9.50549126 -225.52490234]
[20.43237877 -215.24050903]
[30.65567017 -204.25642395]
[40.13066483 -192.62069702]
[48.81592560 -180.38420105]
[56.67347717 -167.60043335]
[63.66896057 -154.32530212]
[69.77178192 -140.61686707]
[74.95526123 -126.53506470]
[79.19673157 -112.14147186]
[82.47763824 -97.49901581]
[84.78363800 -82.67174530]
[86.10465240 -67.72447968]
[86.43490601 -52.72259521]
[85.77294159 -37.73168182]
[84.12166595 -22.81729126]
[81.48829651 -8.04464531]
[77.88434601 6.52166033]
[73.32558441 20.81793022]
[67.83192444 34.78165054]
[61.42741394 48.35176086]
[54.14003754 61.46892166]
[66.74234772 69.60413361]
[79.34466553 77.73934937]
[91.94697571 85.87456512]
[103.45942688 84.11254120]
[113.19699860 90.50166321]
[116.16377258 101.76396942]
[128.64356995 110.08591461]
[141.12335205 118.40785980]
[153.60314941 126.72980499]
[166.08294678 135.05174255]
[175.18260193 123.12075043]
[185.02066040 111.79091644]
[195.55749512 101.10785675]
[206.75068665 91.11460114]
[218.55514526 81.85138702]
[230.92335510 73.35549927]
[243.80549622 65.66117096]
[257.14971924 58.79936600]
[270.90228271 52.79772568]
[285.00778198 47.68040848]
[299.40948486 43.46802902]
[314.04931641 40.17753983]
[328.86837769 37.82220078]
[343.80700684 36.41148758]
[358.80502319 35.95108414]
[373.80206299 36.44284058]
[388.73770142 37.88478470]
[403.55181885 40.27110672]
[418.18475342 43.59219360]
[432.57757568 47.83467484]
[446.67236328 52.98147202]
[460.41235352 59.01185226]
[473.74218750 65.90154266]
[486.60824585 73.62278748]
[498.95864868 82.14450836]
[510.74371338 91.43238831]
[521.91595459 101.44902802]
[532.43048096 112.15409088]
[542.24481201 123.50447083]
[551.31951904 135.45446777]
[559.61804199 147.95594788]
[567.10693359 160.95860291]
[573.75604248 174.41004944]
[579.53869629 188.25611877]
[584.43145752 202.44108582]
[588.41473389 216.90780640]
[591.47247314 231.59803772]
[593.59234619 246.45262146]
[594.76574707 261.41174316]
[594.98803711 276.41519165]
[594.25836182 291.40252686]
[592.57952881 306.31338501]
[589.95837402 321.08776855]
[586.40545654 335.66613770]
[581.93511963 349.98983765]
[576.56524658 364.00115967]
[570.31756592 377.64370728]
[563.21716309 390.86251831]
[555.29266357 403.60440063]
[546.57598877 415.81799316]
[537.10223389 427.45416260]
[526.90954590 438.46606445]
[516.03900146 448.80929565]
[504.53427124 458.44226074]
[492.44174194 467.32614136]
[479.81011963 475.42520142]
[466.69024658 482.70678711]
[453.13497925 489.14160156]
[439.19885254 494.70373535]
[424.93801880 499.37078857]
[410.40991211 503.12396240]
[395.67300415 505.94812012]
[380.78662109 507.83193970]
[365.81076050 508.76782227]
[350.80569458 508.75195312]
[335.83181763 507.78445435]
[320.94949341 505.86920166]
[306.21856689 503.01391602]
[291.69839478 499.23007202]
[277.44747925 494.53289795]
[263.52313232 488.94134521]
[249.98147583 482.47793579]
[236.87701416 475.16864014]
[224.26252747 467.04290771]
[212.18881226 458.13351440]
[200.70446777 448.47625732]
[189.85574341 438.11007690]
[179.68632507 427.07669067]
[170.23716736 415.42053223]
[161.54632568 403.18853760]
[153.64877319 390.42996216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[22 122]
[23 121]
[24 120]
[25 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
