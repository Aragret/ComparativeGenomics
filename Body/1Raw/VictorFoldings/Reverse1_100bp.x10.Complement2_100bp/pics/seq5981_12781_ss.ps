%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[49.53249741 561.41601562]
[45.84560776 546.76733398]
[46.43644714 531.67340088]
[51.25712204 517.35772705]
[59.91683960 504.98089600]
[71.71359253 495.54623413]
[85.69107819 489.81851196]
[84.13055420 474.89990234]
[82.57003784 459.98132324]
[81.00951385 445.06271362]
[79.44898987 430.14410400]
[67.75267792 420.99359131]
[65.95756531 405.88623047]
[75.63476562 393.68011475]
[74.07424164 378.76150513]
[72.51371765 363.84289551]
[70.95319366 348.92428589]
[69.39266968 334.00567627]
[67.83214569 319.08706665]
[61.80550766 332.82315063]
[51.27556992 343.50585938]
[37.62773514 349.72973633]
[22.65760612 350.67590332]
[8.33476162 346.21987915]
[-3.45638108 336.94793701]
[-11.16449451 324.07995605]
[-13.77544308 309.30892944]
[-10.94571304 294.57827759]
[-3.04760289 281.82601929]
[8.87975407 272.72994995]
[23.26711082 268.48684692]
[38.22156143 269.65493774]
[51.77558899 276.08053589]
[62.14593506 286.91824341]
[67.96870422 300.74450684]
[69.75116730 285.85079956]
[71.53363800 270.95706177]
[73.31610107 256.06335449]
[75.09856415 241.16963196]
[72.90335083 236.92817688]
[73.34928894 231.26264954]
[77.16225433 225.86146545]
[79.38737488 211.02742004]
[81.61248779 196.19337463]
[83.83760834 181.35932922]
[86.06272125 166.52528381]
[87.84519196 151.63156128]
[89.18342590 136.69137573]
[90.52165985 121.75119781]
[91.85989380 106.81101227]
[92.30649567 91.81766510]
[91.85989380 76.82431030]
[91.41328430 61.83096313]
[90.96668243 46.83761215]
[82.82192993 33.27392578]
[90.17685699 20.32192802]
[80.13809967 4.88480234]
[89.05271912 -10.23130035]
[88.38293457 -25.21633911]
[87.71314240 -40.20137787]
[87.04335785 -55.18641663]
[86.37357330 -70.17145538]
[85.70378876 -85.15649414]
[76.72935486 -94.42052460]
[76.47998810 -106.91539001]
[84.54405975 -115.93188477]
[84.09745789 -130.92523193]
[69.26267242 -133.43940735]
[55.20796585 -138.79782104]
[42.47284698 -146.79280090]
[31.54577255 -157.11549377]
[22.84542847 -169.36776733]
[16.70467186 -183.07766724]
[13.35780621 -197.71749878]
[12.93163586 -212.72416687]
[15.44067001 -227.52087402]
[20.78663063 -241.53923035]
[28.76230049 -254.24113464]
[39.05956268 -265.13940430]
[51.28128815 -273.81646729]
[64.95667267 -279.94033813]
[79.55935669 -283.27737427]
[79.11274719 -298.27072144]
[78.66614532 -313.26406860]
[78.21953583 -328.25741577]
[66.99423218 -332.55166626]
[57.90060806 -340.35702515]
[51.98861694 -350.74151611]
[49.93046188 -362.47726440]
[51.94422150 -374.18557739]
[57.77103043 -384.49902344]
[66.70806122 -392.22106934]
[77.69325256 -396.46481323]
[77.91658020 -411.46316528]
[78.13990784 -426.46148682]
[78.36323547 -441.45983887]
[63.98192215 -446.11486816]
[51.61257553 -454.80340576]
[42.35507202 -466.75286865]
[37.03258133 -480.90075684]
[36.11837769 -495.98901367]
[39.69374847 -510.67602539]
[47.44077682 -523.65582275]
[58.67060089 -533.77423096]
[72.38467407 -540.13153076]
[87.36354828 -542.16253662]
[102.27530670 -539.68646240]
[115.79402161 -532.92364502]
[126.71760559 -522.47534180]
[134.07473755 -509.27066040]
[137.21124268 -494.48373413]
[135.84820557 -479.42938232]
[130.10684204 -465.44622803]
[120.49766541 -453.77767944]
[107.87510681 -445.46127319]
[93.36157227 -441.23651123]
[93.13824463 -426.23815918]
[92.91491699 -411.23983765]
[92.69158936 -396.24148560]
[108.65879822 -387.67300415]
[118.11028290 -372.11242676]
[118.35552216 -353.82281494]
[109.24020386 -337.86654663]
[93.21289062 -328.70401001]
[93.65949249 -313.71066284]
[94.10610199 -298.71731567]
[94.55270386 -283.72396851]
[109.32811737 -281.26202393]
[123.34375763 -275.96298218]
[136.06028748 -268.02874756]
[146.98796082 -257.76272583]
[155.70552063 -245.55805969]
[161.87638855 -231.88275146]
[165.26170349 -217.26161194]
[165.72949219 -202.25617981]
[163.25993347 -187.44309998]
[157.94610596 -173.39201355]
[149.99044800 -160.64360046]
[139.69715881 -149.68882751]
[127.46049500 -140.94999695]
[113.74964905 -134.76452637]
[99.09080505 -131.37184143]
[99.53741455 -116.37849426]
[109.55162048 -101.96729279]
[100.68882751 -85.82627869]
[101.35861206 -70.84123993]
[102.02839661 -55.85620117]
[102.69818115 -40.87116241]
[103.36797333 -25.88612366]
[104.03775787 -10.90108585]
[112.75011444 -2.50934029]
[113.43076324 9.96946144]
[105.17021179 19.87532234]
[113.28302002 32.36658478]
[105.96002960 46.39100647]
[106.40663910 61.38435745]
[106.85324097 76.37770844]
[107.29985046 91.37105560]
[116.83433533 79.79118347]
[131.32501221 75.91557312]
[145.36720276 81.18972778]
[153.72352600 93.64653015]
[153.27728271 108.63989258]
[144.19490051 120.57765961]
[129.86389160 125.00734711]
[115.62935638 120.27677917]
[106.80007935 108.14924622]
[105.46184540 123.08943176]
[104.12361145 138.02961731]
[102.78537750 152.96980286]
[104.75138092 156.84133911]
[105.32542419 160.74453735]
[104.66844940 164.23793030]
[103.06829071 166.97766113]
[100.89676666 168.75039673]
[98.67164612 183.58444214]
[96.44653320 198.41848755]
[94.22141266 213.25253296]
[91.99629974 228.08657837]
[89.99228668 242.95210266]
[88.20981598 257.84582520]
[86.42735291 272.73953247]
[84.64488983 287.63327026]
[82.86241913 302.52697754]
[82.75075531 317.52655029]
[84.31127930 332.44515991]
[85.87180328 347.36376953]
[87.43231964 362.28237915]
[88.99284363 377.20098877]
[90.55336761 392.11956787]
[102.54703522 402.05886841]
[103.91710663 417.21069336]
[94.36759186 428.58358765]
[95.92811584 443.50216675]
[97.48863983 458.42077637]
[99.04916382 473.33938599]
[100.60968781 488.25799561]
[115.46990204 490.96920776]
[128.96371460 497.75842285]
[139.99725342 508.07528687]
[147.67607117 521.08349609]
[151.37767029 535.72845459]
[150.80198669 550.82299805]
[145.99569702 565.14343262]
[137.34841919 577.52899170]
[125.56114960 586.97552490]
[111.58943176 592.71722412]
[96.56587982 594.28875732]
[81.70839691 591.56262207]
[68.22140503 584.75982666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 170]
[48 169]
[49 168]
[50 167]
[51 158]
[52 157]
[53 156]
[54 155]
[56 153]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[66 143]
[67 142]
[82 127]
[83 126]
[84 125]
[85 124]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
