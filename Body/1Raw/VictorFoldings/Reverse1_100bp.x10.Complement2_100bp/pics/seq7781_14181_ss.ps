%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[30.32109261 655.76586914]
[23.78428459 669.32153320]
[14.72825623 681.34130859]
[3.50109553 691.36315918]
[-9.46565533 699.00183105]
[-23.67358971 703.96374512]
[-38.57659149 706.05822754]
[-53.60182571 705.20471191]
[-68.17176819 701.43603516]
[-81.72638702 694.89703369]
[-93.74468231 685.83905029]
[-103.76469421 674.61029053]
[-111.40128326 661.64227295]
[-116.36092377 647.43353271]
[-118.45298004 632.53021240]
[-117.59703827 617.50512695]
[-113.82598877 602.93579102]
[-107.28479767 589.38220215]
[-98.22487640 577.36541748]
[-86.99447632 567.34722900]
[-74.02525330 559.71270752]
[-59.81571198 554.75537109]
[-44.91203308 552.66571045]
[-29.88707161 553.52410889]
[-26.13077164 539.00201416]
[-22.37447166 524.47998047]
[-18.61816978 509.95791626]
[-14.86186981 495.43585205]
[-20.72865868 484.85723877]
[-17.71807098 472.72793579]
[-6.91469002 465.68167114]
[-2.94259357 451.21713257]
[1.02950263 436.75262451]
[-12.28361988 429.89285278]
[-23.88398552 420.41116333]
[-33.26299667 408.72012329]
[-40.00878906 395.32922363]
[-43.82433319 380.82272339]
[-44.54049301 365.83407593]
[-42.12353897 351.01834106]
[-36.67671204 337.02349854]
[-28.43583679 324.46215820]
[-17.75908852 313.88470459]
[-5.11144590 305.75524902]
[8.95556927 300.43118286]
[23.82793999 298.14746094]
[38.85595322 299.00631714]
[42.82804871 284.54180908]
[41.56800461 277.25933838]
[46.96845627 269.89233398]
[51.15546799 255.48854065]
[55.34247971 241.08476257]
[59.52949142 226.68098450]
[53.98026657 215.93237305]
[57.35065460 203.89807129]
[68.35903931 197.17658997]
[72.76004028 182.83674622]
[77.16103363 168.49690247]
[80.91733551 153.97483826]
[84.02144623 139.29954529]
[87.12555695 124.62423706]
[74.95229340 112.02982330]
[72.73212433 94.65517426]
[81.34726715 79.40437317]
[97.37435913 72.33756256]
[100.04016113 57.57634735]
[102.70595551 42.81513214]
[105.37174988 28.05391312]
[108.03754425 13.29269600]
[102.87597656 -1.66286433]
[112.75199127 -12.81246185]
[115.41778564 -27.57367897]
[118.08358765 -42.33489609]
[119.75512695 -57.24147034]
[110.89233398 -73.38248444]
[120.90653992 -87.79368591]
[121.35314941 -102.78703308]
[121.79975128 -117.78038025]
[118.92723846 -126.45140076]
[122.36627197 -132.99317932]
[123.03606415 -147.97821045]
[115.92269135 -162.11010742]
[124.22057343 -174.47920227]
[124.89035797 -189.46423340]
[125.56014252 -204.44927979]
[125.00193024 -219.43888855]
[123.21946716 -234.33259583]
[121.43700409 -249.22631836]
[119.65453339 -264.12002563]
[117.87207031 -279.01376343]
[102.93540192 -281.14880371]
[89.06066895 -287.07791138]
[77.19387054 -296.39678955]
[68.14409637 -308.47006226]
[62.52838135 -322.47454834]
[60.72961807 -337.45544434]
[62.87044144 -352.39129639]
[68.80489349 -366.26373291]
[78.12834930 -378.12692261]
[90.20511627 -387.17202759]
[104.21179199 -392.78234863]
[119.19336700 -394.57531738]
[134.12838745 -392.42874146]
[147.99853516 -386.48892212]
[159.85813904 -377.16088867]
[168.89857483 -365.08062744]
[174.50347900 -351.07180786]
[176.29067993 -336.08953857]
[174.13832092 -321.15533447]
[168.19316101 -307.28747559]
[158.86053467 -295.43148804]
[146.77679443 -286.39572144]
[132.76579285 -280.79623413]
[134.54824829 -265.90249634]
[136.33071899 -251.00878906]
[138.11318970 -236.11506653]
[139.89564514 -221.22134399]
[146.82154846 -234.52668762]
[159.08450317 -243.16496277]
[173.94494629 -245.20637512]
[188.08300781 -240.19485474]
[198.34020996 -229.25001526]
[202.42506409 -214.81692505]
[199.42501831 -200.11999512]
[190.01026917 -188.44255066]
[176.28411865 -182.39337158]
[161.31300354 -183.32385254]
[148.44152832 -191.02612305]
[140.54518127 -203.77949524]
[139.87539673 -188.79444885]
[139.20561218 -173.80941772]
[146.36689758 -160.74934387]
[138.02110291 -147.30842590]
[137.35131836 -132.32339478]
[136.79310608 -117.33377838]
[136.34649658 -102.34043121]
[135.89988708 -87.34707642]
[143.96397400 -78.33058167]
[143.71459961 -65.83571625]
[134.74015808 -56.57168579]
[144.57217407 -67.90003967]
[158.93768311 -72.21654510]
[173.38537598 -68.18367767]
[183.43849182 -57.05107117]
[185.98194885 -42.26828384]
[180.22764587 -28.41592216]
[167.95860291 -19.78629303]
[152.97651672 -19.05337715]
[139.92375183 -26.44428062]
[132.84480286 -39.66910172]
[130.17900085 -24.90788460]
[127.51321411 -10.14666653]
[132.86544800 3.75307250]
[122.79875946 15.95849133]
[120.13296509 30.71970940]
[117.46717072 45.48092651]
[114.80137634 60.24214172]
[112.13558197 75.00335693]
[121.58237457 82.49842072]
[126.96435547 93.28971863]
[127.26787567 105.34482574]
[122.43577576 116.39329529]
[113.37813568 124.35425568]
[101.80085754 127.72834778]
[98.69674683 142.40365601]
[95.59263611 157.07894897]
[108.72257233 149.82603455]
[123.17301941 153.84902954]
[130.66610718 166.84339905]
[126.90946198 181.36537170]
[114.05505371 189.09609985]
[99.46646881 185.60707092]
[91.50088501 172.89790344]
[87.09988403 187.23774719]
[82.69889069 201.57759094]
[87.23725128 219.42373657]
[73.93327332 230.86799622]
[69.74626160 245.27177429]
[65.55924988 259.67556763]
[61.37223816 274.07934570]
[57.29257202 288.51388550]
[53.32047653 302.97842407]
[66.67951202 309.91491699]
[78.29979706 319.47375488]
[87.67494202 331.23529053]
[94.39704895 344.68386841]
[98.17447662 359.23056030]
[98.84445190 374.23889160]
[96.38013458 389.05276489]
[90.89162445 403.02502441]
[82.62110138 415.54586792]
[71.93210602 426.06927490]
[59.29356003 434.13702393]
[45.25921631 439.39852905]
[30.44338226 441.62609863]
[15.49402618 440.72473145]
[11.52193069 455.18923950]
[7.54983425 469.65377808]
[12.61753368 487.35687256]
[-0.33981052 499.19216919]
[-4.09611130 513.71423340]
[-7.85241175 528.23626709]
[-11.60871220 542.75836182]
[-15.36501312 557.28039551]
[-1.80827820 563.81500244]
[10.21294498 572.86907959]
[20.23659325 584.09466553]
[27.87738228 597.06018066]
[32.84162140 611.26727295]
[34.93850327 626.16992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[31 198]
[32 197]
[33 196]
[47 182]
[48 181]
[50 180]
[51 179]
[52 178]
[53 177]
[56 175]
[57 174]
[58 173]
[59 166]
[60 165]
[61 164]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[71 152]
[72 151]
[73 150]
[74 140]
[76 137]
[77 136]
[78 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
