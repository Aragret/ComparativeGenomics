%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[100.49342346 492.93673706]
[98.62656403 477.99252319]
[100.01637268 462.99645996]
[104.59782410 448.64987183]
[112.15664673 435.62380981]
[122.33930206 424.52752686]
[134.66952515 415.88000488]
[148.57061768 410.08569336]
[145.90481567 395.32449341]
[143.23902893 380.56326294]
[140.57322693 365.80206299]
[137.90744019 351.04083252]
[128.48721313 362.71386719]
[113.58731079 364.44387817]
[101.74307251 355.23983765]
[99.73941040 340.37426758]
[108.72412109 328.36282349]
[123.55034637 326.08618164]
[135.72445679 334.84774780]
[134.38621521 319.90756226]
[133.04798889 304.96737671]
[131.70974731 290.02719116]
[130.37152100 275.08700562]
[129.03327942 260.14682007]
[126.69779205 245.32975769]
[123.37553406 230.70230103]
[120.05327606 216.07482910]
[116.51360321 201.49845886]
[112.75730133 186.97639465]
[109.00099945 172.45434570]
[105.41352844 169.30171204]
[103.76843262 163.86196899]
[105.35592651 157.44392395]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[75.87705994 83.57060242]
[68.21012115 70.41493225]
[69.74172974 55.44435883]
[79.67601776 44.37874222]
[69.07436371 32.63499832]
[73.80061340 18.51013184]
[70.47835541 3.88267136]
[67.15609741 -10.74478912]
[63.83383560 -25.37224960]
[60.18574524 -39.92187119]
[56.21364975 -54.38639450]
[52.24155426 -68.85091400]
[48.26945877 -83.31544495]
[44.29736328 -97.77996826]
[40.32526398 -112.24449158]
[24.59975624 -112.46244812]
[9.58537102 -117.09394836]
[-3.50602174 -125.75662231]
[-13.62017918 -137.74304199]
[-19.94537354 -152.07856750]
[-21.97754288 -167.60050964]
[-19.56044197 -183.05249023]
[-12.89763165 -197.18609619]
[-2.53535557 -208.86177063]
[10.68222904 -217.14068604]
[6.49521828 -231.54446411]
[2.30820680 -245.94825745]
[-12.45318413 -243.21330261]
[-27.41353798 -241.96173096]
[-42.42416382 -242.20596313]
[-57.33588409 -243.94357300]
[-72.00048828 -247.15730286]
[-86.27222443 -251.81520081]
[-100.00926208 -257.87097168]
[-113.07506561 -265.26443481]
[-125.33978271 -273.92211914]
[-136.68150330 -283.75796509]
[-146.98753357 -294.67422485]
[-156.15541077 -306.56237793]
[-164.09403992 -319.30432129]
[-170.72451782 -332.77337646]
[-175.98094177 -346.83566284]
[-179.81108093 -361.35150146]
[-182.17684937 -376.17651367]
[-183.05474854 -391.16345215]
[-182.43605042 -406.16329956]
[-180.32688904 -421.02703857]
[-176.74826050 -435.60687256]
[-171.73570251 -449.75793457]
[-165.33905029 -463.33959961]
[-157.62185669 -476.21685791]
[-148.66084290 -488.26171875]
[-138.54505920 -499.35449219]
[-127.37505341 -509.38491821]
[-115.26183319 -518.25329590]
[-102.32579041 -525.87152100]
[-88.69548798 -532.16387939]
[-74.50639343 -537.06781006]
[-59.89953232 -540.53454590]
[-45.02008057 -542.52966309]
[-30.01591873 -543.03332520]
[-15.03616524 -542.04052734]
[-0.22970298 -539.56115723]
[14.25631142 -535.61987305]
[28.27790642 -530.25573730]
[41.69572449 -523.52221680]
[54.37641144 -515.48608398]
[66.19393158 -506.22732544]
[77.03084564 -495.83792114]
[86.77943420 -484.42111206]
[95.34281921 -472.09036255]
[102.63589478 -458.96826172]
[108.58615875 -445.18518066]
[113.13449097 -430.87817383]
[116.23568726 -416.18936157]
[117.85890961 -401.26473999]
[117.98804474 -386.25268555]
[116.62179565 -371.30236816]
[113.77374268 -356.56237793]
[109.47219849 -342.17922974]
[103.75991058 -328.29583740]
[96.69364929 -315.05020142]
[88.34364319 -302.57400513]
[78.79289246 -290.99118042]
[68.13630676 -280.41687012]
[56.47980499 -270.95617676]
[43.93923569 -262.70315552]
[30.63923454 -255.73976135]
[16.71198845 -250.13526917]
[20.89900017 -235.73147583]
[25.08601189 -221.32769775]
[39.41716766 -221.58277893]
[53.33669281 -218.11264038]
[65.89218903 -211.14823914]
[76.22289276 -201.15982056]
[83.61872101 -188.82521057]
[87.56904602 -174.98379517]
[87.79796600 -160.57937622]
[84.28355408 -146.59588623]
[77.25978851 -133.99009705]
[67.20098877 -123.62620544]
[54.78979111 -116.21658325]
[58.76188660 -101.75205994]
[62.73398209 -87.28753662]
[66.70607758 -72.82301331]
[70.67817688 -58.35848999]
[74.65026855 -43.89396667]
[77.51736450 -41.84162140]
[79.53282928 -38.29860687]
[80.00686646 -33.68031693]
[78.46129608 -28.69450951]
[81.78355408 -14.06704807]
[85.10581207 0.56041181]
[88.42807007 15.18787193]
[98.79209900 25.88536072]
[94.30347443 41.05648041]
[108.04308319 46.74517059]
[115.89121246 59.58537674]
[114.65928650 74.76219177]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[119.98339081 154.12165833]
[123.52306366 168.69804382]
[127.27935791 183.22009277]
[131.03565979 197.74215698]
[135.38984680 202.71736145]
[136.42277527 208.30574036]
[134.68074036 212.75257874]
[138.00299072 227.38003540]
[141.32525635 242.00749207]
[147.80645752 228.47996521]
[160.51609802 220.51347351]
[175.51596069 220.57653809]
[188.15818787 228.64959717]
[194.52542114 242.23114014]
[192.64472961 257.11276245]
[183.09884644 268.68325806]
[168.84568787 273.35736084]
[154.30172729 269.68673706]
[143.97346497 258.80859375]
[145.31170654 273.74877930]
[146.64993286 288.68896484]
[147.98817444 303.62915039]
[149.32640076 318.56933594]
[150.66464233 333.50952148]
[152.66865540 348.37503052]
[155.33444214 363.13626099]
[158.00024414 377.89749146]
[160.66603088 392.65869141]
[163.33183289 407.41992188]
[178.38154602 407.98583984]
[192.95762634 411.77423096]
[206.37832642 418.60787964]
[218.01594543 428.16717529]
[227.32615662 440.00500488]
[233.87351990 453.56765747]
[237.35179138 468.22085571]
[237.59828186 483.27917480]
[234.60148621 498.03836060]
[228.50154114 511.80807495]
[219.58377075 523.94427490]
[208.26525879 533.87933350]
[195.07540894 541.14855957]
[180.63113403 545.41198730]
[165.60800171 546.47021484]
[150.70869446 544.27374268]
[136.63006592 538.92523193]
[124.03060150 530.67492676]
[113.49960327 519.90869141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[24 181]
[25 171]
[26 170]
[27 169]
[28 166]
[29 165]
[30 164]
[33 163]
[34 162]
[35 161]
[36 160]
[38 158]
[42 154]
[44 152]
[45 151]
[46 150]
[47 149]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[63 129]
[64 128]
[65 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
