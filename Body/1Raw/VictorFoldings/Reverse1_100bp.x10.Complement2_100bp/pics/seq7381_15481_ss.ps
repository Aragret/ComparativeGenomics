%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[25.96280479 636.55639648]
[13.48588181 644.89666748]
[0.39304528 652.23229980]
[-13.23498154 658.51806641]
[-27.31417656 663.71520996]
[-41.75773621 667.79168701]
[-56.47660828 670.72241211]
[-71.38005066 672.48919678]
[-86.37616730 673.08123779]
[-101.37251282 672.49487305]
[-116.27661133 670.73370361]
[-130.99659729 667.80859375]
[-145.44169617 663.73754883]
[-159.52285767 658.54571533]
[-173.15325928 652.26507568]
[-186.24885559 644.93438721]
[-198.72892761 636.59881592]
[-210.51652527 627.30975342]
[-221.53897095 617.12451172]
[-231.72830200 606.10577393]
[-241.02169800 594.32159424]
[-249.36186218 581.84460449]
[-256.69738770 568.75170898]
[-262.98300171 555.12359619]
[-268.18002319 541.04437256]
[-272.25634766 526.60076904]
[-275.18685913 511.88183594]
[-276.95352173 496.97839355]
[-277.54541016 481.98226929]
[-276.95889282 466.98593140]
[-275.19757080 452.08184814]
[-272.27227783 437.36187744]
[-268.20111084 422.91683960]
[-263.00915527 408.83572388]
[-256.72839355 395.20538330]
[-249.39755249 382.10986328]
[-241.06184387 369.62988281]
[-231.77265930 357.84237671]
[-221.58728027 346.82003784]
[-210.56848145 336.63082886]
[-198.78419495 327.33755493]
[-186.30711365 318.99749756]
[-173.21412659 311.66210938]
[-159.58596802 305.37661743]
[-145.50666809 300.17977905]
[-131.06301880 296.10357666]
[-116.34408569 293.17321777]
[-101.44061279 291.40670776]
[-86.44448090 290.81497192]
[-71.44815063 291.40164185]
[-56.54408264 293.16311646]
[-41.82416534 296.08853149]
[-27.37914848 300.15985107]
[-13.29809570 305.35198975]
[-7.02073526 291.72866821]
[-0.74337476 278.10534668]
[5.53398609 264.48202515]
[4.74987888 259.77096558]
[6.91691637 254.51728821]
[12.20642185 250.55084229]
[18.88661575 237.12046814]
[25.56681061 223.69009399]
[24.92331886 218.95776367]
[27.24581528 213.77095032]
[32.65107346 209.96376038]
[39.72817612 196.73823547]
[46.80528259 183.51269531]
[53.88238907 170.28717041]
[60.95949554 157.06164551]
[68.03659821 143.83612061]
[67.21942139 128.96394348]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[120.37625122 46.02501678]
[127.45335388 32.79948807]
[133.93284607 19.27114296]
[139.80181885 5.46696711]
[145.67077637 -8.33720970]
[151.53973389 -22.14138603]
[157.20251465 -36.03141403]
[162.65788269 -50.00421143]
[168.11323547 -63.97700882]
[157.79856873 -75.17384338]
[153.38616943 -89.67962646]
[155.69996643 -104.60163879]
[164.22811890 -116.98839569]
[177.23497009 -124.41342163]
[192.11415100 -125.45053101]
[197.56950378 -139.42332458]
[203.02487183 -153.39611816]
[208.48022461 -167.36892700]
[213.62217712 -181.46006775]
[218.44818115 -195.66252136]
[223.27418518 -209.86497498]
[210.02766418 -216.97692871]
[198.13250732 -226.17230225]
[187.91319275 -237.20024109]
[179.64852905 -249.75990295]
[173.56398010 -263.50866699]
[169.82553101 -278.07141113]
[168.53517151 -293.05090332]
[169.72810364 -308.03845215]
[173.37178040 -322.62521362]
[179.36680603 -336.41320801]
[187.54962158 -349.02636719]
[197.69702148 -360.12051392]
[209.53213501 -369.39303589]
[222.73213196 -376.59097290]
[236.93687439 -381.51794434]
[251.75886536 -384.03955078]
[266.79373169 -384.08697510]
[281.63134766 -381.65893555]
[295.86691284 -376.82171631]
[309.11203003 -369.70721436]
[321.00543213 -360.50952148]
[331.22262573 -349.47961426]
[339.48486328 -336.91836548]
[345.56677246 -323.16845703]
[349.30242920 -308.60498047]
[350.58987427 -293.62524414]
[349.39407349 -278.63790894]
[345.74758911 -264.05184937]
[339.74990845 -250.26499939]
[331.56463623 -237.65344238]
[321.41513062 -226.56123352]
[309.57821655 -217.29098511]
[296.37683105 -210.09559631]
[282.17114258 -205.17137146]
[267.34866333 -202.65263367]
[252.31376648 -202.60809326]
[237.47663879 -205.03897095]
[232.65063477 -190.83651733]
[227.82464600 -176.63406372]
[229.04679871 -173.32670593]
[228.72772217 -169.26304626]
[226.52940369 -165.17395020]
[222.45301819 -161.91355896]
[216.99766541 -147.94076538]
[211.54231262 -133.96797180]
[206.08694458 -119.99517059]
[216.32725525 -109.15074158]
[220.86228943 -94.87688446]
[218.74148560 -79.98853302]
[210.33248901 -67.44624329]
[197.25868225 -59.76754761]
[182.08602905 -58.52165222]
[176.63067627 -44.54885483]
[171.17532349 -30.57605743]
[172.23844910 -25.92000580]
[170.38795471 -20.54667282]
[165.34390259 -16.27242661]
[159.47494507 -2.46824908]
[153.60598755 11.33592796]
[147.73703003 25.14010429]
[162.01687622 20.54818535]
[175.42366028 27.27562714]
[180.27732849 41.46864700]
[173.79751587 54.99683762]
[159.69613647 60.11063766]
[146.05108643 53.88063049]
[140.67887878 39.87659454]
[133.60177612 53.10212326]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[94.08893585 143.34207153]
[81.26212311 150.91322327]
[74.18502045 164.13874817]
[67.10791779 177.36427307]
[60.03081131 190.58981323]
[52.95370483 203.81533813]
[45.87659836 217.04086304]
[38.99718857 230.37028503]
[32.31699371 243.80067444]
[25.63679886 257.23104858]
[19.15730286 270.75939941]
[12.87994099 284.38269043]
[6.60258055 298.00601196]
[0.32521999 311.62933350]
[13.42097664 318.95977783]
[25.90122032 327.29510498]
[37.68900681 336.58392334]
[48.71165466 346.76898193]
[58.90121078 357.78744507]
[68.19484711 369.57144165]
[76.53526306 382.04827881]
[83.87104797 395.14105225]
[90.15695953 408.76901245]
[95.35425568 422.84814453]
[99.43087769 437.29165649]
[102.36170959 452.01049805]
[104.12866211 466.91394043]
[104.72085571 481.91003418]
[104.13463593 496.90640259]
[102.37361145 511.81051636]
[99.44864655 526.53051758]
[95.37777710 540.97564697]
[90.18608856 555.05688477]
[83.90560913 568.68731689]
[76.57504272 581.78302002]
[68.23958588 594.26318359]
[58.95064545 606.05084229]
[48.76548004 617.07342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 186]
[55 185]
[56 184]
[57 183]
[60 182]
[61 181]
[62 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[70 174]
[72 172]
[73 171]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 158]
[81 157]
[82 156]
[83 155]
[84 152]
[85 151]
[86 150]
[92 144]
[93 143]
[94 142]
[95 141]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
