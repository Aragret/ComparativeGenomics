%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[81.15043640 735.65588379]
[77.11785126 720.93511963]
[79.88017273 705.92407227]
[88.88892365 693.60314941]
[102.35542297 686.41870117]
[101.68563843 671.43365479]
[101.01585388 656.44860840]
[100.34606934 641.46356201]
[99.67628479 626.47851562]
[99.00649261 611.49353027]
[98.00223541 596.52716064]
[96.66400146 581.58697510]
[95.32576752 566.64678955]
[93.98753357 551.70660400]
[90.25981903 545.32489014]
[92.74228668 536.53430176]
[91.62664032 521.57580566]
[90.51099396 506.61737061]
[81.84851074 494.50082397]
[88.53797150 480.16342163]
[75.33714294 469.74337769]
[73.72526550 452.66366577]
[85.18601227 439.44735718]
[83.84777832 424.50717163]
[82.50954437 409.56698608]
[67.82882690 406.69406128]
[54.53906631 399.79379272]
[43.72124481 389.41781616]
[36.25797653 376.40090942]
[32.76152420 361.79367065]
[33.52355576 346.77798462]
[38.49085236 332.57113647]
[47.26892471 320.32733154]
[59.15331650 311.04382324]
[73.18615723 305.47970581]
[71.84792328 290.53952026]
[70.50968933 275.59933472]
[69.17145538 260.65914917]
[67.83322144 245.71897888]
[61.60273361 259.36380005]
[50.91491699 269.88854980]
[37.17592621 275.90853882]
[22.19337082 276.63171387]
[7.93845749 271.96295166]
[-3.71333241 262.51647949]
[-11.22900581 249.53515625]
[-13.61974716 234.72689819]
[-10.57101250 220.03999329]
[-2.48391581 207.40675354]
[9.57754612 198.48928833]
[24.02648163 194.46084595]
[38.96188354 195.85145569]
[52.41874313 202.47813416]
[62.62657928 213.46903992]
[68.24285126 227.38046265]
[70.24686432 212.51493835]
[72.25087738 197.64941406]
[74.25489044 182.78388977]
[61.70077515 190.99327087]
[46.99113464 188.05619812]
[38.55231857 175.65512085]
[41.21846771 160.89396667]
[53.46228790 152.22859192]
[68.26996613 154.62290955]
[77.15875244 166.70442200]
[80.48101807 152.07696533]
[83.80327606 137.44949341]
[87.12553406 122.82204437]
[90.44779205 108.19458008]
[93.44256592 93.49657440]
[96.10836029 78.73535919]
[87.36581421 65.84328461]
[90.27958679 50.91128540]
[102.62409210 42.65605164]
[105.28988647 27.89483452]
[100.12831879 12.93927383]
[110.00433350 1.78967631]
[97.68956757 -14.08565140]
[100.96966553 -33.59832764]
[117.28682709 -44.24090958]
[119.29084015 -59.10643768]
[121.29485321 -73.97196198]
[123.29886627 -88.83749390]
[125.30287933 -103.70301819]
[123.14912415 -109.95384979]
[124.30235291 -115.51866150]
[127.59425354 -118.97877502]
[130.03997803 -133.77804565]
[124.65631866 -148.65510559]
[134.36524963 -159.95050049]
[136.70072937 -174.76757812]
[138.92584229 -189.60162354]
[141.15097046 -204.43565369]
[135.54640198 -219.23091125]
[145.08607483 -230.66961670]
[147.31118774 -245.50366211]
[149.53631592 -260.33770752]
[151.76142883 -275.17175293]
[153.98654175 -290.00579834]
[140.14846802 -296.01995850]
[128.33911133 -305.41149902]
[119.36362457 -317.54010010]
[113.83399963 -331.57882690]
[112.12724304 -346.57046509]
[114.35971832 -361.49288940]
[120.37922668 -375.32864380]
[129.77534485 -387.13436890]
[141.90740967 -396.10516357]
[155.94827271 -401.62939453]
[170.94056702 -403.33035278]
[185.86212158 -401.09210205]
[199.69554138 -395.06726074]
[211.49765015 -385.66659546]
[220.46376038 -373.53103638]
[225.98255920 -359.48806763]
[227.67773438 -344.49511719]
[225.43373108 -329.57443237]
[219.40353394 -315.74331665]
[209.99830627 -303.94485474]
[197.85931396 -294.98342896]
[183.81419373 -289.47006226]
[168.82058716 -287.78067017]
[166.59547424 -272.94662476]
[164.37034607 -258.11257935]
[162.14523315 -243.27853394]
[159.92012024 -228.44448853]
[165.68383789 -214.71026611]
[155.98500061 -202.21054077]
[153.75988770 -187.37649536]
[151.53477478 -172.54244995]
[153.65127563 -165.46133423]
[149.16452026 -157.50477600]
[154.72311401 -143.68626404]
[144.83924866 -131.33232117]
[142.39352417 -116.53305054]
[140.16841125 -101.69900513]
[138.16439819 -86.83348083]
[136.16038513 -71.96794891]
[134.15637207 -57.10242081]
[132.15235901 -42.23689270]
[140.34487915 -36.05195999]
[145.26937866 -26.95334053]
[145.97828674 -16.55091858]
[142.27684021 -6.71716070]
[134.77018738 0.74992347]
[124.76554871 4.45547199]
[130.11779785 18.35521126]
[120.05110168 30.56062889]
[117.38530731 45.32184601]
[126.06250000 57.37348557]
[123.56928253 72.38143158]
[110.86958313 81.40115356]
[108.20378113 96.16236877]
[109.93149567 99.61018372]
[110.13108063 103.80279541]
[108.50396729 108.04066467]
[105.07525635 111.51683807]
[101.75299072 126.14430237]
[98.43073273 140.77175903]
[95.10847473 155.39921570]
[91.78621674 170.02668762]
[89.12042236 184.78790283]
[87.11640930 199.65342712]
[85.11239624 214.51895142]
[83.10837555 229.38447571]
[82.77339935 244.38073730]
[84.11163330 259.32092285]
[85.44987488 274.26110840]
[86.78810883 289.20129395]
[88.12634277 304.14147949]
[102.92464447 307.12310791]
[116.26971436 314.14675903]
[127.08401489 324.63558960]
[134.49707031 337.73348999]
[137.91555786 352.37472534]
[137.07075500 367.37081909]
[132.03965759 381.50689697]
[123.23805237 393.64022827]
[111.38616943 402.79251099]
[97.44972992 408.22875977]
[98.78796387 423.16894531]
[100.12619781 438.10913086]
[111.38740540 445.49829102]
[116.26554871 457.84390259]
[113.18812561 470.55654907]
[103.49642181 479.04776001]
[112.23870087 492.23422241]
[105.46944427 505.50173950]
[106.58509064 520.46020508]
[107.70074463 535.41864014]
[108.92771912 550.36834717]
[110.26595306 565.30853271]
[111.60418701 580.24871826]
[112.94242096 595.18890381]
[115.94669342 599.45758057]
[116.91622925 603.99774170]
[116.08831787 607.98895264]
[113.99153137 610.82373047]
[114.66132355 625.80877686]
[115.33110809 640.79382324]
[116.00089264 655.77880859]
[116.67067719 670.76385498]
[117.34046173 685.74890137]
[131.39422607 691.70330811]
[141.46627808 703.17132568]
[145.55679321 717.87609863]
[142.85360718 732.89794922]
[133.89344788 745.25427246]
[120.45534515 752.49169922]
[105.20745087 753.17321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 194]
[12 193]
[13 192]
[14 191]
[16 190]
[17 189]
[18 188]
[20 186]
[23 182]
[24 181]
[25 180]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[55 165]
[56 164]
[57 163]
[58 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 153]
[71 152]
[74 149]
[75 148]
[77 146]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[87 135]
[88 134]
[90 132]
[91 130]
[92 129]
[93 128]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
