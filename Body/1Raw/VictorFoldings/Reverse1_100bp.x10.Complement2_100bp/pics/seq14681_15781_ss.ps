%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[137.67913818 456.01220703]
[146.10604858 443.51217651]
[157.27999878 433.39260864]
[170.55136108 426.24179077]
[166.79505920 411.71972656]
[163.03875732 397.19766235]
[159.28247070 382.67559814]
[155.52616882 368.15353394]
[151.76986694 353.63146973]
[148.01356506 339.10943604]
[134.11067200 333.83233643]
[125.88372803 321.23147583]
[126.66323090 306.02471924]
[136.35957336 294.05444336]
[132.60327148 279.53240967]
[128.84696960 265.01034546]
[125.09066772 250.48828125]
[121.50319672 247.33564758]
[119.85810089 241.89591980]
[121.44559479 235.47785950]
[118.12332916 220.85040283]
[113.57643890 215.02395630]
[114.86221313 205.98046875]
[111.75810242 191.30516052]
[108.65399933 176.62986755]
[105.54988861 161.95455933]
[102.44577789 147.27925110]
[92.24217224 136.42864990]
[96.95616913 121.32604218]
[93.85205841 106.65073395]
[90.95057678 104.11030579]
[89.18297577 100.30327606]
[89.08980560 95.76473999]
[90.95247650 91.25138855]
[88.50675201 76.45211792]
[86.06102753 61.65284729]
[83.50519562 46.87219620]
[80.83939362 32.11097717]
[70.70773315 24.12898827]
[68.79127502 11.77945518]
[75.57844543 1.76642132]
[73.13272095 -13.03284931]
[63.24885941 -25.38679314]
[68.80745697 -39.20530319]
[66.36173248 -54.00457764]
[63.91600418 -68.80384827]
[61.47027588 -83.60311890]
[58.59740067 -86.85896301]
[57.06421280 -90.49404907]
[56.82543182 -94.04065704]
[57.68852234 -97.09379578]
[59.34692764 -99.35385132]
[57.78640747 -114.27245331]
[56.22588348 -129.19105530]
[54.66535950 -144.10966492]
[53.10483551 -159.02827454]
[51.54431534 -173.94686890]
[47.78801346 -188.46893311]
[41.91905212 -202.27311707]
[36.05009079 -216.07728577]
[30.18113136 -229.88146973]
[24.31217003 -243.68563843]
[18.44320869 -257.48980713]
[12.57424831 -271.29400635]
[6.70528746 -285.09817505]
[0.83632660 -298.90234375]
[-5.03263426 -312.70651245]
[-19.47165680 -308.57199097]
[-34.30932999 -306.24325562]
[-49.32071686 -305.75558472]
[-64.27825165 -307.11636353]
[-78.95518494 -310.30499268]
[-93.12900543 -315.27313232]
[-106.58486176 -321.94543457]
[-119.11874390 -330.22079468]
[-130.54066467 -339.97372437]
[-140.67744446 -351.05636597]
[-149.37542725 -363.30072021]
[-156.50276184 -376.52120972]
[-161.95138550 -390.51733398]
[-165.63870239 -405.07699585]
[-167.50881958 -419.97943115]
[-167.53338623 -434.99871826]
[-165.71200562 -449.90716553]
[-162.07232666 -464.47879028]
[-156.66950989 -478.49267578]
[-149.58544922 -491.73638916]
[-140.92755127 -504.00915527]
[-130.82707214 -515.12487793]
[-119.43711090 -524.91510010]
[-106.93035889 -533.23138428]
[-93.49639893 -539.94769287]
[-79.33889771 -544.96215820]
[-64.67247772 -548.19873047]
[-49.71947479 -549.60845947]
[-34.70656967 -549.16986084]
[-19.86136055 -546.88964844]
[-5.40889263 -542.80242920]
[8.43173504 -536.97003174]
[21.45070457 -529.48095703]
[33.45064926 -520.44873047]
[44.24965668 -510.01031494]
[53.68401337 -498.32388306]
[61.61069870 -485.56661987]
[67.90954590 -471.93197632]
[72.48506165 -457.62655640]
[75.26789093 -442.86730957]
[76.21583557 -427.87796021]
[75.31453705 -412.88571167]
[72.57765198 -398.11788940]
[68.04667664 -383.79830933]
[61.79028702 -370.14410400]
[53.90333939 -357.36227417]
[44.50539398 -345.64654541]
[33.73892593 -335.17453003]
[21.76714325 -326.10501099]
[8.77154255 -318.57550049]
[14.64050388 -304.77130127]
[20.50946426 -290.96713257]
[26.37842560 -277.16296387]
[32.24738693 -263.35876465]
[38.11634827 -249.55459595]
[43.98530579 -235.75042725]
[49.85426712 -221.94624329]
[55.72322845 -208.14207458]
[61.59218979 -194.33789062]
[62.65417862 -209.30024719]
[67.83451080 -223.37733459]
[76.72463989 -235.45895386]
[88.62345123 -244.59231567]
[102.59255981 -250.05711365]
[117.53029633 -251.42239380]
[132.25862122 -248.58044434]
[145.61598206 -241.75543213]
[156.54896545 -231.48558044]
[164.19535828 -218.58082581]
[167.95213318 -204.05889893]
[167.52301025 -189.06503296]
[162.94183350 -174.78172302]
[154.56988525 -162.33541870]
[143.06742859 -152.70767212]
[129.34158325 -146.65777588]
[114.47483826 -144.66284180]
[99.63963318 -146.88021851]
[86.00594330 -153.13500977]
[74.64897156 -162.93394470]
[66.46292114 -175.50740051]
[68.02344513 -160.58879089]
[69.58396149 -145.67018127]
[71.14448547 -130.75158691]
[72.70500946 -115.83297729]
[74.26553345 -100.91437531]
[76.26954651 -86.04884338]
[78.71527100 -71.24957275]
[81.16100311 -56.45030212]
[83.60672760 -41.65103149]
[93.31565094 -30.35563087]
[87.93199158 -15.47857666]
[90.37771606 -0.67930609]
[102.22750092 12.26478958]
[95.60061646 29.44518280]
[98.26641083 44.20639801]
[102.54859924 50.23007202]
[100.86029816 59.20712280]
[103.30602264 74.00639343]
[105.75174713 88.80566406]
[108.52735901 103.54662323]
[111.63146973 118.22193146]
[122.05710602 130.12220764]
[117.12107849 144.17514038]
[120.22518921 158.85044861]
[123.32929993 173.52575684]
[126.43341064 188.20104980]
[129.53752136 202.87635803]
[132.75079346 217.52813721]
[136.07305908 232.15560913]
[139.61273193 246.73197937]
[143.36901855 261.25402832]
[147.12532043 275.77609253]
[150.88162231 290.29815674]
[165.16601562 296.06552124]
[173.22123718 308.98709106]
[172.13604736 323.99664307]
[162.53561401 335.35311890]
[166.29191589 349.87518311]
[170.04821777 364.39724731]
[173.80451965 378.91931152]
[177.56082153 393.44137573]
[181.31712341 407.96340942]
[185.07342529 422.48547363]
[200.14759827 422.30438232]
[214.82691956 425.73672485]
[228.25794983 432.58294678]
[239.65983582 442.44500732]
[248.36968994 454.74957275]
[253.88110352 468.78125000]
[255.87368774 483.72424316]
[254.23158264 498.70977783]
[249.05024719 512.86669922]
[240.63092041 525.37182617]
[229.46310425 535.49816895]
[216.19607544 542.65704346]
[201.60115051 546.43218994]
[186.52687073 546.60412598]
[171.84963989 543.16290283]
[158.42276001 536.30853271]
[147.02685547 526.43957520]
[138.32446289 514.12969971]
[132.82154846 500.09472656]
[130.83802795 485.15051270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[14 180]
[15 179]
[16 178]
[17 177]
[20 176]
[21 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[29 168]
[30 167]
[34 166]
[35 165]
[36 164]
[37 162]
[38 161]
[41 159]
[42 158]
[44 156]
[45 155]
[46 154]
[47 153]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
