%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[70.98421478 640.28790283]
[68.06077576 625.53796387]
[67.67230988 610.50604248]
[69.83000946 595.62481689]
[74.47177124 581.32226562]
[81.46405792 568.01000977]
[90.60568237 556.07104492]
[101.63362122 545.84887695]
[114.23057556 537.63763428]
[128.03411865 531.67358398]
[124.49444580 517.09716797]
[120.95477295 502.52081299]
[117.41510010 487.94442749]
[113.87542725 473.36807251]
[103.96099854 484.62435913]
[88.97223663 484.04373169]
[79.95830536 472.05416870]
[83.56393433 457.49398804]
[97.13118744 451.09634399]
[110.65775299 457.57611084]
[108.21202850 442.77685547]
[95.99180603 434.33874512]
[93.30066681 419.36502075]
[102.23419189 406.60452271]
[99.78846741 391.80526733]
[97.34273529 377.00598145]
[94.89701080 362.20672607]
[92.45127869 347.40744019]
[90.00555420 332.60818481]
[84.34213257 346.49795532]
[73.57543945 356.94198608]
[59.51983643 362.18032837]
[44.54394531 361.33016968]
[31.17147064 354.53482056]
[21.65590668 342.93939209]
[17.60079193 328.49789429]
[19.68948555 313.64404297]
[27.57000542 300.88092041]
[39.91434860 292.35934448]
[54.64226913 289.51535034]
[69.27186584 292.82821655]
[81.33777618 301.73965454]
[88.80721283 314.74948120]
[89.25382233 299.75613403]
[89.70042419 284.76278687]
[90.14703369 269.76943970]
[90.59364319 254.77609253]
[83.23870850 241.82409668]
[91.38346100 228.26040649]
[91.83006287 213.26705933]
[92.27667236 198.27371216]
[92.50000000 183.27537537]
[92.50000000 168.27537537]
[92.50000000 153.27537537]
[92.50000000 138.27537537]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[92.16500854 78.27745056]
[89.80689240 74.63146210]
[88.82989502 70.80915833]
[89.11986542 67.26637268]
[90.42631531 64.37503815]
[92.40163422 62.38600159]
[93.07141876 47.40096283]
[93.74120331 32.41592407]
[91.33415222 27.78416252]
[90.97988892 23.15514565]
[92.33361053 19.31034470]
[94.79031372 16.78112984]
[96.12854767 1.84094524]
[97.46678162 -13.09923935]
[98.80501556 -28.03942490]
[86.35333252 -36.92214966]
[80.06116486 -50.75347137]
[81.52721405 -65.77735138]
[90.25807953 -77.96865845]
[103.82755280 -84.11154175]
[105.16578674 -99.05172729]
[106.50402069 -113.99191284]
[107.84225464 -128.93209839]
[109.18048859 -143.87228394]
[110.51872253 -158.81246948]
[111.85695648 -173.75265503]
[99.16355133 -187.81649780]
[100.75359344 -206.37409973]
[115.15208435 -217.67892456]
[116.04489899 -232.65232849]
[113.43219757 -238.72566223]
[114.16833496 -244.36082458]
[117.19377136 -248.05619812]
[118.53200531 -262.99639893]
[119.87023926 -277.93658447]
[121.20847321 -292.87677002]
[122.54670715 -307.81692505]
[123.88494110 -322.75711060]
[125.22317505 -337.69729614]
[126.56140900 -352.63748169]
[112.50019836 -358.15646362]
[100.56427765 -367.41445923]
[91.72125244 -379.66098022]
[86.68797302 -393.90328979]
[85.87247467 -408.98675537]
[89.34085846 -423.68872070]
[96.81195831 -436.81726074]
[107.68013763 -447.30819702]
[121.06434631 -454.31103516]
[135.87959290 -457.25805664]
[150.92488098 -455.91040039]
[164.98054504 -450.37731934]
[176.90715027 -441.10733032]
[185.73786926 -428.85192871]
[190.75683594 -414.60458374]
[191.55718994 -399.52029419]
[188.07403564 -384.82183838]
[180.58975220 -371.70080566]
[169.71104431 -361.22079468]
[156.31979370 -354.23141479]
[141.50160217 -351.29925537]
[140.16336060 -336.35906982]
[138.82513428 -321.41888428]
[137.48689270 -306.47869873]
[136.14866638 -291.53851318]
[134.81042480 -276.59832764]
[133.47218323 -261.65814209]
[132.13395691 -246.71797180]
[131.01831055 -231.75950623]
[130.12548828 -216.78610229]
[139.36793518 -210.09704590]
[144.28456116 -199.66908264]
[143.54928589 -188.04353333]
[137.22932434 -178.11584473]
[126.79714203 -172.41441345]
[125.45890808 -157.47422791]
[124.12067413 -142.53404236]
[122.78244019 -127.59386444]
[121.44420624 -112.65367889]
[120.10597229 -97.71349335]
[118.76773834 -82.77330780]
[131.02949524 -74.31665039]
[137.45474243 -60.76776886]
[136.22740173 -45.72250366]
[127.57730865 -33.22960281]
[113.74520111 -26.70119095]
[112.40696716 -11.76100540]
[111.06873322 3.17917943]
[109.73049927 18.11936378]
[108.72624207 33.08570862]
[108.05645752 48.07074738]
[107.38667297 63.05578613]
[107.16334534 78.05412292]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[107.50000000 138.27537537]
[107.50000000 153.27537537]
[107.50000000 168.27537537]
[107.50000000 183.27537537]
[110.46956635 189.18241882]
[110.07013702 194.85140991]
[107.27001953 198.72032166]
[106.82341766 213.71366882]
[106.37680817 228.70701599]
[113.69979858 242.73144531]
[105.58699036 255.22270203]
[105.14038086 270.21606445]
[104.69377899 285.20941162]
[104.24716949 300.20275879]
[103.80056763 315.19610596]
[104.80482483 330.16244507]
[107.25055695 344.96170044]
[109.69628143 359.76098633]
[112.14200592 374.56024170]
[114.58773804 389.35952759]
[117.03346252 404.15881348]
[129.59745789 413.36660767]
[131.86695862 428.41000366]
[123.01129913 440.33111572]
[125.45702362 455.13040161]
[128.45179749 469.82839966]
[131.99147034 484.40475464]
[135.53114319 498.98114014]
[139.07081604 513.55749512]
[142.61048889 528.13391113]
[157.61199951 527.10308838]
[172.57192993 528.62249756]
[187.05982971 532.64849854]
[200.65887451 539.06518555]
[212.97778320 547.68798828]
[223.66212463 558.26879883]
[232.40446472 570.50311279]
[238.95330811 584.03906250]
[243.12019348 598.48706055]
[244.78524780 613.43145752]
[243.90057373 628.44232178]
[240.49160767 643.08770752]
[234.65643311 656.94622803]
[226.56295776 669.61914062]
[216.44403076 680.74188232]
[204.59080505 689.99438477]
[191.34431458 697.11047363]
[177.08567810 701.88537598]
[162.22515869 704.18164062]
[147.19032288 703.93334961]
[132.41374207 701.14752197]
[118.32058716 695.90435791]
[105.31632233 688.35467529]
[93.77512360 678.71575928]
[84.02905273 667.26489258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[20 180]
[21 179]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[49 164]
[50 163]
[51 162]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 152]
[59 151]
[64 150]
[65 149]
[66 148]
[70 147]
[71 146]
[72 145]
[73 144]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[87 128]
[88 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
