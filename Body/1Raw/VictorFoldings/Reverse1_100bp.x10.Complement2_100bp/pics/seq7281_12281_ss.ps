%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[97.04885101 383.14721680]
[105.30827332 370.31195068]
[118.32327271 362.33871460]
[116.76274872 347.42010498]
[115.20222473 332.50149536]
[113.64170074 317.58288574]
[104.62230682 305.72961426]
[110.88192749 291.19940186]
[109.32140350 276.28079224]
[107.76087952 261.36218262]
[98.74148560 249.50892639]
[105.00109863 234.97868347]
[103.44057465 220.06007385]
[94.24417877 212.20178223]
[92.82198334 199.78561401]
[100.47828674 189.40563965]
[99.14005280 174.46545410]
[97.80181885 159.52526855]
[96.46358490 144.58508301]
[87.62166595 132.59884644]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[89.62465668 68.23462677]
[87.17893219 53.43535614]
[83.63925934 38.85898209]
[80.09958649 24.28260422]
[76.55991364 9.70622921]
[73.02024078 -4.87014580]
[69.41598511 -8.64591599]
[67.78369141 -12.99205112]
[68.01038361 -17.06189919]
[69.66345215 -20.17633247]
[66.77818298 -34.89622498]
[63.89290619 -49.61611557]
[61.00763321 -64.33600616]
[58.12236023 -79.05590057]
[55.23709106 -93.77578735]
[44.98770523 -101.60604858]
[42.88759613 -113.92568207]
[49.52493668 -124.03865814]
[46.85914230 -138.79986572]
[44.19334412 -153.56109619]
[34.12665176 -165.76651001]
[39.47889709 -179.66624451]
[36.81309891 -194.42745972]
[34.14730453 -209.18867493]
[31.26203156 -223.90856934]
[28.15792274 -238.58387756]
[13.30877972 -236.42549133]
[-1.64814150 -235.22291565]
[-16.65138054 -234.98112488]
[-31.63928795 -235.70109558]
[-46.55027008 -237.37985229]
[-61.32305527 -240.01052856]
[-75.89694214 -243.58229065]
[-90.21204376 -248.08047485]
[-104.20952606 -253.48658752]
[-117.83187866 -259.77841187]
[-131.02313232 -266.93011475]
[-143.72904968 -274.91229248]
[-155.89746094 -283.69213867]
[-167.47833252 -293.23358154]
[-178.42408752 -303.49740601]
[-188.68974304 -314.44143677]
[-198.23310852 -326.02072144]
[-207.01498413 -338.18765259]
[-214.99928284 -350.89224243]
[-222.15318298 -364.08230591]
[-228.44729614 -377.70358276]
[-233.85574341 -391.70016479]
[-238.35630798 -406.01452637]
[-241.93051147 -420.58779907]
[-244.56365967 -435.36016846]
[-246.24491882 -450.27087402]
[-246.96737671 -465.25863647]
[-246.72808838 -480.26193237]
[-245.52803040 -495.21905518]
[-243.37211609 -510.06854248]
[-240.26922607 -524.74938965]
[-236.23210144 -539.20129395]
[-231.27732849 -553.36486816]
[-225.42526245 -567.18182373]
[-218.69998169 -580.59545898]
[-211.12907410 -593.55065918]
[-202.74369812 -605.99420166]
[-193.57827759 -617.87487793]
[-183.67048645 -629.14392090]
[-173.06105042 -639.75506592]
[-161.79354858 -649.66461182]
[-149.91429138 -658.83184814]
[-137.47209167 -667.21917725]
[-124.51806641 -674.79211426]
[-111.10546112 -681.51947021]
[-97.28939056 -687.37371826]
[-83.12661743 -692.33068848]
[-68.67535400 -696.37005615]
[-53.99497604 -699.47521973]
[-39.14580917 -701.63348389]
[-24.18887520 -702.83587646]
[-9.18563271 -703.07751465]
[5.80226469 -702.35736084]
[20.71322823 -700.67840576]
[35.48598862 -698.04760742]
[50.05983353 -694.47564697]
[64.37488556 -689.97735596]
[78.37230682 -684.57104492]
[91.99459076 -678.27905273]
[105.18575287 -671.12725830]
[117.89159393 -663.14489746]
[130.05990601 -654.36492920]
[141.64067078 -644.82336426]
[152.58630371 -634.55944824]
[162.85183716 -623.61529541]
[172.39509583 -612.03588867]
[181.17683411 -599.86883545]
[189.16098022 -587.16418457]
[196.31472778 -573.97406006]
[202.60868835 -560.35266113]
[208.01698303 -546.35601807]
[212.51741028 -532.04162598]
[216.09144592 -517.46832275]
[218.72442627 -502.69592285]
[220.40551758 -487.78521729]
[221.12780762 -472.79742432]
[220.88835144 -457.79412842]
[219.68812561 -442.83703613]
[217.53205872 -427.98754883]
[214.42900085 -413.30673218]
[210.39170837 -398.85488892]
[205.43678284 -384.69137573]
[199.58456421 -370.87448120]
[192.85913086 -357.46087646]
[185.28808594 -344.50576782]
[176.90257263 -332.06234741]
[167.73701477 -320.18176270]
[157.82910156 -308.91281128]
[147.21954346 -298.30184937]
[135.95193481 -288.39242554]
[124.07257843 -279.22528076]
[111.63027954 -270.83810425]
[98.67617798 -263.26531982]
[85.26349640 -256.53808594]
[71.44735718 -250.68403625]
[57.28453445 -245.72720337]
[42.83322525 -241.68798828]
[45.93733597 -227.01268005]
[49.38045502 -223.70300293]
[50.78101349 -218.19523621]
[48.90852356 -211.85447693]
[51.57431793 -197.09326172]
[54.24011230 -182.33204651]
[64.11613464 -171.18244934]
[58.95456314 -156.22688293]
[61.62035751 -141.46566772]
[64.28615570 -126.70445251]
[76.32733917 -113.93821716]
[69.95697784 -96.66106415]
[72.84225464 -81.94116974]
[75.72752380 -67.22128296]
[78.61280060 -52.50138855]
[81.49806976 -37.78149796]
[84.38334656 -23.06160545]
[87.59661865 -8.40981865]
[91.13629150 6.16655684]
[94.67596436 20.74293327]
[98.21563721 35.31930923]
[101.75531006 49.89568329]
[107.49668884 36.03795624]
[119.33731079 26.82928276]
[134.18206787 24.67678642]
[148.15057373 30.14312553]
[157.59149170 41.79941177]
[160.03698730 56.59872055]
[154.84782410 70.67254639]
[143.38043213 80.34202576]
[128.63235474 83.07958221]
[114.45870972 78.16962433]
[104.56484222 66.89639282]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[117.97474670 129.88003540]
[111.40377045 143.24685669]
[112.74200439 158.18704224]
[114.08023834 173.12722778]
[115.41847229 188.06739807]
[126.35826111 202.87963867]
[118.35918427 218.49955750]
[119.91970062 233.41815186]
[129.05072021 246.33850098]
[122.67948151 259.80166626]
[124.24000549 274.72027588]
[125.80052948 289.63885498]
[134.93154907 302.55920410]
[128.56030273 316.02236938]
[130.12083435 330.94097900]
[131.68135071 345.85955811]
[133.24188232 360.77816772]
[147.62513733 365.88549805]
[158.36192322 376.73373413]
[163.32043457 391.16897583]
[161.51615906 406.32507324]
[153.30734253 419.19277954]
[140.32383728 427.21722412]
[125.14354706 428.80511475]
[110.78051758 423.64117432]
[100.08653259 412.75076294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 198]
[8 196]
[9 195]
[10 194]
[12 192]
[13 191]
[16 189]
[17 188]
[18 187]
[19 186]
[21 184]
[24 181]
[25 180]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[42 157]
[43 156]
[44 155]
[46 153]
[47 152]
[48 151]
[49 148]
[50 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
