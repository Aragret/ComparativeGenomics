%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[95.86264038 776.59674072]
[81.05370331 779.08538818]
[66.05761719 779.86962891]
[51.06987762 778.93933105]
[36.28588486 776.30657959]
[21.89838028 772.00573730]
[8.09493160 766.09277344]
[-4.94450235 758.64489746]
[-17.04992676 749.75915527]
[-28.06352425 739.55139160]
[-37.84170914 728.15472412]
[-46.25699997 715.71765137]
[-53.19969177 702.40234375]
[-58.57926559 688.38244629]
[-62.32559204 673.84069824]
[-64.38983154 658.96667480]
[-64.74506378 643.95428467]
[-63.38666916 628.99926758]
[-60.33234787 614.29656982]
[-55.62192535 600.03790283]
[-49.31681061 586.40911865]
[-41.49919891 573.58795166]
[-32.27101517 561.74151611]
[-21.75256538 551.02423096]
[-10.08097744 541.57586670]
[2.59158397 533.51953125]
[16.09990692 526.96038818]
[30.26787949 521.98376465]
[44.91079712 518.65472412]
[59.83775711 517.01654053]
[74.85415649 517.09063721]
[76.63662720 502.19689941]
[78.41909027 487.30319214]
[80.09062958 472.39660645]
[81.65115356 457.47802734]
[74.28002930 447.88671875]
[75.45803070 435.44500732]
[85.09664154 426.87411499]
[86.87910461 411.98040771]
[88.66156769 397.08670044]
[90.44403839 382.19296265]
[92.22650146 367.29925537]
[93.11931610 352.32583618]
[93.11931610 337.32583618]
[93.11931610 322.32583618]
[79.95898438 317.45297241]
[69.22958374 308.36129761]
[62.23313904 296.12734985]
[59.82775497 282.21060181]
[62.32246399 268.27920532]
[69.43766785 256.01028442]
[80.33632660 246.88775635]
[93.72236633 242.02308655]
[93.94569397 227.02473450]
[94.16902161 212.02639771]
[94.39234924 197.02806091]
[94.61567688 182.02972412]
[94.50401306 167.03015137]
[94.05740356 152.03678894]
[93.61080170 137.04344177]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[92.15429688 76.83886719]
[91.93096924 61.84053421]
[91.70764160 46.84219742]
[83.76573181 33.15874863]
[91.31268311 20.31769180]
[88.95456696 16.67169952]
[87.97757721 12.84939575]
[88.26754761 9.30661106]
[89.57399750 6.41527891]
[91.54930878 4.42624140]
[92.21910095 -10.55879688]
[92.88888550 -25.54383659]
[93.55867004 -40.52887344]
[79.84033203 -47.01602173]
[69.67818451 -58.23090744]
[64.59768677 -72.44365692]
[65.34371185 -87.47798157]
[71.77146912 -101.04444122]
[82.87332916 -111.08904266]
[96.93665314 -116.10424805]
[97.60643768 -131.08927917]
[90.49306488 -145.22117615]
[98.79095459 -157.59027100]
[91.67758179 -171.72216797]
[99.97546387 -184.09124756]
[100.64524841 -199.07629395]
[101.20346069 -214.06590271]
[101.65007019 -229.05924988]
[102.09667206 -244.05259705]
[87.51421356 -247.83407593]
[74.13905334 -254.76609802]
[62.64210510 -264.50097656]
[53.60003662 -276.55041504]
[47.46639633 -290.30999756]
[44.54885101 -305.08956909]
[44.99373627 -320.14776611]
[48.77873993 -334.72930908]
[55.71400833 -348.10278320]
[65.45167542 -359.59738159]
[77.50329590 -368.63653564]
[91.26436615 -374.76684570]
[106.04463959 -377.68081665]
[121.10274506 -377.23226929]
[135.68338013 -373.44372559]
[149.05516052 -366.50521851]
[160.54739380 -356.76477051]
[169.58363342 -344.71096802]
[175.71060181 -330.94842529]
[178.62098694 -316.16741943]
[178.16879272 -301.10943604]
[174.37672424 -286.52972412]
[167.43498230 -273.15960693]
[157.69174194 -261.66973877]
[145.63574219 -252.63642883]
[131.87170410 -246.51280212]
[117.09001923 -243.60600281]
[116.64341736 -228.61264038]
[116.19680786 -213.61929321]
[119.13976288 -206.83985901]
[115.63028717 -198.40650940]
[114.96050262 -183.42146301]
[122.12178040 -170.36140442]
[113.77599335 -156.92048645]
[120.93727112 -143.86041260]
[112.59147644 -130.41949463]
[111.92169189 -115.43445587]
[125.48149872 -109.18459320]
[135.64295959 -98.18958282]
[140.83474731 -84.10376740]
[140.23649597 -69.06283569]
[133.90826416 -55.36001968]
[122.78608704 -45.09647751]
[108.54370880 -39.85908890]
[107.87392426 -24.87405014]
[107.20413971 -9.88901234]
[106.53434753 5.09602642]
[106.31101990 20.09436417]
[114.23695374 32.70502853]
[106.70597839 46.61886978]
[106.92930603 61.61720657]
[107.15263367 76.61553955]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[108.60414886 136.59683228]
[109.05075836 151.59019470]
[109.49736023 166.58354187]
[112.24223328 171.02343750]
[112.93981171 175.61329651]
[111.87580872 179.54812622]
[109.61401367 182.25305176]
[109.39068604 197.25138855]
[109.16735840 212.24972534]
[108.94403076 227.24806213]
[108.72070312 242.24641418]
[123.52246094 248.52464294]
[134.75471497 259.97485352]
[140.71864319 274.82296753]
[140.52844238 290.78442383]
[134.24285889 305.41543579]
[122.85150146 316.48727417]
[108.11931610 322.32583618]
[108.11931610 337.32583618]
[108.11931610 352.32583618]
[117.99435425 341.03497314]
[132.59399414 337.59252930]
[146.47293091 343.28244019]
[154.45466614 355.98251343]
[153.56221008 370.95593262]
[144.12841797 382.61801147]
[129.67187500 386.61904907]
[115.58450317 381.46676636]
[107.12021637 369.08172607]
[105.33775330 383.97543335]
[103.55529022 398.86914062]
[101.77281952 413.76287842]
[99.99035645 428.65658569]
[107.62808228 445.41207886]
[96.56976318 459.03854370]
[95.00923920 473.95715332]
[97.22887421 482.81777954]
[93.31280518 489.08566284]
[91.53034210 503.97937012]
[89.74787903 518.87310791]
[104.35767365 522.34466553]
[118.47650146 527.45898438]
[131.92028809 534.14947510]
[144.51377869 542.32879639]
[156.09277344 551.89044189]
[166.50633240 562.70965576]
[175.61868286 574.64544678]
[183.31103516 587.54217529]
[189.48309326 601.23168945]
[194.05439758 615.53558350]
[196.96536255 630.26733398]
[198.17800903 645.23486328]
[197.67655945 660.24304199]
[195.46754456 675.09625244]
[191.57974243 689.60083008]
[186.06385803 703.56768799]
[178.99179077 716.81469727]
[170.45574951 729.16925049]
[160.56701660 740.47015381]
[149.45451355 750.57012939]
[137.26310730 759.33752441]
[124.15174866 766.65808105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 188]
[32 187]
[33 186]
[34 184]
[35 183]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 168]
[44 167]
[45 166]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[64 146]
[65 145]
[66 144]
[67 143]
[69 141]
[74 140]
[75 139]
[76 138]
[77 137]
[84 130]
[85 129]
[87 127]
[89 125]
[90 124]
[91 122]
[92 121]
[93 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
