%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[153.49583435 390.05343628]
[162.24342346 377.83621216]
[172.64073181 366.98831177]
[184.47607422 357.73059082]
[177.00833130 344.72164917]
[169.54058838 331.71270752]
[156.49404907 324.52679443]
[156.33390808 308.70642090]
[148.86618042 295.69744873]
[141.39843750 282.68850708]
[128.35188293 275.50262451]
[128.19175720 259.68222046]
[120.72401428 246.67326355]
[113.25627899 233.66432190]
[114.04990387 248.64331055]
[110.82675171 263.29293823]
[103.81951141 276.55560303]
[93.53404236 287.47390747]
[80.71286011 295.25961304]
[66.28153229 299.35067749]
[51.28187561 299.45175171]
[36.79671860 295.55554199]
[23.87176895 287.94335938]
[13.44008160 277.16467285]
[6.25473213 263.99765015]
[2.83443689 249.39279175]
[3.42610955 234.40446472]
[7.98703718 220.11468506]
[16.18796158 207.55503845]
[27.43685341 197.63220215]
[40.92164230 191.06254578]
[55.66884995 188.32031250]
[70.61386871 189.60348511]
[84.67779541 194.81941223]
[96.84534454 203.59156799]
[106.23873901 215.28765869]
[103.13462830 200.61236572]
[100.03051758 185.93705750]
[93.34863281 199.36659241]
[80.52178955 207.14297485]
[65.52452087 206.85659790]
[53.00390244 198.59620667]
[46.83957672 184.92137146]
[48.94163132 170.06939697]
[58.65871811 158.64230347]
[72.97989655 154.18093872]
[87.46759033 158.06767273]
[97.63274384 169.09840393]
[96.51709747 154.13993835]
[87.85461426 142.02339172]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[80.63954163 45.28474426]
[87.40879822 32.01725006]
[86.29315186 17.05879593]
[82.53414154 8.73367596]
[85.27394104 1.86961937]
[73.73604584 -8.59531116]
[73.04390717 -23.79319191]
[83.09172058 -34.72831726]
[74.54673767 -48.04349136]
[81.51277924 -61.20873260]
[80.61996460 -76.18213654]
[79.72714996 -91.15554047]
[78.83433533 -106.12895203]
[77.94152069 -121.10235596]
[64.32301331 -123.79914093]
[51.75872803 -129.68133545]
[40.98108673 -138.40080261]
[32.61708832 -149.44416809]
[27.15184975 -162.16299438]
[24.90046692 -175.81198120]
[25.98984909 -189.59249878]
[30.35157776 -202.69941711]
[37.72618103 -214.36805725]
[47.67856216 -223.91891479]
[59.62368011 -230.79710388]
[72.86091614 -234.60472107]
[72.41431427 -249.59808350]
[71.96770477 -264.59143066]
[71.52110291 -279.58477783]
[71.07449341 -294.57812500]
[70.62789154 -309.57147217]
[57.20888519 -316.91162109]
[49.31771469 -329.89721680]
[48.98806763 -344.98886108]
[56.20836639 -358.13128662]
[68.95172882 -365.84313965]
[68.50511932 -380.83648682]
[68.05851746 -395.82983398]
[67.61190796 -410.82318115]
[67.16530609 -425.81652832]
[52.76528931 -430.55099487]
[40.85490417 -439.92749023]
[32.87239456 -452.81375122]
[29.78167915 -467.65365601]
[31.95598221 -482.65527344]
[39.13274765 -496.00704956]
[50.44533920 -506.09671021]
[64.52770996 -511.70584106]
[79.67935181 -512.15716553]
[94.07061768 -507.39614868]
[105.96369934 -497.99774170]
[113.92244720 -485.09680176]
[116.98580933 -470.25122070]
[114.78386688 -455.25363159]
[107.58251190 -441.91510010]
[96.25134277 -431.84631348]
[82.15865326 -426.26312256]
[82.60526276 -411.26977539]
[83.05186462 -396.27642822]
[83.49847412 -381.28308105]
[83.94507599 -366.28973389]
[97.12486267 -359.35006714]
[105.11460876 -346.66070557]
[105.68382263 -331.57620239]
[98.57955933 -318.14392090]
[85.62123871 -310.01809692]
[86.06784821 -295.02471924]
[86.51445007 -280.03137207]
[86.96105957 -265.03802490]
[87.40766144 -250.04467773]
[87.85427094 -235.05133057]
[103.56028748 -231.17900085]
[117.55703735 -223.04164124]
[128.71229553 -211.28843689]
[136.12113953 -196.86138916]
[139.17935181 -180.91989136]
[137.63270569 -164.74754333]
[131.59806824 -149.64874268]
[121.55459595 -136.84350586]
[108.30574036 -127.36894226]
[92.91492462 -121.99517059]
[93.80773926 -107.02176666]
[94.70055389 -92.04835510]
[95.59336853 -77.07495117]
[96.48619080 -62.10154724]
[104.96730804 -49.85737228]
[98.06513214 -35.62113571]
[109.34118652 -25.95748329]
[110.45993042 -10.78503799]
[100.24734497 0.97680348]
[101.25160217 15.94314766]
[102.36725616 30.90160179]
[111.02973175 43.01814651]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[118.24481201 139.75680542]
[111.47554779 153.02429199]
[112.59120178 167.98275757]
[114.70582581 182.83294678]
[117.80993652 197.50825500]
[120.91403961 212.18354797]
[126.26522827 226.19657898]
[133.73297119 239.20552063]
[141.20071411 252.21447754]
[154.78140259 260.33084106]
[154.40737915 275.22076416]
[161.87512207 288.22970581]
[169.34286499 301.23867798]
[182.92355347 309.35504150]
[182.54954529 324.24496460]
[190.01727295 337.25390625]
[197.48501587 350.26284790]
[211.44784546 344.71124268]
[226.05863953 341.20333862]
[241.01994324 339.81054688]
[256.02719116 340.56121826]
[270.77481079 343.44012451]
[284.96261597 348.38858032]
[298.30172729 355.30587769]
[310.52056885 364.05120850]
[321.37039185 374.44650269]
[330.63031006 386.28012085]
[338.11178589 399.31115723]
[343.66253662 413.27432251]
[347.16955566 427.88534546]
[348.56143188 442.84674072]
[347.80981445 457.85394287]
[344.92999268 472.60137939]
[339.98065186 486.78887939]
[333.06253052 500.12753296]
[324.31643677 512.34582520]
[313.92050171 523.19500732]
[302.08630371 532.45422363]
[289.05477905 539.93487549]
[275.09127808 545.48480225]
[260.48004150 548.99090576]
[245.51856995 550.38183594]
[230.51142883 549.62927246]
[215.76414490 546.74859619]
[201.57696533 541.79833984]
[188.23872375 534.87939453]
[176.02095032 526.13256836]
[165.17242432 515.73590088]
[155.91397095 503.90115356]
[148.43408203 490.86920166]
[142.88505554 476.90533447]
[139.37986755 462.29388428]
[137.98985291 447.33233643]
[138.74331665 432.32522583]
[141.62493896 417.57812500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[8 168]
[9 167]
[10 166]
[12 164]
[13 163]
[14 162]
[36 161]
[37 160]
[38 159]
[48 158]
[49 157]
[51 155]
[52 154]
[54 152]
[55 151]
[56 150]
[58 148]
[59 147]
[61 146]
[64 143]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
