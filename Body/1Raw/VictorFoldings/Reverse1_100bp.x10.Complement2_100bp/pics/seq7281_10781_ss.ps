%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[93.39897919 550.94622803]
[78.62924957 554.11352539]
[63.56557083 552.99005127]
[49.42908859 547.66680908]
[37.36578369 538.57543945]
[28.35357475 526.45288086]
[23.12304115 512.28186035]
[22.09819794 497.21112061]
[25.36212730 482.46243286]
[32.65023422 469.23141479]
[43.37170410 458.59060669]
[56.65740204 451.40264893]
[71.43030548 448.25018311]
[72.54595184 433.29171753]
[73.66160583 418.33328247]
[74.77725220 403.37481689]
[75.89289856 388.41638184]
[61.90086365 380.69796753]
[52.64183807 367.60278320]
[50.01093674 351.72317505]
[54.58494568 336.23001099]
[65.49681091 324.23937988]
[80.59948730 318.18603516]
[81.49230194 303.21261597]
[82.38512421 288.23922729]
[70.69476318 276.14895630]
[71.37919617 259.00701904]
[84.50291443 247.44035339]
[85.17269897 232.45532227]
[85.84248352 217.47027588]
[86.51226807 202.48524475]
[87.18205261 187.50019836]
[87.85183716 172.51516724]
[85.01013947 165.69265747]
[88.64479065 157.31250000]
[89.53760529 142.33909607]
[81.74555969 133.08650208]
[82.36683655 120.60459900]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[85.61843872 77.00764465]
[86.85561371 64.57167816]
[95.93399048 56.57733154]
[89.45873260 42.14190292]
[98.30065155 30.15567017]
[88.44279480 18.09497643]
[90.01277924 2.96256876]
[101.57155609 -6.36106873]
[102.90979004 -21.30125427]
[104.24802399 -36.24143982]
[93.00184631 -41.53326797]
[83.93926239 -50.00337601]
[77.92404175 -60.82394028]
[75.52320099 -72.94412994]
[76.95357513 -85.19213867]
[82.06230927 -96.38848877]
[90.34308624 -105.45962524]
[100.98620605 -111.54080963]
[112.95780182 -114.05858612]
[114.96181488 -128.92411804]
[116.96582794 -143.78964233]
[118.96984863 -158.65516663]
[120.97386169 -173.52070618]
[122.97787476 -188.38623047]
[124.98188782 -203.25175476]
[126.98590088 -218.11729431]
[128.98991394 -232.98281860]
[130.99392700 -247.84834290]
[116.31539154 -250.97212219]
[101.91514587 -255.19708252]
[87.87567139 -260.49902344]
[74.27738953 -266.84756470]
[61.19818497 -274.20635986]
[48.71298218 -282.53326416]
[36.89329147 -291.78054810]
[25.80681610 -301.89526367]
[15.51706028 -312.81945801]
[6.08296299 -324.49060059]
[-2.44143724 -336.84179688]
[-10.00731277 -349.80230713]
[-16.57132721 -363.29788208]
[-22.09588051 -377.25128174]
[-26.54932976 -391.58248901]
[-29.90616608 -406.20950317]
[-32.14715958 -421.04846191]
[-33.25947571 -436.01443481]
[-33.23674011 -451.02166748]
[-32.07908630 -465.98419189]
[-29.79314613 -480.81631470]
[-26.39200974 -495.43307495]
[-21.89516068 -509.75076294]
[-16.32835770 -523.68731689]
[-9.72348499 -537.16296387]
[-2.11837721 -550.10052490]
[6.44340515 -562.42584229]
[15.91281891 -574.06829834]
[26.23562622 -584.96130371]
[37.35269547 -595.04235840]
[49.20034790 -604.25378418]
[61.71072388 -612.54284668]
[74.81216431 -619.86193848]
[88.42961884 -626.16925049]
[102.48509216 -631.42864990]
[116.89807129 -635.60998535]
[131.58599854 -638.68927002]
[146.46475220 -640.64892578]
[161.44909668 -641.47766113]
[176.45320129 -641.17077637]
[191.39112854 -639.73004150]
[206.17730713 -637.16369629]
[220.72705078 -633.48645020]
[234.95701599 -628.71929932]
[248.78570557 -622.88964844]
[262.13388062 -616.03082275]
[274.92510986 -608.18212891]
[287.08609009 -599.38848877]
[298.54721069 -589.70037842]
[309.24279785 -579.17315674]
[319.11157227 -567.86718750]
[328.09704590 -555.84729004]
[336.14773560 -543.18218994]
[343.21749878 -529.94451904]
[349.26586914 -516.21008301]
[354.25817871 -502.05758667]
[358.16586304 -487.56802368]
[360.96649170 -472.82440186]
[362.64407349 -457.91122437]
[363.18899536 -442.91387939]
[362.59811401 -427.91827393]
[360.87478638 -413.01031494]
[358.02896118 -398.27536011]
[354.07687378 -383.79785156]
[349.04116821 -369.66067505]
[342.95071411 -355.94485474]
[335.84039307 -342.72894287]
[327.75091553 -330.08862305]
[318.72863770 -318.09628296]
[308.82522583 -306.82064819]
[298.09741211 -296.32629395]
[286.60665894 -286.67333984]
[274.41876221 -277.91708374]
[261.60351562 -270.10763550]
[248.23437500 -263.28976440]
[234.38789368 -257.50253296]
[220.14337158 -252.77905273]
[205.58242798 -249.14640808]
[190.78843689 -246.62541199]
[175.84616089 -245.23048401]
[160.84118652 -244.96961975]
[145.85945129 -245.84432983]
[143.85543823 -230.97880554]
[141.85142517 -216.11326599]
[139.84741211 -201.24774170]
[137.84339905 -186.38221741]
[135.83938599 -171.51669312]
[133.83537292 -156.65115356]
[131.83135986 -141.78562927]
[129.82734680 -126.92010498]
[127.82333374 -112.05457306]
[142.94886780 -102.87123108]
[152.56083679 -87.95129395]
[154.68272400 -70.27713776]
[148.84075928 -53.40587616]
[136.16873169 -40.75349808]
[119.18820953 -34.90320587]
[117.84997559 -19.96302032]
[116.51174164 -5.02283478]
[126.22953033 6.20660400]
[125.08519745 21.37714005]
[113.24083710 31.49390602]
[119.81181335 44.86071396]
[110.87417603 57.91556549]
[119.10492706 73.41464996]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[114.94985962 129.12525940]
[104.51101685 143.23190308]
[103.61819458 158.20532227]
[102.83687592 173.18495178]
[102.16709137 188.16999817]
[101.49730682 203.15502930]
[100.82752228 218.14007568]
[100.15773773 233.12510681]
[99.48795319 248.11015320]
[109.66100311 256.93759155]
[112.84603119 269.82424927]
[108.09777832 282.01177979]
[97.35852814 289.13204956]
[96.46571350 304.10543823]
[95.57289886 319.07885742]
[108.17254639 325.48162842]
[117.35238647 336.17062378]
[121.75149536 349.51052856]
[120.73705292 363.47698975]
[114.49515533 375.96368408]
[103.99773407 385.10021973]
[90.85135651 389.53201294]
[89.73570251 404.49047852]
[88.62005615 419.44891357]
[87.50440979 434.40737915]
[86.38875580 449.36584473]
[100.53057861 454.67483521]
[112.60301208 463.75408936]
[121.62739563 475.86761475]
[126.87216187 490.03338623]
[127.91214752 505.10305786]
[124.66303253 519.85498047]
[117.38822174 533.09338379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[23 192]
[24 191]
[25 190]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[35 180]
[36 179]
[39 177]
[41 175]
[44 173]
[46 171]
[49 168]
[50 167]
[51 166]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
