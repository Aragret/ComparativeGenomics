%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[242.08416748 364.48937988]
[253.10818481 354.28228760]
[244.50962830 341.99145508]
[235.91107178 329.70062256]
[224.05773926 327.28707886]
[216.79354858 317.11773682]
[218.45652771 304.32723999]
[210.04190063 291.90972900]
[201.62728882 279.49224854]
[193.21266174 267.07473755]
[184.79804993 254.65724182]
[176.38342285 242.23974609]
[167.96881104 229.82225037]
[159.55418396 217.40475464]
[156.17922974 216.38397217]
[153.13102722 213.67778015]
[151.19633484 209.45756531]
[151.05563354 204.23957825]
[143.20387268 191.45874023]
[135.35211182 178.67790222]
[127.50035858 165.89704895]
[119.64860535 153.11621094]
[113.67731476 166.87643433]
[99.23667908 170.93450928]
[86.97178650 162.29896545]
[85.92387390 147.33561707]
[96.86541748 137.07487488]
[111.72933197 139.07968140]
[104.84991455 125.75025940]
[97.97050476 112.42082977]
[90.79513550 99.24835205]
[83.32740021 86.23940277]
[75.85965729 73.23044586]
[68.39191437 60.22149277]
[52.25738144 51.34690857]
[52.98553085 33.81303406]
[45.32493210 20.91670799]
[37.66433334 8.02038097]
[30.00373650 -4.87594557]
[14.46695137 -0.37101048]
[-1.69534397 -0.02552324]
[-17.38960075 -3.85732508]
[-31.55536461 -11.60180664]
[-43.23693085 -22.73017502]
[-51.64782333 -36.48554993]
[-56.22373962 -51.93445587]
[-56.66040802 -68.03015137]
[-52.93381500 -83.68356323]
[-45.30146790 -97.83696747]
[-34.28458023 -109.53546143]
[-42.32575226 -122.19799042]
[-50.46096802 -134.80029297]
[-58.68977737 -147.34170532]
[-66.91858673 -159.88310242]
[-75.14739227 -172.42449951]
[-83.37619781 -184.96589661]
[-91.60501099 -197.50730896]
[-99.83381653 -210.04870605]
[-113.21772003 -203.24176025]
[-127.26921844 -197.94851685]
[-141.81774902 -194.23320007]
[-156.68669128 -192.14091492]
[-171.69555664 -191.69706726]
[-186.66215515 -192.90704346]
[-201.40481567 -195.75614929]
[-215.74455261 -200.20980835]
[-229.50730896 -206.21395874]
[-242.52601624 -213.69570923]
[-254.64262390 -222.56423950]
[-265.71008301 -232.71188354]
[-275.59399414 -244.01547241]
[-284.17443848 -256.33779907]
[-291.34719849 -269.52923584]
[-297.02523804 -283.42971802]
[-301.13961792 -297.87045288]
[-303.64038086 -312.67617798]
[-304.49722290 -327.66714478]
[-303.69967651 -342.66137695]
[-301.25744629 -357.47686768]
[-297.20019531 -371.93377686]
[-291.57717896 -385.85659790]
[-284.45663452 -399.07629395]
[-275.92498779 -411.43243408]
[-266.08581543 -422.77502441]
[-255.05859375 -432.96636963]
[-242.97714233 -441.88272095]
[-229.98811340 -449.41589355]
[-216.24920654 -455.47439575]
[-201.92718506 -459.98474121]
[-187.19592285 -462.89212036]
[-172.23422241 -464.16125488]
[-157.22370911 -463.77676392]
[-142.34660339 -461.74328613]
[-127.78350830 -458.08551025]
[-113.71118927 -452.84786987]
[-100.30047607 -446.09390259]
[-87.71416473 -437.90560913]
[-76.10504150 -428.38241577]
[-65.61403656 -417.63989258]
[-56.36848831 -405.80844116]
[-48.48063660 -393.03170776]
[-42.04623032 -379.46478271]
[-37.14337921 -365.27233887]
[-33.83160019 -350.62667847]
[-32.15109253 -335.70559692]
[-32.12226105 -320.69018555]
[-33.74544907 -305.76275635]
[-37.00095749 -291.10446167]
[-41.84926224 -276.89331055]
[-48.23151398 -263.30175781]
[-56.07024002 -250.49484253]
[-65.27027893 -238.62797546]
[-75.71995544 -227.84523010]
[-87.29241943 -218.27751160]
[-79.06360626 -205.73611450]
[-70.83480072 -193.19470215]
[-62.60599136 -180.65330505]
[-54.37718582 -168.11190796]
[-46.14837646 -155.57051086]
[-37.91957092 -143.02911377]
[-31.62191391 -139.16111755]
[-29.66322899 -130.23916626]
[-21.62205505 -117.57663727]
[-8.50036812 -122.12837982]
[5.31434155 -123.63466644]
[19.12422180 -122.01588440]
[32.23087692 -117.35036469]
[43.97068405 -109.87060547]
[53.74840927 -99.95171356]
[61.06735611 -88.09253693]
[65.55462646 -74.89063263]
[66.98009491 -61.01213837]
[65.26824188 -47.15814209]
[60.50210190 -34.02929306]
[52.91927338 -22.29035568]
[42.90006256 -12.53654289]
[50.56066132 0.35978377]
[58.22126007 13.25611019]
[65.88185883 26.15243721]
[77.52284241 29.44090271]
[84.01055908 40.12235260]
[81.40087128 52.75375366]
[88.86860657 65.76270294]
[96.33634949 78.77165985]
[103.80409241 91.78060913]
[107.34632874 93.30537415]
[110.19927979 96.38410187]
[111.68399048 100.67393494]
[111.29993439 105.54141235]
[118.17934418 118.87084198]
[125.05876160 132.20027161]
[132.42944336 145.26446533]
[140.28120422 158.04530334]
[148.13296509 170.82614136]
[155.98471069 183.60697937]
[163.83647156 196.38783264]
[171.97167969 208.99014282]
[180.38630676 221.40763855]
[188.80091858 233.82513428]
[197.21554565 246.24263000]
[205.63015747 258.66012573]
[214.04478455 271.07760620]
[222.45939636 283.49511719]
[230.87402344 295.91259766]
[247.62393188 303.56259155]
[248.20190430 321.10205078]
[256.80047607 333.39288330]
[265.39901733 345.68371582]
[278.76666260 338.82662964]
[292.94354248 333.85366821]
[307.66552734 330.85754395]
[322.65835571 329.89401245]
[337.64276123 330.98104858]
[352.33956909 334.09841919]
[366.47497559 339.18804932]
[379.78564453 346.15509033]
[392.02362061 354.86975098]
[402.96090698 365.16973877]
[412.39376831 376.86309814]
[420.14648438 389.73202515]
[426.07458496 403.53677368]
[430.06765747 418.02020264]
[432.05130005 432.91244507]
[431.98858643 447.93606567]
[429.88064575 462.81124878]
[425.76678467 477.26080322]
[419.72363281 491.01559448]
[411.86373901 503.81933594]
[402.33358765 515.43353271]
[391.31066895 525.64184570]
[379.00036621 534.25402832]
[365.63195801 541.10968018]
[351.45455933 546.08111572]
[336.73223877 549.07562256]
[321.73928833 550.03753662]
[306.75503540 548.94885254]
[292.05856323 545.82989502]
[277.92370605 540.73876953]
[264.61380005 533.77026367]
[252.37675476 525.05426025]
[241.44058228 514.75311279]
[232.00898743 503.05874634]
[224.25767517 490.18896484]
[218.33106995 476.38357544]
[214.33956909 461.89971924]
[212.35752869 447.00726318]
[212.42187500 431.98364258]
[214.53141785 417.10870361]
[218.64683533 402.65957642]
[224.69148254 388.90545654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[28 151]
[29 150]
[30 149]
[31 145]
[32 144]
[33 143]
[34 142]
[36 139]
[37 138]
[38 137]
[39 136]
[50 123]
[51 122]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
