%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[98.07363892 594.09307861]
[83.32972717 591.22161865]
[69.07406616 586.48828125]
[55.54076004 579.97076416]
[42.95203400 571.77612305]
[31.51460266 562.03894043]
[21.41628265 550.91900635]
[12.82289600 538.59899902]
[5.87555408 525.28125000]
[0.68833876 511.18441772]
[-2.65357113 496.53994751]
[-4.09529829 481.58837891]
[-3.61316872 466.57519531]
[-1.21509886 451.74691772]
[3.05953240 437.34707642]
[9.14053154 423.61209106]
[16.92804337 410.76751709]
[26.29419136 399.02426147]
[37.08517075 388.57519531]
[49.12379074 379.59188843]
[62.21235657 372.22183228]
[76.13594818 366.58605957]
[90.66593170 362.77713013]
[105.56370544 360.85757446]
[105.56370544 345.85757446]
[105.56370544 330.85757446]
[97.82640839 318.13031006]
[105.56370544 304.33013916]
[105.34037781 289.33178711]
[104.89376831 274.33843994]
[101.55251312 267.74618530]
[104.55381012 259.11889648]
[104.33048248 244.12057495]
[104.10715485 229.12223816]
[96.18122101 216.51156616]
[103.71219635 202.59773254]
[103.48886871 187.59939575]
[103.26554108 172.60105896]
[101.92730713 157.66087341]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[70.70941925 35.57705688]
[68.43992615 20.53365135]
[77.29558563 8.61254025]
[74.84985352 -6.18673038]
[72.40412903 -20.98600197]
[69.95840454 -35.78527069]
[67.51267242 -50.58454132]
[65.06694794 -65.38381195]
[62.62121964 -80.18308258]
[59.30777740 -84.21646881]
[58.00324631 -88.67197418]
[58.53201675 -92.71368408]
[60.41214752 -95.69654083]
[58.62968063 -110.59026337]
[49.30731583 -123.37322235]
[55.47739792 -136.92974854]
[53.69493103 -151.82345581]
[51.91246796 -166.71717834]
[50.13000107 -181.61090088]
[38.50714493 -186.21275330]
[29.99314499 -195.26704407]
[26.15900993 -207.01348877]
[27.67402077 -219.20388794]
[34.18976974 -229.53239441]
[44.41783142 -236.07165527]
[43.07959747 -251.01184082]
[41.74136353 -265.95202637]
[40.40312958 -280.89221191]
[39.06489563 -295.83239746]
[25.23278999 -302.36080933]
[16.58269119 -314.85369873]
[15.35536003 -329.89898682]
[21.78060722 -343.44784546]
[34.04235840 -351.90451050]
[32.70412445 -366.84469604]
[31.36589050 -381.78488159]
[30.02765656 -396.72506714]
[14.19593143 -405.56329346]
[6.90281773 -421.99163818]
[10.89595127 -439.35556030]
[24.39249802 -450.74478149]
[22.61003113 -465.63851929]
[20.82756615 -480.53222656]
[19.04509926 -495.42593384]
[4.14616489 -497.91558838]
[-9.44723797 -504.50317383]
[-20.63315201 -514.65460205]
[-28.50478745 -527.54705811]
[-32.42402267 -542.13525391]
[-32.07314682 -557.23669434]
[-27.48059845 -571.62713623]
[-19.01868057 -584.14007568]
[-7.37335920 -593.76104736]
[6.51132965 -599.71014404]
[21.50981712 -601.50512695]
[36.40624237 -599.00054932]
[49.99302292 -592.39929199]
[61.16873169 -582.23663330]
[69.02741241 -569.33630371]
[72.93199158 -554.74414062]
[72.56594086 -539.64306641]
[67.95893860 -525.25726318]
[59.48445511 -512.75286865]
[47.82947540 -503.14358521]
[33.93881607 -497.20840454]
[35.72128296 -482.31469727]
[37.50374985 -467.42095947]
[39.28621674 -452.52725220]
[50.64611435 -448.24615479]
[59.15820694 -439.48959351]
[63.16311264 -427.87658691]
[61.84279251 -415.59097290]
[55.38679123 -404.97079468]
[44.96784210 -398.06329346]
[46.30607605 -383.12310791]
[47.64431000 -368.18292236]
[48.98254395 -353.24273682]
[62.55201721 -347.09985352]
[71.28288269 -334.90856934]
[72.74893188 -319.88467407]
[66.45676422 -306.05334473]
[54.00508118 -297.17062378]
[55.34331512 -282.23043823]
[56.68154907 -267.29025269]
[58.01978302 -252.35008240]
[59.35801697 -237.40989685]
[74.91931152 -229.06016541]
[82.41930389 -212.89845276]
[78.68375397 -195.31649780]
[65.02371979 -183.39335632]
[66.80618286 -168.49964905]
[68.58864594 -153.60592651]
[70.37111664 -138.71220398]
[79.56598663 -126.99455261]
[73.52339935 -112.37272644]
[75.30586243 -97.47901154]
[77.42048645 -82.62881470]
[79.86621857 -67.82954407]
[82.31194305 -53.03026962]
[84.75767517 -38.23099899]
[87.20339966 -23.43172836]
[89.64912415 -8.63245773]
[92.09485626 6.16681290]
[104.31507874 14.60492325]
[107.00621796 29.57864761]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.72657776 155.21514893]
[123.48274231 141.82281494]
[135.97547913 133.52032471]
[150.93920898 132.47789001]
[164.46246338 138.96801758]
[173.01028442 151.29420471]
[174.34829712 166.23440552]
[168.12673950 179.88330078]
[155.97192383 188.67309570]
[141.06108093 190.30615234]
[127.29187775 184.35560608]
[118.26387787 172.37773132]
[118.48720551 187.37606812]
[118.71053314 202.37440491]
[126.65244293 216.05784607]
[119.10549164 228.89891052]
[119.32881927 243.89724731]
[119.55214691 258.89556885]
[119.88712311 273.89184570]
[120.33372498 288.88519287]
[123.47785187 294.70120239]
[123.24739075 300.37957764]
[120.56370544 304.33013916]
[128.30101013 318.13031006]
[120.56370544 330.85757446]
[120.56370544 345.85757446]
[120.56370544 360.85757446]
[135.46147156 362.77713013]
[149.99145508 366.58605957]
[163.91505432 372.22183228]
[177.00361633 379.59188843]
[189.04223633 388.57519531]
[199.83322144 399.02426147]
[209.19937134 410.76751709]
[216.98687744 423.61209106]
[223.06787109 437.34707642]
[227.34251404 451.74691772]
[229.74058533 466.57519531]
[230.22270203 481.58837891]
[228.78097534 496.53994751]
[225.43907166 511.18441772]
[220.25186157 525.28125000]
[213.30451965 538.59899902]
[204.71113586 550.91900635]
[194.61280823 562.03894043]
[183.17538452 571.77612305]
[170.58665466 579.97076416]
[157.05334473 586.48828125]
[142.79768372 591.22161865]
[128.05377197 594.09307861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 187]
[25 186]
[26 185]
[28 183]
[29 180]
[30 179]
[32 178]
[33 177]
[34 176]
[36 174]
[37 173]
[38 172]
[39 161]
[40 160]
[41 159]
[42 158]
[44 156]
[45 155]
[46 154]
[47 153]
[50 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[60 143]
[61 142]
[63 140]
[64 139]
[65 138]
[66 137]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[81 124]
[82 123]
[83 122]
[84 121]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
