%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[16.82627487 397.74545288]
[15.17089653 412.66574097]
[12.08321095 427.35659790]
[7.59205008 441.68087769]
[1.73934698 455.50482178]
[-5.42025185 468.69937134]
[-13.81989765 481.14129639]
[-23.38116455 492.71441650]
[-34.01477814 503.31072998]
[-45.62144852 512.83129883]
[-58.09281540 521.18713379]
[-71.31242371 528.30035400]
[-85.15684509 534.10443115]
[-99.49681854 538.54522705]
[-114.19844818 541.58123779]
[-129.12446594 543.18420410]
[-144.13551331 543.33905029]
[-159.09143066 542.04443359]
[-173.85256958 539.31237793]
[-188.28111267 535.16833496]
[-202.24234009 529.65112305]
[-215.60589600 522.81219482]
[-228.24700928 514.71545410]
[-240.04763794 505.43637085]
[-250.89759827 495.06170654]
[-260.69561768 483.68829346]
[-269.35015869 471.42233276]
[-276.78045654 458.37832642]
[-282.91714478 444.67807007]
[-287.70288086 430.44949341]
[-291.09298706 415.82546997]
[-293.05584717 400.94247437]
[-293.57312012 385.93954468]
[-292.63995361 370.95675659]
[-290.26510620 356.13394165]
[-286.47070312 341.60955811]
[-281.29217529 327.51916504]
[-274.77789307 313.99438477]
[-266.98867798 301.16146851]
[-257.99728394 289.14025879]
[-247.88760376 278.04293823]
[-236.75407410 267.97317505]
[-224.70063782 259.02499390]
[-211.83984375 251.28190613]
[-198.29176331 244.81623840]
[-184.18289185 239.68833923]
[-169.64495850 235.94610596]
[-154.81373596 233.62446594]
[-139.82766724 232.74511719]
[-124.82668304 233.31623840]
[-109.95085907 235.33251953]
[-95.33908844 238.77513123]
[-81.12779236 243.61192322]
[-67.44966125 249.79774475]
[-54.43241882 257.27484131]
[-42.19759369 265.97338867]
[-32.36701202 254.64378357]
[-22.53643227 243.31419373]
[-12.70585155 231.98460388]
[-2.87527084 220.65499878]
[6.95530987 209.32540894]
[9.45237732 194.64161682]
[24.34065628 189.28906250]
[34.17123795 177.95947266]
[19.31284142 180.01570129]
[6.02955532 173.04762268]
[-0.72428435 159.65412903]
[1.57033730 144.83067322]
[12.05758286 134.10604858]
[26.82596970 131.48025513]
[40.36725616 137.93266296]
[47.63087082 151.05668640]
[45.90719223 165.95843506]
[57.01442719 155.87730408]
[68.12165833 145.79615784]
[76.90225983 133.63470459]
[82.97609711 119.91944122]
[89.04992676 106.20417786]
[94.81596375 92.35668945]
[100.27132416 78.38388824]
[105.62250519 64.37086487]
[110.86922455 50.31839752]
[116.11594391 36.26592636]
[113.69443512 20.63112831]
[125.39474487 11.41418266]
[130.64146423 -2.63828897]
[135.88818359 -16.69075966]
[139.86027527 -31.15528488]
[142.52607727 -45.91650009]
[145.19186401 -60.67771912]
[138.56498718 -77.85810852]
[150.41476440 -90.80220795]
[152.86048889 -105.60147858]
[155.30621338 -120.40074921]
[157.75195312 -135.20002747]
[160.19767761 -149.99929810]
[162.64340210 -164.79856873]
[165.08912659 -179.59783936]
[151.18556213 -185.41055298]
[138.99763489 -194.27345276]
[129.18261719 -205.70857239]
[122.26982117 -219.09924316]
[118.63204193 -233.72331238]
[118.46546936 -248.79211426]
[121.77908325 -263.49301147]
[128.39418030 -277.03323364]
[137.95402527 -288.68252563]
[149.94305420 -297.81268311]
[163.71472168 -303.93133545]
[178.52635193 -306.70849609]
[193.57914734 -305.99438477]
[208.06134033 -301.82751465]
[221.19194031 -294.43264771]
[232.26280212 -284.20852661]
[240.67691040 -271.70654297]
[245.98049927 -257.60092163]
[247.88754272 -242.65234375]
[246.29519653 -227.66697693]
[241.28933716 -213.45295715]
[233.13993835 -200.77684021]
[222.28646851 -190.32223511]
[209.31425476 -182.65292358]
[194.92286682 -178.18252563]
[179.88839722 -177.15209961]
[177.44267273 -162.35282898]
[174.99694824 -147.55355835]
[172.55122375 -132.75428772]
[170.10548401 -117.95502472]
[167.65975952 -103.15575409]
[165.21403503 -88.35648346]
[172.00120544 -78.34344482]
[170.08474731 -65.99391174]
[159.95307922 -58.01192474]
[157.28729248 -43.25070572]
[154.62149048 -28.48948860]
[164.86154175 -39.45039368]
[178.81167603 -44.96343994]
[193.77835083 -43.96413803]
[206.87173462 -36.64544296]
[215.56370544 -24.42047882]
[218.17596436 -9.64969444]
[214.20414734 4.81490374]
[204.41513062 16.18042755]
[190.69902039 22.25237274]
[175.70419312 21.85834312]
[162.32591248 15.07441711]
[153.14732361 3.21046638]
[149.94065857 -11.44404221]
[144.69393921 2.60842919]
[139.44721985 16.66090012]
[142.24400330 31.29057121]
[130.16841125 41.51264191]
[124.92169952 55.56511307]
[119.67498016 69.61758423]
[120.28028870 76.98341370]
[114.24411774 83.83924866]
[108.78876495 97.81204224]
[109.82102203 101.52780151]
[109.21041870 105.68051147]
[106.79853058 109.52626801]
[102.76519775 112.27800751]
[96.69136047 125.99327850]
[90.61753082 139.70854187]
[102.12993622 130.09269714]
[115.36985779 123.04255676]
[129.77432251 118.85789490]
[144.73085022 117.71663666]
[159.60346985 119.66732025]
[173.75979614 124.62699890]
[186.59790039 132.38478088]
[197.57188416 142.61079407]
[206.21514893 154.87023926]
[212.16017151 168.64183044]
[215.15415955 183.33999634]
[215.06980896 198.33976746]
[211.91070557 213.00332642]
[205.81118774 226.70718384]
[197.03060913 238.86865234]
[185.94230652 248.97061157]
[173.01776123 256.58352661]
[158.80654907 261.38366699]
[143.91293335 263.16699219]
[128.97019958 261.85760498]
[114.61370850 257.51119995]
[101.45391083 250.31260681]
[90.05036926 240.56790161]
[80.88796997 228.69143677]
[74.35630035 215.18820190]
[70.73309326 200.63235474]
[70.17240143 185.64283752]
[72.69807434 170.85700989]
[78.20279694 156.90339661]
[67.09556580 166.98454285]
[55.98833084 177.06567383]
[45.50082779 187.79005432]
[35.67024994 199.11964417]
[32.47003174 214.61381531]
[18.28490257 219.15599060]
[8.45432186 230.48558044]
[-1.37625873 241.81517029]
[-11.20683956 253.14477539]
[-21.03742027 264.47436523]
[-30.86800194 275.80395508]
[-20.53152847 286.69030762]
[-11.29400826 298.52346802]
[-3.24169183 311.19296265]
[3.55023599 324.58047485]
[9.01836014 338.56097412]
[13.11162376 353.00399780]
[15.79181004 367.77465820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 203]
[57 202]
[58 201]
[59 200]
[60 199]
[61 198]
[63 196]
[64 195]
[73 194]
[74 193]
[75 192]
[76 163]
[77 162]
[78 161]
[79 157]
[80 156]
[81 154]
[82 153]
[83 152]
[85 150]
[86 149]
[87 148]
[88 135]
[89 134]
[90 133]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
