%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[58.05303574 668.07977295]
[43.62477112 663.60742188]
[31.04172516 655.25018311]
[21.32394600 643.68548584]
[15.25921154 629.85095215]
[13.33916092 614.86791992]
[15.71944618 599.95111084]
[22.20710754 586.30975342]
[32.27621841 575.04968262]
[45.11052322 567.08367920]
[59.66959763 563.05749512]
[52.12264633 550.21643066]
[60.06455231 536.53302002]
[60.28787994 521.53466797]
[60.51120758 506.53631592]
[60.73453522 491.53799438]
[60.95786285 476.53964233]
[48.54053497 484.95449829]
[34.17475891 480.63888550]
[28.45045662 466.77410889]
[35.58736801 453.58074951]
[50.32442474 450.78448486]
[61.79733658 460.44509888]
[63.13557053 445.50491333]
[64.47380829 430.56472778]
[65.81204224 415.62454224]
[53.55028915 407.16790771]
[47.12504196 393.61901855]
[48.35237503 378.57376099]
[57.00247192 366.08084106]
[70.83457947 359.55242920]
[72.17281342 344.61224365]
[73.51104736 329.67205811]
[74.51530457 314.70571899]
[75.18508911 299.72067261]
[75.85487366 284.73565674]
[76.52465820 269.75061035]
[77.08287048 254.76098633]
[77.52947998 239.76763916]
[77.97608185 224.77429199]
[78.42269135 209.78094482]
[67.56536865 220.13075256]
[52.60393524 221.20570374]
[40.37855530 212.51432800]
[36.47850418 198.03021240]
[42.68683624 184.37528992]
[56.16518402 177.79243469]
[70.75142670 181.29119873]
[79.77748871 193.27380371]
[81.78150177 178.40827942]
[83.78551483 163.54273987]
[77.81795502 149.89585876]
[87.32960510 137.25311279]
[89.33361816 122.38758850]
[91.33763123 107.52205658]
[80.94950104 118.34272003]
[66.57061768 122.61446381]
[51.95959091 119.22065735]
[40.93570709 109.04844666]
[36.38058090 94.75680542]
[39.48491287 80.08155060]
[49.43724060 68.85875702]
[63.63604355 64.02202606]
[78.36978912 66.83567047]
[89.78712463 76.56421661]
[94.90348816 90.66375732]
[99.09049988 76.25997925]
[95.51284027 60.84858704]
[106.49521637 50.78694153]
[110.68222046 36.38315964]
[114.43852234 21.86109924]
[117.76078796 7.23363972]
[121.08304596 -7.39382029]
[124.40530396 -22.02128029]
[116.24713898 -35.29087067]
[119.82475281 -50.07786942]
[132.52555847 -57.77365875]
[128.03694153 -72.94477844]
[138.40095520 -83.64226532]
[141.72322083 -98.26972961]
[145.04548645 -112.89718628]
[148.36773682 -127.52465057]
[151.69000244 -142.15211487]
[155.01225281 -156.77957153]
[158.22552490 -171.43135071]
[161.32963562 -186.10665894]
[164.43374634 -200.78196716]
[153.55822754 -209.57888794]
[147.56253052 -222.14343262]
[147.56527710 -235.99905396]
[153.50892639 -248.44180298]
[164.18211365 -257.06802368]
[177.46609497 -260.23864746]
[180.78836060 -274.86608887]
[184.11062622 -289.49356079]
[187.43287659 -304.12103271]
[190.75514221 -318.74847412]
[193.09062195 -333.56555176]
[194.42886353 -348.50573730]
[195.76708984 -363.44592285]
[182.03170776 -369.85803223]
[171.31993103 -380.58340454]
[164.92527771 -394.32690430]
[163.61990356 -409.42895508]
[167.56146240 -424.06588745]
[176.27397156 -436.47024536]
[188.70536804 -445.14410400]
[203.35450745 -449.04010010]
[218.45242310 -447.68774414]
[232.17596436 -441.25033569]
[242.86795044 -430.50521851]
[249.23727417 -416.74996948]
[250.51481628 -401.64553833]
[246.54629517 -387.01586914]
[237.81092834 -374.62762451]
[225.36357117 -365.97665405]
[210.70727539 -362.10769653]
[209.36904907 -347.16751099]
[208.03080750 -332.22732544]
[218.35885620 -343.10534668]
[232.90277100 -346.77609253]
[247.15597534 -342.10211182]
[256.70196533 -330.53173828]
[258.58279419 -315.65011597]
[252.21569824 -302.06851196]
[239.57356262 -293.99533081]
[224.57368469 -293.93212891]
[211.86396790 -301.89849854]
[205.38259888 -315.42620850]
[202.06033325 -300.79876709]
[198.73808289 -286.17129517]
[195.41581726 -271.54382324]
[192.09356689 -256.91638184]
[204.21543884 -246.23121643]
[209.32408142 -230.80210876]
[205.93525696 -214.81045532]
[194.88127136 -202.64062500]
[179.10905457 -197.67785645]
[176.00494385 -183.00254822]
[172.90083313 -168.32723999]
[174.59210205 -161.13270569]
[169.63972473 -153.45730591]
[166.31745911 -138.82984924]
[162.99519348 -124.20239258]
[159.67294312 -109.57492828]
[156.35067749 -94.94747162]
[153.02842712 -80.32000732]
[157.75466919 -66.19514465]
[147.15301514 -54.45140076]
[155.28341675 -42.02432632]
[152.12254333 -27.14267540]
[139.03276062 -18.69902039]
[135.71051025 -4.07156086]
[132.38824463 10.55589962]
[129.06597900 25.18335915]
[130.44407654 27.62446785]
[130.93824768 30.75853920]
[130.27970886 34.25163651]
[128.32542419 37.67877960]
[125.08600616 40.57017136]
[120.89899445 54.97395325]
[124.77613831 69.35508728]
[113.49427795 80.44699097]
[109.30726624 94.85076904]
[106.20316315 109.52606964]
[104.19914246 124.39160156]
[102.19512939 139.25712585]
[108.01935577 153.96730042]
[98.65103912 165.54675293]
[96.64702606 180.41229248]
[94.64301300 195.27781677]
[93.41603851 210.22755432]
[92.96943665 225.22090149]
[92.52282715 240.21424866]
[92.07621765 255.20759583]
[94.94873810 263.87860107]
[91.50969696 270.42037964]
[90.83991241 285.40542603]
[90.17012787 300.39047241]
[89.50034332 315.37551880]
[91.90738678 320.00726318]
[92.26165771 324.63629150]
[90.90793610 328.48107910]
[88.45123291 331.01028442]
[87.11299896 345.95046997]
[85.77476501 360.89065552]
[98.22644806 369.77337646]
[104.51860809 383.60470581]
[103.05256653 398.62860107]
[94.32170105 410.81991577]
[80.75222778 416.96279907]
[79.41399384 431.90295410]
[78.07575989 446.84313965]
[76.73752594 461.78332520]
[75.95619965 476.76296997]
[75.73287201 491.76132202]
[75.50954437 506.75964355]
[75.28621674 521.75799561]
[75.06288910 536.75634766]
[82.59386444 550.67016602]
[74.66793823 563.28082275]
[89.10068512 567.73870850]
[101.69211578 576.08331299]
[111.42150879 587.63818359]
[117.50013733 601.46667480]
[119.43524170 616.44775391]
[117.06994629 631.36688232]
[110.59599304 645.01477051]
[100.53819275 656.28497314]
[87.71189880 664.26391602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 201]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[23 194]
[24 193]
[25 192]
[26 191]
[31 186]
[32 185]
[33 184]
[34 180]
[35 179]
[36 178]
[37 177]
[38 175]
[39 174]
[40 173]
[41 172]
[49 171]
[50 170]
[51 169]
[53 167]
[54 166]
[55 165]
[66 164]
[67 163]
[69 161]
[70 160]
[71 155]
[72 154]
[73 153]
[74 152]
[77 149]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 140]
[86 139]
[87 138]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
