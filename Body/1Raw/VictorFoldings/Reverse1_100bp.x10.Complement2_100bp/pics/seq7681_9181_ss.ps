%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[23.97787857 519.87274170]
[30.85569572 533.30249023]
[34.02233505 548.05499268]
[33.26188660 563.12426758]
[28.62620354 577.48297119]
[20.43135262 590.15209961]
[9.23606968 600.26788330]
[-4.19632959 607.14050293]
[-18.95000267 610.30145264]
[-34.01902008 609.53515625]
[-48.37594604 604.89392090]
[-61.04191208 596.69421387]
[-71.15332031 585.49499512]
[-78.02076721 572.05993652]
[-81.17601013 557.30505371]
[-80.40393066 542.23632812]
[-75.75715637 527.88122559]
[-67.55252075 515.21844482]
[-56.34943390 505.11132812]
[-42.91173172 498.24908447]
[-28.15562248 495.09951782]
[-13.08720207 495.87744141]
[-8.47319317 481.60470581]
[-3.85918379 467.33197021]
[-7.30642843 452.84176636]
[4.30067444 442.09069824]
[3.36706758 434.75924683]
[9.09108639 427.64071655]
[13.91708469 413.43826294]
[18.74308205 399.23580933]
[23.56908035 385.03332520]
[28.39507675 370.83087158]
[33.22107315 356.62841797]
[37.30074310 342.19387817]
[40.62300110 327.56640625]
[43.94525909 312.93896484]
[47.26752090 298.31149292]
[50.58977890 283.68402100]
[53.91204071 269.05657959]
[40.22393036 262.97299194]
[27.98185539 254.33300781]
[17.65739822 243.46713257]
[9.64872551 230.79168701]
[4.26522255 216.79284668]
[1.71554530 202.00794983]
[2.09953332 187.00494385]
[5.40430069 172.36047363]
[11.50466061 158.63781738]
[20.16786575 146.36511230]
[31.06248474 136.01515198]
[43.77109146 127.98707581]
[57.80624390 122.59100342]
[72.62919617 120.03609467]
[87.67055511 120.42237091]
[90.99282074 105.79490662]
[92.33105469 90.85472107]
[91.66127014 75.86968231]
[90.99148560 60.88464737]
[90.32169342 45.89960861]
[89.65190887 30.91456795]
[87.31642151 16.09749985]
[83.34432983 1.63297665]
[79.37223053 -12.83154678]
[75.40013885 -27.29607201]
[71.42803955 -41.76059341]
[65.55734253 -27.95715714]
[53.21609497 -19.43109894]
[38.22837448 -18.82431221]
[25.23828316 -26.32481575]
[18.27094650 -39.60849762]
[19.48526573 -54.55926514]
[28.50497437 -66.54445648]
[42.53521729 -71.85033417]
[57.22856522 -68.83281708]
[68.03226471 -58.42668152]
[65.91764069 -73.27687836]
[63.69252014 -88.11092377]
[61.46740341 -102.94496918]
[59.24228668 -117.77900696]
[57.01716995 -132.61305237]
[54.79205322 -147.44709778]
[52.56693268 -162.28114319]
[50.34181595 -177.11518860]
[36.73495483 -184.33734131]
[30.06772804 -198.02680969]
[32.70855331 -212.84199524]
[43.43834686 -223.13809204]
[41.21323013 -237.97213745]
[38.98811340 -252.80618286]
[23.99450302 -254.49557495]
[9.94938850 -260.00894165]
[-2.18961048 -268.97036743]
[-11.59483719 -280.76882935]
[-17.62502670 -294.59994507]
[-19.86903000 -309.52062988]
[-18.17385101 -324.51358032]
[-12.65506554 -338.55654907]
[-3.68895507 -350.69210815]
[8.11315536 -360.09277344]
[21.94657898 -366.11761475]
[36.86812973 -368.35586548]
[51.86043167 -366.65487671]
[65.90128326 -361.13067627]
[78.03336334 -352.15988159]
[87.42947388 -340.35415649]
[93.44898224 -326.51840210]
[95.68145752 -311.59597778]
[93.97470093 -296.60433960]
[88.44507599 -282.56561279]
[79.46959686 -270.43701172]
[67.66023254 -261.04547119]
[53.82215881 -255.03129578]
[56.04727554 -240.19725037]
[58.27239227 -225.36320496]
[71.55084229 -218.66836548]
[78.42221832 -205.28001404]
[76.06490326 -190.23686218]
[65.17585754 -179.34030151]
[67.40097809 -164.50625610]
[69.62609863 -149.67221069]
[71.85121155 -134.83816528]
[74.07633209 -120.00412750]
[76.30144501 -105.17008209]
[78.52656555 -90.33603668]
[80.75167847 -75.50199890]
[84.85263062 -69.35350037]
[82.89778900 -60.43069458]
[85.89256287 -45.73269272]
[89.86466217 -31.26816750]
[93.83675385 -16.80364418]
[97.80885315 -2.33911943]
[101.78095245 12.12540436]
[105.48729706 -2.40948415]
[114.13452148 -14.66613579]
[126.58493042 -23.03197670]
[141.20045471 -26.40633965]
[156.05818176 -24.34526443]
[169.20330811 -17.11992455]
[178.90638733 -5.68093538]
[183.89077759 8.46670532]
[183.50073242 23.46163368]
[177.78755188 37.33100891]
[167.50289917 48.25007248]
[153.99990845 54.78223801]
[139.05513000 56.06808853]
[124.63479614 51.93844223]
[112.63615417 42.93663025]
[104.63694763 30.24478340]
[105.30673218 45.22982025]
[105.97652435 60.21486282]
[106.64630890 75.19989777]
[107.31609344 90.18493652]
[113.72145081 76.62133789]
[123.95883942 65.65794373]
[137.05249023 58.33973694]
[151.75440979 55.36422729]
[166.66329956 57.01502609]
[180.35812378 63.13478851]
[191.53361511 73.14022064]
[199.12455750 86.07766724]
[202.40745544 100.71401215]
[201.06939697 115.65421295]
[195.23791504 129.47425842]
[185.46882629 140.85693359]
[172.69328308 148.71728516]
[158.12892151 152.30612183]
[143.16397095 151.28138733]
[129.22477722 145.74075317]
[117.63992310 136.21231079]
[109.51361084 123.60424805]
[105.62027740 109.11716461]
[102.29801941 123.74462891]
[116.03053284 129.89361572]
[128.29556274 138.60087585]
[138.62280273 149.53025818]
[146.61669922 162.26039124]
[151.97160339 176.30102539]
[154.48347473 191.11184692]
[154.05758667 206.12333679]
[150.71220398 220.75857544]
[144.57772827 234.45550537]
[135.89163208 246.68846130]
[124.98927307 256.98837280]
[112.29096985 264.96075439]
[98.28575134 270.30078125]
[83.51255798 272.80493164]
[68.53949738 272.37884521]
[65.21723938 287.00628662]
[61.89498138 301.63375854]
[58.57271957 316.26119995]
[55.25046158 330.88867188]
[51.92820358 345.51614380]
[64.57357788 337.44802856]
[79.46238708 339.27099609]
[89.78767395 350.15164185]
[90.82884979 365.11547852]
[82.10990906 377.32119751]
[67.61703491 381.18856812]
[53.97616577 374.94943237]
[47.42353058 361.45443726]
[42.59753418 375.65689087]
[37.77153397 389.85934448]
[32.94553757 404.06179810]
[28.11953926 418.26425171]
[23.29354286 432.46670532]
[18.57340813 446.70468140]
[21.69062805 462.21575928]
[10.41354942 471.94598389]
[5.79954052 486.21868896]
[1.18553114 500.49142456]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 210]
[23 209]
[24 208]
[26 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 192]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[54 172]
[55 171]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[75 127]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
