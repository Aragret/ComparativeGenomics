%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[205.96585083 474.25952148]
[200.51049805 460.28671265]
[195.05514526 446.31393433]
[189.59979248 432.34112549]
[184.14442444 418.36834717]
[172.30819702 409.32659912]
[174.49664307 393.65750122]
[162.66041565 384.61575317]
[164.84887695 368.94665527]
[156.52717590 381.42660522]
[141.59521484 382.85369873]
[131.06027222 372.17590332]
[132.68832397 357.26452637]
[145.27922058 349.11166382]
[159.55023193 353.72616577]
[155.14923096 339.38632202]
[150.74822998 325.04644775]
[146.34722900 310.70660400]
[131.80027771 307.50479126]
[120.73552704 297.38415527]
[116.19216919 282.98886108]
[119.48586273 268.15484619]
[129.82981873 256.88763428]
[125.42881775 242.54779053]
[121.02782440 228.20793152]
[116.62682343 213.86808777]
[112.22582245 199.52824402]
[107.82482910 185.18840027]
[103.42382812 170.84855652]
[98.97280121 185.17294312]
[88.44024658 195.85308838]
[74.17916870 200.50299072]
[59.37552643 198.08386230]
[47.33649063 189.13615417]
[40.75161362 175.65878296]
[41.09197617 160.66264343]
[48.28153610 147.49790955]
[60.71413040 139.10562134]
[75.61228180 137.36062622]
[89.64771271 142.65275574]
[99.68487549 153.79977417]
[97.68086243 138.93424988]
[95.67684937 124.06871796]
[93.67283630 109.20319366]
[91.55821228 94.35299683]
[89.33309174 79.51895142]
[86.55747986 64.77799225]
[83.23522186 50.15052795]
[79.91296387 35.52306747]
[76.42479706 50.11185455]
[70.01853943 63.67503738]
[60.96659088 75.63590240]
[49.65384674 85.48586273]
[36.56132126 92.80609894]
[22.24572563 97.28534698]
[7.31576014 98.73315430]
[-7.59374380 97.08794403]
[-21.84882736 92.41969299]
[-34.84335327 84.92687988]
[-46.02479553 74.92810822]
[-54.91770554 62.84853363]
[-61.14395523 49.20178223]
[-64.43880463 34.56812286]
[-64.66214752 19.56978607]
[-61.80449677 4.84450722]
[-55.98735428 -8.98158550]
[-47.45806885 -21.32060051]
[-36.57931137 -31.64787674]
[-23.81365204 -39.52429581]
[-9.70389271 -44.61494064]
[5.15001202 -46.70336533]
[20.11646652 -45.70075989]
[34.55908966 -41.64975739]
[47.86377716 -34.72261047]
[59.46480179 -25.21386719]
[68.86888123 -13.52784061]
[75.67615509 -0.16142665]
[79.59720612 14.31719875]
[82.48247528 -0.40269217]
[85.36775208 -15.12258339]
[88.25302124 -29.84247398]
[91.13829041 -44.56236649]
[94.02356720 -59.28225708]
[96.79917908 -74.02322388]
[90.17229462 -91.20361328]
[102.02207184 -104.14771271]
[104.46780396 -118.94698334]
[105.47206116 -133.91333008]
[105.02545929 -148.90667725]
[104.57884979 -163.90002441]
[104.02063751 -178.88963318]
[103.35085297 -193.87467957]
[102.68106842 -208.85971069]
[102.01128387 -223.84475708]
[87.37839508 -227.63552856]
[74.51382446 -235.57241821]
[64.56149292 -246.94969177]
[58.40634155 -260.75570679]
[56.59568787 -275.76278687]
[59.29053497 -290.63656616]
[66.25125885 -304.05444336]
[76.85890961 -314.82333374]
[90.17027283 -321.98568726]
[105.00170898 -324.90460205]
[120.03440857 -323.32052612]
[133.93168640 -317.37432861]
[145.45779419 -307.59475708]
[153.58784485 -294.85137939]
[157.59892273 -280.27731323]
[157.13435364 -265.16851807]
[152.23545837 -250.86845398]
[143.33782959 -238.64863586]
[131.23266602 -229.59567261]
[116.99632263 -224.51454163]
[117.66610718 -209.52949524]
[118.33589172 -194.54446411]
[119.00567627 -179.55941772]
[122.44471741 -173.01763916]
[119.57219696 -164.34663391]
[120.01880646 -149.35328674]
[120.46540833 -134.35992432]
[127.93374634 -147.36854553]
[139.99925232 -156.28051758]
[154.62869263 -159.59403992]
[169.35675049 -156.75073242]
[181.70147705 -148.22970581]
[189.58258057 -135.46694946]
[191.67195129 -120.61317444]
[187.61749268 -106.17151642]
[178.10244751 -94.57565308]
[164.73028564 -87.77968597]
[149.75442505 -86.92886353]
[135.69859314 -92.16654968]
[124.93141937 -102.61010742]
[119.26707458 -116.50125122]
[116.82134247 -101.70198059]
[123.60852051 -91.68894958]
[121.69206238 -79.33941650]
[111.56039429 -71.35742188]
[113.46511841 -64.21643066]
[108.74345398 -56.39698410]
[105.85818481 -41.67709351]
[102.97291565 -26.95720291]
[100.08763885 -12.23731136]
[97.20236969 2.48258042]
[94.31709290 17.20247269]
[94.54042053 32.20080948]
[97.86267853 46.82826996]
[101.18494415 61.45573044]
[111.26586151 50.34829712]
[126.24431610 51.15202713]
[135.07873535 63.27444077]
[131.25672913 77.77934265]
[117.59572601 83.97426605]
[104.16713715 77.29383850]
[106.39225006 92.12787628]
[110.60728455 98.99854279]
[108.53836060 107.19918060]
[110.54237366 122.06470490]
[112.54638672 136.93023682]
[114.55039978 151.79576111]
[117.76367950 166.44755554]
[122.16467285 180.78739929]
[126.56567383 195.12724304]
[130.96667480 209.46708679]
[135.36767578 223.80694580]
[139.76866150 238.14678955]
[144.16966248 252.48663330]
[159.05334473 256.01129150]
[170.10148621 266.44372559]
[174.41572571 280.90933228]
[170.93338013 295.49456787]
[160.68708801 306.30560303]
[165.08807373 320.64547729]
[169.48907471 334.98532104]
[173.89007568 349.32516479]
[178.82167053 363.49130249]
[191.04811096 373.53244019]
[188.46945190 388.20214844]
[200.69589233 398.24328613]
[198.11723328 412.91296387]
[203.57258606 426.88577271]
[209.02793884 440.85858154]
[214.48329163 454.83135986]
[219.93865967 468.80416870]
[234.83813477 466.57858276]
[249.85925293 467.72476196]
[264.24856567 472.18521118]
[277.28430176 479.73620605]
[288.31256104 489.99899292]
[296.78024292 502.45877075]
[302.26257324 516.49060059]
[304.48452759 531.39062500]
[303.33471680 546.41143799]
[298.87078857 560.79968262]
[291.31661987 573.83355713]
[281.05117798 584.85937500]
[268.58932495 593.32403564]
[254.55619812 598.80291748]
[239.65563965 601.02130127]
[224.63507080 599.86785889]
[210.24794006 595.40045166]
[197.21586609 587.84313965]
[186.19255066 577.57501221]
[177.73092651 565.11108398]
[172.25540161 551.07666016]
[170.04064941 536.17553711]
[171.19773865 521.15527344]
[175.66865540 506.76919556]
[183.22912598 493.73895264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[7 179]
[9 177]
[15 176]
[16 175]
[17 174]
[18 173]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 156]
[46 155]
[47 149]
[48 148]
[49 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 139]
[86 136]
[87 135]
[88 121]
[89 120]
[90 119]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
