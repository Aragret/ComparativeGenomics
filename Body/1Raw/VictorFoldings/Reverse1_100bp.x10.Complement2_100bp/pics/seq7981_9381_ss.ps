%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[333.55087280 378.47003174]
[323.55270386 367.28805542]
[313.55453491 356.10607910]
[303.55636597 344.92410278]
[293.55819702 333.74212646]
[283.56002808 322.56015015]
[269.30883789 318.22967529]
[265.87829590 302.78485107]
[251.62710571 298.45437622]
[248.19656372 283.00958252]
[238.19839478 271.82760620]
[228.20021057 260.64562988]
[213.94903564 256.31515503]
[210.51849365 240.87036133]
[200.52030945 229.68838501]
[190.52214050 218.50640869]
[177.68292236 219.59442139]
[166.39279175 212.99024963]
[160.88674927 200.91159058]
[163.37879944 187.67510986]
[153.54821777 176.34552002]
[143.71763611 165.01593018]
[139.10154724 163.79086304]
[135.20602417 159.65298462]
[133.76914978 153.19955444]
[124.28025055 141.58229065]
[114.79135132 129.96502686]
[105.30245209 118.34775543]
[90.89695740 116.78960419]
[81.73097992 105.56770325]
[83.08028412 91.14114380]
[73.59138489 79.52388000]
[64.10248566 67.90661621]
[54.61358643 56.28934860]
[57.68457413 70.97161865]
[56.35124207 85.91224670]
[50.72894287 99.81871033]
[41.30405426 111.48796082]
[28.89193153 119.91050720]
[14.56634331 124.35769653]
[-0.43340349 124.44480896]
[-14.80968094 120.16431427]
[-27.31879616 111.88651276]
[-36.87858582 100.32751465]
[-42.66203690 86.48728943]
[-44.16881561 71.56316376]
[-41.26857376 56.84621429]
[-34.21221161 43.60960770]
[-23.61017609 32.99844360]
[-10.37964725 25.93069077]
[4.33480024 23.01778221]
[19.26021957 24.51171494]
[33.10541534 30.28324890]
[44.67028046 39.83047104]
[38.80132294 26.02629471]
[32.93236160 12.22211838]
[27.06340027 -1.58205867]
[21.19443893 -15.38623524]
[19.23795509 -0.51437706]
[11.80584145 12.51496220]
[0.00060593 21.76895714]
[-14.42651367 25.87483215]
[-29.33534050 24.22350693]
[-42.51424026 17.05994225]
[-52.00819778 5.44681406]
[-56.40884399 -8.89314079]
[-55.06336975 -23.83267593]
[-48.17136383 -37.15559769]
[-36.75521851 -46.88553238]
[-22.50844955 -51.57910156]
[-7.54448175 -50.54004288]
[5.91687107 -43.92249298]
[15.87772655 -32.70977020]
[12.99245358 -47.42966080]
[10.10718060 -62.14955521]
[7.22190809 -76.86944580]
[3.17156911 -82.09498596]
[2.47309494 -87.73494720]
[4.47673321 -92.07020569]
[2.03100586 -106.86947632]
[-0.41472152 -121.66874695]
[-3.08051705 -136.42996216]
[-5.96578979 -151.14985657]
[-11.88290215 -137.36625671]
[-23.46940804 -127.83982086]
[-38.13685226 -124.69879913]
[-52.60849380 -128.64488220]
[-63.65132523 -138.79652405]
[-68.79835510 -152.88581848]
[-66.89971924 -167.76518250]
[-58.37958145 -180.11050415]
[-45.14136124 -187.16383362]
[-30.14250946 -187.34944153]
[-16.73380852 -180.62583923]
[-7.91078901 -168.49510193]
[-8.35739517 -183.48844910]
[-8.80400085 -198.48179626]
[-9.25060654 -213.47514343]
[-23.21416092 -219.63809204]
[-33.11434937 -231.25485229]
[-36.98548508 -246.01890564]
[-34.05895233 -260.99880981]
[-24.91581345 -273.22036743]
[-11.37144756 -280.25689697]
[3.88490343 -280.71133423]
[17.82407951 -274.49343872]
[27.67844582 -262.83779907]
[31.49141121 -248.05860901]
[28.50591087 -233.09033203]
[19.31471443 -220.90490723]
[5.74274302 -213.92175293]
[6.18934917 -198.92840576]
[6.63595486 -183.93505859]
[7.08256102 -168.94171143]
[8.75410175 -154.03512573]
[11.63937473 -139.31523132]
[15.03283787 -135.95466614]
[16.35123825 -130.42666626]
[14.38454914 -124.11447906]
[16.83027649 -109.31520844]
[19.27600479 -94.51593781]
[21.94179916 -79.75471497]
[24.82707214 -65.03482819]
[27.71234512 -50.31493378]
[30.59761810 -35.59504318]
[34.99861526 -21.25519562]
[40.86757660 -7.45101929]
[46.73653793 6.35315752]
[52.60549927 20.15733337]
[58.47446060 33.96150970]
[66.23085022 46.80045319]
[75.71974945 58.41771317]
[85.20864868 70.03498077]
[94.69754791 81.65224457]
[109.10304260 83.21039581]
[118.26902008 94.43229675]
[116.91971588 108.85885620]
[126.40861511 120.47612000]
[135.89752197 132.09338379]
[145.38641357 143.71064758]
[155.04722595 155.18534851]
[164.87780762 166.51493835]
[174.70838928 177.84454346]
[192.17778015 178.76095581]
[203.35926819 191.77206421]
[201.70411682 208.50823975]
[211.70228577 219.69021606]
[221.70045471 230.87217712]
[236.66677856 236.00247192]
[239.38218689 250.64746094]
[249.38035583 261.82943726]
[259.37854004 273.01141357]
[274.34484863 278.14169312]
[277.06027222 292.78668213]
[292.02658081 297.91699219]
[294.74200439 312.56198120]
[304.74017334 323.74395752]
[314.73834229 334.92593384]
[324.73651123 346.10791016]
[334.73468018 357.28988647]
[344.73284912 368.47183228]
[357.05307007 359.88290405]
[370.31875610 352.84167480]
[384.33645630 347.45080566]
[398.90176392 343.78894043]
[413.80224609 341.90945435]
[428.82064819 341.83981323]
[443.73794556 343.58096313]
[458.33660889 347.10754395]
[472.40371704 352.36810303]
[485.73416138 359.28598022]
[498.13351440 367.76025391]
[509.42095947 377.66735840]
[519.43194580 388.86279297]
[528.02044678 401.18331909]
[535.06115723 414.44924927]
[540.45147705 428.46716309]
[544.11285400 443.03259277]
[545.99176025 457.93316650]
[546.06085205 472.95156860]
[544.31915283 487.86880493]
[540.79199219 502.46734619]
[535.53088379 516.53424072]
[528.61254883 529.86444092]
[520.13781738 542.26348877]
[510.23028564 553.55053711]
[499.03448486 563.56109619]
[486.71362305 572.14910889]
[473.44741821 579.18939209]
[459.42932129 584.57916260]
[444.86373901 588.23999023]
[429.96310425 590.11834717]
[414.94467163 590.18688965]
[400.02752686 588.44458008]
[385.42913818 584.91693115]
[371.36239624 579.65527344]
[358.03250122 572.73645020]
[345.63375854 564.26123047]
[334.34704590 554.35327148]
[324.33691406 543.15710449]
[315.74935913 530.83593750]
[308.70959473 517.56945801]
[303.32031250 503.55114746]
[299.66006470 488.98544312]
[297.78228760 474.08471680]
[297.71429443 459.06631470]
[299.45712280 444.14923096]
[302.98535156 429.55096436]
[308.24749756 415.48443604]
[315.16687012 402.15478516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[8 154]
[10 152]
[11 151]
[12 150]
[14 148]
[15 147]
[16 146]
[20 143]
[21 142]
[22 141]
[25 140]
[26 139]
[27 138]
[28 137]
[31 134]
[32 133]
[33 132]
[34 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[73 125]
[74 124]
[75 123]
[76 122]
[79 121]
[80 120]
[81 119]
[82 116]
[83 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
