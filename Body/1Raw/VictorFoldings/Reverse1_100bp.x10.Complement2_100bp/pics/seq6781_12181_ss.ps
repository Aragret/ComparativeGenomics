%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[243.01708984 343.27658081]
[254.16218567 333.20025635]
[240.61732483 327.00460815]
[239.28096008 311.23995972]
[230.86634827 298.82244873]
[222.45173645 286.40496826]
[213.85316467 274.11413574]
[205.07255554 261.95266724]
[196.29196167 249.79121399]
[187.51135254 237.62976074]
[178.73075867 225.46830750]
[169.95014954 213.30683899]
[161.16954041 201.14538574]
[152.38894653 188.98393250]
[140.03135681 191.61227417]
[127.55163574 189.36338806]
[116.81002045 182.53656006]
[109.42119598 172.11616516]
[106.51166534 159.62979126]
[108.54806519 146.92434692]
[115.26276398 135.89292908]
[106.84814453 123.47543335]
[98.43352509 111.05793762]
[89.92669678 98.70343018]
[81.32813263 86.41259003]
[72.72956848 74.12174988]
[65.24604797 68.88394165]
[64.09608459 61.58329773]
[55.68146896 49.16580200]
[46.81057358 37.07004929]
[37.49568939 25.31279945]
[28.18080711 13.55554676]
[18.86592484 1.79829597]
[9.03534317 -9.53129673]
[-1.29132521 -20.41063118]
[-11.61799335 -31.28996658]
[-21.94466209 -42.16930008]
[-33.54573441 -32.65021896]
[-45.80344009 -23.99306297]
[-58.65388107 -16.24296951]
[-72.03005219 -9.44034004]
[-85.86222076 -3.62064457]
[-100.07826996 1.18577731]
[-114.60408783 4.95386648]
[-129.36393738 7.66397715]
[-144.28085327 9.30198097]
[-159.27709961 9.85933685]
[-174.27445984 9.33314037]
[-189.19474792 7.72613382]
[-203.96020508 5.04669571]
[-218.49380493 1.30879545]
[-232.71981812 -3.46807885]
[-246.56404114 -9.25902271]
[-259.95431519 -16.03384399]
[-272.82083130 -23.75722313]
[-285.09649658 -32.38888931]
[-296.71734619 -41.88384628]
[-307.62271118 -52.19258881]
[-317.75582886 -63.26137161]
[-327.06381226 -75.03248596]
[-335.49816895 -87.44456482]
[-343.01489258 -100.43288422]
[-349.57479858 -113.92974854]
[-355.14370728 -127.86477661]
[-359.69256592 -142.16532898]
[-363.19769287 -156.75682068]
[-365.64074707 -171.56321716]
[-367.00906372 -186.50729370]
[-367.29547119 -201.51115417]
[-366.49847412 -216.49656677]
[-364.62222290 -231.38540649]
[-361.67651367 -246.10003662]
[-357.67672729 -260.56375122]
[-352.64367676 -274.70117188]
[-346.60363770 -288.43853760]
[-339.58804321 -301.70428467]
[-331.63354492 -314.42919922]
[-322.78155518 -326.54693604]
[-313.07824707 -337.99438477]
[-302.57421875 -348.71179199]
[-291.32421875 -358.64331055]
[-279.38690186 -367.73718262]
[-266.82449341 -375.94595337]
[-253.70252991 -383.22683716]
[-240.08937073 -389.54190063]
[-226.05603027 -394.85821533]
[-211.67565918 -399.14804077]
[-197.02322388 -402.38900757]
[-182.17512512 -404.56427002]
[-167.20877075 -405.66241455]
[-152.20219421 -405.67776489]
[-137.23361206 -404.61022949]
[-122.38109589 -402.46539307]
[-107.72206116 -399.25439453]
[-93.33293915 -394.99398804]
[-79.28874969 -389.70642090]
[-65.66271210 -383.41921997]
[-52.52587128 -376.16519165]
[-39.94670868 -367.98211670]
[-27.99081039 -358.91271973]
[-16.72051239 -349.00421143]
[-6.19457102 -338.30831909]
[3.53213549 -326.88076782]
[12.40889549 -314.78112793]
[20.38942909 -302.07254028]
[27.43213081 -288.82119751]
[33.50028229 -275.09619141]
[38.56224442 -260.96911621]
[42.59162521 -246.51361084]
[45.56742477 -231.80502319]
[47.47412109 -216.92005920]
[48.30177307 -201.93630981]
[48.04607010 -186.93190002]
[46.70834732 -171.98504639]
[44.29557037 -157.17369080]
[40.82032776 -142.57504272]
[36.30072784 -128.26522827]
[30.76034546 -114.31883240]
[24.22805786 -100.80857849]
[16.73792267 -87.80490112]
[8.32899380 -75.37559509]
[-0.95489073 -63.58546066]
[-11.06532764 -52.49596786]
[-0.73865938 -41.61663437]
[9.58800888 -30.73730087]
[19.91467857 -19.85796547]
[21.38719559 -34.78551483]
[32.89583969 -44.40586090]
[47.84793854 -43.20803833]
[57.67824936 -31.87820816]
[56.75551987 -16.90661621]
[45.60833740 -6.86966801]
[30.62317467 -7.51658678]
[39.93805695 4.24066448]
[49.25294113 15.99791527]
[58.56782532 27.75516701]
[62.86166382 13.38286972]
[76.71775818 7.63755798]
[89.92191315 14.75446224]
[92.74051666 29.48726654]
[83.09579468 40.97549438]
[68.09896088 40.75118256]
[76.51358032 53.16867828]
[85.02040863 65.52318573]
[93.61897278 77.81402588]
[102.21753693 90.10486603]
[109.05133057 94.37942505]
[110.85102081 102.64331818]
[119.26564026 115.06081390]
[127.68025970 127.47830963]
[145.17401123 125.80441284]
[161.02513123 133.18360901]
[170.90489197 147.50123596]
[172.16578674 164.76168823]
[164.55039978 180.20332336]
[173.33100891 192.36479187]
[182.11160278 204.52624512]
[190.89221191 216.68769836]
[199.67280579 228.84915161]
[208.45341492 241.01060486]
[217.23402405 253.17205811]
[226.01461792 265.33352661]
[231.88006592 268.38442993]
[234.87471008 273.21447754]
[234.86923218 277.99035645]
[243.28384399 290.40783691]
[251.69845581 302.82534790]
[265.84521484 309.90914917]
[266.57968140 324.78564453]
[280.06900024 318.16864014]
[294.34796143 313.49349976]
[309.13864136 310.85116577]
[324.15313721 310.29306030]
[339.09915161 311.83010864]
[353.68579102 315.43234253]
[367.62911987 321.02969360]
[380.65771484 328.51312256]
[392.51794434 337.73706055]
[402.97900391 348.52188110]
[411.83721924 360.65768433]
[418.92019653 373.90826416]
[424.09002686 388.01565552]
[427.24612427 402.70529175]
[428.32702637 417.69122314]
[427.31167603 432.68173218]
[424.21984863 447.38500977]
[419.11175537 461.51489258]
[412.08679199 474.79632568]
[403.28173828 486.97076416]
[392.86795044 497.80123901]
[381.04815674 507.07693481]
[368.05242920 514.61730957]
[354.13372803 520.27551270]
[339.56295776 523.94152832]
[324.62380981 525.54388428]
[309.60702515 525.05151367]
[294.80493164 522.47387695]
[280.50564575 517.86120605]
[266.98751831 511.30328369]
[254.51368713 502.92776489]
[243.32695007 492.89764404]
[233.64505005 481.40823364]
[225.65644836 468.68310547]
[219.51667786 454.97000122]
[215.34521484 440.53585815]
[213.22326660 425.66159058]
[213.19215393 410.63677979]
[215.25247192 395.75384521]
[219.36410522 381.30255127]
[225.44703674 367.56411743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[4 167]
[5 166]
[6 165]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[21 150]
[22 149]
[23 148]
[24 146]
[25 145]
[26 144]
[28 143]
[29 142]
[30 136]
[31 135]
[32 134]
[33 133]
[34 126]
[35 125]
[36 124]
[37 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
