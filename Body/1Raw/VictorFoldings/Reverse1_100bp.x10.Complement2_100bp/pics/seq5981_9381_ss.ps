%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[114.84291840 536.47344971]
[105.77941895 524.51153564]
[97.68238068 511.87539673]
[90.60173035 498.64294434]
[84.58112335 484.89569092]
[79.65767670 470.71847534]
[75.86174774 456.19866943]
[73.21673584 441.42578125]
[71.73895264 426.49090576]
[71.43751526 411.48614502]
[72.31427002 396.50396729]
[74.36382294 381.63677979]
[77.57352448 366.97622681]
[81.92359924 352.61270142]
[87.38721466 338.63473511]
[93.93069458 325.12857056]
[101.51369476 312.17739868]
[110.08946228 299.86114502]
[119.60511780 288.25570679]
[130.00199890 277.43261719]
[141.21600342 267.45864868]
[153.17799377 258.39526367]
[165.81422424 250.29835510]
[158.73710632 237.07283020]
[151.66000366 223.84730530]
[144.58290100 210.62178040]
[137.50579834 197.39625549]
[122.12151337 188.95285034]
[122.86855316 170.55384827]
[115.59532166 157.43515015]
[113.14772797 172.23411560]
[103.16698456 183.43165588]
[88.74572754 187.55807495]
[74.35254669 183.33477783]
[64.44731903 172.07038879]
[62.09928894 157.25529480]
[68.03602600 143.48013306]
[80.41795349 135.01327515]
[95.40840912 134.47827148]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[68.13284302 46.18109512]
[65.93453217 42.09199524]
[65.61545563 38.02834702]
[66.83761597 34.72098160]
[62.01161957 20.51852798]
[57.18561935 6.31607151]
[52.35962296 -7.88638401]
[36.13782883 -12.67693901]
[26.06783104 -26.05963135]
[25.95992661 -42.64125061]
[35.65855789 -55.88564682]
[30.62164116 -70.01467896]
[25.58472633 -84.14370728]
[12.83193493 -88.47740173]
[5.01763153 -99.20806122]
[4.81349659 -112.28630829]
[12.07002831 -122.93394470]
[7.24403095 -137.13639832]
[2.41803312 -151.33885193]
[-2.40796447 -165.54132080]
[-17.07689667 -162.33157349]
[-32.01297379 -160.78443909]
[-47.02835846 -160.91937256]
[-61.93421936 -162.73468018]
[-76.54309845 -166.20753479]
[-90.67126465 -171.29426575]
[-104.14105988 -177.93087769]
[-116.78307343 -186.03393555]
[-128.43832397 -195.50152588]
[-138.96022034 -206.21458435]
[-148.21646118 -218.03837585]
[-156.09062195 -230.82420349]
[-162.48370361 -244.41128540]
[-167.31526184 -258.62875366]
[-170.52456665 -273.29776001]
[-172.07125854 -288.23388672]
[-171.93586731 -303.24926758]
[-170.12011719 -318.15509033]
[-166.64682007 -332.76385498]
[-161.55967712 -346.89187622]
[-154.92265320 -360.36145020]
[-146.81921387 -373.00323486]
[-137.35128784 -384.65820312]
[-126.63790894 -395.17977905]
[-114.81384277 -404.43566895]
[-102.02777863 -412.30944824]
[-88.44050598 -418.70211792]
[-74.22290802 -423.53326416]
[-59.55378342 -426.74212646]
[-44.61761475 -428.28836060]
[-29.60223770 -428.15252686]
[-14.69648743 -426.33633423]
[-0.08781766 -422.86260986]
[14.04005051 -417.77502441]
[27.50944519 -411.13760376]
[40.15097427 -403.03378296]
[51.80565262 -393.56549072]
[62.32691956 -382.85180664]
[71.58245087 -371.02746582]
[79.45584869 -358.24118042]
[85.84810638 -344.65371704]
[90.67882538 -330.43597412]
[93.88725281 -315.76675415]
[95.43304443 -300.83053589]
[95.29676056 -285.81515503]
[93.48011017 -270.90945435]
[90.00595093 -256.30090332]
[84.91795349 -242.17318726]
[78.28012848 -228.70397949]
[70.17593384 -216.06269836]
[60.70730209 -204.40829468]
[49.99330521 -193.88735962]
[38.16868210 -184.63217163]
[25.38214302 -176.75915527]
[11.79449081 -170.36730957]
[16.62048912 -156.16485596]
[21.44648552 -141.96240234]
[26.27248383 -127.75994873]
[41.66207886 -120.97767639]
[47.49970627 -104.84581757]
[39.71375656 -89.18062592]
[44.75067139 -75.05158997]
[49.78758621 -60.92256546]
[62.89058304 -58.36254883]
[73.09946442 -49.59198380]
[77.67795563 -36.82064819]
[75.32947540 -23.34833908]
[66.56208038 -12.71238136]
[71.38807678 1.49007380]
[76.21407318 15.69252968]
[81.04006958 29.89498520]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[128.71401978 150.16192627]
[135.98724365 163.28062439]
[148.14828491 167.57852173]
[153.93609619 178.65484619]
[150.73132324 190.31915283]
[157.80842590 203.54467773]
[164.88552856 216.77020264]
[171.96264648 229.99572754]
[179.03974915 243.22125244]
[192.78678894 237.20022583]
[206.96386719 232.27635193]
[221.48356628 228.47996521]
[236.25636292 225.83451843]
[251.19119263 224.35627747]
[266.19595337 224.05436707]
[281.17816162 224.93066406]
[296.04541016 226.97976685]
[310.70605469 230.18902588]
[325.06973267 234.53865051]
[339.04782104 240.00184631]
[352.55422974 246.54490662]
[365.50558472 254.12751770]
[377.82211304 262.70291138]
[389.42785645 272.21820068]
[400.25125122 282.61474609]
[410.22558594 293.82846069]
[419.28930664 305.79016113]
[427.38662720 318.42614746]
[434.46752930 331.65847778]
[440.48843384 345.40557861]
[445.41217041 359.58270264]
[449.20837402 374.10244751]
[451.85369873 388.87527466]
[453.33178711 403.81011963]
[453.63354492 418.81488037]
[452.75708008 433.79705811]
[450.70782471 448.66430664]
[447.49841309 463.32492065]
[443.14865112 477.68853760]
[437.68530273 491.66659546]
[431.14212036 505.17291260]
[423.55938721 518.12420654]
[414.98385620 530.44067383]
[405.46844482 542.04626465]
[395.07177734 552.86956787]
[383.85797119 562.84375000]
[371.89617920 571.90740967]
[359.26013184 580.00457764]
[346.02770996 587.08538818]
[332.28054810 593.10607910]
[318.10336304 598.02972412]
[303.58358765 601.82580566]
[288.81072998 604.47094727]
[273.87588501 605.94885254]
[258.87112427 606.25048828]
[243.88893127 605.37384033]
[229.02172852 603.32446289]
[214.36112976 600.11492920]
[199.99755859 595.76495361]
[186.01956177 590.30151367]
[172.51330566 583.75817871]
[159.56208801 576.17529297]
[147.24574280 567.59967041]
[135.64019775 558.08410645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[29 148]
[30 147]
[40 146]
[41 145]
[42 144]
[44 142]
[45 141]
[46 140]
[47 139]
[51 138]
[52 137]
[53 136]
[54 135]
[58 130]
[59 129]
[60 128]
[64 125]
[65 124]
[66 123]
[67 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
