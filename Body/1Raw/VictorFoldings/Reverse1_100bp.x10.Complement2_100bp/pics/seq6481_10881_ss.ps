%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[124.32015991 452.56979370]
[121.35738373 437.84954834]
[120.03196716 422.89273071]
[120.36000061 407.88088989]
[122.33749390 392.99624634]
[125.94045258 378.41949463]
[131.12513733 364.32757568]
[137.82859802 350.89154053]
[145.96948242 338.27450562]
[155.44894409 326.62963867]
[166.15193176 316.09829712]
[177.94851685 306.80831909]
[190.69549561 298.87246704]
[184.21598816 285.34411621]
[177.73649597 271.81576538]
[171.25700378 258.28741455]
[164.77751160 244.75907898]
[158.29801941 231.23072815]
[151.81851196 217.70237732]
[145.33901978 204.17404175]
[138.85952759 190.64569092]
[132.38003540 177.11735535]
[125.60003662 163.73707581]
[118.52293396 150.51155090]
[111.44582367 137.28602600]
[104.36872101 124.06049347]
[97.29161835 110.83496094]
[90.11624908 97.66249084]
[82.84301758 84.54379272]
[73.70421600 72.64916229]
[62.90206146 62.24178696]
[52.09990311 51.83441544]
[41.29774857 41.42704391]
[30.49559212 31.01966858]
[19.69343567 20.61229515]
[8.66155815 10.44874859]
[-2.59453750 0.53409761]
[-13.85063362 -9.38055325]
[-25.10672951 -19.29520416]
[-35.91169739 -8.87861061]
[-47.52976990 0.62261021]
[-59.88362885 9.14522839]
[-72.89105225 16.63252640]
[-86.46549225 23.03467751]
[-100.51659393 28.30907631]
[-114.95085907 32.42061996]
[-129.67222595 35.34194565]
[-144.58271790 37.05361557]
[-159.58312988 37.54423904]
[-174.57360840 36.81054688]
[-189.45440674 34.85742188]
[-204.12648010 31.69786644]
[-218.49221802 27.35290527]
[-232.45597839 21.85145187]
[-245.92486572 15.23011971]
[-258.80923462 7.53297234]
[-271.02331543 -1.18876493]
[-282.48587036 -10.87705040]
[-293.12057495 -21.46740913]
[-302.85668945 -32.88936234]
[-311.62939453 -45.06689835]
[-319.38031006 -57.91897583]
[-326.05789185 -71.36006927]
[-331.61764526 -85.30072021]
[-336.02261353 -99.64816284]
[-339.24346924 -114.30691528]
[-341.25875854 -129.17941284]
[-342.05508423 -144.16670227]
[-341.62716675 -159.16902161]
[-339.97781372 -174.08654785]
[-337.11804199 -188.81999207]
[-333.06686401 -203.27131653]
[-327.85122681 -217.34434509]
[-321.50588989 -230.94541931]
[-314.07299805 -243.98402405]
[-305.60208130 -256.37338257]
[-296.14950562 -268.03106689]
[-285.77816772 -278.87948608]
[-274.55706787 -288.84640503]
[-262.56091309 -297.86557007]
[-249.86953735 -305.87689209]
[-236.56738281 -312.82711792]
[-222.74296570 -318.66992188]
[-208.48831177 -323.36648560]
[-193.89828491 -326.88549805]
[-179.06994629 -329.20361328]
[-164.10202026 -330.30532837]
[-149.09408569 -330.18334961]
[-134.14604187 -328.83847046]
[-119.35735321 -326.27966309]
[-104.82643890 -322.52395630]
[-90.65000916 -317.59631348]
[-76.92240143 -311.52957153]
[-63.73497009 -304.36404419]
[-51.17547989 -296.14749146]
[-39.32751083 -286.93453979]
[-28.26991081 -276.78652954]
[-18.07627106 -265.77096558]
[-8.81442642 -253.96116638]
[-0.54601389 -241.43576050]
[6.67394018 -228.27804565]
[12.79738712 -214.57563782]
[17.78357697 -200.41969299]
[21.59932518 -185.90443420]
[24.21924019 -171.12644958]
[25.62588692 -156.18408203]
[25.80990219 -141.17678833]
[24.77006149 -126.20442963]
[22.51328659 -111.36664581]
[19.05459404 -96.76219177]
[14.41700363 -82.48824310]
[8.63137627 -68.63980103]
[1.73621643 -55.30902481]
[-6.22258997 -42.58463287]
[-15.19207764 -30.55130005]
[-3.93598223 -20.63665009]
[7.32011366 -10.72199821]
[18.57621002 -0.80734694]
[22.09925652 -0.66424417]
[25.72802544 1.19238937]
[28.65790176 4.79365587]
[30.10080910 9.81013966]
[40.90296555 20.21751213]
[51.70512009 30.62488556]
[62.50727844 41.03225708]
[73.30943298 51.43963242]
[84.11158752 61.84700394]
[79.23468781 47.66194916]
[78.49417877 32.68024063]
[81.94846344 18.08339500]
[89.32512665 5.02258205]
[100.04241180 -5.47216749]
[113.25511169 -12.57319355]
[127.92121887 -15.72048092]
[142.88409424 -14.66582012]
[156.96371460 -9.49238682]
[169.04968262 -0.60817903]
[178.18887329 11.28615665]
[183.66052246 25.25258446]
[185.03311157 40.18965149]
[182.19837952 54.91936111]
[175.37991333 68.28006744]
[165.11541748 79.21808624]
[152.21441650 86.87080383]
[137.69432068 90.63468933]
[122.70024872 90.21290588]
[108.41470337 85.63872528]
[95.96171570 77.27056885]
[103.23493958 90.38925934]
[109.58694458 95.35157776]
[110.51714325 103.75785828]
[117.59424591 116.98338318]
[124.67135620 130.20890808]
[131.74845886 143.43444824]
[138.82556152 156.65997314]
[143.26049805 159.41285706]
[145.92915344 163.21174622]
[146.72885132 167.20869446]
[145.90837097 170.63784790]
[152.38786316 184.16619873]
[158.86737061 197.69454956]
[165.34686279 211.22288513]
[171.82635498 224.75123596]
[178.30584717 238.27958679]
[184.78535461 251.80792236]
[191.26484680 265.33627319]
[197.74433899 278.86462402]
[204.22383118 292.39297485]
[218.39717102 287.43515015]
[233.02987671 284.06665039]
[247.94435120 282.32833862]
[262.95953369 282.24130249]
[277.89315796 283.80664062]
[292.56393433 287.00531006]
[306.79376221 291.79852295]
[320.40994263 298.12805176]
[333.24716187 305.91708374]
[345.14959717 315.07107544]
[355.97274780 325.47888184]
[365.58523560 337.01419067]
[373.87039185 349.53695679]
[380.72760010 362.89514160]
[386.07369995 376.92663574]
[389.84371948 391.46109009]
[391.99191284 406.32205200]
[392.49221802 421.32916260]
[391.33853149 436.30020142]
[388.54489136 451.05346680]
[384.14523315 465.40985107]
[378.19290161 479.19509888]
[370.76016235 492.24185181]
[361.93728638 504.39175415]
[351.83132935 515.49731445]
[340.56500244 525.42364502]
[328.27505493 534.05041504]
[315.11065674 541.27270508]
[301.23165894 547.00299072]
[286.80648804 551.17169189]
[272.01028442 553.72814941]
[257.02264404 554.64135742]
[242.02551270 553.90020752]
[227.20094299 551.51373291]
[212.72888184 547.51092529]
[198.78501892 541.94030762]
[185.53860474 534.86950684]
[173.15046692 526.38439941]
[161.77095032 516.58801270]
[151.53820801 505.59918213]
[142.57646179 493.55133057]
[134.99447632 480.59075928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[28 149]
[29 148]
[30 127]
[31 126]
[32 125]
[33 124]
[34 123]
[35 122]
[36 118]
[37 117]
[38 116]
[39 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
