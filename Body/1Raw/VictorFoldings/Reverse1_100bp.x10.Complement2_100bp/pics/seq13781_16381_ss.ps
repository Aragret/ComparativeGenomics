%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[12.69076824 485.71484375]
[6.87885237 499.55227661]
[-0.04161226 512.86993408]
[-8.02456951 525.57916260]
[-17.01689339 537.59545898]
[-26.95874214 548.83880615]
[-37.78395081 559.23431396]
[-49.42047882 568.71295166]
[-61.79088974 577.21154785]
[-74.81285095 584.67352295]
[-88.39971161 591.04925537]
[-102.46105194 596.29632568]
[-116.90328217 600.37976074]
[-131.63031006 603.27246094]
[-146.54411316 604.95513916]
[-161.54544067 605.41656494]
[-176.53445435 604.65374756]
[-191.41142273 602.67163086]
[-206.07734680 599.48358154]
[-220.43458557 595.11065674]
[-234.38763428 589.58209229]
[-247.84361267 582.93457031]
[-260.71298218 575.21234131]
[-272.91006470 566.46691895]
[-284.35375977 556.75634766]
[-294.96786499 546.14532471]
[-304.68173218 534.70446777]
[-313.43072510 522.50988770]
[-321.15664673 509.64273071]
[-327.80807495 496.18869019]
[-333.34069824 482.23724365]
[-337.71774292 467.88125610]
[-340.91009521 453.21627808]
[-342.89645386 438.33987427]
[-343.66363525 423.35107422]
[-343.20654297 408.34960938]
[-341.52816772 393.43533325]
[-338.63977051 378.70745850]
[-334.56048584 364.26403809]
[-329.31747437 350.20120239]
[-322.94567871 336.61248779]
[-315.48745728 323.58837891]
[-306.99246216 311.21548462]
[-297.51724243 299.57623291]
[-287.12481689 288.74801636]
[-275.88436890 278.80291748]
[-263.87069702 269.80709839]
[-251.16374207 261.82046509]
[-237.84808350 254.89614868]
[-224.01234436 249.08023071]
[-209.74858093 244.41140747]
[-195.15171814 240.92076111]
[-180.31890869 238.63151550]
[-165.34886169 237.55891418]
[-150.34120178 237.71008301]
[-135.39579773 239.08403015]
[-120.61212158 241.67158508]
[-106.08853912 245.45556641]
[-91.92171478 250.41075134]
[-78.20593262 256.50421143]
[-65.03246307 263.69534302]
[-52.48897934 271.93630981]
[-40.65895081 281.17230225]
[-30.49540329 270.14041138]
[-20.33185577 259.10855103]
[-10.16831017 248.07666016]
[-0.00476293 237.04478455]
[9.31011963 225.28753662]
[10.04460335 210.41105652]
[24.19134140 203.32723999]
[32.60596085 190.90974426]
[41.02058029 178.49224854]
[49.43519592 166.07475281]
[57.84981537 153.65725708]
[66.26443481 141.23976135]
[74.67905426 128.82226562]
[82.53080750 116.04142761]
[89.80403900 102.92272949]
[96.58403015 89.54245758]
[102.86138916 75.91914368]
[109.13874817 62.29582596]
[115.41611481 48.67251205]
[119.17240906 34.15045166]
[120.28806305 19.19199753]
[121.40370941 4.23354483]
[119.38027954 0.39171126]
[118.74819183 -3.50251412]
[119.35307312 -7.00530148]
[120.91226959 -9.76854801]
[123.05715942 -11.57342529]
[125.06117249 -26.43895340]
[127.06518555 -41.30448151]
[117.75569153 -53.79332352]
[119.99981689 -68.84053040]
[131.96339417 -77.63874817]
[133.96740723 -92.50427246]
[135.97142029 -107.36980438]
[137.97543335 -122.23532867]
[123.99625397 -127.89513397]
[111.86428070 -136.85427856]
[102.34214020 -148.54956055]
[96.02840424 -162.24581909]
[93.31996155 -177.08209229]
[94.38706207 -192.12576294]
[99.16262817 -206.43118286]
[107.34645844 -219.09907532]
[118.42411804 -229.33314514]
[131.69926453 -236.49008179]
[146.33738708 -240.11996460]
[161.41833496 -239.99462891]
[175.99411011 -236.12194824]
[189.14846802 -228.74537659]
[200.05450439 -218.32859802]
[208.02665710 -205.52644348]
[212.56381226 -191.14363098]
[213.38072205 -176.08430481]
[210.42607117 -161.29508972]
[203.88557434 -147.70565796]
[194.17036438 -136.17024231]
[181.89117432 -127.41398621]
[167.81985474 -121.98729706]
[152.84095764 -120.23131561]
[150.83694458 -105.36579132]
[148.83293152 -90.50025940]
[146.82891846 -75.63473511]
[156.03558350 -63.98257065]
[154.21499634 -48.87826538]
[141.93070984 -39.30046844]
[139.92669678 -24.43494034]
[137.92268372 -9.56941128]
[136.36216736 5.34919357]
[135.24652100 20.30764771]
[134.13085938 35.26610184]
[141.76788330 22.35579491]
[152.23739624 11.61385345]
[164.94729614 3.64778447]
[179.17880249 -1.09189129]
[194.12701416 -2.33712268]
[208.94657898 -0.01748571]
[222.79934692 5.73583269]
[234.90190125 14.59745502]
[244.56976318 26.06621170]
[251.25617981 39.49349213]
[254.58299255 54.11991501]
[254.36207581 69.11828613]
[250.60589600 83.64038086]
[243.52690125 96.86489868]
[233.52543640 108.04392242]
[221.16712952 116.54523468]
[207.15090942 121.88804626]
[192.26945496 123.77018738]
[177.36439514 122.08521271]
[163.27867126 116.92842102]
[150.80891418 108.59146118]
[140.66032410 97.54581451]
[133.40689087 84.41616821]
[129.45878601 69.94507599]
[129.03942871 54.94987106]
[122.76206970 68.57318878]
[116.48470306 82.19650269]
[110.20734406 95.81981659]
[124.96851349 93.15373230]
[136.35638428 102.91674805]
[135.97624207 117.91192627]
[124.10832214 127.08538818]
[109.50120544 123.67479706]
[102.92272949 110.19596100]
[95.64950562 123.31465912]
[110.32958984 120.23325348]
[122.96372223 128.31896973]
[126.31449890 142.93992615]
[118.46243286 155.72058105]
[103.90555573 159.33958435]
[90.98270416 151.72383118]
[87.09654999 137.23689270]
[78.68193054 149.65438843]
[70.26731110 162.07188416]
[61.85269165 174.48937988]
[53.43807602 186.90687561]
[45.02345657 199.32437134]
[36.60883713 211.74186707]
[35.27248383 227.50653076]
[21.72761536 233.70214844]
[35.84765625 228.64010620]
[50.62431335 231.21894836]
[62.19500351 240.76457214]
[67.53517151 254.78179932]
[65.24891663 269.60653687]
[55.93385315 281.36364746]
[42.02492523 286.97985840]
[27.15788460 284.98709106]
[15.21894646 275.90621948]
[9.32891655 262.11102295]
[11.02711391 247.20832825]
[0.86356747 258.24020386]
[-9.29997921 269.27209473]
[-19.46352577 280.30395508]
[-29.62707329 291.33584595]
[-19.45437050 302.37072754]
[-10.21497059 314.19808960]
[-1.97036076 326.73919678]
[5.22459221 339.91058350]
[11.32200623 353.62460327]
[16.28130150 367.78997803]
[20.06947899 382.31246948]
[22.66132355 397.09539795]
[24.03958893 412.04040527]
[24.19510269 427.04803467]
[23.12683105 442.01837158]
[20.84188080 456.85186768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 183]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[76 175]
[77 168]
[78 167]
[79 161]
[80 160]
[81 159]
[82 158]
[83 133]
[84 132]
[85 131]
[90 130]
[91 129]
[92 128]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
