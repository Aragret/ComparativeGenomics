%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[62.09563065 506.97894287]
[68.10796356 520.76385498]
[71.63504791 535.38336182]
[72.56970215 550.39331055]
[70.88352966 565.33746338]
[66.62776184 579.76171875]
[59.93172836 593.22778320]
[50.99892044 605.32635498]
[40.10079193 615.68981934]
[27.56852531 624.00329590]
[13.78295994 630.01403809]
[-0.83697492 633.53948975]
[-15.84699535 634.47241211]
[-30.79096413 632.78454590]
[-45.21475220 628.52716064]
[-58.68003464 621.82958984]
[-70.77761841 612.89544678]
[-81.13986969 601.99615479]
[-89.45189667 589.46289062]
[-95.46109772 575.67669678]
[-98.98487091 561.05633545]
[-99.91612244 546.04620361]
[-98.22655487 531.10241699]
[-93.96752167 516.67913818]
[-87.26843262 503.21459961]
[-78.33287811 491.11804199]
[-67.43240356 480.75701904]
[-54.89825058 472.44641113]
[-41.11132050 466.43878174]
[-26.49058723 462.91665649]
[-11.48035622 461.98712158]
[3.46323013 463.67837524]
[17.88605118 467.93905640]
[24.56624603 454.50866699]
[31.24644089 441.07827759]
[31.41071892 433.68945312]
[38.12738037 427.49880981]
[45.00679016 414.16937256]
[51.88620377 400.83993530]
[58.76561737 387.51052856]
[65.64502716 374.18109131]
[70.36516571 359.94308472]
[72.81089020 345.14382935]
[75.25661469 330.34454346]
[69.69802094 316.52603149]
[79.58187866 304.17208862]
[82.02760315 289.37283325]
[83.69915009 274.46624756]
[84.59196472 259.49285889]
[85.48477936 244.51943970]
[86.37759399 229.54603577]
[87.27040863 214.57263184]
[88.05173492 199.59298706]
[80.89044952 186.53292847]
[89.23624420 173.09201050]
[79.02673340 162.30769348]
[79.49252319 147.10119629]
[90.87332916 136.46563721]
[91.54311371 121.48059845]
[92.21289825 106.49555969]
[89.39816284 98.94242859]
[93.00585938 91.29289246]
[93.89867401 76.31948853]
[85.27717590 60.04830170]
[95.50483704 45.78779984]
[96.17462158 30.80276299]
[96.84440613 15.81772327]
[87.98161316 -0.32329360]
[97.99582672 -14.73448944]
[98.44242859 -29.72783852]
[98.88903809 -44.72118759]
[99.33563995 -59.71453857]
[99.44731140 -74.71412659]
[99.22398376 -89.71246338]
[99.00065613 -104.71080017]
[98.77732849 -119.70913696]
[86.61604309 -110.92829132]
[72.12814331 -114.81427765]
[65.99357605 -128.50248718]
[72.73450470 -141.90248108]
[87.38177490 -145.13627625]
[99.13722992 -135.82153320]
[100.03005219 -150.79493713]
[100.92286682 -165.76835632]
[101.81568146 -180.74176025]
[94.91349792 -194.97799683]
[103.39462280 -207.22216797]
[104.28743744 -222.19557190]
[105.18025208 -237.16897583]
[102.56718445 -245.92167664]
[106.19946289 -252.35815430]
[107.31511688 -267.31661987]
[108.43076324 -282.27505493]
[101.74130249 -296.61248779]
[110.40378571 -308.72903442]
[103.71432495 -323.06646729]
[112.37680817 -335.18301392]
[113.49245453 -350.14144897]
[99.41370392 -355.64422607]
[87.58344269 -365.05358887]
[79.05359650 -377.53289795]
[74.58264160 -391.97247314]
[74.56812286 -407.08840942]
[79.01134491 -421.53656006]
[87.51721191 -434.03222656]
[99.32938385 -443.46429443]
[113.39753723 -448.99407959]
[128.47073364 -450.12988281]
[143.20869446 -446.77069092]
[156.30090332 -439.21517944]
[166.58322144 -428.13525391]
[173.14135742 -414.51605225]
[175.39216614 -399.56863403]
[173.13549805 -384.62210083]
[166.57202148 -371.00549316]
[156.28535461 -359.92956543]
[143.19017029 -352.37921143]
[128.45091248 -349.02581787]
[127.33525848 -334.06735229]
[134.10452271 -320.79986572]
[125.36223602 -307.61337280]
[132.13150024 -294.34588623]
[123.38921356 -281.15942383]
[122.27356720 -266.20095825]
[121.15792084 -251.24250793]
[120.15365601 -236.27616882]
[119.26084137 -221.30276489]
[118.36802673 -206.32934570]
[125.33406830 -193.16410828]
[116.78908539 -179.84893799]
[115.89627075 -164.87553406]
[115.00345612 -149.90213013]
[114.11064148 -134.92872620]
[113.77566528 -119.93246460]
[113.99899292 -104.93412781]
[114.22232056 -89.93579102]
[114.44564819 -74.93745422]
[116.70743561 -72.23252106]
[117.77143860 -68.29768372]
[117.07386780 -63.70783997]
[114.32899475 -59.26793289]
[113.88238525 -44.27458191]
[113.43577576 -29.28123283]
[112.98917389 -14.28788376]
[121.05325317 -5.27138615]
[120.80387878 7.22347593]
[111.82944489 16.48750877]
[111.15966034 31.47254753]
[110.48987579 46.45758820]
[118.41881561 55.59314728]
[117.98344421 68.08290863]
[108.87207794 77.21230316]
[107.97926331 92.18570709]
[107.19793701 107.16534424]
[106.52815247 122.15038300]
[105.85836792 137.13542175]
[116.24493408 148.74391174]
[115.35221100 163.93133545]
[104.22128296 173.76179504]
[111.33465576 187.89369202]
[103.03677368 200.26277161]
[105.77986908 208.97560120]
[102.24381256 215.46543884]
[101.35099792 230.43885803]
[100.45818329 245.41226196]
[99.56536865 260.38565063]
[98.67255402 275.35906982]
[109.83321381 265.33709717]
[124.82001495 264.70809937]
[136.78120422 273.75961304]
[140.24827576 288.35342407]
[133.63613892 301.81744385]
[119.96777344 307.99609375]
[105.49216461 304.06457520]
[96.82687378 291.81854248]
[94.38114929 306.61782837]
[99.76480865 321.49487305]
[90.05589294 332.79028320]
[87.61016083 347.58953857]
[85.16443634 362.38882446]
[94.02539062 350.28579712]
[105.78891754 340.97882080]
[119.60579681 335.13983154]
[134.47856140 333.19030762]
[149.33355713 335.27099609]
[163.09837341 341.23168945]
[174.77931213 350.64208984]
[183.53312683 362.82284546]
[188.72787476 376.89459229]
[189.98854065 391.84152222]
[187.22410583 406.58459473]
[180.63414001 420.05947876]
[170.69438171 431.29339600]
[158.12239075 439.47540283]
[143.82575989 444.01480103]
[128.83656311 444.58392334]
[114.23687744 441.14163208]
[101.08068085 433.93646240]
[90.31772614 423.48855591]
[82.72499084 410.55215454]
[78.85061646 396.06112671]
[78.97445679 381.06048584]
[72.09504700 394.38992310]
[65.21562958 407.71936035]
[58.33621979 421.04879761]
[51.45681000 434.37820435]
[44.67681503 447.75848389]
[37.99662399 461.18887329]
[31.31642723 474.61923218]
[43.41603851 483.55068970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 209]
[34 208]
[35 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 180]
[43 179]
[44 178]
[46 176]
[47 175]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 161]
[55 159]
[58 156]
[59 155]
[60 154]
[62 153]
[63 152]
[65 149]
[66 148]
[67 147]
[69 144]
[70 143]
[71 142]
[72 141]
[73 137]
[74 136]
[75 135]
[76 134]
[82 133]
[83 132]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[91 125]
[92 124]
[93 123]
[95 121]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
