%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[166.72662354 571.47729492]
[160.01298523 558.05419922]
[154.41578674 544.12854004]
[149.97230530 529.79296875]
[146.71208191 515.14294434]
[144.65684509 500.27587891]
[143.82025146 485.29080200]
[144.20787048 470.28738403]
[145.81713867 455.36547852]
[148.63732910 440.62438965]
[152.64967346 426.16223145]
[157.82746887 412.07525635]
[164.13627625 398.45718384]
[171.53410339 385.39865112]
[179.97169495 372.98660278]
[189.39292908 361.30355835]
[199.73509216 350.42733765]
[210.92936707 340.43026733]
[222.90124512 331.37893677]
[214.86007690 318.71640015]
[206.81890869 306.05389404]
[198.77774048 293.39135742]
[190.73655701 280.72882080]
[182.69538879 268.06631470]
[174.65422058 255.40377808]
[171.95085144 254.66217041]
[169.37837219 252.80503845]
[167.36311340 249.87687683]
[166.30749512 246.07553101]
[166.53744507 241.73951721]
[159.26422119 228.62081909]
[151.99098206 215.50212097]
[145.99845886 211.17645264]
[144.70878601 202.13352966]
[137.63168335 188.90798950]
[130.55458069 175.68246460]
[123.47747040 162.45693970]
[119.24736786 160.23991394]
[116.36507416 155.34201050]
[116.39321136 148.73060608]
[109.71302032 135.30023193]
[102.93302917 121.91995239]
[96.05361176 108.59052277]
[91.54738617 105.90576935]
[88.86615753 100.88736725]
[89.17449951 94.76023102]
[82.69500732 81.23188782]
[76.21550751 67.70353699]
[69.73601532 54.17519379]
[63.20665359 47.78729630]
[63.26243973 40.39685059]
[50.46001816 31.10123253]
[52.16094971 16.30406761]
[45.88359070 2.68075109]
[39.60622787 -10.94256496]
[33.32886887 -24.56588173]
[28.15980339 -28.68805313]
[26.15014839 -34.00390625]
[27.07417297 -38.68954849]
[21.20521355 -52.49372482]
[8.68523121 -62.16639709]
[10.82597733 -76.90635681]
[4.95701694 -90.71054077]
[-0.91194397 -104.51471710]
[-2.45515513 -89.59430695]
[-8.94606113 -76.07143402]
[-19.62211609 -65.53474426]
[-33.22911072 -59.22207642]
[-48.16850281 -57.87504196]
[-62.68523407 -61.65188599]
[-75.07389069 -70.10890961]
[-83.87906647 -82.25258636]
[-88.06632996 -96.65628815]
[-87.14378357 -111.62789154]
[-81.21978760 -125.40854645]
[-70.99030304 -136.37930298]
[-57.65706635 -143.25134277]
[-42.78646469 -145.21733093]
[-28.12547112 -142.04632568]
[-15.39645195 -134.11082458]
[-6.09404898 -122.34172821]
[-8.53977680 -137.14100647]
[-10.98550415 -151.94027710]
[-13.43123150 -166.73954773]
[-28.47248840 -167.13586426]
[-43.16687012 -170.37185669]
[-56.98318100 -176.33055115]
[-69.42197418 -184.79653931]
[-80.03358459 -195.46379089]
[-88.43442535 -207.94667053]
[-94.32080078 -221.79394531]
[-97.47991943 -236.50505066]
[-97.79759216 -251.54817200]
[-95.26232147 -266.37951660]
[-89.96576691 -280.46295166]
[-82.09939575 -293.28936768]
[-71.94756317 -304.39508057]
[-59.87726212 -313.37863159]
[-46.32481766 -319.91528320]
[-31.78014755 -323.76870728]
[-16.76902962 -324.79965210]
[-1.83410740 -322.97082520]
[12.48473072 -318.34835815]
[25.66986847 -311.09930420]
[37.24467087 -301.48574829]
[46.79071426 -289.85519409]
[53.96291733 -276.62811279]
[58.50201035 -262.28262329]
[60.24390793 -247.33731079]
[59.12563705 -232.33244324]
[55.18762970 -217.81044006]
[48.57223511 -204.29626465]
[39.51860046 -192.27844238]
[28.35400772 -182.19139099]
[15.48204994 -174.39979553]
[1.36803949 -169.18527222]
[3.81376696 -154.38600159]
[6.25949430 -139.58673096]
[8.70522213 -124.78746033]
[12.89223289 -110.38367462]
[18.76119423 -96.57949829]
[24.63015366 -82.77532196]
[36.73035049 -74.09001160]
[35.00938797 -58.36268616]
[40.87834930 -44.55850983]
[46.95218277 -30.84324265]
[53.22954559 -17.21992493]
[59.50690460 -3.59660959]
[65.78426361 10.02670670]
[78.13768768 18.34789467]
[76.88575745 34.11949158]
[83.26435852 47.69569778]
[89.74385834 61.22404480]
[96.22335052 74.75238800]
[102.70285034 88.28073120]
[109.38304138 101.71111298]
[116.26245880 115.04054260]
[122.97911835 121.23120117]
[123.14339447 128.62002563]
[129.82359314 142.05039978]
[136.70300293 155.37983704]
[143.78010559 168.60536194]
[150.85720825 181.83088684]
[157.93431091 195.05641174]
[165.10968018 208.22889709]
[172.38291931 221.34759521]
[179.65614319 234.46627808]
[187.31674194 247.36260986]
[195.35791016 260.02514648]
[203.39907837 272.68765259]
[211.44026184 285.35018921]
[219.48143005 298.01269531]
[227.52259827 310.67523193]
[235.56378174 323.33776855]
[248.84689331 316.35122681]
[262.65530396 310.47067261]
[276.89706421 305.73519897]
[291.47744751 302.17630005]
[306.29937744 299.81771851]
[321.26425171 298.67510986]
[336.27243042 298.75607300]
[351.22412109 300.06011963]
[366.01974487 302.57849121]
[380.56085205 306.29449463]
[394.75070190 311.18338013]
[408.49481201 317.21261597]
[421.70178223 324.34207153]
[434.28369141 332.52429199]
[446.15676880 341.70483398]
[457.24206543 351.82260132]
[467.46575928 362.81027222]
[476.75982666 374.59472656]
[485.06243896 387.09750366]
[492.31829834 400.23541260]
[498.47915649 413.92105103]
[503.50402832 428.06332397]
[507.35940552 442.56811523]
[510.01968384 457.33886719]
[511.46716309 472.27734375]
[511.69216919 487.28408813]
[510.69323730 502.25921631]
[508.47702026 517.10308838]
[505.05822754 531.71697998]
[500.45965576 546.00354004]
[494.71188354 559.86773682]
[487.85317993 573.21728516]
[479.92916870 585.96337891]
[470.99258423 598.02117920]
[461.10290527 609.31042480]
[450.32595825 619.75598145]
[438.73345947 629.28839111]
[426.40252686 637.84417725]
[413.41525269 645.36639404]
[399.85809326 651.80499268]
[385.82119751 657.11712646]
[371.39804077 661.26739502]
[356.68457031 664.22827148]
[341.77871704 665.97998047]
[326.77969360 666.51092529]
[311.78729248 665.81750488]
[296.90130615 663.90435791]
[282.22076416 660.78417969]
[267.84344482 656.47784424]
[253.86492920 651.01391602]
[240.37831116 644.42883301]
[227.47332764 636.76629639]
[215.23583984 628.07739258]
[203.74731445 618.41992188]
[193.08419800 607.85821533]
[183.31744385 596.46240234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[30 147]
[31 146]
[32 145]
[34 144]
[35 143]
[36 142]
[37 141]
[40 140]
[41 139]
[42 137]
[43 136]
[46 135]
[47 134]
[48 133]
[49 132]
[51 131]
[53 129]
[54 128]
[55 127]
[56 126]
[59 125]
[60 124]
[62 122]
[63 121]
[64 120]
[81 119]
[82 118]
[83 117]
[84 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
