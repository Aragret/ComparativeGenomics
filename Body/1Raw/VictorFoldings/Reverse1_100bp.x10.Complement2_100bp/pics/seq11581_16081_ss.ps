%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[60.24034882 476.85864258]
[55.58251190 462.47824097]
[55.37197113 447.36376953]
[59.62744904 432.85922241]
[67.97055054 420.25427246]
[79.65940857 410.66983032]
[93.65467072 404.95806885]
[92.31643677 390.01788330]
[90.97820282 375.07769775]
[89.63996887 360.13751221]
[88.30173492 345.19732666]
[86.96350098 330.25714111]
[75.40471649 320.93350220]
[73.83473206 305.80108643]
[83.69258881 293.74038696]
[82.35435486 278.80020142]
[81.01612091 263.86001587]
[73.69714355 276.95324707]
[61.18243027 285.22259521]
[46.26779938 286.82064819]
[32.28521729 281.39041138]
[22.35843086 270.14501953]
[18.70511055 255.59671021]
[22.14141273 240.99562073]
[31.89966393 229.60366821]
[45.79984283 223.96585083]
[60.73661423 225.34165955]
[73.37306213 233.42373657]
[80.88618469 246.40657043]
[82.00183868 231.44810486]
[83.11748505 216.48965454]
[84.23313141 201.53120422]
[85.34878540 186.57275391]
[86.46443176 171.61430359]
[83.82712555 164.71020508]
[87.70967865 156.44197083]
[89.04791260 141.50178528]
[90.38614655 126.56160736]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[91.42441559 72.40695190]
[86.38749695 58.27791977]
[81.35057831 44.14889145]
[76.20862579 30.05774879]
[70.96190643 16.00527763]
[65.71518707 1.95280659]
[60.46846771 -12.09966469]
[55.22174835 -26.15213585]
[49.97503281 -40.20460892]
[46.76890564 -25.55125427]
[37.59074783 -13.68696022]
[24.21272278 -6.90253496]
[9.21791458 -6.50794411]
[-4.49841499 -12.57937717]
[-14.28785706 -23.94453621]
[-18.26022339 -38.40898514]
[-15.64851284 -53.17986679]
[-6.95700502 -65.40515900]
[6.13610554 -72.72434235]
[21.10274506 -73.72419739]
[35.05308914 -68.21167755]
[45.29418945 -57.25005341]
[42.62839508 -72.01126862]
[39.96259689 -86.77249146]
[36.96782303 -101.47048950]
[33.64556503 -116.09795380]
[30.32330513 -130.72541809]
[25.70929527 -144.99815369]
[19.84033394 -158.80232239]
[13.97137356 -172.60650635]
[8.10241318 -186.41067505]
[-6.46439981 -182.70819092]
[-21.42568779 -181.27282715]
[-36.43073654 -182.13821411]
[-51.12781143 -185.28408813]
[-65.17238617 -190.63670349]
[-78.23522949 -198.07057190]
[-90.01014709 -207.41143799]
[-100.22110748 -218.44033813]
[-108.62874603 -230.89875793]
[-115.03598785 -244.49462891]
[-119.29262543 -258.90924072]
[-121.29888916 -273.80471802]
[-121.00773621 -288.83190918]
[-118.42600250 -303.63848877]
[-113.61420441 -317.87741089]
[-106.68514252 -331.21490479]
[-97.80123138 -343.33828735]
[-87.17073059 -353.96337891]
[-75.04283905 -362.84115601]
[-61.70183945 -369.76345825]
[-47.46047211 -374.56802368]
[-32.65257263 -377.14224243]
[-17.62526512 -377.42575073]
[-2.73080301 -375.41195679]
[11.68166161 -371.14797974]
[25.27428055 -364.73385620]
[37.72842407 -356.31988525]
[48.75214767 -346.10333252]
[58.08704376 -334.32369995]
[65.51428223 -321.25708008]
[70.85976410 -307.20977783]
[73.99817657 -292.51110840]
[74.85595703 -277.50564575]
[73.41300201 -262.54507446]
[69.70312500 -247.98014832]
[63.81329727 -234.15225220]
[55.88158417 -221.38557434]
[46.09391403 -209.97933960]
[34.67972946 -200.20095825]
[21.90658951 -192.27963257]
[27.77555084 -178.47546387]
[33.64451218 -164.67127991]
[39.51347351 -150.86711121]
[42.06209564 -165.64900208]
[50.70132828 -177.91128540]
[63.76306915 -185.28631592]
[78.72530365 -186.35006714]
[92.69905090 -180.89715576]
[102.98621368 -169.98045349]
[107.60048676 -155.70780945]
[105.65093994 -140.83503723]
[97.51398468 -128.23384094]
[84.76075745 -120.33731842]
[69.85369110 -118.67016602]
[55.67111206 -123.55426788]
[44.95076370 -134.04766846]
[48.27302551 -119.42021179]
[51.59528351 -104.79275513]
[54.36787415 -102.61443329]
[56.22312546 -98.98495483]
[56.49047470 -94.35010529]
[54.72381592 -89.43828583]
[57.38961029 -74.67706299]
[60.05540466 -59.91584778]
[64.02750397 -45.45132446]
[69.27422333 -31.39885330]
[74.52093506 -17.34638214]
[79.76765442 -3.29391170]
[85.01437378 10.75855923]
[90.26109314 24.81103134]
[95.54564667 29.97778130]
[95.47961426 39.11197281]
[100.51652527 53.24100494]
[105.55344391 67.37003326]
[107.28329468 52.47011185]
[112.03243256 38.24177170]
[119.59891510 25.29000473]
[129.66102600 14.16552925]
[141.79090881 5.34136248]
[155.47280884 -0.80728692]
[170.12493896 -4.01897573]
[185.12429810 -4.15714121]
[199.83311462 -1.21590817]
[213.62594604 4.67966032]
[225.91632080 13.27888203]
[236.18165588 24.21611214]
[243.98544312 37.02629852]
[248.99588013 51.16473770]
[250.99990845 66.03026581]
[249.91232300 80.99078369]
[245.77937317 95.41017151]
[238.77677917 108.67530060]
[229.20230103 120.22213745]
[217.46305847 129.55970764]
[204.05819702 136.29095459]
[189.55770874 140.12968445]
[174.57817078 140.91267395]
[159.75648499 138.60659790]
[145.72291565 133.30955505]
[133.07415771 125.24674225]
[122.34803772 114.76100922]
[114.00065613 102.29821777]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[109.05403900 121.51815033]
[105.32633209 127.89984131]
[103.98809052 142.84002686]
[102.64985657 157.78021240]
[101.42288208 172.72994995]
[100.30723572 187.68840027]
[99.19158936 202.64685059]
[98.07593536 217.60530090]
[96.96028900 232.56376648]
[95.84464264 247.52221680]
[95.95630646 262.52178955]
[97.29454041 277.46197510]
[98.63277435 292.40216064]
[110.47713470 302.51892090]
[111.62146759 317.68945312]
[101.90368652 328.91891479]
[103.24192047 343.85910034]
[104.58015442 358.79928589]
[105.91838837 373.73947144]
[107.25662231 388.67965698]
[108.59485626 403.61984253]
[123.38241577 406.75341797]
[136.58854675 414.10797119]
[147.03898621 425.02951050]
[153.80445862 438.54690552]
[156.28341675 453.45816040]
[154.25540161 468.43743896]
[147.90075684 482.15277100]
[137.78454590 493.38458252]
[124.80627441 501.13415527]
[110.11997223 504.71240234]
[95.03153229 503.80114746]
[80.88260651 498.48144531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[15 190]
[16 189]
[17 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[36 181]
[37 180]
[38 179]
[39 177]
[41 175]
[42 146]
[43 145]
[44 144]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[63 136]
[64 135]
[65 134]
[66 130]
[67 129]
[68 128]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
