%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[288.66769409 427.45730591]
[299.44116211 416.98889160]
[290.48046875 404.95950317]
[281.51977539 392.93014526]
[272.55908203 380.90075684]
[263.59838867 368.87136841]
[254.54838562 356.90902710]
[245.40957642 345.01440430]
[240.90223694 359.32119751]
[226.96214294 364.85955811]
[213.86540222 357.54684448]
[211.26646423 342.77371216]
[221.08116150 331.43035889]
[236.07299805 331.87792969]
[227.84417725 319.33651733]
[219.61537170 306.79513550]
[206.16424561 300.39852905]
[205.06275940 284.61569214]
[196.83395386 272.07431030]
[188.60514832 259.53289795]
[175.15402222 253.13630676]
[174.05252075 237.35348511]
[165.82371521 224.81208801]
[162.46434021 223.74116516]
[159.45675659 220.98988342]
[157.58511353 216.74133301]
[157.52210999 211.52183533]
[149.86151123 198.62551880]
[142.20091248 185.72918701]
[129.04882812 178.73834229]
[128.65318298 162.92207336]
[115.50109100 155.93122864]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[71.99823761 67.54562378]
[64.33763885 54.64929581]
[56.67704010 41.75297165]
[49.01644135 28.85664368]
[41.35584641 15.96031666]
[33.69524765 3.06398940]
[19.99522781 -4.84928989]
[20.14751053 -19.74311638]
[15.40535069 -5.51244831]
[2.05178165 1.31998825]
[-12.26366711 -3.15973711]
[-19.34045601 -16.38543510]
[-15.12467766 -30.78082275]
[-2.03132391 -38.09957123]
[12.43838596 -34.14974594]
[5.95888996 -47.67809296]
[-6.98051214 -56.78207016]
[-5.50007391 -71.60292053]
[-9.80766869 -74.55109406]
[-12.30402756 -78.46536255]
[-12.92445755 -82.49401855]
[-11.95167351 -85.88312531]
[-17.82063484 -99.68730164]
[-24.05825043 -106.36038208]
[-23.67251778 -113.74095917]
[-29.33530426 -127.63098907]
[-34.99809265 -141.52101135]
[-36.47694397 -126.59409332]
[-42.43845749 -112.82963562]
[-52.31441879 -101.53957367]
[-65.16351318 -93.80001831]
[-79.76104736 -90.34864044]
[-94.71567535 -91.51441956]
[-108.60202789 -97.18622589]
[-120.09652710 -106.82346344]
[-128.10360718 -119.50757599]
[-131.86007690 -134.02958679]
[-131.00790405 -149.00535583]
[-125.62828827 -163.00749207]
[-116.23400116 -174.70140076]
[-103.72044373 -182.97248840]
[-89.28032684 -187.03240967]
[-74.28998566 -186.49418640]
[-60.17820358 -181.40913391]
[-48.29003525 -172.26193237]
[-39.75808334 -159.92340088]
[-41.54055023 -174.81710815]
[-51.17915344 -183.38800049]
[-52.35715485 -195.82971191]
[-44.98603058 -205.42100525]
[-46.54655457 -220.33961487]
[-48.10707855 -235.25822449]
[-57.23809052 -248.17855835]
[-50.86685562 -261.64172363]
[-65.69943237 -264.55480957]
[-79.01360321 -271.71191406]
[-89.62548065 -282.47665405]
[-96.59146881 -295.89181519]
[-99.29215240 -310.76452637]
[-97.48738098 -325.77233887]
[-91.33764648 -339.58074951]
[-81.38977814 -350.96191406]
[-68.52832031 -358.90386963]
[-53.89692307 -362.70037842]
[-38.79658890 -362.01388550]
[-24.57003021 -356.90539551]
[-12.48226452 -347.82919312]
[-3.60812879 -335.59231567]
[1.26329565 -321.28286743]
[1.69884527 -306.17321777]
[-2.34020877 -291.60690308]
[-10.49471664 -278.87915039]
[-22.03958511 -269.12173462]
[-35.94825363 -263.20223999]
[-26.92885780 -251.34898376]
[-33.18847275 -236.81874084]
[-31.62795067 -221.90013123]
[-30.06742668 -206.98153687]
[-19.00909996 -193.35507202]
[-26.64683151 -176.59957886]
[-24.86436462 -161.70585632]
[-21.10806465 -147.18380737]
[-15.44527817 -133.29377747]
[-9.78249168 -119.40374756]
[-4.01645803 -105.55626678]
[1.85250294 -91.75208282]
[8.02827168 -78.08241272]
[20.50421715 -69.94607544]
[19.48723602 -54.15758896]
[25.96673203 -40.62924194]
[33.04383850 -27.40371513]
[46.19592285 -20.41286659]
[46.59157562 -4.59660816]
[54.25217438 8.29971886]
[61.91276932 21.19604492]
[69.57336426 34.09237289]
[77.23396301 46.98870087]
[84.89456177 59.88502502]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[141.70178223 140.36766052]
[141.54949951 155.26148987]
[155.24952698 163.17475891]
[155.09724426 178.06858826]
[162.75784302 190.96492004]
[170.41844177 203.86123657]
[178.36512756 216.58328247]
[186.59393311 229.12467957]
[200.63363647 236.41833496]
[201.14654541 251.30409241]
[209.37535095 263.84548950]
[217.60415649 276.38690186]
[231.64385986 283.68054199]
[232.15676880 298.56631470]
[240.38558960 311.10772705]
[248.61439514 323.64910889]
[257.30422974 335.87561035]
[266.44302368 347.77023315]
[274.15295410 352.66867065]
[275.62777710 359.91067505]
[284.58847046 371.94006348]
[293.54916382 383.96945190]
[302.50985718 395.99880981]
[311.47055054 408.02819824]
[324.58499146 400.70248413]
[338.54348755 395.15124512]
[353.10711670 391.46954346]
[368.02676392 389.72030640]
[383.04705811 389.93350220]
[397.91101074 392.10549927]
[412.36431885 396.19909668]
[426.15960693 402.14425659]
[439.06085205 409.83923340]
[450.84729004 419.15240479]
[461.31723022 429.92437744]
[470.29153442 441.97082520]
[477.61663818 455.08560181]
[483.16717529 469.04434204]
[486.84820557 483.60818481]
[488.59671021 498.52789307]
[488.38281250 513.54821777]
[486.21011353 528.41204834]
[482.11584473 542.86517334]
[476.17001343 556.66015625]
[468.47439575 569.56103516]
[459.16067505 581.34704590]
[448.38821411 591.81646729]
[436.34133911 600.79016113]
[423.22619629 608.11468506]
[409.26718140 613.66455078]
[394.70318604 617.34484863]
[379.78338623 619.09265137]
[364.76312256 618.87805176]
[349.89935303 616.70465088]
[335.44644165 612.60968018]
[321.65173340 606.66320801]
[308.75122070 598.96697998]
[296.96566772 589.65270996]
[286.49673462 578.87976074]
[277.52359009 566.83245850]
[270.19973755 553.71691895]
[264.65051270 539.75769043]
[260.97088623 525.19348145]
[259.22378540 510.27362061]
[259.43914795 495.25335693]
[261.61325073 480.38967896]
[265.70889282 465.93698120]
[271.65603638 452.14254761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[7 160]
[8 159]
[14 158]
[15 157]
[16 156]
[18 154]
[19 153]
[20 152]
[22 150]
[23 149]
[27 148]
[28 147]
[29 146]
[31 144]
[33 142]
[34 141]
[35 140]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[46 129]
[53 128]
[54 127]
[56 125]
[60 124]
[61 123]
[63 122]
[64 121]
[65 120]
[84 119]
[85 118]
[88 116]
[89 115]
[90 114]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
