%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[122.62828064 497.00634766]
[111.54943085 507.74240112]
[96.42047882 510.76205444]
[82.06901550 505.10177612]
[73.07453918 492.56768799]
[72.30715179 477.15942383]
[80.01172638 463.79367065]
[93.72976685 456.73544312]
[95.06800079 441.79525757]
[96.40623474 426.85507202]
[97.74446869 411.91488647]
[99.08270264 396.97470093]
[100.42093658 382.03451538]
[99.19396210 367.08477783]
[95.43766022 352.56271362]
[91.68136597 338.04064941]
[87.92506409 323.51858521]
[84.16876221 308.99652100]
[80.81349945 323.61645508]
[73.35002899 336.62786865]
[62.42401123 346.90512085]
[48.98065567 353.55917358]
[34.18294907 356.01434326]
[19.31104088 354.05822754]
[5.65149736 347.86010742]
[-5.61399269 337.95611572]
[-13.51085186 325.20309448]
[-17.35592270 310.70428467]
[-16.81656647 295.71398926]
[-11.93944645 281.52902222]
[-3.14647985 269.37649536]
[8.80165291 260.30773926]
[22.87132072 255.10731506]
[37.84535217 254.22509766]
[52.42834854 257.73739624]
[65.35873413 265.34036255]
[75.51789856 276.37628174]
[82.02593231 289.88705444]
[82.47253418 274.89370728]
[82.91914368 259.90036011]
[83.36574554 244.90699768]
[83.81235504 229.91365051]
[84.25895691 214.92030334]
[82.12020874 212.11708069]
[81.23296356 208.13865662]
[82.13478851 203.58453369]
[85.07518005 199.27162170]
[86.19082642 184.31317139]
[87.30647278 169.35472107]
[88.42212677 154.39625549]
[89.53777313 139.43780518]
[90.65341949 124.47935486]
[91.76907349 109.52090454]
[92.55039215 94.54126740]
[92.99700165 79.54791260]
[93.44360352 64.55456543]
[86.12061310 50.53014374]
[94.23342133 38.03888321]
[94.68003082 23.04553223]
[87.03440094 35.95074081]
[75.48002625 45.51611328]
[61.37430191 50.61792755]
[46.37435150 50.65682602]
[32.24235916 45.62823486]
[20.63853073 36.12290955]
[12.92607784 23.25752640]
[10.01105022 8.54349804]
[12.23590183 -6.29058552]
[19.33926010 -19.50203133]
[30.48662758 -29.53877258]
[44.36842728 -35.22170258]
[59.35383224 -35.88319778]
[73.68238068 -31.44554329]
[85.67076111 -22.43007278]
[93.91059113 -9.89591312]
[97.43397522 4.68599796]
[101.40606689 -9.77852631]
[105.37816620 -24.24304962]
[104.63294983 -33.34703064]
[109.51857758 -38.89251709]
[113.70558929 -53.29629898]
[117.89260101 -67.70008087]
[122.07960510 -82.10386658]
[126.26661682 -96.50764465]
[130.45362854 -110.91143036]
[134.64064026 -125.31520844]
[138.82765198 -139.71899414]
[143.01466370 -154.12277222]
[129.16641235 -159.92997742]
[116.07040405 -167.27792358]
[103.89739227 -176.07084656]
[92.80606079 -186.19410706]
[82.94101715 -197.51570129]
[74.43087769 -209.88806152]
[67.38657379 -223.14987183]
[61.89995575 -237.12823486]
[58.04254532 -251.64093018]
[55.86463547 -266.49874878]
[55.39461899 -281.50796509]
[56.63862610 -296.47293091]
[59.58043289 -311.19854736]
[64.18168640 -325.49279785]
[70.38240814 -339.16940308]
[78.10175323 -352.04998779]
[87.23908997 -363.96664429]
[97.67528534 -374.76403809]
[109.27428436 -384.30136108]
[121.88487244 -392.45434570]
[135.34265137 -399.11663818]
[149.47215271 -404.20138550]
[164.08918762 -407.64233398]
[179.00318909 -409.39459229]
[194.01971436 -409.43533325]
[208.94299316 -407.76400757]
[223.57849121 -404.40243530]
[237.73536682 -399.39440918]
[251.22909546 -392.80523682]
[263.88372803 -384.72079468]
[275.53430176 -375.24652100]
[286.02893066 -364.50592041]
[295.23077393 -352.63900757]
[303.01989746 -339.80050659]
[309.29473877 -326.15777588]
[313.97348022 -311.88867188]
[316.99514771 -297.17922974]
[318.32031250 -282.22125244]
[317.93176270 -267.20968628]
[315.83447266 -252.34028625]
[312.05587769 -237.80686951]
[306.64517212 -223.79895020]
[299.67294312 -210.49911499]
[291.23004150 -198.08076477]
[281.42657471 -186.70579529]
[270.39035034 -176.52252197]
[258.26519775 -167.66368103]
[245.20925903 -160.24478149]
[231.39271545 -154.36253357]
[216.99569702 -150.09362793]
[202.20590210 -147.49371338]
[187.21612549 -146.59669495]
[172.22181702 -147.41426086]
[157.41844177 -149.93576050]
[153.23143005 -135.53198242]
[149.04441833 -121.12819672]
[144.85740662 -106.72441864]
[140.67039490 -92.32063293]
[136.48339844 -77.91685486]
[132.29638672 -63.51306915]
[128.10937500 -49.10928726]
[123.92235565 -34.70550537]
[119.84268951 -20.27095413]
[115.87059784 -5.80642986]
[111.89849854 8.65809441]
[109.67337799 23.49213791]
[109.22677612 38.48548889]
[116.58170319 51.43748474]
[108.43695068 65.00117493]
[107.99034882 79.99452209]
[107.54373932 94.98786926]
[109.76379395 98.14124298]
[110.58309937 102.25786591]
[109.60263824 106.69021606]
[106.72752380 110.63655090]
[105.61187744 125.59500122]
[104.49622345 140.55345154]
[103.38057709 155.51191711]
[102.26493073 170.47036743]
[101.14927673 185.42881775]
[100.03363037 200.38726807]
[99.25231171 215.36691284]
[98.80570221 230.36026001]
[98.35910034 245.35360718]
[97.91249084 260.34695435]
[97.46588898 275.34030151]
[97.01927948 290.33364868]
[98.69081879 305.24023438]
[102.44712067 319.76229858]
[106.20342255 334.28436279]
[109.95972443 348.80639648]
[113.71602631 363.32846069]
[116.82263184 348.65368652]
[123.43527222 335.18994141]
[133.14958191 323.76049805]
[145.37153625 315.06430054]
[159.35374451 309.63311768]
[174.24119568 307.79904175]
[189.12351990 309.67428589]
[203.09065247 315.14413452]
[215.28849792 323.87411499]
[224.97116089 335.33038330]
[231.54652405 348.81240845]
[234.61251831 363.49572754]
[233.98164368 378.48245239]
[229.69250488 392.85614014]
[222.00735474 405.73785400]
[211.39614868 416.33984375]
[198.50778198 424.01382446]
[184.13037109 428.29052734]
[169.14311218 428.90838623]
[154.46246338 425.82968140]
[140.98616028 419.24261475]
[129.53828430 409.55004883]
[120.81887054 397.34463501]
[115.36112213 383.37274170]
[114.02288818 398.31292725]
[112.68465424 413.25311279]
[111.34642029 428.19329834]
[110.00818634 443.13348389]
[108.66995239 458.07366943]
[120.91522217 467.45751953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 159]
[55 158]
[56 157]
[58 155]
[59 154]
[76 153]
[77 152]
[78 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
