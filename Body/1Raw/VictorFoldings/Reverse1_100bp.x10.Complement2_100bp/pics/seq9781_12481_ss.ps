%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[1.68800879 788.28991699]
[-4.55473328 802.49584961]
[-17.97218323 810.29016113]
[-33.40505600 808.67584229]
[-44.91910172 798.27362061]
[-48.08692932 783.08337402]
[-41.69044876 768.94598389]
[-28.18923378 761.29766846]
[-26.62871170 746.37908936]
[-25.06818771 731.46044922]
[-23.50766563 716.54187012]
[-35.81179428 725.12139893]
[-50.60235977 722.62359619]
[-59.40665817 710.47924805]
[-57.18118668 695.64526367]
[-45.20079422 686.61920166]
[-30.32839584 688.57159424]
[-21.08383369 700.38305664]
[-18.19856071 685.66320801]
[-15.31328869 670.94329834]
[-12.42801666 656.22338867]
[-9.54274368 641.50354004]
[-6.65747118 626.78363037]
[-13.09781170 618.85046387]
[-14.13004780 608.46380615]
[-9.17310047 599.02935791]
[0.35017836 593.77429199]
[3.67243791 579.14678955]
[6.99469757 564.51934814]
[2.26844716 550.39447021]
[12.87010098 538.65075684]
[16.19235992 524.02325439]
[19.51461983 509.39581299]
[6.46458864 498.16482544]
[0.87155730 481.78704834]
[4.36172056 464.74526978]
[16.06195450 451.75238037]
[32.81600952 446.44815063]
[35.70128250 431.72827148]
[38.58655548 417.00836182]
[41.47182846 402.28848267]
[28.17657280 395.43185425]
[17.34115410 385.09622192]
[9.84960175 372.11306763]
[6.31645155 357.53027344]
[7.03634644 342.52767944]
[11.95948315 328.32153320]
[20.69495392 316.06591797]
[32.54177475 306.75906372]
[46.54513168 301.16189575]
[61.57332993 299.73596191]
[64.45860291 285.01608276]
[67.34387970 270.29620361]
[70.22914886 255.57629395]
[72.78498077 240.79563904]
[75.01010132 225.96159363]
[77.23521423 211.12756348]
[69.94157410 195.16604614]
[81.53186035 180.85707092]
[83.53587341 165.99154663]
[85.53988647 151.12602234]
[87.54389954 136.26048279]
[89.54791260 121.39495850]
[91.55192566 106.52942657]
[91.99853516 91.53607941]
[90.88288116 76.57762909]
[89.76723480 61.61917496]
[86.82685089 57.30626297]
[85.92501831 52.75214386]
[86.81226349 48.77371979]
[88.95101929 45.97049332]
[88.50440979 30.97714424]
[88.05780792 15.98379326]
[79.22229004 6.58717155]
[79.15898132 -5.91001844]
[87.35640717 -14.80545425]
[87.13307953 -29.80379105]
[86.90975189 -44.80212784]
[83.65292358 -53.33623123]
[86.79642487 -60.02503967]
[86.79642487 -75.02503967]
[86.79642487 -90.02503967]
[86.57309723 -105.02337646]
[86.12648773 -120.01673126]
[77.98173523 -133.58041382]
[85.33666992 -146.53240967]
[77.19191742 -160.09609985]
[84.54684448 -173.04809570]
[84.10024261 -188.04144287]
[83.65363312 -203.03479004]
[83.20703125 -218.02815247]
[82.76042175 -233.02149963]
[74.61566925 -246.58517456]
[81.97060394 -259.53717041]
[67.35319519 -263.34613037]
[54.40171051 -271.12017822]
[44.16607285 -282.22909546]
[37.47602844 -295.77236938]
[34.87392044 -310.65206909]
[36.57068253 -325.66198730]
[42.42876816 -339.58532715]
[51.97328949 -351.29339600]
[64.43051147 -359.83706665]
[78.79058838 -364.52374268]
[93.88941193 -364.97348022]
[108.50298309 -361.14987183]
[121.44664764 -353.36279297]
[131.67112732 -342.24359131]
[138.34756470 -328.69363403]
[140.93472290 -313.81130981]
[139.22288513 -298.80310059]
[133.35081482 -284.88565063]
[123.79453278 -273.18716431]
[111.32872772 -264.65603638]
[96.96395111 -259.98379517]
[105.07675934 -247.49252319]
[97.75376892 -233.46810913]
[98.20037842 -218.47474670]
[98.64698029 -203.48139954]
[99.09358978 -188.48805237]
[99.54019928 -173.49470520]
[107.65300751 -161.00343323]
[100.33001709 -146.97901917]
[108.44282532 -134.48776245]
[101.11983490 -120.46333313]
[101.56644440 -105.46998596]
[104.36656189 -101.60108185]
[104.76598358 -95.93209076]
[101.79642487 -90.02503967]
[101.79642487 -75.02503967]
[101.79642487 -60.02503967]
[101.90808868 -45.02545547]
[102.13141632 -30.02711868]
[102.35474396 -15.02878189]
[112.15328217 -0.47008684]
[103.05115509 15.53718758]
[103.49776459 30.53053665]
[103.94436646 45.52388763]
[104.72569275 60.50352478]
[105.84133911 75.46197510]
[106.95698547 90.42043304]
[113.59421539 76.96877289]
[124.82313538 67.02335358]
[138.97801208 62.05952454]
[153.95904541 62.81364059]
[167.54388428 69.17382812]
[177.71731567 80.19660187]
[182.97015381 94.24678040]
[182.52317810 109.24011993]
[176.44268799 122.95244598]
[165.63070679 133.34960938]
[151.69111633 138.88925171]
[136.69175720 138.74960327]
[122.85772705 132.95138550]
[112.24118805 122.35472870]
[106.41745758 108.53344727]
[104.41344452 123.39897156]
[102.40943146 138.26449585]
[100.40541077 153.13003540]
[98.40139771 167.99555969]
[96.39738464 182.86108398]
[103.58255768 193.57258606]
[101.60737610 205.91285706]
[92.06925964 213.35267639]
[89.84413910 228.18672180]
[87.61902618 243.02076721]
[89.53114319 247.87780762]
[89.40190887 252.51855469]
[87.65554810 256.20166016]
[84.94904327 258.46157837]
[82.06376648 273.18145752]
[79.17849731 287.90136719]
[76.29322052 302.62124634]
[89.67105103 309.61508179]
[100.52514648 320.08459473]
[107.98180389 333.17517090]
[111.44413757 347.82168579]
[110.63987732 362.83520508]
[105.64273834 376.99938965]
[96.86575317 389.16925049]
[85.02716827 398.36349487]
[71.09165955 403.84368896]
[56.19171906 405.17376709]
[53.30644608 419.89364624]
[50.42117310 434.61352539]
[47.53590012 449.33343506]
[58.03149414 456.85818481]
[64.87673187 467.75396729]
[67.08461761 480.38330078]
[64.36196899 492.86395264]
[57.14778137 503.34933472]
[46.54288101 510.30181885]
[34.14207840 512.71807861]
[30.81982040 527.34552002]
[27.49756050 541.97302246]
[31.98618126 557.14410400]
[21.62215805 567.84161377]
[18.29989815 582.46905518]
[14.97763824 597.09649658]
[21.80296898 616.06433105]
[8.06241989 629.66888428]
[5.17714739 644.38879395]
[2.29187489 659.10870361]
[-0.59339768 673.82855225]
[-3.47867036 688.54846191]
[-6.36394310 703.26837158]
[-8.58905983 718.10241699]
[-10.14958286 733.02099609]
[-11.71010590 747.93957520]
[-13.27062893 762.85821533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[27 199]
[28 198]
[29 197]
[31 195]
[32 194]
[33 193]
[38 186]
[39 185]
[40 184]
[41 183]
[51 173]
[52 172]
[53 171]
[54 170]
[55 166]
[56 165]
[57 164]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 141]
[66 140]
[67 139]
[71 138]
[72 137]
[73 136]
[76 134]
[77 133]
[78 132]
[80 131]
[81 130]
[82 129]
[83 126]
[84 125]
[86 123]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
