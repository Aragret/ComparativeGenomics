%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[70.67172241 554.57928467]
[57.77042389 546.58428955]
[48.63158417 534.46624756]
[44.49116135 519.86413574]
[45.90911102 504.75277710]
[52.69367218 491.17581177]
[63.92728424 480.96942139]
[78.09069824 475.51394653]
[78.09069824 460.51394653]
[78.09069824 445.51394653]
[78.09069824 430.51394653]
[78.09069824 415.51394653]
[78.09069824 400.51394653]
[76.20616913 398.43869019]
[75.03012848 395.49191284]
[74.89863586 391.93969727]
[76.04533386 388.16482544]
[78.56389618 384.62777710]
[79.45671082 369.65435791]
[80.23803711 354.67474365]
[80.90782166 339.68969727]
[66.35644531 336.13562012]
[52.77374649 329.80880737]
[40.68256378 320.95077515]
[30.54870224 309.90039062]
[22.76302910 297.08114624]
[17.62637329 282.98474121]
[15.33791924 268.15234375]
[15.98746872 253.15367126]
[19.55192947 238.56529236]
[25.89612579 224.94834900]
[34.77792358 212.82695007]
[45.85747528 202.66810608]
[58.71021652 194.86361694]
[72.84314728 189.71504211]
[87.71371460 187.42202759]
[88.38349915 172.43698120]
[80.45455933 163.30142212]
[80.88993073 150.81166077]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[94.91380310 57.41868591]
[95.58358765 42.43364716]
[96.25337219 27.44860840]
[96.92315674 12.46356964]
[82.35958099 8.65816975]
[68.91076660 1.91042173]
[57.16347122 -7.48255157]
[47.62966919 -19.10827827]
[40.72420120 -32.45704651]
[36.74675369 -46.94425583]
[35.86883926 -61.93601990]
[38.12639999 -76.77688599]
[43.41835785 -90.81852722]
[51.51111603 -103.44802856]
[62.04888916 -114.11465454]
[74.56933594 -122.35386658]
[88.52383423 -127.80756378]
[103.30155182 -130.23962402]
[103.97133636 -145.22465515]
[104.64112091 -160.20970154]
[105.31090546 -175.19473267]
[90.47570801 -180.68450928]
[78.07832336 -190.47793579]
[69.32488251 -203.60690308]
[65.06226349 -218.77957153]
[65.69615936 -234.50743103]
[71.15253448 -249.25137329]
[80.88599396 -261.57229614]
[93.93430328 -270.27157593]
[109.01351166 -274.50756836]
[109.46012115 -289.50091553]
[109.90672302 -304.49426270]
[110.35333252 -319.48760986]
[110.68830872 -334.48388672]
[110.91163635 -349.48220825]
[95.38732910 -352.93420410]
[80.91689301 -359.51846313]
[68.12446594 -368.94854736]
[57.56132126 -380.81521606]
[49.68206406 -394.60443115]
[44.82510757 -409.71936035]
[43.19810104 -425.50637817]
[44.86907959 -441.28332520]
[49.76361465 -456.36889648]
[57.66812134 -470.11209106]
[68.23918152 -481.92041016]
[81.01847076 -491.28524780]
[95.45260620 -497.80386353]
[110.91714478 -501.19680786]
[110.69381714 -516.19512939]
[110.47048950 -531.19348145]
[110.24716187 -546.19183350]
[110.02383423 -561.19012451]
[96.00431061 -567.13763428]
[85.62065887 -578.27764893]
[80.67191315 -592.68005371]
[82.01546478 -607.84960938]
[89.41854095 -621.15802002]
[101.59851074 -630.29962158]
[116.44512177 -633.69049072]
[131.38610840 -630.74316406]
[143.83287048 -621.96826172]
[151.62890625 -608.88616943]
[153.42350769 -593.76336670]
[148.90576172 -579.21997070]
[138.85839844 -567.77575684]
[125.02217102 -561.41345215]
[125.24549866 -546.41516113]
[125.46882629 -531.41680908]
[125.69215393 -516.41845703]
[125.91548157 -501.42013550]
[139.84053040 -498.95690918]
[153.07432556 -493.96069336]
[165.16020203 -486.60220337]
[175.68084717 -477.13363647]
[184.27258301 -465.88018799]
[190.63807678 -453.22872925]
[194.55654907 -439.61453247]
[195.89140320 -425.50637817]
[194.59507751 -411.39035034]
[190.71067810 -397.75308228]
[184.37054443 -385.06497192]
[175.79179382 -373.76403809]
[165.26879883 -364.24069214]
[153.16316223 -356.82431030]
[139.89128113 -351.77185059]
[125.90997314 -349.25888062]
[125.68664551 -334.26055908]
[128.73020935 -327.52569580]
[125.34667969 -319.04101562]
[124.90007782 -304.04766846]
[124.45346832 -289.05432129]
[124.00686646 -274.06097412]
[137.54101562 -269.58743286]
[149.27868652 -261.47155762]
[158.26300049 -250.36405945]
[163.75849915 -237.15994263]
[165.31129456 -222.92639160]
[162.78657532 -208.81655884]
[156.38020325 -195.97615051]
[146.60360718 -185.45030212]
[134.24296570 -178.09863281]
[120.29594421 -174.52494812]
[119.62615967 -159.53991699]
[118.95637512 -144.55487061]
[118.28659058 -129.56983948]
[132.78839111 -125.82907867]
[146.20069885 -119.15216827]
[157.93614197 -109.82878876]
[167.48027039 -98.26456451]
[174.41401672 -84.96342468]
[178.43212891 -70.50565338]
[179.35665894 -55.52255249]
[177.14474487 -40.66889954]
[171.89067078 -26.59430885]
[163.82182312 -13.91484642]
[153.28883362 -3.18604374]
[140.75038147 5.12143230]
[126.75319672 10.64242744]
[111.90819550 13.13335419]
[111.23841095 28.11839294]
[110.56862640 43.10343170]
[109.89884186 58.08847046]
[112.74053192 64.91097260]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[113.59619904 158.84626770]
[103.36853790 173.10676575]
[102.69875336 188.09181213]
[117.30545807 191.70236206]
[130.92269897 198.09129333]
[143.02789307 207.01132202]
[153.15693665 218.11813354]
[160.92190552 230.98358154]
[166.02595520 245.11222839]
[168.27468872 259.96044922]
[167.58354187 274.95724487]
[163.98092651 289.52636719]
[157.60713196 303.10827637]
[148.70883179 315.18179321]
[137.62951660 325.28399658]
[124.79627228 333.02798462]
[110.70329285 338.11776733]
[95.89286041 340.35946655]
[95.22307587 355.34451294]
[97.96617126 364.05734253]
[94.43012238 370.54718018]
[93.53730011 385.52059937]
[93.09069824 400.51394653]
[93.09069824 415.51394653]
[93.09069824 430.51394653]
[93.09069824 445.51394653]
[93.09069824 460.51394653]
[93.09069824 475.51394653]
[107.25410461 480.96942139]
[118.48772430 491.17581177]
[125.27228546 504.75277710]
[126.69023132 519.86413574]
[122.54981232 534.46624756]
[113.41097260 546.58428955]
[100.50966644 554.57928467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[18 197]
[19 196]
[20 194]
[21 193]
[36 178]
[37 177]
[40 175]
[41 174]
[42 173]
[44 171]
[45 170]
[46 168]
[47 167]
[48 166]
[49 165]
[63 151]
[64 150]
[65 149]
[66 148]
[75 138]
[76 137]
[77 136]
[78 135]
[79 133]
[80 132]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
