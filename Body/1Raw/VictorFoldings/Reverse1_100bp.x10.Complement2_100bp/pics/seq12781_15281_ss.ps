%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[134.85873413 649.99029541]
[120.06037903 652.68261719]
[105.01911163 652.68908691]
[90.21844482 650.00958252]
[76.13414764 644.73016357]
[63.21897888 637.02050781]
[51.88810730 627.12854004]
[42.50577545 615.37219238]
[35.37358093 602.12939453]
[30.72080231 587.82586670]
[28.69700050 572.92138672]
[29.36723518 557.89501953]
[32.70996094 543.22991943]
[38.61772156 529.39739990]
[46.90060806 516.84216309]
[57.29235840 505.96786499]
[69.45892334 497.12396240]
[83.00920105 490.59481812]
[97.50759888 486.59027100]
[112.48805237 485.23910522]
[113.82628632 470.29891968]
[115.16452026 455.35873413]
[116.50275421 440.41854858]
[117.84098816 425.47836304]
[119.17922211 410.53817749]
[118.17496490 395.57183838]
[114.85270691 380.94436646]
[111.53044128 366.31692505]
[108.20818329 351.68945312]
[104.88592529 337.06198120]
[101.56366730 322.43453979]
[95.61660004 336.20523071]
[83.64019012 345.23660278]
[68.76502991 347.16784668]
[54.87946320 341.49414062]
[45.61313248 329.69857788]
[43.38823700 314.86450195]
[48.78636551 300.86950684]
[60.39645386 291.37182617]
[75.18365479 288.85415649]
[89.28263092 293.97457886]
[99.00755310 305.39389038]
[97.89190674 290.43542480]
[96.77626038 275.47695923]
[88.11377716 263.36041260]
[94.80323792 249.02299500]
[85.84488678 240.89437866]
[84.79299927 228.44137573]
[92.75495911 218.29396057]
[91.86214447 203.32054138]
[90.96932983 188.34713745]
[90.07650757 173.37373352]
[80.18585205 184.65092468]
[65.37998199 187.05636597]
[52.42794037 179.49034119]
[47.25123596 165.41192627]
[52.21657944 151.25758362]
[65.05388641 143.49848938]
[79.89411163 145.68200684]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.61996460 27.52905464]
[83.98802948 36.99996567]
[69.05265045 35.60913467]
[59.36948395 24.15329170]
[60.48549271 9.19486618]
[71.76136780 -0.69727933]
[86.73778534 0.14352688]
[96.83524323 11.23474026]
[98.61770630 -3.65897679]
[100.40017700 -18.55269432]
[102.18264008 -33.44641113]
[103.74316406 -48.36501694]
[105.08139801 -63.30520248]
[106.41963196 -78.24538422]
[99.94437408 -92.68081665]
[108.78629303 -104.66704559]
[110.12452698 -119.60723114]
[111.46276093 -134.54742432]
[112.80099487 -149.48760986]
[114.13922882 -164.42779541]
[115.47746277 -179.36796570]
[116.81569672 -194.30815125]
[118.15393066 -209.24833679]
[118.48890686 -224.24459839]
[117.81912231 -239.22964478]
[117.14933777 -254.21467590]
[102.51644897 -258.00546265]
[89.65188599 -265.94235229]
[79.69954681 -277.31964111]
[73.54439545 -291.12561035]
[71.73374176 -306.13272095]
[74.42858887 -321.00650024]
[81.38931274 -334.42437744]
[91.99697113 -345.19326782]
[105.30833435 -352.35562134]
[120.13976288 -355.27450562]
[135.17247009 -353.69046021]
[149.06973267 -347.74426270]
[160.59585571 -337.96466064]
[168.72589111 -325.22128296]
[172.73696899 -310.64724731]
[172.27239990 -295.53845215]
[167.37350464 -281.23837280]
[158.47589111 -269.01858521]
[146.37072754 -259.96560669]
[132.13438416 -254.88446045]
[132.80416870 -239.89942932]
[133.47395325 -224.91438293]
[142.25608826 -237.07473755]
[156.17919922 -242.65565491]
[170.92909241 -239.92782593]
[181.93531799 -229.73651123]
[185.78749084 -215.23959351]
[181.29197693 -200.92909241]
[169.84175110 -191.23928833]
[154.98480225 -189.17265320]
[141.32470703 -195.36958313]
[133.09411621 -207.91011047]
[131.75588989 -192.96992493]
[130.41764832 -178.02973938]
[129.07942200 -163.08955383]
[127.74118042 -148.14936829]
[126.40294647 -133.20918274]
[125.06471252 -118.26899719]
[123.72647858 -103.32881165]
[130.29745483 -89.96200562]
[121.35981750 -76.90715027]
[120.02158356 -61.96696854]
[118.68334961 -47.02678299]
[121.00387573 -42.85255432]
[120.72682190 -37.17626572]
[117.07635498 -31.66394615]
[115.29389191 -16.77022743]
[113.51142883 -1.87651098]
[111.72895813 13.01720619]
[110.61331177 27.97566032]
[113.55626678 34.75510025]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[105.04991913 172.48092651]
[105.94273376 187.45433044]
[106.83554840 202.42773438]
[107.72836304 217.40113831]
[118.22229004 232.53253174]
[109.76168823 247.90734863]
[118.50396729 261.09384155]
[111.73471069 274.36132812]
[112.85035706 289.31976318]
[113.96601105 304.27822876]
[116.19112396 319.11227417]
[119.51338959 333.73974609]
[122.83564758 348.36718750]
[126.15790558 362.99465942]
[129.48016357 377.62210083]
[132.80242920 392.24957275]
[136.43856812 377.69696045]
[143.81805420 364.63775635]
[154.40817261 354.01467896]
[167.44439697 346.59466553]
[181.98564148 342.91333008]
[196.98216248 343.23648071]
[211.35134888 347.54074097]
[224.05586243 355.51541138]
[234.17855835 366.58477783]
[240.98869324 379.94973755]
[243.99459839 394.64544678]
[242.97930908 409.61105347]
[238.01609802 423.76614380]
[229.46328735 436.08886719]
[217.93827820 445.68960571]
[204.27310181 451.87530518]
[189.45423889 454.19940186]
[174.55149841 452.49411011]
[160.64068604 446.88256836]
[148.72607422 437.76983643]
[139.66777039 425.81378174]
[134.11941528 411.87640381]
[132.78117371 426.81658936]
[131.44294739 441.75677490]
[130.10470581 456.69696045]
[128.76647949 471.63714600]
[127.42823792 486.57733154]
[141.93009949 490.56933594]
[155.48600769 497.08676147]
[167.66021729 505.92013550]
[178.06137085 516.78546143]
[186.35511780 529.33349609]
[192.27484131 543.16088867]
[195.63024902 557.82312012]
[196.31347656 572.84887695]
[194.30256653 587.75512695]
[189.66215515 602.06268311]
[182.54142761 615.31164551]
[173.16926575 627.07611084]
[161.84695435 636.97784424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[42 164]
[43 163]
[44 162]
[46 160]
[49 158]
[50 157]
[51 156]
[52 155]
[60 154]
[61 153]
[62 152]
[63 151]
[65 149]
[66 148]
[67 147]
[68 146]
[69 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 137]
[81 136]
[82 135]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
