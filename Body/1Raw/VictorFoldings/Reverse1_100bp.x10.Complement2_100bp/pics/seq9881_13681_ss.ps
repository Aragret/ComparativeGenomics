%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[94.78678131 754.26556396]
[80.03860474 751.50292969]
[65.48628998 747.84631348]
[51.18395233 743.30938721]
[37.18481827 737.90887451]
[23.54095459 731.66503906]
[10.30312347 724.60101318]
[-2.47943282 716.74304199]
[-14.75916004 708.12048340]
[-26.49037743 698.76525879]
[-37.62944412 688.71234131]
[-48.13492203 677.99896240]
[-57.96772766 666.66510010]
[-67.09128571 654.75286865]
[-75.47164917 642.30657959]
[-83.07765198 629.37249756]
[-89.88098907 615.99884033]
[-95.85635376 602.23522949]
[-100.98152924 588.13299561]
[-105.23743439 573.74450684]
[-108.60823822 559.12335205]
[-111.08141327 544.32391357]
[-112.64774323 529.40118408]
[-113.30141449 514.41070557]
[-113.03998566 499.40829468]
[-111.86444092 484.44973755]
[-109.77913666 469.59063721]
[-106.79184723 454.88632202]
[-102.91367340 440.39147949]
[-98.15904999 426.16003418]
[-92.54565430 412.24490356]
[-86.09438324 398.69787598]
[-78.82922363 385.56933594]
[-70.77721405 372.90814209]
[-61.96829987 360.76138306]
[-52.43525314 349.17422485]
[-42.21353531 338.18981934]
[-31.34117699 327.84899902]
[-19.85862160 318.19021606]
[-7.80858564 309.24945068]
[4.76410389 301.05993652]
[17.81267548 293.65213013]
[31.28858566 287.05358887]
[45.14170456 281.28884888]
[59.32049942 276.37942505]
[73.77221680 272.34350586]
[88.44310760 269.19613647]
[103.27857971 266.94900513]
[101.94034576 252.00881958]
[100.60211182 237.06863403]
[91.76019287 225.08239746]
[98.23545074 210.64697266]
[95.21001434 206.95159912]
[94.47387695 201.31642151]
[97.08657837 195.24310303]
[96.19376373 180.26968384]
[92.65770721 173.77984619]
[95.40081024 165.06701660]
[94.73102570 150.08198547]
[94.06124115 135.09693909]
[93.39144897 120.11190796]
[80.96090698 109.25605774]
[80.10126495 92.77489471]
[91.33497620 80.68474579]
[90.44215393 65.71134186]
[89.54933929 50.73793793]
[88.65652466 35.76453018]
[87.76371002 20.79112434]
[76.00664520 30.10623932]
[61.35967636 26.87104988]
[54.62001419 13.47041893]
[60.75588226 -0.21720888]
[75.24414062 -4.10182238]
[87.40380096 4.67872190]
[87.62712860 -10.31961536]
[87.85045624 -25.31795311]
[88.07378387 -40.31629181]
[74.20252228 -44.38180923]
[61.86890030 -51.89655304]
[51.91218567 -62.34179688]
[45.00800323 -74.99965668]
[41.62247467 -89.00243378]
[41.98076248 -103.39206696]
[46.05210876 -117.18572998]
[53.55234909 -129.44290161]
[63.96376419 -139.32954407]
[76.57078552 -146.17485046]
[90.50919342 -149.51670837]
[90.95579529 -164.51005554]
[91.40240479 -179.50340271]
[83.14185333 -189.40925598]
[83.82249451 -201.88806152]
[92.53485870 -210.27981567]
[93.20464325 -225.26484680]
[82.81807709 -236.87333679]
[83.71080017 -252.06076050]
[94.84172821 -261.89120483]
[95.51151276 -276.87625122]
[96.18129730 -291.86129761]
[82.27561188 -297.94375610]
[71.50894165 -308.64157104]
[65.33739471 -322.50796509]
[64.59561157 -337.66757202]
[69.38392639 -352.07022095]
[79.05474854 -363.76806641]
[92.30017853 -371.17907715]
[107.32888794 -373.30096436]
[122.10836029 -369.84674072]
[134.63980103 -361.28359985]
[143.22842407 -348.76962280]
[146.71270752 -333.99719238]
[144.62139893 -318.96420288]
[137.23736572 -305.70370483]
[125.55921936 -296.00912476]
[111.16633606 -291.19149780]
[110.49655151 -276.20648193]
[109.82676697 -261.22143555]
[120.03627777 -250.43711853]
[119.57048798 -235.23062134]
[108.18968201 -224.59506226]
[107.51989746 -209.61001587]
[116.43450928 -194.49392700]
[106.39575195 -179.05679321]
[105.94914246 -164.06344604]
[105.50254059 -149.07009888]
[120.37218475 -144.36491394]
[133.32810974 -135.65617371]
[143.31796265 -123.64141083]
[149.52754211 -109.28706360]
[151.44712830 -93.75080109]
[148.91336060 -78.28808594]
[142.12312317 -64.15079498]
[131.61816406 -52.48579025]
[118.24199677 -44.24195862]
[103.07212067 -40.09296417]
[102.84879303 -25.09462547]
[102.62546539 -10.09628773]
[102.40213776 4.90205002]
[102.73711395 19.89830971]
[103.62992859 34.87171555]
[104.52275085 49.84511948]
[105.41556549 64.81852722]
[106.30838013 79.79193115]
[116.72190857 87.01772308]
[121.14109039 98.89730072]
[117.98177338 111.17217255]
[108.37648773 119.44212341]
[109.04627991 134.42715454]
[109.71606445 149.41220093]
[110.38584900 164.39723206]
[111.16716766 179.37687683]
[112.05998230 194.35028076]
[113.17563629 209.30873108]
[122.11327362 222.36358643]
[115.54229736 235.73039246]
[116.88053131 250.67057800]
[118.21876526 265.61077881]
[133.21743774 265.18554688]
[148.21412659 265.67553711]
[163.15304565 267.07885742]
[177.97863770 269.39028931]
[192.63574219 272.60125732]
[207.06982422 276.69982910]
[221.22718811 281.67071533]
[235.05517578 287.49545288]
[248.50233459 294.15237427]
[261.51864624 301.61672974]
[274.05569458 309.86068726]
[286.06686401 318.85366821]
[297.50741577 328.56213379]
[308.33480835 338.95001221]
[318.50878906 349.97866821]
[327.99148560 361.60705566]
[336.74765015 373.79190063]
[344.74465942 386.48788452]
[351.95281982 399.64782715]
[358.34527588 413.22268677]
[363.89825439 427.16204834]
[368.59112549 441.41397095]
[372.40637207 455.92550659]
[375.32986450 470.64263916]
[377.35070801 485.51065063]
[378.46136475 500.47418213]
[378.65771484 515.47760010]
[377.93905640 530.46502686]
[376.30801392 545.38085938]
[373.77066040 560.16943359]
[370.33648682 574.77587891]
[366.01821899 589.14575195]
[360.83190918 603.22564697]
[354.79690552 616.96313477]
[347.93563843 630.30718994]
[340.27362061 643.20812988]
[331.83935547 655.61798096]
[322.66421509 667.49053955]
[312.78234863 678.78167725]
[302.23049927 689.44934082]
[291.04794312 699.45391846]
[279.27624512 708.75811768]
[266.95922852 717.32733154]
[254.14271545 725.12976074]
[240.87437439 732.13635254]
[227.20356750 738.32098389]
[213.18113708 743.66064453]
[198.85925293 748.13555908]
[184.29121399 751.72900391]
[169.53118896 754.42767334]
[154.63410950 756.22143555]
[139.65538025 757.10375977]
[124.65071869 757.07116699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 157]
[49 156]
[50 155]
[52 153]
[55 152]
[56 151]
[58 150]
[59 149]
[60 148]
[61 147]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[74 138]
[75 137]
[76 136]
[77 135]
[88 125]
[89 124]
[90 123]
[93 121]
[94 120]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
