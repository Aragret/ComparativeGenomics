%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[64.97347260 612.88842773]
[50.22991562 608.77917480]
[39.09276962 598.28045654]
[34.12126541 583.80487061]
[36.45782471 568.67877197]
[45.56551743 556.37799072]
[59.35146713 549.72924805]
[59.79807281 534.73590088]
[60.24467850 519.74255371]
[60.69128418 504.74920654]
[61.13788986 489.75585938]
[61.58449554 474.76248169]
[50.18390274 469.31781006]
[41.65793991 459.93118286]
[37.29936218 447.97329712]
[37.78887177 435.20852661]
[43.08905029 423.53448486]
[52.44469833 414.70007324]
[64.49022675 410.04336548]
[65.38304138 395.06997681]
[66.27585602 380.09655762]
[67.16867065 365.12316895]
[53.10896301 361.41479492]
[40.04204941 355.02511597]
[28.47386169 346.19937134]
[18.85272026 335.27716064]
[11.55196571 322.67932129]
[6.85547733 308.89187622]
[4.94662762 294.44708252]
[5.90112734 279.90301514]
[9.68402386 265.82199097]
[16.15097809 252.74874878]
[25.05376816 241.18949890]
[36.04981995 231.59222412]
[48.71538544 224.32933044]
[62.56187820 219.68324280]
[77.05471039 217.83538818]
[78.17035675 202.87693787]
[79.28600311 187.91848755]
[71.63257599 178.55090332]
[72.43962097 166.07963562]
[81.81877136 157.22557068]
[83.15700531 142.28538513]
[84.49523926 127.34520721]
[76.33518982 139.93145752]
[64.72485352 149.42883301]
[50.77086639 154.93211365]
[35.80321884 155.91676331]
[21.24853516 152.28892517]
[8.49407864 144.39437866]
[-1.24448025 132.98558044]
[-7.03892279 119.14996338]
[-8.33695984 104.20623016]
[-5.01487160 89.57873535]
[2.61070275 76.66166687]
[13.81294155 66.68620300]
[27.52411842 60.60314178]
[42.43737030 58.99228287]
[57.13126755 62.00716019]
[70.20526886 69.36042023]
[80.41326141 80.35118866]
[86.78226471 93.93190002]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[118.22919464 29.73413467]
[123.47590637 15.68166256]
[128.72262573 1.62919176]
[121.17077637 -14.15018749]
[127.24793243 -30.19334793]
[142.73680115 -36.74573517]
[147.77371216 -50.87476349]
[152.81063843 -65.00379181]
[150.15661621 -80.60080719]
[161.71839905 -89.99092865]
[151.97837830 -103.81945038]
[152.39588928 -120.56242371]
[162.60836792 -133.62637329]
[178.43499756 -137.98478699]
[183.26098633 -152.18724060]
[188.08699036 -166.38969421]
[192.91297913 -180.59214783]
[197.73898315 -194.79461670]
[196.74209595 -199.02073669]
[197.10534668 -202.94917297]
[198.56811523 -206.18887329]
[200.76960754 -208.47361755]
[203.29812622 -209.68386841]
[208.96092224 -223.57389832]
[208.44111633 -230.16490173]
[210.95114136 -235.26361084]
[215.00463867 -237.78912354]
[221.07847595 -251.50439453]
[227.15229797 -265.21966553]
[233.22613525 -278.93490601]
[239.29997253 -292.65017700]
[226.61796570 -300.71395874]
[215.27949524 -310.57788086]
[205.53790283 -322.02160645]
[197.61079407 -334.78945923]
[191.67527771 -348.59625244]
[187.86393738 -363.13348389]
[186.26193237 -378.07641602]
[186.90505981 -393.09121704]
[189.77894592 -407.84243774]
[194.81938171 -422.00054932]
[201.91375732 -435.24920654]
[210.90359497 -447.29248047]
[221.58804321 -457.86132812]
[233.72842407 -466.71957397]
[247.05351257 -473.66937256]
[261.26562500 -478.55548096]
[276.04724121 -481.26867676]
[291.06814575 -481.74838257]
[305.99273682 -479.98388672]
[320.48767090 -476.01458740]
[334.22903442 -469.92919922]
[346.90991211 -461.86364746]
[358.24694824 -451.99810791]
[367.98693848 -440.55297852]
[375.91223145 -427.78399658]
[381.84576416 -413.97634888]
[385.65502930 -399.43856812]
[387.25491333 -384.49542236]
[386.60964966 -369.48071289]
[383.73367310 -354.72988892]
[378.69122314 -340.57250977]
[371.59494019 -327.32485962]
[362.60339355 -315.28286743]
[351.91744995 -304.71554565]
[339.77578735 -295.85900879]
[326.44973755 -288.91110229]
[312.23693848 -284.02706909]
[297.45492554 -281.31594849]
[282.43395996 -280.83837891]
[267.50958252 -282.60501099]
[253.01524353 -286.57635498]
[246.94140625 -272.86108398]
[240.86756897 -259.14581299]
[234.79373169 -245.43055725]
[228.71990967 -231.71528625]
[222.85093689 -217.91110229]
[217.18815613 -204.02108765]
[211.94143677 -189.96861267]
[207.11544800 -175.76615906]
[202.28944397 -161.56370544]
[197.46343994 -147.36125183]
[192.63745117 -133.15878296]
[201.31803894 -123.01535034]
[203.87348938 -109.80119324]
[199.53128052 -96.94760132]
[189.32431030 -87.84616852]
[175.84742737 -84.95401001]
[178.86172485 -70.36760712]
[166.93966675 -59.96687698]
[161.90274048 -45.83784866]
[156.86582947 -31.70881844]
[163.96302795 -20.95431900]
[163.56419373 -7.88056517]
[155.59100342 2.73256469]
[142.77510071 6.87590981]
[137.52838135 20.92838097]
[132.28166199 34.98085403]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[99.43542480 128.68344116]
[98.09719086 143.62362671]
[96.75894928 158.56381226]
[104.89217377 175.08447266]
[94.24446106 189.03413391]
[93.12880707 203.99258423]
[92.01316071 218.95104980]
[106.89514923 223.25772095]
[120.55577087 230.55384827]
[132.40238953 240.52021790]
[141.92160034 252.72187805]
[148.70153809 266.62707520]
[152.44958496 281.63034058]
[153.00514221 297.07907104]
[150.34637451 312.30169678]
[144.59118652 326.63699341]
[135.99186707 339.46273804]
[124.92412567 350.22280884]
[111.87065125 358.45117188]
[97.40004730 363.79220581]
[82.14207458 366.01596069]
[81.24925995 380.98937988]
[80.35644531 395.96276855]
[79.46363068 410.93618774]
[94.35557556 420.26696777]
[102.42932129 435.77581787]
[101.54067230 453.14862061]
[92.02452850 467.60394287]
[76.57784271 475.20910645]
[76.13124084 490.20245361]
[75.68463135 505.19580078]
[75.23802948 520.18914795]
[74.79141998 535.18249512]
[74.34481812 550.17584229]
[87.71057892 557.63336182]
[96.06996918 570.45440674]
[97.50206757 585.69281006]
[91.67777252 599.84680176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[19 196]
[20 195]
[21 194]
[22 193]
[37 179]
[38 178]
[39 177]
[42 175]
[43 174]
[44 173]
[63 172]
[65 170]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[74 160]
[75 159]
[76 158]
[78 156]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[91 146]
[92 145]
[95 144]
[96 143]
[97 142]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
