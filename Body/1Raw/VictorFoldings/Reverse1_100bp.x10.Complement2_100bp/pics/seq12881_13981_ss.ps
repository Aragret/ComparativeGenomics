%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[102.08045959 545.08270264]
[86.93721771 544.40588379]
[72.93991852 538.58764648]
[61.77879715 528.33068848]
[54.80162048 514.87359619]
[52.85090637 499.84124756]
[56.16222382 485.04898071]
[64.33570862 472.28302002]
[76.38436890 463.08489990]
[90.85328674 458.56533813]
[91.52307129 443.58029175]
[92.19285583 428.59524536]
[92.86264038 413.61022949]
[85.70135498 400.55014038]
[94.04714966 387.10922241]
[94.71693420 372.12420654]
[95.38671875 357.13916016]
[96.05650330 342.15411377]
[96.72628784 327.16906738]
[97.39608002 312.18405151]
[97.84268188 297.19070435]
[97.84268188 282.19070435]
[97.61935425 267.19235229]
[97.39602661 252.19401550]
[97.17269897 237.19567871]
[87.37416077 222.63697815]
[96.47628784 206.62971497]
[96.02968597 191.63635254]
[95.58307648 176.64300537]
[87.47026825 164.15174866]
[94.79325867 150.12731934]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[92.99384308 59.27826691]
[92.99384308 44.27826691]
[92.99384308 29.27826500]
[92.99384308 14.27826500]
[92.99384308 -0.72173464]
[92.54723358 -15.71508503]
[91.65441895 -30.68848991]
[90.76160431 -45.66189575]
[89.86878967 -60.63530350]
[88.97597504 -75.60871124]
[85.43630219 -90.18508148]
[79.36246490 -103.90035248]
[64.23874664 -114.40533447]
[66.78707886 -131.76831055]
[60.50971985 -145.39163208]
[54.23236084 -159.01493835]
[47.95499802 -172.63825989]
[41.67763901 -186.26156616]
[38.04515076 -188.64044189]
[35.60409927 -191.73976135]
[34.43468094 -195.09652710]
[34.45846939 -198.26922607]
[35.45919418 -200.88775635]
[30.00383949 -214.86054993]
[15.80633545 -221.26902771]
[10.47287464 -235.51715088]
[16.66987801 -249.01280212]
[11.21452045 -262.98559570]
[5.75916338 -276.95840454]
[0.30380616 -290.93121338]
[-5.15155077 -304.90399170]
[-10.06609535 -309.32653809]
[-11.75578213 -314.75256348]
[-10.55450058 -319.37490845]
[-15.59141731 -333.50393677]
[-20.62833405 -347.63296509]
[-35.44120026 -345.04705811]
[-50.47802353 -345.00189209]
[-65.30615234 -347.49880981]
[-79.49896240 -352.46591187]
[-92.64810181 -359.76031494]
[-104.37522888 -369.17214966]
[-114.34293365 -380.43060303]
[-122.26443481 -393.21173096]
[-127.91181183 -407.14785767]
[-131.12257385 -421.83795166]
[-131.80435181 -436.85937500]
[-129.93751526 -451.77993774]
[-125.57577515 -466.17031860]
[-118.84464264 -479.61651611]
[-109.93778229 -491.73159790]
[-99.11145020 -502.16705322]
[-86.67715454 -510.62261963]
[-72.99265289 -516.85498047]
[-58.45167160 -520.68481445]
[-43.47257996 -522.00201416]
[-28.48636627 -520.76855469]
[-13.92420673 -517.02001953]
[-0.20508586 -510.86422729]
[12.27626991 -502.47830200]
[23.16074753 -492.10351562]
[32.13517761 -480.03839111]
[38.94134903 -466.63003540]
[43.38343430 -452.26422119]
[45.33362579 -437.35433960]
[44.73581314 -422.32934570]
[41.60719681 -407.62152100]
[36.03779221 -393.65408325]
[28.18784142 -380.82885742]
[18.28320503 -369.51489258]
[6.60885859 -360.03765869]
[-6.49930382 -352.66989136]
[-1.46238744 -338.54086304]
[3.57452869 -324.41183472]
[8.82124710 -310.35934448]
[14.27660370 -296.38656616]
[19.73196030 -282.41375732]
[25.18731880 -268.44094849]
[30.64267540 -254.46817017]
[44.34456253 -248.74157715]
[50.07611847 -234.64888000]
[43.97663498 -220.31590271]
[49.43199539 -206.34310913]
[55.30095291 -192.53894043]
[61.57831573 -178.91561890]
[67.85567474 -165.29229736]
[74.13303375 -151.66899109]
[80.41040039 -138.04566956]
[91.64610291 -133.56398010]
[96.98736572 -122.26554871]
[93.07773590 -109.97418213]
[99.15156555 -96.25891876]
[99.79396820 -111.24515533]
[103.95683289 -125.65593719]
[111.40473175 -138.67625427]
[121.71645355 -149.56976318]
[134.30882263 -157.72035217]
[148.46968079 -162.66709900]
[163.39814758 -164.13021851]
[178.24995422 -162.02697754]
[192.18518066 -156.47631836]
[204.41567993 -147.79216003]
[214.24980164 -136.46563721]
[221.13134766 -123.13730621]
[224.67114258 -108.56095886]
[224.66899109 -93.56095886]
[221.12503052 -78.98563385]
[214.23966980 -65.65927124]
[204.40231323 -54.33555984]
[192.16931152 -45.65489960]
[178.23251343 -40.10823059]
[163.38009644 -38.00923920]
[148.45205688 -39.47663498]
[134.29261780 -44.42742920]
[121.70257568 -52.58163071]
[111.39397430 -63.47808456]
[103.94937897 -76.50152588]
[104.84219360 -61.52811813]
[105.73500824 -46.55471039]
[106.62782288 -31.58130646]
[107.52064514 -16.60790062]
[109.52535248 -14.64849281]
[110.87470245 -11.77693272]
[111.21739197 -8.23885822]
[110.29741669 -4.40243101]
[107.99384308 -0.72173464]
[107.99384308 14.27826500]
[107.99384308 29.27826500]
[107.99384308 44.27826691]
[107.99384308 59.27826691]
[111.13734436 65.96707916]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[112.72956085 142.90127563]
[109.78660583 149.68072510]
[117.93135834 163.24440002]
[110.57642365 176.19639587]
[111.02303314 191.18975830]
[111.46963501 206.18310547]
[120.30515289 215.57972717]
[120.36846161 228.07691956]
[112.17103577 236.97235107]
[112.39436340 251.97068787]
[112.61769104 266.96902466]
[112.84101868 281.96737671]
[115.89820099 287.82955933]
[115.58322144 293.50384521]
[112.84101868 297.41403198]
[115.72230530 303.36462402]
[115.23852539 309.02703857]
[112.38111877 312.85382080]
[111.71132660 327.83886719]
[111.04154205 342.82391357]
[110.37175751 357.80892944]
[109.70197296 372.79397583]
[109.03218842 387.77902222]
[116.14556122 401.91091919]
[107.84767914 414.27999878]
[107.17789459 429.26504517]
[106.50811005 444.25009155]
[105.83832550 459.23510742]
[119.84632111 465.02749634]
[131.02632141 475.26388550]
[138.02828979 488.70816040]
[140.00669861 503.73684692]
[136.72265625 518.53515625]
[128.57270813 531.31622314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 204]
[11 203]
[12 202]
[13 201]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[21 191]
[22 188]
[23 187]
[24 186]
[25 185]
[27 182]
[28 181]
[29 180]
[31 178]
[32 176]
[33 175]
[34 174]
[39 173]
[40 172]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 132]
[52 131]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[63 123]
[64 122]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[74 114]
[75 113]
[76 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
