%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[168.98680115 466.86181641]
[164.95420837 452.14102173]
[167.71653748 437.12997437]
[176.72528076 424.80905151]
[190.19178772 417.62460327]
[189.52200317 402.63955688]
[188.85221863 387.65451050]
[188.18243408 372.66949463]
[187.51264954 357.68444824]
[179.21475220 345.31536865]
[186.32812500 331.18347168]
[185.65834045 316.19842529]
[184.98855591 301.21337891]
[183.65032959 286.27319336]
[181.64631653 271.40765381]
[179.64230347 256.54214478]
[177.63829041 241.67660522]
[172.81228638 227.47415161]
[165.34454346 214.46520996]
[157.87680054 201.45625305]
[150.40905762 188.44729614]
[142.46237183 175.72526550]
[127.83244324 173.17564392]
[119.12193298 160.70240784]
[121.89540100 145.37446594]
[113.48078156 132.95697021]
[105.06616211 120.53948212]
[96.65155029 108.12198639]
[93.71794891 107.29524231]
[91.02033234 105.38280487]
[88.96139526 102.47003937]
[87.90666962 98.78984833]
[88.13154602 94.70543671]
[80.47094727 81.80911255]
[66.77092743 73.89582825]
[66.92321014 59.00200653]
[59.26260757 46.10567856]
[51.60201263 33.20935059]
[43.94141388 20.31302452]
[36.28081894 7.41669703]
[28.62022018 -5.47962952]
[14.66119576 -4.58047581]
[1.73825395 -9.75867271]
[-7.64787674 -19.95076752]
[-11.70740795 -33.12913513]
[-9.70259380 -46.70519638]
[-2.08107615 -58.03787231]
[-9.54881763 -71.04682159]
[-17.01655769 -84.05577850]
[-30.59724426 -92.17214966]
[-30.22323036 -107.06205750]
[-37.69097137 -120.07101440]
[-45.15871429 -133.07997131]
[-52.62645340 -146.08891296]
[-64.85013580 -150.20527649]
[-70.80221558 -161.19419861]
[-67.77146149 -172.90492249]
[-75.04469299 -186.02362061]
[-82.31792450 -199.14231873]
[-82.01251221 -184.14543152]
[-86.29614258 -169.77008057]
[-94.76051331 -157.38644409]
[-106.59886932 -148.17486572]
[-120.68283844 -143.01330566]
[-135.67004395 -142.39373779]
[-150.13198853 -146.37522888]
[-162.69024658 -154.57827759]
[-172.14785767 -166.22102356]
[-177.60337830 -180.19375610]
[-178.53681946 -195.16468811]
[-174.85922241 -209.70687866]
[-166.92109680 -222.43424988]
[-155.47906494 -232.13372803]
[-141.62370300 -237.88081360]
[-126.67562103 -239.12773132]
[-112.05957031 -235.75563049]
[-99.16865540 -228.08592224]
[-89.23095703 -216.84867859]
[-92.77062988 -231.42504883]
[-96.31030273 -246.00141907]
[-99.84997559 -260.57778931]
[-103.38964844 -275.15417480]
[-106.92932129 -289.73056030]
[-121.97927094 -289.29168701]
[-136.79151917 -291.99185181]
[-150.71855164 -297.71301270]
[-163.15150452 -306.20507812]
[-173.54689026 -317.09680176]
[-181.45025635 -329.91204834]
[-186.51611328 -344.09057617]
[-188.52299500 -359.01257324]
[-187.38316345 -374.02572632]
[-183.14645386 -388.47369385]
[-175.99807739 -401.72491455]
[-166.25051880 -413.20004272]
[-154.32992554 -422.39749146]
[-140.75738525 -428.91516113]
[-126.12625122 -432.46813965]
[-111.07612610 -432.90109253]
[-96.26493835 -430.19509888]
[-82.34017181 -424.46844482]
[-69.91055298 -415.97146606]
[-59.51945114 -405.07568359]
[-51.62112427 -392.25732422]
[-46.56084824 -378.07678223]
[-44.55984497 -363.15399170]
[-45.70558167 -348.14129639]
[-49.94797516 -333.69500732]
[-57.10156631 -320.44662476]
[-66.85363007 -308.97531128]
[-78.77784729 -299.78256226]
[-92.35294342 -293.27023315]
[-88.81327057 -278.69384766]
[-85.27360535 -264.11746216]
[-81.73393250 -249.54109192]
[-78.19425964 -234.96472168]
[-74.65458679 -220.38835144]
[-69.19922638 -206.41554260]
[-61.92599869 -193.29685974]
[-54.65276718 -180.17816162]
[-39.14448547 -171.96475220]
[-39.61750031 -153.55665588]
[-32.14976120 -140.54769897]
[-24.68202019 -127.53875732]
[-17.21427917 -114.52980042]
[-4.16773558 -107.34391022]
[-4.00760603 -91.52352142]
[3.46013522 -78.51456451]
[10.92787647 -65.50561523]
[27.08295250 -65.86053467]
[41.29445267 -57.97452545]
[49.63757324 -43.91717148]
[49.75373459 -27.47691345]
[41.51654816 -13.14022732]
[49.17714310 -0.24390022]
[56.83774185 12.65242672]
[64.49833679 25.54875374]
[72.15893555 38.44507980]
[79.81953430 51.34140778]
[92.97161865 58.33225632]
[93.36727142 74.14851379]
[101.02787018 87.04483795]
[109.06903839 99.70736694]
[117.48365784 112.12486267]
[125.89827728 124.54235840]
[134.31289673 136.95985413]
[149.57716370 140.06465149]
[157.93389893 152.77763367]
[154.87986755 167.31063843]
[160.23078918 153.29751587]
[174.47581482 148.59869385]
[187.11407471 156.67796326]
[188.82908630 171.57958984]
[178.35662842 182.31866455]
[163.41801453 180.97955322]
[170.88575745 193.98851013]
[178.35350037 206.99746704]
[185.82124329 220.00640869]
[184.87158203 205.03651428]
[187.23155212 190.22331238]
[192.78601074 176.28962708]
[201.26394653 163.91526794]
[212.25169373 153.70402527]
[225.21315002 146.15414429]
[239.51588440 141.63397217]
[254.46202087 140.36407471]
[269.32232666 142.40640259]
[283.37173462 147.66133118]
[295.92474365 155.87242126]
[306.36886597 166.63906860]
[314.19448853 179.43592834]
[319.01977539 193.63862610]
[320.60934448 208.55415344]
[318.88558960 223.45478821]
[313.93261719 237.61346436]
[305.99212646 250.33935547]
[295.45150757 261.01156616]
[282.82510376 269.10931396]
[268.72897339 274.23754883]
[253.85086060 276.14602661]
[238.91674805 274.74163818]
[224.65528870 270.09289551]
[211.76232910 262.42663574]
[200.86694336 252.11689758]
[192.50381470 239.67259216]
[194.50782776 254.53813171]
[196.51184082 269.40365601]
[198.51585388 284.26919556]
[208.44790649 273.02844238]
[223.41020203 271.96545410]
[234.83164978 281.68917847]
[236.16952515 296.62939453]
[226.65742493 308.22769165]
[211.74433899 309.84002686]
[199.97360229 300.54360962]
[200.64338684 315.52862549]
[201.31317139 330.51367188]
[209.65896606 343.95458984]
[202.49768066 357.01464844]
[203.16746521 371.99969482]
[203.83724976 386.98474121]
[204.50703430 401.96978760]
[205.17681885 416.95480347]
[219.23059082 422.90917969]
[229.30262756 434.37725830]
[233.39315796 449.08203125]
[230.68997192 464.10385132]
[221.72981262 476.46017456]
[208.29170227 483.69757080]
[193.04380798 484.37911987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[11 197]
[12 196]
[13 195]
[14 188]
[15 187]
[16 186]
[17 185]
[18 158]
[19 157]
[20 156]
[21 155]
[22 149]
[25 146]
[26 145]
[27 144]
[28 143]
[33 142]
[34 141]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[47 129]
[48 128]
[49 127]
[51 125]
[52 124]
[53 123]
[54 122]
[57 120]
[58 119]
[59 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
