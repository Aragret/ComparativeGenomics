%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[245.80398560 504.83645630]
[258.45404053 496.66390991]
[246.75372314 487.44696045]
[249.17523193 471.81216431]
[243.92851257 457.75970459]
[238.68179321 443.70721436]
[233.43507385 429.65475464]
[228.18835449 415.60229492]
[216.48805237 406.38534546]
[218.90954590 390.75054932]
[213.66284180 376.69805908]
[208.41612244 362.64559937]
[203.16940308 348.59313965]
[197.92268372 334.54064941]
[191.64532471 320.91732788]
[184.37208557 307.79864502]
[177.09886169 294.67996216]
[169.82563782 281.56124878]
[162.55239868 268.44256592]
[155.27917480 255.32386780]
[148.00593567 242.20516968]
[140.73271179 229.08648682]
[138.86590576 243.96986389]
[129.88648987 255.98527527]
[116.14167023 261.99191284]
[101.22429657 260.41967773]
[89.03373718 251.67950439]
[82.75658417 238.05609131]
[84.03366089 223.11056519]
[92.53115082 210.74963379]
[106.02782440 204.20440674]
[120.99568176 205.18582153]
[133.52157593 213.43666077]
[128.27485657 199.38418579]
[122.99031067 194.21743774]
[123.05634308 185.08323669]
[118.01942444 170.95420837]
[112.98250580 156.82518005]
[99.02094269 146.19308472]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[70.07910919 63.75308228]
[61.52239990 76.07309723]
[48.73686981 83.91721344]
[33.87710953 85.96357727]
[19.44725418 81.86733246]
[7.87898397 72.31876373]
[1.12175596 58.92697906]
[0.31428197 43.94873047]
[5.59263563 29.90810966]
[16.06732178 19.17121315]
[29.97317123 13.54739475]
[44.96680450 13.98436642]
[58.52153397 20.40849113]
[68.35395050 31.73863983]
[65.90822601 16.93936920]
[63.46249390 2.14009809]
[61.01676941 -12.65917301]
[58.35097122 -27.42038918]
[55.46569824 -42.14028168]
[52.58042526 -56.86017227]
[49.58565140 -71.55817413]
[46.48154068 -86.23348236]
[43.37743378 -100.90878296]
[40.27332306 -115.58408356]
[29.84769058 -127.48436737]
[34.78371429 -141.53730774]
[31.67960548 -156.21260071]
[21.25397301 -168.11288452]
[26.18999672 -182.16581726]
[23.08588791 -196.84112549]
[19.98177719 -211.51643372]
[12.65703678 -198.42642212]
[-0.91419035 -192.03723145]
[-15.67017174 -194.73185730]
[-26.10729027 -205.50527954]
[-28.33276176 -220.33926392]
[-21.51653671 -233.70111084]
[-8.20090008 -240.60719299]
[6.64774418 -238.48168945]
[17.49177742 -228.11634827]
[16.15354347 -243.05653381]
[14.81530952 -257.99670410]
[13.36589050 -272.92651367]
[11.80536747 -287.84512329]
[10.24484444 -302.76373291]
[8.68432140 -317.68234253]
[-6.14825535 -320.59542847]
[-19.46242714 -327.75253296]
[-30.07430458 -338.51727295]
[-37.04029083 -351.93243408]
[-39.74097061 -366.80514526]
[-37.93620682 -381.81295776]
[-31.78647041 -395.62136841]
[-21.83859825 -407.00253296]
[-8.97714520 -414.94448853]
[5.65425539 -418.74099731]
[20.75459099 -418.05450439]
[34.98114777 -412.94601440]
[47.06891251 -403.86984253]
[55.94305038 -391.63296509]
[60.81447220 -377.32348633]
[61.25002289 -362.21383667]
[57.21096802 -347.64752197]
[49.05646133 -334.91976929]
[37.51159286 -325.16235352]
[23.60292625 -319.24285889]
[25.16344833 -304.32424927]
[26.72397232 -289.40563965]
[28.28449440 -274.48706055]
[32.10680771 -268.16156006]
[29.75549507 -259.33496094]
[31.09372902 -244.39476013]
[32.43196106 -229.45457458]
[34.65708160 -214.62054443]
[37.76118851 -199.94523621]
[40.86529922 -185.26992798]
[51.06890488 -174.41932678]
[46.35490799 -159.31671143]
[49.45901871 -144.64141846]
[59.66262054 -133.79080200]
[54.94862366 -118.68819427]
[58.05273438 -104.01289368]
[61.15684509 -89.33759308]
[64.26095581 -74.66228485]
[68.72059631 -68.76878357]
[67.30031586 -59.74544525]
[70.18559265 -45.02555466]
[73.07086182 -30.30566216]
[76.46432495 -26.94508934]
[77.78273010 -21.41708374]
[75.81604004 -15.10490036]
[78.26176453 -0.30562934]
[80.70749664 14.49364185]
[83.15322113 29.29291153]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[127.93044281 128.91606140]
[132.01115417 140.72840881]
[127.11153412 151.78826904]
[132.14845276 165.91729736]
[137.18536377 180.04632568]
[142.32733154 194.13746643]
[147.57405090 208.18994141]
[153.85140991 221.81324768]
[161.12463379 234.93194580]
[168.39787292 248.05064392]
[175.67109680 261.16934204]
[182.94432068 274.28802490]
[190.21755981 287.40673828]
[197.49078369 300.52542114]
[204.76400757 313.64410400]
[206.63081360 298.76074219]
[215.61022949 286.74533081]
[229.35505676 280.73867798]
[244.27243042 282.31091309]
[256.46298218 291.05108643]
[262.74014282 304.67449951]
[261.46307373 319.62002563]
[252.96557617 331.98095703]
[239.46890259 338.52618408]
[224.50103760 337.54476929]
[211.97515869 329.29394531]
[217.22186279 343.34640503]
[222.46858215 357.39889526]
[227.71530151 371.45135498]
[232.96202087 385.50381470]
[245.03761292 395.72589111]
[242.24082947 410.35556030]
[247.48754883 424.40805054]
[252.73426819 438.46051025]
[257.98098755 452.51296997]
[263.22769165 466.56546021]
[275.30328369 476.78753662]
[272.50650024 491.41720581]
[287.41720581 489.29949951]
[302.43453979 490.43713379]
[316.85607910 494.77685547]
[330.00729370 502.11575317]
[341.27313232 512.11053467]
[350.12661743 524.29370117]
[356.15365601 538.09545898]
[359.07241821 552.87023926]
[358.74630737 567.92706299]
[355.19061279 582.56164551]
[348.57162476 596.08953857]
[339.19897461 607.87799072]
[327.51098633 617.37561035]
[314.05432129 624.13818359]
[299.45843506 627.84948730]
[284.40594482 628.33581543]
[269.60089111 625.57452393]
[255.73574829 619.69476318]
[243.45901489 610.97143555]
[233.34489441 599.81268311]
[225.86642456 586.74029541]
[221.37341309 572.36578369]
[220.07598877 557.36145020]
[222.03485107 542.42901611]
[227.15835571 528.26696777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[22 155]
[33 154]
[34 153]
[36 152]
[37 151]
[38 150]
[40 147]
[41 146]
[43 144]
[44 143]
[45 142]
[46 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 134]
[65 133]
[66 132]
[67 130]
[68 129]
[69 128]
[70 127]
[72 125]
[73 124]
[75 122]
[76 121]
[77 120]
[86 119]
[87 118]
[88 117]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
