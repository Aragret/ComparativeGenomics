%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[180.65734863 717.47253418]
[181.06933594 702.46032715]
[183.25401306 687.60217285]
[187.18072510 673.10675049]
[192.79432678 659.17749023]
[200.01600647 646.01000977]
[208.74440002 633.78906250]
[218.85697937 622.68627930]
[230.21176147 612.85748291]
[242.64935303 604.44067383]
[235.76994324 591.11120605]
[228.89053345 577.78179932]
[222.01110840 564.45233154]
[215.13169861 551.12292480]
[208.25228882 537.79351807]
[192.02687073 533.36920166]
[183.86080933 518.28173828]
[189.23683167 501.63491821]
[182.15972900 488.40936279]
[175.08261108 475.18383789]
[168.00550842 461.95831299]
[160.92840576 448.73278809]
[153.85130310 435.50726318]
[146.77420044 422.28173828]
[139.69709778 409.05621338]
[132.61997986 395.83068848]
[133.06404114 410.82409668]
[129.81530762 425.46807861]
[123.07243347 438.86709595]
[113.24776459 450.20181274]
[100.94207764 458.77911377]
[86.90786743 464.07449341]
[72.00333405 465.76409912]
[57.13989258 463.74465942]
[43.22644806 458.13967896]
[31.11381721 449.29183960]
[21.54269028 437.74221802]
[15.09834290 424.19708252]
[12.17485142 409.48474121]
[12.95098877 394.50485229]
[17.37929344 380.17340088]
[25.18897247 367.36679077]
[35.90246201 356.86816406]
[48.86462402 349.31951904]
[63.28282547 345.18243408]
[78.27537537 344.70986938]
[92.92549133 347.93078613]
[106.33729553 354.64819336]
[117.69065857 364.45132446]
[126.29133606 376.74069214]
[124.06621552 361.90667725]
[121.84110260 347.07263184]
[119.61598206 332.23858643]
[117.39086914 317.40454102]
[104.64019775 315.72262573]
[92.74783325 310.79031372]
[82.52814484 302.93783569]
[74.68291473 292.69558716]
[69.75315857 280.75833130]
[68.08180237 267.93823242]
[69.78985596 255.10932922]
[74.76766968 243.14817810]
[82.68195343 232.87385559]
[92.99807739 224.99188232]
[105.01616669 220.04576111]
[103.45564270 205.12716675]
[101.89511871 190.20855713]
[100.33459473 175.28994751]
[98.77407074 160.37135315]
[97.21354675 145.45274353]
[95.65303040 130.53413391]
[80.88383484 124.20333862]
[71.30365753 111.30263519]
[69.51300812 95.33386230]
[75.99794769 80.63169861]
[88.99816895 71.18699646]
[87.21569824 56.29327774]
[77.89333344 43.51031876]
[84.06341553 29.95379257]
[82.28095245 15.06007576]
[80.49848175 0.16635862]
[73.57258606 13.47169209]
[61.30962753 22.10997200]
[46.44918823 24.15138245]
[32.31112671 19.13986969]
[22.05392456 8.19501686]
[17.96906662 -6.23806810]
[20.96911812 -20.93499565]
[30.38385963 -32.61243439]
[44.11001587 -38.66161728]
[59.08113098 -37.73114014]
[71.95261383 -30.02887344]
[79.84895325 -17.27550125]
[80.51873779 -32.26054001]
[77.77564240 -40.97336197]
[81.31169128 -47.46320724]
[82.20450592 -62.43661499]
[83.09732056 -77.41001892]
[83.99014282 -92.38342285]
[70.06993103 -98.38373566]
[59.04357529 -108.78542328]
[52.24254990 -122.33245087]
[50.48811340 -137.38893127]
[53.99212265 -152.13673401]
[62.33145523 -164.79499817]
[74.49909210 -173.83514404]
[89.02573395 -178.16555786]
[104.15721130 -177.26332092]
[118.06633759 -171.23738098]
[129.07351685 -160.81538391]
[135.84956360 -147.25584412]
[137.57624817 -132.19615173]
[134.04505920 -117.45482635]
[125.68241882 -104.81196594]
[113.49813843 -95.79425049]
[98.96354675 -91.49060822]
[98.07073212 -76.51720428]
[97.17791748 -61.54380035]
[96.28509521 -46.57039261]
[95.50377655 -31.59075546]
[94.83399200 -16.60571671]
[95.39220428 -1.61610723]
[97.17466736 13.27760983]
[98.95713043 28.17132759]
[108.15200806 39.88898849]
[102.10942078 54.51081085]
[103.89188385 69.40452576]
[116.66218567 74.04617310]
[126.19850159 83.72523499]
[130.64991760 96.56308746]
[129.15243530 110.06801605]
[121.99671936 121.61882782]
[110.57163239 128.97361755]
[112.13215637 143.89221191]
[113.69268036 158.81082153]
[115.25319672 173.72943115]
[116.81372070 188.64802551]
[118.37424469 203.56663513]
[119.93476868 218.48524475]
[136.77087402 222.34979248]
[151.24899292 231.72644043]
[161.63183594 245.46992493]
[166.68040466 261.91223145]
[165.80183411 279.06500244]
[159.11895752 294.85998535]
[147.45347595 307.39846802]
[132.22491455 315.17941284]
[134.45002747 330.01345825]
[136.67514038 344.84750366]
[138.90026855 359.68154907]
[141.12538147 374.51559448]
[145.84552002 388.75357056]
[152.92262268 401.97909546]
[159.99972534 415.20462036]
[167.07682800 428.43017578]
[174.15393066 441.65570068]
[181.23103333 454.88122559]
[188.30815125 468.10675049]
[195.38525391 481.33227539]
[202.46235657 494.55780029]
[215.71691895 496.95178223]
[225.03656006 506.40454102]
[227.17848206 519.30780029]
[221.58172607 530.91406250]
[228.46113586 544.24353027]
[235.34054565 557.57293701]
[242.21995544 570.90240479]
[249.09936523 584.23181152]
[255.97877502 597.56121826]
[270.04467773 592.29937744]
[284.63418579 588.73815918]
[299.54251099 586.92749023]
[314.56033325 586.89288330]
[329.47686768 588.63470459]
[344.08264160 592.12860107]
[358.17266846 597.32543945]
[371.54913330 604.15234375]
[384.02426147 612.51342773]
[395.42291260 622.29132080]
[405.58505249 633.34875488]
[414.36801147 645.53057861]
[421.64852905 658.66564941]
[427.32440186 672.56964111]
[431.31591797 687.04736328]
[433.56704712 701.89550781]
[434.04617310 716.90576172]
[432.74661255 731.86730957]
[429.68658447 746.57006836]
[424.90905762 760.80780029]
[418.48107910 774.38043213]
[410.49288940 787.09759521]
[401.05667114 798.78063965]
[390.30484009 809.26562500]
[378.38836670 818.40527344]
[365.47451782 826.07141113]
[351.74462891 832.15631104]
[337.39138794 836.57458496]
[322.61633301 839.26422119]
[307.62689209 840.18743896]
[292.63342285 839.33129883]
[277.84649658 836.70776367]
[263.47363281 832.35375977]
[249.71665955 826.33032227]
[236.76866150 818.72204590]
[224.81141663 809.63580322]
[214.01280212 799.19897461]
[204.52439880 787.55828857]
[196.47941589 774.87701416]
[189.99078369 761.33325195]
[185.14959717 747.11706543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[76 127]
[77 126]
[79 124]
[80 123]
[81 122]
[93 121]
[94 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
