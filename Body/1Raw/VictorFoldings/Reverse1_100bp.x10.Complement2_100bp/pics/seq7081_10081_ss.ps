%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[148.49630737 709.43652344]
[139.03895569 697.77368164]
[130.92204285 685.14123535]
[124.24409485 671.69250488]
[119.08616638 657.59075928]
[115.51088715 643.00720215]
[113.56164551 628.11883545]
[113.26210785 613.10638428]
[114.61591339 598.15209961]
[117.60662842 583.43750000]
[122.19793701 569.14123535]
[128.33412170 555.43682861]
[135.94067383 542.49066162]
[144.92527771 530.45989990]
[155.17884827 519.49047852]
[166.57695007 509.71569824]
[178.98118591 501.25411987]
[192.24098206 494.20852661]
[206.19540405 488.66436768]
[202.22329712 474.19985962]
[198.25120544 459.73532104]
[194.27911377 445.27081299]
[183.44775391 435.04675293]
[187.25447083 419.69033813]
[183.28237915 405.22583008]
[179.31028748 390.76129150]
[166.17816162 379.12023926]
[170.98173523 361.34362793]
[166.79472351 346.93984985]
[162.60771179 332.53607178]
[158.42070007 318.13229370]
[154.23368835 303.72851562]
[150.04667664 289.32473755]
[145.85966492 274.92095947]
[141.67265320 260.51715088]
[137.48564148 246.11337280]
[124.18165588 234.66912842]
[128.72003174 216.82298279]
[124.31902313 202.48313904]
[119.91802979 188.14328003]
[115.51702881 173.80343628]
[111.11603546 159.46359253]
[97.64313507 148.21867371]
[101.91529846 130.30694580]
[97.30129242 116.03421021]
[84.56626892 105.11654663]
[88.25723267 88.75337982]
[83.43123627 74.55092621]
[77.45967102 60.79082108]
[70.38256836 47.56529617]
[63.30545807 34.33976746]
[56.49737549 28.24979210]
[56.22310638 20.86422729]
[49.34369278 7.53479910]
[42.46427917 -5.79463053]
[35.58486938 -19.12405968]
[31.98792648 -4.56171083]
[20.59306908 5.19314718]
[5.65029812 6.50219250]
[-7.26710272 -1.12281549]
[-13.34126282 -14.83793736]
[-10.30667114 -29.52777290]
[0.70484608 -39.71337509]
[15.58626366 -41.59576797]
[28.78799248 -34.47201920]
[23.54127312 -48.52449036]
[18.29455566 -62.57696152]
[13.04783726 -76.62943268]
[7.80111933 -90.68190765]
[2.55440092 -104.73437500]
[-2.69231725 -118.78684998]
[-6.13781357 -121.42929077]
[-8.34158421 -124.70159149]
[-9.25810051 -128.13603210]
[-8.99840260 -131.29817200]
[-7.80569077 -133.83502197]
[-12.20668888 -148.17486572]
[-16.60768700 -162.51472473]
[-31.53219986 -160.66267395]
[-46.55156708 -161.43058777]
[-61.20937347 -164.79508972]
[-75.06018066 -170.65396118]
[-87.68307495 -178.82913208]
[-98.69446564 -189.07220459]
[-107.75972748 -201.07188416]
[-114.60337830 -214.46350098]
[-119.01744080 -228.84011841]
[-120.86779022 -243.76484680]
[-120.09818268 -258.78411865]
[-116.73201752 -273.44155884]
[-110.87157440 -287.29168701]
[-102.69496155 -299.91366577]
[-92.45064545 -310.92388916]
[-80.44994354 -319.98779297]
[-67.05754852 -326.82992554]
[-52.68042755 -331.24234009]
[-37.75549698 -333.09100342]
[-22.73630142 -332.31970215]
[-8.07925987 -328.95187378]
[5.77021551 -323.08984375]
[18.39125633 -314.91180420]
[29.40032387 -304.66625977]
[38.46286392 -292.66452026]
[45.30347443 -279.27133179]
[49.71428299 -264.89373779]
[51.56124115 -249.96858215]
[50.78823090 -234.94947815]
[47.41873932 -220.29281616]
[41.55515671 -206.44400024]
[33.37567902 -193.82389832]
[23.12886810 -182.81599426]
[11.12611103 -173.75480652]
[-2.26783967 -166.91571045]
[2.13315845 -152.57586670]
[6.53415632 -138.23602295]
[11.36015415 -124.03356934]
[16.60687256 -109.98109436]
[21.85359001 -95.92862701]
[27.10030937 -81.87615204]
[32.34702682 -67.82368469]
[37.59374619 -53.77120972]
[42.84046173 -39.71873856]
[48.91429901 -26.00347137]
[55.79370880 -12.67404270]
[62.67312241 0.65538639]
[69.55253601 13.98481560]
[76.53099060 27.26266098]
[83.60809326 40.48818970]
[90.68519592 53.71371841]
[92.29779053 38.80065155]
[100.57931519 26.29400063]
[113.67967224 18.98778534]
[128.67219543 18.51423264]
[142.20751953 24.97913361]
[151.26182556 36.93821335]
[153.81234741 51.71978378]
[149.28930664 66.02160645]
[138.70314026 76.64861298]
[124.41884613 81.22669983]
[109.62756348 78.73312378]
[97.63368988 69.72492981]
[102.45968628 83.92738342]
[112.57754517 89.69541931]
[116.24241638 100.75027466]
[111.57402039 111.42020416]
[116.18803406 125.69293976]
[127.29527283 132.24977112]
[130.84445190 144.23255920]
[125.45587921 155.06259155]
[129.85687256 169.40243530]
[134.25787354 183.74229431]
[138.65887451 198.08213806]
[143.05987549 212.42198181]
[154.06825256 219.14346313]
[157.43864441 231.17774963]
[151.88941956 241.92637634]
[156.07643127 256.33013916]
[160.26344299 270.73394775]
[164.45045471 285.13772583]
[168.63746643 299.54150391]
[172.82447815 313.94528198]
[177.01148987 328.34906006]
[181.19850159 342.75283813]
[185.38551331 357.15661621]
[196.29260254 364.04125977]
[199.48344421 376.12438965]
[193.77481079 386.78918457]
[197.74690247 401.25372314]
[201.71899414 415.71826172]
[212.83445740 426.97689819]
[208.74363708 441.29870605]
[212.71572876 455.76321411]
[216.68783569 470.22775269]
[220.65992737 484.69226074]
[235.48873901 482.33227539]
[250.48716736 481.61791992]
[265.47314453 482.55786133]
[280.26477051 485.14071655]
[294.68246460 489.33511353]
[308.55123901 495.09017944]
[321.70269775 502.33599854]
[333.97723389 510.98464966]
[345.22583008 520.93109131]
[355.31195068 532.05468750]
[364.11312866 544.22027588]
[371.52255249 557.28027344]
[377.45028687 571.07611084]
[381.82434082 585.44036865]
[384.59164429 600.19854736]
[385.71856689 615.17163086]
[385.19149780 630.17785645]
[383.01678467 645.03497314]
[379.22082520 659.56262207]
[373.84973145 673.58459473]
[366.96865845 686.93054199]
[358.66116333 699.43847656]
[349.02810669 710.95660400]
[338.18640137 721.34509277]
[326.26763916 730.47778320]
[313.41656494 738.24389648]
[299.78909302 744.54913330]
[285.55072021 749.31695557]
[270.87426758 752.48944092]
[255.93788147 754.02807617]
[240.92288208 753.91430664]
[226.01153564 752.14935303]
[211.38485718 748.75476074]
[197.22039795 743.77166748]
[183.69009399 737.26055908]
[170.95820618 729.30053711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 174]
[20 173]
[21 172]
[22 171]
[24 169]
[25 168]
[26 167]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[44 146]
[45 145]
[47 142]
[48 141]
[49 129]
[50 128]
[51 127]
[53 126]
[54 125]
[55 124]
[56 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[76 115]
[77 114]
[78 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
