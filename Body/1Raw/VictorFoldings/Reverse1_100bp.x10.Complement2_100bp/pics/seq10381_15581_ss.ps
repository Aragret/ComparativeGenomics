%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[212.55479431 394.30334473]
[224.26138306 384.87457275]
[216.79364014 371.86563110]
[209.32589722 358.85665894]
[201.85816956 345.84771729]
[194.39042664 332.83877563]
[186.92268372 319.82980347]
[178.14207458 307.66836548]
[168.14390564 296.48638916]
[158.14573669 285.30441284]
[148.14756775 274.12243652]
[152.14045715 288.58123779]
[153.27615356 303.53817749]
[151.51217651 318.43408203]
[146.91448975 332.71209717]
[139.65496826 345.83837891]
[130.00502014 357.32220459]
[118.32540894 366.73425293]
[105.05279541 373.72265625]
[90.68337250 378.02612305]
[75.75437164 379.48376465]
[60.82390594 378.04113770]
[46.45016861 373.75210571]
[33.17053604 366.77706909]
[21.48147011 357.37673950]
[11.81998062 345.90261841]
[4.54726696 332.78363037]
[-0.06477474 318.51028442]
[-1.84372008 303.61611938]
[-0.72306168 288.65805054]
[3.25530362 274.19525146]
[9.94264221 260.76843262]
[19.08894157 248.87956238]
[30.35226250 238.97311401]
[43.31151581 231.41946411]
[57.48221207 226.50099182]
[72.33457184 224.40158081]
[87.31331635 225.19973755]
[101.85847473 228.86558533]
[115.42624664 235.26211548]
[127.50939941 244.15016174]
[137.65252686 255.19258118]
[133.46551514 240.78878784]
[120.16152954 229.34454346]
[124.69989777 211.49839783]
[120.29889679 197.15855408]
[108.18272400 192.77360535]
[100.69256592 182.05075073]
[100.74667358 168.77642822]
[108.54934692 157.79768372]
[104.36233521 143.39390564]
[93.91575623 137.29507446]
[90.30960846 125.32931519]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[72.32971954 39.37801743]
[73.69804382 32.11513519]
[69.94174194 17.59307480]
[66.18544006 3.07101536]
[57.65950775 15.41234684]
[42.92955017 18.24577141]
[30.43355370 9.94817734]
[27.32979584 -4.72720003]
[35.39624786 -17.37363625]
[50.01208115 -20.74667740]
[62.80411911 -12.91486073]
[52.92026138 -25.26880455]
[58.47885895 -39.08731461]
[48.59500504 -51.44126129]
[54.15360260 -65.25977325]
[51.70787430 -80.05904388]
[41.82401657 -92.41298676]
[47.38261414 -106.23149872]
[37.37091064 -114.36344910]
[35.63853073 -126.74014282]
[42.57403183 -136.65101624]
[40.34891510 -151.48506165]
[38.12379837 -166.31910706]
[35.89868164 -181.15315247]
[20.86455536 -181.53552246]
[6.12526798 -184.52291870]
[-7.87127113 -190.02455139]
[-20.69972229 -197.87324524]
[-31.97024536 -207.83047485]
[-41.34033966 -219.59365845]
[-48.52526093 -232.80531311]
[-53.30666733 -247.06398010]
[-55.53925323 -261.93630981]
[-55.15517807 -276.97039795]
[-52.16611099 -291.70935059]
[-46.66288376 -305.70526123]
[-38.81274033 -318.53283691]
[-28.85423088 -329.80221558]
[-17.08998680 -339.17098999]
[-3.87750864 -346.35440063]
[10.38169003 -351.13418579]
[25.25428963 -353.36508179]
[40.28832626 -352.97930908]
[55.02693558 -349.98858643]
[69.02222443 -344.48376465]
[81.84889984 -336.63217163]
[93.11716461 -326.67236328]
[102.48458862 -314.90707397]
[109.66651154 -301.69378662]
[114.44468689 -287.43402100]
[116.67389679 -272.56118774]
[116.28640747 -257.52719116]
[113.29399872 -242.78892517]
[107.78759766 -228.79425049]
[99.93454742 -215.96847534]
[89.97348022 -204.70133972]
[78.20711517 -195.33525085]
[64.99300385 -188.15481567]
[50.73272324 -183.37826538]
[52.95783997 -168.54421997]
[55.18295670 -153.71017456]
[57.40807343 -138.87612915]
[69.06382751 -125.75704956]
[62.18188477 -108.67722321]
[71.89080811 -97.38182068]
[66.50714111 -82.50476837]
[68.95287323 -67.70549774]
[78.66179657 -56.41009903]
[73.27812958 -41.53304291]
[82.98705292 -30.23764229]
[77.60339355 -15.36058807]
[80.70750427 -0.68528545]
[84.46379852 13.83677387]
[88.22010040 28.35883331]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[123.86190033 122.41403198]
[118.76611328 139.20689392]
[122.95312500 153.61067200]
[138.43568420 161.75375366]
[143.14591980 178.25007629]
[134.63874817 192.75755310]
[139.03974915 207.09739685]
[150.04812622 213.81887817]
[153.41851807 225.85316467]
[147.86929321 236.60177612]
[152.05630493 251.00556946]
[159.32952881 264.12426758]
[169.32771301 275.30624390]
[179.32588196 286.48822021]
[189.32405090 297.67019653]
[186.39173889 282.95959473]
[189.23672485 268.23187256]
[197.43696594 255.67175293]
[209.77600098 247.14250183]
[224.42341614 243.90936279]
[239.20634460 246.45196533]
[251.93185425 254.39309692]
[260.71215820 266.55477905]
[264.24475098 281.13287354]
[262.00561523 295.96478271]
[254.32691956 308.85034180]
[242.34771729 317.87802124]
[227.84507751 321.70861816]
[212.97038269 319.77386475]
[199.93164062 312.36206055]
[207.39936829 325.37103271]
[214.86711121 338.37997437]
[222.33485413 351.38891602]
[229.80259705 364.39788818]
[237.27033997 377.40682983]
[251.31594849 372.05264282]
[266.02624512 368.96173096]
[281.03897095 368.21020508]
[295.98440552 369.81652832]
[310.49450684 373.74121094]
[324.21197510 379.88754272]
[336.79901123 388.10418701]
[347.94561768 398.18884277]
[357.37728882 409.89309692]
[364.86178589 422.92877197]
[370.21481323 436.97482300]
[373.30450439 451.68536377]
[374.05480957 466.69815063]
[372.44723511 481.64346313]
[368.52139282 496.15325928]
[362.37390137 509.87020874]
[354.15621948 522.45654297]
[344.07067871 533.60229492]
[332.36563110 543.03302002]
[319.32934570 550.51647949]
[305.28283691 555.86834717]
[290.57202148 558.95678711]
[275.55920410 559.70587158]
[260.61401367 558.09704590]
[246.10455322 554.17004395]
[232.38809204 548.02142334]
[219.80242920 539.80267334]
[208.65750122 529.71618652]
[199.22775269 518.01037598]
[191.74539185 504.97348022]
[186.39469910 490.92654419]
[183.30741882 476.21548462]
[182.55958557 461.20257568]
[184.16963196 446.25753784]
[188.09788513 431.74838257]
[194.24761963 418.03244019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 154]
[9 153]
[10 152]
[11 151]
[42 150]
[43 149]
[45 146]
[46 145]
[50 142]
[51 141]
[54 139]
[56 137]
[57 136]
[58 135]
[59 134]
[61 133]
[62 132]
[63 131]
[70 130]
[72 128]
[74 126]
[75 125]
[77 123]
[80 121]
[81 120]
[82 119]
[83 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
