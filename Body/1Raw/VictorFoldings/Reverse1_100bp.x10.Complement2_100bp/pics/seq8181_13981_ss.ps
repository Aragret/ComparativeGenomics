%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[255.24520874 412.92858887]
[249.37623596 399.12442017]
[243.50727844 385.32025146]
[237.63832092 371.51608276]
[231.76936340 357.71188354]
[225.90039062 343.90771484]
[208.54185486 338.09423828]
[200.81259155 321.14810181]
[208.04640198 303.63848877]
[201.76904297 290.01516724]
[195.49168396 276.39187622]
[189.21432495 262.76855469]
[182.93696594 249.14523315]
[176.65960693 235.52191162]
[170.38224792 221.89860535]
[163.01155090 208.83441162]
[154.59693909 196.41691589]
[146.18231201 183.99942017]
[137.76770020 171.58192444]
[131.41314697 167.80813599]
[129.32185364 158.91632080]
[121.09304047 146.37492371]
[112.86423492 133.83352661]
[106.56657410 129.96554565]
[104.60788727 121.04357910]
[96.56671906 108.38105011]
[92.95992279 107.01597595]
[89.97235107 104.06771088]
[88.29757690 99.84845734]
[88.46389771 94.96868134]
[80.99615479 81.95973206]
[73.52841949 68.95077515]
[69.01348114 66.33115387]
[66.23290253 62.61339951]
[65.31455231 58.64204025]
[66.03256989 55.18997192]
[59.15316010 41.86054230]
[52.27374649 28.53111267]
[45.39433670 15.20168400]
[33.36665344 10.54361248]
[27.91118813 -0.70012671]
[31.46183205 -12.26384068]
[24.78163719 -25.69421768]
[8.26918983 -26.54917717]
[-5.48015833 -35.56311035]
[-12.76563072 -50.19659042]
[-11.68352127 -66.41339874]
[-2.62366223 -79.79366302]
[-9.50307465 -93.12309265]
[-16.38248825 -106.45252228]
[-23.26189995 -119.78195190]
[-30.14131165 -133.11137390]
[-33.02843857 -118.39185333]
[-43.33815002 -107.49644470]
[-57.87587357 -103.80122375]
[-72.13693237 -108.45119476]
[-81.70238495 -120.00550079]
[-83.60826874 -134.88392639]
[-77.26403046 -148.47622681]
[-64.63549805 -156.57067871]
[-49.63576126 -156.65913391]
[-36.91247559 -148.71397400]
[-41.94939041 -162.84300232]
[-46.98630905 -176.97203064]
[-52.02322388 -191.10107422]
[-57.06013870 -205.23010254]
[-62.09705734 -219.35913086]
[-67.13397217 -233.48815918]
[-79.05603027 -243.88888550]
[-76.04174042 -258.47528076]
[-81.07865906 -272.60430908]
[-95.77494049 -269.48941040]
[-110.75527954 -268.36120605]
[-125.75233459 -269.23977661]
[-140.49845886 -272.10949707]
[-154.73048401 -276.91915894]
[-168.19444275 -283.58288574]
[-180.65003967 -291.98181152]
[-191.87498474 -301.96597290]
[-201.66897583 -313.35726929]
[-209.85720825 -325.95233154]
[-216.29357910 -339.52645874]
[-220.86318970 -353.83737183]
[-223.48451233 -368.62966919]
[-224.11076355 -383.63937378]
[-222.73075867 -398.59863281]
[-219.36914062 -413.24044800]
[-214.08587646 -427.30352783]
[-206.97528076 -440.53692627]
[-198.16423035 -452.70446777]
[-187.80998230 -463.58898926]
[-176.09732056 -472.99627686]
[-163.23524475 -480.75842285]
[-149.45332336 -486.73687744]
[-134.99751282 -490.82498169]
[-120.12577057 -492.94979858]
[-105.10351562 -493.07336426]
[-90.19882965 -491.19351196]
[-75.67771149 -487.34375000]
[-61.79930878 -481.59280396]
[-48.81129456 -474.04330444]
[-36.94544983 -464.82998657]
[-26.41354370 -454.11727905]
[-17.40352631 -442.09634399]
[-10.07618999 -428.98168945]
[-4.56230307 -415.00741577]
[-0.96026564 -400.42288208]
[0.66563928 -385.48837280]
[0.28639555 -370.47039795]
[-2.09122872 -355.63696289]
[-6.42480230 -341.25283813]
[-12.63698673 -327.57464600]
[-20.61691856 -314.84658813]
[-30.22218895 -303.29571533]
[-41.28137589 -293.12823486]
[-53.59711838 -284.52557373]
[-66.94963074 -277.64123535]
[-61.91271210 -263.51220703]
[-50.35092926 -254.12208557]
[-53.00494385 -238.52507019]
[-47.96802902 -224.39604187]
[-42.93111038 -210.26701355]
[-37.89419556 -196.13798523]
[-32.85727692 -182.00895691]
[-27.82036209 -167.87992859]
[-22.78344536 -153.75090027]
[-16.81188393 -139.99079895]
[-9.93247032 -126.66136169]
[-3.05305815 -113.33193207]
[3.82635427 -100.00250244]
[10.70576668 -86.67307281]
[24.36047554 -86.93006897]
[36.85376358 -81.25148010]
[45.72394562 -70.69358826]
[49.19633102 -57.28013611]
[46.53808594 -43.61449051]
[38.21201324 -32.37441254]
[44.89220810 -18.94403458]
[60.01827240 -10.04633713]
[58.72376633 8.32227135]
[65.60317993 21.65170097]
[72.48258972 34.98112869]
[79.36199951 48.31055832]
[86.53736877 61.48303604]
[94.00511169 74.49198914]
[101.47285461 87.50093842]
[109.22924042 100.33988190]
[117.27041626 113.00240326]
[125.40563202 125.60471344]
[133.63444519 138.14611816]
[141.86325073 150.68751526]
[150.18519592 163.16731262]
[158.59980774 175.58480835]
[167.01443481 188.00230408]
[175.42904663 200.41979980]
[175.48141479 185.41989136]
[182.41687012 172.11953735]
[194.68603516 163.49008179]
[209.54794312 161.45935059]
[223.68238831 166.48101807]
[233.93171692 177.43324280]
[238.00621033 191.86926270]
[234.99559021 206.56402588]
[225.57246399 218.23469543]
[211.84194946 224.27401733]
[196.87152100 223.33277893]
[184.00555420 215.62124634]
[190.28291321 229.24455261]
[196.56027222 242.86787415]
[202.83764648 256.49118042]
[209.11500549 270.11450195]
[215.39236450 283.73782349]
[221.66972351 297.36114502]
[233.41065979 299.22845459]
[242.69731140 306.45748901]
[247.29370117 317.16110229]
[246.16419983 328.63452148]
[239.70457458 338.03875732]
[245.57353210 351.84292603]
[251.44248962 365.64712524]
[257.31146240 379.45129395]
[263.18041992 393.25546265]
[269.04937744 407.05963135]
[283.82638550 404.17276001]
[298.88067627 404.42169189]
[313.55413818 407.79553223]
[327.20535278 414.14675903]
[339.23751831 423.19778442]
[349.12460327 434.55291748]
[356.43447876 447.71572876]
[360.84750366 462.11080933]
[362.17077637 477.10891724]
[360.34649658 492.05432129]
[355.45437622 506.29373169]
[347.70825195 519.20465088]
[337.44680786 530.22265625]
[325.11859131 538.86608887]
[311.26257324 544.75708008]
[296.48443604 547.63812256]
[281.43023682 547.38330078]
[266.75808716 544.00372314]
[253.10939026 537.64709473]
[241.08079529 528.59130859]
[231.19815063 517.23229980]
[223.89347839 504.06661987]
[219.48611450 489.66979980]
[218.16871643 474.67120361]
[219.99888611 459.72650146]
[224.89662170 445.48901367]
[232.64781189 432.58114624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[6 178]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[16 155]
[17 154]
[18 153]
[19 152]
[21 151]
[22 150]
[23 149]
[25 148]
[26 147]
[30 146]
[31 145]
[32 144]
[36 143]
[37 142]
[38 141]
[39 140]
[42 138]
[43 137]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[70 118]
[71 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
