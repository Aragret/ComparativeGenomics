%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUAGCACACUCCCACCCUGACAGAUGACUCAUCGGAGGAGUCUAAGUAACUUGAUCCAGACAGGGUUACAUACCCUACCGCCUAUCAUUCAAACAUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[72.14318848 540.50988770]
[63.02846527 552.70996094]
[49.73636246 560.14227295]
[34.56982422 561.51922607]
[20.15654182 556.60223389]
[8.99370480 546.24310303]
[3.01534224 532.23669434]
[3.25724125 517.00970459]
[9.67749119 503.20028687]
[21.16374588 493.20101929]
[35.72594070 488.74429321]
[37.50840759 473.85055542]
[39.29087448 458.95684814]
[41.07333755 444.06314087]
[42.85580444 429.16940308]
[44.63827133 414.27569580]
[45.53108597 399.30230713]
[45.53108597 384.30230713]
[45.53108597 369.30230713]
[45.53108597 354.30230713]
[45.53108597 339.30230713]
[35.65604782 350.59317017]
[21.05640602 354.03561401]
[7.17746735 348.34570312]
[-0.80426639 335.64562988]
[0.08819327 320.67218018]
[9.52198124 309.01013184]
[23.97852707 305.00909424]
[38.06589890 310.16137695]
[46.53018570 322.54641724]
[48.31265259 307.65270996]
[50.09511566 292.75897217]
[43.92503357 279.20245361]
[53.24740219 266.41949463]
[55.02986526 251.52578735]
[43.29247665 260.86569214]
[28.29480362 260.60153198]
[16.89357948 250.85412598]
[14.30129051 236.07983398]
[21.70309830 223.03324890]
[35.71499252 217.67910767]
[49.93092728 222.46525574]
[57.85195541 235.20533752]
[61.17421722 220.57788086]
[64.49647522 205.95042419]
[67.81873322 191.32295227]
[71.14099121 176.69549561]
[69.58138275 173.53323364]
[69.47596741 169.45843506]
[71.23694611 165.16282654]
[74.95201874 161.49604797]
[78.92411804 147.03150940]
[82.89620972 132.56698608]
[81.63616943 125.28454590]
[87.03662109 117.91752625]
[91.22363281 103.51374054]
[89.80361938 98.46423340]
[91.31384277 92.97856903]
[95.75567627 88.74689484]
[100.36968994 74.47416687]
[96.09752655 56.56243134]
[109.57041931 45.31752014]
[113.97142029 30.97767258]
[118.37241364 16.63782501]
[115.02460480 1.17487776]
[126.15556335 -8.72214127]
[120.81304169 -20.46182632]
[124.77385712 -32.31491470]
[135.39738464 -38.09999847]
[140.01139832 -52.37273407]
[144.62539673 -66.64546967]
[149.23941040 -80.91819763]
[153.85342407 -95.19093323]
[148.68626404 -107.00885773]
[152.82312012 -118.80166626]
[163.53160095 -124.42794037]
[168.35760498 -138.63038635]
[172.86523438 -152.93708801]
[177.05224609 -167.34086609]
[181.23925781 -181.74464417]
[185.42626953 -196.14842224]
[189.61328125 -210.55221558]
[191.28482056 -225.45878601]
[190.39199829 -240.43218994]
[178.85411072 -250.89712524]
[178.16197205 -266.09500122]
[188.20977783 -277.03012085]
[187.31697083 -292.00354004]
[186.42414856 -306.97692871]
[185.53134155 -321.95034790]
[184.63851929 -336.92373657]
[183.74571228 -351.89715576]
[182.85289001 -366.87057495]
[181.96006775 -381.84396362]
[181.06726074 -396.81738281]
[180.17443848 -411.79077148]
[165.79786682 -416.72863770]
[154.40856934 -426.79602051]
[147.74336243 -440.45776367]
[146.81861877 -455.63055420]
[151.77537537 -470.00064087]
[161.85775757 -481.37667847]
[175.52825928 -488.02389526]
[190.70223999 -488.92868042]
[205.06578064 -483.95303345]
[216.42854309 -473.85568237]
[223.05778503 -460.17645264]
[223.94261169 -445.00128174]
[218.94805908 -430.64431763]
[208.83580017 -419.29483032]
[195.14784241 -412.68359375]
[196.04066467 -397.71017456]
[196.93347168 -382.73678589]
[197.82629395 -367.76336670]
[198.71911621 -352.78997803]
[199.61192322 -337.81655884]
[200.50474548 -322.84317017]
[201.39755249 -307.86975098]
[202.29037476 -292.89636230]
[203.18319702 -277.92294312]
[214.45924377 -268.25927734]
[215.57798767 -253.08685303]
[205.36540222 -241.32499695]
[206.25822449 -226.35159302]
[212.12953186 -240.15476990]
[221.20846558 -252.09516907]
[232.93984985 -261.44262695]
[246.60629272 -267.62551880]
[261.37210083 -270.26577759]
[276.33432007 -269.20196533]
[290.57803345 -264.49911499]
[303.23220825 -256.44479370]
[313.52304077 -245.53157043]
[320.82125854 -232.42675781]
[324.68054199 -217.93171692]
[324.86492920 -202.93286133]
[321.36312866 -188.34733582]
[314.38928223 -175.06707764]
[304.36981201 -163.90415955]
[291.91744995 -155.54122925]
[277.79367065 -150.48963928]
[262.86212158 -149.05833435]
[248.03587341 -151.33482361]
[234.22155762 -157.17990112]
[222.26394653 -166.23612976]
[212.89422607 -177.94973755]
[206.68537903 -191.60440063]
[204.01705933 -206.36520386]
[199.83004761 -191.96141052]
[195.64303589 -177.55763245]
[191.45602417 -163.15385437]
[187.26901245 -148.75007629]
[188.63763428 -145.50057983]
[188.50033569 -141.42672729]
[186.48680115 -137.24356079]
[182.56005859 -133.80439758]
[177.73405457 -119.60194397]
[182.07492065 -102.59829712]
[168.12615967 -90.57692719]
[163.51214600 -76.30419159]
[158.89813232 -62.03145599]
[154.28411865 -47.75872421]
[149.67012024 -33.48598862]
[154.26365662 -16.54886055]
[140.49540710 -4.32114363]
[144.15802002 10.11612129]
[132.71226501 21.03882217]
[128.31126404 35.37866974]
[123.91027069 49.71851730]
[129.29884338 60.54855728]
[125.74965668 72.53134155]
[114.64241791 79.08817291]
[110.02841187 93.36090851]
[105.62741089 107.70075226]
[101.44039917 122.10453796]
[97.36073303 136.53909302]
[93.38864136 151.00361633]
[89.41654205 165.46813965]
[85.76845551 180.01776123]
[82.44619751 194.64521790]
[79.12393951 209.27267456]
[75.80167389 223.90013123]
[72.47941589 238.52760315]
[69.92358398 253.30825806]
[68.14112091 268.20196533]
[74.18370819 282.82379150]
[64.98883057 294.54144287]
[63.20636749 309.43518066]
[61.42390060 324.32888794]
[60.53108597 339.30230713]
[60.53108597 354.30230713]
[60.53108597 369.30230713]
[60.53108597 384.30230713]
[60.53108597 399.30230713]
[70.40612793 388.01144409]
[85.00576782 384.56896973]
[98.88470459 390.25888062]
[106.86643982 402.95895386]
[105.97397614 417.93240356]
[96.54019165 429.59445190]
[82.08364868 433.59548950]
[67.99627686 428.44320679]
[59.53198624 416.05816650]
[57.74952316 430.95187378]
[55.96705627 445.84561157]
[54.18458939 460.73931885]
[52.40212631 475.63302612]
[50.61965942 490.52676392]
[63.71890640 498.29397583]
[72.52115631 510.72137451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[30 189]
[31 188]
[32 187]
[34 185]
[35 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[51 178]
[52 177]
[53 176]
[55 175]
[56 174]
[59 173]
[60 172]
[62 169]
[63 168]
[64 167]
[66 165]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[76 157]
[77 156]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 124]
[84 123]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
