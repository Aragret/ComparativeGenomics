%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[42.41785431 723.06427002]
[34.71124649 735.99877930]
[24.48352051 747.04809570]
[12.18178558 755.72918701]
[-1.65617836 761.66247559]
[-16.42543602 764.58874512]
[-31.48033714 764.37988281]
[-46.16275024 761.04516602]
[-59.83081818 754.73028564]
[-71.88703156 745.71136475]
[-81.80435181 734.38256836]
[-89.14923096 721.23925781]
[-93.60057831 706.85601807]
[-94.96380615 691.86145020]
[-93.17932129 676.91125488]
[-88.32512665 662.65887451]
[-80.61343384 649.72735596]
[-70.38136292 638.68206787]
[-58.07621002 630.00585938]
[-44.23591232 624.07794189]
[-29.46550560 621.15759277]
[-14.41068649 621.37231445]
[-11.08842754 606.74487305]
[-7.76616764 592.11737061]
[-4.44390821 577.48992920]
[-10.53018379 561.03015137]
[2.09224963 547.62286377]
[5.19635963 532.94757080]
[8.30047035 518.27227783]
[11.40458012 503.59695435]
[14.50868988 488.92166138]
[17.50346375 474.22366333]
[20.38873672 459.50375366]
[23.27400970 444.78387451]
[14.77721310 432.60437012]
[17.49359894 417.63522339]
[30.32618141 408.80557251]
[33.21145248 394.08566284]
[36.09672546 379.36578369]
[38.98199844 364.64590454]
[33.83729553 350.66799927]
[44.08459473 338.61383057]
[46.96986771 323.89392090]
[49.85513687 309.17404175]
[52.74040985 294.45413208]
[55.62568283 279.73425293]
[58.51095581 265.01437378]
[61.39622879 250.29446411]
[64.28150177 235.57458496]
[59.13679504 221.59669495]
[69.38409424 209.54251099]
[62.89805603 199.33183289]
[65.18135834 187.04483032]
[75.54618073 179.36804199]
[78.65029144 164.69273376]
[81.75440216 150.01744080]
[84.85851288 135.34213257]
[87.96262360 120.66683197]
[91.06673431 105.99153137]
[91.17839813 90.99194336]
[88.29312897 76.27205658]
[85.40785980 61.55216217]
[82.52258301 46.83227158]
[79.52780914 32.13426590]
[76.42369843 17.45896339]
[73.31958771 2.78366184]
[69.88852692 -11.81866074]
[66.13222504 -26.34071922]
[60.95351410 -33.86526108]
[62.42982483 -41.10696793]
[58.89015198 -55.68334579]
[48.11482620 -67.26794434]
[52.63025284 -81.46160889]
[41.85492706 -93.04621124]
[46.37035751 -107.23987579]
[42.83068466 -121.81625366]
[39.29101181 -136.39262390]
[35.68675995 -140.16839600]
[34.05445862 -144.51452637]
[34.28115082 -148.58438110]
[35.93422318 -151.69880676]
[33.04895020 -166.41870117]
[30.16367722 -181.13859558]
[27.27840424 -195.85848999]
[16.87124443 -185.05612183]
[1.92336249 -186.30546570]
[-6.54621792 -198.68553162]
[-2.29403830 -213.07022095]
[11.54535294 -218.85565186]
[24.76909065 -211.77836609]
[22.98662567 -226.67207336]
[8.08769035 -229.16174316]
[-5.50571299 -235.74931335]
[-16.69162750 -245.90075684]
[-24.56326103 -258.79315186]
[-28.48249817 -273.38137817]
[-28.13162041 -288.48281860]
[-23.53907394 -302.87329102]
[-15.07715511 -315.38619995]
[-3.43183422 -325.00717163]
[10.45285511 -330.95629883]
[25.45134354 -332.75128174]
[40.34777069 -330.24667358]
[53.93454742 -323.64544678]
[65.11026001 -313.48275757]
[72.96893311 -300.58245850]
[76.87351227 -285.99029541]
[76.50746918 -270.88922119]
[71.90046692 -256.50338745]
[63.42597961 -243.99899292]
[51.77099991 -234.38972473]
[37.88034058 -228.45454407]
[39.66280746 -213.56082153]
[41.99829483 -198.74375916]
[44.88356781 -184.02386475]
[47.76884079 -169.30397034]
[50.65411377 -154.58409119]
[53.86738586 -139.93229675]
[57.40705872 -125.35592651]
[60.94673157 -110.77954865]
[71.46887970 -100.23754883]
[67.20662689 -85.00128174]
[77.72877502 -74.45928192]
[73.46652985 -59.22301483]
[77.00620270 -44.64664078]
[80.65428925 -30.09702110]
[84.41059113 -15.57496166]
[87.24680328 -13.48015594]
[89.20929718 -9.90752697]
[89.61452484 -5.28269291]
[87.99488831 -0.32044840]
[91.09899902 14.35485363]
[94.20310974 29.03015709]
[98.66275024 34.92366028]
[97.24247742 43.94699860]
[100.12774658 58.66688919]
[103.01302338 73.38677979]
[105.89829254 88.10667419]
[109.81365204 73.62668610]
[116.71080017 60.30642700]
[126.27595520 48.75186920]
[138.07397461 39.48867416]
[151.56811523 32.93825150]
[166.14450073 29.39860725]
[181.13999939 29.03076553]
[195.87239075 31.85146332]
[209.67147827 37.73237991]
[221.90948486 46.40596771]
[232.02967834 57.47763824]
[239.57162476 70.44371033]
[244.19224548 84.71430206]
[245.68132019 99.64021301]
[243.97109985 114.54239655]
[239.13940430 128.74291992]
[231.40603638 141.59573364]
[221.12280273 152.51614380]
[208.75753784 161.00732422]
[194.87277222 166.68299866]
[180.10015869 169.28494263]
[165.11178589 168.69480896]
[150.58947754 164.93942261]
[137.19393921 158.18965149]
[125.53456879 148.75254822]
[116.14177704 137.05743408]
[109.44288635 123.63637543]
[105.74203491 109.09564209]
[102.63792419 123.77094269]
[99.53381348 138.44624329]
[96.42971039 153.12155151]
[93.32559967 167.79684448]
[90.22148895 182.47215271]
[96.33390808 199.84223938]
[84.10398865 212.42778015]
[89.04232025 227.45852661]
[79.00139618 238.45985413]
[76.11611938 253.17974854]
[73.23085022 267.89962769]
[70.34557343 282.61953735]
[67.46030426 297.33941650]
[64.57502747 312.05929565]
[61.68975830 326.77920532]
[58.80448532 341.49908447]
[63.74281693 356.52984619]
[53.70188904 367.53115845]
[50.81661987 382.25106812]
[47.93134689 396.97094727]
[45.04607391 411.69082642]
[53.59570694 424.71163940]
[50.45994186 439.59860229]
[37.99390030 447.66912842]
[35.10862732 462.38903809]
[32.22335434 477.10891724]
[33.64363480 486.13226318]
[29.18399239 492.02575684]
[26.07988167 506.70108032]
[22.97577286 521.37634277]
[19.87166214 536.05169678]
[16.76755142 550.72698975]
[23.13613892 561.94323730]
[20.24859810 574.10241699]
[10.18355179 580.81219482]
[6.86129236 595.43963623]
[3.53903294 610.06713867]
[0.21677338 624.69458008]
[13.88732433 631.00408936]
[25.94708824 640.01824951]
[35.86886215 651.34313965]
[43.21891022 664.48352051]
[47.67591476 678.86505127]
[49.04504395 693.85906982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 204]
[23 203]
[24 202]
[25 201]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 192]
[33 191]
[34 190]
[37 187]
[38 186]
[39 185]
[40 184]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[51 173]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[59 166]
[60 138]
[61 137]
[62 136]
[63 135]
[64 133]
[65 132]
[66 131]
[67 127]
[68 126]
[70 125]
[71 124]
[73 122]
[75 120]
[76 119]
[77 118]
[81 117]
[82 116]
[83 115]
[84 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
