%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[102.58222198 689.07867432]
[88.07298279 685.23193359]
[73.97366333 680.08172607]
[60.40109253 673.67077637]
[47.46774673 666.05212402]
[35.28079224 657.28894043]
[23.94122124 647.45385742]
[13.54299355 636.62829590]
[4.17227793 624.90203857]
[-4.09327745 612.37225342]
[-11.18517971 599.14276123]
[-17.04466248 585.32312012]
[-21.62316895 571.02795410]
[-24.88276291 556.37561035]
[-26.79643059 541.48760986]
[-27.34831619 526.48724365]
[-26.53384590 511.49884033]
[-24.35976982 496.64663696]
[-20.84410095 482.05364990]
[-16.01597595 467.84082031]
[-9.91539860 454.12591553]
[-2.59292412 441.02261353]
[5.89077091 428.63946533]
[15.46538734 417.07910156]
[26.05158424 406.43731689]
[37.56163788 396.80227661]
[49.90017319 388.25384521]
[62.96494675 380.86285400]
[76.64769745 374.69052124]
[90.83503723 369.78802490]
[105.40941620 366.19595337]
[120.25004578 363.94412231]
[119.35723114 348.97070312]
[118.35297394 334.00436401]
[117.23732758 319.04592896]
[116.12167358 304.08746338]
[114.67225647 289.15765381]
[112.88979340 274.26394653]
[111.10732269 259.37020874]
[96.34757996 256.93563843]
[82.85826111 250.43412781]
[71.73630524 240.38485718]
[63.88878632 227.59591675]
[59.95896912 213.09927368]
[60.27359009 198.06753540]
[64.81569672 183.71910095]
[73.22533417 171.21937561]
[84.82804871 161.58615112]
[98.68900299 155.60667419]
[96.90653992 140.71296692]
[95.12406921 125.81924438]
[93.34160614 110.92552948]
[88.30228424 125.05370331]
[79.95014954 137.51330566]
[68.79594421 147.54244995]
[55.52173615 154.52783203]
[40.93926239 158.04228210]
[25.94024086 157.87092590]
[11.44186878 154.02420044]
[-1.66927230 146.73736572]
[-12.59143162 136.45600891]
[-20.65671539 123.80882263]
[-25.37192726 109.56920624]
[-26.44873238 94.60790253]
[-23.82128143 79.83981323]
[-17.65024376 66.16800690]
[-8.31298351 54.42852020]
[3.61952424 45.33922577]
[17.41760254 39.45594025]
[32.23749161 37.13842773]
[47.17295074 38.52840424]
[61.31067276 43.54087448]
[73.78612518 51.86931992]
[83.83644104 63.00445938]
[90.84702301 76.26536560]
[94.38918304 90.84116364]
[97.71144104 76.21370697]
[101.03370667 61.58624649]
[104.35596466 46.95878601]
[107.67822266 32.33132553]
[111.00048065 17.70386505]
[114.32273865 3.07640576]
[117.64500427 -11.55105495]
[113.15637970 -26.72217369]
[123.52040100 -37.41966248]
[126.84266663 -52.04712296]
[130.16491699 -66.67458344]
[122.00675964 -79.94417572]
[125.58437347 -94.73117065]
[138.28517151 -102.42696381]
[137.13418579 -111.48858643]
[141.76731873 -117.24669647]
[145.30699158 -131.82307434]
[148.84666443 -146.39944458]
[152.38633728 -160.97583008]
[151.37039185 -170.05357361]
[156.08874512 -175.74208069]
[159.84504700 -190.26412964]
[163.60134888 -204.78619385]
[150.08312988 -211.40757751]
[138.17472839 -220.61489868]
[128.36375427 -232.03111267]
[121.05199432 -245.18873596]
[116.53884888 -259.54895020]
[115.00912476 -274.52377319]
[116.52545929 -289.49993896]
[121.02576447 -303.86419678]
[128.32575989 -317.02835083]
[138.12651062 -328.45333862]
[150.02668762 -337.67129517]
[163.53897095 -344.30477905]
[178.11006165 -348.08212280]
[193.14326477 -348.84866333]
[208.02299500 -346.57299805]
[222.13992310 -341.34832764]
[234.91598511 -333.38858032]
[245.82798767 -323.01974487]
[254.42912292 -310.66638184]
[260.36712646 -296.83438110]
[263.39892578 -282.09011841]
[263.40026855 -267.03738403]
[260.37118530 -252.29255676]
[254.43566895 -238.45945740]
[245.83679199 -226.10453796]
[234.92665100 -215.73371887]
[222.15205383 -207.77166748]
[208.03605652 -202.54443359]
[193.15675354 -200.26608276]
[178.12339783 -201.02989197]
[174.36711121 -186.50782776]
[170.61080933 -171.98577881]
[166.96272278 -157.43615723]
[163.42304993 -142.85977173]
[159.88337708 -128.28340149]
[156.34370422 -113.70702362]
[152.91264343 -99.10470581]
[161.04304504 -86.67762756]
[157.88217163 -71.79597473]
[144.79238892 -63.35232544]
[141.47012329 -48.72486496]
[138.14785767 -34.09740448]
[142.87411499 -19.97253799]
[132.27246094 -8.22879505]
[128.95019531 6.39866543]
[125.62794495 21.02612495]
[122.30567932 35.65358734]
[118.98342133 50.28104401]
[115.66116333 64.90850830]
[112.33890533 79.53596497]
[109.01664734 94.16342926]
[108.23532104 109.14306641]
[110.01779175 124.03678131]
[111.80025482 138.93049622]
[113.58271790 153.82421875]
[128.46324158 156.36392212]
[142.01150513 162.98712158]
[153.13330078 173.14933777]
[160.93305969 186.02070618]
[164.78594971 200.55368042]
[164.38800049 215.56826782]
[159.78002930 229.84786987]
[151.34358215 242.23786926]
[139.76943970 251.73896790]
[126.00104523 257.58776855]
[127.78350830 272.48147583]
[129.56597900 287.37518311]
[132.69601440 291.55252075]
[133.80029297 296.06182861]
[133.09158325 300.07589722]
[131.08012390 302.97183228]
[132.19577026 317.93026733]
[133.31143188 332.88873291]
[137.07043457 341.21383667]
[134.33064270 348.07791138]
[135.22344971 363.05130005]
[150.22653198 363.52365112]
[165.12448120 365.35836792]
[179.79386902 368.54025269]
[194.11312866 373.04290771]
[207.96360779 378.82904053]
[221.23054504 385.85070801]
[233.80398560 394.04971313]
[245.57974243 403.35812378]
[256.46026611 413.69882202]
[266.35534668 424.98608398]
[275.18301392 437.12643433]
[282.87011719 450.01919556]
[289.35296631 463.55758667]
[294.57781982 477.62939453]
[298.50140381 492.11804199]
[301.09118652 506.90344238]
[302.32571411 521.86309814]
[302.19476318 536.87304688]
[300.69940186 551.80889893]
[297.85205078 566.54687500]
[293.67630005 580.96484375]
[288.20672607 594.94335938]
[281.48864746 608.36657715]
[273.57778931 621.12329102]
[264.53964233 633.10772705]
[254.44914246 644.22064209]
[243.38987732 654.36993408]
[231.45349121 663.47149658]
[218.73892212 671.44989014]
[205.35150146 678.23901367]
[191.40217590 683.78259277]
[177.00653076 688.03472900]
[162.28385925 690.96020508]
[147.35617065 692.53466797]
[132.34713745 692.74523926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 175]
[33 174]
[34 172]
[35 171]
[36 170]
[37 166]
[38 165]
[39 164]
[49 154]
[50 153]
[51 152]
[52 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[85 141]
[86 140]
[87 139]
[90 136]
[92 135]
[93 134]
[94 133]
[95 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
