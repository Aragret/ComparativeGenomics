%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[189.40060425 333.70709229]
[199.65135193 322.71710205]
[211.42564392 313.37771606]
[203.95790100 300.36877441]
[196.49015808 287.35980225]
[189.02241516 274.35086060]
[181.55467224 261.34191895]
[165.14788818 257.64651489]
[156.31628418 242.93876648]
[160.94361877 226.06846619]
[153.28302002 213.17213440]
[140.13093567 206.18128967]
[139.73527527 190.36502075]
[132.07467651 177.46870422]
[129.39459229 176.64692688]
[126.87854767 174.71403503]
[124.95137024 171.72715759]
[124.00939941 167.89607239]
[124.36834717 163.56881714]
[117.48893738 150.23939514]
[110.60951996 136.90995789]
[103.73011017 123.58053589]
[96.85069275 110.25110626]
[88.07009125 98.08964539]
[77.58258820 87.36527252]
[67.09509277 76.64089203]
[56.60758972 65.91651154]
[55.35748291 80.86432648]
[43.99334717 90.65495300]
[29.02507401 89.67987823]
[19.02716827 78.49766541]
[19.72688866 63.51399231]
[30.72340012 53.31219101]
[45.71653366 53.73593140]
[36.22763443 42.11866760]
[26.73873711 30.50140572]
[17.24983978 18.88414192]
[7.76094055 7.26687908]
[-1.72795773 -4.35038424]
[-11.30307770 -15.89668560]
[-20.96388817 -27.37138557]
[-30.62469864 -38.84608459]
[-40.28550720 -50.32078552]
[-49.94631958 -61.79548645]
[-59.60712814 -73.27018738]
[-77.06201172 -79.13607788]
[-79.46157074 -96.52023315]
[-89.29214478 -107.84983063]
[-99.12272644 -119.17942047]
[-111.34452057 -110.46319580]
[-124.33950806 -102.94821167]
[-137.99000549 -96.70252228]
[-152.17239380 -91.78269196]
[-166.75822449 -88.23327637]
[-181.61540222 -86.08641815]
[-196.60937500 -85.36156464]
[-211.60437012 -86.06528473]
[-226.46455383 -88.19118500]
[-241.05537415 -91.72003937]
[-255.24467468 -96.61986542]
[-268.90396118 -102.84630585]
[-281.90954590 -110.34295654]
[-294.14361572 -119.04193878]
[-305.49539185 -128.86447144]
[-315.86206055 -139.72158813]
[-325.14971924 -151.51496887]
[-333.27429199 -164.13780212]
[-340.16220093 -177.47578430]
[-345.75103760 -191.40811157]
[-349.99020386 -205.80859375]
[-352.84130859 -220.54684448]
[-354.27850342 -235.48937988]
[-354.28881836 -250.50085449]
[-352.87213135 -265.44534302]
[-350.04129028 -280.18750000]
[-345.82189941 -294.59381104]
[-340.25219727 -308.53378296]
[-333.38262939 -321.88122559]
[-325.27539062 -334.51519775]
[-316.00393677 -346.32131958]
[-305.65219116 -357.19265747]
[-294.31390381 -367.03079224]
[-282.09179688 -375.74655151]
[-269.09652710 -383.26107788]
[-255.44581604 -389.50625610]
[-241.26324463 -394.42556763]
[-226.67729187 -397.97445679]
[-211.82003784 -400.12075806]
[-196.82603455 -400.84509277]
[-181.83106995 -400.14080811]
[-166.97096252 -398.01437378]
[-152.38026428 -394.48498535]
[-138.19113159 -389.58465576]
[-124.53207397 -383.35769653]
[-111.52677155 -375.86056519]
[-99.29302216 -367.16116333]
[-87.94161224 -357.33819580]
[-77.57534027 -346.48071289]
[-68.28809357 -334.68698120]
[-60.16397476 -322.06387329]
[-53.27656555 -308.72564697]
[-47.68823624 -294.79309082]
[-43.44959641 -280.39245605]
[-40.59903717 -265.65411377]
[-39.16237259 -250.71151733]
[-39.15261078 -235.70004272]
[-40.56984329 -220.75559998]
[-43.40122986 -206.01354980]
[-47.62113571 -191.60740662]
[-53.19134140 -177.66761780]
[-60.06139755 -164.32044983]
[-68.16909027 -151.68675232]
[-77.44099426 -139.88096619]
[-87.79313660 -129.01000977]
[-77.96255493 -117.68041229]
[-68.13197327 -106.35081482]
[-56.09187317 -105.18353271]
[-47.80913162 -95.82511139]
[-48.13243103 -82.93099976]
[-38.47161865 -71.45629883]
[-28.81080818 -59.98159790]
[-19.14999771 -48.50689697]
[-9.48918819 -37.03219604]
[0.17162262 -25.55749702]
[6.88429356 -22.46527290]
[9.88930607 -13.83928299]
[19.37820435 -2.22201920]
[28.86710167 9.39524364]
[38.35599899 21.01250648]
[47.84489822 32.62977219]
[57.33379745 44.24703598]
[67.33197021 55.42900848]
[77.81947327 66.15338898]
[88.30696869 76.87776947]
[98.79447174 87.60214996]
[94.34207153 73.27817535]
[94.04795074 58.28106308]
[97.93531036 43.79353333]
[105.69757080 30.95814323]
[116.72257996 20.78713989]
[130.14083862 14.08265305]
[144.89414978 11.37342644]
[159.81898499 12.87312031]
[173.73832703 18.46346283]
[185.55444336 27.70357513]
[194.33543396 39.86474609]
[199.38882446 53.98789215]
[200.31607056 68.95920563]
[197.04403687 83.59798431]
[189.83079529 96.74975586]
[179.24519348 107.37731171]
[166.12205505 114.64252472]
[151.49632263 117.97242737]
[136.52146912 117.10440063]
[122.37844086 112.10691833]
[110.18012238 103.37168884]
[117.05953979 116.70111847]
[123.93894958 130.03054810]
[130.81835938 143.35998535]
[137.69776917 156.68940735]
[144.97100830 169.80810547]
[152.63160706 182.70443726]
[166.33161926 190.61770630]
[166.17933655 205.51153564]
[173.83993530 218.40786743]
[187.18817139 220.20761108]
[196.92062378 229.23480225]
[199.63656616 242.02955627]
[194.56362915 253.87416077]
[202.03137207 266.88311768]
[209.49909973 279.89205933]
[216.96684265 292.90103149]
[224.43458557 305.90997314]
[238.43711853 300.45227051]
[253.09671021 297.14257812]
[268.08587646 296.05484009]
[283.06970215 297.21337891]
[297.71350098 300.59231567]
[311.69006348 306.11614990]
[324.68722534 313.66146851]
[336.41455078 323.05972290]
[346.61010742 334.10092163]
[355.04608154 346.53845215]
[361.53402710 360.09442139]
[365.92901611 374.46597290]
[368.13281250 389.33209229]
[368.09625244 404.36059570]
[365.82009888 419.21578979]
[361.35519409 433.56579590]
[354.80133057 447.08999634]
[346.30493164 459.48632812]
[336.05575562 470.47778320]
[324.28277588 479.81881714]
[311.24905396 487.30078125]
[297.24575806 492.75650024]
[282.58569336 496.06411743]
[267.59637451 497.14968872]
[252.61271667 495.98901367]
[237.96940613 492.60800171]
[223.99360657 487.08218384]
[210.99754333 479.53500366]
[199.27153015 470.13510132]
[189.07756042 459.09243774]
[180.64335632 446.65368652]
[174.15733337 433.09680176]
[169.76440430 418.72460938]
[167.56271362 403.85821533]
[167.60144043 388.82971191]
[169.87969971 373.97482300]
[174.34663391 359.62545776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[10 165]
[11 164]
[13 162]
[14 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 135]
[25 134]
[26 133]
[27 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[47 116]
[48 115]
[49 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
