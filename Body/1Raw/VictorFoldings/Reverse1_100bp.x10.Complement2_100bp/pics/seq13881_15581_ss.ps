%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[61.34299850 606.54840088]
[46.31066132 610.01715088]
[31.79702950 604.78668213]
[22.43335342 592.52593994]
[21.20754623 577.14739990]
[28.51076126 563.55816650]
[42.01256943 556.09460449]
[42.90538406 541.12121582]
[43.79819870 526.14776611]
[44.69101715 511.17437744]
[45.58383179 496.20098877]
[38.61779022 483.03573608]
[47.16277313 469.72055054]
[39.37072754 460.46795654]
[39.99200058 447.98605347]
[49.23828506 438.99334717]
[50.35393143 424.03488159]
[43.58467484 410.76739502]
[52.32695389 397.58093262]
[53.44260025 382.62246704]
[54.55825043 367.66400146]
[55.67390060 352.70556641]
[56.78954697 337.74710083]
[43.89337158 345.40795898]
[29.80994034 340.24493408]
[24.92103195 326.06399536]
[32.83057022 313.31884766]
[47.70793915 311.40469360]
[58.58549881 321.73107910]
[60.81061554 306.89703369]
[58.69411850 299.81591797]
[63.18087387 291.85934448]
[65.62660217 277.06005859]
[68.07232666 262.26080322]
[70.51805878 247.46153259]
[72.96378326 232.66226196]
[75.40951538 217.86299133]
[77.85523987 203.06372070]
[70.80004883 186.99539185]
[82.60208893 172.86056519]
[84.82720947 158.02651978]
[87.05232239 143.19247437]
[89.05633545 128.32695007]
[90.83880615 113.43322754]
[84.20520782 103.86051941]
[85.67522430 92.30715179]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[89.11124420 52.96776581]
[100.37122345 39.50746155]
[102.15369415 24.61374474]
[103.93615723 9.72002697]
[105.71862030 -5.17369032]
[107.27914429 -20.09229469]
[108.06047058 -35.07193375]
[108.28379822 -50.07027054]
[108.50712585 -65.06861115]
[108.73045349 -80.06694794]
[108.95378113 -95.06528473]
[99.61434174 -110.93526459]
[109.19503021 -125.63822937]
[109.19503021 -140.63822937]
[109.19503021 -155.63822937]
[109.19503021 -170.63822937]
[108.74842834 -185.63157654]
[107.85560608 -200.60498047]
[106.96279144 -215.57839966]
[98.41780853 -228.89356995]
[105.38385010 -242.05880737]
[104.49103546 -257.03222656]
[103.59822083 -272.00561523]
[95.05323792 -285.32080078]
[102.01927948 -298.48602295]
[101.12646484 -313.45944214]
[100.23365021 -328.43283081]
[99.34082794 -343.40625000]
[97.22620392 -358.25643921]
[93.90394592 -372.88391113]
[90.58168793 -387.51135254]
[87.25942993 -402.13882446]
[83.93717194 -416.76629639]
[80.61490631 -431.39373779]
[65.57672882 -430.89410400]
[50.71579361 -433.24972534]
[36.56930923 -438.37548828]
[23.64866638 -446.08612061]
[12.42093945 -456.10281372]
[3.29200220 -468.06353760]
[-3.40814018 -481.53591919]
[-7.43728113 -496.03289795]
[-8.64977074 -511.03045654]
[-7.00177670 -525.98638916]
[-2.55287433 -540.36010742]
[4.53611183 -553.63201904]
[14.00891972 -565.32226562]
[25.52311325 -575.00830078]
[38.66246033 -582.34002686]
[52.95198441 -587.05236816]
[67.87512207 -588.97497559]
[82.89241791 -588.03833008]
[97.46100616 -584.27630615]
[111.05423737 -577.82489014]
[123.18072510 -568.91735840]
[133.40211487 -557.87561035]
[141.34889221 -545.09887695]
[146.73379517 -531.04895020]
[149.36216736 -516.23382568]
[149.13897705 -501.18902588]
[146.07231140 -486.45837402]
[140.27302551 -472.57440186]
[131.95075989 -460.03900146]
[121.40635681 -449.30529785]
[109.02098083 -440.76135254]
[95.24237061 -434.71600342]
[98.56462860 -420.08853149]
[101.88688660 -405.46109009]
[105.20915222 -390.83361816]
[108.53141022 -376.20617676]
[111.85366821 -361.57870483]
[117.35776520 -375.53237915]
[128.65550232 -385.39956665]
[143.22291565 -388.97589111]
[157.80563354 -385.46243286]
[169.14582825 -375.64407349]
[174.71006775 -361.71426392]
[173.25527954 -346.78497314]
[165.10649109 -334.19143677]
[152.08413696 -326.74710083]
[137.09745789 -326.11499023]
[123.49452209 -332.43640137]
[114.31423950 -344.29907227]
[115.20705414 -329.32565308]
[116.09986877 -314.35226440]
[116.99268341 -299.37884521]
[125.47380829 -287.13467407]
[118.57162476 -272.89843750]
[119.46443939 -257.92501831]
[120.35726166 -242.95162964]
[128.83837891 -230.70744324]
[121.93620300 -216.47120667]
[122.82901764 -201.49780273]
[123.72183228 -186.52439880]
[125.72653961 -184.56498718]
[127.07589722 -181.69343567]
[127.41857910 -178.15534973]
[126.49860382 -174.31892395]
[124.19503021 -170.63822937]
[124.19503021 -155.63822937]
[124.19503021 -140.63822937]
[124.19503021 -125.63822937]
[132.52398682 -116.86582947]
[132.64674377 -104.36907959]
[123.95211792 -94.84195709]
[123.72879028 -79.84362030]
[123.50546265 -64.84527588]
[123.28213501 -49.84694290]
[123.05880737 -34.84860611]
[135.47613525 -43.26346970]
[149.84190369 -38.94784927]
[155.56620789 -25.08306122]
[148.42930603 -11.88970947]
[133.69224548 -9.09344292]
[122.21932983 -18.75406075]
[124.53986359 -14.57983303]
[124.26280212 -8.90354347]
[120.61234283 -3.39122462]
[118.82987213 11.50249290]
[117.04740906 26.39620972]
[115.26494598 41.28992844]
[122.49245453 50.98991013]
[121.12934113 63.41270065]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[116.12969971 102.05229187]
[105.73252106 115.21569061]
[103.95005798 130.10940552]
[106.19663239 136.32748413]
[105.12638855 141.90884399]
[101.88636780 145.41758728]
[99.66124725 160.25163269]
[97.43613434 175.08567810]
[104.46102905 185.90295410]
[102.30233765 198.21246338]
[92.65451050 205.50944519]
[90.20878601 220.30871582]
[87.76305389 235.10798645]
[85.31732941 249.90725708]
[82.87160492 264.70654297]
[80.42587280 279.50579834]
[77.98014832 294.30508423]
[75.64466095 309.12213135]
[73.41954041 323.95617676]
[71.74800110 338.86276245]
[70.63235474 353.82119751]
[69.51670074 368.77966309]
[68.40105438 383.73812866]
[67.28540802 398.69656372]
[73.97486877 413.03399658]
[65.31238556 425.15054321]
[64.19673920 440.10897827]
[72.57501984 456.50674438]
[62.13617706 470.61337280]
[69.03836060 484.84960938]
[60.55723572 497.09378052]
[59.66442108 512.06719971]
[58.77160645 527.04058838]
[57.87878799 542.01403809]
[56.98597336 556.98742676]
[69.50521088 566.00250244]
[75.14186096 580.36328125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[13 202]
[16 200]
[17 199]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[29 192]
[30 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[40 181]
[41 180]
[42 179]
[43 176]
[44 175]
[47 173]
[48 172]
[50 169]
[51 168]
[52 167]
[53 166]
[54 163]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[61 150]
[62 149]
[63 148]
[64 147]
[65 142]
[66 141]
[67 140]
[69 138]
[70 137]
[71 136]
[73 134]
[74 133]
[75 132]
[76 131]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
