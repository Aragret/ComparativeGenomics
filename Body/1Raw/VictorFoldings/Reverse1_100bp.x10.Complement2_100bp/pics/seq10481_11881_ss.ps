%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-9.50960922 442.75067139]
[-2.07743788 455.86019897]
[2.13055515 470.33050537]
[2.88743782 485.38119507]
[0.15239236 500.20065308]
[-5.92708349 513.98968506]
[-15.02313137 526.00457764]
[-26.64521217 535.59753418]
[-40.16656494 542.25103760]
[-54.85799408 545.60644531]
[-69.92721558 545.48272705]
[-84.56156158 541.88647461]
[-97.97182465 535.01177979]
[-109.43479919 525.22930908]
[-118.33230591 513.06658936]
[-124.18450928 499.17962646]
[-126.67581177 484.31726074]
[-125.67185974 469.28100586]
[-121.22679901 454.88177490]
[-113.58033752 441.89605713]
[-103.14484406 431.02420044]
[-90.48309326 422.85250854]
[-76.27791595 417.82165527]
[-61.29537582 416.20291138]
[-46.34346771 418.08364868]
[-41.09674835 404.03118896]
[-35.85003281 389.97869873]
[-30.60331345 375.92623901]
[-25.35659599 361.87377930]
[-28.15338135 347.24411011]
[-16.07779312 337.02203369]
[-10.83107567 322.96954346]
[-5.58435726 308.91708374]
[-6.71668625 304.27737427]
[-4.94640017 298.87707520]
[0.03344407 294.52822876]
[5.69623089 280.63818359]
[11.35901737 266.74816895]
[16.91824341 252.81636047]
[22.37360001 238.84356689]
[27.82895660 224.87077332]
[33.28431320 210.89796448]
[19.97913933 217.82417297]
[5.12729692 215.72113037]
[-5.73184347 205.37322998]
[-8.54808998 190.63998413]
[-2.27105379 177.01651001]
[10.75808716 169.58404541]
[25.67978477 171.11471558]
[36.92861557 181.03761292]
[40.30894470 195.65290833]
[47.38605118 182.42738342]
[54.46315765 169.20184326]
[61.54026031 155.97631836]
[68.61737061 142.75079346]
[75.69447327 129.52526855]
[82.77157593 116.29973602]
[89.84868622 103.07421112]
[96.32817841 89.54586792]
[102.19714355 75.74169159]
[108.06610107 61.93751144]
[113.93505859 48.13333511]
[119.80402374 34.32915878]
[118.08306122 18.60182953]
[130.18325806 9.91652298]
[136.05221558 -3.88765407]
[141.92117310 -17.69183159]
[147.79014587 -31.49600792]
[153.45292664 -45.38603592]
[158.90827942 -59.35883331]
[164.36364746 -73.33162689]
[169.81900024 -87.30442810]
[172.92311096 -101.97972870]
[173.59289551 -116.96476746]
[174.26268005 -131.94981384]
[174.93246460 -146.93484497]
[167.81909180 -161.06674194]
[176.11697388 -173.43583679]
[173.70993042 -178.06759644]
[173.35566711 -182.69660950]
[174.70938110 -186.54141235]
[177.16609192 -189.07063293]
[178.50431824 -204.01080322]
[179.84255981 -218.95098877]
[181.18078613 -233.89117432]
[166.52149963 -237.17147827]
[152.41581726 -242.33718872]
[139.10510254 -249.29992676]
[126.81710052 -257.94055176]
[115.76210022 -268.11117554]
[106.12925720 -279.63781738]
[98.08339691 -292.32321167]
[91.76220703 -305.95028687]
[87.27384186 -320.28591919]
[84.69510651 -335.08471680]
[84.07012177 -350.09353638]
[85.40959167 -365.05551147]
[88.69058990 -379.71466064]
[93.85697937 -393.82009888]
[100.82034302 -407.13049316]
[109.46154022 -419.41806030]
[119.63270569 -430.47259521]
[131.15980530 -440.10488892]
[143.84558105 -448.15014648]
[157.47297668 -454.47067261]
[171.80879211 -458.95834351]
[186.60772705 -461.53637695]
[201.61657715 -462.16064453]
[216.57849121 -460.82046509]
[231.23745728 -457.53878784]
[245.34266663 -452.37173462]
[258.65270996 -445.40771484]
[270.93988037 -436.76593018]
[281.99392700 -426.59423828]
[291.62567139 -415.06668091]
[299.67031860 -402.38052368]
[305.99020386 -388.75283813]
[310.47720337 -374.41680908]
[313.05453491 -359.61773682]
[313.67810059 -344.60885620]
[312.33718872 -329.64703369]
[309.05480957 -314.98818970]
[303.88708496 -300.88323975]
[296.92245483 -287.57351685]
[288.28009033 -275.28677368]
[278.10784912 -264.23321533]
[266.57983398 -254.60202026]
[253.89331055 -246.55796814]
[240.26531982 -240.23872375]
[225.92906189 -235.75241089]
[211.12988281 -233.17578125]
[196.12097168 -232.55294800]
[194.78274536 -217.61276245]
[193.44450378 -202.67257690]
[192.10627747 -187.73239136]
[191.10202026 -172.76605225]
[198.26329041 -159.70597839]
[189.91749573 -146.26506042]
[189.24771118 -131.28002930]
[188.57792664 -116.29498291]
[187.90814209 -101.30994415]
[195.22003174 -114.40713501]
[205.63438416 -125.20256042]
[218.46046448 -132.98020935]
[232.84754944 -137.22419739]
[247.84141541 -137.65306091]
[262.44757080 -134.23834229]
[275.69723511 -127.20652008]
[286.71160889 -117.02400208]
[294.76013184 -104.36615753]
[299.30899048 -90.07252502]
[300.05648804 -75.09116364]
[296.95303345 -60.41572189]
[290.20446777 -47.01957703]
[280.25836182 -35.79124451]
[267.77447510 -27.47545815]
[253.58078003 -22.62377357]
[238.61868286 -21.55798721]
[223.88059998 -24.34878922]
[210.34402466 -30.81107521]
[198.90679932 -40.51622391]
[190.32751465 -52.82052994]
[185.17520142 -66.90789032]
[183.79179382 -81.84906769]
[178.33644104 -67.87627411]
[172.88108826 -53.90347672]
[167.42572021 -39.93067932]
[168.48884583 -35.27462769]
[166.63835144 -29.90129471]
[161.59431458 -25.62704659]
[155.72535706 -11.82287025]
[149.85639954 1.98130679]
[143.98744202 15.78548336]
[146.12817383 30.52544594]
[133.60820007 40.19812012]
[127.73923492 54.00229645]
[121.87027740 67.80647278]
[116.00131989 81.61064911]
[110.13235474 95.41482544]
[124.41220856 90.82290649]
[137.81898499 97.55034637]
[142.67266846 111.74337006]
[136.19284058 125.27156067]
[122.09146118 130.38536072]
[108.44641876 124.15534973]
[103.07421112 110.15131378]
[95.99710846 123.37684631]
[88.91999817 136.60237122]
[81.84289551 149.82789612]
[74.76579285 163.05342102]
[67.68868256 176.27896118]
[60.61157990 189.50448608]
[53.53447342 202.73001099]
[47.25711060 216.35333252]
[41.80175400 230.32612610]
[36.34639740 244.29891968]
[30.89104080 258.27172852]
[30.68508530 267.40383911]
[25.24904442 272.41094971]
[19.58625793 286.30096436]
[13.92347145 300.19100952]
[8.46811390 314.16378784]
[3.22139573 328.21627808]
[-2.02532244 342.26873779]
[0.39618260 357.90353394]
[-11.30412388 367.12048340]
[-16.55084229 381.17294312]
[-21.79755974 395.22543335]
[-27.04427910 409.27789307]
[-32.29099655 423.33038330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[27 208]
[28 207]
[29 206]
[31 204]
[32 203]
[33 202]
[36 201]
[37 200]
[38 199]
[39 197]
[40 196]
[41 195]
[42 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[65 173]
[66 172]
[67 171]
[68 170]
[69 167]
[70 166]
[71 165]
[72 164]
[73 141]
[74 140]
[75 139]
[76 138]
[78 136]
[82 135]
[83 134]
[84 133]
[85 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
