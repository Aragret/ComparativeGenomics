%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[68.44845581 419.23089600]
[62.55760574 405.37872314]
[59.57610321 390.62420654]
[59.62603760 375.57156372]
[62.70536423 360.83715820]
[68.68798828 347.02438354]
[77.32892609 334.69882202]
[88.27433777 324.36523438]
[101.07600403 316.44677734]
[115.20972443 311.26770020]
[112.98460388 296.43365479]
[110.75948334 281.59960938]
[108.53437042 266.76556396]
[105.93147278 264.38705444]
[104.35131073 260.62963867]
[104.42942810 255.98774719]
[106.55651855 251.22093201]
[104.99599457 236.30232239]
[103.43547058 221.38371277]
[101.87494659 206.46511841]
[88.27907562 202.98780823]
[76.66204834 195.06170654]
[68.43080902 183.62202454]
[64.59065247 170.03102112]
[65.62247467 155.91571045]
[71.42267609 142.97311401]
[81.31312561 132.76625061]
[94.12043762 126.53535461]
[92.78220367 111.59516907]
[87.34695435 125.57580566]
[79.32275391 138.24909973]
[69.00960541 149.14123535]
[56.79305649 157.84503174]
[43.12984467 164.03507996]
[28.53077698 167.47994995]
[13.54164505 168.05085754]
[-1.27716804 165.72647095]
[-15.37165070 160.59367371]
[-28.21486855 152.84437561]
[-39.32667160 142.76828003]
[-48.29163361 130.74208069]
[-54.77459717 117.21539307]
[-58.53318787 102.69392395]
[-59.42689133 87.72057343]
[-57.42229462 72.85512543]
[-52.59433746 58.65333176]
[-45.12352371 45.64614487]
[-35.28914642 34.31984711]
[-23.45887947 25.09787369]
[-10.07500076 18.32500076]
[4.36212111 14.25443649]
[19.31274605 13.03835964]
[34.21792984 14.72223663]
[48.52043533 19.24311256]
[61.68555450 26.43197250]
[73.22109222 36.02005386]
[82.69579315 47.64889908]
[89.75543213 60.88375854]
[94.13607788 75.22983551]
[95.67392731 90.14469147]
[100.92064667 76.09221649]
[106.16736603 62.03974915]
[111.41408539 47.98727798]
[116.66080475 33.93480682]
[102.60022736 39.15977478]
[88.90643311 33.03768539]
[83.42384338 19.07555199]
[89.29313660 5.27151537]
[103.15211487 -0.46684352]
[117.06172180 5.14766741]
[123.05388641 18.89785194]
[129.53338623 5.36950636]
[136.01287842 -8.15883923]
[142.49237061 -21.68718529]
[148.97187805 -35.21553040]
[147.95489502 -51.00401688]
[160.43083191 -59.14035797]
[166.91033936 -72.66870117]
[173.38983154 -86.19705200]
[179.86932373 -99.72539520]
[186.34881592 -113.25373840]
[192.82832336 -126.78208923]
[199.30781555 -140.31044006]
[205.78730774 -153.83877563]
[212.26679993 -167.36712646]
[218.74629211 -180.89546204]
[225.22579956 -194.42381287]
[231.70529175 -207.95216370]
[238.18478394 -221.48049927]
[244.15635681 -235.24061584]
[249.61170959 -249.21340942]
[255.06706238 -263.18621826]
[241.82131958 -270.26339722]
[229.50561523 -278.85757446]
[218.29284668 -288.84805298]
[208.34040833 -300.09463501]
[199.78802490 -312.43939209]
[192.75575256 -325.70904541]
[187.34233093 -339.71728516]
[183.62374878 -354.26751709]
[181.65219116 -369.15539551]
[181.45535278 -384.17196655]
[183.03601074 -399.10641479]
[186.37193298 -413.74911499]
[191.41633606 -427.89443970]
[198.09837341 -441.34384155]
[206.32424927 -453.90853882]
[215.97848511 -465.41210938]
[226.92553711 -475.69305420]
[239.01174927 -484.60708618]
[252.06744385 -492.02905273]
[265.90933228 -497.85470581]
[280.34310913 -502.00234985]
[295.16610718 -504.41369629]
[310.17028809 -505.05490112]
[325.14498901 -503.91699219]
[339.87997437 -501.01593018]
[354.16842651 -496.39242554]
[367.80972290 -490.11138916]
[380.61236572 -482.26101685]
[392.39666748 -472.95150757]
[402.99713135 -462.31356812]
[412.26498413 -450.49649048]
[420.07012939 -437.66619873]
[426.30294800 -424.00280762]
[430.87597656 -409.69812012]
[433.72500610 -394.95297241]
[434.81005859 -379.97436523]
[434.11587524 -364.97253418]
[431.65222168 -350.15814209]
[427.45364380 -335.73910522]
[421.57913208 -321.91787720]
[414.11114502 -308.88845825]
[405.15451050 -296.83380127]
[394.83499146 -285.92309570]
[383.29739380 -276.30953979]
[370.70373535 -268.12805176]
[357.23083496 -261.49353027]
[343.06777954 -256.49911499]
[328.41342163 -253.21488953]
[313.47348022 -251.68698120]
[298.45770264 -251.93682861]
[283.57684326 -253.96092224]
[269.03985596 -257.73083496]
[263.58450317 -243.75805664]
[258.12915039 -229.78524780]
[272.70544434 -233.32521057]
[284.65423584 -224.25732422]
[285.16729736 -209.26609802]
[273.86642456 -199.40251160]
[259.08221436 -201.93763733]
[251.71313477 -215.00100708]
[245.23364258 -201.47267151]
[238.75413513 -187.94432068]
[232.27464294 -174.41596985]
[225.79515076 -160.88763428]
[219.31565857 -147.35928345]
[212.83615112 -133.83093262]
[206.35665894 -120.30258942]
[199.87716675 -106.77424622]
[193.39767456 -93.24590302]
[186.91816711 -79.71755219]
[180.43867493 -66.18920898]
[173.95918274 -52.66086197]
[175.43962097 -37.84001541]
[162.50021362 -28.73603439]
[156.02072144 -15.20768929]
[149.54122925 -1.67934358]
[143.06173706 11.84900188]
[136.58222961 25.37734795]
[130.71327209 39.18152618]
[125.46655273 53.23399734]
[120.21984100 67.28646851]
[114.97312164 81.33893585]
[109.72640228 95.39141083]
[107.72238922 110.25693512]
[109.06062317 125.19712067]
[124.43521881 129.90138245]
[136.79774475 140.12091064]
[144.27401733 154.26802063]
[145.74540710 170.16264343]
[141.01605225 185.36816406]
[130.83837891 197.56504822]
[116.79354858 204.90458679]
[118.35407257 219.82319641]
[119.91459656 234.74179077]
[121.47512054 249.66040039]
[123.36841583 264.54043579]
[125.59352875 279.37448120]
[127.81864929 294.20852661]
[130.04376221 309.04257202]
[145.07499695 309.84689331]
[159.63653564 313.66085815]
[173.13211060 320.32827759]
[185.00907898 329.57611084]
[194.78106689 341.02569580]
[202.04794312 354.20816040]
[206.51213074 368.58370972]
[207.99081421 383.56362915]
[206.42344666 398.53454590]
[201.87420654 412.88339233]
[194.52940369 426.02258301]
[184.68975830 437.41409302]
[172.75823975 446.59146118]
[159.22343445 453.17883301]
[144.63955688 456.90649414]
[129.60382080 457.62179565]
[114.73193359 455.29544067]
[100.63289642 450.02270508]
[87.88404083 442.01947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 191]
[11 190]
[12 189]
[13 188]
[17 187]
[18 186]
[19 185]
[20 184]
[28 177]
[29 176]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[71 170]
[72 169]
[73 168]
[74 167]
[75 166]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 146]
[91 145]
[92 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
