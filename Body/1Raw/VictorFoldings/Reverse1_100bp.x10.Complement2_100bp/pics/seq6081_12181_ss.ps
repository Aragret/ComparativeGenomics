%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[278.82333374 385.40048218]
[273.78640747 371.27145386]
[268.74948120 357.14242554]
[263.71255493 343.01339722]
[258.67565918 328.88433838]
[253.63873291 314.75531006]
[248.60182190 300.62628174]
[242.63026428 286.86618042]
[235.75083923 273.53677368]
[228.87142944 260.20733643]
[221.99201965 246.87789917]
[215.11260986 233.54847717]
[208.23320007 220.21903992]
[201.35379028 206.88961792]
[194.47436523 193.56018066]
[185.15948486 181.80293274]
[173.75701904 172.05697632]
[162.35456848 162.31100464]
[150.95210266 152.56503296]
[139.54963684 142.81907654]
[122.14809418 140.54899597]
[116.15242767 123.13826752]
[104.60612488 113.56314850]
[90.85643768 111.02590942]
[85.81875610 97.98315430]
[74.27245331 88.40803528]
[62.72615051 78.83291626]
[51.17984772 69.25779724]
[39.63354874 59.68267441]
[39.94532013 74.67943573]
[29.66141510 85.59919739]
[14.67292213 86.18663788]
[3.56593037 76.10523224]
[2.70302844 61.13007355]
[12.57852650 49.83961105]
[27.53438568 48.70124054]
[16.88837814 38.13419342]
[8.59311962 34.30973434]
[6.16399765 27.32967758]
[-4.32350349 16.60529900]
[-7.09882355 31.34631538]
[-20.28201866 38.50196838]
[-34.15493011 32.79737473]
[-38.49095917 18.43774986]
[-30.09375191 6.00847435]
[-15.15496254 4.67137432]
[-24.81577301 -6.80332613]
[-34.47658539 -18.27802658]
[-44.13739395 -29.75272560]
[-53.79820251 -41.22742462]
[-63.45901489 -52.70212555]
[-73.11982727 -64.17682648]
[-85.53779602 -55.73893738]
[-98.75756073 -48.62262344]
[-112.63896942 -42.90331268]
[-127.03487396 -38.64163971]
[-141.79267883 -35.88277435]
[-156.75593567 -34.65597153]
[-171.76602173 -34.97422409]
[-186.66383362 -36.83416748]
[-201.29142761 -40.21608353]
[-215.49375916 -45.08412170]
[-229.12026978 -51.38667679]
[-242.02651978 -59.05693817]
[-254.07568359 -68.01359558]
[-265.14001465 -78.16170502]
[-275.10229492 -89.39369202]
[-283.85684204 -101.59049225]
[-291.31088257 -114.62281036]
[-297.38540649 -128.35249329]
[-302.01599121 -142.63400269]
[-305.15359497 -157.31594849]
[-306.76492310 -172.24269104]
[-306.83291626 -187.25599670]
[-305.35684204 -202.19671631]
[-302.35232544 -216.90647888]
[-297.85125732 -231.22933960]
[-291.90133667 -245.01348877]
[-284.56564331 -258.11276245]
[-275.92190552 -270.38836670]
[-266.06179810 -281.71011353]
[-255.08979797 -291.95800781]
[-243.12225342 -301.02343750]
[-230.28599548 -308.81027222]
[-216.71713257 -315.23596191]
[-202.55946350 -320.23242188]
[-187.96308899 -323.74670410]
[-173.08274841 -325.74148560]
[-158.07615662 -326.19567871]
[-143.10240173 -325.10443115]
[-128.32022095 -322.47933960]
[-113.88630676 -318.34820557]
[-99.95366669 -312.75485229]
[-86.66999817 -305.75857544]
[-74.17611694 -297.43350220]
[-62.60445786 -287.86788940]
[-52.07769012 -277.16314697]
[-42.70740509 -265.43276978]
[-34.59293365 -252.80110168]
[-27.82029152 -239.40202332]
[-22.46127319 -225.37757874]
[-18.57268715 -210.87643433]
[-16.19575500 -196.05233765]
[-15.35567379 -181.06239319]
[-16.06134796 -166.06552124]
[-18.30529785 -151.22070312]
[-22.06373405 -136.68528748]
[-27.29681969 -122.61337280]
[-33.94907761 -109.15412140]
[-41.94998932 -96.45020294]
[-51.21474075 -84.63629913]
[-61.64512634 -73.83763885]
[-51.98431396 -62.36293793]
[-42.32350540 -50.88823700]
[-32.66269302 -39.41353607]
[-23.00188255 -27.93883705]
[-13.34107304 -16.46413612]
[-3.68026257 -4.98943615]
[6.40087605 6.11779737]
[16.88837814 16.84217644]
[27.45542526 27.48818588]
[38.10143280 38.05523300]
[49.20866776 48.13637161]
[60.75497055 57.71149063]
[72.30126953 67.28661346]
[83.84757233 76.86173248]
[95.39387512 86.43685150]
[109.14356232 88.97409058]
[114.18124390 102.01684570]
[125.72754669 111.59196472]
[138.61889648 111.17269135]
[148.03872681 119.38553619]
[149.29560852 131.41661072]
[160.69805908 141.16258240]
[172.10052490 150.90853882]
[183.50299072 160.65451050]
[194.90545654 170.40046692]
[188.98411560 156.61868286]
[186.23287964 141.87315369]
[186.78596497 126.88334656]
[190.61639404 112.38066101]
[197.53726196 99.07271576]
[207.21090698 87.60882568]
[219.16529846 78.54833984]
[232.81718445 72.33334351]
[247.50044250 69.26708221]
[262.49865723 69.49916077]
[277.07998657 73.01825714]
[290.53305054 79.65267181]
[302.20138550 89.07868195]
[311.51571655 100.83638763]
[318.02151489 114.35209656]
[321.40139771 128.96635437]
[321.49041748 143.96609497]
[318.28427124 158.61943054]
[311.93936157 172.21142578]
[302.76528931 184.07887268]
[291.20968628 193.64274597]
[277.83633423 200.43638611]
[263.29776001 204.12832642]
[248.30337524 204.53843689]
[233.58476257 201.64669800]
[219.86006165 195.59420776]
[207.80380249 186.68077087]
[214.68321228 200.01020813]
[221.56262207 213.33963013]
[228.44203186 226.66906738]
[235.32145691 239.99848938]
[242.20086670 253.32792664]
[249.08027649 266.65734863]
[255.95968628 279.98678589]
[258.84680176 265.26724243]
[269.15652466 254.37184143]
[283.69424438 250.67662048]
[297.95529175 255.32658386]
[307.52075195 266.88088989]
[309.42663574 281.75933838]
[303.08239746 295.35162354]
[290.45388794 303.44607544]
[275.45413208 303.53451538]
[262.73086548 295.58938599]
[267.76776123 309.71841431]
[272.80468750 323.84744263]
[277.84161377 337.97647095]
[282.87850952 352.10549927]
[287.91543579 366.23452759]
[292.95236206 380.36355591]
[307.95025635 378.83834839]
[322.87725830 380.94735718]
[336.86550903 386.56802368]
[349.10177612 395.37353516]
[358.87466431 406.85198975]
[365.61596680 420.33599854]
[368.93374634 435.04162598]
[368.63513184 450.11392212]
[364.73745728 464.67660522]
[357.46737671 477.88302612]
[347.24752808 488.96533203]
[334.67205811 497.27926636]
[320.47213745 502.34146118]
[305.47332764 503.85760498]
[290.54760742 501.73950195]
[276.56274414 496.11038208]
[264.33181763 487.29742432]
[254.56590271 475.81307983]
[247.83279419 462.32498169]
[244.52392578 447.61734009]
[244.83168030 432.54522705]
[248.73815918 417.98492432]
[256.01626587 404.78292847]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[22 130]
[23 129]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[36 122]
[37 121]
[39 120]
[40 119]
[46 118]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
