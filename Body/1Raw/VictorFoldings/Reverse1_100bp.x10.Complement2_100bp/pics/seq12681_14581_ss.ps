%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[106.73020935 629.95361328]
[94.78451538 620.84564209]
[84.12988281 610.25628662]
[74.94863129 598.36682129]
[67.39786530 585.38067627]
[61.60679626 571.51995850]
[57.67450714 557.02197266]
[55.66828537 542.13470459]
[55.62246323 527.11297607]
[57.53782654 512.21374512]
[61.38159561 497.69204712]
[67.08800507 483.79629517]
[74.55940247 470.76428223]
[83.66794586 458.81900024]
[94.25778198 448.16488647]
[106.14768982 438.98419189]
[119.13423920 431.43405151]
[132.99519348 425.64364624]
[147.49339294 421.71203613]
[145.48936462 406.84652710]
[136.12106323 395.26705933]
[141.94528198 380.55688477]
[139.94126892 365.69134521]
[137.93725586 350.82583618]
[126.69817352 344.52404785]
[121.05659485 332.72341919]
[123.27433777 319.63555908]
[132.76266479 310.07592773]
[130.98019409 295.18222046]
[121.78532410 283.46456909]
[127.82791138 268.84274292]
[126.04544830 253.94902039]
[123.59971619 239.14974976]
[120.49560547 224.47444153]
[117.39149475 209.79914856]
[114.28738403 195.12384033]
[111.18328094 180.44854736]
[108.07917023 165.77323914]
[104.75690460 151.14578247]
[101.21723175 136.56939697]
[97.67756653 121.99302673]
[94.13789368 107.41664886]
[90.39247131 103.74434662]
[88.97119141 98.23496246]
[90.71670532 92.35363007]
[80.29106903 80.45334625]
[85.22709656 66.40041351]
[82.12298584 51.72510910]
[79.01887512 37.04980469]
[60.68785095 26.74714661]
[55.98882294 6.55273867]
[67.55579376 -10.29946518]
[63.58369827 -24.76398849]
[59.61160278 -39.22851181]
[55.63950729 -53.69303894]
[51.66741180 -68.15756226]
[46.73581696 -82.32369995]
[40.86685562 -96.12787628]
[34.99789429 -109.93205261]
[29.95385551 -114.20629883]
[28.10336304 -119.57962799]
[29.16648865 -124.23567963]
[23.71113205 -138.20848083]
[18.25577354 -152.18127441]
[12.80041695 -166.15406799]
[7.34506035 -180.12687683]
[-4.88137960 -190.16802979]
[-2.30271840 -204.83770752]
[-16.94227982 -216.00752258]
[-13.62119102 -233.23939514]
[-19.28397751 -247.12942505]
[-24.94676399 -261.01943970]
[-30.60955048 -274.90948486]
[-45.24457169 -271.47979736]
[-60.23593903 -270.38189697]
[-75.21447754 -271.64282227]
[-89.81132507 -275.23147583]
[-103.66702271 -281.05953979]
[-116.44036102 -288.98342896]
[-127.81678772 -298.80807495]
[-137.51614380 -310.29150391]
[-145.29957581 -323.15090942]
[-150.97540283 -337.06964111]
[-154.40386963 -351.70495605]
[-155.50053406 -366.69641113]
[-154.23838806 -381.67483521]
[-150.64852905 -396.27139282]
[-144.81933594 -410.12661743]
[-136.89437866 -422.89929199]
[-127.06880188 -434.27493286]
[-115.58457947 -443.97332764]
[-102.72451019 -451.75570679]
[-88.80530548 -457.43038940]
[-74.16971588 -460.85763550]
[-59.17816544 -461.95306396]
[-44.19983673 -460.68969727]
[-29.60358047 -457.09860229]
[-15.74884415 -451.26828003]
[-2.97681332 -443.34225464]
[8.39799023 -433.51574707]
[18.09545135 -422.03073120]
[25.87676048 -409.17001343]
[31.55029678 -395.25033569]
[34.97634506 -380.61447144]
[36.07053375 -365.62283325]
[34.80591583 -350.64462280]
[31.21364021 -336.04864502]
[25.38216400 -322.19439697]
[17.45509529 -309.42300415]
[7.62764502 -298.04901123]
[-3.85817766 -288.35250854]
[-16.71952438 -280.57226562]
[-11.05673790 -266.68225098]
[-5.39395094 -252.79220581]
[0.26883563 -238.90217590]
[11.29321384 -233.92326355]
[16.12465286 -222.39759827]
[11.67007923 -210.29307556]
[23.50631523 -201.25134277]
[21.31785774 -185.58222961]
[26.77321434 -171.60943604]
[32.22857285 -157.63662720]
[37.68392944 -143.66383362]
[43.13928604 -129.69104004]
[48.80207443 -115.80101013]
[54.67103195 -101.99683380]
[60.53999329 -88.19265747]
[64.51391602 -102.65667725]
[75.60543060 -112.75510406]
[90.37772369 -115.35882568]
[104.25343323 -109.66104889]
[112.93302155 -97.42729950]
[113.72702789 -82.44832611]
[106.38941193 -69.36553955]
[93.19381714 -62.23277283]
[78.22904968 -63.26019669]
[66.13193512 -72.12965393]
[70.10403442 -57.66513443]
[74.07612610 -43.20061111]
[78.04822540 -28.73608589]
[82.02031708 -14.27156162]
[91.17996979 -12.37124252]
[99.06685638 -7.23372459]
[104.57450867 0.47056156]
[106.91202545 9.70777988]
[105.71743774 19.21934128]
[101.11299896 27.69338226]
[93.69417572 33.94569778]
[96.79828644 48.62099838]
[99.90239716 63.29630280]
[110.10600281 74.14691162]
[105.39200592 89.24951935]
[108.71426392 103.87697601]
[112.25393677 118.45335388]
[115.79360962 133.02972412]
[119.33328247 147.60610962]
[123.61291504 152.64558411]
[124.56253052 158.24871826]
[122.75447083 162.66912842]
[125.85858154 177.34443665]
[128.96269226 192.01972961]
[132.06680298 206.69503784]
[135.17091370 221.37033081]
[138.27502441 236.04563904]
[147.34352112 224.09732056]
[162.18530273 221.92445374]
[174.29832458 230.77174377]
[176.74369812 245.57107544]
[168.12060547 257.84469604]
[153.36872864 260.56176758]
[140.93916321 252.16654968]
[142.72163391 267.06027222]
[152.04399109 279.84323120]
[145.87391663 293.39974976]
[147.65637207 308.29348755]
[161.60403442 318.85198975]
[163.56152344 335.89556885]
[152.80278015 348.82180786]
[154.80679321 363.68734741]
[156.81080627 378.55285645]
[166.32246399 391.19561768]
[160.35490417 404.84249878]
[162.35891724 419.70803833]
[177.38066101 419.66006470]
[192.28013611 421.57330322]
[206.80241394 425.41497803]
[220.69897461 431.11941528]
[233.73205566 438.58895874]
[245.67861938 447.69580078]
[256.33425903 458.28408813]
[265.51663208 470.17269897]
[273.06863403 483.15817261]
[278.86102295 497.01831055]
[282.79470825 511.51593018]
[284.80233765 526.40301514]
[284.84957886 541.42474365]
[282.93563843 556.32409668]
[279.09326172 570.84619141]
[273.38818359 584.74249268]
[265.91802979 597.77520752]
[256.81060791 609.72137451]
[246.22178650 620.37652588]
[234.33274841 629.55828857]
[221.34692383 637.10968018]
[207.48652649 642.90142822]
[192.98870850 646.83441162]
[178.10154724 648.84130859]
[163.07980347 648.88787842]
[148.18051147 646.97320557]
[133.65859985 643.13012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 183]
[20 182]
[22 180]
[23 179]
[24 178]
[28 175]
[29 174]
[31 172]
[32 171]
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[39 156]
[40 155]
[41 154]
[42 153]
[45 152]
[47 150]
[48 149]
[49 148]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 127]
[58 126]
[59 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[68 118]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
