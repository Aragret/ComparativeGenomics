%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[211.43572998 621.37835693]
[199.52606201 612.25354004]
[188.10606384 602.52288818]
[177.20652771 592.21264648]
[166.85681152 581.35052490]
[157.08483887 569.96588135]
[147.91694641 558.08935547]
[139.37783813 545.75299072]
[131.49055481 532.99005127]
[124.27635193 519.83489990]
[117.75467682 506.32308960]
[111.94309998 492.49096680]
[106.85730743 478.37585449]
[102.51099396 464.01577759]
[98.91588593 449.44949341]
[96.08166504 434.71621704]
[94.01598358 419.85571289]
[92.72441101 404.90802002]
[92.21041870 389.91342163]
[92.47539520 374.91235352]
[93.51863098 359.94528198]
[95.33730316 345.05252075]
[97.92652893 330.27423096]
[101.27930450 315.65023804]
[105.38661194 301.22000122]
[110.23736572 287.02239990]
[115.81848907 273.09570312]
[122.11494446 259.47744751]
[129.10975647 246.20436096]
[136.78405762 233.31224060]
[145.11715698 220.83581543]
[154.08662415 208.80873108]
[163.66822815 197.26339722]
[173.83618164 186.23095703]
[163.34867859 175.50657654]
[152.86117554 164.78219604]
[142.37368774 154.05781555]
[131.88618469 143.33343506]
[121.39868164 132.60905457]
[110.91117859 121.88468170]
[100.42367554 111.16030121]
[89.85662842 100.51428986]
[79.21061707 89.94724274]
[68.56461334 79.38019562]
[57.09071350 89.05735016]
[44.80643845 97.68255615]
[31.80793190 105.18831635]
[18.19692612 111.51588440]
[4.07994604 116.61574554]
[-10.43251991 120.44796753]
[-25.22689056 122.98257446]
[-40.18737793 124.19971466]
[-55.19689560 124.08988190]
[-70.13796234 122.65391541]
[-84.89366150 119.90306091]
[-99.34848785 115.85885620]
[-113.38931274 110.55294037]
[-126.90625763 104.02685547]
[-139.79351807 96.33165741]
[-151.95025635 87.52759552]
[-163.28129578 77.68355560]
[-173.69796753 66.87658691]
[-183.11875916 55.19128036]
[-191.46990967 42.71908188]
[-198.68609619 29.55760574]
[-204.71080017 15.80986214]
[-209.49690247 1.58344722]
[-213.00692749 -13.01029587]
[-215.21340942 -27.85714912]
[-216.09907532 -42.84091568]
[-215.65699768 -57.84432220]
[-213.89064026 -72.74994659]
[-210.81381226 -87.44112396]
[-206.45060730 -101.80287933]
[-200.83517456 -115.72281647]
[-194.01145935 -129.09197998]
[-186.03286743 -141.80574036]
[-176.96185303 -153.76458740]
[-166.86938477 -164.87493896]
[-155.83448792 -175.04983521]
[-143.94349670 -184.20962524]
[-131.28947449 -192.28265381]
[-117.97148132 -199.20570374]
[-104.09374237 -204.92460632]
[-89.76486206 -209.39460754]
[-75.09699249 -212.58070374]
[-60.20493317 -214.45797729]
[-45.20523453 -215.01173401]
[-30.21529198 -214.23764038]
[-15.35242271 -212.14175415]
[-0.73295349 -208.74046326]
[13.52869701 -204.06040955]
[27.32091141 -198.13819885]
[40.53574371 -191.02021790]
[53.06976700 -182.76213074]
[64.82488251 -173.42860413]
[75.70909882 -163.09266663]
[85.63721466 -151.83522034]
[94.53153992 -139.74436951]
[102.32245636 -126.91474915]
[108.94898987 -113.44676208]
[114.35928345 -99.44581604]
[118.51098633 -85.02149963]
[121.37161255 -70.28669739]
[122.91876221 -55.35672760]
[123.14033508 -40.34844589]
[122.03459930 -25.37931252]
[119.61019897 -10.56648159]
[115.88611603 3.97411060]
[110.89150238 18.12866402]
[104.66543579 31.78639984]
[97.25664520 44.84042358]
[88.72312164 57.18856430]
[79.13166046 68.73418427]
[89.77766418 79.30123138]
[100.42367554 89.86828613]
[107.90835571 92.86029816]
[111.14805603 100.67279816]
[121.63555908 111.39717865]
[132.12306213 122.12155914]
[142.61056519 132.84593201]
[153.09805298 143.57031250]
[163.58555603 154.29469299]
[174.07305908 165.01907349]
[184.56056213 175.74345398]
[195.81732178 165.82441711]
[207.57374573 156.50302124]
[219.79812622 147.80438232]
[232.45753479 139.75196838]
[245.51783752 132.36749268]
[258.94381714 125.67083740]
[272.69927979 119.68007660]
[286.74713135 114.41134644]
[301.04953003 109.87886047]
[315.56790161 106.09483337]
[330.26309204 103.06946564]
[345.09552002 100.81092072]
[360.02517700 99.32527161]
[375.01184082 98.61653900]
[390.01507568 98.68663025]
[404.99444580 99.53534698]
[419.90957642 101.16041565]
[434.72024536 103.55744171]
[449.38656616 106.71997070]
[463.86892700 110.63947296]
[478.12835693 115.30538940]
[492.12637329 120.70513153]
[505.82528687 126.82415009]
[519.18811035 133.64595032]
[532.17883301 141.15213013]
[544.76245117 149.32246399]
[556.90502930 158.13491821]
[568.57385254 167.56575012]
[579.73742676 177.58953857]
[590.36572266 188.17922974]
[600.43005371 199.30630493]
[609.90319824 210.94076538]
[618.75976562 223.05122375]
[626.97583008 235.60505676]
[634.52917480 248.56842041]
[641.39953613 261.90634155]
[647.56829834 275.58288574]
[653.01892090 289.56118774]
[657.73663330 303.80355835]
[661.70874023 318.27160645]
[664.92462158 332.92630005]
[667.37548828 347.72817993]
[669.05474854 362.63729858]
[669.95794678 377.61346436]
[670.08258057 392.61636353]
[669.42834473 407.60546875]
[667.99694824 422.54043579]
[665.79235840 437.38098145]
[662.82043457 452.08709717]
[659.08923340 466.61914062]
[654.60876465 480.93789673]
[649.39117432 495.00482178]
[643.45043945 508.78198242]
[636.80267334 522.23223877]
[629.46569824 535.31927490]
[621.45935059 548.00787354]
[612.80523682 560.26379395]
[603.52667236 572.05407715]
[593.64862061 583.34680176]
[583.19775391 594.11163330]
[572.20220947 604.31945801]
[560.69171143 613.94287109]
[548.69720459 622.95587158]
[536.25103760 631.33410645]
[523.38684082 639.05511475]
[510.13919067 646.09796143]
[496.54385376 652.44372559]
[482.63745117 658.07531738]
[468.45751953 662.97747803]
[454.04226685 667.13702393]
[439.43054199 670.54278564]
[424.66171265 673.18554688]
[409.77563477 675.05822754]
[394.81243896 676.15570068]
[379.81243896 676.47503662]
[364.81610107 676.01538086]
[349.86380005 674.77795410]
[334.99591064 672.76617432]
[320.25247192 669.98535156]
[305.67321777 666.44305420]
[291.29751587 662.14880371]
[277.16403198 657.11419678]
[263.31094360 651.35284424]
[249.77557373 644.88012695]
[236.59439087 637.71368408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 125]
[35 124]
[36 123]
[37 122]
[38 121]
[39 120]
[40 119]
[41 118]
[42 116]
[43 115]
[44 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
