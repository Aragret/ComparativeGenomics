%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[144.11231995 378.41018677]
[152.16085815 365.64761353]
[163.23899841 355.40371704]
[176.59143066 348.37698364]
[173.26916504 333.74951172]
[169.94691467 319.12207031]
[166.62464905 304.49459839]
[162.65255737 290.03009033]
[158.03854370 275.75735474]
[153.42453003 261.48461914]
[142.14746094 251.75440979]
[145.26467896 236.24333191]
[140.65066528 221.97059631]
[136.03666687 207.69787598]
[122.39784241 196.65480042]
[126.40284729 178.68144226]
[121.57685089 164.47898865]
[115.91406250 150.58895874]
[109.43457031 137.06060791]
[102.95507050 123.53226471]
[96.47557831 110.00392151]
[89.30020905 96.83144379]
[81.44845581 84.05060577]
[67.63213348 76.34217072]
[67.56265259 61.44773102]
[59.71089935 48.66688919]
[51.85914230 35.88604355]
[44.00738525 23.10520172]
[31.66656494 19.35461044]
[25.38994026 8.54777336]
[28.07068062 -3.24799705]
[20.41008377 -16.14432335]
[12.74948597 -29.04065132]
[5.08888817 -41.93697739]
[-2.57170916 -54.83330536]
[-10.23230648 -67.72962952]
[-17.89290428 -80.62596130]
[-25.55350113 -93.52228546]
[-40.87998199 -95.07315826]
[-52.22187805 -105.23262787]
[-55.36949158 -119.94848633]
[-49.32065201 -133.53338623]
[-56.98125076 -146.42971802]
[-64.64184570 -159.32603455]
[-72.30244446 -172.22236633]
[-79.96304321 -185.11869812]
[-87.62364197 -198.01501465]
[-93.19350433 -201.57705688]
[-95.74529266 -206.65499878]
[-95.31374359 -211.41134644]
[-102.58697510 -224.53002930]
[-109.86020660 -237.64872742]
[-115.32154846 -241.37503052]
[-117.72100830 -246.52668762]
[-117.14804840 -251.26806641]
[-124.02745819 -264.59750366]
[-130.90687561 -277.92694092]
[-137.78628540 -291.25634766]
[-144.66569519 -304.58578491]
[-158.63459778 -299.08480835]
[-173.08836365 -295.02529907]
[-187.87867737 -292.44891357]
[-202.85374451 -291.38204956]
[-217.85992432 -291.83569336]
[-232.74320984 -293.80520630]
[-247.35087585 -297.27032471]
[-261.53302002 -302.19552612]
[-275.14413452 -308.53024292]
[-288.04452515 -316.20950317]
[-300.10180664 -325.15451050]
[-311.19226074 -335.27343750]
[-321.20208740 -346.46246338]
[-330.02856445 -358.60675049]
[-337.58111572 -371.58172607]
[-343.78225708 -385.25421143]
[-348.56832886 -399.48391724]
[-351.89022827 -414.12484741]
[-353.71386719 -429.02670288]
[-354.02053833 -444.03659058]
[-352.80706787 -459.00048828]
[-350.08596802 -473.76486206]
[-345.88510132 -488.17816162]
[-340.24758911 -502.09252930]
[-333.23129272 -515.36517334]
[-324.90820312 -527.85986328]
[-315.36373901 -539.44842529]
[-304.69583130 -550.01184082]
[-293.01397705 -559.44189453]
[-280.43801880 -567.64166260]
[-267.09698486 -574.52703857]
[-253.12785339 -580.02740479]
[-238.67390442 -584.08624268]
[-223.88348389 -586.66198730]
[-208.90837097 -587.72821045]
[-193.90220642 -587.27386475]
[-179.01901245 -585.30377197]
[-164.41149902 -581.83795166]
[-150.22956848 -576.91217041]
[-136.61874390 -570.57684326]
[-123.71868896 -562.89697266]
[-111.66179657 -553.95147705]
[-100.57178497 -543.83203125]
[-90.56244659 -532.64257812]
[-81.73650360 -520.49786377]
[-74.18451691 -507.52258301]
[-67.98398590 -493.84982300]
[-63.19853973 -479.61990356]
[-59.87728500 -464.97885132]
[-58.05430222 -450.07693481]
[-57.74829865 -435.06701660]
[-58.96241379 -420.10314941]
[-61.68418503 -405.33889771]
[-65.88568878 -390.92578125]
[-71.52381134 -377.01165771]
[-78.54068756 -363.73934937]
[-86.86431885 -351.24502563]
[-96.40929413 -339.65689087]
[-107.07765961 -329.09390259]
[-118.75994110 -319.66442871]
[-131.33627319 -311.46520996]
[-124.45685577 -298.13577271]
[-117.57744598 -284.80633545]
[-110.69802856 -271.47692871]
[-103.81861877 -258.14749146]
[-96.74150848 -244.92196655]
[-89.46828461 -231.80326843]
[-82.19505310 -218.68457031]
[-74.72731018 -205.67561340]
[-67.06671143 -192.77929688]
[-59.40611649 -179.88296509]
[-51.74552155 -166.98663330]
[-44.08492279 -154.09031677]
[-36.42432404 -141.19398499]
[-21.60103035 -140.00741577]
[-10.18376064 -130.20385742]
[-6.68755865 -115.38393402]
[-12.65717411 -101.18288422]
[-4.99657726 -88.28655243]
[2.66402030 -75.39022827]
[10.32461739 -62.49390030]
[17.98521614 -49.59757614]
[25.64581299 -36.70124817]
[33.30641174 -23.80492210]
[40.96700668 -10.90859413]
[56.71295929 -3.16056538]
[56.78823090 15.25344753]
[64.63998413 28.03429031]
[72.49173737 40.81513214]
[80.34349823 53.59597397]
[93.59820557 60.39023209]
[94.22929382 76.19884491]
[102.08105469 88.97969055]
[105.48101044 74.37009430]
[117.40046692 65.26369476]
[132.38999939 65.82380676]
[143.59660339 75.79436493]
[145.89677429 90.61695099]
[138.23889160 103.51489258]
[124.12404633 108.59141541]
[110.00392151 103.52442169]
[116.48341370 117.05277252]
[122.96291351 130.58111572]
[129.44241333 144.10946655]
[133.47132874 129.66065979]
[145.15158081 120.24939728]
[160.12669373 119.38583374]
[172.81134033 127.39205933]
[178.47445679 141.28195190]
[175.00384521 155.87492371]
[163.69393921 165.72816467]
[148.76307678 167.16664124]
[135.77931213 159.65298462]
[140.60530090 173.85543823]
[151.80892944 180.24618530]
[155.53613281 192.17478943]
[150.30938721 203.08386230]
[154.92340088 217.35659790]
[159.53741455 231.62933350]
[171.14451599 242.38040161]
[167.69726562 256.87060547]
[172.31127930 271.14334106]
[176.92529297 285.41607666]
[184.70153809 272.58914185]
[199.23674011 268.88400269]
[212.20445251 276.42309570]
[216.17620850 290.88772583]
[208.87678528 303.99188232]
[194.48762512 308.22888184]
[181.25210571 301.17233276]
[184.57437134 315.79980469]
[187.89663696 330.42727661]
[191.21888733 345.05471802]
[206.29663086 345.62426758]
[220.71290588 350.07772827]
[233.48480225 358.11148071]
[243.74150085 369.17773438]
[250.78370667 382.52203369]
[254.13124084 397.23449707]
[253.55587769 412.31198120]
[249.09684753 426.72656250]
[241.05816650 439.49536133]
[229.98794556 449.74777222]
[216.64094543 456.78482056]
[201.92720032 460.12667847]
[186.84989929 459.54550171]
[172.43707275 455.08090210]
[159.67138672 447.03729248]
[149.42321777 435.96310425]
[142.39132690 422.61340332]
[139.05516052 407.89834595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 182]
[9 181]
[10 180]
[12 178]
[13 177]
[14 176]
[16 173]
[17 172]
[18 163]
[19 162]
[20 161]
[21 160]
[22 152]
[23 151]
[25 149]
[26 148]
[27 147]
[28 146]
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[50 127]
[51 126]
[52 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
