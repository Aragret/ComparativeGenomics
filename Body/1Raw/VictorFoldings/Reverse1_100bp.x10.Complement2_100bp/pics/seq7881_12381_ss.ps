%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[159.61193848 729.52642822]
[152.21482849 716.45208740]
[146.58758545 702.52410889]
[142.82650757 687.98071289]
[140.99595642 673.07086182]
[141.12725830 658.04962158]
[143.21817017 643.17401123]
[147.23289490 628.69860840]
[153.10275269 614.87115479]
[160.72727966 601.92810059]
[169.97604370 590.09106445]
[180.69076538 579.56256104]
[192.68809509 570.52270508]
[205.76275635 563.12622070]
[219.69102478 557.49963379]
[215.93472290 542.97760010]
[212.17842102 528.45550537]
[207.77743530 514.11566162]
[202.74050903 499.98663330]
[197.70359802 485.85760498]
[192.66668701 471.72857666]
[187.62976074 457.59954834]
[182.59284973 443.47052002]
[177.55593872 429.34149170]
[172.51901245 415.21246338]
[167.48210144 401.08343506]
[162.44517517 386.95440674]
[159.43338013 385.12097168]
[157.15998840 381.73770142]
[156.34376526 377.16744995]
[157.51423645 372.08050537]
[153.11323547 357.74066162]
[148.71223450 343.40078735]
[144.31123352 329.06094360]
[141.90077209 327.62994385]
[139.91189575 325.15789795]
[138.74398804 321.80062866]
[138.73266602 317.85543823]
[140.10261536 313.73510742]
[136.56294250 299.15872192]
[133.02326965 284.58236694]
[129.48359680 270.00598145]
[112.86591339 266.95434570]
[99.20919037 256.91305542]
[91.28966522 241.86329651]
[90.74349213 224.81040955]
[97.72891998 209.18365479]
[110.88473511 198.14671326]
[106.91264343 183.68218994]
[102.94054413 169.21766663]
[98.96844482 154.75314331]
[94.46779633 169.06202698]
[84.26776123 180.06016541]
[70.33780670 185.62400818]
[55.36758804 184.67926025]
[42.24762344 177.40832520]
[33.51116562 165.21511841]
[30.84509468 150.45394897]
[34.76418304 135.97497559]
[44.51171875 124.57385254]
[58.20560455 118.45196533]
[73.20176697 118.79135132]
[86.60467529 125.52648163]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[81.54335022 68.35419464]
[80.92207336 55.87229538]
[88.71411896 46.61970139]
[87.82130432 31.64629364]
[79.27632141 18.33112144]
[86.24236298 5.16588163]
[85.34954834 -9.80752468]
[84.45673370 -24.78092957]
[83.56391144 -39.75433731]
[80.24802399 -45.47415924]
[80.30931091 -51.15687561]
[82.87418365 -55.18558502]
[82.42758179 -70.17893219]
[81.98097229 -85.17228699]
[81.53437042 -100.16563416]
[68.11536407 -107.50577545]
[60.22419357 -120.49138641]
[59.89454651 -135.58303833]
[67.11484528 -148.72544861]
[79.85820770 -156.43728638]
[79.41159821 -171.43063354]
[78.96499634 -186.42398071]
[70.82024384 -199.98767090]
[78.17517853 -212.93966675]
[77.72856903 -227.93301392]
[68.89305878 -237.32963562]
[68.82974243 -249.82682800]
[77.02716827 -258.72225952]
[76.80384064 -273.72061157]
[76.58051300 -288.71893311]
[62.89508438 -295.57223511]
[53.97154236 -308.00723267]
[51.86044693 -323.16644287]
[57.04692078 -337.56640625]
[68.33914185 -347.89813232]
[83.14224243 -351.78741455]
[98.05458832 -348.34057617]
[109.64941406 -338.34967041]
[115.26232910 -324.11050415]
[113.60351562 -308.89514160]
[105.05416870 -296.19998169]
[91.57884979 -288.94226074]
[91.80217743 -273.94393921]
[92.02550507 -258.94558716]
[101.82404327 -244.38690186]
[92.72191620 -228.37962341]
[93.16852570 -213.38627625]
[101.28133392 -200.89501953]
[93.95834351 -186.87059021]
[94.40495300 -171.87724304]
[94.85155487 -156.88389587]
[108.03134155 -149.94422913]
[116.02108765 -137.25486755]
[116.59030151 -122.17036438]
[109.48603821 -108.73807526]
[96.52771759 -100.61224365]
[96.97432709 -85.61888885]
[97.42092896 -70.62554169]
[97.86753845 -55.63219070]
[98.53732300 -40.64715195]
[99.43013763 -25.67374611]
[100.32295227 -10.70034027]
[101.21576691 4.27306557]
[109.69689178 16.51724052]
[102.79470825 30.75347710]
[103.68752289 45.72688293]
[114.12636566 59.83353043]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[113.43297577 150.78105164]
[117.40506744 165.24557495]
[121.37716675 179.71009827]
[125.34925842 194.17462158]
[138.48437500 195.61343384]
[150.32015991 201.41625977]
[159.45741272 210.87290955]
[164.82417297 222.84274292]
[165.80145264 235.89215088]
[162.29457092 248.46629333]
[154.74186707 259.07437134]
[144.05996704 266.46630859]
[147.59963989 281.04269409]
[151.13931274 295.61904907]
[154.67898560 310.19543457]
[158.65107727 324.65994263]
[163.05207825 338.99981689]
[167.45307922 353.33966064]
[171.85408020 367.67950439]
[176.57421875 381.91748047]
[181.61112976 396.04650879]
[186.64804077 410.17553711]
[191.68496704 424.30456543]
[196.72187805 438.43359375]
[201.75878906 452.56262207]
[206.79571533 466.69165039]
[211.83262634 480.82067871]
[216.86953735 494.94970703]
[221.90646362 509.07876587]
[229.29734802 496.02600098]
[243.71578979 491.88970947]
[256.90222168 499.03939819]
[261.30288696 513.37933350]
[254.39685059 526.69500732]
[240.14022827 531.35858154]
[226.70048523 524.69921875]
[230.45678711 539.22125244]
[234.21308899 553.74334717]
[249.12269592 551.91064453]
[264.14395142 552.03979492]
[279.01983643 554.12860107]
[293.49581909 558.14123535]
[307.32415771 564.00915527]
[320.26824951 571.63183594]
[332.10659790 580.87890625]
[342.63665771 591.59210205]
[351.67822266 603.58813477]
[359.07659912 616.66174316]
[364.70516968 630.58923340]
[368.46762085 645.13220215]
[370.29959106 660.04193115]
[370.16970825 675.06317139]
[368.08023071 689.93896484]
[364.06686401 704.41473389]
[358.19833374 718.24279785]
[350.57504272 731.18652344]
[341.32739258 743.02447510]
[330.61367798 753.55401611]
[318.61721802 762.59497070]
[305.54324341 769.99273682]
[291.61550903 775.62060547]
[277.07232666 779.38238525]
[262.16256714 781.21362305]
[247.14131165 781.08306885]
[232.26560974 778.99285889]
[217.79003906 774.97882080]
[203.96224976 769.10961914]
[191.01887512 761.48571777]
[179.18139648 752.23754883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 179]
[16 178]
[17 177]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[31 160]
[32 159]
[33 158]
[34 157]
[39 156]
[40 155]
[41 154]
[42 153]
[48 145]
[49 144]
[50 143]
[51 142]
[64 141]
[65 140]
[66 139]
[68 138]
[69 137]
[72 135]
[73 134]
[75 132]
[76 131]
[77 130]
[78 129]
[81 128]
[82 127]
[83 126]
[84 125]
[89 120]
[90 119]
[91 118]
[93 116]
[94 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
