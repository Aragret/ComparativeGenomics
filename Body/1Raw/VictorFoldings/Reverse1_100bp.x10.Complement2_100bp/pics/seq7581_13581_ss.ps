%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[47.69212723 666.19506836]
[33.56901550 671.26849365]
[19.11324120 675.29754639]
[4.40192842 678.26055908]
[-10.48642826 680.14190674]
[-25.47239113 680.93133545]
[-40.47600555 680.62481689]
[-55.41722107 679.22393799]
[-70.21631622 676.73608398]
[-84.79432678 673.17462158]
[-99.07347870 668.55859375]
[-112.97758484 662.91247559]
[-126.43244934 656.26654053]
[-139.36630249 648.65612793]
[-151.71012878 640.12194824]
[-163.39805603 630.70947266]
[-174.36773682 620.46893311]
[-184.56063843 609.45495605]
[-193.92237854 597.72637939]
[-202.40299988 585.34570312]
[-209.95727539 572.37896729]
[-216.54487610 558.89544678]
[-222.13066101 544.96697998]
[-226.68482971 530.66796875]
[-230.18307495 516.07464600]
[-232.60673523 501.26492310]
[-233.94290161 486.31777954]
[-234.18441772 471.31298828]
[-233.33000183 456.33059692]
[-231.38421631 441.45053101]
[-228.35743713 426.75219727]
[-224.26582336 412.31399536]
[-219.13119507 398.21301270]
[-212.98095703 384.52444458]
[-205.84791565 371.32131958]
[-197.77012634 358.67413330]
[-188.79071045 346.65029907]
[-178.95755005 335.31402588]
[-168.32313538 324.72573853]
[-156.94418335 314.94198608]
[-144.88140869 306.01495361]
[-132.19918823 297.99224854]
[-118.96517181 290.91671753]
[-105.24998474 284.82608032]
[-91.12678528 279.75280762]
[-76.67094421 275.72402954]
[-61.95958710 272.76123047]
[-47.07119751 270.88018799]
[-32.08522034 270.09094238]
[-17.08161354 270.39773560]
[-2.14042258 271.79888916]
[12.65862942 274.28695679]
[27.23658371 277.84863281]
[31.85059357 263.57589722]
[36.46460342 249.30316162]
[41.07861328 235.03044128]
[45.69261932 220.75770569]
[44.42135620 217.46890259]
[44.67989349 213.40095520]
[46.81708145 209.27957153]
[50.84447861 205.95886230]
[56.09119415 191.90638733]
[61.33791351 177.85391235]
[66.58463287 163.80143738]
[59.71152496 154.69503784]
[58.07084656 143.28346252]
[62.18469238 132.38529968]
[71.13928986 124.74880219]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[108.98761749 58.08808899]
[114.65039825 44.19806290]
[120.31318665 30.30803680]
[116.03932953 18.13852882]
[121.04183197 6.68607330]
[132.13911438 1.87184191]
[138.00807190 -11.93233490]
[140.67387390 -26.69355202]
[140.00408936 -41.67859268]
[139.33430481 -56.66363144]
[138.66452026 -71.64866638]
[137.99473572 -86.63370514]
[126.10028076 -77.49466705]
[111.50310516 -80.94757080]
[104.96370697 -94.44705963]
[111.30268097 -108.04181671]
[125.84716797 -111.71029663]
[137.87475586 -102.74967957]
[138.32136536 -117.74303436]
[138.76795959 -132.73638916]
[139.21456909 -147.72973633]
[139.66117859 -162.72308350]
[125.20648193 -167.05024719]
[112.36478424 -174.97192383]
[102.01164246 -185.94804382]
[94.85295868 -199.23019409]
[91.37682343 -213.91279602]
[91.82024384 -228.99476624]
[96.15298462 -243.44778442]
[104.07962799 -256.28643799]
[115.05973053 -266.63531494]
[128.34465027 -273.78887939]
[143.02859497 -277.25933838]
[158.11039734 -276.81011963]
[172.56173706 -272.47180176]
[185.39732361 -264.54019165]
[195.74197388 -253.55609131]
[202.89039612 -240.26840210]
[206.35519409 -225.58312988]
[205.90013123 -210.50149536]
[201.55624390 -196.05183411]
[193.61967468 -183.21931458]
[182.63159180 -172.87889099]
[169.34114075 -165.73561096]
[154.65452576 -162.27647400]
[154.20791626 -147.28312683]
[153.76130676 -132.28977966]
[153.31471252 -117.29642487]
[152.86810303 -102.30307770]
[152.97976685 -87.30348969]
[153.64955139 -72.31845093]
[154.31933594 -57.33341599]
[154.98912048 -42.34837723]
[155.65890503 -27.36333656]
[161.71301270 -41.08732605]
[170.29508972 -53.38967896]
[181.08432007 -63.81045532]
[193.67732239 -71.96006775]
[207.60330200 -77.53384399]
[222.34164429 -80.32340240]
[237.34130859 -80.22444153]
[252.04154968 -77.24067688]
[265.89279175 -71.48365021]
[278.37716675 -63.16859818]
[289.02795410 -52.60637665]
[297.44699097 -40.19186783]
[303.31948853 -26.38919449]
[306.42590332 -11.71438217]
[306.65014648 3.28394222]
[303.98376465 18.04505539]
[298.52645874 32.01710129]
[290.48229980 44.67772293]
[280.15200806 55.55360031]
[267.92175293 64.23812103]
[254.24879456 70.40661621]
[239.64430237 73.82847595]
[224.65429688 74.37575531]
[209.83917236 72.02800751]
[195.75279236 66.87300110]
[182.92179871 59.10345840]
[171.82589722 49.00984955]
[162.87991333 36.96953583]
[156.41827393 23.43264771]
[152.68258667 8.90527248]
[151.81225586 -6.06337404]
[145.94329834 7.74080276]
[149.00746155 25.02020836]
[134.20321655 35.97082138]
[128.54042053 49.86085129]
[122.87763977 63.75087738]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[104.68360901 145.19100952]
[97.71875000 162.46537781]
[80.63710022 169.04815674]
[75.39038086 183.10063171]
[70.14366913 197.15310669]
[64.89694977 211.20558167]
[59.96535492 225.37170410]
[55.35134506 239.64443970]
[50.73733521 253.91717529]
[46.12332535 268.18991089]
[41.50931931 282.46264648]
[55.41351318 288.10848999]
[68.86849213 294.75424194]
[81.80247498 302.36441040]
[94.14643097 310.89840698]
[105.83451843 320.31069946]
[116.80436707 330.55102539]
[126.99745178 341.56481934]
[136.35939026 353.29327393]
[144.84020996 365.67382812]
[152.39469910 378.64041138]
[158.98251343 392.12384033]
[164.56852722 406.05218506]
[169.12292480 420.35113525]
[172.62141418 434.94439697]
[175.04533386 449.75408936]
[176.38172913 464.70120239]
[176.62348938 479.70599365]
[175.76933289 494.68841553]
[173.82379150 509.56851196]
[170.79725647 524.26690674]
[166.70587158 538.70513916]
[161.57147217 552.80621338]
[155.42146301 566.49487305]
[148.28863525 579.69812012]
[140.21105957 592.34545898]
[131.23184204 604.36944580]
[121.39886475 615.70587158]
[110.76461792 626.29431152]
[99.38582611 636.07824707]
[87.32320404 645.00549316]
[74.64111328 653.02838135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[61 174]
[62 173]
[63 172]
[64 171]
[69 168]
[70 167]
[72 165]
[73 164]
[74 163]
[75 162]
[76 161]
[79 159]
[80 158]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
