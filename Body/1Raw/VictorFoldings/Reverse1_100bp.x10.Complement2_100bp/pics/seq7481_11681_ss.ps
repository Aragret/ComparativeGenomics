%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[76.95779419 485.88647461]
[73.67292786 500.56723022]
[67.74618530 514.39428711]
[59.37944031 526.89678955]
[48.85766220 537.64886475]
[36.53921127 546.28430176]
[22.84365273 552.50891113]
[8.23745251 556.11083984]
[-6.78190708 556.96728516]
[-21.70287323 555.04907227]
[-36.01724243 550.42163086]
[-49.23747253 543.24243164]
[-60.91328812 533.75616455]
[-70.64701843 522.28576660]
[-78.10713196 509.22204590]
[-83.03953552 495.00988770]
[-85.27624512 480.13333130]
[-84.74107361 465.09909058]
[-81.45224762 450.41921997]
[-75.52178192 436.59375000]
[-67.15166473 424.09350586]
[-56.62698746 413.34426880]
[-44.30620956 404.71218872]
[-30.60897255 398.49121094]
[-16.00180244 394.89328003]
[-0.98221320 394.04089355]
[13.93823528 395.96307373]
[18.55224419 381.69036865]
[23.16625404 367.41763306]
[19.71900940 352.92742920]
[31.32611275 342.17633057]
[35.94012070 327.90362549]
[40.55413055 313.63088989]
[44.41843414 299.13717651]
[47.52254486 284.46188354]
[42.58652115 270.40893555]
[53.01215363 258.50866699]
[56.11626434 243.83335876]
[59.22037506 229.15806580]
[62.32448196 214.48275757]
[60.63321686 207.28822327]
[65.58560181 199.61282349]
[68.90785980 184.98536682]
[72.23011780 170.35789490]
[70.85202789 167.91679382]
[70.35785675 164.78271484]
[71.01639557 161.28962708]
[72.97068024 157.86248779]
[76.21009827 154.97108459]
[80.39710999 140.56730652]
[84.58412170 126.16352844]
[88.77113342 111.75974274]
[83.78712463 101.23354340]
[87.12122345 90.07446289]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[105.86486053 55.32804871]
[97.72270203 49.43346024]
[91.36688232 41.66798019]
[87.21225739 32.55222321]
[85.52651978 22.69445610]
[86.41291046 12.75003147]
[89.80397797 3.37781429]
[95.46661377 -4.80347252]
[103.01805878 -11.25609303]
[111.95176697 -15.55863571]
[121.67135620 -17.43353462]
[131.53047180 -16.76495743]
[137.19326782 -30.65498543]
[142.85604858 -44.54501343]
[138.58218384 -56.71451950]
[143.58468628 -68.16697693]
[154.68197632 -72.98120880]
[160.55093384 -86.78538513]
[166.41989136 -100.58956146]
[164.69894409 -116.31688690]
[176.79913330 -125.00219727]
[182.66809082 -138.80636597]
[188.53704834 -152.61054993]
[189.01481628 -161.73248291]
[194.59753418 -166.57553101]
[200.67135620 -180.29078674]
[206.74519348 -194.00605774]
[211.99191284 -208.05853271]
[216.39291382 -222.39837646]
[220.79391479 -236.73822021]
[225.19490051 -251.07807922]
[229.59590149 -265.41790771]
[233.99690247 -279.75775146]
[238.39790344 -294.09762573]
[224.67568970 -300.20156860]
[211.78929138 -307.91506958]
[199.92665100 -317.12567139]
[189.26072693 -327.69900513]
[179.94709778 -339.48092651]
[172.12155151 -352.29959106]
[165.89823914 -365.96807861]
[161.36788940 -380.28707886]
[158.59657288 -395.04772949]
[157.62469482 -410.03482056]
[158.46646118 -425.02978516]
[161.10955811 -439.81393433]
[165.51547241 -454.17169189]
[171.61993408 -467.89367676]
[179.33392334 -480.77978516]
[188.54495239 -492.64208984]
[199.11869812 -503.30761719]
[210.90097046 -512.62078857]
[223.71992493 -520.44586182]
[237.38865662 -526.66870117]
[251.70780945 -531.19848633]
[266.46856689 -533.96923828]
[281.45568848 -534.94055176]
[296.45062256 -534.09826660]
[311.23468018 -531.45458984]
[325.59228516 -527.04815674]
[339.31402588 -520.94317627]
[352.19985962 -513.22869873]
[364.06182861 -504.01721191]
[374.72692871 -493.44308472]
[384.03970337 -481.66046143]
[391.86425781 -468.84121704]
[398.08657837 -455.17224121]
[402.61584473 -440.85293579]
[405.38607788 -426.09207153]
[406.35681152 -411.10488892]
[405.51394653 -396.11001587]
[402.86972046 -381.32604980]
[398.46273804 -366.96859741]
[392.35723877 -353.24707031]
[384.64230347 -340.36154175]
[375.43038940 -328.49993896]
[364.85583496 -317.83520508]
[353.07287598 -308.52288818]
[340.25332642 -300.69879150]
[326.58413696 -294.47698975]
[312.26464844 -289.94824219]
[297.50366211 -287.17858887]
[282.51647949 -286.20840454]
[267.52160645 -287.05184937]
[252.73774719 -289.69662476]
[248.33674622 -275.35678101]
[243.93574524 -261.01690674]
[239.53475952 -246.67707825]
[235.13375854 -232.33723450]
[230.73275757 -217.99737549]
[226.33175659 -203.65753174]
[239.08493042 -211.55415344]
[254.05206299 -210.56156921]
[265.65075684 -201.04998779]
[269.55502319 -186.56700134]
[264.30862427 -172.51440430]
[251.86837769 -164.13346863]
[236.87417603 -164.55007935]
[224.91847229 -173.60882568]
[220.46046448 -187.93222046]
[214.38662720 -174.21696472]
[208.31278992 -160.50169373]
[202.34123230 -146.74159241]
[196.47227478 -132.93740845]
[190.60330200 -119.13323212]
[192.74404907 -104.39327240]
[180.22407532 -94.72059631]
[174.35511780 -80.91641998]
[168.48614502 -67.11224365]
[171.55030823 -49.83283997]
[156.74607849 -38.88222504]
[151.08328247 -24.99219894]
[145.42050171 -11.10217190]
[158.86001587 3.99132037]
[162.79159546 23.89292526]
[156.05050659 43.10743713]
[140.42991638 56.28915024]
[120.20470428 59.72904587]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[115.57922363 104.65475464]
[103.17491150 115.94675446]
[98.98789978 130.35054016]
[94.80088806 144.75431824]
[90.61387634 159.15809631]
[86.85758209 173.68016052]
[83.53531647 188.30761719]
[80.21305847 202.93507385]
[76.99978638 217.58686829]
[73.89567566 232.26217651]
[70.79156494 246.93746948]
[67.68745422 261.61276245]
[72.40145111 276.71539307]
[62.19784927 287.56597900]
[59.09373856 302.24130249]
[71.61758423 293.98580933]
[86.53189087 295.58691406]
[97.01802826 306.31262207]
[98.28188324 321.25927734]
[89.74563599 333.59347534]
[75.31194305 337.67617798]
[61.57969284 331.64083862]
[54.82686234 318.24487305]
[50.21285629 332.51760864]
[45.59884644 346.79034424]
[48.71606445 362.30142212]
[37.43898773 372.03161621]
[32.82497787 386.30435181]
[28.21096802 400.57708740]
[41.43313599 407.75268555]
[53.11150742 417.23583984]
[62.84832764 428.70358276]
[70.31195831 441.76528931]
[75.24819946 455.97616577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 205]
[28 204]
[29 203]
[31 201]
[32 200]
[33 199]
[34 191]
[35 190]
[37 188]
[38 187]
[39 186]
[40 185]
[42 184]
[43 183]
[44 182]
[49 181]
[50 180]
[51 179]
[52 178]
[55 176]
[56 175]
[57 174]
[68 169]
[69 168]
[70 167]
[73 165]
[74 164]
[75 163]
[77 161]
[78 160]
[79 159]
[81 158]
[82 157]
[83 156]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
