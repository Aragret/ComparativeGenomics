%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[81.42807007 475.73580933]
[80.75828552 460.75076294]
[80.08849335 445.76574707]
[79.41870880 430.78070068]
[78.74892426 415.79565430]
[63.66995621 411.26644897]
[51.03195572 401.83160400]
[42.37394333 388.61718750]
[38.75810242 373.21081543]
[40.63950729 357.47100830]
[47.80892944 343.30303955]
[59.41593552 332.42816162]
[74.06972504 326.17465210]
[73.17691040 311.20126343]
[72.28408813 296.22784424]
[71.27983093 281.26150513]
[70.16418457 266.30303955]
[64.26408386 280.09396362]
[54.60704422 291.57180786]
[42.02848053 299.74371338]
[27.61657715 303.90267944]
[12.61810017 303.68893433]
[-1.66943002 299.12094116]
[-14.00999832 290.59390259]
[-23.33602333 278.84548950]
[-28.84070969 264.89202881]
[-30.04784775 249.94068909]
[-26.85300636 235.28488159]
[-19.53257370 222.19245911]
[-8.71983814 211.79608154]
[4.64978838 204.99511719]
[19.41970062 202.37792969]
[34.31215286 204.17092896]
[48.03880310 210.21899414]
[59.41215134 219.99891663]
[67.44829559 232.66464233]
[71.45159149 247.11694336]
[74.55570221 232.44165039]
[77.65981293 217.76634216]
[80.76392365 203.09104919]
[83.86803436 188.41574097]
[86.97214508 173.74043274]
[88.97615814 158.87490845]
[89.86897278 143.90150452]
[90.76178741 128.92810059]
[91.65460968 113.95469666]
[83.76233673 99.15306091]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[95.16101837 40.29770279]
[80.32582855 34.80792618]
[67.92844391 25.01450348]
[59.17499924 11.88553429]
[54.91237640 -3.28712845]
[55.54627991 -19.01498985]
[61.00265121 -33.75894165]
[70.73610687 -46.07986450]
[83.78441620 -54.77912140]
[98.86363220 -59.01513672]
[99.31023407 -74.00848389]
[99.75684357 -89.00183868]
[99.86850739 -104.00141907]
[99.64517975 -118.99975586]
[99.42185211 -133.99809265]
[99.19852448 -148.99642944]
[98.97519684 -163.99476624]
[98.75186920 -178.99310303]
[82.74422455 -182.00463867]
[67.70547485 -188.24781799]
[54.28018951 -197.45272827]
[43.04328156 -209.22251892]
[34.47541046 -223.05056763]
[28.94240761 -238.34228516]
[26.67967224 -254.44067383]
[27.78214836 -270.65457153]
[32.20034027 -286.28829956]
[39.74253464 -300.67147827]
[50.08311844 -313.18792725]
[62.77663803 -323.30184937]
[77.27697754 -330.58090210]
[92.96086884 -334.71469116]
[92.06805420 -349.68807983]
[91.17523193 -364.66149902]
[90.28241730 -379.63491821]
[89.38960266 -394.60830688]
[88.49678802 -409.58172607]
[87.60397339 -424.55511475]
[75.84690094 -415.24002075]
[61.19993973 -418.47518921]
[54.46027756 -431.87582397]
[60.59614182 -445.56344604]
[75.08440399 -449.44805908]
[87.24406433 -440.66751099]
[87.46739197 -455.66586304]
[87.69071960 -470.66418457]
[87.91404724 -485.66253662]
[73.66014862 -490.77185059]
[61.83911133 -500.23449707]
[53.73320007 -513.02404785]
[50.22167969 -527.75323486]
[51.68545151 -542.82427979]
[57.96574020 -556.60235596]
[68.38130951 -567.59301758]
[81.80234528 -574.60406494]
[96.77304840 -576.87493896]
[111.66949463 -574.15936279]
[124.87583923 -566.75183105]
[134.95956421 -555.45593262]
[140.82682800 -541.49694824]
[141.84123230 -526.38897705]
[137.89273071 -511.77090454]
[129.40962219 -499.22836304]
[117.31208801 -490.12185669]
[102.91238403 -485.43920898]
[102.68905640 -470.44085693]
[102.46572876 -455.44253540]
[102.24240112 -440.44418335]
[102.57737732 -425.44793701]
[103.47019196 -410.47451782]
[104.36300659 -395.50112915]
[105.25582123 -380.52770996]
[106.14864349 -365.55432129]
[107.04145813 -350.58090210]
[107.93427277 -335.60751343]
[121.60473633 -333.91812134]
[134.77108765 -329.85797119]
[147.02540588 -323.55148315]
[157.98779297 -315.19274902]
[167.31809998 -305.03942871]
[174.72659302 -293.40496826]
[179.98283386 -280.64874268]
[182.92292786 -267.16513062]
[183.45460510 -253.37124634]
[181.56008911 -239.69400024]
[177.29675293 -226.55691528]
[170.79531860 -214.36705017]
[162.25588989 -203.50233459]
[151.94175720 -194.29988098]
[140.17132568 -187.04550171]
[127.30824280 -181.96485901]
[113.75020599 -179.21643066]
[113.97353363 -164.21809387]
[114.19686127 -149.21975708]
[114.42018890 -134.22142029]
[114.64351654 -119.22308350]
[114.86684418 -104.22474670]
[117.12863159 -101.51982117]
[118.19264221 -97.58498383]
[117.49506378 -92.99513245]
[114.75019073 -88.55522919]
[114.30358124 -73.56188202]
[113.85697937 -58.56853104]
[127.39113617 -54.09499359]
[139.12879944 -45.97912979]
[148.11311340 -34.87162781]
[153.60861206 -21.66749573]
[155.16142273 -7.43394470]
[152.63668823 6.67587566]
[146.23031616 19.51629066]
[136.45372009 30.04213142]
[124.09308624 37.39380264]
[110.14605713 40.96748734]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[115.46391296 94.97541046]
[114.85726929 106.60610962]
[106.62801361 114.84751129]
[105.73519897 129.82090759]
[104.84237671 144.79432678]
[103.94956207 159.76773071]
[113.50411987 148.20440674]
[127.52545929 142.87504578]
[142.34843445 145.17272949]
[154.09835815 154.49684143]
[159.70382690 168.41009521]
[157.69958496 183.27560425]
[148.60954285 195.20753479]
[134.80981445 201.08692932]
[119.90760040 199.37692261]
[107.79831696 190.52450562]
[101.64744568 176.84454346]
[98.54333496 191.51985168]
[95.43922424 206.19515991]
[92.33511353 220.87045288]
[89.23100281 235.54576111]
[86.12689972 250.22105408]
[85.12263489 265.18740845]
[86.23828125 280.14584351]
[89.99729919 288.47097778]
[87.25749969 295.33502197]
[88.15031433 310.30844116]
[89.04312897 325.28186035]
[102.86590576 329.05444336]
[114.82992554 336.89981079]
[123.77272034 348.03982544]
[128.83030701 361.37710571]
[129.52059937 375.60290527]
[125.78932190 389.32577515]
[118.01408386 401.20751953]
[106.96614838 410.09368896]
[93.73396301 415.12588501]
[94.40374756 430.11090088]
[95.07353210 445.09594727]
[95.74332428 460.08099365]
[96.41310883 475.06604004]
[105.68989563 488.58908081]
[98.37382507 503.26583862]
[81.99103546 503.99810791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[13 194]
[14 193]
[15 192]
[16 190]
[17 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 172]
[44 171]
[45 170]
[46 169]
[48 166]
[49 165]
[50 164]
[51 163]
[60 153]
[61 152]
[62 151]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
