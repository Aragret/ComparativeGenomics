%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[112.92607880 681.16516113]
[99.69384766 674.08953857]
[86.94213867 666.18072510]
[74.72335052 657.47113037]
[63.08769226 647.99658203]
[52.08298492 637.79602051]
[41.75444412 626.91131592]
[32.14450836 615.38720703]
[23.29267502 603.27105713]
[15.23531437 590.61267090]
[8.00553703 577.46405029]
[1.63305080 563.87927246]
[-3.85595727 549.91406250]
[-8.43893147 535.62591553]
[-12.09704018 521.07342529]
[-14.81524944 506.31649780]
[-16.58239174 491.41574097]
[-17.39120483 476.43237305]
[-17.23836327 461.42794800]
[-16.12449646 446.46417236]
[-14.05418301 431.60247803]
[-11.03592873 416.90399170]
[-7.08213568 402.42907715]
[-2.20905232 388.23721313]
[3.56329703 374.38674927]
[10.21119308 360.93457031]
[17.70731735 347.93597412]
[26.02086449 335.44433594]
[35.11767578 323.51104736]
[44.96036911 312.18508911]
[55.50849533 301.51303101]
[66.71871948 291.53875732]
[78.54496002 282.30319214]
[90.93862915 273.84429932]
[103.84880066 266.19686890]
[117.22241974 259.39233398]
[131.00453186 253.45860291]
[125.96762085 239.32957458]
[120.93070221 225.20054626]
[115.89379120 211.07151794]
[110.85687256 196.94248962]
[105.81995392 182.81346130]
[100.61291504 177.56860352]
[100.81493378 168.43640137]
[98.16626740 183.20069885]
[90.68756104 196.20335388]
[79.25739288 205.91680908]
[65.21856689 211.19995117]
[50.22036743 211.43211365]
[36.02475357 206.58602905]
[24.29941559 197.23100281]
[16.42183495 184.46606445]
[13.31746292 169.79081726]
[15.35099602 154.92929077]
[22.28353691 141.62742615]
[33.30065918 131.44787598]
[47.10808182 125.58656311]
[62.08372116 124.73204041]
[76.46825409 128.98469543]
[88.57180786 137.84495544]
[96.97309875 150.27333069]
[88.13117981 138.28710938]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[88.69773865 64.14447021]
[87.13721466 49.22586823]
[85.57669067 34.30726242]
[76.06675720 25.59382248]
[75.07412720 13.13595581]
[82.58723450 3.65546250]
[81.24900055 -11.28472233]
[71.86985779 -20.13878632]
[71.06281281 -32.61005020]
[78.71623993 -41.97763443]
[77.60058594 -56.93608856]
[76.48493958 -71.89453888]
[68.97183228 -58.91173553]
[56.33538818 -50.82964325]
[41.39861679 -49.45382309]
[27.49843407 -55.09163284]
[17.74017525 -66.48358154]
[14.30386162 -81.08466339]
[17.95717239 -95.63297272]
[27.88395119 -106.87837982]
[41.86652756 -112.30862427]
[56.78115845 -110.71057892]
[69.29588318 -102.44124603]
[76.61487579 -89.34800720]
[77.95310974 -104.28819275]
[79.29134369 -119.22837830]
[80.62957764 -134.16856384]
[81.96781158 -149.10874939]
[83.30604553 -164.04893494]
[68.97451782 -168.69166565]
[56.03567505 -176.40750122]
[45.13853836 -186.80943298]
[36.82969666 -199.37568665]
[31.52591705 -213.47596741]
[29.49323845 -228.40298462]
[30.83361626 -243.40802002]
[35.47982025 -257.73843384]
[43.19879532 -270.67538452]
[53.60336304 -281.57000732]
[66.17163849 -289.87582397]
[80.27319336 -295.17617798]
[95.20070648 -297.20523071]
[110.20541382 -295.86123657]
[124.53469849 -291.21154785]
[137.46978760 -283.48944092]
[148.36189270 -273.08221436]
[156.66464233 -260.51193237]
[161.96159363 -246.40910339]
[163.98703003 -231.48109436]
[162.63938904 -216.47671509]
[157.98623657 -202.14855957]
[150.26098633 -189.21533203]
[139.85115051 -178.32575989]
[127.27884674 -170.02606201]
[113.17472839 -164.73252869]
[98.24623108 -162.71069336]
[96.90799713 -147.77050781]
[95.56976318 -132.83032227]
[94.23152924 -117.89014435]
[92.89329529 -102.94995880]
[91.55506134 -88.00977325]
[91.44338989 -73.01019287]
[92.55904388 -58.05173492]
[93.67469025 -43.09328461]
[104.32240295 -29.14361954]
[96.18918610 -12.62295723]
[97.52742004 2.31722832]
[108.38164520 16.10681725]
[100.49529266 32.74673843]
[102.05581665 47.66534424]
[103.61634064 62.58395004]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[118.48425293 135.56829834]
[111.91328430 148.93510437]
[115.01739502 163.61041260]
[119.94898224 177.77653503]
[124.98590088 191.90556335]
[130.02281189 206.03460693]
[135.05973816 220.16363525]
[140.09664917 234.29266357]
[145.13356018 248.42169189]
[159.56123352 244.29878235]
[174.22340393 241.10874939]
[189.05982971 238.86466980]
[204.00956726 237.57579041]
[219.01115417 237.24737549]
[234.00297546 237.88081360]
[248.92340088 239.47346497]
[263.71112061 242.01881409]
[278.30538940 245.50639343]
[292.64620972 249.92185974]
[306.67468262 255.24707031]
[320.33312988 261.46017456]
[333.56542969 268.53558350]
[346.31723022 276.44427490]
[358.53610229 285.15371704]
[370.17187500 294.62814331]
[381.17669678 304.82861328]
[391.50537109 315.71322632]
[401.11541748 327.23721313]
[409.96737671 339.35324097]
[418.02490234 352.01153564]
[425.25482178 365.16006470]
[431.62744141 378.74481201]
[437.11660767 392.70993042]
[441.69973755 406.99807739]
[445.35800171 421.55047607]
[448.07638550 436.30737305]
[449.84368896 451.20812988]
[450.65267944 466.19149780]
[450.50000000 481.19589233]
[449.38629150 496.15969849]
[447.31616211 511.02139282]
[444.29806519 525.71990967]
[440.34442139 540.19488525]
[435.47149658 554.38677979]
[429.69931030 568.23736572]
[423.05154419 581.68957520]
[415.55557251 594.68829346]
[407.24215698 607.17999268]
[398.14547729 619.11340332]
[388.30291748 630.43945312]
[377.75491333 641.11163330]
[366.54479980 651.08605957]
[354.71865845 660.32171631]
[342.32507324 668.78076172]
[329.41500854 676.42834473]
[316.04144287 683.23303223]
[302.25939941 689.16687012]
[288.12548828 694.20556641]
[273.69778442 698.32830811]
[259.03558350 701.51818848]
[244.19911194 703.76208496]
[229.24937439 705.05078125]
[214.24777222 705.37902832]
[199.25596619 704.74542236]
[184.33555603 703.15264893]
[169.54786682 700.60711670]
[154.95362854 697.11938477]
[140.61285400 692.70373535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[44 145]
[61 144]
[63 142]
[64 141]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[72 133]
[73 132]
[76 130]
[77 129]
[78 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
