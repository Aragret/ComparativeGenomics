%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[60.09686279 529.97570801]
[51.60484314 517.50384521]
[46.63106537 503.25869751]
[45.51464462 488.21157837]
[48.33170319 473.38839722]
[54.89016724 459.79983521]
[64.74287415 448.37237549]
[77.21804047 439.88519287]
[91.46509552 434.91690063]
[90.34944916 419.95846558]
[89.23379517 405.00000000]
[88.11814880 390.04153442]
[87.00250244 375.08309937]
[85.88685608 360.12463379]
[84.77120209 345.16619873]
[83.54422760 330.21646118]
[82.20599365 315.27627563]
[80.86775970 300.33609009]
[79.52952576 285.39590454]
[68.67530060 271.60629272]
[76.56165314 254.96638489]
[67.54225922 243.11312866]
[73.80187225 228.58288574]
[72.24134827 213.66427612]
[66.90167236 227.68170166]
[58.02262878 239.77146912]
[46.24519730 249.06082153]
[32.41960907 254.87916565]
[17.54393768 256.80645752]
[2.69207525 254.70355225]
[-11.06381130 248.72227478]
[-22.73067093 239.29443359]
[-31.46626472 227.10060120]
[-36.63996506 213.02108765]
[-37.87826920 198.07228088]
[-35.09179306 183.33337402]
[-28.48168945 169.86836243]
[-18.52514839 158.64930725]
[-5.94094133 150.48609924]
[8.36246681 145.96809387]
[23.35250092 145.42140198]
[37.94701767 148.88551331]
[51.09242630 156.11035156]
[61.83974838 166.57434082]
[69.41312408 179.52207947]
[73.26597595 194.02000427]
[76.37008667 179.34471130]
[79.47419739 164.66940308]
[73.14353180 148.30207825]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[94.47065735 43.63101578]
[106.70057678 31.04547119]
[107.70484161 16.07912636]
[106.81202698 1.10572135]
[105.91921234 -13.86768436]
[105.02639008 -28.84108925]
[104.13357544 -43.81449509]
[103.24076080 -58.78790283]
[102.34794617 -73.76130676]
[91.31172943 -81.48248291]
[86.80332184 -93.96786499]
[90.25788879 -106.58325958]
[100.19810486 -114.78213501]
[99.52832031 -129.76716614]
[97.52430725 -144.63270569]
[94.20204926 -159.26016235]
[90.87979126 -173.88761902]
[87.55752563 -188.51507568]
[76.45715332 -192.77163696]
[68.86750793 -201.76597595]
[66.58563995 -213.18907166]
[70.06500244 -224.18041992]
[78.33092499 -232.04431152]
[75.44564819 -246.76420593]
[72.56037903 -261.48410034]
[69.67510223 -276.20397949]
[66.78983307 -290.92388916]
[56.54253387 -302.97805786]
[61.68723679 -316.95596313]
[58.80196381 -331.67584229]
[55.91669083 -346.39575195]
[40.85983276 -347.25704956]
[26.49046516 -351.83657837]
[13.71185398 -359.84643555]
[3.32727671 -370.78314209]
[-4.01048470 -383.95916748]
[-7.84017181 -398.54629517]
[-7.92104769 -413.62756348]
[-4.24802780 -428.25491333]
[2.94799805 -441.50891113]
[13.21468163 -452.55633545]
[25.90665245 -460.70278931]
[40.22607803 -465.43618774]
[55.27283478 -466.45892334]
[70.10105896 -463.70675659]
[83.77864838 -457.35266113]
[95.44581604 -447.79608154]
[104.36914825 -435.63775635]
[109.98771667 -421.64196777]
[111.94834137 -406.68847656]
[110.12776947 -391.71728516]
[104.64044189 -377.66952515]
[95.83130646 -365.42819214]
[84.25409698 -355.76284790]
[70.63658142 -349.28100586]
[73.52185822 -334.56112671]
[76.40712738 -319.84121704]
[86.44805145 -308.83990479]
[81.50971985 -293.80914307]
[84.39499664 -279.08926392]
[87.28026581 -264.36938477]
[90.16554260 -249.64947510]
[93.05081177 -234.92959595]
[108.83055878 -225.64976501]
[112.88566589 -207.47094727]
[102.18498993 -191.83734131]
[105.50724792 -177.20988464]
[108.82950592 -162.58241272]
[112.15177155 -147.95495605]
[117.28684998 -162.04859924]
[127.96781158 -172.58032227]
[142.13230896 -177.51661682]
[157.04541016 -175.90434265]
[169.82762146 -168.05482483]
[178.01091003 -155.48368835]
[180.01519775 -140.61819458]
[175.45350647 -126.32865143]
[165.20660400 -115.37415314]
[151.25302124 -109.86983490]
[136.28697205 -110.87849426]
[123.19816589 -118.20538330]
[114.51335907 -130.43695068]
[115.18314362 -115.45191956]
[128.06787109 -104.64347076]
[129.17051697 -87.52333832]
[117.32135010 -74.65412140]
[118.21416473 -59.68071747]
[119.10697937 -44.70731354]
[119.99980164 -29.73390579]
[120.89261627 -14.76049995]
[121.78543091 0.21290551]
[122.67824554 15.18631172]
[128.99960327 1.58335173]
[139.34773254 -9.27556324]
[152.63059998 -16.24446678]
[167.44641113 -18.58791351]
[182.23162842 -16.05859375]
[195.42591858 -8.92343330]
[205.63687134 2.06457782]
[211.78689575 15.74584866]
[213.22697449 30.67656136]
[209.80511475 45.28104401]
[201.88244629 58.01804733]
[190.29505920 67.54341125]
[176.26580811 72.85189056]
[161.27522278 73.38327789]
[146.90530396 69.08149719]
[134.67253113 60.40051651]
[125.86787415 48.25646591]
[121.42047119 33.93074417]
[127.90650940 44.14141846]
[125.62320709 56.42841721]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[106.81971741 148.71377563]
[104.11352539 160.91461182]
[94.14949799 167.77351379]
[91.04538727 182.44882202]
[87.94127655 197.12411499]
[87.15995789 212.10375977]
[88.72047424 227.02236938]
[97.85149384 239.94270325]
[91.48025513 253.40585327]
[100.99018860 262.11929321]
[101.98281860 274.57717896]
[94.46971130 284.05764771]
[95.80794525 298.99783325]
[97.14617920 313.93801880]
[98.48441315 328.87820435]
[102.36695862 337.14645386]
[99.72966003 344.05053711]
[100.84530640 359.00900269]
[101.96095276 373.96743774]
[103.07660675 388.92590332]
[104.19225311 403.88433838]
[105.30789948 418.84280396]
[106.42354584 433.80126953]
[121.24997711 436.60113525]
[134.84613037 443.14385986]
[146.28498840 452.98330688]
[154.78663635 465.44863892]
[159.77140808 479.68994141]
[160.89944458 494.73620605]
[158.09384155 509.56155396]
[151.54586792 523.15515137]
[141.70199585 534.59020996]
[129.23338318 543.08703613]
[114.99016571 548.06634521]
[99.94347382 549.18859863]
[85.11920929 546.37725830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 189]
[17 188]
[18 187]
[19 186]
[21 183]
[23 181]
[24 180]
[46 179]
[47 178]
[48 177]
[50 174]
[51 173]
[52 172]
[54 171]
[55 170]
[56 169]
[58 166]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[69 139]
[70 138]
[71 125]
[72 124]
[73 123]
[74 122]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
