%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[68.51145935 599.09594727]
[59.53075409 611.12774658]
[49.34156418 622.15490723]
[38.05552292 632.05657959]
[25.79628754 640.72424316]
[12.69817638 648.06298828]
[-1.09529841 653.99243164]
[-15.43300915 658.44750977]
[-30.15786552 661.37945557]
[-45.10853195 662.75616455]
[-60.12120056 662.56250000]
[-75.03137970 660.80065918]
[-89.67572021 657.48992920]
[-103.89375305 652.66650391]
[-117.52970886 646.38330078]
[-130.43418884 638.70916748]
[-142.46578979 629.72821045]
[-153.49269104 619.53875732]
[-163.39407349 608.25244141]
[-172.06147766 595.99304199]
[-179.39990234 582.89471436]
[-185.32896423 569.10107422]
[-189.78369141 554.76330566]
[-192.71530151 540.03833008]
[-194.09162903 525.08764648]
[-193.89762878 510.07498169]
[-192.13542175 495.16485596]
[-188.82431030 480.52059937]
[-184.00056458 466.30267334]
[-177.71704102 452.66687012]
[-170.04260254 439.76260376]
[-161.06130981 427.73120117]
[-150.87158203 416.70455933]
[-139.58506775 406.80343628]
[-127.32540894 398.13635254]
[-114.22694397 390.79821777]
[-100.43318176 384.86950684]
[-86.09525299 380.41510010]
[-71.37025452 377.48388672]
[-56.41952133 376.10791016]
[-41.40686035 376.30227661]
[-26.49676323 378.06484985]
[-11.85258770 381.37631226]
[2.36521387 386.20040894]
[8.64257431 372.57708740]
[14.91993523 358.95376587]
[21.19729614 345.33044434]
[27.47465706 331.70712280]
[33.75201797 318.08383179]
[32.05108261 303.28665161]
[44.85350800 293.99102783]
[43.15257263 279.19387817]
[55.95499420 269.89825439]
[62.23235703 256.27493286]
[66.73998260 241.96824646]
[69.40577698 227.20703125]
[72.07157898 212.44581604]
[74.73737335 197.68460083]
[77.40316772 182.92337036]
[72.05091858 169.02363586]
[82.11761475 156.81822205]
[76.76537323 142.91848755]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[101.07250977 51.85992432]
[103.62834167 37.07927322]
[106.07407379 22.28000069]
[100.69040680 7.40294695]
[110.39933014 -3.89245415]
[112.84506226 -18.69172478]
[115.29078674 -33.49099731]
[117.73651123 -48.29026794]
[118.29472351 -63.27987671]
[116.95648956 -78.22006226]
[115.50707245 -93.14987183]
[113.94654846 -108.06847382]
[112.38602448 -122.98708344]
[108.38080597 -131.19659424]
[110.91502380 -138.13917542]
[109.57678986 -153.07936096]
[108.23855591 -168.01954651]
[106.90032196 -182.95973206]
[105.56208801 -197.89991760]
[93.71773529 -208.01667786]
[92.57340240 -223.18722534]
[102.29118347 -234.41665649]
[100.95294952 -249.35684204]
[99.61471558 -264.29702759]
[98.27648163 -279.23721313]
[83.52518463 -282.59197998]
[70.53359222 -290.34271240]
[60.57448196 -301.73004150]
[54.62354660 -315.63836670]
[53.26380157 -330.70507812]
[56.62845612 -345.45413208]
[64.38787842 -358.44052124]
[75.78188324 -368.39199829]
[89.69419098 -374.33361816]
[104.76182556 -375.68325806]
[119.50861359 -372.30874634]
[132.48980713 -364.54061890]
[142.43365479 -353.13995361]
[148.36593628 -339.22366333]
[149.70549011 -324.15512085]
[146.32107544 -309.41058350]
[138.54425049 -296.43460083]
[127.13692474 -286.49841309]
[113.21666718 -280.57543945]
[114.55490112 -265.63525391]
[115.89313507 -250.69508362]
[117.23136902 -235.75489807]
[128.79014587 -226.43125916]
[130.36013794 -211.29884338]
[120.50227356 -199.23814392]
[121.84050751 -184.29797363]
[123.17874146 -169.35778809]
[124.51697540 -154.41760254]
[125.85520935 -139.47741699]
[127.30463409 -124.54759979]
[128.86515808 -109.62899780]
[130.42567444 -94.71039581]
[134.24798584 -88.38491058]
[131.89668274 -79.55829620]
[133.23490906 -64.61811066]
[139.14845276 -78.40325165]
[149.16868591 -89.56545258]
[162.23817444 -96.92675018]
[176.97764587 -99.71027374]
[191.83160400 -97.62229156]
[205.23249817 -90.88313293]
[215.76608276 -80.20401764]
[222.32072449 -66.71192169]
[224.20469666 -51.83069992]
[221.21919250 -37.13081360]
[213.67926025 -24.16356659]
[202.38061523 -14.29742908]
[188.51562500 -8.57359600]
[173.54751587 -7.59611702]
[159.05587769 -11.46814823]
[146.57006836 -19.78106499]
[137.40774536 -31.65758514]
[132.53578186 -45.84453964]
[130.09005737 -31.04526901]
[127.64433289 -16.24599838]
[125.19860077 -1.44672680]
[130.75720215 12.37178421]
[120.87334442 24.72572899]
[118.42761230 39.52499771]
[120.43844604 46.63684464]
[115.83373260 54.52572250]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[106.75485229 148.33441162]
[96.87882996 159.48400879]
[102.04040527 174.43957520]
[92.16438293 185.58917236]
[89.49858856 200.35038757]
[86.83279419 215.11160278]
[84.16699982 229.87281799]
[81.50120544 244.63404846]
[90.85402679 232.90695190]
[103.47238922 224.79664612]
[118.02462769 221.15902710]
[132.97502136 222.37796021]
[146.74580383 228.32484436]
[157.88372803 238.37205505]
[165.21337891 251.45930481]
[167.96124268 266.20547485]
[165.83732605 281.05435181]
[159.06576538 294.43887329]
[148.36119080 304.94659424]
[134.85327148 311.46856689]
[119.96754456 313.31655884]
[105.27491760 310.29547119]
[92.32595825 302.72418213]
[82.48718262 291.40170288]
[76.79691315 277.52291870]
[75.85567474 262.55230713]
[69.57830811 276.17559814]
[70.83024597 291.94720459]
[58.47682190 300.26840210]
[59.72875595 316.03997803]
[47.37533188 324.36117554]
[41.09797287 337.98449707]
[34.82061386 351.60781860]
[28.54325104 365.23114014]
[22.26589012 378.85443115]
[15.98853016 392.47775269]
[28.89337540 400.15127563]
[40.92541122 409.13168335]
[51.95281219 419.32058716]
[61.85475159 430.60638428]
[70.52274323 442.86541748]
[77.86180878 455.96334839]
[83.79154205 469.75668335]
[88.24697113 484.09429932]
[91.17928314 498.81906128]
[92.55634308 513.76971436]
[92.36307526 528.78240967]
[90.60158539 543.69262695]
[87.29118347 558.33703613]
[82.46813202 572.55517578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[51 189]
[53 187]
[54 186]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[61 162]
[63 160]
[64 159]
[67 156]
[68 155]
[69 154]
[70 152]
[71 151]
[73 149]
[74 148]
[75 147]
[76 146]
[77 128]
[78 127]
[79 125]
[80 124]
[81 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
