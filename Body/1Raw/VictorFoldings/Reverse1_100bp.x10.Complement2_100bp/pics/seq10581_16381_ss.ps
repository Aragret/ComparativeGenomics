%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[70.01497650 532.83520508]
[62.27910614 545.70904541]
[53.01978683 557.53460693]
[42.37739182 568.13269043]
[30.51325226 577.34259033]
[17.60722733 585.02465820]
[3.85496879 591.06243896]
[-10.53504276 595.36444092]
[-25.34465790 597.86541748]
[-40.34936905 598.52746582]
[-55.32170486 597.34057617]
[-70.03469086 594.32263184]
[-84.26528168 589.51953125]
[-97.79774475 583.00402832]
[-110.42692566 574.87487793]
[-121.96138000 565.25531006]
[-132.22624207 554.29113770]
[-141.06590271 542.14868164]
[-148.34635925 529.01190186]
[-153.95722961 515.08001709]
[-157.81346130 500.56417847]
[-159.85658264 485.68447876]
[-160.05564880 470.66650391]
[-158.40760803 455.73788452]
[-154.93746948 441.12493896]
[-149.69783020 427.04922485]
[-142.76812744 413.72412109]
[-134.25340271 401.35159302]
[-124.28274536 390.11926270]
[-113.00730133 380.19735718]
[-100.59801483 371.73632812]
[-87.24299622 364.86441040]
[-73.14471436 359.68582153]
[-58.51688385 356.27902222]
[-43.58126450 354.69567871]
[-28.56427956 354.95980835]
[-13.69357872 357.06738281]
[0.80539978 360.98648071]
[6.46818638 347.09643555]
[12.13097286 333.20642090]
[17.37769127 319.15393066]
[22.20368958 304.95147705]
[27.02968597 290.74902344]
[23.79856110 276.20910645]
[35.56444550 265.63204956]
[40.39044189 251.42958069]
[45.21644211 237.22712708]
[38.42300797 224.02163696]
[43.11493683 209.54959106]
[57.01212311 202.51354980]
[61.83812332 188.31108093]
[66.66412354 174.10862732]
[71.49011993 159.90617371]
[68.25899506 145.36625671]
[80.02487946 134.78918457]
[84.85087585 120.58673096]
[89.67687225 106.38427734]
[78.68791199 116.59420776]
[65.00606537 122.74296570]
[50.07522202 124.18164825]
[35.47105789 120.75843048]
[22.73479080 112.83457947]
[13.21050644 101.24630737]
[7.90332794 87.21656036]
[7.37333250 72.22592163]
[11.67645359 57.85640335]
[20.35857010 45.62444305]
[32.50344086 36.82091141]
[46.82938766 32.37487030]
[61.82455444 32.75551605]
[75.90647125 37.92267990]
[87.58904266 47.33106232]
[95.63936615 59.98776627]
[99.20788574 74.55710602]
[97.91795349 89.50173187]
[106.14675903 76.96032715]
[114.37557220 64.41893005]
[122.60437775 51.87752914]
[130.83319092 39.33612823]
[139.06199646 26.79472923]
[147.29080200 14.25332928]
[155.51960754 1.71192896]
[163.74841309 -10.82947159]
[155.97410583 -23.91845322]
[154.65905762 -39.02334213]
[160.01074219 -53.14352417]
[170.91761780 -63.49733353]
[185.17945862 -68.06999207]
[199.95117188 -66.00553894]
[208.17997742 -78.54693604]
[209.28147888 -94.32975006]
[222.73258972 -100.72635651]
[230.96141052 -113.26775360]
[233.05270386 -122.15956879]
[239.40725708 -125.93336487]
[240.74360657 -141.69802856]
[254.28846741 -147.89366150]
[262.70309448 -160.31115723]
[271.11770630 -172.72865295]
[279.53231812 -185.14614868]
[268.20492554 -195.00755310]
[258.14880371 -206.16246033]
[249.51062012 -218.44818115]
[242.41633606 -231.68557739]
[236.96942139 -245.68157959]
[233.24926758 -260.23211670]
[231.31018066 -275.12496948]
[231.18038940 -290.14297485]
[232.86181641 -305.06713867]
[236.32994080 -319.67977905]
[241.53416443 -333.76782227]
[248.39862061 -347.12585449]
[256.82318115 -359.55902100]
[266.68502808 -370.88604736]
[277.84030151 -380.94177246]
[290.12634277 -389.57949829]
[303.36401367 -396.67327881]
[317.36022949 -402.11968994]
[331.91088867 -405.83929443]
[346.80383301 -407.77783203]
[361.82183838 -407.90704346]
[376.74591064 -406.22506714]
[391.35842896 -402.75640869]
[405.44628906 -397.55163574]
[418.80404663 -390.68667603]
[431.23690796 -382.26165771]
[442.56359863 -372.39938354]
[452.61886597 -361.24374390]
[461.25613403 -348.95736694]
[468.34942627 -335.71945190]
[473.79531860 -321.72302246]
[477.51437378 -307.17221069]
[479.45236206 -292.27920532]
[479.58102417 -277.26119995]
[477.89846802 -262.33718872]
[474.42926025 -247.72479248]
[469.22396851 -233.63713074]
[462.35852051 -220.27961731]
[453.93301392 -207.84706116]
[444.07034302 -196.52076721]
[432.91430664 -186.46591187]
[420.62762451 -177.82910156]
[407.38943481 -170.73629761]
[393.39282227 -165.29093933]
[378.84185791 -161.57243347]
[363.94879150 -159.63500977]
[348.93075562 -159.50691223]
[334.00680542 -161.19000244]
[319.39456177 -164.65975952]
[305.30706787 -169.86557007]
[291.94982910 -176.73152161]
[283.53521729 -164.31402588]
[275.12057495 -151.89653015]
[266.70596313 -139.47903442]
[265.97149658 -124.60255432]
[251.82475281 -117.51874542]
[243.50280762 -105.03894806]
[235.27400208 -92.49755096]
[234.76107788 -77.61177826]
[220.72137451 -70.31813049]
[212.49256897 -57.77672958]
[220.26705933 -45.04790878]
[221.75007629 -30.14455032]
[216.59417725 -16.01735306]
[205.77169800 -5.48672771]
[191.39186096 -0.67975402]
[176.28982544 -2.60066342]
[168.06100464 9.94073677]
[159.83219910 22.48213768]
[151.60339355 35.02353668]
[143.37458801 47.56493759]
[135.14578247 60.10633850]
[126.91696930 72.64773560]
[118.68816376 85.18914032]
[110.45935822 97.73053741]
[103.87932587 111.21027374]
[99.05332947 125.41272736]
[94.22733307 139.61518860]
[97.11327362 155.17095947]
[85.69257355 164.73217773]
[80.86657715 178.93463135]
[76.04058075 193.13708496]
[71.21457672 207.33953857]
[77.94797516 221.38586426]
[72.85140991 235.72042847]
[59.41889572 242.05313110]
[54.59289932 256.25558472]
[49.76690292 270.45803833]
[52.65283966 286.01379395]
[41.23214340 295.57504272]
[36.40614319 309.77749634]
[31.58014679 323.97994995]
[32.57703781 328.20605469]
[32.21379089 332.13449097]
[30.75101089 335.37420654]
[28.54952621 337.65896606]
[26.02099991 338.86920166]
[20.35821342 352.75921631]
[14.69542694 366.64926147]
[27.80169106 373.98446655]
[39.90717697 382.87472534]
[50.82836533 393.18527222]
[60.39970016 404.75979614]
[68.47607422 417.42279053]
[74.93505859 430.98233032]
[79.67873383 445.23284912]
[82.63518524 459.95831299]
[83.75959778 474.93545532]
[83.03492737 489.93728638]
[80.47214508 504.73632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 199]
[39 198]
[40 197]
[41 192]
[42 191]
[43 190]
[45 188]
[46 187]
[47 186]
[50 183]
[51 182]
[52 181]
[53 180]
[55 178]
[56 177]
[57 176]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[89 161]
[90 160]
[92 158]
[93 157]
[95 156]
[97 154]
[98 153]
[99 152]
[100 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
