%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[181.55514526 507.39068604]
[167.99200439 514.20288086]
[152.88354492 515.65155029]
[138.27304077 511.54086304]
[126.13646698 502.42669678]
[118.11518860 489.54168701]
[115.29401398 474.62841797]
[118.05448151 459.70379639]
[126.02326202 446.78625488]
[138.12265015 437.62277222]
[152.71629333 433.45263672]
[154.05453491 418.51245117]
[155.39276123 403.57226562]
[156.73100281 388.63211060]
[158.06922913 373.69192505]
[159.40747070 358.75173950]
[158.06922913 343.81155396]
[154.09713745 329.34701538]
[150.12504578 314.88250732]
[146.15293884 300.41796875]
[142.18084717 285.95343018]
[137.37832642 280.33584595]
[138.25900269 271.24395752]
[127.58107758 260.85977173]
[131.61599731 245.56175232]
[127.85970306 231.03968811]
[124.10340118 216.51762390]
[120.23909760 202.02394104]
[116.26699829 187.55941772]
[102.28708649 182.48989868]
[93.87343597 170.01293945]
[94.42645264 154.79624939]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[74.44860840 64.49502563]
[78.53943634 50.17321396]
[74.56734467 35.70869064]
[70.59524536 21.24416542]
[59.47978210 9.98552418]
[63.57061005 -4.33629084]
[59.59851456 -18.80081558]
[46.37407303 -22.68732643]
[36.87229538 -32.52270889]
[33.49812698 -45.66365814]
[37.02931595 -58.65114594]
[46.44030380 -68.12085724]
[42.68400574 -82.64292145]
[38.92770386 -97.16497803]
[32.85387039 -110.88024139]
[24.62506104 -123.42164612]
[16.30311775 -135.90144348]
[7.88849926 -148.31893921]
[-0.52611929 -160.73643494]
[-8.94073772 -173.15393066]
[-22.23604965 -166.17433167]
[-36.22924423 -160.72726440]
[-50.74433517 -156.88121033]
[-65.59878540 -154.68455505]
[-80.60578156 -154.16490173]
[-95.57659912 -155.32881165]
[-110.32295990 -158.16163635]
[-124.65941620 -162.62773132]
[-138.40567017 -168.67095947]
[-151.38883972 -176.21530151]
[-163.44566345 -185.16589355]
[-174.42449951 -195.41017151]
[-184.18730164 -206.81929016]
[-192.61125183 -219.24977112]
[-199.59045410 -232.54528809]
[-205.03709412 -246.53863525]
[-208.88272095 -261.05386353]
[-211.07893372 -275.90835571]
[-211.59812927 -290.91537476]
[-210.43377686 -305.88616943]
[-207.60052490 -320.63244629]
[-203.13398743 -334.96875000]
[-197.09034729 -348.71481323]
[-189.54560852 -361.69778442]
[-180.59466553 -373.75433350]
[-170.35006714 -384.73287964]
[-158.94065857 -394.49533081]
[-146.50991821 -402.91891479]
[-133.21418762 -409.89770508]
[-119.22067261 -415.34393311]
[-104.70535278 -419.18911743]
[-89.85076904 -421.38488770]
[-74.84374237 -421.90362549]
[-59.87299728 -420.73883057]
[-45.12680435 -417.90512085]
[-30.79061699 -413.43817139]
[-17.04472733 -407.39413452]
[-4.06200266 -399.84899902]
[7.99428415 -390.89770508]
[18.97251320 -380.65277100]
[28.73462105 -369.24307251]
[37.15783691 -356.81207275]
[44.13623428 -343.51614380]
[49.58205032 -329.52246094]
[53.42679977 -315.00701904]
[55.62212753 -300.15237427]
[56.14042664 -285.14532471]
[54.97517776 -270.17462158]
[52.14103699 -255.42851257]
[47.67364502 -241.09245300]
[41.62918854 -227.34675598]
[34.08367538 -214.36425781]
[25.13200378 -202.30822754]
[14.88675022 -191.33030701]
[3.47675753 -181.56854248]
[11.89137650 -169.15104675]
[20.30599403 -156.73355103]
[28.72061348 -144.31605530]
[35.07516098 -140.54226685]
[37.16646194 -131.65045166]
[45.39527130 -119.10905457]
[43.65673065 -134.00796509]
[45.78095245 -148.85678101]
[51.62704086 -162.67066956]
[60.80725479 -174.53337097]
[72.71269989 -183.65808105]
[86.55372620 -189.43960571]
[101.41230774 -191.49446106]
[116.30293274 -189.68637085]
[130.23796082 -184.13523865]
[142.29313660 -175.20927429]
[151.66886902 -163.50048828]
[157.74330139 -149.78549194]
[160.11355591 -134.97393799]
[158.62240601 -120.04824829]
[153.36874390 -105.99836731]
[144.70106506 -93.75617981]
[133.19422913 -84.13366699]
[119.61145020 -77.76905823]
[104.85363770 -75.08448792]
[89.89961243 -76.25802612]
[75.74122620 -81.21182251]
[63.31755447 -89.61732483]
[53.44976425 -100.92127991]
[57.20606232 -86.39921570]
[60.96236420 -71.87715912]
[76.42098236 -66.35369873]
[85.63352203 -52.56635284]
[84.80459595 -35.83870697]
[74.06303406 -22.77291107]
[78.03513336 -8.30838680]
[88.86648560 1.91565466]
[85.05976868 17.27206993]
[89.03186798 31.73659325]
[93.00395966 46.20111847]
[103.83531952 56.42515945]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[132.77668762 144.26490784]
[141.02340698 157.06510925]
[140.16180420 172.08914185]
[130.73152161 183.58731079]
[134.70361328 198.05183411]
[139.99378967 205.49844360]
[138.62545776 212.76132202]
[142.38175964 227.28338623]
[146.13806152 241.80545044]
[157.08467102 253.22833252]
[152.78106689 267.48764038]
[156.64537048 281.98135376]
[160.61746216 296.44586182]
[164.58956909 310.91040039]
[168.56166077 325.37490845]
[172.53375244 339.83944702]
[175.39212036 325.11431885]
[181.64663696 311.48049927]
[190.94358826 299.70904541]
[202.75718689 290.46572876]
[216.41929626 284.27325439]
[231.15728760 281.48190308]
[246.13763428 282.24945068]
[260.51312256 286.53256226]
[273.47079468 294.08898926]
[284.27777100 304.49133301]
[292.32287598 317.15136719]
[297.15115356 331.35305786]
[298.48950195 346.29321289]
[296.26226807 361.12695312]
[290.59539795 375.01531982]
[281.80935669 387.17285156]
[270.40106201 396.91198730]
[257.01571655 403.68194580]
[242.41032410 407.09985352]
[227.41085815 406.97241211]
[212.86564636 403.30679321]
[199.59727478 396.31033325]
[188.35612488 386.37872314]
[179.77796936 374.07363892]
[174.34765625 360.08996582]
[173.00941467 375.03015137]
[171.67118835 389.97033691]
[170.33294678 404.91052246]
[168.99472046 419.85070801]
[167.65647888 434.79089355]
[181.27670288 441.48818970]
[191.55494690 452.65609741]
[197.10118103 466.78424072]
[197.16529846 481.96185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[23 171]
[25 169]
[26 168]
[27 167]
[28 165]
[29 164]
[33 160]
[34 159]
[35 158]
[37 156]
[38 155]
[40 153]
[41 152]
[42 151]
[44 149]
[45 148]
[50 144]
[51 143]
[52 142]
[53 119]
[54 118]
[55 116]
[56 115]
[57 114]
[58 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
