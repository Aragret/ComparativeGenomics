%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[89.05844879 696.04986572]
[75.94708252 688.72937012]
[63.75567627 679.96197510]
[52.64316940 669.86193848]
[42.75443649 658.56103516]
[34.21839905 646.20654297]
[27.14633560 632.95953369]
[21.63044930 618.99267578]
[17.74265289 604.48809814]
[15.53362846 589.63488770]
[15.03217697 574.62664795]
[16.24483490 559.65911865]
[19.15579224 544.92736816]
[23.72710037 530.62347412]
[29.89916229 516.93395996]
[37.59151077 504.03723145]
[46.70386505 492.10147095]
[57.11742020 481.28222656]
[68.69641876 471.72061157]
[81.28990173 463.54125977]
[94.73369598 456.85079956]
[108.85252380 451.73645020]
[123.46231842 448.26489258]
[121.67984772 433.37118530]
[112.48497772 421.65353394]
[118.52756500 407.03170776]
[109.33269501 395.31405640]
[115.37528229 380.69223022]
[113.59281158 365.79849243]
[111.81034851 350.90478516]
[110.02788544 336.01107788]
[100.83300781 324.29339600]
[106.87559509 309.67160034]
[105.09313202 294.77786255]
[102.97534943 292.94125366]
[101.45747375 290.15509033]
[100.90480804 286.64370728]
[101.59480286 282.75930786]
[103.67520905 278.94802856]
[102.78239441 263.97463989]
[101.88957977 249.00122070]
[100.99676514 234.02781677]
[88.36855316 226.17503357]
[82.71902466 212.22702026]
[86.40901947 197.45416260]
[98.22678375 187.57254028]
[97.33396912 172.59913635]
[96.44115448 157.62573242]
[95.54833984 142.65231323]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[82.87084198 75.20165253]
[89.64009857 61.93415833]
[88.52445221 46.97570419]
[86.18896484 32.15863419]
[82.64929199 17.58226013]
[79.10961914 3.00588465]
[75.56994629 -11.57049084]
[61.37301254 -17.54989815]
[53.51105881 -30.58995438]
[54.81960678 -45.58167648]
[64.58804321 -56.79397583]
[61.04837036 -71.37035370]
[57.50869751 -85.94672394]
[53.96902466 -100.52310181]
[38.86552048 -109.34939575]
[34.89658737 -126.03958130]
[44.04306030 -140.15272522]
[40.28676224 -154.67478943]
[36.53046036 -169.19683838]
[32.77415848 -183.71890259]
[22.07688332 -190.92523193]
[19.24721909 -203.09800720]
[25.27085686 -213.58811951]
[21.73118401 -228.16448975]
[18.19151115 -242.74087524]
[7.41618586 -254.32546997]
[11.93161392 -268.51913452]
[8.39194202 -283.09552002]
[4.85226917 -297.67187500]
[-10.18380547 -297.03729248]
[-25.05471992 -299.34860229]
[-39.18887711 -304.51696777]
[-52.04299545 -312.34368896]
[-63.12300110 -322.52798462]
[-72.00299835 -334.67837524]
[-78.34168243 -348.32781982]
[-81.89539337 -362.95169067]
[-82.52754211 -377.98785400]
[-80.21382904 -392.85839844]
[-75.04319000 -406.99172974]
[-67.21437073 -419.84457397]
[-57.02828598 -430.92291260]
[-44.87646866 -439.80096436]
[-31.22599602 -446.13742065]
[-16.60155678 -449.68878174]
[-1.56527841 -450.31848145]
[13.30488682 -448.00238037]
[27.43737030 -442.82943726]
[40.28895569 -434.99853516]
[51.36566162 -424.81066895]
[60.24172974 -412.65740967]
[66.57598877 -399.00592041]
[70.12496185 -384.38088989]
[70.75224304 -369.34451294]
[68.43372345 -354.47473145]
[63.25851059 -340.34307861]
[55.42552948 -327.49276733]
[45.23585892 -316.41772461]
[33.08116913 -307.54360962]
[19.42864418 -301.21154785]
[22.96831703 -286.63519287]
[26.50798988 -272.05880737]
[37.03013229 -261.51681519]
[32.76788712 -246.28054810]
[36.30755997 -231.70416260]
[39.84723282 -217.12779236]
[52.62693024 -205.10089111]
[47.29621887 -187.47520447]
[51.05252075 -172.95314026]
[54.80881882 -158.43109131]
[58.56512070 -143.90902710]
[70.47341919 -138.98744202]
[77.47729492 -127.94082642]
[76.83051300 -114.68216705]
[68.54540253 -104.06277466]
[72.08507538 -89.48639679]
[75.62474823 -74.91002655]
[79.16442108 -60.33364868]
[92.98719788 -54.85015106]
[101.02562714 -42.12821579]
[100.01979828 -26.93474007]
[90.14632416 -15.11016273]
[93.68598938 -0.53378779]
[97.22566223 14.04258728]
[100.76533508 28.61896324]
[106.06108093 14.58489227]
[117.21064758 4.55059958]
[131.72320557 0.75777119]
[146.35661316 4.05373478]
[157.84173584 13.70216370]
[163.61274719 27.54757309]
[162.38040161 42.49686432]
[154.42001343 55.21033096]
[141.50994873 62.84774399]
[126.53433990 63.70289230]
[112.83879089 57.58473206]
[103.48290253 45.86005402]
[104.59854889 60.81850815]
[113.26103210 72.93505096]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[113.26154327 134.89544678]
[110.52174377 141.75950623]
[111.41455841 156.73291016]
[112.30737305 171.70631409]
[113.20018768 186.67971802]
[126.10846710 195.08702087]
[131.52778625 209.31671143]
[127.57575226 223.83723450]
[115.97016907 233.13499451]
[116.86298370 248.10841370]
[117.75579834 263.08181763]
[118.64861298 278.05520630]
[119.98684692 292.99539185]
[121.76931763 307.88912964]
[131.09169006 320.67208862]
[124.92160034 334.22860718]
[126.70406342 349.12231445]
[128.48652649 364.01605225]
[130.26899719 378.90975952]
[139.59136963 391.69271851]
[133.42127991 405.24923706]
[142.74365234 418.03219604]
[136.57356262 431.58871460]
[138.35603333 446.48245239]
[153.37243652 446.40835571]
[168.29939270 448.04653931]
[182.94230652 451.37561035]
[197.11029053 456.35217285]
[210.61860657 462.91137695]
[223.29116821 470.96765137]
[234.96275330 480.41604614]
[245.48120117 491.13330078]
[254.70939636 502.97976685]
[262.52700806 515.80096436]
[268.83212280 529.42968750]
[273.54254150 543.68835449]
[276.59686279 558.39105225]
[277.95526123 573.34606934]
[277.60000610 588.35845947]
[275.53579712 603.23248291]
[271.78945923 617.77423096]
[266.40988159 631.79418945]
[259.46719360 645.10943604]
[251.05189514 657.54650879]
[241.27371216 668.94323730]
[230.26011658 679.15100098]
[218.15469360 688.03674316]
[205.11526489 695.48461914]
[191.31181335 701.39752197]
[176.92430115 705.69836426]
[162.14031982 708.33111572]
[147.15257263 709.26147461]
[132.15649414 708.47717285]
[117.34754944 705.98858643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 180]
[24 179]
[26 177]
[28 175]
[29 174]
[30 173]
[31 172]
[33 170]
[34 169]
[39 168]
[40 167]
[41 166]
[42 165]
[46 161]
[47 160]
[48 159]
[49 158]
[50 156]
[51 155]
[53 153]
[55 151]
[56 150]
[57 138]
[58 137]
[59 136]
[60 135]
[64 131]
[65 130]
[66 129]
[67 128]
[70 124]
[71 123]
[72 122]
[73 121]
[76 119]
[77 118]
[78 117]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
