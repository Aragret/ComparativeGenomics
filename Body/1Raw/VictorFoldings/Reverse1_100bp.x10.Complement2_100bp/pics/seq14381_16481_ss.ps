%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[190.99203491 560.15020752]
[201.81829834 549.65057373]
[214.91600037 542.17382812]
[210.94389343 527.70935059]
[206.97180176 513.24481201]
[202.99971008 498.78027344]
[199.02761841 484.31576538]
[195.05551147 469.85122681]
[179.51609802 470.06665039]
[164.43807983 466.25613403]
[150.84732056 458.67300415]
[139.66995239 447.82745361]
[131.66938782 434.45217896]
[127.39414978 419.45297241]
[127.14022064 403.84729004]
[130.93061829 388.69534302]
[138.51339722 375.02789307]
[149.37841797 363.77636719]
[162.79164124 355.70916748]
[158.60462952 341.30538940]
[153.71900940 335.75988770]
[154.46423340 326.65591431]
[150.49212646 312.19140625]
[146.52003479 297.72686768]
[133.48826599 290.60586548]
[129.25393677 275.99337769]
[136.81144714 262.37274170]
[132.83935547 247.90821838]
[128.86726379 233.44369507]
[124.89516449 218.97917175]
[120.92306519 204.51464844]
[116.95097351 190.05012512]
[112.97887421 175.58560181]
[102.14752197 165.36155701]
[105.95423889 150.00514221]
[101.98213959 135.54061890]
[98.01004791 121.07609558]
[83.48383331 113.24303436]
[78.99523163 97.36158752]
[87.27215576 83.08362579]
[83.08514404 68.67984009]
[78.89813995 54.27606201]
[74.39051056 39.96937561]
[69.56450653 25.76692009]
[64.73851013 11.56446362]
[59.91251373 -2.63799191]
[55.08651733 -16.84044838]
[49.83979797 -30.89291954]
[44.17701340 -44.78294754]
[28.25960922 -44.09296799]
[13.09379292 -48.88706207]
[0.50767219 -58.56807327]
[-7.98820925 -71.95093536]
[-11.38215733 -87.40770721]
[-9.28177166 -103.06562805]
[-1.95921695 -117.03398895]
[9.68388176 -127.63245392]
[3.81492066 -141.43663025]
[-2.05404019 -155.24081421]
[-8.29165649 -161.91387939]
[-7.90592384 -169.29446411]
[-13.56871033 -183.18449402]
[-27.97268677 -178.95170593]
[-42.73098755 -176.19787598]
[-57.69216919 -174.95127869]
[-72.70270538 -175.22470093]
[-87.60856628 -177.01531982]
[-102.25679016 -180.30477905]
[-116.49707031 -185.05931091]
[-130.18325806 -191.23014832]
[-143.17492676 -198.75393677]
[-155.33876038 -207.55349731]
[-166.54994202 -217.53851318]
[-176.69340515 -228.60652161]
[-185.66508484 -240.64396667]
[-193.37290955 -253.52731323]
[-199.73777771 -267.12435913]
[-204.69438171 -281.29556274]
[-208.19184875 -295.89550781]
[-210.19430542 -310.77438354]
[-210.68119812 -325.77954102]
[-209.64752197 -340.75692749]
[-207.10389709 -355.55291748]
[-203.07641602 -370.01562500]
[-197.60639954 -383.99667358]
[-190.75000000 -397.35260010]
[-182.57756042 -409.94635010]
[-173.17294312 -421.64865112]
[-162.63265991 -432.33947754]
[-151.06486511 -441.90908813]
[-138.58827209 -450.25927734]
[-125.33091736 -457.30438232]
[-111.42882538 -462.97207642]
[-97.02466583 -467.20422363]
[-82.26624298 -469.95739746]
[-67.30500031 -471.20333862]
[-52.29447556 -470.92926025]
[-37.38869476 -469.13800049]
[-22.74061584 -465.84790039]
[-8.50055122 -461.09271240]
[5.18537092 -454.92129517]
[18.17671204 -447.39694214]
[30.34015656 -438.59683228]
[41.55089188 -428.61132812]
[51.69387436 -417.54287720]
[60.66502380 -405.50503540]
[68.37227631 -392.62133789]
[74.73654938 -379.02401733]
[79.69252777 -364.85260010]
[83.18935394 -350.25250244]
[85.19115448 -335.37353516]
[85.67738342 -320.36837769]
[84.64305115 -305.39102173]
[82.09877014 -290.59515381]
[78.07064819 -276.13259888]
[72.60002136 -262.15179443]
[65.74303436 -248.79615784]
[57.57003784 -236.20278931]
[48.16490555 -224.50088501]
[37.62415314 -213.81053162]
[26.05594635 -204.24143982]
[13.57898808 -195.89179993]
[0.32131663 -188.84727478]
[5.98410320 -174.95726013]
[11.75013638 -161.10977173]
[17.61909676 -147.30558777]
[23.48805809 -133.50141907]
[37.59575653 -134.67881775]
[51.39831161 -131.43679810]
[63.54322815 -124.07941437]
[72.83624268 -113.31468201]
[78.35874939 -100.18639374]
[79.55860901 -85.97294617]
[76.30531311 -72.06287384]
[68.90402985 -59.81916428]
[58.06703949 -50.44573212]
[63.72982788 -36.55570602]
[66.25835419 -35.34545898]
[68.45983887 -33.06071091]
[69.92261505 -29.82100677]
[70.28586578 -25.89257622]
[69.28897095 -21.66644478]
[74.11496735 -7.46398973]
[78.94097137 6.73846626]
[83.76696777 20.94092178]
[88.59296417 35.14337921]
[91.57713318 37.02143097]
[93.79990387 40.43820190]
[94.54798889 45.02008820]
[93.30191803 50.08905029]
[97.48892975 64.49283600]
[101.67594147 78.89661407]
[113.43123627 83.63652039]
[120.37180328 94.24227905]
[120.00963593 106.91202545]
[112.47457123 117.10399628]
[116.44667053 131.56852722]
[120.41876221 146.03305054]
[131.53422546 157.29168701]
[127.44339752 171.61349487]
[131.41549683 186.07803345]
[135.38758850 200.54255676]
[139.35969543 215.00708008]
[143.33178711 229.47160339]
[147.30387878 243.93612671]
[151.27597046 258.40063477]
[164.72973633 266.25137329]
[168.55195618 280.97705078]
[160.98455811 293.75479126]
[164.95664978 308.21929932]
[168.92875671 322.68383789]
[173.00842285 337.11837769]
[177.19543457 351.52215576]
[191.68988037 351.02935791]
[205.87052917 354.02383423]
[218.91123962 360.32653809]
[230.05335999 369.56573486]
[238.64993286 381.19909668]
[244.20321655 394.54537964]
[246.39349365 408.82446289]
[245.09751892 423.20278931]
[240.39538574 436.84216309]
[232.56562805 448.94857788]
[222.06874084 458.81832886]
[209.52003479 465.87915039]
[213.49214172 480.34365845]
[217.46423340 494.80819702]
[221.43632507 509.27270508]
[225.40841675 523.73724365]
[229.38052368 538.20178223]
[244.45973206 537.94079590]
[259.12991333 541.43890381]
[272.46887207 548.47613525]
[283.63812256 558.61016846]
[291.93554688 571.20397949]
[296.83956909 585.46588135]
[298.04193115 600.49932861]
[295.46701050 615.35937500]
[289.27670288 629.11187744]
[279.86010742 640.89227295]
[267.80920410 649.96020508]
[253.88150024 655.74548340]
[238.95248413 657.88452148]
[223.96063232 656.24285889]
[209.84832764 650.92364502]
[197.50270081 642.26129150]
[187.69978333 630.80035400]
[181.05581665 617.26116943]
[177.98843384 602.49493408]
[178.69046021 587.42980957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[19 173]
[20 172]
[22 171]
[23 170]
[24 169]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[35 158]
[36 157]
[37 156]
[40 152]
[41 151]
[42 150]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 137]
[49 136]
[57 127]
[58 126]
[59 125]
[61 124]
[62 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
