%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[31.16891479 743.30212402]
[16.52482033 746.57318115]
[1.70422900 748.91833496]
[-13.23436832 750.32818604]
[-28.23201561 750.79730225]
[-43.22952271 750.32379150]
[-58.16770172 748.90942383]
[-72.98760223 746.55993652]
[-87.63072205 743.28454590]
[-102.03929138 739.09613037]
[-116.15643311 734.01129150]
[-129.92643738 728.05004883]
[-143.29495239 721.23590088]
[-156.20922852 713.59582520]
[-168.61828613 705.15991211]
[-180.47317505 695.96148682]
[-191.72708130 686.03680420]
[-202.33560181 675.42510986]
[-212.25688171 664.16821289]
[-221.45175171 652.31054688]
[-229.88392639 639.89892578]
[-237.52012634 626.98236084]
[-244.33021545 613.61175537]
[-250.28732300 599.83996582]
[-255.36793518 585.72131348]
[-259.55200195 571.31146240]
[-262.82299805 556.66735840]
[-265.16802979 541.84680176]
[-266.57785034 526.90814209]
[-267.04687500 511.91052246]
[-266.57324219 496.91302490]
[-265.15887451 481.97485352]
[-262.80929565 467.15496826]
[-259.53381348 452.51184082]
[-255.34532166 438.10330200]
[-250.26039124 423.98620605]
[-244.29907227 410.21621704]
[-237.48487854 396.84774780]
[-229.84472656 383.93350220]
[-221.40875244 371.52447510]
[-212.21025085 359.66964722]
[-202.28552246 348.41580200]
[-191.67373657 337.80731201]
[-180.41679382 327.88610840]
[-168.55909729 318.69128418]
[-156.14744568 310.25918579]
[-143.23083496 302.62304688]
[-129.86022949 295.81301880]
[-116.08840179 289.85598755]
[-101.96970367 284.77545166]
[-87.55985260 280.59146118]
[-72.91572571 277.32055664]
[-58.09511185 274.97558594]
[-43.15649796 273.56585693]
[-28.15884781 273.09692383]
[-13.16134453 273.57061768]
[1.77682066 274.98507690]
[16.59669304 277.33471680]
[31.23978424 280.61029053]
[35.42679596 266.20651245]
[39.61380768 251.80271912]
[43.80081940 237.39894104]
[47.98783112 222.99516296]
[52.17484283 208.59138489]
[50.70056152 204.04873657]
[52.06428909 198.53173828]
[56.70688629 193.82453918]
[61.32089615 179.55180359]
[65.93490601 165.27906799]
[51.59514618 169.68034363]
[39.12781525 161.33975220]
[37.72336578 146.40563965]
[48.41710663 135.88690186]
[63.32601166 137.53755188]
[71.45957184 150.13914490]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[102.80400085 71.77700043]
[107.41800690 57.50426865]
[112.03202057 43.23153687]
[116.64602661 28.95880318]
[121.26004028 14.68606949]
[123.26405334 -0.17945826]
[122.59426880 -15.16449738]
[121.92448425 -30.14953613]
[121.25469208 -45.13457489]
[120.58490753 -60.11961365]
[119.91512299 -75.10465240]
[105.10964203 -77.91432953]
[91.35144043 -84.06320190]
[79.38248444 -93.21967316]
[69.84825134 -104.88993835]
[63.26290894 -118.44464111]
[59.98159409 -133.15278625]
[60.18126297 -148.22119141]
[63.85114670 -162.83723450]
[70.79333496 -176.21269226]
[80.63344574 -187.62623596]
[92.84081268 -196.46234131]
[106.75711060 -202.24450684]
[121.63185120 -204.66090393]
[136.66284180 -203.58120728]
[151.03950500 -199.06364441]
[163.98651123 -191.35185242]
[174.80566406 -180.86172485]
[182.91346741 -168.15895081]
[187.87269592 -153.92860413]
[189.41590881 -138.93811035]
[187.45986938 -123.99586487]
[182.11007690 -109.90769196]
[173.65502930 -97.43336487]
[162.55070496 -87.24559021]
[149.39595032 -79.89379120]
[134.90016174 -75.77443695]
[135.56994629 -60.78939819]
[136.23973083 -45.80435944]
[136.90951538 -30.81932068]
[137.57929993 -15.83428192]
[138.24908447 -0.84924340]
[144.29785156 -14.57558727]
[153.41670227 -26.48551941]
[165.08993530 -35.90547562]
[178.65737915 -42.30271149]
[193.35171509 -45.31543350]
[208.34190369 -44.77325821]
[222.78019714 -40.70684433]
[235.85003662 -33.34616852]
[246.81224060 -23.10751724]
[255.04685974 -10.56993008]
[260.08816528 3.55752921]
[261.65109253 18.47588348]
[259.64718628 33.34143066]
[254.18984985 47.31344604]
[245.58766174 59.60174942]
[234.32713318 69.51137543]
[221.04512024 76.48188782]
[206.49276733 80.11907196]
[191.49308777 80.21722412]
[176.89439392 76.77079773]
[163.52229309 69.97469330]
[152.13305664 60.21327972]
[143.37078857 48.03860092]
[137.73106384 34.13920212]
[135.53277588 19.30007935]
[130.91876221 33.57281113]
[126.30474854 47.84554672]
[121.69074249 62.11827850]
[117.07673645 76.39101410]
[131.41648865 71.98973083]
[143.88381958 80.33033752]
[145.28826904 95.26444244]
[134.59452820 105.78318024]
[119.68563080 104.13253784]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.34960175 155.80194092]
[80.20764160 169.89308167]
[75.59362793 184.16581726]
[70.97962189 198.43853760]
[66.57862091 212.77839661]
[62.39161301 227.18217468]
[58.20460129 241.58595276]
[54.01758957 255.98973083]
[49.83057785 270.39352417]
[45.64356613 284.79730225]
[59.76076126 289.88201904]
[73.53082275 295.84313965]
[86.89941406 302.65710449]
[99.81376648 310.29705811]
[112.22292328 318.73284912]
[124.07789612 327.93115234]
[135.33190918 337.85571289]
[145.94055176 348.46731567]
[155.86193848 359.72412109]
[165.05693054 371.58166504]
[173.48924255 383.99319458]
[181.12557983 396.90966797]
[187.93580627 410.28018188]
[193.89305115 424.05191040]
[198.97381592 438.17053223]
[203.15802002 452.58032227]
[206.42918396 467.22439575]
[208.77436829 482.04495239]
[210.18434143 496.98355103]
[210.65351868 511.98120117]
[210.18005371 526.97869873]
[208.76582336 541.91687012]
[206.41641235 556.73681641]
[203.14106750 571.37994385]
[198.95274353 585.78851318]
[193.86795044 599.90570068]
[187.90676880 613.67572021]
[181.09272766 627.04431152]
[173.45269775 639.95861816]
[165.01686096 652.36773682]
[155.81848145 664.22265625]
[145.89387512 675.47662354]
[135.28221130 686.08520508]
[124.02536011 696.00653076]
[112.16775513 705.20147705]
[99.75619507 713.63366699]
[86.83966064 721.26995850]
[73.46913147 728.08013916]
[59.69736481 734.03729248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[64 166]
[67 165]
[68 164]
[69 163]
[75 162]
[76 161]
[77 160]
[78 159]
[80 157]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
