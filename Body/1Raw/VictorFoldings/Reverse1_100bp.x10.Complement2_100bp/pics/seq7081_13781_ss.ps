%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[-30.20634651 476.99267578]
[-22.58360481 489.94161987]
[-16.88135529 503.84359741]
[-13.21568775 518.41558838]
[-11.66122818 533.36096191]
[-12.24962521 548.37548828]
[-14.96889973 563.15338135]
[-19.76368904 577.39379883]
[-26.53638077 590.80694580]
[-35.14908981 603.11962891]
[-45.42646790 614.08117676]
[-57.15929031 623.46850586]
[-70.10868073 631.09045410]
[-84.01101685 636.79180908]
[-98.58325958 640.45660400]
[-113.52873993 642.01013184]
[-128.54318237 641.42077637]
[-143.32090759 638.70062256]
[-157.56108093 633.90496826]
[-170.97377014 627.13140869]
[-183.28590393 618.51794434]
[-194.24685669 608.23986816]
[-203.63343811 596.50646973]
[-211.25457764 583.55664062]
[-216.95510864 569.65393066]
[-220.61897278 555.08148193]
[-222.17158508 540.13592529]
[-221.58132935 525.12152100]
[-218.86021423 510.34393311]
[-214.06367493 496.10406494]
[-207.28932190 482.69180298]
[-198.67507935 470.38018799]
[-188.39634705 459.41986084]
[-176.66236877 450.03402710]
[-163.71202087 442.41366577]
[-149.80899048 436.71401978]
[-135.23629761 433.05105591]
[-120.29061890 431.49935913]
[-105.27625275 432.09054565]
[-90.49885559 434.81256104]
[-76.25928497 439.60998535]
[-62.84743881 446.38519287]
[-54.24887466 434.09432983]
[-45.65031052 421.80349731]
[-37.05174637 409.51266479]
[-28.45318413 397.22183228]
[-19.85461998 384.93099976]
[-12.58138943 371.81228638]
[-6.71242905 358.00811768]
[-0.84346825 344.20394897]
[5.02549267 330.39974976]
[10.58471870 316.46795654]
[15.83143616 302.41549683]
[21.07815552 288.36303711]
[26.32487297 274.31054688]
[25.71956444 266.94473267]
[31.75573158 260.08889771]
[37.21109009 246.11608887]
[33.63381195 228.93557739]
[48.10544968 217.54904175]
[53.35216522 203.49656677]
[58.59888458 189.44409180]
[63.84560394 175.39163208]
[69.09232330 161.33915710]
[74.33904266 147.28668213]
[79.58575439 133.23420715]
[84.83247375 119.18173981]
[90.07919312 105.12927246]
[95.22115326 91.03813171]
[100.25807190 76.90910339]
[105.29498291 62.78007126]
[108.07059479 48.03910828]
[108.51720428 33.04575729]
[108.96380615 18.05240822]
[108.85214233 3.05282354]
[108.18235779 -11.93221474]
[107.51257324 -26.91725349]
[99.16677856 -40.35817337]
[106.32805634 -53.41823959]
[105.65827179 -68.40327454]
[103.98673248 -83.30985260]
[93.92003632 -95.51527405]
[99.27228546 -109.41500854]
[96.60649109 -124.17622375]
[93.94069672 -138.93743896]
[91.27489471 -153.69866943]
[88.60910034 -168.45988464]
[73.56321716 -169.40045166]
[59.17983627 -173.91508484]
[46.29520035 -181.74130249]
[35.65840530 -192.42408752]
[27.88785362 -205.34237671]
[23.43531990 -219.74508667]
[22.55966759 -234.79489136]
[25.31180573 -249.61680603]
[31.53172874 -263.34912109]
[40.85781860 -275.19342041]
[52.74786758 -284.46112061]
[66.51060486 -290.61337280]
[81.34588623 -293.29254150]
[96.39119720 -292.34286499]
[110.77183533 -287.81948853]
[123.65172577 -279.98547363]
[134.28204346 -269.29623413]
[142.04475403 -256.37326050]
[146.48855591 -241.96783447]
[147.35508728 -226.91749573]
[144.59396362 -212.09725952]
[138.36572266 -198.36872864]
[129.03245544 -186.53009033]
[117.13678741 -177.26960754]
[103.37032318 -171.12567139]
[106.03611755 -156.36445618]
[108.70191193 -141.60324097]
[111.36770630 -126.84202576]
[114.03350067 -112.08080292]
[123.90952301 -100.93120575]
[118.74794769 -85.97564697]
[125.82672119 -99.20028687]
[138.87940979 -106.59130859]
[153.86149597 -105.85854340]
[166.13063049 -97.22902679]
[171.88507080 -83.37672424]
[169.34175110 -68.59391022]
[159.28874207 -57.46120834]
[144.84107971 -53.42820358]
[130.47554016 -57.74456787]
[120.64331055 -69.07306671]
[121.31309509 -54.08802414]
[129.61097717 -41.71893692]
[122.49761200 -27.58703995]
[123.16739655 -12.60200024]
[123.83718109 2.38303852]
[135.73162842 -6.75599861]
[150.32881165 -3.30309653]
[156.86820984 10.19639397]
[150.52923584 23.79115105]
[135.98474121 27.45962524]
[123.95716095 18.49901390]
[123.51055145 33.49236298]
[123.06394958 48.48571396]
[130.22850037 35.30735016]
[140.64314270 24.51221085]
[153.55606079 16.87960625]
[168.03503418 12.96053982]
[183.03483582 13.03793430]
[197.47261047 17.10620117]
[210.30607605 24.87165070]
[220.60877991 35.77368546]
[227.63694763 49.02528000]
[230.88322449 63.66978836]
[230.11326599 78.65001678]
[225.38262939 92.88452148]
[217.03285217 105.34570312]
[205.66668701 115.13398743]
[192.10469055 121.54273224]
[177.32589722 124.10930634]
[162.39720154 122.64840698]
[148.39633179 117.26551056]
[136.33401489 108.34920502]
[127.08103943 96.54317474]
[121.30538940 82.69969940]
[119.42401886 67.81698608]
[114.38710022 81.94601440]
[109.35018158 96.07504272]
[109.82495880 104.12160492]
[104.13166809 110.37599182]
[98.88494873 124.42845917]
[93.63822937 138.48092651]
[88.39151001 152.53340149]
[83.14479065 166.58587646]
[77.89807129 180.63835144]
[72.65135956 194.69081116]
[67.40464020 208.74328613]
[62.15792084 222.79576111]
[66.79221344 234.83262634]
[62.13291550 246.42893982]
[51.18388748 251.57144165]
[45.72853088 265.54425049]
[40.37734604 279.55728149]
[35.13062668 293.60974121]
[29.88390732 307.66220093]
[24.63718987 321.71469116]
[25.50279808 326.86227417]
[24.41600037 331.37582397]
[21.94525337 334.61782837]
[18.82966995 336.26873779]
[12.96070862 350.07290649]
[7.09174776 363.87707520]
[1.22278702 377.68124390]
[13.29012012 368.77172852]
[27.82970238 365.08386230]
[42.68467712 367.16467285]
[55.65139008 374.70550537]
[64.80631256 386.58773804]
[68.79136658 401.04870605]
[67.01538849 415.94317627]
[59.74183655 429.06170654]
[48.04969788 438.45819092]
[33.67343521 442.73873901]
[18.74567795 441.26834106]
[5.48087168 434.26513672]
[-4.15322924 422.76800537]
[-8.72746277 408.48245239]
[-7.56378126 393.52954102]
[-16.16234589 405.82040405]
[-24.76091003 418.11123657]
[-33.35947418 430.40206909]
[-41.95803833 442.69290161]
[-50.55660248 454.98373413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[44 208]
[45 207]
[46 206]
[47 205]
[48 190]
[49 189]
[50 188]
[51 187]
[52 183]
[53 182]
[54 181]
[55 180]
[57 179]
[58 178]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[69 165]
[70 164]
[71 163]
[72 141]
[73 140]
[74 139]
[75 133]
[76 132]
[77 131]
[79 129]
[80 128]
[81 118]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
