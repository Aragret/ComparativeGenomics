%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[6.82833195 312.40554810]
[6.81765509 327.41546631]
[5.48043060 342.36569214]
[2.82712293 357.13922119]
[-1.12150085 371.62045288]
[-6.33453703 385.69604492]
[-12.77118587 399.25579834]
[-20.38107109 412.19363403]
[-29.10463333 424.40823364]
[-38.87360001 435.80407715]
[-49.61150742 446.29193115]
[-61.23432541 455.78970337]
[-73.65107727 464.22308350]
[-86.76459503 471.52603149]
[-100.47223663 477.64144897]
[-114.66672516 482.52142334]
[-129.23695374 486.12780762]
[-144.06890869 488.43231201]
[-159.04649353 489.41696167]
[-174.05249023 489.07400513]
[-188.96946716 487.40615845]
[-203.68064880 484.42645264]
[-218.07092285 480.15823364]
[-232.02764893 474.63488770]
[-245.44160461 467.89962769]
[-258.20779419 460.00521851]
[-270.22631836 451.01339722]
[-281.40310669 440.99456787]
[-291.65066528 430.02709961]
[-300.88882446 418.19689941]
[-309.04525757 405.59649658]
[-316.05615234 392.32452393]
[-321.86660767 378.48486328]
[-326.43118286 364.18582153]
[-329.71411133 349.53933716]
[-331.68972778 334.66000366]
[-332.34255981 319.66427612]
[-331.66751099 304.66955566]
[-329.66986084 289.79315186]
[-326.36523438 275.15155029]
[-321.77951050 260.85928345]
[-315.94854736 247.02824402]
[-308.91799927 233.76667786]
[-300.74291992 221.17837524]
[-291.48724365 209.36184692]
[-281.22344971 198.40959167]
[-270.03182983 188.40731812]
[-258.00000000 179.43330383]
[-245.22213745 171.55780029]
[-231.79823303 164.84243774]
[-217.83332825 159.33976746]
[-203.43675232 155.09284973]
[-188.72117615 152.13494873]
[-173.80175781 150.48919678]
[-158.79525757 150.16847229]
[-143.81915283 151.17529297]
[-128.99063110 153.50178528]
[-114.42575073 157.12971497]
[-100.23851013 162.03071594]
[-86.53993988 168.16641235]
[-73.43725586 175.48880005]
[-61.03300476 183.94055176]
[-49.42426682 193.45553589]
[-38.70190430 203.95927429]
[-27.29944038 194.21331787]
[-15.89697838 184.46734619]
[-4.49451542 174.72137451]
[6.90794706 164.97541809]
[18.31040955 155.22944641]
[29.71287155 145.48348999]
[41.11533356 135.73751831]
[41.46843338 132.95660400]
[42.94436264 130.14801025]
[45.55918503 127.74008179]
[49.17374420 126.15910339]
[53.49888229 125.77548981]
[65.46121979 116.72549438]
[77.42355347 107.67549133]
[89.38589478 98.62549591]
[100.11027527 88.13799286]
[109.42515564 76.38073730]
[118.74003601 64.62348938]
[121.24520874 49.00188065]
[135.21337891 43.83083344]
[144.52825928 32.07358170]
[153.84313965 20.31633186]
[163.15802002 8.55908012]
[148.17196655 9.20567799]
[137.02526855 -0.83180469]
[136.10325623 -15.80344105]
[145.93411255 -27.13279915]
[160.88626099 -28.32990646]
[172.39443970 -18.70900726]
[173.86651611 -3.78229904]
[184.19319153 -14.66163349]
[194.51985168 -25.54096794]
[204.84652710 -36.42030334]
[215.17318726 -47.29963684]
[205.30094910 -58.60774994]
[196.53102112 -70.79063416]
[188.94046021 -83.74122620]
[182.59596252 -97.34571075]
[177.55331421 -111.48452759]
[173.85682678 -126.03342438]
[171.53897095 -140.86453247]
[170.62011719 -155.84753418]
[171.10835266 -170.85073853]
[172.99937439 -185.74229431]
[176.27658081 -200.39134216]
[180.91114807 -214.66912842]
[186.86236572 -228.45018005]
[194.07792664 -241.61338806]
[202.49441528 -254.04309082]
[212.03785706 -265.63000488]
[222.62440491 -276.27236938]
[234.16101074 -285.87658691]
[246.54629517 -294.35830688]
[259.67138672 -301.64294434]
[273.42098999 -307.66653442]
[287.67419434 -312.37609863]
[302.30581665 -315.73025513]
[317.18722534 -317.69952393]
[332.18765259 -318.26660156]
[347.17529297 -317.42654419]
[362.01837158 -315.18667603]
[376.58648682 -311.56671143]
[390.75161743 -306.59844971]
[404.38928223 -300.32556152]
[417.37957764 -292.80319214]
[429.60839844 -284.09741211]
[440.96826172 -274.28472900]
[451.35931396 -263.45144653]
[460.69024658 -251.69268799]
[468.87905884 -239.11183167]
[475.85379028 -225.81944275]
[481.55313110 -211.93234253]
[485.92700195 -197.57254028]
[488.93698120 -182.86627197]
[490.55661011 -167.94274902]
[490.77160645 -152.93315125]
[489.58016968 -137.96936035]
[486.99267578 -123.18289948]
[483.03195190 -108.70370483]
[477.73272705 -94.65903473]
[471.14163208 -81.17230225]
[463.31655884 -68.36204529]
[454.32629395 -56.34083557]
[444.24984741 -45.21431732]
[433.17572021 -35.08027649]
[421.20132446 -26.02777481]
[408.43182373 -18.13636398]
[394.97946167 -11.47539806]
[380.96246338 -6.10341406]
[366.50399780 -2.06762195]
[351.73117065 0.59651047]
[336.77377319 1.86557007]
[321.76324463 1.72840405]
[306.83151245 0.18621792]
[292.10983276 -2.74743509]
[277.72753906 -7.04677391]
[263.81106567 -12.67401409]
[250.48266602 -19.57970238]
[237.85951233 -27.70315170]
[226.05252075 -36.97296906]
[215.72586060 -26.09363365]
[205.39918518 -15.21429920]
[195.07252502 -4.33496475]
[184.74584961 6.54436922]
[174.91526794 17.87396240]
[165.60038757 29.63121414]
[156.28550720 41.38846588]
[146.97062683 53.14571762]
[145.13171387 67.92636871]
[130.49728394 73.93836975]
[121.18240356 85.69562531]
[111.86752319 97.45287323]
[125.64685059 91.52581024]
[140.59898376 90.32836914]
[155.14596558 93.98691559]
[167.75265503 102.11535645]
[177.08860779 113.85588837]
[182.16859436 127.96949005]
[182.45649719 142.96672058]
[177.92195129 157.26490784]
[169.04348755 169.35510254]
[156.75807190 177.96141052]
[142.36221313 182.17558289]
[127.37513733 181.55288696]
[113.37847900 176.15905762]
[101.84932709 166.56329346]
[94.00438690 153.77825928]
[90.67154694 139.15321350]
[92.20253754 124.23154449]
[98.43589020 110.58782959]
[86.47355652 119.63783264]
[74.51121521 128.68783569]
[62.54888153 137.73782349]
[50.86130142 147.13998413]
[39.45883942 156.88594055]
[28.05637550 166.63191223]
[16.65391350 176.37788391]
[5.25145006 186.12384033]
[-6.15101242 195.86981201]
[-17.55347443 205.61576843]
[-28.95593834 215.36174011]
[-20.24975967 227.58876038]
[-12.65828896 240.53739929]
[-6.24093676 254.10630798]
[-1.04792964 268.18930054]
[2.88008904 282.67611694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 205]
[65 204]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[76 197]
[77 196]
[78 195]
[79 194]
[80 176]
[81 175]
[82 174]
[84 172]
[85 171]
[86 170]
[87 169]
[94 168]
[95 167]
[96 166]
[97 165]
[98 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
