%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[94.70742035 675.73706055]
[86.81071472 662.93542480]
[81.32693481 648.92944336]
[78.43235779 634.16931152]
[78.22002411 619.12951660]
[80.69677734 604.29357910]
[85.78298187 590.13836670]
[93.31514740 577.11889648]
[103.05113983 565.65374756]
[114.67799377 556.11138916]
[127.82195282 548.79864502]
[142.06048584 543.95056152]
[132.52081299 532.51190186]
[138.12538147 517.71661377]
[135.90026855 502.88259888]
[133.67514038 488.04855347]
[131.45002747 473.21450806]
[119.79428101 460.09542847]
[126.67621613 443.01559448]
[124.23049164 428.21633911]
[110.90109253 414.20867920]
[118.28813934 395.45251465]
[115.40287018 380.73260498]
[112.51759338 366.01272583]
[109.52281952 351.31472778]
[106.41870880 336.63943481]
[103.31459808 321.96411133]
[100.21048737 307.28881836]
[97.10637665 292.61352539]
[94.00226593 277.93820190]
[89.76873016 292.32839966]
[81.14591217 304.60220337]
[69.04377747 313.46441650]
[54.73951721 317.97973633]
[39.74268341 317.67163086]
[25.63592529 312.57269287]
[13.90796757 303.22094727]
[5.79648685 290.60333252]
[2.15750885 276.05145264]
[3.37506270 261.10095215]
[9.32065678 247.32958984]
[19.36683846 236.19073486]
[32.45341110 228.85986328]
[47.19931793 226.11064148]
[62.04838562 228.23316956]
[75.43355560 235.00349426]
[85.94226837 245.70709229]
[92.46556091 259.21456909]
[93.13534546 244.22953796]
[93.80513000 229.24450684]
[94.02845764 214.24617004]
[93.80513000 199.24783325]
[93.58180237 184.24949646]
[93.35847473 169.25115967]
[93.13514709 154.25282288]
[92.91181946 139.25448608]
[92.68849182 124.25614166]
[92.46516418 109.25780487]
[85.23708344 122.40142822]
[73.79606628 132.10211182]
[59.64738846 137.08355713]
[44.65254211 136.69038391]
[30.78435898 130.97430420]
[19.86743927 120.68738556]
[13.33808804 107.18302917]
[12.05535603 92.23797607]
[16.18800735 77.81850433]
[25.19232178 65.82174683]
[37.88362885 57.82607269]
[52.59216309 54.88345718]
[67.38276672 57.38105392]
[80.30948639 64.99025726]
[89.67158508 76.70994568]
[94.23761749 91.00055695]
[97.34172821 76.32525635]
[100.44583893 61.64995193]
[103.54994202 46.97465134]
[95.19511414 33.82799530]
[98.55218506 18.98936844]
[111.13700104 11.10533619]
[106.42300415 -3.99727273]
[116.62660980 -14.84788132]
[119.73071289 -29.52318382]
[122.83482361 -44.19848633]
[118.12082672 -59.30109406]
[128.32443237 -70.15170288]
[131.42854309 -84.82700348]
[134.53265381 -99.50231171]
[136.64727783 -114.35250854]
[137.76292419 -129.31095886]
[138.87857056 -144.26940918]
[139.99421692 -159.22785950]
[141.10987854 -174.18632507]
[142.22552490 -189.14477539]
[142.89530945 -204.12980652]
[135.36433411 -218.04365540]
[143.29026794 -230.65431213]
[143.51359558 -245.65264893]
[129.43296814 -251.31838989]
[118.35256195 -261.69091797]
[111.77089691 -275.36737061]
[110.57808685 -290.49819946]
[114.93545532 -305.03704834]
[124.25370026 -317.01763916]
[137.27259827 -324.81973267]
[152.23147583 -327.38812256]
[167.10723877 -324.37548828]
[179.88807678 -316.18923950]
[188.84548950 -303.93649292]
[192.76805115 -289.27438354]
[191.12525940 -274.18579102]
[184.13931274 -260.71133423]
[172.75498962 -250.67332458]
[158.51193237 -245.42932129]
[158.28860474 -230.43098450]
[165.83555603 -217.58993530]
[157.89364624 -203.90647888]
[159.74707031 -201.80340576]
[160.87910461 -198.83943176]
[160.95768738 -195.28567505]
[159.75492859 -191.52828979]
[157.18397522 -188.02912903]
[156.06832886 -173.07067871]
[154.95268250 -158.11221313]
[153.83703613 -143.15376282]
[152.72137451 -128.19531250]
[151.60572815 -113.23685455]
[161.77066040 -124.26745605]
[176.25833130 -128.15432739]
[190.57954407 -123.69309235]
[200.29673767 -112.26609802]
[202.39894104 -97.41413879]
[196.23474121 -83.73924255]
[183.71420288 -75.47873688]
[168.71693420 -75.19222260]
[155.89001465 -82.96847534]
[149.20796204 -96.39820099]
[146.10385132 -81.72289276]
[142.99974060 -67.04759216]
[147.93576050 -52.99465942]
[137.51013184 -41.09437561]
[134.40602112 -26.41907310]
[131.30191040 -11.74377155]
[136.23793030 2.30916166]
[125.81230164 14.20944595]
[134.12681580 26.51409340]
[131.18786621 41.44115448]
[118.22525024 50.07876205]
[115.12113953 64.75406647]
[112.01702881 79.42936707]
[108.91291809 94.10466766]
[107.46350098 109.03447723]
[107.68682861 124.03281403]
[107.91015625 139.03115845]
[108.13348389 154.02949524]
[108.35681152 169.02783203]
[108.58013916 184.02616882]
[108.80346680 199.02450562]
[109.02679443 214.02284241]
[111.38491058 217.66882324]
[112.36190033 221.49113464]
[112.07192993 225.03392029]
[110.76548004 227.92524719]
[108.79016876 229.91429138]
[108.12038422 244.89932251]
[107.45059967 259.88436890]
[108.67757416 274.83410645]
[111.78168488 289.50939941]
[114.88579559 304.18469238]
[117.98989868 318.86001587]
[121.09400940 333.53530884]
[124.19812012 348.21060181]
[129.03567505 355.95889282]
[127.23748779 363.12744141]
[130.12275696 377.84735107]
[133.00802612 392.56723022]
[142.37062073 398.10351562]
[147.04447937 407.68139648]
[145.70344543 418.03271484]
[139.02975464 425.77059937]
[141.47549438 440.56988525]
[151.48719788 448.70181274]
[153.21957397 461.07852173]
[146.28407288 470.98937988]
[148.50918579 485.82342529]
[150.73429871 500.65747070]
[152.95942688 515.49151611]
[162.65824890 527.99127197]
[156.89453125 541.72546387]
[171.92884827 542.18261719]
[186.63990784 545.31707764]
[200.55477905 551.02813721]
[213.22616577 559.13214111]
[224.24674988 569.36871338]
[233.26225281 581.40863037]
[239.98286438 594.86499023]
[244.19253540 609.30517578]
[245.75596619 624.26495361]
[244.62289429 639.26348877]
[240.82972717 653.81860352]
[234.49839783 667.46246338]
[225.83244324 679.75640869]
[215.11044312 690.30523682]
[202.67706299 698.76989746]
[188.93197632 704.87829590]
[174.31703186 708.43402100]
[159.30204773 709.32281494]
[144.36967468 707.51605225]
[129.99995422 703.07189941]
[116.65480042 696.13311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[14 187]
[15 186]
[16 185]
[17 184]
[19 181]
[20 180]
[22 176]
[23 175]
[24 174]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[48 166]
[49 165]
[50 164]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[58 152]
[74 151]
[75 150]
[76 149]
[77 148]
[80 145]
[82 143]
[83 142]
[84 141]
[86 139]
[87 138]
[88 137]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 117]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
