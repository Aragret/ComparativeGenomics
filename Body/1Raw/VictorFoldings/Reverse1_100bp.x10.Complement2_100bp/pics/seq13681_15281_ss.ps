%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[35.38242722 659.77746582]
[23.68067551 669.22418213]
[10.51620483 676.49523926]
[-3.71092939 681.36962891]
[-18.56838226 683.69927979]
[-33.60464859 683.41333008]
[-48.36280060 680.52056885]
[-62.39434814 675.10882568]
[-75.27288818 667.34265137]
[-86.60706329 657.45788574]
[-96.05243683 645.75506592]
[-103.32196808 632.58978271]
[-108.19475555 618.36212158]
[-110.52271271 603.50439453]
[-110.23509979 588.46813965]
[-107.34065247 573.71032715]
[-101.92733765 559.67938232]
[-94.15965271 546.80175781]
[-84.27365112 535.46868896]
[-72.56975555 526.02465820]
[-59.40363312 518.75659180]
[-45.17539215 513.88543701]
[-30.31741333 511.55914307]
[-15.28120995 511.84848022]
[-12.39593792 497.12857056]
[-9.51066494 482.40869141]
[-6.62539244 467.68878174]
[-3.74011970 452.96890259]
[-17.45526695 459.04299927]
[-30.82538223 452.24301147]
[-33.99451447 437.58160400]
[-24.62649727 425.86663818]
[-9.62708473 425.73394775]
[-0.05369115 437.27975464]
[3.91840506 422.81524658]
[7.89050150 408.35070801]
[11.86259747 393.88616943]
[15.83469391 379.42166138]
[1.70576358 384.45886230]
[-11.12155914 376.68325806]
[-13.19144917 361.82678223]
[-2.97806120 350.84100342]
[11.98967552 351.82431030]
[20.67781639 364.05014038]
[25.71473312 349.92111206]
[30.75164986 335.79208374]
[29.67340279 333.20452881]
[29.55516052 330.03393555]
[30.62411880 326.64382935]
[32.97180557 323.47320557]
[36.53186035 320.98724365]
[42.40081787 307.18307495]
[48.26977921 293.37890625]
[53.41173935 279.28775024]
[57.81273651 264.94790649]
[62.21373749 250.60806274]
[66.40074921 236.20428467]
[70.37284088 221.73976135]
[74.34494019 207.27523804]
[78.31703949 192.81071472]
[82.28913116 178.34619141]
[86.26123047 163.88166809]
[88.81706238 149.10101318]
[89.93270874 134.14254761]
[91.04835510 119.18410492]
[81.69355774 110.63182831]
[78.90111542 98.26834106]
[83.67203522 86.52560425]
[94.29608917 79.61306763]
[95.63432312 64.67288208]
[96.97255707 49.73269653]
[98.31079102 34.79251099]
[99.64902496 19.85232735]
[100.98725891 4.91214180]
[94.51200104 -9.52328777]
[103.35391998 -21.50951958]
[91.17889404 -12.74774456]
[76.35277557 -15.02507973]
[67.36864471 -27.03696251]
[69.37300873 -41.90244293]
[81.21768951 -51.10589600]
[96.11750793 -49.37517166]
[105.53690338 -37.70261002]
[108.20269775 -52.46382523]
[110.86849213 -67.22504425]
[113.53428650 -81.98625946]
[116.20008087 -96.74747467]
[118.64581299 -111.54675293]
[120.87092590 -126.38079071]
[123.09604645 -141.21484375]
[124.76758575 -156.12141418]
[114.73125458 -168.03399658]
[116.07576752 -183.18811035]
[127.49445343 -192.68280029]
[128.61009216 -207.64125061]
[129.72575378 -222.59971619]
[130.50706482 -237.57934570]
[130.95367432 -252.57269287]
[131.40028381 -267.56604004]
[117.52156067 -273.76681519]
[107.07585907 -284.81018066]
[101.65606689 -299.01208496]
[102.08866882 -314.20687866]
[108.30769348 -328.07742310]
[119.36478424 -338.50857544]
[133.57380676 -343.90969849]
[148.76800537 -343.45709229]
[162.63037109 -337.21984863]
[173.04698181 -326.14904785]
[178.42938232 -311.93292236]
[177.95681763 -296.73931885]
[171.70130920 -282.88519287]
[160.61682129 -272.48315430]
[146.39363098 -267.11944580]
[145.94702148 -252.12608337]
[145.50042725 -237.13273621]
[147.63917542 -234.32951355]
[148.52641296 -230.35108948]
[147.62458801 -225.79696655]
[144.68420410 -221.48405457]
[143.56855774 -206.52560425]
[142.45291138 -191.56715393]
[152.33679199 -180.48364258]
[151.41845703 -165.29774475]
[139.72604370 -155.00576782]
[152.62222290 -162.66661072]
[166.70564270 -157.50358582]
[171.59455872 -143.32266235]
[163.68501282 -130.57749939]
[148.80764771 -128.66334534]
[137.93008423 -138.98971558]
[135.70497131 -124.15567780]
[133.47985840 -109.32163239]
[135.54782104 -105.01668549]
[134.93339539 -99.36695099]
[130.96130371 -94.08168030]
[128.29550171 -79.32046509]
[125.62970734 -64.55924988]
[122.96391296 -49.79803085]
[120.29811859 -35.03681564]
[118.29410553 -20.17128563]
[124.86508179 -6.80447769]
[115.92744446 6.25037622]
[114.58921051 21.19056129]
[113.25097656 36.13074493]
[111.91274261 51.07093048]
[110.57450867 66.01111603]
[109.23627472 80.95130157]
[120.10502625 93.37055969]
[118.75506592 109.81882477]
[106.00681305 120.29975128]
[104.89115906 135.25820923]
[103.77551270 150.21665955]
[112.55667114 138.05560303]
[125.48387146 130.44721985]
[140.37864685 128.67364502]
[154.73097229 133.03376770]
[166.12223816 142.79283142]
[172.63279724 156.30624390]
[173.16551208 171.29678345]
[167.63061523 185.23826599]
[156.96084595 195.78131104]
[142.95422363 201.14923096]
[127.97111511 200.43742371]
[114.53645325 193.76586914]
[104.91419983 182.25881958]
[100.72575378 167.85375977]
[96.75365448 182.31828308]
[92.78156281 196.78280640]
[88.80946350 211.24732971]
[84.83736420 225.71185303]
[80.86527252 240.17637634]
[82.16460419 246.65892029]
[80.27825165 252.01976013]
[76.55358124 255.00906372]
[72.15258789 269.34890747]
[67.75158691 283.68875122]
[80.96201324 276.58349609]
[95.67400360 279.50881958]
[105.16142273 291.12728882]
[105.08676147 306.12710571]
[95.48414612 317.65054321]
[80.74376678 320.42926025]
[67.60472870 313.19284058]
[62.07395554 299.24786377]
[56.20499802 313.05203247]
[50.33603668 326.85620117]
[44.88068008 340.82901001]
[39.84376144 354.95803833]
[34.80684662 369.08706665]
[30.29921722 383.39376831]
[26.32712173 397.85827637]
[22.35502434 412.32281494]
[18.38292885 426.78732300]
[14.41083241 441.25186157]
[10.97977161 455.85418701]
[8.09449863 470.57406616]
[5.20922661 485.29394531]
[2.32395387 500.01385498]
[-0.56131876 514.73376465]
[13.47145653 520.14227295]
[26.35176086 527.90557861]
[37.68817520 537.78771973]
[47.13619995 549.48840332]
[54.40872192 562.65203857]
[59.28473282 576.87866211]
[61.61606216 591.73583984]
[61.33185959 606.77215576]
[58.44076157 621.53063965]
[53.03062439 635.56274414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[44 190]
[45 189]
[46 188]
[51 187]
[52 186]
[53 185]
[54 177]
[55 176]
[56 175]
[57 172]
[58 171]
[59 170]
[60 169]
[61 168]
[62 167]
[63 153]
[64 152]
[65 151]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[76 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 133]
[89 132]
[90 131]
[91 125]
[94 122]
[95 121]
[96 120]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
