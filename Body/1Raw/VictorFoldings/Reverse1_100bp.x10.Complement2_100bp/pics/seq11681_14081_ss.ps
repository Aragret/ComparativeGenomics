%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[38.95965576 694.38287354]
[31.74655151 707.61419678]
[21.67607689 718.82501221]
[9.29131985 727.41070557]
[-4.73982811 732.90832520]
[-19.66068268 735.02136230]
[-34.66658401 733.63580322]
[-48.94827652 728.82647705]
[-61.73557281 720.85266113]
[-72.33886719 710.14434814]
[-80.18634033 697.27917480]
[-84.85478210 682.95080566]
[-86.09243011 667.93194580]
[-83.83255005 653.03265381]
[-78.19699860 639.05633545]
[-69.48970795 626.75671387]
[-58.18024063 616.79718018]
[-44.87850952 609.71478271]
[-30.30185509 605.89141846]
[-15.23638058 605.53338623]
[-12.13227081 590.85809326]
[-9.02816010 576.18273926]
[-5.92405033 561.50744629]
[-12.25734711 551.20135498]
[-9.79136562 538.94970703]
[0.68660861 531.42810059]
[4.00886822 516.80059814]
[7.33112764 502.17315674]
[10.65338707 487.54571533]
[13.97564697 472.91824341]
[9.24939632 458.79336548]
[19.85104942 447.04965210]
[23.17330933 432.42218018]
[26.49556923 417.79470825]
[29.81782913 403.16726685]
[33.14008713 388.53979492]
[28.41383743 374.41491699]
[39.01549149 362.67117310]
[42.33775330 348.04373169]
[37.61149979 333.91885376]
[48.21315384 322.17510986]
[51.53541565 307.54766846]
[54.85767365 292.92019653]
[58.17993546 278.29272461]
[61.50219345 263.66528320]
[64.82445526 249.03781128]
[68.14671326 234.41035461]
[58.58409119 220.57579041]
[62.05433655 203.77484131]
[76.88835144 194.50276184]
[79.99246216 179.82746887]
[83.09657288 165.15216064]
[85.65240479 150.37150574]
[87.65641785 135.50598145]
[89.66043091 120.64045715]
[91.66445160 105.77492523]
[89.53479004 98.00079346]
[93.81055450 90.70362854]
[96.03567505 75.86958313]
[98.26078796 61.03553772]
[86.25051880 70.02182770]
[71.26736450 69.31127167]
[60.16140747 59.22872162]
[58.01015472 44.38378525]
[65.79712677 31.56336975]
[79.96221924 26.62879372]
[94.02935028 31.83607864]
[101.56755066 44.80635071]
[105.32385254 30.28429031]
[109.08015442 15.76223087]
[107.68370819 10.73261547]
[108.29504395 6.13048887]
[110.41510010 2.64905262]
[113.34203339 0.68298084]
[117.74302673 -13.65686607]
[122.14402771 -27.99671364]
[118.79621124 -43.45965958]
[129.92716980 -53.35667801]
[134.32817078 -67.69652557]
[121.11774445 -60.59127426]
[106.40576172 -63.51659012]
[96.91833496 -75.13505554]
[96.99299622 -90.13487244]
[106.59561157 -101.65831757]
[121.33599091 -104.43703461]
[134.47503662 -97.20062256]
[140.00579834 -83.25563049]
[145.87477112 -97.05980682]
[144.15380859 -112.78713989]
[156.25399780 -121.47244263]
[162.12295532 -135.27662659]
[160.40199280 -151.00395203]
[172.50219727 -159.68925476]
[178.37115479 -173.49343872]
[175.71403503 -191.71488953]
[190.13642883 -201.71296692]
[195.79920959 -215.60298157]
[201.46200562 -229.49301147]
[207.12478638 -243.38304138]
[194.26344299 -251.16328430]
[182.77761841 -260.85980225]
[172.95016479 -272.23379517]
[165.02310181 -285.00518799]
[159.19161987 -298.85943604]
[155.59934998 -313.45538330]
[154.33473206 -328.43362427]
[155.42892456 -343.42526245]
[158.85496521 -358.06112671]
[164.52850342 -371.98080444]
[172.30981445 -384.84149170]
[182.00727844 -396.32653809]
[193.38208008 -406.15304565]
[206.15411377 -414.07907104]
[220.00885010 -419.90939331]
[234.60510254 -423.50045776]
[249.58343506 -424.76385498]
[264.57498169 -423.66842651]
[279.21057129 -420.24114990]
[293.12979126 -414.56646729]
[305.98983765 -406.78411865]
[317.47406006 -397.08569336]
[327.29962158 -385.71008301]
[335.22460938 -372.93740845]
[341.05377197 -359.08218384]
[344.64364624 -344.48562622]
[345.90579224 -329.50720215]
[344.80914307 -314.51574707]
[341.38067627 -299.88043213]
[335.70483398 -285.96170044]
[327.92141724 -273.10226440]
[318.22204590 -261.61883545]
[306.84564209 -251.79420471]
[294.07229614 -243.87030029]
[280.21658325 -238.04225159]
[265.61975098 -234.45359802]
[250.64120483 -233.19268799]
[235.64984131 -234.29058838]
[221.01481628 -237.72026062]
[215.35203552 -223.83023071]
[209.68923950 -209.94020081]
[204.02645874 -196.05017090]
[208.42733765 -184.78257751]
[203.82325745 -173.16421509]
[192.17533875 -167.62446594]
[186.30636597 -153.82029724]
[188.44711304 -139.08033752]
[175.92713928 -129.40765381]
[170.05818176 -115.60348511]
[172.19892883 -100.86351776]
[159.67893982 -91.19084930]
[153.80998230 -77.38667297]
[148.66801453 -63.29552841]
[144.26702881 -48.95568085]
[147.92962646 -34.51841736]
[136.48387146 -23.59571457]
[132.08287048 -9.25586796]
[127.68187714 5.08397865]
[123.60221100 19.51853180]
[119.84590912 34.04059219]
[116.08960724 48.56264877]
[113.09483337 63.26065445]
[110.86972046 78.09469604]
[108.64459991 92.92874146]
[106.52997589 107.77893829]
[104.52596283 122.64447021]
[102.52194977 137.50999451]
[100.51793671 152.37551880]
[113.84722900 145.49584961]
[127.59838104 151.48799133]
[131.63455200 165.93476868]
[122.98043823 178.18655396]
[108.01551819 179.21177673]
[97.77187347 168.25627136]
[94.66777039 182.93157959]
[91.56365967 197.60687256]
[100.16127777 207.97488403]
[101.20252991 221.20840454]
[94.53065491 232.45866394]
[82.77416992 237.73262024]
[79.45191193 252.36007690]
[76.12965393 266.98754883]
[72.80739594 281.61499023]
[69.48513794 296.24246216]
[66.16287231 310.86990356]
[62.84061432 325.49737549]
[67.32923889 340.66848755]
[56.96520996 351.36599731]
[53.64295197 365.99343872]
[58.13157272 381.16455078]
[47.76754761 391.86206055]
[44.44528961 406.48950195]
[41.12302780 421.11697388]
[37.80076981 435.74444580]
[34.47851181 450.37188721]
[38.96712875 465.54302979]
[28.60310745 476.24050903]
[25.28084755 490.86795044]
[21.95858765 505.49542236]
[18.63632774 520.12286377]
[15.31406879 534.75036621]
[21.16719818 552.20953369]
[8.75125217 564.61157227]
[5.64714193 579.28686523]
[2.54303193 593.96215820]
[-0.56107825 608.63745117]
[13.06906605 615.06524658]
[24.84909248 624.46350098]
[34.14371872 636.32550049]
[40.45169449 650.01147461]
[43.43284225 664.78338623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 205]
[21 204]
[22 203]
[23 202]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[32 194]
[33 193]
[34 192]
[35 191]
[36 190]
[38 188]
[39 187]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[50 175]
[51 174]
[52 173]
[53 167]
[54 166]
[55 165]
[56 164]
[58 163]
[59 162]
[60 161]
[68 160]
[69 159]
[70 158]
[74 157]
[75 156]
[76 155]
[78 153]
[79 152]
[87 151]
[88 150]
[90 148]
[91 147]
[93 145]
[94 144]
[96 141]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
