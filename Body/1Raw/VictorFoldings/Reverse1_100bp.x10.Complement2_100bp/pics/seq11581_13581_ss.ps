%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[286.10623169 503.60507202]
[293.41384888 490.46548462]
[302.78463745 478.70800781]
[313.96292114 468.65338135]
[326.64379883 460.57589722]
[320.77481079 446.77172852]
[314.90585327 432.96755981]
[309.03689575 419.16336060]
[301.66619873 406.09918213]
[292.88562012 393.93774414]
[284.10501099 381.77627563]
[270.38168335 375.98666382]
[268.57653809 360.26879883]
[259.79592896 348.10733032]
[251.01533508 335.94586182]
[242.23474121 323.78442383]
[233.45413208 311.62295532]
[224.67352295 299.46151733]
[215.89292908 287.30004883]
[207.11231995 275.13861084]
[198.33171082 262.97714233]
[187.37055969 265.05166626]
[176.37670898 262.87603760]
[166.94587708 256.72705078]
[160.46145630 247.46092224]
[157.89160156 236.39439392]
[159.64489746 225.11758423]
[165.50585938 215.26551819]
[157.27705383 202.72412109]
[149.04824829 190.18270874]
[140.81942749 177.64131165]
[132.59062195 165.09991455]
[126.29296875 161.23193359]
[124.33428955 152.30996704]
[116.29311371 139.64744568]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[79.08553314 81.05625153]
[71.04436493 68.39373016]
[63.00318909 55.73120499]
[54.96201706 43.06867981]
[42.56672287 39.50223923]
[36.12989426 28.79004860]
[38.63471603 16.95567513]
[30.78296089 4.17483187]
[22.93120575 -8.60601044]
[23.20247650 6.39153624]
[17.78537560 20.37920952]
[7.48349953 31.28202248]
[-6.17493200 37.48260880]
[-21.16377068 38.06114578]
[-35.25951385 32.93180847]
[-46.37113571 22.85551071]
[-52.85029984 9.32700539]
[-53.73585892 -5.64683104]
[-48.89644241 -19.84472084]
[-39.04995346 -31.16049004]
[-25.65705681 -37.91551208]
[-10.70451069 -39.10771942]
[3.58956385 -34.56025696]
[15.10352230 -24.94919586]
[10.06660652 -39.07822418]
[8.18553448 -24.19664001]
[2.41016984 -10.35304356]
[-6.84256029 1.45318282]
[-18.90469360 10.36973763]
[-32.90545273 15.75292778]
[-47.83411026 17.21413612]
[-62.61295700 14.64787483]
[-76.17509460 8.23940659]
[-87.54145813 -1.54863667]
[-95.89150238 -14.00964737]
[-100.62242889 -28.24405479]
[-101.39270782 -43.22426224]
[-98.14672852 -57.86883926]
[-91.11882782 -71.12058258]
[-80.81636047 -82.02283478]
[-67.98305511 -89.78854370]
[-53.54537201 -93.85711670]
[-38.54557037 -93.93482208]
[-24.06650734 -90.01605988]
[-11.15343475 -82.38372040]
[-0.73855901 -71.58879852]
[6.42667484 -58.40949631]
[5.98006868 -73.40284729]
[5.53346300 -88.39619446]
[5.08685684 -103.38954926]
[4.64025116 -118.38289642]
[1.49612987 -124.19891357]
[1.72658980 -129.87728882]
[4.41027308 -133.82783508]
[4.41027308 -148.82783508]
[4.41027308 -163.82783508]
[-3.32702708 -177.62802124]
[4.41027308 -190.35528564]
[4.41027308 -205.35528564]
[4.41027308 -220.35528564]
[-9.36359596 -226.93124390]
[-18.91352272 -238.83761597]
[-22.34336090 -253.71037292]
[-18.97211647 -268.59652710]
[-9.46915150 -280.54040527]
[4.27871466 -287.17056274]
[19.54183197 -287.17056274]
[33.28969955 -280.54040527]
[42.79266357 -268.59652710]
[46.16390991 -253.71037292]
[42.73406982 -238.83761597]
[33.18414307 -226.93124390]
[19.41027260 -220.35528564]
[19.41027260 -205.35528564]
[19.41027260 -190.35528564]
[27.14757347 -177.62802124]
[19.41027260 -163.82783508]
[19.41027260 -148.82783508]
[19.41027260 -133.82783508]
[19.63360023 -118.82950592]
[20.08020592 -103.83615112]
[20.52681351 -88.84280396]
[20.97341919 -73.84945679]
[21.42002487 -58.85610580]
[24.19563484 -44.11514282]
[29.23255157 -29.98611259]
[35.71204758 -16.45776558]
[43.56380463 -3.67692375]
[51.41555786 9.10391903]
[67.27512360 16.61665535]
[67.62454224 35.02750778]
[75.66571045 47.69003296]
[83.70688629 60.35255432]
[91.74806213 73.01508331]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[128.95564270 131.60627747]
[136.99681091 144.26879883]
[145.13203430 156.87110901]
[153.36083984 169.41250610]
[161.58964539 181.95390320]
[169.81845093 194.49531555]
[178.04725647 207.03671265]
[197.18690491 207.13531494]
[212.28073120 218.65858459]
[217.33943176 236.80625916]
[210.49317932 254.19653320]
[219.27377319 266.35800171]
[228.05438232 278.51943970]
[236.83497620 290.68090820]
[245.61558533 302.84237671]
[254.39619446 315.00381470]
[263.17678833 327.16528320]
[271.95739746 339.32672119]
[280.73800659 351.48818970]
[295.08938599 358.14764404]
[296.26644897 372.99566650]
[305.04705811 385.15713501]
[313.82766724 397.31857300]
[312.21585083 382.40542603]
[316.02969360 367.89837646]
[324.76742554 355.70608521]
[337.27941895 347.43264771]
[351.91952515 344.16656494]
[366.76159668 346.33755493]
[379.85287476 353.66003418]
[389.47100830 365.17053223]
[394.35052490 379.35467529]
[393.84948730 394.34631348]
[388.03378296 408.17300415]
[377.66857910 419.01562500]
[364.11761475 425.44766235]
[349.16372681 426.62283325]
[334.77435303 422.38656616]
[322.84109497 413.29440308]
[328.71005249 427.09860229]
[334.57901001 440.90277100]
[340.44796753 454.70693970]
[355.06320190 451.17926025]
[370.05975342 450.10543823]
[385.02853394 451.51473999]
[399.56112671 455.36877441]
[413.26110840 461.56234741]
[425.75469971 469.92654419]
[436.70111084 480.23312378]
[445.80169678 492.20095825]
[452.80819702 505.50357056]
[457.52944946 519.77801514]
[459.83666992 534.63488770]
[459.66690063 549.66888428]
[457.02478027 564.46984863]
[451.98239136 578.63403320]
[444.67730713 591.77502441]
[435.30877686 603.53430176]
[424.13241577 613.59106445]
[411.45312500 621.67102051]
[397.61676025 627.55364990]
[383.00085449 631.07849121]
[368.00408936 632.14947510]
[353.03558350 630.73724365]
[338.50375366 626.88043213]
[324.80496216 620.68420410]
[312.31295776 612.31762695]
[301.36853027 602.00891113]
[292.27026367 590.03930664]
[285.26632690 576.73535156]
[280.54782104 562.46002197]
[278.24346924 547.60272217]
[278.41613770 532.56872559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[9 160]
[10 159]
[11 158]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[20 149]
[21 148]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[34 139]
[35 138]
[36 137]
[37 136]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[46 128]
[47 127]
[48 126]
[63 125]
[64 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[93 118]
[94 117]
[95 116]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
