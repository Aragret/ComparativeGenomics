%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[39.92848206 188.32539368]
[44.88623428 202.49420166]
[48.49540329 217.06500244]
[50.72426224 231.90975952]
[51.55322647 246.89799500]
[50.97501373 261.89801025]
[48.99470520 276.77795410]
[45.62969971 291.40707397]
[40.90957260 305.65679932]
[34.87580490 319.40191650]
[27.58142471 332.52160645]
[19.09053421 344.90060425]
[9.47775555 356.43008423]
[-1.17243397 367.00872803]
[-12.76643753 376.54360962]
[-25.20236397 384.95086670]
[-38.37092209 392.15667725]
[-52.15638733 398.09765625]
[-66.43760681 402.72164917]
[-81.08907318 405.98797607]
[-95.98203278 407.86798096]
[-110.98558807 408.34509277]
[-125.96790314 407.41513062]
[-140.79730225 405.08627319]
[-155.34344482 401.37899780]
[-169.47853088 396.32586670]
[-183.07829285 389.97128296]
[-196.02325439 382.37112427]
[-208.19964600 373.59216309]
[-219.50042725 363.71154785]
[-229.82630920 352.81610107]
[-239.08654785 341.00158691]
[-247.19976807 328.37185669]
[-254.09463501 315.03787231]
[-259.71060181 301.11682129]
[-263.99826050 286.73104858]
[-266.91998291 272.00698853]
[-268.45004272 257.07403564]
[-268.57504272 242.06340027]
[-267.29385376 227.10704041]
[-264.61773682 212.33636475]
[-260.57022095 197.88117981]
[-255.18685913 183.86854553]
[-248.51498413 170.42160034]
[-240.61322021 157.65849304]
[-231.55101013 145.69142151]
[-221.40798950 134.62554932]
[-210.27331543 124.55811310]
[-198.24481201 115.57759857]
[-185.42820740 107.76291656]
[-171.93614197 101.18276215]
[-157.88717651 95.89494324]
[-143.40476990 91.94594574]
[-128.61621094 89.37046814]
[-113.65146637 88.19114685]
[-98.64204407 88.41834259]
[-83.71984863 90.05006409]
[-69.01602173 93.07196045]
[-54.65977859 97.45748901]
[-40.77729034 103.16809845]
[-27.49056244 110.15360260]
[-14.91635895 118.35262299]
[-3.16518283 127.69308472]
[7.65969181 138.09292603]
[17.46313286 149.46072388]
[23.35473633 135.78088379]
[39.08562851 134.09280396]
[51.31211472 125.40297699]
[63.53860092 116.71315765]
[75.76508331 108.02333069]
[87.99156952 99.33351135]
[100.08732605 90.46260834]
[112.04965973 81.41261292]
[124.01199341 72.36260986]
[135.97433472 63.31261063]
[147.93667603 54.26261139]
[159.89900208 45.21261215]
[171.86134338 36.16261292]
[183.68760681 26.93551445]
[195.37519836 17.53336334]
[207.06277466 8.13121223]
[218.75035095 -1.27093935]
[230.43794250 -10.67308998]
[224.70857239 -24.63927650]
[223.14834595 -39.63887787]
[225.87519836 -54.45539856]
[232.65972900 -67.88962555]
[242.94447327 -78.85666656]
[255.88969421 -86.47356415]
[270.44195557 -90.13040924]
[285.41979980 -89.53912354]
[299.60977173 -84.75616455]
[311.86453247 -76.17725372]
[323.55212402 -85.57940674]
[335.23971558 -94.98155975]
[346.92727661 -104.38370514]
[338.46646118 -116.77922058]
[331.00427246 -129.80035400]
[324.58673096 -143.36682129]
[319.25338745 -157.39498901]
[315.03713989 -171.79837036]
[311.96395874 -186.48814392]
[310.05279541 -201.37376404]
[309.31546021 -216.36344910]
[309.75646973 -231.36476135]
[311.37313843 -246.28523254]
[314.15545654 -261.03286743]
[318.08630371 -275.51675415]
[323.14141846 -289.64755249]
[329.28967285 -303.33819580]
[336.49310303 -316.50421143]
[344.70733643 -329.06448364]
[353.88174438 -340.94155884]
[363.95971680 -352.06216431]
[374.87915039 -362.35781860]
[386.57272339 -371.76495361]
[398.96832275 -380.22564697]
[411.98953247 -387.68771362]
[425.55606079 -394.10513306]
[439.58428955 -399.43832397]
[453.98770142 -403.65444946]
[468.67752075 -406.72747803]
[483.56314087 -408.63845825]
[498.55282593 -409.37564087]
[513.55413818 -408.93447876]
[528.47460938 -407.31768799]
[543.22222900 -404.53518677]
[557.70605469 -400.60421753]
[571.83679199 -395.54895020]
[585.52734375 -389.40057373]
[598.69335938 -382.19699097]
[611.25354004 -373.98260498]
[623.13049316 -364.80810547]
[634.25103760 -354.73001099]
[644.54650879 -343.81045532]
[653.95355225 -332.11679077]
[662.41412354 -319.72113037]
[669.87603760 -306.69982910]
[676.29333496 -293.13323975]
[681.62640381 -279.10494995]
[685.84234619 -264.70150757]
[688.91522217 -250.01164246]
[690.82604980 -235.12599182]
[691.56311035 -220.13630676]
[691.12176514 -205.13499451]
[689.50482178 -190.21455383]
[686.72222900 -175.46696472]
[682.79107666 -160.98318481]
[677.73565674 -146.85247803]
[671.58715820 -133.16197205]
[664.38342285 -119.99608612]
[656.16894531 -107.43598175]
[646.99426270 -95.55911255]
[636.91607666 -84.43868256]
[625.99645996 -74.14327240]
[614.30267334 -64.73635101]
[601.90692139 -56.27591705]
[588.88555908 -48.81413269]
[575.31890869 -42.39699936]
[561.29052734 -37.06408310]
[546.88702393 -32.84826279]
[532.19714355 -29.77553368]
[517.31146240 -27.86483765]
[502.32177734 -27.12795639]
[487.32049561 -27.56943321]
[472.40005493 -29.18654633]
[457.65252686 -31.96932411]
[443.16876221 -35.90060806]
[429.03811646 -40.95616531]
[415.34765625 -47.10482407]
[402.18185425 -54.30867386]
[389.62182617 -62.52330017]
[377.74505615 -71.69805908]
[366.62472534 -81.77637482]
[356.32943726 -92.69612885]
[344.64184570 -83.29397583]
[332.95428467 -73.89182281]
[321.26669312 -64.48966980]
[327.02124023 -50.68161774]
[328.65344238 -35.79648209]
[326.02246094 -21.03965950]
[319.33316040 -7.60858154]
[309.11996460 3.40445232]
[296.20434570 11.10110760]
[281.62860107 14.85028362]
[266.57189941 14.33986187]
[252.25473022 9.60266495]
[239.84008789 1.01449072]
[228.15251160 10.41664219]
[216.46492004 19.81879234]
[204.77734375 29.22094345]
[193.08976746 38.62309647]
[191.69375610 43.19039536]
[187.41378784 46.92922211]
[180.91134644 48.12495041]
[168.94900513 57.17494965]
[156.98666382 66.22495270]
[145.02433777 75.27494812]
[133.06199646 84.32495117]
[121.09966278 93.37494659]
[109.13732147 102.42494965]
[107.25963593 107.32273102]
[102.77147675 110.81983185]
[96.68139648 111.55998993]
[84.45491028 120.24981689]
[72.22842407 128.93963623]
[60.00193787 137.62947083]
[47.77545166 146.31929016]
[41.00933075 160.62069702]
[26.15295792 161.68721008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 210]
[67 208]
[68 207]
[69 206]
[70 205]
[71 204]
[72 201]
[73 200]
[74 199]
[75 198]
[76 197]
[77 196]
[78 195]
[79 192]
[80 191]
[81 190]
[82 189]
[83 188]
[93 178]
[94 177]
[95 176]
[96 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
