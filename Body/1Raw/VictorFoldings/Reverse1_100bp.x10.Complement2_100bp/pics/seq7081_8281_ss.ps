%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[263.69998169 326.52597046]
[266.68542480 311.81768799]
[270.84475708 297.39733887]
[276.15093994 283.35845947]
[282.56961060 269.79205322]
[290.05908203 256.78613281]
[277.70458984 248.27931213]
[265.35006714 239.77247620]
[252.99557495 231.26565552]
[240.64105225 222.75883484]
[228.28654480 214.25199890]
[215.93203735 205.74517822]
[201.06143188 204.89996338]
[194.08314514 190.70088196]
[181.72862244 182.19406128]
[169.37411499 173.68722534]
[157.01960754 165.18040466]
[144.66510010 156.67356873]
[151.19107056 170.17956543]
[152.47006226 185.12493896]
[148.33380127 199.54338074]
[139.32649231 211.53788757]
[126.63318634 219.53038025]
[111.92391205 222.46931458]
[97.13393402 219.96801758]
[84.20912170 212.35557556]
[74.84995270 200.63354492]
[70.28779602 186.34414673]
[71.12287903 171.36741638]
[77.24533081 157.67378235]
[87.84963989 147.06488037]
[101.54061890 140.93650818]
[116.51699066 140.09494019]
[130.81045532 144.65203857]
[120.64691162 133.62014771]
[110.48336792 122.58827972]
[100.31981659 111.55640411]
[102.49314117 126.39812469]
[97.60739899 140.58013916]
[86.75408173 150.93414307]
[72.35784912 155.14703369]
[57.63485336 152.27764893]
[45.87425232 142.96699524]
[39.70339203 129.29510498]
[40.50085831 114.31631470]
[48.08849716 101.37693024]
[60.77120972 93.36763763]
[75.71564484 92.07772827]
[89.58319855 97.79539490]
[81.35438538 85.25399017]
[73.12557983 72.71259308]
[72.37091827 87.69359589]
[64.31004333 100.34358215]
[51.05004120 107.35588074]
[36.05704498 106.89749146]
[23.25019264 99.08823395]
[15.97716141 85.96942902]
[16.13910484 70.97030640]
[23.69369125 58.01159286]
[36.66617203 50.48067093]
[51.66556549 50.34610367]
[64.77043915 57.64244843]
[58.49307632 44.01913452]
[52.21571350 30.39581680]
[45.93835449 16.77250099]
[39.66099167 3.14918518]
[38.56270218 18.10892296]
[32.47729874 31.81906128]
[22.11969376 42.66894531]
[8.70668507 49.38394547]
[-6.18597937 51.17518234]
[-20.80872536 47.83223343]
[-33.44368362 39.74781799]
[-42.60651779 27.87168503]
[-47.22078323 13.59903431]
[-46.74440002 -1.39339888]
[-41.23333740 -15.34431934]
[-31.33502388 -26.61478615]
[-18.21230698 -33.88075638]
[-3.40683055 -36.28862762]
[11.34207439 -33.55553436]
[24.30171967 -26.00254822]
[33.95040894 -14.51563644]
[31.06513596 -29.23552704]
[28.17986298 -43.95541763]
[25.29459000 -58.67531204]
[22.40931892 -73.39520264]
[7.35246038 -74.25651550]
[-7.01690912 -78.83603668]
[-19.79551888 -86.84590149]
[-30.18009758 -97.78260040]
[-37.51786041 -110.95864105]
[-41.34754562 -125.54576874]
[-41.42842102 -140.62702942]
[-37.75540161 -155.25439453]
[-30.55937576 -168.50836182]
[-20.29269218 -179.55581665]
[-7.60072231 -187.70227051]
[6.71870518 -192.43563843]
[21.76545906 -193.45838928]
[36.59368896 -190.70622253]
[50.27127838 -184.35212708]
[61.93844223 -174.79556274]
[70.86177063 -162.63722229]
[76.48034668 -148.64143372]
[78.44096375 -133.68794250]
[76.62039185 -118.71675873]
[71.13307190 -104.66897583]
[62.32392883 -92.42765808]
[50.74672699 -82.76229858]
[37.12920761 -76.28047180]
[40.01448059 -61.56058121]
[42.89975357 -46.84069061]
[45.78502655 -32.12080002]
[48.67029953 -17.40090942]
[53.28430939 -3.12817550]
[59.56166840 10.49514103]
[65.83902740 24.11845589]
[72.11639404 37.74177170]
[78.39375305 51.36508942]
[85.66698456 64.48377991]
[93.89579010 77.02518463]
[102.12459564 89.56658173]
[111.35169220 101.39285278]
[121.51524353 112.42472839]
[131.67878723 123.45661163]
[141.84233093 134.48847961]
[153.17193604 144.31906128]
[165.52644348 152.82589722]
[177.88095093 161.33271790]
[190.23545837 169.83955383]
[202.58996582 178.34637451]
[218.34425354 179.80004883]
[224.43887329 193.39067078]
[236.79338074 201.89749146]
[249.14788818 210.40432739]
[261.50241089 218.91114807]
[273.85690308 227.41796875]
[286.21142578 235.92480469]
[298.56591797 244.43162537]
[308.04421997 232.79513550]
[318.42813110 221.95906067]
[329.65032959 211.99368286]
[341.63803101 202.96363831]
[354.31347656 194.92750549]
[367.59445190 187.93737793]
[381.39483643 182.03860474]
[395.62515259 177.26943970]
[410.19305420 173.66079712]
[425.00408936 171.23609924]
[439.96221924 170.01107788]
[454.97042847 169.99365234]
[469.93136597 171.18395996]
[484.74798584 173.57427979]
[499.32424927 177.14907837]
[513.56555176 181.88520813]
[527.37963867 187.75193787]
[540.67681885 194.71121216]
[553.37084961 202.71791077]
[565.37945557 211.72010803]
[576.62475586 221.65939331]
[587.03381348 232.47134399]
[596.53912354 244.08581543]
[605.07897949 256.42749023]
[612.59808350 269.41629028]
[619.04760742 282.96804810]
[624.38574219 296.99484253]
[628.57788086 311.40567017]
[631.59686279 326.10711670]
[633.42303467 341.00378418]
[634.04455566 355.99911499]
[633.45751953 370.99584961]
[631.66558838 385.89669800]
[628.68041992 400.60504150]
[624.52142334 415.02548218]
[619.21551514 429.06448364]
[612.79718018 442.63104248]
[605.30798340 455.63711548]
[596.79650879 467.99838257]
[587.31793213 479.63467407]
[576.93377686 490.47052002]
[565.71136475 500.43563843]
[553.72344971 509.46542358]
[541.04785156 517.50128174]
[527.76672363 524.49108887]
[513.96618652 530.38958740]
[499.73580933 535.15844727]
[485.16781616 538.76672363]
[470.35668945 541.19110107]
[455.39855957 542.41583252]
[440.39035034 542.43292236]
[425.42944336 541.24224854]
[410.61285400 538.85162354]
[396.03668213 535.27648926]
[381.79547119 530.54003906]
[367.98153687 524.67303467]
[354.68453979 517.71343994]
[341.99066162 509.70648193]
[329.98223877 500.70401001]
[318.73715210 490.76449585]
[308.32833862 479.95230103]
[298.82330322 468.33764648]
[290.28372192 455.99578857]
[282.76489258 443.00677490]
[276.31567383 429.45489502]
[270.97784424 415.42800903]
[266.78601074 401.01705933]
[263.76739502 386.31555176]
[261.94152832 371.41882324]
[261.32031250 356.42349243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[12 134]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[34 127]
[35 126]
[36 125]
[37 124]
[49 123]
[50 122]
[51 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
