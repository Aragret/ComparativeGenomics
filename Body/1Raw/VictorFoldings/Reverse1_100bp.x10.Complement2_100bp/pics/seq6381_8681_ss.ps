%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[219.66587830 593.36499023]
[220.66241455 578.35900879]
[224.24975586 563.75415039]
[230.31886292 549.99420166]
[238.68533325 537.49725342]
[249.09490967 526.64312744]
[261.23123169 517.76165771]
[274.72552490 511.12274170]
[270.53851318 496.71896362]
[266.35150146 482.31518555]
[262.16448975 467.91140747]
[257.97747803 453.50762939]
[253.79046631 439.10382080]
[249.49635315 424.73162842]
[245.09535217 410.39178467]
[240.69435120 396.05194092]
[236.29335022 381.71206665]
[230.83799744 367.73928833]
[224.25796509 354.25955200]
[217.57777405 340.82916260]
[210.89758301 327.39880371]
[204.21737671 313.96841431]
[197.53718567 300.53805542]
[190.85699463 287.10766602]
[184.17680359 273.67727661]
[177.29739380 260.34786987]
[170.22027588 247.12232971]
[155.43798828 249.30618286]
[140.77297974 246.29513550]
[127.99909210 238.43368530]
[118.66818237 226.65423584]
[113.92154694 212.36650085]
[114.35041046 197.28881836]
[119.92228699 183.24153137]
[129.98263550 171.92718506]
[122.90553284 158.70164490]
[115.82843018 145.47612000]
[108.75132751 132.25059509]
[101.67421722 119.02507019]
[87.83744049 114.72509003]
[81.00118256 101.94965363]
[85.10025787 88.05204010]
[78.02314758 74.82650757]
[70.94604492 61.60098267]
[63.86893845 48.37545395]
[58.46368027 44.56825638]
[56.14118195 39.38144684]
[56.78467560 34.64911270]
[50.10448074 21.21873856]
[43.42428589 7.78836155]
[36.74409485 -5.64201450]
[30.06389809 -19.07238960]
[23.38370323 -32.50276566]
[8.67107773 -37.61905289]
[2.08773160 -51.33452606]
[7.05599880 -65.32923889]
[6.88646650 -50.33019638]
[2.55320358 -35.96973419]
[-5.60205078 -23.38038063]
[-16.93614006 -13.55498314]
[-30.55520821 -7.26841354]
[-45.38520050 -5.01645660]
[-60.25656128 -6.97671175]
[-73.99647522 -12.99458408]
[-85.52135468 -22.59547997]
[-93.92229462 -35.02223206]
[-98.53676605 -49.29481506]
[-99.00085449 -64.28763580]
[-95.27795410 -78.81829071]
[-87.66167450 -91.74084473]
[-76.75267029 -102.03615570]
[-63.41125488 -108.89230347]
[-48.68960571 -111.76857758]
[-33.74872208 -110.43814850]
[-19.76691055 -105.00593567]
[-7.84683275 -95.90035248]
[1.07309484 -83.83644104]
[-1.37263262 -98.63571167]
[-3.81836009 -113.43498230]
[-6.26408720 -128.23425293]
[-8.70981503 -143.03352356]
[-15.98469639 -129.91574097]
[-29.14598083 -122.71987152]
[-44.11550140 -123.67562103]
[-56.25478745 -132.48684692]
[-61.80235291 -146.42329407]
[-59.03921890 -161.16659546]
[-48.82157898 -172.14839172]
[-34.31547546 -175.96585083]
[-20.01578331 -171.43608093]
[-10.35331249 -159.96244812]
[-10.79991817 -174.95579529]
[-11.24652481 -189.94915771]
[-11.69313049 -204.94250488]
[-15.07665920 -213.42716980]
[-12.03309441 -220.16203308]
[-12.25642204 -235.16036987]
[-12.47974968 -250.15870667]
[-26.49927139 -256.10623169]
[-36.88292313 -267.24621582]
[-41.83167267 -281.64865112]
[-40.48812103 -296.81817627]
[-33.08504486 -310.12661743]
[-20.90507317 -319.26818848]
[-6.05846024 -322.65905762]
[8.88253021 -319.71173096]
[21.32927895 -310.93685913]
[29.12531471 -297.85473633]
[30.91992378 -282.73193359]
[26.40218163 -268.18856812]
[16.35481453 -256.74432373]
[2.51858783 -250.38203430]
[2.74191570 -235.38369751]
[2.96524334 -220.38536072]
[3.30021954 -205.38911438]
[3.74682546 -190.39575195]
[4.19343138 -175.40240479]
[4.64003706 -160.40905762]
[6.08945608 -145.47924805]
[8.53518295 -130.67997742]
[10.98091125 -115.88070679]
[13.42663860 -101.08143616]
[15.87236595 -86.28216553]
[20.48637581 -72.00942993]
[34.64452362 -67.52809906]
[41.61051178 -54.00294495]
[36.81407928 -39.18296051]
[43.49427414 -25.75258446]
[50.17446899 -12.32220936]
[56.85466385 1.10816705]
[63.53485870 14.53854275]
[70.21504974 27.96891975]
[77.09446716 41.29834747]
[84.17156982 54.52387619]
[91.24867249 67.74940491]
[98.32578278 80.97492981]
[112.16255951 85.27490997]
[118.99881744 98.05034637]
[114.89974213 111.94795990]
[121.97685242 125.17349243]
[129.05395508 138.39901733]
[136.13105774 151.62454224]
[143.20816040 164.85006714]
[158.20300293 162.75715637]
[172.98139954 165.91481018]
[185.76374817 173.92304993]
[195.01754761 185.79896545]
[199.64114380 200.09735107]
[199.09484863 215.08654785]
[193.46391296 228.95816040]
[183.44581604 240.04522705]
[190.52291870 253.27075195]
[195.92817688 257.07794189]
[198.25067139 262.26477051]
[197.60717773 266.99710083]
[204.28736877 280.42745972]
[210.96755981 293.85784912]
[217.64776611 307.28823853]
[224.32795715 320.71859741]
[231.00814819 334.14898682]
[237.68833923 347.57934570]
[244.31208801 353.86932373]
[244.36634827 361.25979614]
[247.11570740 346.51391602]
[256.79437256 335.05426025]
[270.87234497 329.87637329]
[285.66970825 332.33374023]
[297.31842041 341.78399658]
[302.77355957 355.75686646]
[300.60916138 370.59991455]
[291.39102173 382.43313599]
[277.52868652 388.16342163]
[262.64578247 386.29284668]
[250.63319397 377.31109619]
[255.03419495 391.65093994]
[259.43518066 405.99078369]
[263.83618164 420.33062744]
[269.34573364 427.61642456]
[268.19424438 434.91680908]
[272.38125610 449.32061768]
[276.56826782 463.72439575]
[280.75527954 478.12817383]
[284.94229126 492.53195190]
[289.12930298 506.93572998]
[304.07974243 505.30609131]
[319.08599854 506.29754639]
[333.69210815 509.87991333]
[347.45413208 515.94433594]
[359.95391846 524.30657959]
[370.81158447 534.71240234]
[379.69717407 546.84576416]
[386.34069824 560.33776855]
[390.54022217 574.77850342]
[392.16815186 589.72912598]
[391.17501831 604.73529053]
[387.59100342 619.34094238]
[381.52499390 633.10229492]
[373.16137695 645.60113525]
[362.75427246 656.45764160]
[350.61996460 665.34185791]
[337.12716675 671.98382568]
[322.68594360 676.18176270]
[307.73513794 677.80798340]
[292.72909546 676.81311035]
[278.12384033 673.22747803]
[264.36315918 667.15991211]
[251.86528015 658.79486084]
[241.00997925 648.38653564]
[232.12712097 636.25115967]
[225.48667908 622.75762939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[14 177]
[15 176]
[16 175]
[17 174]
[18 163]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 152]
[27 151]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[42 136]
[43 135]
[44 134]
[45 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[53 127]
[56 124]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[91 118]
[92 117]
[93 116]
[94 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
