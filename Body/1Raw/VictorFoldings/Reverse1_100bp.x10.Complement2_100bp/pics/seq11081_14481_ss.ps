%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[99.93362427 598.66522217]
[101.01399994 583.54541016]
[107.20333862 569.70819092]
[117.75424194 558.82452393]
[131.39263916 552.20861816]
[129.83210754 537.29003906]
[126.00979614 530.96453857]
[128.36111450 522.13793945]
[127.02288055 507.19775391]
[125.68464661 492.25756836]
[124.23522186 477.32775879]
[122.67469788 462.40914917]
[120.58449554 460.54122925]
[119.10826874 457.73278809]
[118.60794830 454.21353149]
[119.35569763 450.33984375]
[121.49262238 446.55996704]
[120.82283020 431.57492065]
[120.15304565 416.58990479]
[119.48326111 401.60485840]
[118.81347656 386.61981201]
[118.14369202 371.63476562]
[117.47390747 356.64974976]
[116.80412292 341.66470337]
[113.36508942 335.12292480]
[116.23760223 326.45190430]
[115.79099274 311.45855713]
[107.67818451 298.96728516]
[115.00117493 284.94287109]
[114.55456543 269.94952393]
[113.32759094 254.99978638]
[98.71520996 251.87512207]
[86.02976990 243.92472839]
[76.81257629 232.09181213]
[72.19132233 217.79267883]
[72.74211121 202.74719238]
[78.41777039 188.77195740]
[88.55115509 177.56095886]
[101.93355560 170.48023987]
[99.92954254 155.61470032]
[97.92552948 140.74917603]
[95.92151642 125.88365173]
[93.91750336 111.01811981]
[91.58201599 96.20105743]
[88.91622162 81.43983459]
[76.21652222 72.42011261]
[73.72330475 57.41216660]
[82.40049744 45.36053085]
[79.73469543 30.59931374]
[75.12998199 22.71043587]
[77.14081573 15.59859085]
[74.69508362 0.79932034]
[72.24935913 -13.99995041]
[69.80362701 -28.79922104]
[67.35790253 -43.59849167]
[63.46494293 -48.94231033]
[62.93470001 -54.60056686]
[65.06652832 -58.87424850]
[63.06251526 -73.73977661]
[57.89278030 -59.65880203]
[48.67432022 -47.82579803]
[36.28577805 -39.36861038]
[21.90795135 -35.09332657]
[6.91124010 -35.40743637]
[-7.27496243 -40.28100586]
[-19.29851723 -49.24951172]
[-28.01341820 -61.45813751]
[-32.58901596 -75.74323273]
[-32.58919144 -90.74323273]
[-28.01392746 -105.02843475]
[-19.29931259 -117.23725891]
[-7.27596617 -126.20604706]
[6.91012239 -131.07994080]
[21.90682602 -131.39440918]
[36.28475571 -127.11946106]
[48.67349243 -118.66255951]
[57.89223099 -106.82977295]
[63.06251526 -92.74780273]
[65.06652832 -107.61333466]
[67.07054138 -122.47885895]
[69.07455444 -137.34439087]
[71.07856750 -152.20991516]
[73.08258057 -167.07543945]
[75.08659363 -181.94097900]
[75.64480591 -196.93058777]
[67.09982300 -210.24575806]
[74.06586456 -223.41099548]
[73.17304993 -238.38439941]
[70.65448761 -241.92146301]
[69.50778961 -245.69633484]
[69.63927460 -249.24853516]
[70.81532288 -252.19531250]
[72.69985199 -254.27056885]
[72.69985199 -269.27056885]
[72.69985199 -284.27056885]
[72.69985199 -299.27056885]
[72.69985199 -314.27056885]
[58.44717789 -319.43170166]
[46.82125092 -329.15863037]
[39.22594833 -342.27685547]
[36.57844543 -357.20220947]
[39.19843674 -372.13241577]
[46.76955032 -385.26461792]
[58.37753677 -395.01296997]
[72.62067413 -400.20034790]
[87.77902985 -400.20034790]
[102.02216339 -395.01296997]
[113.63014984 -385.26461792]
[121.20126343 -372.13241577]
[123.82125854 -357.20220947]
[121.17375183 -342.27685547]
[113.57845306 -329.15863037]
[101.95252228 -319.43170166]
[87.69985199 -314.27056885]
[87.69985199 -299.27056885]
[87.69985199 -284.27056885]
[87.69985199 -269.27056885]
[87.69985199 -254.27056885]
[88.14645386 -239.27722168]
[89.03926849 -224.30381775]
[97.52039337 -212.05963135]
[90.61820984 -197.82339478]
[97.69592285 -211.04859924]
[109.49073792 -220.31587219]
[124.01503754 -224.06349182]
[138.82122803 -221.65994263]
[151.41418457 -213.51025391]
[159.67178345 -200.98779297]
[162.20246887 -186.20281982]
[158.57978821 -171.64685059]
[149.41423035 -159.77282715]
[136.25032043 -152.58174133]
[121.30644989 -151.28540039]
[107.10089111 -156.10226440]
[96.02754974 -166.22062683]
[89.95212555 -179.93696594]
[87.94811249 -165.07142639]
[85.94409943 -150.20590210]
[83.94008636 -135.34037781]
[81.93607330 -120.47484589]
[79.93206024 -105.60932159]
[77.92803955 -90.74378967]
[77.92803955 -75.74378967]
[79.93206024 -60.87826157]
[82.15717316 -46.04421997]
[84.60289764 -31.24494934]
[87.04862976 -16.44567871]
[89.49435425 -1.64640713]
[91.94008636 13.15286350]
[94.49591827 27.93351746]
[97.16171265 42.69473648]
[109.50621033 50.94997025]
[112.41998291 65.88196564]
[103.67743683 78.77404022]
[106.34323120 93.53526306]
[109.16778564 96.16095734]
[110.82125854 100.01892090]
[110.77925873 104.55821991]
[108.78302765 109.01410675]
[110.78704834 123.87963867]
[112.79106140 138.74516296]
[114.79507446 153.61068726]
[116.79908752 168.47622681]
[131.57878113 171.76042175]
[144.31916809 179.88783264]
[153.49293518 191.86122131]
[158.00820923 206.22375488]
[157.33842468 221.23617554]
[151.58370972 235.08744812]
[141.45643616 246.11320496]
[128.19311523 252.99577332]
[137.21762085 241.01419067]
[151.80357361 237.51420593]
[165.28247070 244.09593201]
[171.49195862 257.75033569]
[167.59310913 272.23477173]
[155.36845398 280.92718506]
[140.40693665 279.85348511]
[129.54791260 269.50292969]
[129.99452209 284.49627686]
[138.13928223 298.05996704]
[130.78434753 311.01196289]
[131.23095703 326.00531006]
[131.78915405 340.99490356]
[132.45895386 355.97994995]
[133.12873840 370.96499634]
[133.79852295 385.95004272]
[134.46830750 400.93505859]
[135.13809204 415.92010498]
[135.80787659 430.90515137]
[136.47766113 445.89019775]
[137.59330750 460.84863281]
[139.15382385 475.76724243]
[143.15904236 483.97674561]
[140.62483215 490.91934204]
[141.96305847 505.85952759]
[143.30130005 520.79968262]
[144.75071716 535.72949219]
[146.31123352 550.64813232]
[161.02349854 554.29846191]
[173.59829712 562.76312256]
[182.51712036 575.01995850]
[186.70301819 589.58892822]
[185.65051270 604.71069336]
[179.48667908 618.55926514]
[168.95585632 629.46234131]
[155.32968140 636.10339355]
[140.25357056 637.68035889]
[125.54806519 634.00292969]
[112.98889923 625.51507568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 199]
[6 198]
[8 197]
[9 196]
[10 195]
[11 193]
[12 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[26 183]
[27 182]
[29 180]
[30 179]
[31 171]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 155]
[45 154]
[48 151]
[49 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[58 144]
[59 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 122]
[87 120]
[88 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
