%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[71.66893768 350.46801758]
[69.87962341 365.37539673]
[66.51586151 380.00814819]
[61.61576462 394.20043945]
[55.23485565 407.79147339]
[47.44543457 420.62725830]
[38.33576584 432.56231689]
[28.00906181 443.46145630]
[16.58233833 453.20117188]
[4.18506527 461.67111206]
[-9.04228497 468.77526855]
[-22.94983673 474.43319702]
[-37.38000870 478.58078003]
[-52.16929245 481.17098999]
[-67.15011597 482.17446899]
[-82.15273285 481.57989502]
[-97.00715637 479.39398193]
[-111.54507446 475.64151001]
[-125.60175323 470.36499023]
[-139.01792908 463.62417603]
[-151.64158630 455.49551392]
[-163.32968140 446.07104492]
[-173.94978333 435.45758057]
[-183.38156128 423.77539062]
[-191.51814270 411.15682983]
[-198.26731873 397.74487305]
[-203.55265808 383.69149780]
[-207.31422424 369.15591431]
[-209.50942993 354.30285645]
[-210.11338806 339.30062866]
[-209.11926270 324.31918335]
[-206.53831482 309.52825928]
[-202.39978027 295.09552002]
[-196.75056458 281.18441772]
[-189.65466309 267.95263672]
[-181.19248962 255.55006409]
[-171.45993042 244.11724854]
[-160.56724548 233.78372192]
[-148.63787842 224.66658020]
[-135.80697632 216.86914062]
[-122.21994019 210.47972107]
[-108.03072357 205.57075500]
[-93.40008545 202.19783020]
[-78.49381256 200.39918518]
[-63.48080063 200.19520569]
[-48.53116226 201.58818054]
[-33.81428528 204.56233215]
[-19.49692345 209.08398438]
[-5.74130583 215.10188293]
[7.29670763 222.54783630]
[16.07731056 210.38638306]
[24.76713562 198.15989685]
[33.36569977 185.86906433]
[41.96426392 173.57821655]
[50.56282806 161.28738403]
[58.97744751 148.86988831]
[59.49036026 133.98411560]
[73.53005981 126.69046783]
[81.75887299 114.14907074]
[89.98767853 101.60766602]
[91.42512512 93.67632294]
[98.43352509 88.94206238]
[106.84814453 76.52456665]
[115.26276398 64.10707092]
[123.67738342 51.68957520]
[132.09199524 39.27208328]
[140.50662231 26.85458565]
[148.92123413 14.43709087]
[157.33586121 2.01959491]
[165.75047302 -10.39790058]
[174.16510010 -22.81539536]
[182.57971191 -35.23289108]
[190.99432373 -47.65038681]
[199.40895081 -60.06788254]
[207.82356262 -72.48537445]
[202.70979309 -87.01657104]
[207.08189392 -101.60211182]
[219.06243896 -110.70873260]
[233.93008423 -111.01089478]
[242.34469604 -123.42839050]
[250.75932312 -135.84588623]
[259.08126831 -148.32568359]
[267.31005859 -160.86708069]
[275.53887939 -173.40847778]
[283.76770020 -185.94987488]
[291.99649048 -198.49128723]
[297.55572510 -212.42308044]
[300.22152710 -227.18429565]
[302.88729858 -241.94551086]
[294.14477539 -254.83758545]
[297.05853271 -269.76959229]
[309.40304565 -278.02481079]
[312.06884766 -292.78604126]
[314.73461914 -307.54727173]
[317.40042114 -322.30847168]
[320.06622314 -337.06970215]
[306.06100464 -342.57791138]
[293.39968872 -350.71279907]
[282.56887817 -361.16174316]
[273.98492432 -373.52304077]
[267.97775269 -387.32159424]
[264.77825928 -402.02700806]
[264.50946045 -417.07406616]
[267.18164062 -431.88439941]
[272.69210815 -445.88870239]
[280.82907104 -458.54873657]
[291.27975464 -469.37783813]
[303.64245605 -477.95980835]
[317.44198608 -483.96475220]
[332.14791870 -487.16183472]
[347.19503784 -487.42822266]
[362.00491333 -484.75363159]
[376.00833130 -479.24087524]
[388.66705322 -471.10186768]
[399.49444580 -460.64944458]
[408.07440186 -448.28536987]
[414.07711792 -434.48486328]
[417.27185059 -419.77841187]
[417.53576660 -404.73126221]
[414.85879517 -389.92181396]
[409.34378052 -375.91928101]
[401.20272827 -363.26190186]
[390.74853516 -352.43615723]
[378.38308716 -343.85821533]
[364.58160400 -337.85772705]
[349.87463379 -334.66540527]
[334.82745361 -334.40390015]
[332.16165161 -319.64266968]
[329.49584961 -304.88146973]
[326.83004761 -290.12023926]
[324.16424561 -275.35903931]
[332.84146118 -263.30740356]
[330.34823608 -248.29943848]
[317.64852905 -239.27972412]
[314.98272705 -224.51850891]
[312.31692505 -209.75727844]
[321.23040771 -221.82170105]
[332.49969482 -231.72135925]
[345.61209106 -239.00590515]
[359.97113037 -243.34393311]
[374.92352295 -244.53808594]
[389.78903198 -242.53404236]
[403.89141846 -237.42297363]
[416.58908081 -229.43740845]
[427.30438232 -218.94061279]
[435.54983521 -206.41015625]
[440.95031738 -192.41606140]
[443.26016235 -177.59497070]
[442.37426758 -162.62115479]
[438.33294678 -148.17581177]
[431.32006836 -134.91612244]
[421.65466309 -123.44529724]
[409.77642822 -114.28519440]
[396.22573853 -107.85253143]
[381.61911011 -104.43995667]
[366.62097168 -104.20271301]
[351.91369629 -107.15159607]
[338.16635132 -113.15245819]
[326.00433350 -121.93228912]
[315.98095703 -133.09167480]
[308.55218506 -146.12292480]
[304.05603027 -160.43322754]
[302.69699097 -175.37152100]
[304.53790283 -190.26246643]
[296.30908203 -177.72106934]
[288.08029175 -165.17967224]
[279.85147095 -152.63827515]
[271.62265015 -140.09687805]
[270.58154297 -132.77992249]
[263.17681885 -127.43126678]
[254.76219177 -115.01377106]
[246.34757996 -102.59627533]
[251.57710266 -88.67543030]
[247.55917358 -74.17300415]
[235.63267517 -64.70663452]
[220.24105835 -64.07076263]
[211.82644653 -51.65326309]
[203.41181946 -39.23576736]
[194.99720764 -26.81827354]
[186.58259583 -14.40077782]
[178.16796875 -1.98328185]
[169.75335693 10.43421364]
[161.33872986 22.85170937]
[152.92411804 35.26920319]
[144.50949097 47.68669891]
[136.09487915 60.10419464]
[127.68025970 72.52169037]
[119.26564026 84.93918610]
[110.85102081 97.35668182]
[102.52907562 109.83647919]
[94.30027008 122.37787628]
[86.07146454 134.91928101]
[84.96997070 150.70208740]
[71.51884460 157.09869385]
[70.76114655 163.66661072]
[67.31725311 168.18728638]
[62.85366440 169.88594055]
[54.25510025 182.17678833]
[45.65653610 194.46762085]
[37.05797195 206.75846863]
[34.70285416 215.58406067]
[28.23876762 219.16699219]
[19.45816422 231.32844543]
[30.62860680 241.36105347]
[40.66934586 252.52418518]
[49.46661377 264.69137573]
[56.92072678 277.72473145]
[62.94723129 291.47656250]
[67.47783661 305.79110718]
[70.46120453 320.50610352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 203]
[51 202]
[52 200]
[53 199]
[54 198]
[55 197]
[56 194]
[58 192]
[59 191]
[60 190]
[62 189]
[63 188]
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[79 172]
[80 171]
[81 170]
[82 168]
[83 167]
[84 166]
[85 165]
[86 164]
[87 136]
[88 135]
[89 134]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
