%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[60.97618484 818.79437256]
[47.93983078 826.26660156]
[33.97272873 831.80743408]
[19.35922813 835.30401611]
[4.39684248 836.68524170]
[-10.60981178 835.92297363]
[-25.35522079 833.03271484]
[-39.53918457 828.07330322]
[-52.87294006 821.14569092]
[-65.08502197 812.39093018]
[-75.92681885 801.98724365]
[-85.17758942 790.14648438]
[-92.64901733 777.10968018]
[-98.18898773 763.14221191]
[-101.68470764 748.52850342]
[-103.06501007 733.56604004]
[-102.30180359 718.55944824]
[-99.41061401 703.81420898]
[-94.45030975 689.63055420]
[-87.52187347 676.29718018]
[-78.76636505 664.08569336]
[-68.36203003 653.24450684]
[-56.52067947 643.99444580]
[-43.48340225 636.52386475]
[-29.51561356 630.98474121]
[-14.90168190 627.48992920]
[0.06087371 626.11053467]
[15.06743431 626.87469482]
[17.95270729 612.15478516]
[20.83798027 597.43493652]
[23.72325134 582.71502686]
[26.60852432 567.99511719]
[29.49379730 553.27526855]
[32.26940918 538.53430176]
[34.93520355 523.77307129]
[37.27069092 508.95599365]
[39.27470398 494.09045410]
[28.51595688 481.16421509]
[30.47345543 464.12063599]
[44.42110825 453.56213379]
[46.20357513 438.66839600]
[47.98603821 423.77468872]
[49.76850510 408.88098145]
[51.55097198 393.98724365]
[38.49356461 386.74615479]
[29.17802429 375.02584839]
[25.04827118 360.59289551]
[26.76355553 345.63812256]
[34.09343338 332.44390869]
[45.94816589 323.03604126]
[60.54063797 318.87246704]
[62.32310486 303.97872925]
[64.10556793 289.08502197]
[62.22543716 286.10217285]
[61.69667053 282.06045532]
[63.00120163 277.60494995]
[66.31464386 273.57156372]
[68.76036835 258.77227783]
[71.20609283 243.97302246]
[62.35043716 232.05191040]
[64.61993408 217.00849915]
[77.18393707 207.80070496]
[79.62966156 193.00143433]
[82.07538605 178.20216370]
[84.52111816 163.40289307]
[86.63574219 148.55268860]
[88.41820526 133.65896606]
[90.20066833 118.76525879]
[79.70650482 106.02790070]
[81.54559326 89.62712097]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[89.90116119 50.08156204]
[98.92055511 38.22830200]
[100.03620148 23.26984787]
[100.70598602 8.28481007]
[101.37577057 -6.70022869]
[92.51297760 -22.84124565]
[102.52719116 -37.25244141]
[102.97379303 -52.24579239]
[103.42040253 -67.23914337]
[103.86700439 -82.23249054]
[96.54402161 -96.25691223]
[104.65682983 -108.74817657]
[105.10343170 -123.74152374]
[96.84288025 -133.64738464]
[97.52352905 -146.12619019]
[106.23588562 -154.51792908]
[106.90567017 -169.50297546]
[98.04287720 -185.64398193]
[108.05708313 -200.05519104]
[108.50369263 -215.04853821]
[108.95030212 -230.04188538]
[109.39690399 -245.03523254]
[101.13635254 -254.94110107]
[101.81700134 -267.41989136]
[110.52935791 -275.81164551]
[111.19914246 -290.79669189]
[111.86892700 -305.78170776]
[112.53871155 -320.76675415]
[98.89804840 -327.53817749]
[89.19587708 -339.27648926]
[85.11314392 -353.94793701]
[87.35722351 -369.01058960]
[95.53930664 -381.85479736]
[108.24179840 -390.25518799]
[123.26391602 -392.75634766]
[138.00299072 -388.92495728]
[149.90538025 -379.42480469]
[156.90893555 -365.90185547]
[157.80023193 -350.69903564]
[152.42486572 -336.45034790]
[141.71414185 -325.62445068]
[127.52375031 -320.09698486]
[126.85396576 -305.11193848]
[126.18418121 -290.12689209]
[125.51439667 -275.14184570]
[134.42901611 -260.02575684]
[124.39025116 -244.58862305]
[123.94364929 -229.59527588]
[123.49703979 -214.60192871]
[123.05043793 -199.60858154]
[131.11451721 -190.59208679]
[130.86514282 -178.09721375]
[121.89070892 -168.83319092]
[121.22092438 -153.84814453]
[130.13554382 -138.73204041]
[120.09677887 -123.29492188]
[119.65017700 -108.30156708]
[127.00511169 -95.34957123]
[118.86035919 -81.78588867]
[118.41374969 -66.79253387]
[117.96714020 -51.79918671]
[117.52053833 -36.80583572]
[125.58461761 -27.78933907]
[125.33524323 -15.29447651]
[116.36080933 -6.03044367]
[115.69102478 8.95459557]
[115.02124023 23.93963432]
[116.81122589 26.09696960]
[117.85451508 29.09332657]
[117.82725525 32.64785385]
[116.51315308 36.36775208]
[113.83915710 39.78882599]
[120.21039581 53.25198364]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[118.61487579 89.91793060]
[121.03797150 102.35908508]
[115.91954041 113.95456696]
[105.09439087 120.54772186]
[103.31192017 135.44143677]
[101.52945709 150.33515930]
[103.58534241 155.13311768]
[103.59433746 159.77566528]
[101.95840454 163.50912476]
[99.32038879 165.84861755]
[96.87465668 180.64788818]
[94.42893219 195.44715881]
[91.98320770 210.24642944]
[100.91672516 223.00691223]
[98.22559357 237.98063660]
[86.00536346 246.41874695]
[83.55963898 261.21801758]
[81.11391449 276.01727295]
[78.99929047 290.86749268]
[77.21681976 305.76119995]
[75.43435669 320.65490723]
[88.63220215 328.14440918]
[97.93208313 340.08407593]
[101.94140625 354.63531494]
[100.07925415 369.57250977]
[92.66027069 382.62332153]
[80.84207153 391.81439209]
[66.44468689 395.76971436]
[64.66222382 410.66342163]
[62.87975693 425.55715942]
[61.09729004 440.45086670]
[59.31482697 455.34457397]
[68.80314636 464.90420532]
[71.02088928 477.99206543]
[65.37931824 489.79269409]
[54.14023209 496.09448242]
[52.13621902 510.95999146]
[54.12044144 515.78802490]
[54.06031418 520.43023682]
[52.36898041 524.13891602]
[49.69642258 526.43884277]
[47.03062439 541.20007324]
[48.58509064 550.20129395]
[44.21368790 556.16052246]
[41.32841492 570.88043213]
[38.44314194 585.60028076]
[35.55786896 600.32019043]
[32.67259979 615.04010010]
[29.78732491 629.75994873]
[43.97190475 634.71765137]
[57.30651474 641.64361572]
[69.51968384 650.39685059]
[80.36276245 660.79919434]
[89.61500549 672.63879395]
[97.08804321 685.67468262]
[102.62973785 699.64141846]
[106.12726593 714.25469971]
[107.50942993 729.21704102]
[106.74807739 744.22375488]
[103.85871124 758.96929932]
[98.90016174 773.15356445]
[91.97338104 786.48779297]
[83.21938324 798.70037842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 189]
[35 188]
[36 184]
[37 183]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[51 168]
[52 167]
[53 166]
[57 165]
[58 164]
[59 163]
[62 160]
[63 159]
[64 158]
[65 157]
[66 153]
[67 152]
[68 151]
[71 147]
[72 146]
[74 144]
[75 139]
[76 138]
[77 137]
[79 134]
[80 133]
[81 132]
[82 131]
[84 129]
[85 128]
[88 126]
[89 125]
[91 122]
[92 121]
[93 120]
[94 119]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
