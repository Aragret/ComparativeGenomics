%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[96.64859772 730.38665771]
[84.89675903 720.81219482]
[77.13096619 707.79418945]
[74.28897858 692.90466309]
[76.71397400 677.94152832]
[84.11312103 664.71166992]
[95.59294128 654.81274414]
[109.76718903 649.43994141]
[109.54386139 634.44165039]
[109.32053375 619.44329834]
[109.09720612 604.44494629]
[108.87387848 589.44659424]
[100.94794464 576.83593750]
[108.47892761 562.92211914]
[108.25559998 547.92376709]
[108.03227234 532.92541504]
[100.10633850 520.31475830]
[107.63731384 506.40093994]
[107.41398621 491.40258789]
[107.19065857 476.40426636]
[106.96733093 461.40591431]
[106.74400330 446.40759277]
[91.09738159 442.30184937]
[77.22333527 433.95700073]
[66.24430084 422.03900146]
[59.05107498 407.50323486]
[56.23054504 391.51800537]
[58.01780319 375.37045288]
[64.27657318 360.36318970]
[74.50957489 347.70889282]
[87.89803314 338.43264771]
[103.36714935 333.28860474]
[102.69736481 318.30355835]
[102.02758026 303.31854248]
[101.35779572 288.33349609]
[100.68801117 273.34844971]
[97.24897003 266.80667114]
[100.12148285 258.13565063]
[99.67488098 243.14231873]
[99.22827148 228.14897156]
[98.78166962 213.15560913]
[95.44041443 206.56336975]
[98.44170380 197.93608093]
[98.21837616 182.93774414]
[97.99504852 167.93940735]
[97.21372986 152.95976257]
[95.87549591 138.01957703]
[94.53726196 123.07939148]
[93.19902802 108.13921356]
[91.19500732 93.27368164]
[88.52921295 78.51246643]
[85.86341858 63.75124741]
[81.89132690 58.46598053]
[81.27690125 52.81624603]
[83.34486389 48.51129913]
[81.11975098 33.67725372]
[78.89463043 18.84321022]
[76.66951752 4.00916672]
[64.98846436 -2.69662046]
[59.38414001 -14.72999191]
[61.69943619 -27.60327911]
[70.86855316 -36.65628052]
[68.86454010 -51.52180862]
[66.86052704 -66.38733673]
[52.41038513 -71.17845917]
[41.51779938 -81.72543335]
[36.30599213 -95.89784241]
[37.75841522 -110.86618805]
[45.53368759 -123.66676331]
[58.04383850 -131.78843689]
[56.03982544 -146.65396118]
[54.03580856 -161.51948547]
[52.03179550 -176.38502502]
[39.74751663 -185.96281433]
[37.92692566 -201.06712341]
[47.13359451 -212.71928406]
[45.12958145 -227.58480835]
[43.12556839 -242.45034790]
[41.12155151 -257.31585693]
[39.11753845 -272.18139648]
[37.11352539 -287.04693604]
[29.96161652 -273.86169434]
[17.22722244 -265.93484497]
[2.23908472 -265.33837891]
[-11.08493233 -272.22827148]
[-19.26196480 -284.80349731]
[-20.15455437 -299.77691650]
[-13.52937984 -313.23452759]
[-1.11824822 -321.65850830]
[13.83460236 -322.84689331]
[27.42053223 -316.48904419]
[36.08790207 -304.24768066]
[36.31122971 -319.24600220]
[28.78025055 -333.15985107]
[36.70618439 -345.77050781]
[36.92951202 -360.76885986]
[37.15283966 -375.76718140]
[37.37616730 -390.76553345]
[23.29554749 -396.43127441]
[12.21513844 -406.80377197]
[5.63347101 -420.48025513]
[4.44066191 -435.61108398]
[8.79802990 -450.14990234]
[18.11627579 -462.13052368]
[31.13518333 -469.93258667]
[46.09405136 -472.50097656]
[60.96981812 -469.48834229]
[73.75065613 -461.30209351]
[82.70806122 -449.04937744]
[86.63062286 -434.38726807]
[84.98784637 -419.29864502]
[78.00189209 -405.82418823]
[66.61756897 -395.78619385]
[52.37450409 -390.54220581]
[52.15117645 -375.54385376]
[51.92784882 -360.54553223]
[51.70452118 -345.54718018]
[59.25147247 -332.70611572]
[51.30956650 -319.02267456]
[51.08623886 -304.02435303]
[51.97905350 -289.05093384]
[53.98306656 -274.18542480]
[55.98707962 -259.31988525]
[57.99109650 -244.45436096]
[59.99510956 -229.58882141]
[61.99912262 -214.72329712]
[73.96269226 -205.92507935]
[76.20681763 -190.87786865]
[66.89732361 -178.38903809]
[68.90133667 -163.52349854]
[70.90534973 -148.65797424]
[72.90936279 -133.79244995]
[87.12359619 -129.27346802]
[98.01097107 -118.98880768]
[103.37526703 -104.93941498]
[102.10245514 -89.89281464]
[94.39162445 -76.83792877]
[81.72605133 -68.39134979]
[83.73006439 -53.52582169]
[85.73407745 -38.66029358]
[99.53170776 -29.04446793]
[102.15734100 -12.09097481]
[91.50355530 1.78404975]
[93.72867584 16.61809349]
[95.95379639 31.45213699]
[98.17890930 46.28618240]
[100.62463379 61.08545303]
[103.29043579 75.84667206]
[105.95623016 90.60788727]
[115.37644958 78.93486786]
[130.27635193 77.20485687]
[142.12059021 86.40887451]
[144.12425232 101.27445221]
[135.13954163 113.28590393]
[120.31331635 115.56253052]
[108.13920593 106.80097961]
[109.47744751 121.74115753]
[110.81568146 136.68135071]
[112.15391541 151.62153625]
[123.62841797 141.96049500]
[138.36521912 144.75814819]
[145.50088501 157.95217896]
[139.77526855 171.81642151]
[125.40908051 176.13069153]
[112.99338531 167.71607971]
[113.21671295 182.71441650]
[113.44004059 197.71275330]
[113.77501678 212.70901489]
[114.22162628 227.70236206]
[114.66822815 242.69570923]
[115.11483765 257.68905640]
[115.67304993 272.67868042]
[116.34283447 287.66369629]
[117.01261902 302.64874268]
[117.68240356 317.63378906]
[118.35218811 332.61883545]
[131.92903137 335.51806641]
[144.40434265 341.58666992]
[155.05097961 350.46563721]
[163.24961853 361.63229370]
[168.52488708 374.43109131]
[170.57281494 388.11209106]
[169.27838135 401.87487793]
[164.72200012 414.91537476]
[157.17448425 426.47293091]
[147.08100891 435.87454224]
[135.03480530 442.57415771]
[121.74234009 446.18426514]
[121.96566772 461.18258667]
[122.18899536 476.18093872]
[122.41232300 491.17926025]
[122.63565063 506.17761230]
[130.57756042 519.86108398]
[123.03060913 532.70208740]
[123.25393677 547.70043945]
[123.47726440 562.69879150]
[131.41917419 576.38226318]
[123.87221527 589.22326660]
[124.09554291 604.22161865]
[124.31887054 619.21997070]
[124.54219818 634.21832275]
[124.76552582 649.21661377]
[139.09346008 654.16497803]
[150.86291504 663.71777344]
[158.65269470 676.72143555]
[161.52210999 691.60571289]
[159.12471008 706.57330322]
[151.74995422 719.81677246]
[140.28839111 729.73687744]
[126.12406158 735.13574219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[14 196]
[15 195]
[16 194]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[38 171]
[39 170]
[40 169]
[41 168]
[43 167]
[44 166]
[45 165]
[46 159]
[47 158]
[48 157]
[49 156]
[50 149]
[51 148]
[52 147]
[55 146]
[56 145]
[57 144]
[58 143]
[62 140]
[63 139]
[64 138]
[70 132]
[71 131]
[72 130]
[73 129]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[92 120]
[93 119]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
