%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[77.81584167 339.93273926]
[81.27376556 354.57650757]
[81.89757538 369.61004639]
[79.66473389 384.48992920]
[74.65595245 398.67825317]
[67.05229950 411.66210938]
[57.12863159 422.97216797]
[45.24369431 432.19955444]
[31.82711601 439.01071167]
[17.36389732 443.15942383]
[2.37687564 444.49572754]
[-12.59217834 442.97128296]
[-27.00214195 438.64123535]
[-40.33210754 431.66207886]
[-52.10019684 422.28610229]
[-61.88101196 410.85229492]
[-69.32097626 397.77392578]
[-74.15113831 383.52380371]
[-76.19689178 368.61706543]
[-75.38428497 353.59252930]
[-71.74269104 338.99337769]
[-65.40375519 325.34735107]
[-56.59662628 313.14770508]
[-45.63967514 302.83551025]
[-32.92898560 294.78350830]
[-18.92404366 289.28274536]
[-4.13111877 286.53213501]
[10.91503429 286.63107300]
[25.67050552 289.57601929]
[31.33329201 275.68597412]
[36.99607849 261.79595947]
[42.65886688 247.90592957]
[48.32165146 234.01589966]
[53.46361160 219.92475891]
[58.07762146 205.65202332]
[51.08832932 192.54914856]
[55.56427002 178.00883484]
[69.35516357 170.76666260]
[73.96916962 156.49392700]
[78.58318329 142.22120667]
[83.19718933 127.94847107]
[79.74994659 113.45827484]
[91.35704803 102.70719147]
[90.10545349 99.05946350]
[90.46780396 94.87776947]
[92.64650726 90.89527893]
[96.50890350 87.90834808]
[101.75562286 73.85587311]
[107.00234222 59.80340576]
[112.24906158 45.75093460]
[108.78096008 27.66630363]
[122.74253082 17.03420448]
[127.77944946 2.90517449]
[116.80044556 13.12581635]
[103.32286835 19.71026802]
[88.51267242 22.08890724]
[73.65106964 20.05595970]
[60.02375031 13.78729248]
[48.80961227 3.82521105]
[40.97878647 -8.96846581]
[37.20872116 -23.48695755]
[37.82556152 -38.47426987]
[42.77594757 -52.63384628]
[51.63161850 -64.74075317]
[63.62647629 -73.74760437]
[77.72283936 -78.87522888]
[92.70123291 -79.68003845]
[107.26587677 -76.09239960]
[120.15678406 -68.42268372]
[130.25875854 -57.33440018]
[136.69789124 -43.78679657]
[138.91711426 -28.95186806]
[136.72547913 -14.11635876]
[145.50607300 -26.27781487]
[154.28668213 -38.43927002]
[163.06727600 -50.60072708]
[171.84788513 -62.76218033]
[179.02325439 -75.93465424]
[184.47860718 -89.90745544]
[189.93395996 -103.88025665]
[195.38932800 -117.85305023]
[200.84468079 -131.82585144]
[206.30003357 -145.79864502]
[205.51116943 -150.95857239]
[206.66503906 -155.45544434]
[209.18377686 -158.66027832]
[212.32360840 -160.26460266]
[218.39743042 -173.97987366]
[224.47126770 -187.69514465]
[230.54510498 -201.41041565]
[236.61894226 -215.12567139]
[223.62748718 -222.65357971]
[211.52610779 -231.54200745]
[200.45671082 -241.68673706]
[190.54905701 -252.96882629]
[181.91929626 -265.25601196]
[174.66864014 -278.40420532]
[168.88209534 -292.25927734]
[164.62747192 -306.65878296]
[161.95469666 -321.43386841]
[160.89506531 -336.41134644]
[161.46104431 -351.41555786]
[163.64596558 -366.27062988]
[167.42420959 -380.80239868]
[172.75151062 -394.84045410]
[179.56538391 -408.22024536]
[187.78593445 -420.78485107]
[197.31680298 -432.38699341]
[208.04623413 -442.89065552]
[219.84841919 -452.17263794]
[232.58500671 -460.12417603]
[246.10664368 -466.65197754]
[260.25482178 -471.67956543]
[274.86364746 -475.14794922]
[289.76181030 -477.01651001]
[304.77468872 -477.26327515]
[319.72622681 -475.88543701]
[334.44116211 -472.89904785]
[348.74691772 -468.33920288]
[362.47579956 -462.25933838]
[375.46685791 -454.73074341]
[387.56774902 -445.84167480]
[398.63662720 -435.69635010]
[408.54367065 -424.41372681]
[417.17276001 -412.12606812]
[424.42269897 -398.97747803]
[430.20849609 -385.12210083]
[434.46234131 -370.72238159]
[437.13433838 -355.94714355]
[438.19314575 -340.96960449]
[437.62637329 -325.96542358]
[435.44064331 -311.11044312]
[431.66162109 -296.57888794]
[426.33355713 -282.54113770]
[419.51898193 -269.16171265]
[411.29776001 -256.59753418]
[401.76626587 -244.99591064]
[391.03625488 -234.49282837]
[379.23358154 -225.21147156]
[366.49655151 -217.26063538]
[352.97457886 -210.73353577]
[338.82614136 -205.70672607]
[324.21713257 -202.23912048]
[309.31884766 -200.37138367]
[294.30596924 -200.12539673]
[279.35449219 -201.50407410]
[264.63973999 -204.49122620]
[250.33419800 -209.05184937]
[244.26037598 -195.33657837]
[238.18653870 -181.62130737]
[232.11270142 -167.90603638]
[226.03886414 -154.19078064]
[220.27282715 -140.34329224]
[214.81747437 -126.37049103]
[209.36212158 -112.39769745]
[203.90676880 -98.42489624]
[198.45140076 -84.45209503]
[192.99604797 -70.47930145]
[204.42994690 -80.18836975]
[218.37269592 -85.72006226]
[233.35289001 -86.49061584]
[247.78964233 -82.41870117]
[260.15939331 -73.93404388]
[269.15670776 -61.93205261]
[273.83215332 -47.67932129]
[273.69226074 -32.67997360]
[268.75180054 -18.51692772]
[259.53213501 -6.68484497]
[247.00628662 1.56760681]
[232.49610901 5.36952734]
[217.53288269 4.31969118]
[203.69573975 -1.47111070]
[192.44493103 -11.39176083]
[184.96778870 -24.39530945]
[182.05337524 -39.10945892]
[184.00933838 -53.98157883]
[175.22874451 -41.82012177]
[166.44813538 -29.65866661]
[157.66752625 -17.49721146]
[148.88693237 -5.33575583]
[141.90847778 7.94209051]
[136.87155151 22.07111931]
[141.77117920 33.13097382]
[137.69047546 44.94332123]
[126.30152893 50.99765015]
[121.05480957 65.05012512]
[115.80809784 79.10259247]
[110.56137848 93.15506744]
[105.62978363 107.32119751]
[108.74700165 122.83227539]
[97.46992493 132.56246948]
[92.85591888 146.83520508]
[88.24190521 161.10794067]
[83.62789917 175.38067627]
[90.56967926 189.32519531]
[85.68709564 203.73403931]
[72.35035706 210.26603699]
[67.73634338 224.53877258]
[82.07610321 220.13748169]
[94.54343414 228.47808838]
[95.94788361 243.41220093]
[85.25414276 253.93093872]
[70.34523773 252.28028870]
[62.21167755 239.67868042]
[56.54889297 253.56871033]
[50.88610458 267.45874023]
[45.22332001 281.34875488]
[39.56053162 295.23880005]
[52.16907501 303.44982910]
[62.99562836 313.89886475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[34 198]
[35 197]
[38 194]
[39 193]
[40 192]
[41 191]
[43 189]
[47 188]
[48 187]
[49 186]
[50 185]
[52 182]
[53 181]
[73 180]
[74 179]
[75 178]
[76 177]
[77 176]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
