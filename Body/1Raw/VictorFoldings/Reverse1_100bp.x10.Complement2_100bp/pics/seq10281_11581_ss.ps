%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[35.97529984 584.21807861]
[34.76832581 599.27532959]
[29.36684036 613.38208008]
[20.20872498 625.39477539]
[8.03638268 634.33966064]
[-6.16342592 639.49157715]
[-21.23958778 640.43286133]
[-35.96994400 637.08721924]
[-49.16037369 629.72589111]
[-59.74158859 618.94561768]
[-66.85581207 605.62030029]
[-69.92633057 590.83013916]
[-68.70422363 575.77410889]
[-63.28857040 561.67279053]
[-54.11839294 549.66925049]
[-41.93707275 540.73663330]
[-27.73209381 535.59899902]
[-12.65499401 534.67285156]
[-9.33273506 520.04541016]
[-6.01047516 505.41793823]
[-2.68821573 490.79046631]
[-4.06630564 488.34936523]
[-4.56047392 485.21530151]
[-3.90193892 481.72219849]
[-1.94765401 478.29504395]
[1.29176319 475.40365601]
[5.47877455 460.99987793]
[9.66578579 446.59609985]
[13.85279655 432.19232178]
[18.03980827 417.78854370]
[14.16266441 403.40740967]
[25.44452095 392.31549072]
[29.63153267 377.91171265]
[33.81854248 363.50793457]
[38.00555420 349.10415649]
[42.19256592 334.70037842]
[46.37957764 320.29660034]
[50.24388504 305.80288696]
[53.78355408 291.22653198]
[57.32322693 276.65014648]
[60.53650284 261.99835205]
[63.42177582 247.27847290]
[66.30704498 232.55857849]
[61.16234207 218.58068848]
[71.40964508 206.52650452]
[74.29491425 191.80661011]
[69.15020752 177.82873535]
[79.39750671 165.77453613]
[82.28278351 151.05464172]
[85.16805267 136.33476257]
[88.05332947 121.61486816]
[90.93859863 106.89497375]
[79.53491211 116.63950348]
[64.68801880 118.77725220]
[50.99840927 112.64582062]
[42.70794296 100.14509583]
[42.38552094 85.14855957]
[50.13103867 72.30305481]
[63.54447174 65.58890533]
[78.46952057 67.08656311]
[90.28149414 76.33195496]
[95.32034302 90.46055603]
[100.14633942 76.25810242]
[104.97233582 62.05564499]
[109.79833221 47.85319138]
[108.88715363 41.30480957]
[111.08924103 36.06574249]
[114.98522949 33.30344009]
[120.23194885 19.25096893]
[125.47866821 5.19849730]
[130.72538757 -8.85397339]
[135.97210693 -22.90644455]
[138.08673096 -37.75664139]
[136.97108459 -52.71509552]
[135.85543823 -67.67354584]
[134.73977661 -82.63200378]
[123.04736328 -92.92398834]
[122.12902832 -108.10988617]
[132.01292419 -119.19339752]
[130.89727783 -134.15184021]
[129.78161621 -149.11030579]
[128.55464172 -164.06002808]
[127.21641541 -179.00021362]
[117.83726501 -187.85427856]
[117.03022003 -200.32554626]
[124.68364716 -209.69313049]
[123.56800079 -224.65158081]
[122.45235443 -239.61003113]
[121.33670044 -254.56849670]
[120.22105408 -269.52694702]
[116.46204376 -277.85205078]
[119.20184326 -284.71612549]
[104.41873932 -287.73645020]
[90.92150879 -294.48086548]
[79.63041687 -304.48953247]
[71.31530762 -317.08007812]
[66.54311371 -331.39398193]
[65.63921356 -346.45538330]
[68.66523743 -361.23730469]
[75.41487122 -374.73193359]
[85.42790985 -386.01916504]
[98.02164459 -394.32940674]
[112.33740997 -399.09606934]
[127.39914703 -399.99417114]
[142.17991638 -396.96243286]
[155.67193604 -390.20758057]
[166.95529175 -380.19018555]
[175.26068115 -367.59326172]
[180.02182007 -353.27563477]
[180.91407776 -338.21356201]
[177.87664795 -323.43395996]
[171.11659241 -309.94454956]
[161.09484863 -298.66506958]
[148.49468994 -290.36456299]
[134.17524719 -285.60894775]
[135.17950439 -270.64260864]
[136.29515076 -255.68414307]
[137.41081238 -240.72569275]
[138.52645874 -225.76722717]
[139.64210510 -210.80877686]
[150.28981018 -196.85911560]
[142.15660095 -180.33845520]
[143.49482727 -165.39826965]
[147.22254944 -159.01658630]
[144.74008179 -150.22595215]
[145.85572815 -135.26750183]
[146.97137451 -120.30904388]
[158.39006042 -110.81434631]
[159.73457336 -95.66024017]
[149.69824219 -83.74765015]
[150.81388855 -68.78919983]
[151.92953491 -53.83074570]
[153.04518127 -38.87229156]
[158.67057800 -52.77750015]
[166.94522095 -65.28871155]
[177.53950500 -75.90761566]
[190.03147888 -84.21125031]
[203.92359924 -89.86890411]
[218.66255188 -92.65521240]
[233.66127014 -92.45922089]
[248.32237244 -89.28871918]
[262.06192017 -83.26998901]
[274.33264160 -74.64276123]
[284.64584351 -63.75065231]
[292.59072876 -51.02748871]
[297.85083008 -36.98003006]
[300.21670532 -22.16778183]
[299.59408569 -7.18070984]
[296.00775146 7.38425684]
[289.60055542 20.94700050]
[280.62771606 32.96732330]
[269.44662476 42.96646118]
[256.50256348 50.54615021]
[242.31114197 55.40449524]
[227.43757629 57.34798813]
[212.47428894 56.29922485]
[198.01725769 52.29997253]
[184.64228821 45.50952530]
[172.88209534 36.19833755]
[163.20512390 24.73727608]
[155.99674988 11.58282757]
[151.54412842 -2.74107099]
[150.02458191 -17.65972710]
[144.77786255 -3.60725570]
[139.53114319 10.44521523]
[134.28442383 24.49768639]
[129.03770447 38.55015945]
[124.00078583 52.67918777]
[119.17478943 66.88164520]
[114.34879303 81.08409882]
[109.52279663 95.28655243]
[105.65849304 109.78025055]
[102.77321625 124.50013733]
[99.88794708 139.22003174]
[97.00267029 153.93992615]
[94.11740112 168.65982056]
[99.05573273 183.69056702]
[89.01480865 194.69187927]
[86.12953186 209.41177368]
[91.06786346 224.44253540]
[81.02693939 235.44384766]
[78.14166260 250.16374207]
[75.25639343 264.88363647]
[76.94972992 269.82122803]
[76.61340332 274.45156860]
[74.70431519 278.05300903]
[71.89960480 280.18981934]
[68.35993195 294.76620483]
[64.82025909 309.34255981]
[66.29142761 314.35083008]
[65.74868011 318.96154785]
[63.68069077 322.47418213]
[60.78335953 324.48361206]
[56.59634781 338.88739014]
[52.40933609 353.29116821]
[48.22232819 367.69494629]
[44.03531647 382.09872437]
[39.84830475 396.50250244]
[43.42596436 411.91390991]
[32.44358826 421.97555542]
[28.25657845 436.37933350]
[24.06956673 450.78311157]
[19.88255692 465.18688965]
[15.69554520 479.59066772]
[11.93924427 494.11273193]
[8.61698532 508.74020386]
[5.29472542 523.36767578]
[1.97246599 537.99511719]
[15.17028427 545.34320068]
[25.76232147 556.11285400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 208]
[19 207]
[20 206]
[21 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 189]
[39 188]
[40 187]
[41 183]
[42 182]
[43 181]
[45 179]
[46 178]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[62 171]
[63 170]
[64 169]
[65 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 133]
[74 132]
[75 131]
[76 130]
[79 127]
[80 126]
[81 125]
[82 123]
[83 122]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
