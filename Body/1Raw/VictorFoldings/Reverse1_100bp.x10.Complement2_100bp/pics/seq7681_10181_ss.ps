%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[91.42963409 931.78320312]
[76.47199249 930.62145996]
[61.58396149 928.77020264]
[46.79731750 926.23333740]
[32.14360809 923.01629639]
[17.65411377 919.12585449]
[3.35975099 914.57049561]
[-10.70897484 909.35974121]
[-24.52203941 903.50482178]
[-38.04996490 897.01824951]
[-51.26388168 889.91381836]
[-64.13558960 882.20672607]
[-76.63762665 873.91333008]
[-88.74330139 865.05145264]
[-100.42678833 855.63995361]
[-111.66315460 845.69885254]
[-122.42841339 835.24945068]
[-132.69960022 824.31402588]
[-142.45478821 812.91595459]
[-151.67315674 801.07946777]
[-160.33503723 788.82989502]
[-168.42196655 776.19335938]
[-175.91664124 763.19677734]
[-182.80311584 749.86798096]
[-189.06665039 736.23535156]
[-194.69390869 722.32800293]
[-199.67286682 708.17559814]
[-203.99291992 693.80834961]
[-207.64482117 679.25689697]
[-210.62078857 664.55230713]
[-212.91447449 649.72601318]
[-214.52096558 634.80957031]
[-215.43687439 619.83489990]
[-215.66020203 604.83386230]
[-215.19050598 589.83850098]
[-214.02876282 574.88085938]
[-212.17747498 559.99285889]
[-209.64057922 545.20623779]
[-206.42347717 530.55249023]
[-202.53306580 516.06304932]
[-197.97761536 501.76867676]
[-192.76687622 487.69995117]
[-186.91194153 473.88690186]
[-180.42532349 460.35900879]
[-173.32086182 447.14508057]
[-165.61370850 434.27340698]
[-157.32032776 421.77139282]
[-148.45840454 409.66571045]
[-139.04685974 397.98226929]
[-129.10577393 386.74591064]
[-118.65636444 375.98068237]
[-107.72091675 365.70950317]
[-96.32279205 355.95434570]
[-84.48628998 346.73599243]
[-72.23668671 338.07412720]
[-59.60012054 329.98724365]
[-46.60355759 322.49258423]
[-33.27473068 315.60617065]
[-19.64208603 309.34265137]
[-5.73471737 303.71542358]
[8.41769791 298.73648071]
[22.78495598 294.41647339]
[37.33639908 290.76458740]
[52.04096985 287.78866577]
[66.86728668 285.49499512]
[81.78371429 283.88851929]
[96.75842285 282.97265625]
[96.53509521 267.97433472]
[96.31176758 252.97598267]
[95.97679138 237.97973633]
[95.53018188 222.98637390]
[95.08358002 207.99302673]
[94.63697052 192.99967957]
[94.19036865 178.00633240]
[93.74375916 163.01298523]
[83.22126770 155.57614136]
[78.83798981 143.25262451]
[82.40528870 130.46650696]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[84.76270294 32.92445374]
[92.50000000 20.19718170]
[92.50000000 5.19718266]
[92.50000000 -9.80281734]
[80.20933533 -1.20401108]
[65.78089905 -5.30526733]
[59.85080338 -19.08329201]
[66.79048920 -32.38143921]
[81.48428345 -35.39680862]
[93.09975433 -25.90807533]
[94.21540833 -40.86652756]
[95.33105469 -55.82498169]
[96.44670105 -70.78343964]
[82.36795807 -76.28619385]
[70.53768921 -85.69556427]
[62.00784683 -98.17487335]
[57.53689194 -112.61446381]
[57.52237701 -127.73039246]
[61.96559525 -142.17854309]
[70.47145844 -154.67420959]
[82.28363037 -164.10629272]
[96.35178375 -169.63606262]
[111.42498779 -170.77185059]
[126.16294098 -167.41265869]
[139.25514221 -159.85717773]
[149.53747559 -148.77722168]
[156.09561157 -135.15803528]
[158.34640503 -120.21061707]
[156.08975220 -105.26408386]
[149.52626038 -91.64746857]
[139.23959351 -80.57155609]
[126.14442444 -73.02120209]
[111.40515900 -69.66778564]
[110.28950500 -54.70933533]
[109.17385864 -39.75088120]
[108.05821228 -24.79242706]
[107.50000000 -9.80281734]
[107.50000000 5.19718266]
[107.50000000 20.19718170]
[115.23729706 32.92445374]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[120.60850525 133.67481995]
[120.78225708 150.82954407]
[108.73711395 162.56637573]
[109.18371582 177.55972290]
[109.63032532 192.55307007]
[110.07692719 207.54641724]
[110.52353668 222.53977966]
[110.97013855 237.53312683]
[114.35366821 246.01779175]
[111.31010437 252.75265503]
[111.53343201 267.75100708]
[111.75675964 282.74932861]
[126.75209808 283.21893311]
[141.70974731 284.38058472]
[156.59777832 286.23178101]
[171.38442993 288.76861572]
[186.03816223 291.98559570]
[200.52766418 295.87594604]
[214.82205200 300.43127441]
[228.89079285 305.64193726]
[242.70388794 311.49679565]
[256.23184204 317.98333740]
[269.44580078 325.08770752]
[282.31753540 332.79476929]
[294.81961060 341.08807373]
[306.92532349 349.94992065]
[318.60882568 359.36138916]
[329.84524536 369.30242920]
[340.61053467 379.75177002]
[350.88177490 390.68713379]
[360.63699341 402.08520508]
[369.85543823 413.92166138]
[378.51736450 426.17120361]
[386.60433960 438.80770874]
[394.09906006 451.80422974]
[400.98559570 465.13302612]
[407.24920654 478.76562500]
[412.87649536 492.67294312]
[417.85552979 506.82534790]
[422.17562866 521.19256592]
[425.82757568 535.74401855]
[428.80361938 550.44854736]
[431.09735107 565.27484131]
[432.70391846 580.19128418]
[433.61990356 595.16595459]
[433.84329224 610.16699219]
[433.37365723 625.16235352]
[432.21197510 640.11999512]
[430.36074829 655.00799561]
[427.82391357 669.79467773]
[424.60687256 684.44836426]
[420.71652222 698.93786621]
[416.16113281 713.23223877]
[410.95043945 727.30096436]
[405.09558105 741.11407471]
[398.60900879 754.64196777]
[391.50460815 767.85595703]
[383.79751587 780.72766113]
[375.50418091 793.22973633]
[366.64230347 805.33538818]
[357.23080444 817.01892090]
[347.28976440 828.25531006]
[336.84039307 839.02056885]
[325.90499878 849.29180908]
[314.50689697 859.04699707]
[302.67044067 868.26538086]
[290.42086792 876.92730713]
[277.78433228 885.01422119]
[264.78781128 892.50897217]
[251.45901489 899.39544678]
[237.82638550 905.65899658]
[223.91905212 911.28631592]
[209.76664734 916.26531982]
[195.39941406 920.58538818]
[180.84799194 924.23730469]
[166.14343262 927.21331787]
[151.31712341 929.50701904]
[136.40069580 931.11352539]
[121.42599487 932.02947998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 143]
[68 142]
[69 141]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[79 131]
[80 130]
[82 129]
[83 128]
[84 127]
[85 126]
[87 124]
[88 123]
[89 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
