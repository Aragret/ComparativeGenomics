%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[131.18281555 569.61718750]
[116.97550964 562.16522217]
[114.08518982 546.38470459]
[124.72907257 534.38104248]
[125.17567444 519.38769531]
[125.62228394 504.39434814]
[126.06888580 489.40100098]
[126.51549530 474.40765381]
[126.96209717 459.41430664]
[127.40870667 444.42092896]
[113.45788574 436.26696777]
[105.47682953 422.10864258]
[105.72634888 405.76376343]
[114.23303223 391.69494629]
[128.75611877 383.79104614]
[128.97944641 368.79269409]
[128.75611877 353.79437256]
[128.08633423 338.80932617]
[127.41654968 323.82427979]
[126.74676514 308.83926392]
[118.44888306 296.47015381]
[125.56225586 282.33825684]
[124.89246368 267.35324097]
[124.22267914 252.36819458]
[122.32939148 237.48815918]
[119.22528076 222.81285095]
[109.02167511 211.96223450]
[113.73567200 196.85963440]
[110.63156128 182.18432617]
[107.52745056 167.50903320]
[104.31417847 152.85723877]
[100.99192047 138.22978210]
[97.66966248 123.60231781]
[94.34739685 108.97486115]
[90.48309326 94.48117065]
[86.08209991 80.14131927]
[81.68109894 65.80147552]
[77.28009796 51.46162415]
[74.66726685 66.23230743]
[68.05053711 79.69406891]
[57.95174026 90.78524780]
[45.16730881 98.63115692]
[30.70547485 102.61302948]
[15.70675659 102.41684723]
[1.35401952 98.05806732]
[-11.22082138 89.88045502]
[-21.02606201 78.52892303]
[-27.28841972 64.89870453]
[-29.51401901 50.06473160]
[-27.52733994 35.19687653]
[-21.48505783 21.46768188]
[-11.86369705 9.95988369]
[0.57796484 1.58103895]
[14.85872650 -3.00806284]
[29.85234642 -3.44550610]
[44.37636566 0.30320826]
[57.28535843 7.94244099]
[67.56127167 18.86973000]
[74.39482880 32.22658539]
[74.39482880 17.22658348]
[74.39482880 2.22658372]
[71.26541901 -6.35506010]
[74.50815582 -12.99632835]
[74.73149109 -27.99466515]
[74.95481873 -42.99300385]
[66.54769897 -52.77478027]
[67.04248047 -65.26232910]
[75.62892914 -73.78285980]
[76.07553101 -88.77620697]
[76.52214050 -103.76956177]
[76.96874237 -118.76290894]
[77.30371857 -133.75917053]
[77.52704620 -148.75750732]
[77.75037384 -163.75584412]
[77.97370148 -178.75418091]
[69.56658173 -188.53596497]
[70.06136322 -201.02351379]
[78.64781952 -209.54403687]
[79.09442139 -224.53738403]
[79.54103088 -239.53073120]
[79.98763275 -254.52409363]
[65.47776031 -258.59213257]
[52.37114334 -266.01028442]
[41.42751694 -276.34353638]
[33.28004074 -288.98809814]
[28.39866257 -303.20660400]
[27.06302452 -318.17111206]
[29.34643745 -333.01141357]
[35.11188126 -346.86550903]
[44.02021027 -358.92971802]
[55.55010223 -368.50540161]
[69.02857208 -375.03921509]
[83.67023468 -378.15533447]
[84.11683655 -393.14868164]
[84.56344604 -408.14202881]
[70.10874939 -412.46917725]
[57.26705170 -420.39086914]
[46.91391373 -431.36697388]
[39.75522995 -444.64913940]
[36.27909088 -459.33175659]
[36.72251129 -474.41372681]
[41.05524826 -488.86672974]
[48.98189545 -501.70538330]
[59.96200180 -512.05426025]
[73.24691772 -519.20782471]
[87.93086243 -522.67828369]
[103.01266479 -522.22906494]
[117.46400452 -517.89074707]
[130.29959106 -509.95913696]
[140.64424133 -498.97503662]
[147.79266357 -485.68734741]
[151.25746155 -471.00207520]
[150.80239868 -455.92044067]
[146.45851135 -441.47076416]
[138.52194214 -428.63827515]
[127.53385162 -418.29785156]
[114.24341583 -411.15454102]
[99.55679321 -407.69543457]
[99.11019135 -392.70208740]
[98.66358185 -377.70870972]
[113.09381104 -373.72665405]
[126.15947723 -366.40216064]
[137.09898376 -356.15719604]
[145.27343750 -343.58413696]
[150.20405579 -329.41143799]
[151.60009766 -314.46154785]
[149.37612915 -299.60305786]
[143.65710449 -285.70031738]
[134.77145386 -273.56311035]
[123.23218536 -263.89956665]
[109.70727539 -257.27468872]
[94.98098755 -254.07748413]
[94.53437805 -239.08413696]
[94.08777618 -224.09078979]
[93.64116669 -209.09742737]
[102.77985382 -194.11573792]
[92.97204590 -178.53085327]
[92.74871826 -163.53251648]
[92.52539062 -148.53417969]
[92.30206299 -133.53584290]
[95.34562683 -126.80097198]
[91.96209717 -118.31630707]
[91.51548767 -103.32295227]
[91.06888580 -88.32960510]
[90.62227631 -73.33625793]
[99.76096344 -58.35455322]
[89.95315552 -42.76967621]
[89.72982788 -27.77133751]
[89.50650024 -12.77300072]
[89.39482880 2.22658372]
[89.39482880 17.22658348]
[89.39482880 32.22658539]
[91.61994934 47.06062698]
[96.02094269 61.40047455]
[100.42194366 75.74031830]
[104.82294464 90.08016968]
[114.04980469 78.25371552]
[129.04655457 77.94117737]
[138.75813293 89.37294006]
[136.02552795 104.12193298]
[122.86312866 111.31575775]
[108.97486115 105.65260315]
[112.29711914 120.28005981]
[115.61937714 134.90751648]
[118.94163513 149.53498840]
[123.89402008 157.21037292]
[122.20275116 164.40492249]
[125.30686188 179.08021545]
[128.41098022 193.75552368]
[138.83660889 205.65580750]
[133.90058899 219.70874023]
[137.00469971 234.38404846]
[142.71592712 220.51387024]
[154.15931702 210.81599426]
[168.77836609 207.45693970]
[183.30715942 211.18713379]
[194.49990845 221.17323303]
[199.85614014 235.18432617]
[198.17924500 250.09030151]
[189.84385681 262.56112671]
[176.71211243 269.81076050]
[161.71769714 270.21966553]
[148.21037292 263.69644165]
[139.20771790 251.69841003]
[139.87750244 266.68344116]
[140.54728699 281.66848755]
[148.89308167 295.10940552]
[141.73179626 308.16946411]
[142.40159607 323.15451050]
[143.07138062 338.13955688]
[143.74116516 353.12457275]
[146.20678711 356.69876099]
[147.29714966 360.49026489]
[147.11279297 364.04013062]
[145.89300537 366.96905518]
[143.97778320 369.01602173]
[143.75445557 384.01437378]
[156.11898804 390.55508423]
[164.41954041 401.73171997]
[167.08198547 415.32913208]
[163.64271545 428.68280029]
[154.82810974 439.20095825]
[142.40205383 444.86755371]
[141.95544434 459.86090088]
[141.50885010 474.85424805]
[141.06224060 489.84759521]
[140.61563110 504.84094238]
[140.16902161 519.83428955]
[139.72241211 534.82763672]
[149.63296509 547.44354248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[15 197]
[16 196]
[17 191]
[18 190]
[19 189]
[20 188]
[22 186]
[23 185]
[24 184]
[25 172]
[26 171]
[28 169]
[29 168]
[30 167]
[31 165]
[32 164]
[33 163]
[34 162]
[35 156]
[36 155]
[37 154]
[38 153]
[59 152]
[60 151]
[61 150]
[63 149]
[64 148]
[65 147]
[68 145]
[69 144]
[70 143]
[71 142]
[72 140]
[73 139]
[74 138]
[75 137]
[78 135]
[79 134]
[80 133]
[81 132]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
