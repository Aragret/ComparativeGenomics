%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[74.15816498 585.46008301]
[61.58109665 577.24237061]
[50.24020386 567.38854980]
[40.34675217 556.08221436]
[32.08505630 543.53393555]
[25.60902786 529.97760010]
[21.03930664 515.66564941]
[18.46102524 500.86477661]
[17.92221451 485.85067749]
[19.43291473 470.90304565]
[22.96498108 456.30038452]
[28.45261383 442.31466675]
[35.79357910 429.20651245]
[44.85112381 417.22006226]
[55.45650864 406.57867432]
[67.41216278 397.48052979]
[80.49536133 390.09515381]
[94.46236420 384.56011963]
[109.05297852 380.97857666]
[107.49246216 366.05996704]
[98.47306061 354.20669556]
[104.73268127 339.67645264]
[103.17215729 324.75787354]
[101.61163330 309.83926392]
[100.05110931 294.92065430]
[98.49058533 280.00204468]
[87.44411469 273.36843872]
[82.15638733 261.40505981]
[84.76282501 248.38903809]
[94.53156281 239.11614990]
[93.19332886 224.17596436]
[91.85509491 209.23577881]
[90.51686096 194.29559326]
[86.78915405 187.91390991]
[89.27162170 179.12327576]
[88.15596771 164.16482544]
[80.64286041 177.14762878]
[68.00641632 185.22972107]
[53.06964493 186.60554504]
[39.16946411 180.96772766]
[29.41120529 169.57579041]
[25.97489166 154.97470093]
[29.62820435 140.42639160]
[39.55498123 129.18098450]
[53.53755951 123.75074768]
[68.45218658 125.34879303]
[80.96691132 133.61811829]
[88.28590393 146.71136475]
[89.62413788 131.77117920]
[76.88217926 124.13777924]
[68.70610809 111.73704529]
[66.71073914 97.01818848]
[71.29017639 82.88825226]
[81.53994751 72.13797760]
[95.43567657 66.89058685]
[96.77391052 51.95040512]
[98.11214447 37.01021957]
[99.45037842 22.07003593]
[100.78861237 7.12985039]
[94.31335449 -7.30557966]
[103.15527344 -19.29181099]
[96.68001556 -33.72724152]
[105.52193451 -45.71347427]
[99.04668427 -60.14890289]
[107.88859558 -72.13513184]
[109.22682953 -87.07531738]
[108.33401489 -102.04872894]
[105.22990417 -116.72402954]
[92.26728821 -125.36163330]
[89.32833099 -140.28869629]
[97.64285278 -152.59333801]
[94.53874207 -167.26864624]
[91.43463135 -181.94395447]
[88.33052063 -196.61924744]
[85.22640991 -211.29455566]
[70.24984741 -210.12945557]
[55.24933243 -210.92921448]
[40.48155212 -213.68016052]
[26.19919968 -218.33518982]
[12.64666462 -224.81468201]
[0.05585007 -233.00776672]
[-11.35779953 -242.77421570]
[-21.39898109 -253.94692993]
[-29.89587593 -266.33474731]
[-36.70309448 -279.72567749]
[-41.70415115 -293.89056396]
[-44.81347656 -308.58706665]
[-45.97786331 -323.56369019]
[-45.17738724 -338.56417847]
[-42.42574692 -353.33181763]
[-37.77002335 -367.61395264]
[-31.28988647 -381.16616821]
[-23.09621620 -393.75659180]
[-13.32921791 -405.16976929]
[-2.15601945 -415.21041870]
[10.23219204 -423.70672607]
[23.62343979 -430.51330566]
[37.78857803 -435.51370239]
[52.48522568 -438.62231445]
[67.46190643 -439.78601074]
[82.46234131 -438.98480225]
[97.22985840 -436.23245239]
[111.51177216 -431.57604980]
[125.06369019 -425.09527588]
[137.65371704 -416.90100098]
[149.06643677 -407.13348389]
[159.10655212 -395.95977783]
[167.60227966 -383.57116699]
[174.40821838 -370.17959595]
[179.40792847 -356.01422119]
[182.51585388 -341.31744385]
[183.67881775 -326.34069824]
[182.87690735 -311.34030151]
[180.12385559 -296.57290649]
[175.46678162 -282.29122925]
[168.98535156 -268.73962402]
[160.79048157 -256.14996338]
[151.02239990 -244.73771667]
[139.84825134 -234.69813538]
[127.45922852 -226.20300293]
[114.06732941 -219.39770508]
[99.90171814 -214.39866638]
[103.00582886 -199.72335815]
[106.10993195 -185.04806519]
[109.21404266 -170.37275696]
[112.31815338 -155.69744873]
[124.90296936 -147.81341553]
[128.26004028 -132.97479248]
[119.90521240 -119.82814026]
[123.00931549 -105.15283203]
[126.92951202 -119.63151550]
[134.72085571 -132.44927979]
[145.76889038 -142.59526062]
[159.20231628 -149.26930237]
[173.96173096 -151.94508362]
[188.88313293 -150.41156006]
[202.78976440 -144.78967285]
[214.58488464 -135.52279663]
[223.33828735 -123.34175110]
[228.35964966 -109.20719147]
[229.25296021 -94.23381042]
[225.94775391 -79.60248566]
[218.70471191 -66.46710205]
[208.09503174 -55.86357117]
[194.95545959 -48.62812805]
[180.32223511 -45.33139420]
[165.34938049 -46.23336029]
[151.21771240 -51.26289368]
[139.04173279 -60.02334595]
[129.78169250 -71.82383728]
[124.16701508 -85.73708344]
[122.82878113 -70.79689789]
[129.39976501 -57.43009186]
[120.46212006 -44.37524033]
[127.03309631 -31.00843048]
[118.09545898 -17.95357704]
[124.66643524 -4.58676910]
[115.72879791 8.46808434]
[114.39056396 23.40826988]
[113.05233002 38.34845352]
[111.71409607 53.28863907]
[110.37586212 68.22882843]
[123.11782074 75.86222076]
[131.29389954 88.26295471]
[133.28926086 102.98181152]
[128.70982361 117.11174774]
[118.46005249 127.86202240]
[104.56432343 133.10940552]
[103.22608948 148.04959106]
[103.11442566 163.04917908]
[104.23007202 178.00762939]
[105.45704651 192.95736694]
[106.79528046 207.89755249]
[108.13351440 222.83773804]
[109.47174835 237.77792358]
[123.09885406 248.74703979]
[124.54803467 265.84130859]
[113.40919495 278.44152832]
[114.96971893 293.36013794]
[116.53023529 308.27871704]
[118.09075928 323.19732666]
[119.65128326 338.11593628]
[128.78230286 351.03628540]
[122.41106415 364.49945068]
[123.97158813 379.41802979]
[138.98753357 379.90267944]
[153.79763794 382.42755127]
[168.12596130 386.94561768]
[181.70558167 393.37271118]
[194.28353882 401.58908081]
[205.62550354 411.44168091]
[215.52017212 422.74694824]
[223.78323364 435.29428101]
[230.26072693 448.84994507]
[234.83200073 463.16137695]
[237.41188049 477.96197510]
[237.95231628 492.97604370]
[236.44323730 507.92382812]
[232.91275024 522.52691650]
[227.42663574 536.51318359]
[220.08708191 549.62213135]
[211.03083801 561.60955811]
[200.42660522 572.25207520]
[188.47193909 581.35156250]
[175.38954163 588.73834229]
[161.42312622 594.27484131]
[146.83290100 597.85803223]
[131.89065552 599.42102051]
[116.87474823 598.93475342]
[102.06493378 596.40826416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 185]
[20 184]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[30 175]
[31 174]
[32 173]
[33 172]
[35 171]
[36 170]
[48 169]
[49 168]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[61 156]
[63 154]
[65 152]
[66 151]
[67 130]
[68 129]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
