%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[171.82949829 635.22991943]
[170.71385193 620.27148438]
[169.59820557 605.31304932]
[168.48255920 590.35455322]
[167.36691284 575.39611816]
[158.70443726 563.27960205]
[165.39389038 548.94213867]
[164.27824402 533.98370361]
[163.16259766 519.02526855]
[147.87319946 517.02893066]
[133.32469177 511.90390015]
[120.15015411 503.87078857]
[108.92343903 493.27670288]
[100.13411713 480.58041382]
[94.16612244 466.33239746]
[91.28102112 451.15103149]
[91.60649872 435.69573975]
[95.13076019 420.63833618]
[101.70291138 406.63375854]
[111.03940582 394.29171753]
[122.73632812 384.15005493]
[136.28680420 376.65136719]
[151.10302734 372.12359619]
[149.76478577 357.18341064]
[148.42655945 342.24322510]
[147.08831787 327.30303955]
[145.75009155 312.36285400]
[131.02139282 301.49172974]
[128.87953186 282.98968506]
[141.14857483 268.55416870]
[139.36610413 253.66043091]
[137.58364868 238.76672363]
[134.26138306 224.13926697]
[129.43537903 209.93679810]
[124.60939026 195.73434448]
[119.78339386 181.53189087]
[114.95738983 167.32943726]
[110.13139343 153.12698364]
[93.27055359 153.66410828]
[77.06439972 148.98040771]
[63.08958054 139.53153992]
[52.70567322 126.23677063]
[46.92288971 110.38949585]
[46.30382156 93.53146362]
[50.90869904 77.30274200]
[60.28952408 63.28216171]
[73.53366852 52.83375549]
[68.07830811 38.86095810]
[62.62295532 24.88815880]
[57.16759491 10.91536140]
[51.71223831 -3.05743647]
[45.67607117 -9.91327190]
[46.28137970 -17.27909851]
[41.03466034 -31.33156967]
[35.78794479 -45.38404083]
[30.54122543 -59.43651199]
[25.69307137 -63.93172455]
[24.08435631 -69.38232422]
[25.35432434 -73.98625946]
[20.52832794 -88.18872070]
[8.76244354 -98.76579285]
[11.99356842 -113.30570984]
[7.16757107 -127.50816345]
[-7.50620461 -132.19714355]
[-16.50018501 -144.48379517]
[-16.53435135 -159.53247070]
[-7.80517912 -171.57154846]
[-12.63117695 -185.77401733]
[-17.45717430 -199.97647095]
[-22.28317261 -214.17892456]
[-27.10916901 -228.38137817]
[-32.82651138 -214.51371765]
[-45.54234695 -206.55711365]
[-60.51397705 -207.47917175]
[-72.15736389 -216.93600464]
[-76.12979889 -231.40043640]
[-70.94967651 -245.47758484]
[-58.54904556 -253.91703796]
[-43.55303574 -253.57107544]
[-31.55411339 -244.56779480]
[-34.65822220 -259.24310303]
[-37.76233292 -273.91839600]
[-40.86644363 -288.59368896]
[-43.97055435 -303.26901245]
[-47.07466507 -317.94430542]
[-50.17877197 -332.61959839]
[-65.24599457 -333.11178589]
[-79.75741577 -337.19616699]
[-92.86935425 -344.63528442]
[-103.81950378 -354.99664307]
[-111.97122955 -367.67785645]
[-116.85061646 -381.94161987]
[-118.17396545 -396.95867920]
[-115.86434937 -411.85595703]
[-110.05604553 -425.76736450]
[-101.08673859 -437.88409424]
[-89.47789764 -447.50167847]
[-75.90443420 -454.06100464]
[-61.15550613 -457.18069458]
[-46.08858490 -456.67935181]
[-31.57964516 -452.58618164]
[-18.47221947 -445.13909912]
[-7.52835512 -434.77111816]
[0.61568618 -422.08499146]
[5.48642015 -407.81826782]
[6.80066824 -392.80038452]
[4.48202276 -377.90451050]
[-1.33471382 -363.99664307]
[-10.31136417 -351.88534546]
[-21.92603683 -342.27481079]
[-35.50347137 -335.72372437]
[-32.39936066 -321.04840088]
[-29.29525185 -306.37310791]
[-26.19114113 -291.69781494]
[-23.08703041 -277.02249146]
[-19.98291969 -262.34719849]
[-16.87881088 -247.67190552]
[-12.90671444 -233.20738220]
[-8.08071709 -219.00491333]
[-3.25471902 -204.80245972]
[1.57127869 -190.60000610]
[6.39727640 -176.39755249]
[20.65415001 -172.16912842]
[29.79551888 -160.21507263]
[30.14919662 -144.99244690]
[21.37002754 -132.33416748]
[26.19602394 -118.13170624]
[37.61672211 -108.57048035]
[34.73078156 -93.01471710]
[39.55678177 -78.81225586]
[44.59369659 -64.68322754]
[49.84041595 -50.63076019]
[55.08713531 -36.57828903]
[60.33385086 -22.52581596]
[65.68503571 -8.51279354]
[71.14039612 5.46000433]
[76.59574890 19.43280220]
[82.05110931 33.40560150]
[87.50646210 47.37839890]
[100.49913025 45.91791153]
[113.46261597 47.61794662]
[125.63936615 52.37915802]
[136.31776428 59.92330170]
[144.87376404 69.80950165]
[150.80738831 81.46001434]
[153.77185059 94.19399261]
[153.59391785 107.26727295]
[150.28399658 119.91585541]
[144.03550720 131.40057373]
[135.21360779 141.05024719]
[124.33385468 148.30097961]
[129.15985107 162.50343323]
[133.98583984 176.70590210]
[138.81184387 190.90835571]
[143.63784790 205.11080933]
[148.46383667 219.31326294]
[151.52102661 204.62811279]
[159.90162659 192.18763733]
[172.36244202 183.83731079]
[187.05499268 180.81584167]
[201.79969788 183.57145691]
[214.40928650 191.69538879]
[223.01321411 203.98248291]
[226.33511353 218.61001587]
[223.88221741 233.40809631]
[216.01838684 246.18151855]
[203.91018677 255.03541565]
[189.35377502 258.65634155]
[174.50854492 256.50720215]
[161.57666016 248.90676880]
[152.47735596 236.98425293]
[154.25982666 251.87797546]
[156.04229736 266.77169800]
[166.63960266 272.15997314]
[173.25233459 281.89511108]
[174.33341980 293.49359131]
[169.72946167 304.06332397]
[160.69027710 311.02459717]
[162.02850342 325.96478271]
[163.36674500 340.90496826]
[164.70497131 355.84515381]
[166.04321289 370.78533936]
[180.56195068 372.41720581]
[194.47607422 376.85662842]
[207.24836731 383.93014526]
[218.38609314 393.36264038]
[227.45999146 404.78805542]
[234.12088013 417.76358032]
[238.11300659 431.78671265]
[239.28393555 446.31494141]
[237.59036255 460.78656006]
[233.09965515 474.64242554]
[225.98727417 487.34756470]
[216.52981567 498.41180420]
[205.09431458 507.40881348]
[192.12399292 513.99230957]
[178.12104797 517.90960693]
[179.23669434 532.86804199]
[180.35234070 547.82647705]
[189.09461975 561.01300049]
[182.32536316 574.28045654]
[183.44100952 589.23895264]
[184.55665588 604.19738770]
[185.67231750 619.15582275]
[186.78796387 634.11425781]
[198.92555237 644.23626709]
[200.26759338 659.98345947]
[190.01785278 672.01336670]
[174.25733948 673.18884277]
[162.33647156 662.81250000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[7 199]
[8 198]
[9 197]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[30 173]
[31 172]
[32 171]
[33 156]
[34 155]
[35 154]
[36 153]
[37 152]
[38 151]
[47 139]
[48 138]
[49 137]
[50 136]
[51 135]
[53 134]
[54 133]
[55 132]
[56 131]
[59 130]
[60 129]
[62 127]
[63 126]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
