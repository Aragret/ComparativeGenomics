%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-58.45114136 348.47253418]
[-54.53128052 362.96621704]
[-52.17423630 377.79443359]
[-51.40671539 392.78921509]
[-52.23741531 407.78060913]
[-54.65692139 422.59875488]
[-58.63782120 437.07580566]
[-64.13500977 451.04766846]
[-71.08618927 464.35604858]
[-79.41261292 476.85015869]
[-89.01992798 488.38842773]
[-99.79927063 498.84011841]
[-111.62851715 508.08679199]
[-124.37361908 516.02368164]
[-137.89016724 522.56091309]
[-152.02500916 527.62432861]
[-166.61799622 531.15655518]
[-181.50376892 533.11767578]
[-196.51367188 533.48535156]
[-211.47760010 532.25549316]
[-226.22604370 529.44201660]
[-240.59185791 525.07672119]
[-254.41227722 519.20922852]
[-267.53073120 511.90585327]
[-279.79852295 503.24948120]
[-291.07669067 493.33813477]
[-301.23742676 482.28408813]
[-310.16561890 470.21267700]
[-317.76010132 457.26058960]
[-323.93481445 443.57464600]
[-328.61978149 429.30990601]
[-331.76193237 414.62799072]
[-333.32568359 399.69522095]
[-333.29327393 384.68087769]
[-331.66510010 369.75500488]
[-328.45959473 355.08679199]
[-323.71310425 340.84240723]
[-317.47940063 327.18322754]
[-309.82910156 314.26406860]
[-300.84887695 302.23126221]
[-290.64050293 291.22122192]
[-279.31967163 281.35861206]
[-267.01461792 272.75524902]
[-253.86479187 265.50860596]
[-240.01916504 259.70077515]
[-225.63464355 255.39758301]
[-210.87420654 252.64775085]
[-195.90509033 251.48248291]
[-180.89692688 251.91494751]
[-166.01976013 253.94026184]
[-151.44215393 257.53549194]
[-137.32929993 262.65985107]
[-123.84107971 269.25534058]
[-111.13035583 277.24716187]
[-99.34113312 286.54483032]
[-88.85363007 275.82043457]
[-85.48699188 261.31130981]
[-70.30652618 256.85443115]
[-59.81902313 246.13003540]
[-58.97564697 241.42921448]
[-55.17028809 237.20828247]
[-48.85600662 235.24833679]
[-38.05385208 224.84095764]
[-27.25169563 214.43359375]
[-16.52731514 203.94609070]
[-5.88130665 193.37904358]
[4.76470232 182.81199646]
[15.41071129 172.24494934]
[26.05671883 161.67790222]
[36.70272827 151.11083984]
[47.34873581 140.54379272]
[49.88151169 133.60067749]
[58.23279190 129.90014648]
[69.03495026 119.49277496]
[79.83710480 109.08540344]
[90.63925934 98.67803192]
[91.92163086 93.59182739]
[95.96242523 89.58616638]
[101.92140198 88.12756348]
[113.02864075 78.04642487]
[124.13587189 67.96528625]
[129.15460205 52.96118546]
[143.77897644 50.13682938]
[154.88619995 40.05569077]
[165.99343872 29.97455025]
[170.24479675 21.88976288]
[177.34190369 19.82751656]
[188.59799194 9.91286469]
[199.85409546 -0.00178618]
[210.18075562 -10.88112068]
[219.49565125 -22.63837242]
[228.81053162 -34.39562225]
[238.12541199 -46.15287399]
[240.63058472 -61.77448273]
[254.59873962 -66.94552612]
[263.91363525 -78.70278168]
[273.22851562 -90.46002960]
[282.54339600 -102.21728516]
[291.85827637 -113.97453308]
[281.14694214 -124.49592590]
[271.61468506 -136.09626770]
[263.36950684 -148.64413452]
[256.50479126 -161.99732971]
[251.09834290 -176.00456238]
[247.21144104 -190.50711060]
[244.88810730 -205.34066772]
[244.15466309 -220.33712769]
[245.01943970 -235.32659912]
[247.47262573 -250.13923645]
[251.48641968 -264.60717773]
[257.01535034 -278.56652832]
[263.99676514 -291.85906982]
[272.35156250 -304.33422852]
[281.98507690 -315.85061646]
[292.78814697 -326.27780151]
[304.63836670 -335.49755859]
[317.40148926 -343.40548706]
[330.93286133 -349.91192627]
[345.07919312 -354.94320679]
[359.68014526 -358.44229126]
[374.57034302 -360.36953735]
[389.58102417 -360.70312500]
[404.54214478 -359.43923950]
[419.28414917 -356.59222412]
[433.64001465 -352.19433594]
[447.44705200 -346.29537964]
[460.54885864 -338.96224976]
[472.79696655 -330.27801514]
[484.05255127 -320.34103394]
[494.18817139 -309.26394653]
[503.08889771 -297.17227173]
[510.65390015 -284.20297241]
[516.79748535 -270.50302124]
[521.45001221 -256.22766113]
[524.55877686 -241.53862000]
[526.08862305 -226.60237122]
[526.02209473 -211.58811951]
[524.35998535 -196.66600037]
[521.12115479 -182.00509644]
[516.34228516 -167.77153015]
[510.07754517 -154.12655640]
[502.39788818 -141.22480774]
[493.39035034 -129.21246338]
[483.15698242 -118.22563934]
[471.81375122 -108.38880920]
[459.48919678 -99.81343842]
[446.32290649 -92.59669495]
[432.46414185 -86.82035065]
[418.06985474 -82.54985046]
[403.30322266 -79.83359528]
[388.33148193 -78.70233917]
[373.32434082 -79.16892242]
[358.45181274 -81.22805023]
[343.88241577 -84.85639191]
[329.78125000 -90.01282501]
[316.30804443 -96.63893890]
[303.61553955 -104.65965271]
[294.30065918 -92.90239716]
[284.98577881 -81.14514923]
[275.67086792 -69.38790131]
[266.35598755 -57.63064575]
[264.51708984 -42.84999466]
[249.88265991 -36.83798981]
[240.56777954 -25.08073997]
[231.25289917 -13.32348919]
[221.93801880 -1.56623769]
[236.13810730 -6.39916229]
[251.03906250 -4.67825031]
[263.76373291 3.26421738]
[271.85519409 15.89467430]
[273.75109863 30.77437782]
[269.08535767 45.03028870]
[258.75891113 55.90981674]
[244.76556396 61.31229401]
[229.80726624 60.19458389]
[216.77221680 52.77250290]
[208.17726135 40.47913742]
[205.68197632 25.68814468]
[209.76875305 11.25430965]
[198.51264954 21.16896057]
[187.25656128 31.08361244]
[176.07458496 41.08178329]
[164.96734619 51.16292191]
[153.86010742 61.24406052]
[149.63584900 75.52708435]
[134.21701050 79.07251740]
[123.10977936 89.15365601]
[112.00254059 99.23479462]
[101.04663086 109.48018646]
[90.24447632 119.88755798]
[79.44232178 130.29493713]
[68.64016724 140.70230103]
[57.91578674 151.18980408]
[47.26977539 161.75685120]
[36.62376785 172.32389832]
[25.97775841 182.89094543]
[15.33174992 193.45799255]
[4.68574095 204.02503967]
[-5.96026754 214.59210205]
[-9.84637737 222.85865784]
[-16.84432220 225.23574829]
[-27.64647865 235.64311218]
[-38.44863510 246.05049133]
[-49.09464264 256.61752319]
[-59.58214569 267.34191895]
[-63.69891739 282.61813354]
[-78.12924957 286.30795288]
[-88.61675262 297.03231812]
[-79.05814362 308.61096191]
[-70.78444672 321.14004517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 208]
[56 207]
[58 205]
[59 204]
[62 203]
[63 202]
[64 201]
[65 199]
[66 198]
[67 197]
[68 196]
[69 195]
[70 194]
[71 193]
[73 192]
[74 191]
[75 190]
[76 189]
[79 188]
[80 187]
[81 186]
[83 184]
[84 183]
[85 182]
[87 181]
[88 180]
[89 179]
[90 166]
[91 165]
[92 164]
[93 163]
[95 161]
[96 160]
[97 159]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
