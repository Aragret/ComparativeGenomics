%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[-16.12963486 327.33477783]
[-13.46270180 342.10946655]
[-12.32907486 357.08007812]
[-12.74077129 372.08789062]
[-14.69342709 386.97384644]
[-18.16634178 401.58010864]
[-23.12270164 415.75186157]
[-29.50996780 429.33886719]
[-37.26042938 442.19711304]
[-46.29192734 454.19027710]
[-56.50872421 465.19122314]
[-67.80251312 475.08337402]
[-80.05358124 483.76181030]
[-93.13204956 491.13458252]
[-106.89928436 497.12350464]
[-121.20935059 501.66510010]
[-135.91053772 504.71124268]
[-150.84703064 506.22961426]
[-165.86047363 506.20413208]
[-180.79171753 504.63507080]
[-195.48248291 501.53903198]
[-209.77703857 496.94888306]
[-223.52388000 490.91326904]
[-236.57723999 483.49615479]
[-248.79878235 474.77618408]
[-260.05892944 464.84576416]
[-270.23831177 453.81018066]
[-279.22906494 441.78643799]
[-286.93582153 428.90194702]
[-293.27694702 415.29333496]
[-298.18515015 401.10485840]
[-301.60848999 386.48687744]
[-303.51058960 371.59439087]
[-303.87133789 356.58526611]
[-302.68692017 341.61859131]
[-299.96984863 326.85305786]
[-295.74893188 312.44512939]
[-290.06893921 298.54757690]
[-282.99008179 285.30773926]
[-274.58740234 272.86590576]
[-264.94995117 261.35403442]
[-254.17988586 250.89411926]
[-242.39138794 241.59704590]
[-229.70944214 233.56137085]
[-216.26844788 226.87226868]
[-202.21092224 221.60066223]
[-187.68585205 217.80244446]
[-172.84724426 215.51783752]
[-157.85235596 214.77110291]
[-142.86016846 215.57011414]
[-128.02961731 217.90644836]
[-113.51788330 221.75529480]
[-99.47881317 227.07588196]
[-86.06123352 233.81181335]
[-73.40737915 241.89166260]
[-61.65138245 251.22978210]
[-51.16387939 240.50540161]
[-40.67638016 229.78102112]
[-30.18887711 219.05664062]
[-19.70137596 208.33226013]
[-9.21387482 197.60787964]
[1.27362597 186.88349915]
[11.76112747 176.15911865]
[22.24862862 165.43473816]
[32.73612976 154.71035767]
[33.57950211 150.00953674]
[37.38486481 145.78860474]
[43.69914627 143.82865906]
[54.50130081 133.42127991]
[65.30345917 123.01390839]
[69.10059357 108.61144257]
[84.40702820 104.60851288]
[85.32504272 92.99823761]
[93.77213287 84.98025513]
[105.41446686 84.66824341]
[116.37036896 74.42285919]
[127.32627869 64.17746735]
[138.28219604 53.93207169]
[149.23809814 43.68667984]
[160.19401550 33.44128799]
[171.14991760 23.19589806]
[182.10583496 12.95050621]
[193.06173706 2.70511413]
[204.01765442 -7.54027748]
[214.09878540 -18.64751053]
[223.23759460 -30.54214478]
[232.37638855 -42.43677521]
[239.15638733 -55.81705093]
[243.34339905 -70.22083282]
[247.53041077 -84.62461090]
[251.71742249 -99.02839661]
[248.13975525 -114.43978882]
[259.12213135 -124.50143433]
[263.30914307 -138.90521240]
[267.49615479 -153.30899048]
[253.87222290 -159.65634155]
[241.37693787 -168.00907898]
[230.30320740 -178.17141724]
[220.91061401 -189.90510559]
[213.41932678 -202.93511963]
[208.00497437 -216.95600891]
[204.79446411 -231.63908386]
[203.86305237 -246.64018250]
[205.23255920 -261.60763550]
[208.87091064 -276.19061279]
[214.69281006 -290.04724121]
[222.56176758 -302.85269165]
[232.29335022 -314.30682373]
[243.65940857 -324.14111328]
[256.39352417 -332.12503052]
[270.19717407 -338.07141113]
[284.74679565 -341.84088135]
[299.70132446 -343.34506226]
[314.71020508 -342.54873657]
[329.42156982 -339.47052002]
[343.49063110 -334.18258667]
[356.58755493 -326.80889893]
[368.40533447 -317.52230835]
[378.66693115 -306.54052734]
[387.13180542 -294.12091064]
[393.60153198 -280.55468750]
[397.92443848 -266.15979004]
[399.99923706 -251.27369690]
[399.77722168 -236.24536133]
[397.26364136 -221.42704773]
[392.51742554 -207.16612244]
[385.64981079 -193.79690552]
[376.82177734 -181.63276672]
[366.24026489 -170.95884705]
[354.15335083 -162.02537537]
[340.84436035 -155.04176331]
[326.62524414 -150.17172241]
[311.82934570 -147.52938843]
[296.80349731 -147.17672729]
[281.89993286 -149.12197876]
[277.71292114 -134.71820068]
[273.52590942 -120.31442261]
[277.40304565 -105.93328857]
[266.12118530 -94.84138489]
[261.93417358 -80.43760681]
[257.74716187 -66.03382111]
[253.56016541 -51.63003922]
[263.68917847 -62.69363785]
[276.06979370 -71.16239929]
[290.05261230 -76.59205627]
[304.90408325 -78.69779205]
[319.84512329 -77.36914062]
[334.09194946 -72.67579651]
[346.89724731 -64.86396790]
[357.58923340 -54.34344101]
[365.60702515 -41.66610718]
[370.53005981 -27.49699593]
[372.10006714 -12.57938576]
[370.23468018 2.30417371]
[365.03176880 16.37292099]
[356.76425171 28.88883591]
[345.86581421 39.19536209]
[332.90820312 46.75183487]
[318.57113647 51.16186142]
[303.60668945 52.19409943]
[288.79989624 49.79439926]
[274.92745972 44.08864212]
[262.71713257 35.37614441]
[252.80940247 24.11394501]
[245.72404480 10.89283466]
[241.83274841 -3.59363127]
[241.33959961 -18.58552361]
[244.27102661 -33.29797363]
[235.13221741 -21.40334129]
[225.99342346 -9.50870895]
[240.24780273 -14.17911243]
[255.05490112 -11.78127289]
[267.10678101 -2.85087299]
[273.71102905 10.61701298]
[273.39224243 25.61362457]
[266.22161865 38.78868103]
[253.80108643 47.19884109]
[238.90545654 48.96525192]
[224.86244202 43.69329453]
[214.80926514 32.56073761]
[210.99186707 18.05462265]
[214.26304626 3.41563201]
[203.30712891 13.66102314]
[192.35122681 23.90641594]
[181.39530945 34.15180588]
[170.43940735 44.39719772]
[159.48348999 54.64258957]
[148.52758789 64.88798523]
[137.57167053 75.13336945]
[126.61576080 85.37876129]
[115.65985107 95.62415314]
[111.19393158 111.79300690]
[94.81440735 115.41066742]
[90.24462891 130.55754089]
[75.71083069 133.81607056]
[64.90867615 144.22343445]
[54.10651779 154.63081360]
[43.46051025 165.19786072]
[32.97300720 175.92224121]
[22.48550606 186.64662170]
[11.99800587 197.37100220]
[1.51050460 208.09538269]
[-8.97699642 218.81976318]
[-19.46449661 229.54414368]
[-29.95199776 240.26852417]
[-40.43949890 250.99290466]
[-50.92700195 261.71728516]
[-41.32867432 273.26181030]
[-32.96826172 285.73208618]
[-25.93438339 298.99588013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 202]
[62 201]
[63 200]
[64 199]
[65 198]
[68 197]
[69 196]
[70 195]
[72 193]
[75 191]
[76 190]
[77 189]
[78 188]
[79 187]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 170]
[86 169]
[87 168]
[88 142]
[89 141]
[90 140]
[91 139]
[93 137]
[94 136]
[95 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
