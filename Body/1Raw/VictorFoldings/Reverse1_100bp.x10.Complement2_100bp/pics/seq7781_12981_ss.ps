%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[63.71688080 613.39727783]
[53.40286255 602.45520020]
[45.08655930 589.92730713]
[39.00725174 576.17413330]
[35.33985519 561.59136963]
[34.18988419 546.59851074]
[35.59043121 531.62695312]
[39.50119400 517.10754395]
[45.80965042 503.45794678]
[54.33430099 491.07092285]
[64.82987213 480.30285645]
[76.99438477 471.46359253]
[90.47783661 464.80743408]
[104.89228821 460.52587891]
[103.10982513 445.63217163]
[101.32735443 430.73846436]
[92.13248444 419.02078247]
[98.17507172 404.39898682]
[96.39260864 389.50524902]
[94.61013794 374.61154175]
[85.40824890 386.45742798]
[70.77179718 389.73986816]
[57.39238739 382.95819092]
[51.38689804 369.21286011]
[55.50095749 354.78805542]
[67.85367584 346.27862549]
[82.79755402 347.57495117]
[93.50125885 358.08605957]
[93.27793121 343.08770752]
[93.05460358 328.08938599]
[92.83127594 313.09103394]
[92.16149139 298.10601807]
[91.04584503 283.14755249]
[82.38336182 271.03100586]
[89.07282257 256.69357300]
[87.95717621 241.73512268]
[86.84152222 226.77667236]
[77.83361053 238.77073669]
[63.53044891 243.28952026]
[49.26675415 238.64764404]
[40.36254120 226.57640076]
[40.13885498 211.57806396]
[48.67913055 199.24665833]
[62.79804993 194.18147278]
[77.22961426 198.27171326]
[86.59161377 209.99290466]
[87.26139832 195.00785828]
[87.93118286 180.02282715]
[80.00224304 170.88726807]
[80.43761444 158.39750671]
[89.54898071 149.26811218]
[82.58293915 136.10287476]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[94.14163208 62.86457825]
[94.81141663 47.87953949]
[95.48120117 32.89450073]
[96.15098572 17.90946198]
[96.82077026 2.92442322]
[97.49055481 -12.06061554]
[98.04876709 -27.05022430]
[98.49537659 -42.04357529]
[98.16040039 -57.03983307]
[97.04474640 -71.99829102]
[95.92910004 -86.95674133]
[94.81345367 -101.91519165]
[93.58647919 -116.86492920]
[92.24824524 -131.80511475]
[89.91275787 -146.62217712]
[86.59049225 -161.24963379]
[73.50070953 -169.69329834]
[70.33984375 -184.57495117]
[78.47024536 -197.00201416]
[73.51786041 -204.67741394]
[75.20912933 -211.87196350]
[72.10501862 -226.54725647]
[69.00090790 -241.22256470]
[65.89679718 -255.89785767]
[62.79268646 -270.57318115]
[59.68857574 -285.24847412]
[49.26294327 -297.14874268]
[54.19896698 -311.20169067]
[51.09485626 -325.87698364]
[36.03188324 -326.11053467]
[21.39865875 -329.69052124]
[7.92918110 -336.43743896]
[-3.70092630 -346.01284790]
[-12.90830231 -357.93643188]
[-19.23110962 -371.61013794]
[-22.35219765 -386.34805298]
[-22.11501312 -401.41098022]
[-18.53145599 -416.04333496]
[-11.78127384 -429.51116943]
[-2.20305300 -441.13897705]
[9.72276592 -450.34344482]
[23.39798927 -456.66296387]
[38.13667297 -459.78045654]
[53.19953537 -459.53964233]
[67.83102417 -455.95254517]
[81.29722595 -449.19909668]
[92.92269135 -439.61804199]
[102.12429047 -427.69000244]
[108.44046783 -414.01324463]
[111.55441284 -399.27380371]
[111.30993652 -384.21099854]
[107.71928406 -369.58038330]
[100.96257782 -356.11581421]
[91.37872314 -344.49267578]
[79.44844818 -335.29397583]
[65.77015686 -328.98110962]
[68.87426758 -314.30578613]
[79.07787323 -303.45520020]
[74.36387634 -288.35256958]
[77.46798706 -273.67727661]
[80.57209778 -259.00198364]
[83.67620850 -244.32667542]
[86.78031921 -229.65136719]
[89.88442993 -214.97607422]
[93.09770203 -200.32427979]
[105.79850769 -192.62849426]
[109.37612152 -177.84149170]
[101.21795654 -164.57189941]
[104.54021454 -149.94444275]
[111.02141571 -163.47196960]
[123.73105621 -171.43846130]
[138.73092651 -171.37539673]
[151.37313843 -163.30233765]
[157.74038696 -149.72080994]
[155.85969543 -134.83917236]
[146.31381226 -123.26868439]
[132.06063843 -118.59458160]
[117.51668549 -122.26518250]
[107.18842316 -133.14334106]
[108.52665710 -118.20316315]
[112.25437164 -111.82147217]
[109.77190399 -103.03084564]
[110.88755035 -88.07238770]
[112.00320435 -73.11393738]
[113.11885071 -58.15548325]
[122.84051514 -69.57867432]
[137.60893250 -72.20429230]
[150.67218018 -64.83194733]
[156.05792236 -50.83216476]
[151.30386353 -36.60546875]
[138.58349609 -28.65610504]
[123.71240997 -30.61841774]
[113.48872375 -41.59696960]
[113.04211426 -26.60361862]
[115.98507690 -19.82417870]
[112.47559357 -11.39083004]
[111.80580902 3.59420848]
[111.13602448 18.57924652]
[110.46623993 33.56428528]
[109.79645538 48.54932404]
[109.12667084 63.53436279]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[113.00350952 137.91674805]
[104.52238464 150.16093445]
[113.14388275 166.43211365]
[102.91622162 180.69261169]
[102.24643707 195.67764282]
[101.57665253 210.66268921]
[101.79998016 225.66102600]
[102.91562653 240.61947632]
[104.03127289 255.57792664]
[112.77355194 268.76440430]
[106.00429535 282.03189087]
[107.11994171 296.99035645]
[109.69089508 300.48953247]
[110.89366150 304.24688721]
[110.81507874 307.80065918]
[109.68303680 310.76461792]
[107.82961273 312.86770630]
[108.05294037 327.86605835]
[108.27626801 342.86437988]
[108.49959564 357.86273193]
[109.50386047 372.82907104]
[111.28632355 387.72277832]
[113.06878662 402.61651611]
[122.39115906 415.39947510]
[116.22107697 428.95599365]
[118.00354004 443.84970093]
[119.78600311 458.74343872]
[134.80372620 459.50256348]
[149.47708130 462.78894043]
[163.38392639 468.50799561]
[176.12411499 476.49523926]
[187.33106995 486.52078247]
[196.68238831 498.29623413]
[203.90896606 511.48275757]
[208.80290222 525.70098877]
[211.22340393 540.54174805]
[211.10079956 555.57812500]
[208.43862915 570.37750244]
[203.31350708 584.51403809]
[195.87284851 597.58093262]
[186.33078003 609.20233154]
[174.96182251 619.04382324]
[162.09309387 626.82226562]
[148.09484863 632.31378174]
[133.36984253 635.36047363]
[118.34175110 635.87463379]
[103.44295502 633.84143066]
[89.10211945 629.31945801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 189]
[15 188]
[16 187]
[18 185]
[19 184]
[20 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 174]
[33 173]
[35 171]
[36 170]
[37 169]
[46 168]
[47 167]
[48 166]
[51 164]
[53 162]
[54 161]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 150]
[64 149]
[65 141]
[66 140]
[67 139]
[68 138]
[69 136]
[70 135]
[71 125]
[72 124]
[75 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
