%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[88.75837708 702.32104492]
[81.54527283 715.55236816]
[71.47480011 726.76318359]
[59.09004211 735.34887695]
[45.05889511 740.84649658]
[30.13804054 742.95953369]
[15.13214016 741.57397461]
[0.85044587 736.76464844]
[-11.93684959 728.79077148]
[-22.54014397 718.08251953]
[-30.38761520 705.21734619]
[-35.05605698 690.88891602]
[-36.29370880 675.87011719]
[-34.03382492 660.97082520]
[-28.39827728 646.99450684]
[-19.69098282 634.69488525]
[-8.38151836 624.73535156]
[4.92021418 617.65295410]
[19.49686813 613.82958984]
[34.56234360 613.47155762]
[37.66645050 598.79626465]
[40.77056122 584.12091064]
[43.87467194 569.44561768]
[46.97878265 554.77032471]
[50.08289337 540.09503174]
[53.18700409 525.41973877]
[55.96261215 510.67877197]
[58.40834045 495.87948608]
[60.85406876 481.08023071]
[63.29979706 466.28094482]
[65.74552155 451.48168945]
[68.19125366 436.68240356]
[70.63697815 421.88314819]
[73.08270264 407.08386230]
[75.52843475 392.28460693]
[77.97415924 377.48532104]
[79.75662994 362.59161377]
[80.87227631 347.63314819]
[74.10301971 334.36566162]
[82.84529877 321.17916870]
[83.96094513 306.22073364]
[74.07704926 295.13720703]
[74.99538422 279.95132446]
[86.68780518 269.65933228]
[87.80345917 254.70088196]
[88.91910553 239.74243164]
[89.70042419 224.76278687]
[82.34549713 211.81079102]
[90.49024963 198.24711609]
[90.93685150 183.25375366]
[91.38346100 168.26040649]
[91.83006287 153.26705933]
[92.27667236 138.27371216]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[92.16500854 78.27745056]
[91.94168091 63.27911377]
[83.66914368 75.79170990]
[70.57404327 83.10734558]
[55.58186340 83.59167480]
[42.04189682 77.13650513]
[32.97900009 65.18393707]
[30.41784859 50.40420151]
[34.93061447 36.09913254]
[45.50913239 25.46451950]
[59.79013062 20.87616158]
[74.58320618 23.35910797]
[86.58353424 32.35866165]
[93.11022949 45.86432648]
[95.33535004 31.03028107]
[97.56046295 16.19623756]
[99.78558350 1.36219370]
[90.66306305 -11.26386738]
[93.13096619 -26.27599907]
[105.22420502 -34.89511490]
[107.44932556 -49.72916031]
[109.67443848 -64.56320190]
[111.89955902 -79.39724731]
[109.83910370 -85.67945099]
[111.07505798 -91.22647095]
[114.41811371 -94.63719940]
[117.08390808 -109.39841461]
[119.74970245 -124.15962982]
[122.41549683 -138.92085266]
[120.86103058 -147.92204285]
[125.23243713 -153.88128662]
[128.11770630 -168.60118103]
[130.89331055 -183.34214783]
[133.55911255 -198.10336304]
[123.32316589 -212.28942871]
[126.45240021 -229.15724182]
[140.53021240 -238.35800171]
[142.97593689 -253.15727234]
[145.42166138 -267.95654297]
[138.53973389 -285.03634644]
[150.19548035 -298.15545654]
[152.42059326 -312.98950195]
[138.47731018 -318.72082520]
[126.31119537 -327.62301636]
[116.62958527 -339.17852783]
[109.99534607 -352.71551514]
[106.79419708 -367.44699097]
[107.21223450 -382.51644897]
[111.22515869 -397.04779053]
[118.59967041 -410.19616699]
[128.90701294 -421.19717407]
[141.54794312 -429.41122437]
[155.78753662 -434.36071777]
[170.79789734 -435.75796509]
[185.70637512 -433.52166748]
[199.64617920 -427.78189087]
[211.80690002 -418.87231445]
[221.48150635 -407.31094360]
[228.10752869 -393.76992798]
[231.29974365 -379.03652954]
[230.87257385 -363.96731567]
[226.85083008 -349.43841553]
[219.46835327 -336.29449463]
[209.15434265 -325.29974365]
[196.50843811 -317.09338379]
[182.26585388 -312.15249634]
[167.25463867 -310.76437378]
[165.02952576 -295.93032837]
[171.96502686 -286.01947021]
[170.23263550 -273.64276123]
[160.22093201 -265.51080322]
[157.77520752 -250.71153259]
[155.32948303 -235.91226196]
[164.22499084 -226.59028625]
[166.15597534 -213.65376282]
[160.19586182 -201.79258728]
[148.32032776 -195.43756104]
[145.65454102 -180.67634583]
[147.55926514 -173.53535461]
[142.83760071 -165.71591187]
[139.95233154 -150.99601746]
[137.17671204 -136.25505066]
[134.51092529 -121.49383545]
[131.84512329 -106.73262024]
[129.17932129 -91.97139740]
[126.73359680 -77.17212677]
[124.50848389 -62.33808517]
[122.28336334 -47.50404358]
[120.05825043 -32.66999817]
[129.09040833 -20.88205719]
[127.04514313 -5.80652952]
[114.61962891 3.58731079]
[112.39450836 18.42135429]
[110.16939545 33.25539780]
[107.94427490 48.08944321]
[106.94001770 63.05578613]
[107.16334534 78.05412292]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[110.46956635 129.18241882]
[110.07013702 134.85140991]
[107.27001953 138.72032166]
[106.82341766 153.71366882]
[106.37680817 168.70701599]
[105.93020630 183.70036316]
[105.48359680 198.69371033]
[112.80658722 212.71813965]
[104.69377899 225.20939636]
[107.16951752 229.80480957]
[107.59265900 234.42803955]
[106.29634094 238.29257202]
[103.87755585 240.85807800]
[102.76190948 255.81652832]
[101.64626312 270.77499390]
[111.68259430 282.68756104]
[110.33808136 297.84167480]
[98.91939545 307.33636475]
[97.80374908 322.29483032]
[104.49320984 336.63226318]
[95.83072662 348.74880981]
[94.71508026 363.70724487]
[106.75830841 354.76516724]
[121.61668396 356.82153320]
[130.77867126 368.69830322]
[128.99583435 383.59197998]
[117.28950500 392.97076416]
[102.36557007 391.46206665]
[92.77342987 379.93106079]
[90.32770538 394.73031616]
[87.88197327 409.52960205]
[85.43624878 424.32885742]
[82.99052429 439.12814331]
[80.54479218 453.92739868]
[78.09906769 468.72668457]
[75.65333557 483.52593994]
[73.20761108 498.32522583]
[70.76188660 513.12451172]
[72.60147858 518.00946045]
[72.40316010 522.64776611]
[70.60215759 526.30450439]
[67.86230469 528.52380371]
[64.75819397 543.19915771]
[61.65408325 557.87445068]
[58.54997635 572.54974365]
[55.44586563 587.22503662]
[52.34175491 601.90032959]
[49.23764420 616.57562256]
[62.86779022 623.00341797]
[74.64781189 632.40167236]
[83.94243622 644.26367188]
[90.25041962 657.94964600]
[93.23156738 672.72155762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 179]
[38 178]
[40 176]
[41 175]
[44 172]
[45 171]
[46 170]
[47 166]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 157]
[55 156]
[56 154]
[57 153]
[58 152]
[70 151]
[71 150]
[72 149]
[73 148]
[76 145]
[77 144]
[78 143]
[79 142]
[82 141]
[83 140]
[84 139]
[85 138]
[87 137]
[88 136]
[89 134]
[90 133]
[93 129]
[94 128]
[95 127]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
