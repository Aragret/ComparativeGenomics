%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[92.18194580 711.72406006]
[79.05096436 704.38293457]
[67.49264526 694.75384521]
[57.90065765 683.16467285]
[50.60170364 670.01019287]
[45.84437561 655.73846436]
[43.79071426 640.83557129]
[44.51066589 625.80902100]
[47.97970200 611.17071533]
[54.07967758 597.41918945]
[62.60282516 585.02276611]
[73.25885010 574.40374756]
[85.68480682 565.92376709]
[99.45748138 559.87164307]
[114.10778046 556.45355225]
[113.43799591 541.46850586]
[112.76821136 526.48345947]
[112.09842682 511.49841309]
[111.42863464 496.51336670]
[110.75885010 481.52832031]
[107.31981659 474.98657227]
[110.19232941 466.31555176]
[102.07952118 453.82427979]
[109.40251160 439.79986572]
[108.95590210 424.80651855]
[108.06308746 409.83309937]
[106.72485352 394.89291382]
[105.38661957 379.95272827]
[102.92990875 377.42352295]
[101.57619476 373.57870483]
[101.93045807 368.94970703]
[104.33750916 364.31793213]
[103.66772461 349.33291626]
[95.36983490 336.96380615]
[102.48320770 322.83190918]
[101.81342316 307.84686279]
[91.58576202 293.58636475]
[100.20726013 277.31518555]
[99.31444550 262.34179688]
[98.42162323 247.36837769]
[97.52880859 232.39497375]
[84.90059662 224.54219055]
[79.25106812 210.59419250]
[82.94107056 195.82133484]
[94.75883484 185.93969727]
[93.86601257 170.96629333]
[92.97319794 155.99288940]
[90.96849060 154.03347778]
[89.61914062 151.16192627]
[89.27645111 147.62384033]
[90.19642639 143.78741455]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[91.49523926 80.12541962]
[90.82545471 65.14038086]
[90.15567017 50.15534592]
[81.80987549 36.71442413]
[88.97115326 23.65435982]
[88.30136871 8.66932106]
[79.32693481 -0.59471208]
[79.07756805 -13.08957386]
[87.14164734 -22.10607147]
[86.69503784 -37.09942245]
[86.24842834 -52.09276962]
[85.80182648 -67.08612061]
[82.65770721 -72.90213776]
[82.88816833 -78.58051300]
[85.57184601 -82.53106689]
[85.57184601 -97.53106689]
[85.57184601 -112.53106689]
[85.57184601 -127.53106689]
[85.57184601 -142.53106689]
[85.57184601 -157.53106689]
[77.83454895 -171.33123779]
[85.57184601 -184.05850220]
[77.83454895 -197.85868835]
[85.57184601 -210.58595276]
[77.83454895 -224.38612366]
[85.57184601 -237.11340332]
[85.57184601 -252.11340332]
[85.57184601 -267.11340332]
[73.28118134 -258.51458740]
[58.85274506 -262.61584473]
[52.92265320 -276.39385986]
[59.86234283 -289.69201660]
[74.55613708 -292.70739746]
[86.17160797 -283.21865845]
[87.28725433 -298.17712402]
[88.40290070 -313.13555908]
[80.02462006 -329.53329468]
[90.46346283 -343.63995361]
[91.35627747 -358.61334229]
[92.24909210 -373.58676147]
[83.62760162 -389.85794067]
[93.85525513 -404.11843872]
[94.52504730 -419.10348511]
[95.19483185 -434.08853149]
[95.86461639 -449.07354736]
[82.22395325 -455.84497070]
[72.52177429 -467.58328247]
[68.43904877 -482.25473022]
[70.68312073 -497.31738281]
[78.86520386 -510.16159058]
[91.56769562 -518.56201172]
[106.58981323 -521.06317139]
[121.32888794 -517.23175049]
[133.23127747 -507.73159790]
[140.23483276 -494.20864868]
[141.12612915 -479.00582886]
[135.75076294 -464.75714111]
[125.04003906 -453.93124390]
[110.84965515 -448.40377808]
[110.17987061 -433.41873169]
[109.51008606 -418.43368530]
[108.84029388 -403.44866943]
[116.76924133 -394.31311035]
[116.33386993 -381.82333374]
[107.22249603 -372.69393921]
[106.32968140 -357.72055054]
[105.43686676 -342.74713135]
[113.22891235 -333.49453735]
[112.60763550 -321.01263428]
[103.36135864 -312.01992798]
[102.24570465 -297.06146240]
[101.13005829 -282.10299683]
[100.57184601 -267.11340332]
[100.57184601 -252.11340332]
[100.57184601 -237.11340332]
[108.30915070 -224.38612366]
[100.57184601 -210.58595276]
[108.30915070 -197.85868835]
[100.57184601 -184.05850220]
[108.30915070 -171.33123779]
[100.57184601 -157.53106689]
[100.57184601 -142.53106689]
[100.57184601 -127.53106689]
[100.57184601 -112.53106689]
[100.57184601 -97.53106689]
[100.57184601 -82.53106689]
[100.79517365 -67.53273010]
[101.24178314 -52.53937912]
[101.68838501 -37.54602814]
[102.13499451 -22.55267715]
[112.14920044 -8.14148140]
[103.28640747 7.99953556]
[103.95619202 22.98457527]
[112.25408173 35.35366440]
[105.14070892 49.48556137]
[105.81049347 64.47059631]
[106.48027802 79.45563507]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.94660950 155.10006714]
[108.83942413 170.07347107]
[109.73223877 185.04687500]
[122.64051056 193.45417786]
[128.05984497 207.68388367]
[124.10779572 222.20439148]
[112.50221252 231.50216675]
[113.39503479 246.47557068]
[114.28784943 261.44897461]
[115.18066406 276.42236328]
[124.29203033 285.55175781]
[124.72740173 298.04153442]
[116.79846191 307.17709351]
[117.46824646 322.16213989]
[125.81404114 335.60305786]
[118.65276337 348.66311646]
[119.32254791 363.64816284]
[120.32680511 378.61450195]
[121.66503906 393.55468750]
[123.00327301 408.49487305]
[125.62603760 411.95538330]
[126.88460541 415.69442749]
[126.85894775 419.24896240]
[125.77116394 422.22946167]
[123.94925690 424.35989380]
[124.39585876 439.35324097]
[132.54061890 452.91693115]
[125.18568420 465.86892700]
[125.74388885 480.85855103]
[126.41367340 495.84359741]
[127.08346558 510.82861328]
[127.75325012 525.81365967]
[128.42303467 540.79870605]
[129.09281921 555.78375244]
[143.98963928 557.88116455]
[158.24734497 562.68041992]
[171.38029480 570.01800537]
[182.94120789 579.64398193]
[192.53631592 591.23059082]
[199.83882141 604.38305664]
[204.59999084 618.65350342]
[206.65766907 633.55590820]
[205.94177246 648.58258057]
[202.47668457 663.22186279]
[196.38041687 676.97503662]
[187.86061096 689.37371826]
[177.20744324 699.99566650]
[164.78376770 708.47900391]
[151.01272583 714.53479004]
[136.36335754 717.95684814]
[121.33460236 718.62860107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[22 187]
[24 185]
[25 184]
[26 179]
[27 178]
[28 177]
[32 176]
[33 175]
[35 173]
[36 172]
[38 169]
[39 168]
[40 167]
[41 166]
[45 162]
[46 161]
[47 160]
[52 159]
[53 158]
[54 157]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[64 145]
[65 144]
[66 143]
[67 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[77 134]
[79 132]
[81 130]
[82 129]
[83 128]
[89 127]
[90 126]
[91 125]
[93 122]
[94 121]
[95 120]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
