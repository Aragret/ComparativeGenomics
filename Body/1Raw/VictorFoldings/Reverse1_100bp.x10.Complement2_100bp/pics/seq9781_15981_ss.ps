%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[61.70264816 395.61904907]
[61.35644531 410.65405273]
[58.40452194 425.40048218]
[52.93657303 439.41021729]
[45.11877060 452.25750732]
[35.18868256 463.55197144]
[23.44808006 472.95031738]
[10.25374126 480.16702271]
[-3.99337053 484.98269653]
[-18.86030197 487.25106812]
[-33.89526367 486.90316772]
[-48.64136124 483.94955444]
[-62.65047455 478.48004150]
[-75.49688721 470.66076660]
[-86.79020691 460.72940063]
[-96.18724823 448.98773193]
[-103.40243530 435.79257202]
[-108.21651459 421.54492188]
[-110.48319244 406.67773438]
[-110.13358307 391.64279175]
[-107.17830658 376.89703369]
[-101.70718384 362.88854980]
[-93.88646698 350.04302979]
[-83.95381927 338.75082397]
[-72.21108246 329.35513306]
[-59.01511002 322.14141846]
[-44.76690674 317.32897949]
[-29.89945984 315.06396484]
[-14.86457634 315.41528320]
[-0.11915000 318.37222290]
[5.33620691 304.39944458]
[10.79156399 290.42663574]
[16.14274979 276.41360474]
[21.38946915 262.36114502]
[26.63618660 248.30867004]
[25.59658432 245.70533752]
[25.52556229 242.53334045]
[26.64487457 239.15953064]
[29.03950882 236.02421570]
[32.63617706 233.59153748]
[38.71001053 219.87626648]
[44.78384399 206.16099548]
[50.85768127 192.44573975]
[56.93151474 178.73046875]
[63.00534821 165.01519775]
[69.07917786 151.29992676]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[110.48047638 56.18060303]
[98.96858978 65.79707336]
[85.23682404 71.83351898]
[70.36812592 73.81388092]
[55.53510284 71.58197784]
[41.90754700 65.31383514]
[30.56018257 55.50376892]
[22.38791275 42.92545319]
[18.03523636 28.57086563]
[17.84542274 13.57206631]
[21.83344269 -0.88807529]
[29.68478203 -13.66917324]
[40.78025436 -23.76325607]
[54.24482346 -30.37426186]
[69.01661682 -32.98081970]
[83.93066406 -31.37736702]
[97.81079102 -25.69035530]
[109.56234741 -16.36828995]
[118.25856018 -4.14634466]
[123.21360016 10.01160526]
[124.03670502 24.98900414]
[120.66170502 39.60791016]
[130.32250977 28.13321114]
[139.98332214 16.65851212]
[149.64413452 5.18381166]
[152.77725220 -3.39648271]
[159.53521729 -6.38842106]
[169.36578369 -17.71801376]
[179.19636536 -29.04760742]
[168.51609802 -39.58740616]
[158.53305054 -50.78984451]
[149.28826904 -62.60887909]
[140.81973267 -74.99594879]
[133.16223145 -87.90015411]
[126.34725189 -101.26846313]
[120.40278625 -115.04594421]
[115.35326385 -129.17597961]
[111.21942902 -143.60050964]
[108.01828003 -158.26025391]
[105.76295471 -173.09498596]
[104.46273804 -188.04374695]
[104.12297058 -203.04507446]
[104.74503326 -218.03736877]
[106.32639313 -232.95899963]
[108.86052704 -247.74864197]
[112.33704376 -262.34555054]
[116.74163818 -276.68972778]
[122.05622864 -290.72219849]
[128.25895691 -304.38537598]
[135.32435608 -317.62304688]
[143.22337341 -330.38082886]
[151.92356873 -342.60629272]
[161.38917542 -354.24923706]
[171.58129883 -365.26177979]
[182.45806885 -375.59869385]
[193.97476196 -385.21749878]
[206.08409119 -394.07864380]
[218.73626709 -402.14572144]
[231.87931824 -409.38562012]
[245.45922852 -415.76855469]
[259.42019653 -421.26828003]
[273.70483398 -425.86224365]
[288.25448608 -429.53155518]
[303.00930786 -432.26110840]
[317.90872192 -434.03970337]
[332.89147949 -434.86004639]
[347.89599609 -434.71871948]
[362.86062622 -433.61636353]
[377.72390747 -431.55749512]
[392.42471313 -428.55053711]
[406.90264893 -424.60787964]
[421.09826660 -419.74569702]
[434.95315552 -413.98400879]
[448.41046143 -407.34646606]
[461.41482544 -399.86032104]
[473.91284180 -391.55639648]
[485.85311890 -382.46875000]
[497.18664551 -372.63476562]
[507.86679077 -362.09484863]
[517.84973145 -350.89230347]
[527.09436035 -339.07318115]
[535.56274414 -326.68600464]
[543.22009277 -313.78170776]
[550.03497314 -300.41333008]
[555.97924805 -286.63577271]
[561.02862549 -272.50567627]
[565.16229248 -258.08111572]
[568.36328125 -243.42132568]
[570.61846924 -228.58657837]
[571.91851807 -213.63780212]
[572.25811768 -198.63645935]
[571.63586426 -183.64418030]
[570.05438232 -168.72257996]
[567.52008057 -153.93295288]
[564.04339600 -139.33609009]
[559.63861084 -124.99196625]
[554.32385254 -110.95953369]
[548.12097168 -97.29644775]
[541.05548096 -84.05886078]
[533.15631104 -71.30116272]
[524.45599365 -59.07577515]
[514.99023438 -47.43294144]
[504.79797363 -36.42050552]
[493.92111206 -26.08371735]
[482.40429688 -16.46505547]
[470.29486084 -7.60404110]
[457.64260864 0.46291026]
[444.49948120 7.70265055]
[430.91949463 14.08543015]
[416.95846558 19.58502007]
[402.67376709 24.17882156]
[388.12408447 27.84795570]
[373.36923218 30.57734871]
[358.46978760 32.35578156]
[343.48703003 33.17594910]
[328.48251343 33.03448105]
[313.51788330 31.93195343]
[298.65466309 29.87290382]
[283.95385742 26.86578751]
[269.47595215 22.92296600]
[255.28042603 18.06064034]
[241.42556763 12.29878807]
[227.96835327 5.66108894]
[214.96408081 -1.82518184]
[202.46615601 -10.12926197]
[190.52597046 -19.21702576]
[180.69538879 -7.88743353]
[170.86480713 3.44215965]
[161.11883545 14.84462261]
[151.45802307 26.31932259]
[141.79721069 37.79402161]
[132.13641357 49.26872253]
[124.28465271 62.04956436]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.79444885 157.37376404]
[76.72061157 171.08903503]
[70.64678192 184.80430603]
[64.57294464 198.51956177]
[58.49911118 212.23483276]
[52.42527771 225.95010376]
[46.35144424 239.66537476]
[40.68865585 253.55538940]
[35.44194031 267.60787964]
[30.19522095 281.66033936]
[30.12525177 290.79449463]
[24.76436234 295.88198853]
[19.30900574 309.85479736]
[13.85364819 323.82760620]
[26.70183182 331.64395142]
[37.99740601 341.57275391]
[47.39710617 353.31228638]
[54.61528778 366.50579834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 206]
[31 205]
[32 204]
[33 202]
[34 201]
[35 200]
[40 199]
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[51 187]
[52 186]
[53 185]
[74 184]
[75 183]
[76 182]
[77 181]
[79 180]
[80 179]
[81 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
