%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[28.14898491 669.31976318]
[18.62049294 657.65692139]
[11.82234478 644.21820068]
[8.07249928 629.63214111]
[7.54634428 614.58099365]
[10.26848888 599.76867676]
[16.11161423 585.88806152]
[24.80242348 573.58831787]
[35.93443680 563.44470215]
[48.98698807 555.93170166]
[63.34958267 551.40069580]
[62.01134872 536.46057129]
[60.67311478 521.52038574]
[59.33487701 506.58016968]
[57.88545990 491.65036011]
[56.32493591 476.73175049]
[54.76441574 461.81314087]
[53.20389175 446.89456177]
[51.11368942 445.02661133]
[49.63745880 442.21817017]
[49.13713455 438.69891357]
[49.88488770 434.82525635]
[52.02180862 431.04534912]
[51.35202408 416.06030273]
[50.68223953 401.07528687]
[50.01245117 386.09024048]
[49.34266663 371.10519409]
[48.67288208 356.12014771]
[48.00309753 341.13513184]
[41.47991943 354.64245605]
[30.97125435 365.34609985]
[17.58610916 372.11648560]
[2.73704958 374.23907471]
[-12.00886726 371.48989868]
[-25.09547043 364.15908813]
[-35.14170074 353.02026367]
[-41.08734894 339.24896240]
[-42.30496597 324.29846191]
[-38.66604996 309.74655151]
[-30.55462074 297.12890625]
[-18.82670212 287.77713013]
[-4.71996641 282.67810059]
[10.27686787 282.36996460]
[24.58115005 286.88519287]
[36.68331528 295.74734497]
[45.30619049 308.02114868]
[49.53981018 322.41149902]
[52.64392090 307.73620605]
[55.74802780 293.06088257]
[50.81200409 279.00796509]
[61.23763657 267.10766602]
[47.28751373 258.01647949]
[37.87852097 244.23414612]
[34.47740173 227.85908508]
[37.63357544 211.39759827]
[46.89059448 197.38035583]
[60.85192871 187.97325134]
[77.39158630 184.64285278]
[80.05738068 169.88163757]
[82.72318268 155.12042236]
[85.38897705 140.35920715]
[88.05477142 125.59798431]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[96.03954315 71.80713654]
[96.48615265 56.81378555]
[86.18280029 48.13879395]
[82.80625916 35.30097961]
[87.37253571 23.04409599]
[98.00458527 15.76473904]
[98.67436981 0.77969992]
[99.34415436 -14.20533848]
[99.90236664 -29.19494820]
[100.34896851 -44.18829727]
[92.08841705 -54.09415817]
[92.76906586 -66.57295990]
[101.48142242 -74.96470642]
[102.15120697 -89.94974518]
[102.82099152 -104.93478394]
[103.49077606 -119.91982269]
[104.16056824 -134.90486145]
[101.41746521 -143.61767578]
[104.95352173 -150.10752869]
[105.84633636 -165.08093262]
[98.94415283 -179.31716919]
[107.42527771 -191.56134033]
[108.31809235 -206.53475952]
[109.21090698 -221.50816345]
[110.10372162 -236.48156738]
[103.20154572 -250.71780396]
[111.68266296 -262.96197510]
[112.57548523 -277.93539429]
[98.05911255 -281.93148804]
[84.69098663 -288.85873413]
[73.05548096 -298.41430664]
[63.66127014 -310.18045044]
[56.91901779 -323.64282227]
[53.12346649 -338.21292114]
[52.44054413 -353.25378418]
[54.90010452 -368.10787964]
[60.39462662 -382.12585449]
[68.68391418 -394.69491577]
[79.40559387 -405.26559448]
[92.09095764 -413.37579346]
[106.18545532 -418.67095947]
[121.07294464 -420.91961670]
[136.10260010 -420.02343750]
[150.61740112 -416.02163696]
[163.98280334 -409.08911133]
[175.61453247 -399.52899170]
[185.00411987 -387.75912476]
[191.74107361 -374.29409790]
[195.53089905 -359.72250366]
[196.20790100 -344.68139648]
[193.74249268 -329.82824707]
[188.24246216 -315.81243896]
[179.94822693 -303.24664307]
[169.22239685 -292.68017578]
[156.53384399 -284.57498169]
[142.43725586 -279.28536987]
[127.54888916 -277.04257202]
[126.65607452 -262.06915283]
[133.62211609 -248.90391541]
[125.07713318 -235.58874512]
[124.18431854 -220.61534119]
[123.29149628 -205.64193726]
[122.39868164 -190.66853333]
[129.36473083 -177.50329590]
[120.81974030 -164.18812561]
[119.92692566 -149.21470642]
[119.14560699 -134.23507690]
[118.47581482 -119.25003815]
[117.80603027 -104.26499939]
[117.13624573 -89.27996063]
[116.46646118 -74.29492188]
[125.38108063 -59.17881775]
[115.34232330 -43.74169159]
[114.89571381 -28.74834251]
[117.83866882 -21.96890259]
[114.32919312 -13.53555393]
[113.65940857 1.44948506]
[112.98962402 16.43452454]
[124.85868835 28.34938812]
[124.42955017 45.49962616]
[111.47949982 57.26039124]
[111.03289795 72.25373840]
[120.69515228 60.78025818]
[134.99479675 56.25035095]
[149.50094604 60.06766510]
[159.71868896 71.04936218]
[162.48196411 85.79264069]
[156.93452454 99.72914124]
[144.79533386 108.54048157]
[129.82582092 109.49637604]
[116.66445923 102.30062866]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[107.09818268 122.24010468]
[102.81598663 128.26377869]
[100.15019226 143.02499390]
[97.48439789 157.78620911]
[94.81860352 172.54742432]
[92.15280914 187.30865479]
[103.84734344 193.93411255]
[112.91590881 203.82392883]
[118.48633575 216.00616455]
[120.02929688 229.28945923]
[117.40857697 242.37953186]
[110.89299011 254.00524902]
[101.12884521 263.04211426]
[89.07588196 268.62103271]
[75.91294098 270.21179199]
[80.62693787 285.31439209]
[70.42333221 296.16500854]
[67.31922150 310.84030151]
[64.21511078 325.51559448]
[62.98813629 340.46533203]
[63.65792084 355.45037842]
[64.32770538 370.43542480]
[64.99748993 385.42044067]
[65.66727448 400.40548706]
[66.33705902 415.39053345]
[67.00684357 430.37557983]
[68.12249756 445.33401489]
[69.68302155 460.25262451]
[71.24354553 475.17123413]
[72.80406189 490.08984375]
[76.80928040 498.29934692]
[74.27506256 505.24194336]
[75.61329651 520.18212891]
[76.95153046 535.12231445]
[78.28976440 550.06250000]
[93.22897339 551.96887207]
[107.40895081 557.04254150]
[120.16646576 565.04626465]
[130.90483093 575.60571289]
[139.12181091 588.22692871]
[144.43305969 602.31964111]
[146.59016418 617.22473145]
[145.49223328 632.24499512]
[141.19062805 646.67791748]
[133.88653564 659.84851074]
[123.92159271 671.14074707]
[111.76185608 680.02636719]
[97.97607422 686.08990479]
[83.20903015 689.04766846]
[68.15140533 688.76141357]
[53.50747299 685.24438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 194]
[12 193]
[13 192]
[14 191]
[15 189]
[16 188]
[17 187]
[18 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[47 178]
[48 177]
[49 176]
[51 174]
[58 165]
[59 164]
[60 163]
[61 162]
[62 161]
[63 159]
[65 157]
[66 147]
[67 146]
[71 143]
[72 142]
[73 141]
[74 139]
[75 138]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[90 125]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
