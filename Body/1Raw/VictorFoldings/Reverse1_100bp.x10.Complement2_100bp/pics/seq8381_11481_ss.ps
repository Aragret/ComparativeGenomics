%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[213.98117065 528.51324463]
[220.83668518 515.11590576]
[230.17440796 503.31365967]
[241.63540649 493.56011963]
[254.77915955 486.23019409]
[250.16516113 471.95745850]
[245.55114746 457.68472290]
[240.93713379 443.41198730]
[236.32312012 429.13925171]
[230.86776733 415.16644287]
[224.59040833 401.54315186]
[212.23698425 393.22195435]
[213.48892212 377.45034790]
[207.21156311 363.82702637]
[200.93420410 350.20373535]
[195.27999878 345.44433594]
[194.66647339 336.33053589]
[188.59265137 322.61526489]
[182.51881409 308.89999390]
[176.44497681 295.18472290]
[170.37113953 281.46945190]
[152.92796326 275.91506958]
[144.94726562 259.08587646]
[151.91958618 241.47052002]
[145.44007874 227.94218445]
[138.96058655 214.41383362]
[132.48109436 200.88548279]
[126.00159454 187.35714722]
[119.52210236 173.82879639]
[113.04261017 160.30044556]
[109.01368713 174.74925232]
[97.33344269 184.16050720]
[82.35832214 185.02407837]
[69.67366791 177.01785278]
[64.01055145 163.12796021]
[67.48117065 148.53498840]
[78.79106903 138.68174744]
[93.72193909 137.24327087]
[106.70571136 144.75692749]
[101.57733917 139.43511963]
[101.91529846 130.30694580]
[97.30129242 116.03421021]
[84.56626892 105.11654663]
[88.25723267 88.75337982]
[83.43123627 74.55092621]
[78.60523224 60.34846878]
[66.83934784 49.77139282]
[70.07048035 35.23147964]
[58.30459213 24.65440369]
[61.53571701 10.11448956]
[56.70972061 -4.08796597]
[51.88372421 -18.29042244]
[47.05772400 -32.49287796]
[41.33370590 -39.61140442]
[42.26731110 -46.94285583]
[37.65330505 -61.21558762]
[33.03929520 -75.48831940]
[28.31916046 -89.72631073]
[23.49316216 -103.92876434]
[18.66716385 -118.13122559]
[13.84116745 -132.33367920]
[9.01516914 -146.53613281]
[4.18917179 -160.73858643]
[-0.63682586 -174.94104004]
[-5.46282339 -189.14349365]
[-10.28882122 -203.34596252]
[-22.05470467 -213.92303467]
[-18.82357979 -228.46295166]
[-23.64957809 -242.66540527]
[-28.47557449 -256.86785889]
[-33.30157471 -271.07031250]
[-35.56015778 -256.24133301]
[-42.03521347 -242.71086121]
[-52.16658401 -231.64941406]
[-65.07779694 -224.01394653]
[-79.65190887 -220.46496582]
[-94.62812042 -221.30952454]
[-108.71082306 -226.47453308]
[-120.68173218 -235.51319885]
[-129.50524902 -247.64355469]
[-134.41804504 -261.81622314]
[-134.99510193 -276.80511475]
[-131.18652344 -291.31353760]
[-123.32176971 -304.08639526]
[-112.08123779 -314.01867676]
[-98.43733215 -320.25115967]
[-83.57038879 -322.24465942]
[-68.76654816 -319.82675171]
[-55.30649948 -313.20654297]
[-44.35466003 -302.95678711]
[-36.85976791 -289.96749878]
[-37.52955246 -304.95251465]
[-38.19933701 -319.93756104]
[-38.86912155 -334.92260742]
[-39.53890610 -349.90765381]
[-54.07164764 -354.15948486]
[-66.43495178 -362.90176392]
[-75.28774261 -375.18618774]
[-79.66973114 -389.68020630]
[-79.10559845 -404.81164551]
[-73.65653229 -418.93914795]
[-63.91360855 -430.53027344]
[-50.93366623 -438.32769775]
[-36.12467194 -441.48562622]
[-21.09299850 -439.66149902]
[-7.46916485 -433.05316162]
[3.26901650 -422.37750244]
[9.95674706 -408.79244995]
[11.86859226 -393.77169800]
[8.79716969 -378.94451904]
[1.07564390 -365.91928101]
[-10.45841122 -356.10885620]
[-24.55386925 -350.57742310]
[-23.88408470 -335.59237671]
[-23.21429825 -320.60736084]
[-22.54451370 -305.62231445]
[-21.87472916 -290.63726807]
[-19.09911728 -275.89630127]
[-14.27311993 -261.69384766]
[-9.44712162 -247.49139404]
[-4.62112427 -233.28894043]
[6.79957199 -223.72772217]
[3.91363454 -208.17195129]
[8.73963261 -193.96949768]
[13.56562996 -179.76704407]
[18.39162827 -165.56459045]
[23.21762466 -151.36213684]
[28.04362297 -137.15966797]
[32.86962128 -122.95722198]
[37.69561768 -108.75476074]
[42.52161407 -94.55230713]
[47.64999008 -89.23050690]
[47.31202698 -80.10233307]
[51.92603683 -65.82959747]
[56.54004669 -51.55686569]
[61.26018143 -37.31887436]
[66.08618164 -23.11641884]
[70.91217804 -8.91396332]
[75.73817444 5.28849220]
[87.15886688 14.84971333]
[84.27293396 30.40548134]
[95.69362640 39.96670532]
[92.80769348 55.52247238]
[97.63368988 69.72492981]
[102.45968628 83.92738342]
[112.57754517 89.69541931]
[116.24241638 100.75027466]
[111.57402039 111.42020416]
[116.18803406 125.69293976]
[120.90816498 139.93092346]
[126.57095337 153.82095337]
[133.05044556 167.34930420]
[139.52993774 180.87763977]
[146.00944519 194.40599060]
[152.48893738 207.93434143]
[158.96842957 221.46267700]
[165.44792175 234.99102783]
[177.21537781 236.68331909]
[186.60862732 243.77328491]
[191.36384583 254.40728760]
[190.40530396 265.89627075]
[184.08641052 275.39562988]
[190.16024780 289.11090088]
[196.23408508 302.82617188]
[202.30790710 316.54141235]
[208.38174438 330.25668335]
[214.55751038 343.92636108]
[220.83486938 357.54968262]
[227.11224365 371.17300415]
[239.91465759 380.46862793]
[238.21372986 395.26577759]
[244.49108887 408.88909912]
[248.73468018 394.50189209]
[260.55374146 385.26556396]
[275.54006958 384.62506104]
[288.10412598 392.81924438]
[293.55981445 406.79193115]
[289.87231445 421.33160400]
[278.41696167 431.01535034]
[263.46633911 432.23138428]
[250.59585571 424.52523804]
[255.20986938 438.79797363]
[259.82388306 453.07070923]
[264.43789673 467.34344482]
[269.05191040 481.61618042]
[283.99911499 479.86502075]
[299.00076294 481.06387329]
[313.48016357 485.16665649]
[326.88082886 492.01568604]
[338.68759155 501.34765625]
[348.44671631 512.80395508]
[355.78302002 525.94415283]
[360.41458130 540.26318359]
[362.16329956 555.21069336]
[360.96203613 570.21209717]
[356.85690308 584.69085693]
[350.00570679 598.09039307]
[340.67181396 609.89569092]
[329.21395874 619.65295410]
[316.07260132 626.98712158]
[301.75280762 631.61633301]
[286.80499268 633.36267090]
[271.80377197 632.15893555]
[257.32568359 628.05151367]
[243.92724609 621.19812012]
[232.12348938 611.86230469]
[222.36808777 600.40289307]
[215.03601074 587.26031494]
[210.40911865 572.93981934]
[208.66520691 557.99169922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[10 172]
[11 171]
[13 169]
[14 168]
[15 167]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[39 150]
[41 149]
[42 148]
[44 145]
[45 144]
[46 143]
[48 141]
[50 139]
[51 138]
[52 137]
[53 136]
[55 135]
[56 134]
[57 133]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[68 121]
[69 120]
[70 119]
[71 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
