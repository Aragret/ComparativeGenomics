%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[141.63542175 701.05816650]
[128.28227234 694.21484375]
[115.36667633 686.57769775]
[102.93576050 678.17474365]
[91.03488922 669.03649902]
[79.70748138 659.19635010]
[68.99487305 648.69024658]
[58.93616104 637.55651855]
[49.56803513 625.83575439]
[40.92468643 613.57073975]
[33.03765488 600.80621338]
[25.93571663 587.58874512]
[19.64478493 573.96661377]
[14.18781853 559.98950195]
[9.58472729 545.70843506]
[5.85230780 531.17547607]
[3.00417948 516.44366455]
[1.05073488 501.56674194]
[-0.00089836 486.59902954]
[-0.14688262 471.59515381]
[0.61331469 456.60980225]
[2.27691960 441.69772339]
[4.83786201 426.91326904]
[8.28679752 412.31042480]
[12.61114025 397.94247437]
[17.79511070 383.86184692]
[23.81979561 370.11987305]
[30.66320992 356.76675415]
[38.30038071 343.85119629]
[46.70344543 331.42031860]
[55.84173584 319.51950073]
[65.68191528 308.19213867]
[76.18806458 297.47958374]
[87.32186127 287.42089844]
[99.04267120 278.05282593]
[111.30773163 269.40954590]
[124.07228088 261.52258301]
[137.28974915 254.42070007]
[150.91191101 248.12982178]
[145.45655823 234.15702820]
[140.00119019 220.18423462]
[134.54583740 206.21142578]
[129.09048462 192.23863220]
[123.63512421 178.26583862]
[109.36318970 168.05413818]
[112.29129791 149.87426758]
[106.62851715 135.98423767]
[100.96572876 122.09421539]
[95.30294037 108.20418549]
[91.05420685 105.12811279]
[88.83139038 99.89051819]
[89.68514252 93.81532288]
[84.43842316 79.76284790]
[79.19170380 65.71038055]
[73.94498444 51.65790558]
[60.98175430 52.58157730]
[48.23492432 50.11862564]
[36.57316971 44.44402313]
[26.78938866 35.95136261]
[19.54676437 25.22557640]
[15.33383369 13.00264072]
[14.43153191 0.11908800]
[16.89446831 -12.54525471]
[22.54767799 -24.12734222]
[30.99902725 -33.83972931]
[41.66641235 -41.02410889]
[37.05240250 -55.29684448]
[32.43839264 -69.56958008]
[27.82438469 -83.84230804]
[23.21037483 -98.11504364]
[18.59636497 -112.38777924]
[13.98235607 -126.66050720]
[-0.80015653 -123.98455048]
[-15.80744553 -123.30284882]
[-30.77168846 -124.62757111]
[-45.42583084 -127.93506622]
[-59.50835037 -133.16632080]
[-72.76792908 -140.22798157]
[-84.96794128 -148.99400330]
[-95.89064789 -159.30796814]
[-105.34113312 -170.98580933]
[-113.15074158 -183.81910706]
[-119.18009186 -197.57884216]
[-123.32159424 -212.01945496]
[-125.50133514 -226.88323975]
[-125.68041229 -241.90493774]
[-123.85562897 -256.81646729]
[-120.05954742 -271.35171509]
[-114.35992432 -285.25128174]
[-106.85847473 -298.26708984]
[-97.68905640 -310.16690063]
[-87.01532745 -320.73831177]
[-75.02775574 -329.79269409]
[-61.94028854 -337.16842651]
[-47.98647690 -342.73391724]
[-33.41534805 -346.38980103]
[-18.48693848 -348.07089233]
[-3.46766281 -347.74713135]
[11.37444115 -345.42431641]
[25.77449799 -341.14392090]
[39.47552109 -334.98233032]
[52.23300552 -327.04946899]
[63.81927109 -317.48696899]
[74.02754974 -306.46542358]
[82.67566681 -294.18154907]
[89.60928345 -280.85455322]
[94.70465851 -266.72229004]
[97.87086487 -252.03698730]
[99.05139160 -237.06066895]
[98.22517395 -222.06065369]
[95.40695953 -207.30459595]
[90.64703369 -193.05586243]
[84.03035736 -179.56871033]
[75.67499542 -167.08386230]
[65.73007202 -155.82411194]
[54.37306595 -145.99041748]
[41.80665207 -137.75823975]
[28.25508881 -131.27452087]
[32.86909866 -117.00178528]
[37.48310852 -102.72904968]
[42.09711838 -88.45632172]
[46.71112823 -74.18358612]
[51.32513428 -59.91085434]
[55.93914413 -45.63811874]
[73.03938293 -45.45336151]
[89.06813812 -39.42212296]
[102.08593750 -28.25613976]
[110.51149750 -13.28953171]
[113.31374359 3.68058705]
[110.13799286 20.60989571]
[101.35073853 35.45313263]
[87.99745941 46.41119003]
[93.24417877 60.46366119]
[98.49089050 74.51612854]
[103.73760986 88.56860352]
[109.19297028 102.54139709]
[114.85575867 116.43142700]
[120.51853943 130.32145691]
[126.18132782 144.21148682]
[137.74548340 149.92404175]
[142.17607117 161.60964966]
[137.60792542 172.81048584]
[143.06327820 186.78327942]
[148.51863098 200.75607300]
[153.97399902 214.72886658]
[159.42935181 228.70167542]
[164.88470459 242.67446899]
[179.16574097 238.07118225]
[193.69865417 234.33856201]
[208.43043518 231.49021912]
[223.30729675 229.53657532]
[238.27499390 228.48472595]
[253.27888489 228.33853149]
[268.26422119 229.09852600]
[283.17636108 230.76193237]
[297.96081543 233.32266235]
[312.56372070 236.77139282]
[326.93173218 241.09553528]
[341.01245117 246.27931213]
[354.75448608 252.30380249]
[368.10769653 259.14703369]
[381.02337646 266.78402710]
[393.45437622 275.18692017]
[405.35531616 284.32504272]
[416.68283081 294.16506958]
[427.39553833 304.67105103]
[437.45434570 315.80471802]
[446.82257080 327.52539062]
[455.46603394 339.79034424]
[463.35317993 352.55477905]
[470.45526123 365.77215576]
[476.74630737 379.39422607]
[482.20339966 393.37127686]
[486.80664062 407.65234375]
[490.53918457 422.18527222]
[493.38745117 436.91705322]
[495.34103394 451.79394531]
[496.39279175 466.76162720]
[496.53894043 481.76553345]
[495.77886963 496.75088501]
[494.11541748 511.66299438]
[491.55459595 526.44744873]
[488.10580444 541.05029297]
[483.78158569 555.41833496]
[478.59774780 569.49902344]
[472.57318115 583.24102783]
[465.72988892 596.59423828]
[458.09283447 609.50982666]
[449.68991089 621.94079590]
[440.55172729 633.84173584]
[430.71163940 645.16918945]
[420.20559692 655.88183594]
[409.07189941 665.94061279]
[397.35116577 675.30877686]
[385.08618164 683.95214844]
[372.32171631 691.83923340]
[359.10430908 698.94128418]
[345.48220825 705.23223877]
[331.50512695 710.68927002]
[317.22406006 715.29241943]
[302.69110107 719.02490234]
[287.95928955 721.87310791]
[273.08239746 723.82666016]
[258.11471558 724.87835693]
[243.11080933 725.02441406]
[228.12547302 724.26428223]
[213.21336365 722.60070801]
[198.42890930 720.03985596]
[183.82606506 716.59100342]
[169.45808411 712.26672363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[46 139]
[47 138]
[48 137]
[49 136]
[52 135]
[53 134]
[54 133]
[55 132]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
