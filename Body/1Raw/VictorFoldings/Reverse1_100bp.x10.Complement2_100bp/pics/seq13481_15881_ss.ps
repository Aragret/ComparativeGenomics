%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[104.09790802 711.70800781]
[90.21389771 717.41674805]
[75.84371948 721.75885010]
[61.12155151 724.69366455]
[46.18486023 726.19390869]
[31.17310333 726.24554443]
[16.22644615 724.84808350]
[1.48444414 722.01452637]
[-12.91525650 717.77142334]
[-26.83820534 712.15832520]
[-40.15440750 705.22760010]
[-52.73952484 697.04406738]
[-64.47605896 687.68408203]
[-75.25441742 677.23504639]
[-84.97396851 665.79455566]
[-93.54396057 653.46929932]
[-100.88436890 640.37451172]
[-106.92666626 626.63238525]
[-111.61444092 612.37121582]
[-114.90390778 597.72424316]
[-116.76435852 582.82812500]
[-117.17842102 567.82196045]
[-116.14224243 552.84594727]
[-113.66547394 538.03979492]
[-109.77126312 523.54187012]
[-104.49596405 509.48745728]
[-97.88882446 496.00778198]
[-90.01153564 483.22872925]
[-80.93766022 471.26962280]
[-70.75190735 460.24212646]
[-59.54938126 450.24917603]
[-47.43468857 441.38409424]
[-34.52093887 433.72964478]
[-20.92870522 427.35729980]
[-6.78490019 422.32656860]
[7.77841663 418.68441772]
[22.62526894 416.46484375]
[37.61703110 415.68856812]
[52.61372375 416.36285400]
[67.47532654 418.48141479]
[71.01499939 403.90502930]
[74.55467224 389.32864380]
[78.09434509 374.75228882]
[73.57891846 360.55859375]
[84.35424042 348.97399902]
[87.89391327 334.39764404]
[91.43358612 319.82125854]
[94.75585175 305.19378662]
[97.85995483 290.51849365]
[100.96406555 275.84320068]
[102.07971954 260.88473511]
[101.18690491 245.91133118]
[100.29408264 230.93792725]
[99.40126801 215.96452332]
[98.50845337 200.99111938]
[97.61563873 186.01771545]
[84.23507690 179.47354126]
[75.87106323 167.02769470]
[74.85298157 151.96681213]
[81.55416870 138.32896423]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.85394287 40.96748734]
[81.50814819 27.52656746]
[88.66942596 14.46650124]
[87.88810730 -0.51313603]
[86.99529266 -15.48654175]
[83.67939758 -21.20636749]
[83.74069214 -26.88908386]
[86.30555725 -30.91779137]
[85.85895538 -45.91114044]
[85.41234589 -60.90449142]
[71.25631714 -64.05709076]
[58.27738190 -70.50729370]
[47.23051834 -79.87481689]
[38.75709915 -91.60984802]
[33.34765625 -105.02528381]
[31.31349373 -119.33697510]
[32.76876068 -133.70956421]
[37.62406540 -147.30522156]
[45.59195328 -159.33250427]
[56.20391464 -169.09243774]
[68.83793640 -176.01910400]
[82.75496674 -179.71247864]
[82.53163910 -194.71081543]
[82.30831146 -209.70915222]
[82.08498383 -224.70748901]
[74.14308167 -238.39094543]
[81.69003296 -251.23199463]
[81.46670532 -266.23034668]
[81.24337769 -281.22866821]
[66.84367371 -285.91131592]
[54.74613953 -295.01782227]
[46.26302719 -307.56036377]
[42.31452179 -322.17843628]
[43.32892609 -337.28637695]
[49.19620514 -351.24539185]
[59.27991867 -362.54129028]
[72.48626709 -369.94879150]
[87.38271332 -372.66439819]
[102.35341644 -370.39352417]
[115.77445221 -363.38250732]
[126.19001770 -352.39184570]
[132.47030640 -338.61370850]
[133.93408203 -323.54269409]
[130.42256165 -308.81353760]
[122.31665039 -296.02395630]
[110.49561310 -286.56130981]
[96.24171448 -281.45199585]
[96.46504211 -266.45367432]
[96.68836975 -251.45532227]
[104.61430359 -238.84466553]
[97.08332062 -224.93081665]
[97.30664825 -209.93247986]
[97.52997589 -194.93414307]
[97.75330353 -179.93580627]
[112.85153961 -176.25297546]
[126.49489594 -168.78804016]
[137.75366211 -158.04313660]
[145.85894775 -144.74411011]
[150.25514221 -129.79150391]
[150.63806152 -114.19960785]
[146.97592163 -99.02758789]
[139.51194763 -85.30758667]
[128.74816895 -73.97451782]
[115.41172791 -65.80230713]
[100.40570068 -61.35109711]
[100.85230255 -46.35774612]
[101.29891205 -31.36439705]
[101.96869659 -16.37935829]
[102.86151123 -1.40595186]
[106.39756012 5.08389616]
[103.65446472 13.79671574]
[111.95235443 26.16580582]
[104.83898163 40.29770279]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[122.86980438 135.86544800]
[131.14410400 148.61035156]
[131.92294312 163.68550110]
[125.09714508 177.03706360]
[112.58904266 185.12489319]
[113.48185730 200.09829712]
[114.37467194 215.07170105]
[115.26749420 230.04510498]
[116.16030884 245.01852417]
[117.05312347 259.99191284]
[123.25582886 246.33445740]
[133.32885742 235.21986389]
[146.31210327 227.70751953]
[160.96809387 224.51344299]
[175.89990234 225.94209290]
[189.68432617 231.85728455]
[201.00753784 241.69522095]
[208.79026794 254.51821899]
[212.29071045 269.10406494]
[211.17523193 284.06253052]
[205.55015564 297.96786499]
[195.95162964 309.49472046]
[183.29452515 317.54440308]
[168.78521729 321.34970093]
[153.80667114 320.54788208]
[139.78651428 315.21539307]
[128.06108093 305.86047363]
[119.74796295 293.37481689]
[115.63937378 278.94729614]
[112.53526306 293.62261963]
[109.43115234 308.29791260]
[111.11402130 314.69161987]
[109.55010223 320.15524292]
[106.00996399 323.36093140]
[102.47029114 337.93731689]
[98.93061829 352.51367188]
[103.19286346 367.74993896]
[92.67072296 378.29196167]
[89.13105011 392.86831665]
[85.59137726 407.44470215]
[82.05170441 422.02108765]
[96.22977448 426.95440674]
[109.86551666 433.23312378]
[122.83160400 440.79855347]
[135.00698853 449.58010864]
[146.27796936 459.49578857]
[156.53932190 470.45297241]
[165.69523621 482.34939575]
[173.66023254 495.07394409]
[180.35992432 508.50784302]
[185.73176575 522.52563477]
[189.72560120 536.99645996]
[192.30412292 551.78521729]
[193.44328308 566.75378418]
[193.13244629 581.76239014]
[191.37448120 596.67095947]
[188.18583679 611.34027100]
[183.59625244 625.63330078]
[177.64862061 639.41668701]
[170.39843750 652.56164551]
[161.91342163 664.94549561]
[152.27278137 676.45263672]
[141.56654358 686.97552490]
[129.89466858 696.41601562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 187]
[41 186]
[42 185]
[43 184]
[45 182]
[46 181]
[47 180]
[48 177]
[49 176]
[50 175]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[61 146]
[62 145]
[65 143]
[66 142]
[67 141]
[68 140]
[70 138]
[71 136]
[72 135]
[75 134]
[76 133]
[77 132]
[89 121]
[90 120]
[91 119]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
