%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[68.53563690 613.93859863]
[75.15799713 627.50500488]
[77.87348175 642.35522461]
[76.48057556 657.38726807]
[71.08264923 671.48565674]
[62.08026505 683.60424805]
[50.14146042 692.84368896]
[36.15216827 698.51837158]
[21.15048981 700.20721436]
[6.24965096 697.78491211]
[-7.44460869 691.43121338]
[-18.91608429 681.61755371]
[-27.31351471 669.07220459]
[-32.01375580 654.72613525]
[-32.66802216 639.64385986]
[-29.22775459 624.94464111]
[-21.94825172 611.71923828]
[-11.36969566 600.94903564]
[1.72291112 593.43328857]
[16.35801125 589.72973633]
[31.44958496 590.11315918]
[35.85058212 575.77331543]
[40.25157928 561.43347168]
[44.65258026 547.09362793]
[49.05357742 532.75378418]
[53.45457458 518.41394043]
[57.85557175 504.07409668]
[62.25656891 489.73425293]
[66.65756989 475.39440918]
[70.30565643 460.84478760]
[73.19092560 446.12487793]
[63.23297882 437.23211670]
[58.93502045 424.47784424]
[61.52104568 411.15933228]
[70.42056274 400.77584839]
[83.39022827 396.10910034]
[86.49433899 381.43377686]
[89.59844971 366.75848389]
[92.70256042 352.08319092]
[94.26308441 337.16458130]
[94.26308441 322.16458130]
[94.26308441 307.16458130]
[86.52577972 294.43731689]
[94.26308441 280.63714600]
[94.26308441 265.63714600]
[94.26308441 250.63713074]
[94.26308441 235.63713074]
[84.68238831 220.93417358]
[94.02182770 205.06419373]
[93.79850006 190.06585693]
[93.57517242 175.06750488]
[82.74186707 164.91000366]
[82.30172729 149.70272827]
[93.02931976 138.40863037]
[92.80599213 123.41030121]
[92.58266449 108.41196442]
[82.19831085 119.23625183]
[67.29980469 120.97818756]
[54.69852448 112.84136963]
[50.15561295 98.54585266]
[55.74803162 84.62734222]
[68.91899109 77.44920349]
[83.64691925 80.29318237]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[86.40403748 60.39994431]
[97.05175781 46.45027924]
[98.16740417 31.49182510]
[99.28305054 16.53337097]
[92.59358978 2.19594884]
[101.25607300 -9.92059708]
[102.37171936 -24.87905121]
[103.48736572 -39.83750534]
[103.59903717 -54.83708954]
[102.70622253 -69.81049347]
[101.81340790 -84.78389740]
[100.92058563 -99.75730896]
[91.80921936 -108.88669586]
[91.37384796 -121.37645721]
[99.30278778 -130.51202393]
[98.63300323 -145.49705505]
[97.96321869 -160.48210144]
[97.29343414 -175.46713257]
[93.78395844 -183.90048218]
[96.72691345 -190.67993164]
[96.28030396 -205.67327881]
[93.86817169 -209.28375244]
[92.83438110 -213.09109497]
[93.07156372 -216.63780212]
[94.33482361 -219.54826355]
[96.28030396 -221.56648254]
[96.72691345 -236.55984497]
[97.17351532 -251.55319214]
[82.59105682 -255.33465576]
[69.21590424 -262.26669312]
[57.71895218 -272.00155640]
[48.67688370 -284.05099487]
[42.54324341 -297.81057739]
[39.62569809 -312.59014893]
[40.07058334 -327.64837646]
[43.85558701 -342.22991943]
[50.79085541 -355.60339355]
[60.52851868 -367.09796143]
[72.58013916 -376.13711548]
[86.34120941 -382.26742554]
[101.12148285 -385.18139648]
[116.17959595 -384.73284912]
[130.76022339 -380.94433594]
[144.13201904 -374.00579834]
[155.62425232 -364.26535034]
[164.66047668 -352.21154785]
[170.78744507 -338.44900513]
[173.69783020 -323.66802979]
[173.24565125 -308.61001587]
[169.45356750 -294.03030396]
[162.51182556 -280.66018677]
[152.76860046 -269.17031860]
[140.71260071 -260.13702393]
[126.94855499 -254.01338196]
[112.16687012 -251.10658264]
[111.72026062 -236.11323547]
[111.27365875 -221.11988831]
[111.27365875 -206.11988831]
[111.72026062 -191.12652588]
[112.27847290 -176.13691711]
[112.94825745 -161.15188599]
[113.61804199 -146.16683960]
[114.28782654 -131.18180847]
[124.51548767 -116.92130280]
[115.89399719 -100.65012360]
[116.78681183 -85.67671967]
[117.67962646 -70.70330811]
[118.57244110 -55.72990417]
[127.17255402 -68.01966095]
[141.01104736 -73.80725098]
[155.79989624 -71.29933929]
[166.95663452 -61.27301407]
[171.02423096 -46.83505249]
[166.74226379 -32.45920944]
[155.43757629 -22.59999657]
[140.61305237 -20.31240082]
[126.86220551 -26.30525589]
[118.44582367 -38.72185516]
[117.33017731 -23.76340294]
[116.21452332 -8.80494881]
[122.98378754 4.46254539]
[114.24150848 17.64902115]
[113.12585449 32.60747528]
[112.01020813 47.56592560]
[119.66363525 56.93350983]
[118.85659027 69.40477753]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.58100128 108.18863678]
[107.80432892 123.18697357]
[108.02765656 138.18530273]
[119.08675385 149.15499878]
[119.09958649 164.36862183]
[108.57350922 174.84417725]
[108.79683685 189.84252930]
[109.02016449 204.84086609]
[117.71479797 214.36798096]
[117.59204102 226.86473083]
[109.26308441 235.63713074]
[109.26308441 250.63713074]
[109.26308441 265.63714600]
[109.26308441 280.63714600]
[117.00038147 294.43731689]
[109.26308441 307.16458130]
[109.26308441 322.16458130]
[109.26308441 337.16458130]
[116.88241577 324.24383545]
[128.81994629 315.16113281]
[143.30479431 311.26385498]
[158.18824768 313.13009644]
[171.26242065 320.48306274]
[180.58782959 332.23196411]
[184.78111267 346.63394165]
[183.22023010 361.55249023]
[176.13670349 374.77459717]
[164.58135986 384.33880615]
[150.26835632 388.82632446]
[135.32093811 387.57147217]
[121.95646667 380.76037598]
[112.15748596 369.40344238]
[107.37786102 355.18728638]
[104.27375031 369.86260986]
[101.16963959 384.53790283]
[98.06552887 399.21319580]
[109.56573486 411.61648560]
[111.38883972 428.26513672]
[103.01326752 442.57638550]
[87.91082001 449.01016235]
[85.02555084 463.73004150]
[97.42509460 455.28900146]
[112.36158752 456.66787720]
[123.00624847 467.23629761]
[124.49250031 482.16247559]
[116.14083099 494.62240601]
[101.76952362 498.91955566]
[87.94894409 493.08932495]
[80.99741364 479.79541016]
[76.59642029 494.13525391]
[72.19541931 508.47509766]
[67.79441833 522.81494141]
[63.39342499 537.15478516]
[58.99242401 551.49462891]
[54.59142685 565.83447266]
[50.19042969 580.17431641]
[45.78943253 594.51416016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 194]
[31 193]
[36 189]
[37 188]
[38 187]
[39 186]
[40 171]
[41 170]
[42 169]
[44 167]
[45 166]
[46 165]
[47 164]
[49 161]
[50 160]
[51 159]
[54 156]
[55 155]
[56 154]
[64 153]
[65 152]
[67 149]
[68 148]
[69 147]
[71 145]
[72 144]
[73 143]
[74 133]
[75 132]
[76 131]
[77 130]
[80 128]
[81 127]
[82 126]
[83 125]
[85 124]
[86 123]
[91 122]
[92 121]
[93 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
