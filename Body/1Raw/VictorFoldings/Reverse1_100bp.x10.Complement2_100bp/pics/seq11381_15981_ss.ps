%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[94.25746918 532.25219727]
[79.31973267 534.08251953]
[64.31195831 532.96319580]
[49.81100082 528.93719482]
[36.37424469 522.15930176]
[24.51816368 512.89001465]
[14.69847107 501.48565674]
[7.29260921 488.38455200]
[2.58524060 474.09024048]
[0.75730407 459.15222168]
[1.87906051 444.14462280]
[5.90739250 429.64431763]
[12.68746185 416.20864868]
[21.95866013 404.35406494]
[33.36462784 394.53622437]
[46.46694946 387.13247681]
[60.76200867 382.42742920]
[75.70034027 380.60189819]
[76.81598663 365.64346313]
[77.93164062 350.68499756]
[79.04728699 335.72656250]
[79.71707153 320.74151611]
[79.94039917 305.74316406]
[80.16372681 290.74484253]
[80.05205536 275.74526978]
[79.60545349 260.75189209]
[79.15884399 245.75856018]
[78.71224213 230.76519775]
[78.26563263 215.77185059]
[70.18031311 228.40623474]
[57.19558334 235.91601562]
[42.21227646 236.62350464]
[28.57769966 230.37063599]
[19.33785248 218.55433655]
[16.55693817 203.81436157]
[20.85622215 189.44369507]
[31.27523232 178.65277100]
[45.48633575 173.85229492]
[60.31473541 176.11471558]
[72.44773102 184.93460083]
[79.17478180 198.34159851]
[81.17879486 183.47607422]
[83.18280792 168.61053467]
[85.18682098 153.74501038]
[87.19083405 138.87948608]
[76.83485413 133.75003052]
[68.32520294 125.93061066]
[62.34013367 116.04442596]
[59.35667419 104.87945557]
[59.61260986 93.32557678]
[63.08754730 82.30367279]
[69.50452423 72.69222260]
[78.35208130 65.25727844]
[88.92504120 60.59144211]
[100.38071442 59.06658936]
[103.26598358 44.34669876]
[106.15126038 29.62680626]
[109.03652954 14.90691471]
[111.92180634 0.18702324]
[103.37216949 -12.83378601]
[106.50793457 -27.72074699]
[118.97397614 -35.79127502]
[121.85924530 -50.51116562]
[124.74452209 -65.23105621]
[127.62979126 -79.95095062]
[130.18562317 -94.73160553]
[129.18136597 -109.69794464]
[124.99435425 -124.10173035]
[120.80734253 -138.50550842]
[116.62033081 -152.90928650]
[112.43331909 -167.31307983]
[107.03286743 -174.68009949]
[108.29290771 -181.96253967]
[104.32081604 -196.42706299]
[100.34871674 -210.89158630]
[85.44055939 -209.01342773]
[70.41684723 -209.27612305]
[55.58346176 -211.67433167]
[41.24238205 -216.15921021]
[27.68557549 -222.63948059]
[15.18904209 -230.98318481]
[4.00719404 -241.02046204]
[-5.63231993 -252.54696655]
[-13.53325176 -265.32806396]
[-19.53474808 -279.10348511]
[-23.51462746 -293.59283447]
[-25.39186287 -308.50112915]
[-25.12823677 -323.52481079]
[-22.72911644 -338.35806274]
[-18.24334526 -352.69885254]
[-11.76224804 -366.25527954]
[-3.41777086 -378.75128174]
[6.62020350 -389.93249512]
[18.14731407 -399.57131958]
[30.92888451 -407.47146606]
[44.70469666 -413.47210693]
[59.19429779 -417.45108032]
[74.10269165 -419.32739258]
[89.12636566 -419.06283569]
[103.95945740 -416.66281128]
[118.29998016 -412.17614746]
[131.85598755 -405.69421387]
[144.35148621 -397.34893799]
[155.53208923 -387.31027222]
[165.17018127 -375.78256226]
[173.06953430 -363.00051880]
[179.06932068 -349.22433472]
[183.04740906 -334.73449707]
[184.92279053 -319.82598877]
[184.65730286 -304.80230713]
[182.25634766 -289.96939087]
[177.76881409 -275.62911987]
[171.28602600 -262.07351685]
[162.94000244 -249.57853699]
[152.90065002 -238.39855957]
[141.37234497 -228.76118469]
[128.58979797 -220.86262512]
[114.81324005 -214.86369324]
[118.78533936 -200.39916992]
[122.75743866 -185.93464661]
[126.83710480 -171.50009155]
[131.02410889 -157.09629822]
[135.21112061 -142.69252014]
[139.39813232 -128.28874207]
[143.58514404 -113.88495636]
[146.21122742 -128.65328979]
[151.71765137 -142.60604858]
[159.88513184 -155.18746948]
[170.38835144 -165.89646912]
[182.80895996 -174.30648804]
[196.65225220 -180.08256531]
[211.36686707 -182.99465942]
[226.36671448 -182.92677307]
[241.05435181 -179.88159180]
[254.84478760 -173.98043823]
[267.18875122 -165.45831299]
[277.59460449 -154.65467834]
[285.64785767 -141.99984741]
[291.02777100 -127.99781799]
[293.52005005 -113.20631409]
[293.02542114 -98.21446991]
[289.56362915 -83.61940765]
[283.27252197 -70.00244141]
[274.40264893 -57.90592194]
[263.30734253 -47.81165695]
[250.42851257 -40.12169647]
[236.27909851 -35.14232635]
[221.42268372 -33.07187271]
[206.45097351 -33.99280548]
[191.96031189 -37.86843872]
[178.52783203 -44.54441071]
[166.68856812 -53.75481796]
[156.91404724 -65.13282013]
[149.59359741 -78.22521973]
[145.01966858 -92.50648499]
[146.81015015 -89.46897125]
[147.21835327 -85.41330719]
[145.78173828 -80.99861908]
[142.34968567 -77.06567383]
[139.46441650 -62.34578705]
[136.57913208 -47.62589645]
[133.69386292 -32.90600204]
[142.19065857 -20.72651100]
[139.47427368 -5.75734615]
[126.64169312 3.07229590]
[123.75642395 17.79218674]
[120.87114716 32.51207733]
[117.98587799 47.23197174]
[115.10060120 61.95186234]
[130.20925903 72.37591553]
[139.24369812 88.35437012]
[140.38739014 106.67442322]
[133.41033936 123.65243530]
[119.71545410 135.87463379]
[102.05636597 140.88349915]
[100.05234528 155.74902344]
[98.04833221 170.61454773]
[96.04431915 185.48008728]
[94.04030609 200.34561157]
[93.25898743 215.32525635]
[93.70558929 230.31860352]
[94.15219879 245.31195068]
[94.59880066 260.30529785]
[95.04541016 275.29864502]
[97.79028320 279.73855591]
[98.48785400 284.32839966]
[97.42385101 288.26324463]
[95.16206360 290.96817017]
[94.93873596 305.96649170]
[94.71540833 320.96484375]
[96.96392059 324.67941284]
[97.82667542 328.52911377]
[97.43135834 332.06170654]
[96.03939819 334.91287231]
[94.00573730 336.84219360]
[92.89009094 351.80065918]
[91.77444458 366.75909424]
[90.65879059 381.71755981]
[105.16104889 385.73886108]
[118.59999847 392.51239014]
[130.45907593 401.77783203]
[140.28247070 413.17904663]
[147.69256592 426.27777100]
[152.40455627 440.57052612]
[154.23733521 455.50796509]
[153.12043762 470.51593018]
[149.09680176 485.01754761]
[142.32107544 498.45538330]
[133.05371094 510.31298828]
[121.65093231 520.13452148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 198]
[19 197]
[20 196]
[21 195]
[22 190]
[23 189]
[24 188]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[62 162]
[63 161]
[64 160]
[65 159]
[66 155]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[73 120]
[74 119]
[75 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
