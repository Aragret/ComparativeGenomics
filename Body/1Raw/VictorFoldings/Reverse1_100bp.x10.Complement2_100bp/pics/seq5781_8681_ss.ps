%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[104.63523102 389.86184692]
[106.74477386 374.98065186]
[111.10131073 360.59588623]
[117.60270691 347.04479980]
[126.09657288 334.64501953]
[136.38378906 323.68719482]
[148.22322083 314.42825317]
[161.33732605 307.08517456]
[156.09060669 293.03268433]
[150.84388733 278.98022461]
[139.14358521 269.76327515]
[141.56509399 254.12847900]
[136.31837463 240.07600403]
[133.27961731 238.28764343]
[130.95610046 234.93856812]
[130.07191467 230.38098145]
[131.16651917 225.27716064]
[126.55250549 211.00444031]
[121.93849945 196.73170471]
[117.21836090 182.49371338]
[112.39236450 168.29125977]
[107.56636810 154.08880615]
[105.11435699 152.73019409]
[103.05277252 150.31846619]
[101.78541565 146.99743652]
[101.65663910 143.05435181]
[102.90330505 138.89505005]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[82.50542450 66.72388458]
[78.21129608 52.35167313]
[73.81030273 38.01182556]
[69.40930176 23.67197990]
[65.00830078 9.33213234]
[58.32810974 -4.09824371]
[49.54750443 -16.25969887]
[40.76690292 -28.42115593]
[31.98629951 -40.58261108]
[23.20569611 -52.74406815]
[19.18346024 -54.37979126]
[16.19183540 -56.95169830]
[14.39857578 -60.02083969]
[13.81164646 -63.13887024]
[14.29000759 -65.90099335]
[6.24883461 -78.56351471]
[-7.68072081 -86.06539154]
[-7.97194958 -100.95714569]
[-16.01312256 -113.61966705]
[-24.05429649 -126.28219604]
[-29.82005501 -112.43459320]
[-44.19867706 -108.16197968]
[-56.59077454 -116.61395264]
[-57.86135483 -131.56004333]
[-47.07379532 -141.98254395]
[-32.18167877 -140.19926453]
[-39.25878143 -153.42478943]
[-46.33588791 -166.65031433]
[-53.41299438 -179.87583923]
[-60.49009705 -193.10137939]
[-67.56720734 -206.32690430]
[-74.64431000 -219.55242920]
[-81.72141266 -232.77795410]
[-88.79852295 -246.00347900]
[-95.87562561 -259.22900391]
[-109.94725037 -253.96850586]
[-124.59448242 -250.63056946]
[-139.55593872 -249.27474976]
[-154.56462097 -249.92527771]
[-169.35266113 -252.57051086]
[-183.65615845 -257.16326904]
[-197.21984863 -263.62158203]
[-209.80168152 -271.83016968]
[-221.17710876 -281.64254761]
[-231.14311218 -292.88363647]
[-239.52186584 -305.35281372]
[-246.16381836 -318.82751465]
[-250.95045471 -333.06732178]
[-253.79632568 -347.81805420]
[-254.65066528 -362.81649780]
[-253.49821472 -377.79501343]
[-250.35954285 -392.48623657]
[-245.29067993 -406.62802124]
[-238.38206482 -419.96795654]
[-229.75698853 -432.26803589]
[-219.56939697 -443.30868530]
[-208.00106812 -452.89291382]
[-195.25848389 -460.84967041]
[-181.56903076 -467.03695679]
[-167.17703247 -471.34436035]
[-152.33930969 -473.69497681]
[-137.32066345 -474.04687500]
[-122.38912964 -472.39379883]
[-107.81117249 -468.76522827]
[-93.84695435 -463.22592163]
[-80.74567413 -455.87472534]
[-68.74115753 -446.84283447]
[-58.04761887 -436.29144287]
[-48.85591125 -424.40884399]
[-41.33007050 -411.40713501]
[-35.60439682 -397.51828003]
[-31.78107643 -382.99017334]
[-29.92834091 -368.08209229]
[-30.07925415 -353.06008911]
[-32.23112106 -338.19223022]
[-36.34553909 -323.74389648]
[-42.34908676 -309.97286987]
[-50.13461685 -297.12496948]
[-59.56319427 -285.42941284]
[-70.46654510 -275.09500122]
[-82.65010071 -266.30612183]
[-75.57299042 -253.08058167]
[-68.49588776 -239.85505676]
[-61.41878128 -226.62953186]
[-54.34167862 -213.40400696]
[-47.26457214 -200.17848206]
[-40.18746567 -186.95295715]
[-33.11035919 -173.72741699]
[-26.03325462 -160.50189209]
[-18.95615005 -147.27636719]
[-11.39177036 -134.32336426]
[-3.35059786 -121.66084290]
[4.69057512 -108.99832153]
[18.04497147 -102.40215302]
[18.91135979 -86.60469055]
[26.95253181 -73.94216919]
[35.36714935 -61.52466965]
[44.14775467 -49.36321259]
[52.92835617 -37.20175934]
[61.70896149 -25.04030228]
[70.48956299 -12.87884712]
[68.08748627 -27.68526459]
[69.54655457 -42.61413193]
[74.76999664 -56.67527390]
[83.41135406 -68.93606567]
[94.89747620 -78.58328247]
[108.46653748 -84.97707367]
[123.21855164 -87.69335175]
[138.17506409 -86.55196381]
[152.34407043 -81.62860870]
[164.78576660 -73.24983215]
[174.67497253 -61.97137451]
[181.35575867 -48.54129410]
[184.38502502 -33.85035706]
[183.56182861 -18.87296104]
[178.94076538 -4.60250616]
[170.82836914 8.01450253]
[159.76268005 18.14122391]
[146.47764587 25.10598755]
[131.85443115 28.44684792]
[116.86291504 27.94221497]
[102.49745178 23.62556267]
[89.71084595 15.78319550]
[79.34815216 4.93113422]
[83.74914551 19.27098083]
[88.15014648 33.61082840]
[92.55114746 47.95067596]
[97.51879120 53.42280960]
[96.90920258 62.53687668]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.36782837 134.92295837]
[121.76882172 149.26280212]
[126.59482574 163.46525574]
[131.42082214 177.66770935]
[137.14483643 184.78623962]
[136.21122742 192.11769104]
[140.82524109 206.39042664]
[145.43925476 220.66316223]
[150.37084961 234.82929993]
[155.61756897 248.88175964]
[167.69314575 259.10385132]
[164.89636230 273.73352051]
[170.14308167 287.78598022]
[175.38980103 301.83843994]
[190.10740662 298.79010010]
[205.11787415 298.02423096]
[220.06930542 299.55874634]
[234.61125183 303.35775757]
[248.40280151 309.33215332]
[261.12069702 317.34188843]
[272.46676636 327.19921875]
[282.17507935 338.67306519]
[290.01803589 351.49447632]
[295.81179810 365.36288452]
[299.42053223 379.95318604]
[300.75967407 394.92340088]
[299.79782104 409.92257690]
[296.55752563 424.59912109]
[291.11471558 438.60897827]
[283.59701538 451.62377930]
[274.18063354 463.33837891]
[263.08630371 473.47821045]
[250.57408142 481.80557251]
[236.93730164 488.12527466]
[222.49560547 492.28912354]
[207.58752441 494.19958496]
[192.56254578 493.81182861]
[177.77285767 491.13494873]
[163.56517029 486.23168945]
[150.27250671 479.21701050]
[138.20649719 470.25534058]
[127.64995575 459.55673218]
[118.85036469 447.37200928]
[112.01398468 433.98678589]
[107.30107880 419.71481323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[10 177]
[12 175]
[13 174]
[17 173]
[18 172]
[19 171]
[20 169]
[21 168]
[22 167]
[27 166]
[28 165]
[29 164]
[30 162]
[31 161]
[32 160]
[33 158]
[34 157]
[35 156]
[36 155]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[46 127]
[47 126]
[49 124]
[50 123]
[51 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
