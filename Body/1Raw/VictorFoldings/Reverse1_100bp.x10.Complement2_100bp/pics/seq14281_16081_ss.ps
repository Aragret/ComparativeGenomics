%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[129.88140869 628.41314697]
[115.71708679 623.01428223]
[104.25552368 613.09417725]
[96.88076782 599.85076904]
[94.48335266 584.88317871]
[97.35278320 569.99890137]
[105.14255524 556.99523926]
[116.91201019 547.44244385]
[131.23994446 542.49407959]
[131.46327209 527.49572754]
[131.68659973 512.49743652]
[131.90992737 497.49908447]
[132.13325500 482.50073242]
[132.35658264 467.50241089]
[132.57991028 452.50405884]
[132.02169800 437.51446533]
[130.68347168 422.57427979]
[129.34523010 407.63409424]
[113.47326660 400.96182251]
[103.11360168 387.09854126]
[101.19247437 369.80941772]
[108.32881165 353.84750366]
[122.63896942 343.64688110]
[120.85650635 328.75317383]
[119.07404327 313.85946655]
[117.29157257 298.96572876]
[103.54521942 293.22958374]
[94.45524597 281.30364990]
[92.54253387 266.33007812]
[98.42009735 252.31753540]
[110.60179138 243.06802368]
[108.81932068 228.17430115]
[107.03685760 213.28057861]
[105.25439453 198.38687134]
[103.47192383 183.49314880]
[92.21194458 170.03283691]
[99.59936523 153.16549683]
[97.59535217 138.29995728]
[95.59133911 123.43443298]
[93.58732605 108.56890869]
[89.72302246 94.07521057]
[84.06023407 80.18518829]
[78.39744568 66.29515839]
[72.73465729 52.40513229]
[67.07187653 38.51510620]
[61.30583954 24.66761971]
[55.43687820 10.86344337]
[49.56791687 -2.94073319]
[38.99103928 -4.33838463]
[30.01698685 -9.95741367]
[24.22944641 -18.72712898]
[22.61678123 -29.02820969]
[25.40376663 -38.99155045]
[32.02296448 -46.83739090]
[26.77624702 -60.88986206]
[21.52952766 -74.94232941]
[16.28281021 -88.99480438]
[12.22884083 -74.55300903]
[1.56639218 -64.00255585]
[-12.91739655 -60.10129166]
[-27.43649864 -63.86900711]
[-38.19565582 -74.32082367]
[-42.38245010 -88.72467041]
[-38.90246201 -103.31541443]
[-28.66535378 -114.27906036]
[-14.34708023 -118.74974823]
[0.30959573 -115.55884552]
[11.47296810 -105.54119110]
[8.36885738 -120.21649933]
[5.26474762 -134.89179993]
[2.16063738 -149.56710815]
[-8.26499462 -161.46739197]
[-3.32896996 -175.52032471]
[-6.43308020 -190.19561768]
[-9.53719044 -204.87092590]
[-24.51375771 -203.70582581]
[-39.51427078 -204.50558472]
[-54.28205109 -207.25653076]
[-68.56440735 -211.91156006]
[-82.11693573 -218.39106750]
[-94.70775604 -226.58413696]
[-106.12139893 -236.35058594]
[-116.16258240 -247.52330017]
[-124.65947723 -259.91110229]
[-131.46669006 -273.30203247]
[-136.46775818 -287.46694946]
[-139.57708740 -302.16345215]
[-140.74147034 -317.14004517]
[-139.94099426 -332.14053345]
[-137.18934631 -346.90817261]
[-132.53363037 -361.19030762]
[-126.05348969 -374.74255371]
[-117.85981750 -387.33297729]
[-108.09281921 -398.74615479]
[-96.91962433 -408.78680420]
[-84.53141022 -417.28311157]
[-71.14016724 -424.08969116]
[-56.97502518 -429.09005737]
[-42.27837753 -432.19869995]
[-27.30169868 -433.36236572]
[-12.30126095 -432.56118774]
[2.46625781 -429.80883789]
[16.74816704 -425.15243530]
[30.30008507 -418.67166138]
[42.89011765 -410.47738647]
[54.30283737 -400.70983887]
[64.34295654 -389.53616333]
[72.83867645 -377.14755249]
[79.64461517 -363.75598145]
[84.64432526 -349.59060669]
[87.75225067 -334.89379883]
[88.91521454 -319.91708374]
[88.11330414 -304.91665649]
[85.36026001 -290.14929199]
[80.70317841 -275.86758423]
[74.22174835 -262.31597900]
[66.02687836 -249.72634888]
[56.25879669 -238.31408691]
[45.08464432 -228.27450562]
[32.69562149 -219.77937317]
[19.30372810 -212.97407532]
[5.13811207 -207.97503662]
[8.24222279 -193.29972839]
[11.34633255 -178.62443542]
[21.54993820 -167.77381897]
[16.83593941 -152.67121887]
[19.94005013 -137.99591064]
[23.04416084 -123.32061005]
[26.14826965 -108.64530182]
[30.33528137 -94.24152374]
[35.58200073 -80.18904877]
[40.82871628 -66.13658142]
[46.07543564 -52.08410645]
[64.34450531 -45.31983948]
[71.86488342 -27.01826477]
[63.37209702 -8.80969429]
[69.24105835 4.99448299]
[75.11001587 18.79866028]
[80.62000275 23.72429085]
[80.96189880 32.85231781]
[86.62468719 46.74234772]
[92.28747559 60.63237381]
[97.95026398 74.52239990]
[103.61304474 88.41242981]
[105.22177124 73.49893951]
[111.52603149 59.88805389]
[121.86051941 49.01614761]
[135.13461304 42.03056335]
[149.94746399 39.66850662]
[164.73585510 42.17924881]
[177.93910217 49.29782867]
[188.16384888 60.27300262]
[194.33105469 73.94654083]
[195.78988647 88.87542725]
[192.38638306 103.48419952]
[184.47972107 116.23114777]
[172.90431213 125.77105713]
[158.88172913 131.09715271]
[143.89183044 131.64738464]
[129.51651001 127.36365509]
[117.27285004 118.69804382]
[108.45285034 106.56489563]
[110.45687103 121.43041992]
[112.46088409 136.29594421]
[114.46489716 151.16148376]
[124.23004150 159.58790588]
[125.59314728 172.01069641]
[118.36563873 181.71067810]
[120.14810944 196.60440063]
[121.93057251 211.49812317]
[123.71304321 226.39183044]
[125.49550629 241.28555298]
[139.51585388 247.39923096]
[148.53407288 259.62905884]
[150.20881653 274.63110352]
[144.18981934 288.36529541]
[132.18528748 297.18325806]
[133.96775818 312.07699585]
[135.75022888 326.97070312]
[137.53268433 341.86441040]
[149.83403015 345.79589844]
[159.69892883 354.05780029]
[165.68455505 365.39566040]
[166.93296814 378.10867310]
[163.29386902 390.30477905]
[155.34172058 400.18222046]
[144.28541565 406.29583740]
[145.62365723 421.23602295]
[146.96188354 436.17620850]
[156.51239014 424.60955811]
[171.24008179 421.76434326]
[184.41165161 428.94137573]
[190.00523376 442.85943604]
[185.46351624 457.15533447]
[172.86291504 465.29318237]
[157.96424866 463.55252075]
[147.57824707 452.72738647]
[147.35491943 467.72573853]
[147.13159180 482.72406006]
[146.90826416 497.72241211]
[146.68493652 512.72076416]
[146.46160889 527.71905518]
[146.23828125 542.71740723]
[160.41253662 548.09014893]
[171.89234924 557.98913574]
[179.29150391 571.21893311]
[181.71649170 586.18206787]
[178.87449646 601.07165527]
[171.10870361 614.08966064]
[159.35687256 623.66412354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 189]
[17 188]
[18 187]
[23 180]
[24 179]
[25 178]
[26 177]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[37 165]
[38 164]
[39 163]
[40 162]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 138]
[47 137]
[48 136]
[54 133]
[55 132]
[56 131]
[57 130]
[68 129]
[69 128]
[70 127]
[71 126]
[73 124]
[74 123]
[75 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
