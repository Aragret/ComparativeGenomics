%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[185.63867188 644.99072266]
[179.33058167 631.36114502]
[174.71139526 617.07055664]
[171.84848022 602.32739258]
[170.78355408 587.34661865]
[171.53218079 572.34674072]
[174.08341980 557.54644775]
[178.40008545 543.16162109]
[184.41921997 529.40197754]
[192.05303955 516.46820068]
[201.19023132 504.54895020]
[211.69754028 493.81796265]
[223.42173767 484.43179321]
[236.19186401 476.52728271]
[249.82167053 470.21969604]
[245.20767212 455.94696045]
[240.59365845 441.67422485]
[235.97964478 427.40148926]
[231.36563110 413.12875366]
[226.75163269 398.85601807]
[221.29626465 384.88323975]
[215.01890564 371.25991821]
[208.74154663 357.63659668]
[202.46418762 344.01327515]
[196.18682861 330.38995361]
[189.90946960 316.76666260]
[175.38752747 320.44818115]
[160.43238831 321.39874268]
[145.55328369 319.58450317]
[131.25712585 315.06579590]
[118.03122711 307.99514771]
[106.32672882 298.61203003]
[96.54315948 287.23489380]
[89.01483154 274.25021362]
[83.99940491 260.09951782]
[81.66906738 245.26419067]
[82.10462952 230.24929810]
[85.29272461 215.56622314]
[91.12621307 201.71534729]
[99.40776825 189.16894531]
[109.85656738 178.35513306]
[122.11782074 169.64318848]
[115.84046173 156.01988220]
[109.56310272 142.39656067]
[106.39974213 140.83915710]
[103.83356476 137.67216492]
[102.61286163 133.19297791]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[65.79678345 35.97082138]
[61.67230606 32.77148438]
[59.41335678 28.71557236]
[59.03381348 24.65712547]
[60.20659637 21.33193016]
[55.16968155 7.20290041]
[43.87214661 0.97967792]
[39.96776199 -10.89211845]
[45.03149796 -21.87779617]
[40.20550156 -36.08025360]
[35.37950134 -50.28270721]
[24.17587471 -56.67344284]
[20.44867706 -68.60205841]
[25.67541122 -79.51112366]
[21.06140327 -93.78385925]
[16.44739342 -108.05659485]
[11.83338356 -122.32932281]
[-2.93253517 -119.57324982]
[-17.92966843 -118.72807312]
[-32.91175079 -119.80769348]
[-47.63275909 -122.79435730]
[-61.85096741 -127.63903809]
[-75.33289337 -134.26217651]
[-87.85715485 -142.55502319]
[-99.21809387 -152.38139343]
[-109.22914886 -163.57991028]
[-117.72592926 -175.96672058]
[-124.56891632 -189.33840942]
[-129.64573669 -203.47538757]
[-132.87303162 -218.14552307]
[-134.19778442 -233.10792542]
[-133.59826660 -248.11688232]
[-131.08432007 -262.92593384]
[-126.69721222 -277.29193115]
[-120.50899506 -290.97894287]
[-112.62127686 -303.76223755]
[-103.16358185 -315.43185425]
[-92.29122162 -325.79623413]
[-80.18272400 -334.68511963]
[-67.03691864 -341.95260620]
[-53.06968307 -347.47930908]
[-38.51036072 -351.17453003]
[-23.59803200 -352.97750854]
[-8.57757282 -352.85870361]
[6.30436897 -350.82003784]
[20.80341911 -346.89501953]
[34.68148804 -341.14804077]
[47.71068573 -333.67355347]
[59.67706299 -324.59420776]
[70.38411713 -314.05917358]
[79.65602875 -302.24139404]
[87.34055328 -289.33493042]
[93.31149292 -275.55175781]
[97.47080994 -261.11816406]
[99.75019073 -246.27119446]
[100.11222076 -231.25462341]
[98.55094147 -216.31504822]
[95.09200287 -201.69779968]
[89.79219055 -187.64289856]
[82.73854828 -174.38113403]
[74.04689026 -162.13027954]
[63.85994720 -151.09150696]
[52.34499741 -141.44607544]
[39.69112396 -133.35238647]
[26.10611725 -126.94333649]
[30.72012711 -112.67060089]
[35.33413696 -98.39786530]
[39.94814682 -84.12513733]
[53.58696365 -73.08206177]
[49.58195877 -55.10870743]
[54.40795517 -40.90625000]
[59.23395538 -26.70379448]
[73.03567505 -15.86500549]
[69.29871368 2.16598439]
[74.33562469 16.29501343]
[79.68681335 30.30803680]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[123.18641663 136.11920166]
[129.46377563 149.74250793]
[135.74113464 163.36582947]
[150.33015442 159.70568848]
[165.33935547 158.78895569]
[180.25746155 160.64540100]
[194.57659912 165.21032715]
[207.80953979 172.32690430]
[219.50633240 181.75144958]
[229.26950073 193.16184998]
[236.76768494 206.16856384]
[241.74678040 220.32786560]
[244.03860474 235.15707397]
[243.56652832 250.15090942]
[240.34811401 264.79879761]
[234.49440002 278.60214233]
[226.20610046 291.09149170]
[215.76669312 301.84222412]
[203.53279114 310.48928833]
[209.81015015 324.11260986]
[216.08750916 337.73593140]
[222.36486816 351.35925293]
[228.64222717 364.98254395]
[234.91958618 378.60586548]
[239.16317749 364.21865845]
[250.98225403 354.98233032]
[265.96856689 354.34182739]
[278.53262329 362.53601074]
[283.98831177 376.50869751]
[280.30081177 391.04837036]
[268.84545898 400.73211670]
[253.89483643 401.94815063]
[241.02436829 394.24203491]
[245.63836670 408.51473999]
[250.25238037 422.78747559]
[254.86639404 437.06021118]
[259.48040771 451.33294678]
[264.09442139 465.60568237]
[278.83724976 462.74111938]
[293.81790161 461.67449951]
[308.81787109 462.42144775]
[323.61846924 464.97103882]
[338.00378418 469.28607178]
[351.76409912 475.30368042]
[364.69869995 482.93603516]
[376.61901855 492.07189941]
[387.35116577 502.57800293]
[396.73864746 514.30114746]
[404.64462280 527.07037354]
[410.95370483 540.69946289]
[415.57397461 554.98968506]
[418.43798828 569.73266602]
[419.50402832 584.71337891]
[418.75653076 599.71331787]
[416.20639038 614.51379395]
[411.89080811 628.89892578]
[405.87271118 642.65905762]
[398.23986816 655.59338379]
[389.10354614 667.51330566]
[378.59704590 678.24505615]
[366.87353516 687.63214111]
[354.10403442 695.53759766]
[340.47467041 701.84619141]
[326.18426514 706.46594238]
[311.44122314 709.32940674]
[296.46047974 710.39489746]
[281.46057129 709.64685059]
[266.66018677 707.09613037]
[252.27517700 702.78002930]
[238.51531982 696.76141357]
[225.58126831 689.12805176]
[213.66165161 679.99133301]
[202.93028259 669.48437500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[42 140]
[43 139]
[44 138]
[48 137]
[49 136]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[59 129]
[60 128]
[63 126]
[64 125]
[65 124]
[68 122]
[69 121]
[70 120]
[71 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
