%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[157.31015015 626.64892578]
[146.96327209 615.77905273]
[137.45762634 604.16632080]
[128.84638977 591.87573242]
[121.17771149 578.97595215]
[114.49449158 565.53918457]
[108.83409119 551.64056396]
[104.22816467 537.35778809]
[100.70248413 522.77075195]
[98.27675629 507.96102905]
[96.96455383 493.01144409]
[96.77320099 478.00558472]
[97.70378876 463.02740479]
[99.75109863 448.16064453]
[102.90368652 433.48843384]
[107.14392090 419.09286499]
[112.44808197 405.05441284]
[118.78651428 391.45159912]
[126.12377167 378.36050415]
[134.41880798 365.85430908]
[143.62524414 354.00299072]
[153.69160461 342.87283325]
[164.56156921 332.52603149]
[176.17436218 323.02050781]
[188.46504211 314.40936279]
[201.36486816 306.74081421]
[194.68466187 293.31042480]
[188.00447083 279.88006592]
[181.32427979 266.44967651]
[174.54428101 253.06941223]
[167.66487122 239.73997498]
[154.95220947 231.97869873]
[155.49865723 216.16693115]
[148.42155457 202.94140625]
[141.14831543 189.82270813]
[133.87509155 176.70402527]
[126.60186005 163.58532715]
[119.32863617 150.46662903]
[112.05540466 137.34793091]
[104.78217316 124.22924805]
[97.50894165 111.11054993]
[95.06135559 125.90951538]
[85.08061218 137.10704041]
[70.65935516 141.23347473]
[56.26617050 137.01017761]
[46.36094284 125.74578094]
[44.01291656 110.93069458]
[49.94964600 97.15553284]
[62.33158112 88.68866730]
[77.32203674 88.15366364]
[90.27623749 95.71646881]
[84.82087708 81.74367523]
[79.36552429 67.77087402]
[73.91016388 53.79807663]
[72.20923615 68.70132446]
[66.04344940 82.37550354]
[56.00049210 93.51727295]
[43.03759384 101.06466675]
[28.39028931 104.29832458]
[13.45467377 102.91002655]
[-0.34568858 97.03210449]
[-11.69543457 87.22480011]
[-19.51277924 74.42287445]
[-23.05262184 59.84654236]
[-21.97756767 44.88511658]
[-16.39008522 30.96462822]
[-6.82273531 19.41188622]
[5.81258154 11.32802773]
[20.31154633 7.48355293]
[35.29221344 8.24489212]
[49.32671738 13.53948116]
[61.07738113 22.86267281]
[69.42468262 35.32686615]
[67.86416626 20.40826416]
[65.63904572 5.57421970]
[53.21762466 -8.01952362]
[59.54829025 -24.38685799]
[56.44417953 -39.06216049]
[53.34006882 -53.73746109]
[42.91443634 -65.63774872]
[47.85046005 -79.69068146]
[44.74634933 -94.36598206]
[41.64224243 -109.04128265]
[38.53813171 -123.71659088]
[35.43402100 -138.39189148]
[20.37104607 -138.62542725]
[5.73782206 -142.20542908]
[-7.73165560 -148.95236206]
[-19.36176300 -158.52775574]
[-28.56913948 -170.45133972]
[-34.89194489 -184.12503052]
[-38.01303482 -198.86296082]
[-37.77585220 -213.92588806]
[-34.19229126 -228.55824280]
[-27.44211006 -242.02607727]
[-17.86388969 -253.65386963]
[-5.93807077 -262.85836792]
[7.73715305 -269.17785645]
[22.47583771 -272.29537964]
[37.53869629 -272.05453491]
[52.17018509 -268.46743774]
[65.63639069 -261.71398926]
[77.26185608 -252.13294983]
[86.46345520 -240.20489502]
[92.77963257 -226.52813721]
[95.89357758 -211.78871155]
[95.64909363 -196.72590637]
[92.05844879 -182.09529114]
[85.30174255 -168.63072205]
[75.71788788 -157.00756836]
[63.78760910 -147.80886841]
[50.10932159 -141.49600220]
[53.21343231 -126.82069397]
[56.31754303 -112.14539337]
[59.42165375 -97.47009277]
[62.52576447 -82.79479218]
[72.72937012 -71.94418335]
[68.01537323 -56.84157181]
[71.11948395 -42.16627121]
[74.22359467 -27.49096870]
[84.18762207 -20.63205719]
[86.89381409 -8.43122482]
[80.35894012 2.68894696]
[89.60432434 -9.12303162]
[104.47681427 -11.07469082]
[116.45677185 -2.04803157]
[118.68153381 12.78606510]
[109.87665558 24.92995644]
[95.08596802 27.42706871]
[82.78276825 18.84774017]
[84.34329224 33.76634598]
[87.88296509 48.34272003]
[93.33831787 62.31551743]
[98.79367828 76.28831482]
[104.24903107 90.26111603]
[110.62763977 103.83731842]
[117.90087128 116.95601654]
[125.17409515 130.07470703]
[132.44732666 143.19340515]
[139.72055054 156.31210327]
[146.99378967 169.43078613]
[154.26701355 182.54948425]
[161.54025269 195.66818237]
[167.00158691 199.39447021]
[169.40104675 204.54614258]
[168.82807922 209.28752136]
[182.03280640 218.00221252]
[180.99430847 232.86056519]
[187.87371826 246.19000244]
[194.59037781 252.38066101]
[194.75465393 259.76950073]
[201.43484497 273.19985962]
[208.11503601 286.63024902]
[214.79524231 300.06060791]
[228.69372559 294.39984131]
[242.97637939 289.79354858]
[257.56332397 286.26748657]
[272.37298584 283.84136963]
[287.32254028 282.52874756]
[302.32839966 282.33700562]
[317.30661011 283.26721191]
[332.17343140 285.31411743]
[346.84570312 288.46630859]
[361.24139404 292.70617676]
[375.27999878 298.00997925]
[388.88296509 304.34805298]
[401.97427368 311.68493652]
[414.48065186 319.97964478]
[426.33221436 329.18579102]
[437.46267700 339.25183105]
[447.80972290 350.12155151]
[457.31558228 361.73406982]
[465.92703247 374.02453613]
[473.59594727 386.92413330]
[480.27938843 400.36077881]
[485.94003296 414.25933838]
[490.54620361 428.54202271]
[494.07217407 443.12899780]
[496.49813843 457.93869019]
[497.81060791 472.88824463]
[498.00222778 487.89410400]
[497.07189941 502.87231445]
[495.02487183 517.73913574]
[491.87252808 532.41137695]
[487.63256836 546.80700684]
[482.32864380 560.84558105]
[475.99044800 574.44848633]
[468.65341187 587.53973389]
[460.35861206 600.04602051]
[451.15237427 611.89752197]
[441.08621216 623.02789307]
[430.21643066 633.37487793]
[418.60379028 642.88061523]
[406.31326294 651.49194336]
[393.41360474 659.16070557]
[379.97689819 665.84405518]
[366.07830811 671.50457764]
[351.79556274 676.11065674]
[337.20855713 679.63647461]
[322.39883423 682.06231689]
[307.44924927 683.37463379]
[292.44342041 683.56610107]
[277.46520996 682.63568115]
[262.59841919 680.58850098]
[247.92620850 677.43603516]
[233.53059387 673.19592285]
[219.49209595 667.89190674]
[205.88922119 661.55358887]
[192.79806519 654.21643066]
[180.29180908 645.92150879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 154]
[27 153]
[28 152]
[29 151]
[30 149]
[31 148]
[33 146]
[34 143]
[35 142]
[36 141]
[37 140]
[38 139]
[39 138]
[40 137]
[41 136]
[51 135]
[52 134]
[53 133]
[54 132]
[73 131]
[74 130]
[75 123]
[77 120]
[78 119]
[79 118]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
