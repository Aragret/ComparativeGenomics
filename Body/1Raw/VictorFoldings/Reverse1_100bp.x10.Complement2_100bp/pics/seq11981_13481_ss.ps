%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[79.86785126 687.20001221]
[66.93084717 679.53564453]
[55.47532272 669.79504395]
[45.83087540 658.25848389]
[38.27498627 645.25787354]
[33.02506256 631.16723633]
[30.23215103 616.39196777]
[29.97661018 601.35723877]
[32.26579285 586.49566650]
[37.03383255 572.23474121]
[44.14354706 558.98480225]
[53.39037323 547.12713623]
[64.50826263 537.00286865]
[77.17732239 528.90332031]
[91.03305817 523.06152344]
[105.67679596 519.64556885]
[104.78398132 504.67214966]
[103.89115906 489.69873047]
[102.99834442 474.72531128]
[90.21701050 471.19955444]
[79.12497711 463.89443970]
[70.80940247 453.50912476]
[66.09046936 441.04547119]
[65.44055176 427.71148682]
[68.93689728 414.80404663]
[76.25281525 403.58291626]
[86.68811798 395.14776611]
[99.23609924 390.33035278]
[98.78949738 375.33700562]
[98.34288788 360.34365845]
[97.67310333 345.35864258]
[96.78028870 330.38522339]
[95.88747406 315.41180420]
[87.40634918 303.16763306]
[94.30853271 288.93139648]
[93.41571045 273.95800781]
[92.52289581 258.98458862]
[91.63008118 244.01118469]
[80.88948822 254.48208618]
[65.88957977 254.42926025]
[55.22298813 243.88299561]
[55.00001907 228.88465881]
[65.34840393 218.02597046]
[80.34011078 217.52729797]
[91.38681030 227.67343140]
[91.83341980 212.68008423]
[92.28002167 197.68672180]
[92.72663116 182.69337463]
[93.17323303 167.70002747]
[93.61984253 152.70668030]
[93.61984253 137.70668030]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.72236633 92.75363159]
[90.16184235 77.83502960]
[88.60131836 62.91642380]
[87.04080200 47.99781799]
[85.48027802 33.07921600]
[83.91975403 18.16061020]
[82.35923004 3.24200559]
[80.79870605 -11.67659950]
[65.62837982 -18.25329590]
[55.90045929 -31.50709534]
[54.19371796 -47.76452255]
[60.87980652 -62.57843781]
[74.04753113 -71.94451904]
[72.26506805 -86.83823395]
[70.48259735 -101.73194885]
[68.70013428 -116.62567139]
[66.80683899 -131.50570679]
[64.80282593 -146.37123108]
[52.51854706 -155.94903564]
[50.69795609 -171.05334473]
[59.90462494 -182.70549011]
[57.90061188 -197.57102966]
[54.70872879 -201.70127869]
[53.53743362 -206.19364929]
[54.18630600 -210.21781921]
[56.15441513 -213.14337158]
[54.81618118 -228.08355713]
[53.47794724 -243.02374268]
[52.13971329 -257.96392822]
[36.02839279 -264.98239136]
[25.74336243 -279.12200928]
[24.04508018 -296.43441772]
[31.31162071 -312.14144897]
[45.45925140 -321.95382690]
[43.67678452 -336.84753418]
[41.89432144 -351.74127197]
[40.11185455 -366.63497925]
[25.17518997 -368.77005005]
[11.30045509 -374.69912720]
[-0.56634760 -384.01800537]
[-9.61611938 -396.09127808]
[-15.23183250 -410.09579468]
[-17.03059769 -425.07666016]
[-14.88977242 -440.01251221]
[-8.95532227 -453.88494873]
[0.36813352 -465.74816895]
[12.44490528 -474.79327393]
[26.45157814 -480.40356445]
[41.43315506 -482.19656372]
[56.36816406 -480.04995728]
[70.23831940 -474.11016846]
[82.09792328 -464.78213501]
[91.13836670 -452.70187378]
[96.74326324 -438.69302368]
[98.53045654 -423.71075439]
[96.37809753 -408.77658081]
[90.43293762 -394.90872192]
[81.10032654 -383.05270386]
[69.01657104 -374.01693726]
[55.00556946 -368.41744995]
[56.78803635 -353.52374268]
[58.57050323 -338.63000488]
[60.35297012 -323.73629761]
[72.43510437 -320.04302979]
[82.25915527 -312.02499390]
[88.34335327 -300.84597778]
[89.75280762 -288.14981079]
[86.24300385 -275.81869507]
[78.30137634 -265.69418335]
[67.07989502 -259.30215454]
[68.41812897 -244.36198425]
[69.75636292 -229.42179871]
[71.09459686 -214.48161316]
[72.76613617 -199.57504272]
[74.77015686 -184.70951843]
[86.73372650 -175.91130066]
[88.97784424 -160.86408997]
[79.66835785 -148.37524414]
[81.67237091 -133.50971985]
[85.68132019 -127.30084229]
[83.59384918 -118.40813446]
[85.37631989 -103.51441956]
[87.15878296 -88.62070465]
[88.94124603 -73.72698212]
[101.82330322 -69.19158936]
[111.54114532 -59.50178528]
[116.15805817 -46.50820160]
[114.71932220 -32.72747803]
[107.44900513 -20.85487556]
[95.71730804 -13.23712254]
[97.27783203 1.68148243]
[98.83835602 16.60008812]
[100.39888000 31.51869202]
[101.95940399 46.43729782]
[103.51992798 61.35589981]
[105.08045197 76.27450562]
[106.64097595 91.19310760]
[117.97037506 81.36230469]
[132.74719238 83.94024658]
[140.07849121 97.02657318]
[134.55993652 110.97452545]
[120.25958252 115.50220490]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[108.61318970 137.26007080]
[111.02532959 140.87054443]
[112.05912018 144.67788696]
[111.82192993 148.22459412]
[110.55867004 151.13505554]
[108.61318970 153.15328979]
[108.16658020 168.14663696]
[107.71997833 183.13998413]
[107.27336884 198.13333130]
[106.82676697 213.12667847]
[106.38015747 228.12004089]
[106.60348511 243.11837769]
[107.49630737 258.09176636]
[108.38912201 273.06518555]
[109.28193665 288.03857422]
[117.82691956 301.35375977]
[110.86087799 314.51901245]
[111.75369263 329.49240112]
[112.64650726 344.46582031]
[115.96240234 350.18563843]
[115.90110779 355.86834717]
[113.33623505 359.89706421]
[113.78284454 374.89041138]
[114.22944641 389.88375854]
[130.09208679 395.63082886]
[142.50349426 407.00488281]
[149.57876587 422.24026489]
[150.25810242 438.98779297]
[144.46551514 454.67715454]
[133.11613464 466.91125488]
[117.97174835 473.83251953]
[118.86457062 488.80590820]
[119.75738525 503.77932739]
[120.65019989 518.75274658]
[135.59609985 520.40435791]
[150.04785156 524.55828857]
[163.58963013 531.09497070]
[175.83181763 539.82635498]
[186.42218018 550.50122070]
[195.05601501 562.81237793]
[201.48490906 576.40563965]
[205.52389526 590.88995361]
[207.05676270 605.84851074]
[206.03939819 620.85095215]
[202.50106812 635.46557617]
[196.54360962 649.27197266]
[188.33839417 661.87286377]
[178.12152100 672.90570068]
[166.18695068 682.05303955]
[152.87805176 689.05169678]
[138.57775879 693.70037842]
[123.69752502 695.86517334]
[108.66546631 695.48394775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 191]
[17 190]
[18 189]
[19 188]
[28 181]
[29 180]
[30 179]
[31 176]
[32 175]
[33 174]
[35 172]
[36 171]
[37 170]
[38 169]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 158]
[52 157]
[53 156]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[66 137]
[67 136]
[68 135]
[69 134]
[70 132]
[71 131]
[74 128]
[75 127]
[79 126]
[80 125]
[81 124]
[82 123]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
