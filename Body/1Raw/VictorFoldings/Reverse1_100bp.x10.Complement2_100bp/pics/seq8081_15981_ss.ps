%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[116.41686249 669.69445801]
[111.75902557 655.31402588]
[111.54848480 640.19958496]
[115.80396271 625.69500732]
[124.14706421 613.09008789]
[135.83592224 603.50561523]
[149.83117676 597.79388428]
[148.49295044 582.85369873]
[147.15470886 567.91351318]
[145.70529175 552.98370361]
[144.14477539 538.06506348]
[142.14076233 523.19958496]
[139.69503784 508.40029907]
[137.24929810 493.60101318]
[134.80357361 478.80175781]
[131.51167297 475.34164429]
[130.35844421 469.77682495]
[132.51220703 463.52600098]
[130.50819397 448.66046143]
[128.50418091 433.79492188]
[126.50016022 418.92941284]
[124.49614716 404.06387329]
[121.30872345 400.50729370]
[120.32169342 394.91061401]
[122.66060638 388.72668457]
[121.10008240 373.80807495]
[119.53955841 358.88946533]
[117.97903442 343.97085571]
[103.04476166 342.78445435]
[88.57894897 338.87289429]
[75.07466125 332.36804199]
[62.99243164 323.49005127]
[52.74462128 312.54013062]
[44.68130493 299.89016724]
[39.07833099 285.97024536]
[36.12788010 271.25384521]
[35.93186951 256.24191284]
[38.49844742 241.44563293]
[43.74163818 227.36920166]
[51.48425674 214.49255371]
[61.46386719 203.25494385]
[73.34169006 194.04008484]
[86.71409607 187.16294861]
[101.12634277 182.85906982]
[99.56581879 167.94047546]
[98.00530243 153.02186584]
[96.44477844 138.10325623]
[94.88425446 123.18465424]
[93.32373047 108.26605225]
[90.76789856 93.48539734]
[79.99256897 81.90080261]
[84.50800323 67.70713043]
[80.96833038 53.13075638]
[77.42865753 38.55438232]
[73.88898468 23.97800636]
[59.69205093 17.99859810]
[51.83009720 4.95854187]
[53.13864517 -10.03317928]
[62.90708160 -21.24547768]
[59.36740875 -35.82185364]
[55.82773590 -50.39822769]
[52.28806305 -64.97460175]
[48.74839020 -79.55097961]
[38.15959167 -86.91577148]
[35.51147461 -99.12934113]
[41.69062805 -109.52860260]
[38.36837006 -124.15605927]
[34.28870010 -138.59060669]
[29.46270370 -152.79307556]
[24.63670540 -166.99552917]
[19.81070900 -181.19798279]
[15.88397026 -184.63713074]
[13.87043571 -188.82031250]
[13.73313141 -192.89416504]
[15.10175323 -196.14364624]
[10.91474247 -210.54743958]
[6.72773123 -224.95121765]
[-8.19378376 -223.12240601]
[-23.21542549 -223.71099854]
[-37.94809723 -226.70173645]
[-52.01018906 -232.01715088]
[-65.03746033 -239.51959229]
[-76.69246674 -249.01469421]
[-86.67331696 -260.25653076]
[-94.72148895 -272.95388794]
[-100.62851715 -286.77789307]
[-104.24138641 -301.37048340]
[-105.46651459 -316.35363770]
[-104.27217865 -331.33929443]
[-100.68930054 -345.93927002]
[-94.81069946 -359.77539062]
[-86.78864288 -372.48925781]
[-76.83090973 -383.75158691]
[-65.19543457 -393.27059937]
[-52.18361664 -400.79980469]
[-38.13247681 -406.14410400]
[-23.40598106 -409.16510010]
[-8.38558006 -409.78457642]
[6.53966141 -407.98641968]
[20.98314476 -403.81726074]
[34.57074738 -397.38507080]
[46.95051956 -388.85644531]
[57.80179596 -378.45230103]
[66.84349823 -366.44213867]
[73.84143066 -353.13705444]
[78.61432648 -338.88168335]
[81.03855133 -324.04528809]
[81.05132294 -309.01211548]
[78.65229797 -294.17160034]
[73.90362549 -279.90814209]
[66.92830658 -266.59118652]
[57.90702057 -254.56568909]
[47.07343674 -244.14314270]
[34.70817184 -235.59350586]
[21.13151360 -229.13822937]
[25.31852531 -214.73445129]
[29.50553513 -200.33065796]
[34.01316452 -186.02397156]
[38.83916092 -171.82151794]
[43.66516113 -157.61906433]
[48.49115753 -143.41661072]
[55.04246521 -156.91032410]
[68.68281555 -163.15058899]
[83.17601776 -159.28445435]
[91.89597321 -147.07943726]
[90.85604858 -132.11552429]
[80.53166962 -121.23401642]
[65.64300537 -119.40979004]
[52.99582672 -127.47831726]
[56.31808853 -112.85086060]
[68.91730499 -100.63502502]
[63.32476807 -83.09065247]
[66.86444092 -68.51427460]
[70.40411377 -53.93790054]
[73.94378662 -39.36152649]
[77.48345947 -24.78515053]
[91.30623627 -19.30165482]
[99.34466553 -6.57971811]
[98.33883667 8.61375713]
[88.46535492 20.43833351]
[92.00502777 35.01470947]
[95.54470062 49.59108353]
[99.08437347 64.16745758]
[109.60652161 74.70945740]
[105.34427643 89.94572449]
[111.62335205 76.32319641]
[124.21297455 68.16836548]
[139.21211243 68.00808716]
[151.97312927 75.89202881]
[158.54187012 89.37726593]
[156.88294983 104.28524780]
[147.51040649 115.99658203]
[133.32839966 120.88237762]
[118.73140717 117.42871094]
[108.24233246 106.70552826]
[109.80285645 121.62413025]
[111.36338043 136.54273987]
[112.92390442 151.46134949]
[114.48442841 166.37994385]
[116.04495239 181.29855347]
[131.03587341 182.52677917]
[145.54197693 186.48774719]
[159.06961060 193.04513550]
[171.15870667 201.97430420]
[181.39843750 212.96997070]
[189.44111633 225.65664673]
[195.01408386 239.60150146]
[197.92889404 254.32907104]
[198.08773804 269.33746338]
[195.48664856 284.11557007]
[190.21566772 298.16030884]
[182.45565796 310.99389648]
[172.47218323 322.17999268]
[160.60633850 331.33865356]
[147.26312256 338.15908813]
[132.89764404 342.41033936]
[134.45816040 357.32894897]
[136.01869202 372.24755859]
[137.57920837 387.16613770]
[139.36167908 402.05987549]
[141.36569214 416.92538452]
[143.36970520 431.79092407]
[145.37371826 446.65646362]
[147.37773132 461.52197266]
[149.60284424 476.35601807]
[152.04856873 491.15530396]
[154.49430847 505.95455933]
[156.94003296 520.75384521]
[159.81291199 524.00970459]
[161.34609985 527.64477539]
[161.58486938 531.19134521]
[160.72178650 534.24450684]
[159.06338501 536.50457764]
[160.62390137 551.42315674]
[164.62911987 559.63269043]
[162.09489441 566.57525635]
[163.43313599 581.51544189]
[164.77136230 596.45562744]
[179.55892944 599.58923340]
[192.76506042 606.94378662]
[203.21549988 617.86529541]
[209.98097229 631.38269043]
[212.45993042 646.29400635]
[210.43191528 661.27325439]
[204.07728577 674.98858643]
[193.96105957 686.22039795]
[180.98278809 693.96997070]
[166.29647827 697.54821777]
[151.20803833 696.63696289]
[137.05912781 691.31726074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 194]
[11 193]
[12 188]
[13 187]
[14 186]
[15 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[25 179]
[26 178]
[27 177]
[28 176]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 145]
[52 143]
[53 142]
[54 141]
[55 140]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[66 130]
[67 129]
[68 121]
[69 120]
[70 119]
[71 118]
[75 117]
[76 116]
[77 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
