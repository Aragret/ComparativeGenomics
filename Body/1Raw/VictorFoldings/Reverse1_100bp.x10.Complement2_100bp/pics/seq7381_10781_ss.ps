%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[111.98992157 391.15933228]
[117.35075378 377.11050415]
[125.00888062 364.16983032]
[134.74397278 352.70965576]
[146.27592468 343.05966187]
[159.27293396 335.49755859]
[154.02621460 321.44506836]
[148.77949524 307.39260864]
[137.07919312 298.17565918]
[139.50070190 282.54086304]
[134.25398254 268.48840332]
[129.00726318 254.43592834]
[123.76054382 240.38345337]
[112.06024170 231.16650391]
[114.48174286 215.53170776]
[109.23502350 201.47923279]
[103.98830414 187.42675781]
[101.93626404 202.28573608]
[95.22955322 215.70289612]
[84.57595062 226.26228333]
[71.09975433 232.84954834]
[56.22313690 234.76953125]
[41.51606750 231.81959534]
[28.53061867 224.31106567]
[18.63717270 213.03631592]
[12.87980843 199.18522644]
[11.86611652 184.21951294]
[15.70307350 169.71856689]
[23.98575592 157.21267700]
[35.84007263 148.02163696]
[50.01501083 143.11540222]
[65.01464844 143.01173401]
[79.25605011 147.72157288]
[91.23627472 156.74786377]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[96.57006836 139.30104065]
[87.55067444 127.44777679]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[84.58552551 29.02164078]
[82.13980103 14.22236919]
[79.69406891 -0.57690161]
[77.24834442 -15.37617207]
[74.80261230 -30.17544365]
[72.35688782 -44.97471237]
[69.91116333 -59.77398682]
[67.46543121 -74.57325745]
[56.74126053 -64.08554077]
[41.83720398 -65.77938080]
[33.73997879 -78.40613556]
[38.41856003 -92.65783691]
[52.42406845 -98.02865601]
[65.43122864 -90.56078339]
[64.09299469 -105.50096893]
[62.75475693 -120.44115448]
[61.41652298 -135.38133240]
[60.07828903 -150.32151794]
[51.14065170 -163.37637329]
[57.71162796 -176.74317932]
[56.37339401 -191.68336487]
[55.03516006 -206.62355042]
[53.14186859 -221.50358582]
[50.69614029 -236.30285645]
[48.25041199 -251.10212708]
[45.58461761 -265.86334229]
[42.69934464 -280.58325195]
[39.81407166 -295.30313110]
[36.92879868 -310.02301025]
[34.04352570 -324.74291992]
[31.15825462 -339.46279907]
[28.27298164 -354.18270874]
[13.27722359 -353.28231812]
[-1.70473850 -354.38879395]
[-16.40553474 -357.48233032]
[-30.56280899 -362.50775146]
[-43.92391205 -369.37539673]
[-56.25039673 -377.96267700]
[-67.32228851 -388.11633301]
[-76.94198608 -399.65515137]
[-84.93782043 -412.37326050]
[-91.16709137 -426.04364014]
[-95.51864624 -440.42236328]
[-97.91480255 -455.25280762]
[-98.31282043 -470.27029419]
[-96.70558167 -485.20684814]
[-93.12178040 -499.79586792]
[-87.62535858 -513.77703857]
[-80.31442261 -526.90081787]
[-71.31943512 -538.93298340]
[-60.80092621 -549.65887451]
[-48.94660950 -558.88702393]
[-35.96804047 -566.45275879]
[-22.09683418 -572.22100830]
[-7.58054113 -576.08892822]
[7.32177973 -577.98742676]
[22.34417915 -577.88262939]
[37.21856308 -575.77642822]
[51.67948151 -571.70635986]
[65.46886444 -565.74511719]
[78.34062195 -557.99908447]
[90.06504059 -548.60644531]
[100.43288422 -537.73486328]
[109.25913239 -525.57836914]
[116.38626862 -512.35388184]
[121.68709564 -498.29736328]
[125.06701660 -483.65975952]
[126.46571350 -468.70223999]
[125.85823059 -453.69177246]
[123.25539398 -438.89620972]
[118.70367432 -424.57962036]
[112.28427887 -410.99746704]
[104.11179352 -398.39215088]
[94.33204651 -386.98864746]
[83.11958313 -376.99041748]
[70.67449951 -368.57595825]
[57.21888351 -361.89541626]
[42.99287415 -357.06796265]
[45.87814713 -342.34808350]
[48.76342010 -327.62817383]
[51.64868927 -312.90829468]
[54.53396225 -298.18841553]
[57.41923523 -283.46850586]
[60.30450821 -268.74862671]
[63.69797134 -265.38806152]
[65.01637268 -259.86004639]
[63.04968262 -253.54786682]
[65.49541473 -238.74859619]
[67.94113922 -223.94932556]
[78.66531372 -234.43702698]
[93.56936646 -232.74319458]
[101.66659546 -220.11643982]
[96.98801422 -205.86474609]
[82.98250580 -200.49392700]
[69.97534180 -207.96179199]
[71.31357574 -193.02160645]
[72.65180969 -178.08142090]
[81.49372864 -166.09518433]
[75.01847839 -151.65975952]
[76.35671234 -136.71957397]
[77.69494629 -121.77938843]
[79.03318024 -106.83920288]
[80.37141418 -91.89901733]
[82.26470184 -77.01898193]
[84.71043396 -62.21971130]
[87.15615845 -47.42044067]
[89.60188293 -32.62117004]
[92.04761505 -17.82189941]
[94.49333954 -3.02262902]
[96.93907166 11.77664185]
[99.38479614 26.57591248]
[101.58247375 28.31612778]
[103.22325134 31.03172684]
[103.93215179 34.51494980]
[103.41629791 38.42626953]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[117.85990906 124.27735901]
[111.48867035 137.74050903]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[118.04077911 182.18005371]
[123.28749847 196.23251343]
[128.53421021 210.28498840]
[140.60980225 220.50706482]
[137.81301880 235.13673401]
[143.05973816 249.18920898]
[148.30645752 263.24166870]
[153.55317688 277.29415894]
[165.62875366 287.51620483]
[162.83197021 302.14587402]
[168.07868958 316.19836426]
[173.32540894 330.25082397]
[188.09812927 327.44467163]
[203.13261414 327.17562866]
[217.99627686 329.45147705]
[232.26147461 334.20672607]
[245.51774597 341.30456543]
[257.38369751 350.54074097]
[267.51794434 361.64953613]
[275.62884521 374.31134033]
[281.48309326 388.16183472]
[284.91220093 402.80249023]
[285.81753540 417.81210327]
[284.17306519 432.75878906]
[280.02606201 447.21252441]
[273.49588013 460.75744629]
[264.77038574 473.00381470]
[254.10061646 483.59930420]
[241.79357910 492.23904419]
[228.20338440 498.67443848]
[213.72103882 502.72036743]
[198.76321411 504.26040649]
[183.76029968 503.25024414]
[169.14395142 499.71893311]
[155.33470154 493.76806641]
[142.72987366 485.56890869]
[131.69213867 475.35733032]
[122.53906250 463.42712402]
[115.53401947 450.12161255]
[110.87854004 435.82354736]
[108.70658112 420.94433594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 181]
[7 180]
[8 179]
[10 177]
[11 176]
[12 175]
[13 174]
[15 172]
[16 171]
[17 170]
[35 169]
[36 168]
[37 167]
[39 165]
[41 163]
[42 162]
[43 161]
[44 160]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[64 141]
[65 140]
[66 139]
[67 133]
[68 132]
[69 131]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
