%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[103.91680908 615.82141113]
[103.27909088 600.47576904]
[110.41385651 586.87463379]
[123.40187836 578.67663574]
[122.73209381 563.69158936]
[122.06230927 548.70654297]
[121.39252472 533.72155762]
[120.49971008 518.74810791]
[111.83722687 506.63159180]
[118.52668762 492.29415894]
[117.41104126 477.33569336]
[116.29539490 462.37725830]
[114.95716095 447.43707275]
[113.39663696 432.51846313]
[111.83611298 417.59985352]
[110.27558899 402.68124390]
[108.71506500 387.76263428]
[99.69567108 375.90939331]
[105.95528412 361.37915039]
[96.08231354 358.30035400]
[87.76541138 352.08938599]
[81.96732330 343.43353271]
[79.36974335 333.30474854]
[80.29324341 322.85067749]
[84.65795135 313.26452637]
[91.98973846 305.64901733]
[101.47164917 300.88937378]
[100.80186462 285.90435791]
[100.13208008 270.91931152]
[91.83419037 258.55023193]
[98.94756317 244.41831970]
[98.27777863 229.43328857]
[97.60799408 214.44824219]
[96.93820953 199.46321106]
[85.80728149 189.63273621]
[84.91455841 174.44532776]
[95.30112457 162.83683777]
[94.63134003 147.85179138]
[93.96155548 132.86676025]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[91.05340576 67.80302429]
[82.70761108 54.36210632]
[89.86889648 41.30204010]
[89.19911194 26.31700134]
[80.85331726 12.87608242]
[88.01459503 -0.18398327]
[87.34481049 -15.16902161]
[86.67502594 -30.15406036]
[86.00524139 -45.13909912]
[75.94777679 -34.01042557]
[61.10773468 -31.82567978]
[48.26977921 -39.58370209]
[43.30325317 -53.73762512]
[48.47878265 -67.81647491]
[61.43018723 -75.38357544]
[76.23625946 -72.97936249]
[86.12854004 -61.70128632]
[87.02135468 -76.67469025]
[87.91416931 -91.64809418]
[86.46475220 -106.57790375]
[82.70845032 -121.09996796]
[78.95215607 -135.62202454]
[68.00554657 -147.04490662]
[72.30915070 -161.30422974]
[68.55284882 -175.82629395]
[64.79654694 -190.34834290]
[61.04024506 -204.87040710]
[54.30731201 -191.46640015]
[41.03491211 -184.47758484]
[26.17332649 -186.51063538]
[15.26556015 -196.80726624]
[12.37993717 -211.52708435]
[18.59272575 -225.17997742]
[31.58670807 -232.67373657]
[46.51544952 -231.21337891]
[57.81150436 -221.34259033]
[55.80749130 -236.20811462]
[53.80347824 -251.07363892]
[51.79946518 -265.93917847]
[47.55159378 -274.02578735]
[49.87798309 -281.04074097]
[48.09551620 -295.93447876]
[46.31304932 -310.82818604]
[44.53058624 -325.72189331]
[34.89197922 -334.29278564]
[33.71397781 -346.73449707]
[41.08510208 -356.32580566]
[39.52457809 -371.24441528]
[24.64107132 -373.77102661]
[10.99165249 -380.22052002]
[-0.41080189 -390.11428833]
[-8.72015381 -402.71813965]
[-13.31979370 -417.09680176]
[-13.86839867 -432.18328857]
[-10.32525730 -446.85803223]
[-2.95329571 -460.03213501]
[7.70043898 -470.72793579]
[20.84536743 -478.15179443]
[35.50605011 -481.75274658]
[50.59456635 -481.26364136]
[64.99124908 -476.72070312]
[77.62776947 -468.46112061]
[87.56640625 -457.09774780]
[94.06965637 -443.47387695]
[96.65493774 -428.60043335]
[95.13038635 -413.58117676]
[89.60915375 -399.53060913]
[80.50094604 -387.49136353]
[68.48165131 -378.35687256]
[54.44318390 -372.80493164]
[56.00370789 -357.88632202]
[67.06203461 -344.25985718]
[59.42430115 -327.50436401]
[61.20676804 -312.61065674]
[62.98923492 -297.71694946]
[64.77169800 -282.82321167]
[66.66499329 -267.94317627]
[68.66900635 -253.07765198]
[70.67301941 -238.21212769]
[72.67703247 -223.34660339]
[75.56230927 -208.62670898]
[79.31860352 -194.10464478]
[83.07490540 -179.58259583]
[86.83120728 -165.06053162]
[97.50914001 -154.67636108]
[93.47421265 -139.37832642]
[97.23051453 -124.85626221]
[100.98681641 -110.33420563]
[104.18804932 -124.98862457]
[111.17545319 -138.26176453]
[121.44458771 -149.19541931]
[134.25411987 -157.00028992]
[148.67930603 -161.11293030]
[163.67880249 -161.23645020]
[178.16976929 -157.36190796]
[191.10607910 -149.76904297]
[201.55387878 -139.00598145]
[208.75889587 -125.84970093]
[212.20103455 -111.24998474]
[211.63177490 -96.26078796]
[207.09220886 -81.96420288]
[198.91007996 -69.39230347]
[187.67604065 -59.45266724]
[174.20108032 -52.86285019]
[159.45799255 -50.09857559]
[144.51107788 -51.35939407]
[130.43936157 -56.55428696]
[118.25871277 -65.30823517]
[108.84844208 -76.98928070]
[102.88758087 -90.75527954]
[101.99475861 -75.78187561]
[101.10194397 -60.80846786]
[100.99028015 -45.80888367]
[101.66006470 -30.82384682]
[102.32984924 -15.83880711]
[102.99963379 -0.85376841]
[111.29752350 11.51532078]
[104.18415070 25.64721680]
[104.85393524 40.63225555]
[113.15181732 53.00134659]
[106.03844452 67.13323975]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[108.94659424 132.19697571]
[109.61637878 147.18200684]
[110.28616333 162.16705322]
[121.66696930 172.80259705]
[122.13275909 188.00910950]
[111.92324829 198.79342651]
[112.59303284 213.77845764]
[113.26281738 228.76350403]
[113.93260193 243.74853516]
[122.27839661 257.18945312]
[115.11711884 270.24951172]
[115.78690338 285.23455811]
[116.45668793 300.21960449]
[133.69940186 310.34036255]
[141.27317810 328.68777466]
[136.26376343 347.74526978]
[120.87389374 359.81863403]
[130.00489807 372.73895264]
[123.63366699 386.20211792]
[125.19419098 401.12072754]
[126.75471497 416.03933716]
[128.31524658 430.95794678]
[129.87576294 445.87655640]
[133.44375610 451.44259644]
[133.63626099 457.12237549]
[131.25384521 461.26159668]
[132.36949158 476.22006226]
[133.48513794 491.17849731]
[142.22741699 504.36499023]
[135.45816040 517.63250732]
[138.85884094 523.30230713]
[138.88217163 528.98529053]
[136.37756348 533.05175781]
[137.04734802 548.03680420]
[137.71713257 563.02185059]
[138.38691711 578.00683594]
[152.05453491 585.01342773]
[160.37428284 597.92376709]
[161.10818481 613.26513672]
[154.05882263 626.91070557]
[141.12245178 635.18994141]
[125.77887726 635.87573242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[8 198]
[10 196]
[11 195]
[12 194]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[19 185]
[27 181]
[28 180]
[29 179]
[31 177]
[32 176]
[33 175]
[34 174]
[37 171]
[38 170]
[39 169]
[40 168]
[43 165]
[44 164]
[46 162]
[47 161]
[49 159]
[50 158]
[51 157]
[52 156]
[60 155]
[61 154]
[62 153]
[63 131]
[64 130]
[65 129]
[67 127]
[68 126]
[69 125]
[70 124]
[79 123]
[80 122]
[81 121]
[82 120]
[84 119]
[85 118]
[86 117]
[87 116]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
