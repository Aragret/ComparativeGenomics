%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[25.53240204 469.48449707]
[31.85694885 455.72662354]
[42.30779266 444.76950073]
[55.75130081 437.80166626]
[53.52618408 422.96762085]
[51.30106735 408.13357544]
[49.07594681 393.29953003]
[44.45951080 407.57147217]
[36.48204803 420.27423096]
[25.63138771 430.63104248]
[12.57104874 438.00854492]
[-1.90032184 441.95559692]
[-16.89779472 442.23089600]
[-31.50427055 438.81756592]
[-44.82655716 431.92431641]
[-56.04998779 421.97271729]
[-64.48825073 409.57125854]
[-69.62533569 395.47833252]
[-71.14711761 380.55575562]
[-68.96053314 365.71597290]
[-63.19929504 351.86648560]
[-54.21570206 339.85418701]
[-42.55910492 330.41366577]
[-28.94231033 324.12216187]
[-14.19799232 321.36444092]
[0.77223092 322.30911255]
[15.05292416 326.89843750]
[27.77081680 334.85174561]
[38.14820480 345.68270874]
[45.55051041 358.72900391]
[49.52507782 373.19287109]
[52.41035080 358.47299194]
[55.29562378 343.75308228]
[58.18089294 329.03320312]
[61.06616592 314.31332397]
[63.84177780 299.57235718]
[66.50757599 284.81112671]
[69.17337036 270.04992676]
[71.83916473 255.28869629]
[74.39499664 240.50804138]
[76.84072113 225.70877075]
[79.28645325 210.90950012]
[81.73217773 196.11022949]
[83.84680176 181.26004028]
[85.51834106 166.35345459]
[87.07886505 151.43486023]
[88.63938904 136.51625061]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.54175568 91.69940186]
[92.54175568 76.69940186]
[92.54175568 61.69940567]
[92.54175568 46.69940567]
[92.54175568 31.69940376]
[92.54175568 16.69940376]
[85.53713989 29.96346474]
[74.82041931 40.45879364]
[61.41305161 47.18504333]
[46.59293365 49.50111008]
[31.77263260 47.18624115]
[18.36471939 40.46107483]
[7.64715242 29.96661186]
[0.64146286 16.70311546]
[-1.98461235 1.93478012]
[0.01922761 -12.93077183]
[6.46198940 -26.47665024]
[16.72959137 -37.41174698]
[29.84338760 -44.69380188]
[44.55345917 -47.62873459]
[59.45773315 -45.93680191]
[73.13562775 -39.77927399]
[84.28345490 -29.74304390]
[91.83867645 -16.78470039]
[95.08124542 -2.13822055]
[99.05334473 -16.60274506]
[103.02544403 -31.06726837]
[99.21872711 -46.42368317]
[110.05007935 -56.64772415]
[114.02217102 -71.11225128]
[117.99427032 -85.57677460]
[121.96636963 -100.04129791]
[123.97038269 -114.90682220]
[123.97038269 -129.90682983]
[123.97038269 -144.90682983]
[111.67971039 -136.30801392]
[97.25128174 -140.40927124]
[91.32118225 -154.18730164]
[98.26087189 -167.48544312]
[112.95466614 -170.50080872]
[124.57013702 -161.01208496]
[125.68578339 -175.97053528]
[126.80143738 -190.92898560]
[118.42314911 -207.32673645]
[128.86199951 -221.43338013]
[121.95980835 -235.66961670]
[130.44093323 -247.91378784]
[131.33375549 -262.88720703]
[132.22656250 -277.86059570]
[133.11938477 -292.83401489]
[134.01219177 -307.80740356]
[120.32424927 -314.41867065]
[110.21198273 -325.76812744]
[105.21743774 -340.12512207]
[106.10225677 -355.30026245]
[112.73149872 -368.97952271]
[124.09426117 -379.07684326]
[138.45779419 -384.05249023]
[153.63179016 -383.14770508]
[167.30229187 -376.50048828]
[177.38465881 -365.12445068]
[182.34141541 -350.75436401]
[181.41668701 -335.58160400]
[174.75148010 -321.91983032]
[163.36218262 -311.85244751]
[148.98561096 -306.91458130]
[148.09278870 -291.94119263]
[147.19996643 -276.96777344]
[146.30715942 -261.99438477]
[145.41433716 -247.02096558]
[152.38038635 -233.85572815]
[143.83540344 -220.54055786]
[151.62744141 -211.28796387]
[151.00616455 -198.80606079]
[141.75988770 -189.81333923]
[140.64424133 -174.85488892]
[139.52859497 -159.89643860]
[138.97038269 -144.90682983]
[138.97038269 -129.90682983]
[138.97038269 -114.90682220]
[145.97500610 -128.17088318]
[156.69171143 -138.66621399]
[170.09909058 -145.39247131]
[184.91920471 -147.70852661]
[199.73950195 -145.39366150]
[213.14741516 -138.66850281]
[223.86499023 -128.17402649]
[230.87068176 -114.91053772]
[233.49674988 -100.14220428]
[231.49290466 -85.27664948]
[225.05015564 -71.73077393]
[214.78254700 -60.79567337]
[201.66874695 -53.51361847]
[186.95867920 -50.57868958]
[172.05441284 -52.27061844]
[158.37651062 -58.42814636]
[147.22868347 -68.46437836]
[139.67346191 -81.42272186]
[136.43089294 -96.06919861]
[132.45880127 -81.60467529]
[128.48669434 -67.14015198]
[124.51460266 -52.67562866]
[128.60542297 -38.35381317]
[117.48996735 -27.09517288]
[113.51786804 -12.63064861]
[109.54576874 1.83387566]
[107.54175568 16.69940376]
[107.54175568 31.69940376]
[107.54175568 46.69940567]
[107.54175568 61.69940567]
[107.54175568 76.69940186]
[107.54175568 91.69940186]
[118.08611298 81.03091431]
[133.00891113 79.51099396]
[145.48764038 87.83452606]
[149.81721497 102.19609833]
[144.01818848 116.02980042]
[130.74180603 123.01104736]
[116.05786133 119.94811249]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[103.55799103 138.07676697]
[101.99747467 152.99537659]
[100.43695068 167.91398621]
[102.65658569 176.77462769]
[98.74052429 183.04249573]
[100.79640198 187.84045410]
[100.80539703 192.48300171]
[99.16947174 196.21647644]
[96.53144836 198.55595398]
[94.08572388 213.35522461]
[91.63999176 228.15449524]
[89.19426727 242.95376587]
[90.88257599 251.93081665]
[86.60037994 257.95449829]
[83.93458557 272.71569824]
[81.26879120 287.47692871]
[78.60299683 302.23815918]
[80.15746307 311.23934937]
[75.78605652 317.19857788]
[72.90078735 331.91848755]
[70.01551056 346.63836670]
[67.13024139 361.35824585]
[64.24496460 376.07815552]
[63.90999222 391.07440186]
[66.13510895 405.90844727]
[68.36022949 420.74249268]
[70.58534241 435.57653809]
[85.48156738 438.29339600]
[98.68727875 445.70202637]
[108.77004242 456.99877930]
[114.63613892 470.95828247]
[115.64926147 486.06631470]
[111.69951630 500.68405151]
[103.21534729 513.22589111]
[91.11704254 522.33135986]
[76.71694183 527.01281738]
[61.57705688 526.76239014]
[47.33965683 521.60723877]
[35.54910278 512.10668945]
[27.48434448 499.29110718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 187]
[37 186]
[38 185]
[39 184]
[40 182]
[41 181]
[42 180]
[43 179]
[44 175]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[74 155]
[75 154]
[76 153]
[78 151]
[79 150]
[80 149]
[81 148]
[82 129]
[83 128]
[84 127]
[90 126]
[91 125]
[92 124]
[94 121]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
