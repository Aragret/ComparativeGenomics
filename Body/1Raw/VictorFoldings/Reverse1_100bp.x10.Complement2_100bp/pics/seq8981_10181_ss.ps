%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[47.76232529 454.94668579]
[44.90408707 469.68600464]
[40.52079773 484.04583740]
[34.66048813 497.86880493]
[27.38737106 511.00347900]
[18.78112793 523.30590820]
[8.93605518 534.64135742]
[-2.03997684 544.88562012]
[-14.02671051 553.92639160]
[-26.89281273 561.66467285]
[-40.49731445 568.01568604]
[-54.69115829 572.90985107]
[-69.31882477 576.29345703]
[-84.22005463 578.12951660]
[-99.23157501 578.39788818]
[-114.18891144 577.09564209]
[-128.92817688 574.23706055]
[-143.28788757 569.85345459]
[-157.11071777 563.99279785]
[-170.24520874 556.71936035]
[-182.54745483 548.11279297]
[-193.88265991 538.26745605]
[-204.12663269 527.29119873]
[-213.16712952 515.30419922]
[-220.90510559 502.43792725]
[-227.25578308 488.83328247]
[-232.14956665 474.63931274]
[-235.53285217 460.01156616]
[-237.36856079 445.11029053]
[-237.63656616 430.09875488]
[-236.33396912 415.14147949]
[-233.47500610 400.40225220]
[-229.09101868 386.04266357]
[-223.23004150 372.21997070]
[-215.95628357 359.08566284]
[-207.34944153 346.78363037]
[-197.50382996 335.44866943]
[-186.52729797 325.20495605]
[-174.54011536 316.16473389]
[-161.67364502 308.42709351]
[-148.06883240 302.07675171]
[-133.87475586 297.18328857]
[-119.24691772 293.80038452]
[-104.34560394 291.96502686]
[-89.33406830 291.69735718]
[-74.37680054 293.00033569]
[-59.63766861 295.85964966]
[-45.27816391 300.24398804]
[-31.45562172 306.10531616]
[-18.32148552 313.37939453]
[-9.72292137 301.08853149]
[-1.12435722 288.79769897]
[-0.16846676 273.93380737]
[14.08217144 267.06140137]
[22.68073463 254.77056885]
[22.43035126 251.25350952]
[23.87104607 247.44044495]
[27.12338829 244.12751770]
[31.94783592 242.13458252]
[41.08663940 230.23994446]
[50.22544098 218.34530640]
[57.10485458 205.01588440]
[61.50585175 190.67604065]
[65.90685272 176.33618164]
[70.30784607 161.99633789]
[68.98775482 158.72682190]
[69.18569946 154.65548706]
[71.26129150 150.50274658]
[75.23880005 147.12243652]
[80.27571869 132.99340820]
[85.31262970 118.86437225]
[90.34954834 104.73534393]
[92.68503571 89.91827393]
[92.23842621 74.92492676]
[80.30459595 68.02749634]
[73.39210510 56.22766876]
[73.21420288 42.66160965]
[79.71043396 30.87419510]
[91.09028625 23.89270973]
[90.86695862 8.89437294]
[90.64363098 -6.10396433]
[87.96516418 -10.58424377]
[87.33599854 -15.18396759]
[88.45847321 -19.10252762]
[90.76028442 -21.77348137]
[91.20688629 -36.76683044]
[91.65349579 -51.76018143]
[84.33050537 -65.78460693]
[92.44331360 -78.27586365]
[92.88992310 -93.26921844]
[93.33652496 -108.26256561]
[93.78313446 -123.25591278]
[86.46014404 -137.28033447]
[94.57295227 -149.77160645]
[95.01956177 -164.76495361]
[95.46616364 -179.75830078]
[86.36403656 -195.76557922]
[96.16257477 -210.32426453]
[96.38590240 -225.32260132]
[96.60923004 -240.32093811]
[83.13391876 -247.57865906]
[74.58456421 -260.27383423]
[72.92575073 -275.48916626]
[78.53866577 -289.72833252]
[90.13349915 -299.71926880]
[105.04583740 -303.16610718]
[119.84894562 -299.27679443]
[131.14115906 -288.94506836]
[136.32763672 -274.54510498]
[134.21653748 -259.38589478]
[125.29299927 -246.95091248]
[111.60756683 -240.09761047]
[111.38423920 -225.09927368]
[111.16091156 -210.10093689]
[119.35833740 -201.20550537]
[119.29502869 -188.70831299]
[110.45951843 -179.31169128]
[110.01290894 -164.31834412]
[109.56630707 -149.32499695]
[116.92123413 -136.37300110]
[108.77648163 -122.80931091]
[108.32987976 -107.81595612]
[107.88327026 -92.82260895]
[107.43666077 -77.82926178]
[114.79159546 -64.87726593]
[106.64684296 -51.31357574]
[106.20024109 -36.32022476]
[105.75363159 -21.32687569]
[105.64196777 -6.32729197]
[105.86529541 8.67104530]
[106.08862305 23.66938210]
[119.80724335 32.68474960]
[125.50609589 48.25667572]
[120.75321960 64.31629944]
[107.23178101 74.47831726]
[107.67838287 89.47167206]
[113.91311646 75.82879639]
[123.08849335 63.96234894]
[134.72317505 54.49481964]
[148.20684814 47.92286301]
[162.83218384 44.59122467]
[177.83193970 44.67467499]
[192.41929626 48.16884232]
[205.82901001 54.89042282]
[217.35763550 64.48681641]
[226.40040588 76.45462036]
[232.48295593 90.16603088]
[235.28619385 104.90175629]
[234.66310120 119.88880920]
[230.64633179 134.34098816]
[223.44660950 147.50016785]
[213.44160461 158.67604065]
[201.15618896 167.28234863]
[187.23480225 172.86761475]
[172.40776062 175.13883972]
[157.45281982 173.97688293]
[143.15452576 169.44271851]
[130.26292419 161.77418518]
[119.45427704 151.37355042]
[111.29558563 138.78642273]
[106.21484375 124.67308807]
[104.47857666 109.77226257]
[99.44165802 123.90129089]
[94.40474701 138.03031921]
[89.36782837 152.15934753]
[84.64769745 166.39733887]
[80.24669647 180.73718262]
[75.84569550 195.07702637]
[71.44470215 209.41688538]
[81.75146484 198.51869202]
[94.34012604 190.36236572]
[108.49872589 185.40917969]
[123.42653656 183.93927002]
[138.27929688 186.03575134]
[152.21704102 191.58007812]
[164.45149231 200.25866699]
[174.29075623 211.58073425]
[181.17835999 224.90592957]
[184.72479248 239.48065186]
[184.72946167 254.48065186]
[181.19212341 269.05758667]
[174.31283569 282.38708496]
[164.48062134 293.71527100]
[152.25158691 302.40148926]
[138.31730652 307.95449829]
[123.46584320 310.06024170]
[108.53712463 308.59963989]
[94.37544250 303.65527344]
[81.78170013 295.50680542]
[71.46813965 284.61505127]
[64.01804352 271.59597778]
[59.85274506 257.18591309]
[59.20782089 242.19978333]
[62.12007141 227.48411560]
[52.98126984 239.37873840]
[43.84246826 251.27337646]
[34.97157288 263.36914062]
[26.37300873 275.65997314]
[24.80209160 291.40298462]
[11.16648102 297.39627075]
[2.56791663 309.68710327]
[-6.03064728 321.97793579]
[5.30503511 331.82275391]
[15.54954052 342.79852295]
[24.59062386 354.78503418]
[32.32922745 367.65093994]
[38.68056107 381.25531006]
[43.57503510 395.44903564]
[46.95902634 410.07659912]
[48.79545593 424.97778320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 202]
[51 201]
[52 200]
[54 198]
[55 197]
[59 196]
[60 195]
[61 194]
[62 169]
[63 168]
[64 167]
[65 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 136]
[74 135]
[79 131]
[80 130]
[81 129]
[85 128]
[86 127]
[87 126]
[89 124]
[90 123]
[91 122]
[92 121]
[94 119]
[95 118]
[96 117]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
