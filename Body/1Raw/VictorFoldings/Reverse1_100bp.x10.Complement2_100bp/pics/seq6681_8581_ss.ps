%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[269.22924805 476.13476562]
[271.84085083 461.35220337]
[275.84579468 446.88482666]
[281.20785522 432.86364746]
[287.87841797 419.41567993]
[295.79711914 406.66265869]
[304.89221191 394.72015381]
[315.08135986 383.69625854]
[305.08319092 372.51428223]
[295.08502197 361.33230591]
[285.08685303 350.15032959]
[270.83566284 345.81985474]
[267.40512085 330.37506104]
[250.46286011 325.80047607]
[246.84703064 307.74478149]
[236.68348694 296.71292114]
[226.51994324 285.68103027]
[223.72781372 285.43167114]
[220.86624146 284.06127930]
[218.36267090 281.53787231]
[216.64828491 277.98464966]
[216.10397339 273.67678833]
[206.61508179 262.05953979]
[197.12617493 250.44227600]
[187.63728333 238.82501221]
[183.55789185 253.25964355]
[169.78887939 259.21060181]
[156.48022461 252.29109192]
[153.44258118 237.60188293]
[162.91519165 225.97132874]
[177.91371155 225.97233582]
[169.31513977 213.68150330]
[160.71658325 201.39065552]
[152.11801147 189.09982300]
[143.51945496 176.80899048]
[134.92088318 164.51814270]
[123.06755829 162.10459900]
[115.80335999 151.93527222]
[117.46633911 139.14476013]
[109.05172729 126.72726440]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[71.12606812 76.33870697]
[70.08493042 69.02175140]
[61.85612488 56.48035049]
[47.81642151 49.18669891]
[47.30350876 34.30093002]
[43.35832596 32.48723221]
[40.48452377 29.78430748]
[38.83009720 26.63815689]
[38.38298035 23.49702644]
[38.98419952 20.75901985]
[31.51646042 7.75006771]
[24.04871750 -5.25888443]
[16.58097649 -18.26783752]
[9.01659870 -31.22083473]
[1.35600090 -44.11716080]
[2.49316812 -29.16032982]
[0.73066288 -14.26423645]
[-3.86562228 0.01421413]
[-11.12385178 13.14121342]
[-20.77267075 24.62599754]
[-32.45135498 34.03919983]
[-45.72328186 41.02890396]
[-60.09227371 45.33378983]
[-75.02113342 46.79291916]
[-89.95174408 45.35173798]
[-104.32589722 41.06413269]
[-117.60622406 34.09038925]
[-129.29621887 24.69123459]
[-138.95883179 13.21805859]
[-146.23283386 0.09979483]
[-150.84628296 -14.17311954]
[-152.62669373 -29.06708336]
[-151.50752258 -44.02527237]
[-147.53057861 -58.48846436]
[-140.84455872 -71.91594696]
[-131.69943237 -83.80571747]
[-120.43708801 -93.71326447]
[-107.47857666 -101.26819611]
[-93.30836487 -106.18807220]
[-78.45621490 -108.28894043]
[-63.47738647 -107.49227142]
[-48.93187332 -103.82784271]
[-35.36346817 -97.43265533]
[-23.27943802 -88.54579926]
[-13.13155365 -77.49951172]
[-5.30186653 -64.71225739]
[-14.23950386 -77.76711273]
[-7.66852856 -91.13391876]
[-9.00676250 -106.07410431]
[-10.34499741 -121.01428986]
[-25.00128555 -124.88327026]
[-37.44865036 -133.53422546]
[-46.18401337 -145.92248535]
[-50.15253448 -160.55213928]
[-48.87499619 -175.65657043]
[-42.50566864 -189.41183472]
[-31.81368065 -200.15693665]
[-18.09013748 -206.59434509]
[-2.99222636 -207.94670105]
[11.65690708 -204.05072021]
[24.08830833 -195.37684631]
[32.80082703 -182.97250366]
[36.74238205 -168.33555603]
[35.43700790 -153.23352051]
[29.04234505 -139.49000549]
[18.33057022 -128.76463318]
[4.59518814 -122.35252380]
[5.93342209 -107.41233826]
[7.27165651 -92.47215271]
[16.11357498 -80.48592377]
[9.63831806 -66.05049133]
[14.25232792 -51.77775955]
[21.91292572 -38.88143158]
[28.03158569 -34.73609924]
[29.58992958 -25.73557854]
[37.05767059 -12.72662544]
[44.52541351 0.28232661]
[51.99315262 13.29127884]
[59.84490967 26.07212067]
[73.29603577 32.46872330]
[74.39752197 48.25154114]
[82.62633514 60.79294205]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.46921539 118.31264496]
[129.88383484 130.73014832]
[146.63374329 138.38011169]
[147.21171570 155.91958618]
[155.81028748 168.21041870]
[164.40884399 180.50125122]
[173.00741577 192.79209900]
[181.60597229 205.08293152]
[190.20454407 217.37376404]
[199.25454712 229.33610535]
[208.74343872 240.95336914]
[218.23234558 252.57063293]
[227.72123718 264.18789673]
[237.55181885 275.51748657]
[247.71536255 286.54937744]
[257.87890625 297.58123779]
[270.71072388 298.88803101]
[278.94885254 308.28573608]
[278.58709717 320.37689209]
[293.55340576 325.50717163]
[296.26882935 340.15216064]
[306.26699829 351.33413696]
[316.26516724 362.51611328]
[326.26333618 373.69808960]
[338.35400391 364.80087280]
[351.23565674 357.09323120]
[364.79165649 350.64498901]
[378.89923096 345.51455688]
[393.43060303 341.74838257]
[408.25415039 339.38055420]
[423.23568726 338.43255615]
[438.23950195 338.91293335]
[453.12966919 340.81735229]
[467.77142334 344.12857056]
[482.03210449 348.81658936]
[495.78259277 354.83898926]
[508.89834595 362.14117432]
[521.26055908 370.65704346]
[532.75732422 380.30947876]
[543.28448486 391.01104736]
[552.74670410 402.66482544]
[561.05834961 415.16531372]
[568.14404297 428.39926147]
[573.93969727 442.24682617]
[578.39276123 456.58261108]
[581.46301270 471.27679443]
[583.12249756 486.19625854]
[583.35632324 501.20593262]
[582.16229248 516.16986084]
[579.55126953 530.95251465]
[575.54681396 545.42004395]
[570.18530273 559.44140625]
[563.51519775 572.88964844]
[555.59698486 585.64294434]
[546.50231934 597.58575439]
[536.31353760 608.61004639]
[525.12304688 618.61584473]
[513.03204346 627.51263428]
[500.15008545 635.21978760]
[486.59387207 641.66754150]
[472.48611450 646.79748535]
[457.95462036 650.56311035]
[443.13095093 652.93041992]
[428.14938354 653.87786865]
[413.14559937 653.39691162]
[398.25549316 651.49194336]
[383.61386108 648.18023682]
[369.35336304 643.49163818]
[355.60308838 637.46875000]
[342.48760986 630.16613770]
[330.12570190 621.64978027]
[318.62930298 611.99694824]
[308.10250854 601.29498291]
[298.64071655 589.64086914]
[290.32955933 577.14007568]
[283.24432373 563.90588379]
[277.44918823 550.05810547]
[272.99661255 535.72216797]
[269.92694092 521.02783203]
[268.26794434 506.10833740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 154]
[9 153]
[10 152]
[11 151]
[13 149]
[15 146]
[16 145]
[17 144]
[22 143]
[23 142]
[24 141]
[25 140]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[39 132]
[40 131]
[41 130]
[43 128]
[44 127]
[46 126]
[47 125]
[49 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 117]
[59 116]
[90 115]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
