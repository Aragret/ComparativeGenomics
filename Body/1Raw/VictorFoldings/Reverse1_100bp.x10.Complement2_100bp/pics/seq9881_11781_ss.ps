%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[33.82450104 585.09393311]
[23.85486794 596.31768799]
[12.83310604 606.51025391]
[0.86536270 615.57336426]
[-11.93310165 623.41973877]
[-25.43902969 629.97387695]
[-39.52234650 635.17266846]
[-54.04742050 638.96594238]
[-68.87435913 641.31719971]
[-83.86037445 642.20391846]
[-98.86113739 641.61737061]
[-113.73217010 639.56335449]
[-128.33026123 636.06158447]
[-142.51481628 631.14575195]
[-156.14924622 624.86328125]
[-169.10220337 617.27465820]
[-181.24896240 608.45294189]
[-192.47254944 598.48303223]
[-202.66484070 587.46105957]
[-211.72770691 575.49316406]
[-219.57386780 562.69451904]
[-226.12773132 549.18847656]
[-231.32620239 535.10504150]
[-235.11920166 520.57989502]
[-237.47019958 505.75292969]
[-238.35656738 490.76690674]
[-237.76976013 475.76614380]
[-235.71542358 460.89514160]
[-232.21334839 446.29711914]
[-227.29727173 432.11267090]
[-221.01452637 418.47836304]
[-213.42561340 405.52557373]
[-204.60363770 393.37896729]
[-194.63356018 382.15560913]
[-183.61138916 371.96353149]
[-171.64328003 362.90087891]
[-158.84449768 355.05499268]
[-145.33831787 348.50140381]
[-131.25479126 343.30322266]
[-116.72956085 339.51049805]
[-101.90252686 337.15979004]
[-86.91648102 336.27374268]
[-71.91574097 336.86083984]
[-57.04478836 338.91546631]
[-42.44683456 342.41784668]
[-28.26247215 347.33419800]
[-21.98511124 333.71087646]
[-23.68604660 318.91372681]
[-10.88362312 309.61810303]
[-4.60626221 295.99478149]
[-6.30719614 281.19763184]
[6.49522686 271.90200806]
[12.77258778 258.27868652]
[4.41117811 248.80741882]
[0.23757026 236.83319092]
[0.90515178 224.12327576]
[6.35003471 212.56764221]
[15.79530621 203.89805603]
[27.86169624 199.42845154]
[40.76893234 199.85597229]
[47.44912720 186.42559814]
[54.12932205 172.99522400]
[50.57867813 161.43151855]
[56.03414536 150.18777466]
[68.06182861 145.52970886]
[74.94123840 132.20027161]
[81.82065582 118.87084198]
[88.70006561 105.54141235]
[95.28009033 92.06168365]
[94.02816010 76.29008484]
[106.38158417 67.96889496]
[112.65894318 54.34558105]
[118.93630219 40.72226334]
[125.21366119 27.09894753]
[131.49102783 13.47563171]
[137.76838684 -0.14768417]
[144.04574585 -13.77099991]
[149.81178284 -27.61848640]
[155.05850220 -41.67095566]
[160.30522156 -55.72342682]
[148.82344055 -65.59228516]
[141.42478943 -78.76922607]
[138.98538208 -93.65444183]
[141.78060913 -108.44824982]
[149.45411682 -121.36872101]
[161.06318665 -130.86628723]
[175.19445801 -135.80961609]
[190.13600159 -135.62025452]
[195.38270569 -149.67272949]
[200.62942505 -163.72520447]
[205.87614441 -177.77767944]
[203.45465088 -193.41247559]
[215.15495300 -202.62942505]
[220.40167236 -216.68188477]
[225.64839172 -230.73435974]
[230.89511108 -244.78683472]
[236.14183044 -258.83929443]
[241.38853455 -272.89178467]
[246.63525391 -286.94424438]
[233.60636902 -294.44744873]
[221.99026489 -303.99288940]
[212.10382080 -315.32022095]
[204.21676636 -328.12039185]
[198.54426575 -342.04418945]
[195.24105835 -356.71182251]
[194.39726257 -371.72305298]
[196.03590393 -386.66845703]
[200.11227417 -401.14025879]
[206.51516724 -414.74368286]
[215.06990051 -427.10757446]
[225.54310608 -437.89471436]
[237.64906311 -446.81072998]
[251.05749512 -453.61245728]
[265.40264893 -458.11431885]
[280.29315186 -460.19348145]
[295.32278442 -459.79327393]
[310.08151245 -456.92453003]
[324.16671753 -451.66558838]
[337.19418335 -444.15988159]
[348.80844116 -434.61221313]
[358.69268799 -423.28295898]
[366.57727051 -410.48129272]
[372.24710083 -396.55636597]
[375.54748535 -381.88812256]
[376.38836670 -366.87670898]
[374.74685669 -351.93164062]
[370.66769409 -337.46063232]
[364.26220703 -323.85842896]
[355.70507812 -311.49618530]
[345.22979736 -300.71109009]
[333.12213135 -291.79736328]
[319.71237183 -284.99822998]
[305.36636353 -280.49914551]
[290.47546387 -278.42285156]
[275.44592285 -278.82595825]
[260.68774414 -281.69754028]
[255.44100952 -267.64505005]
[250.19429016 -253.59259033]
[244.94757080 -239.54011536]
[239.70085144 -225.48764038]
[234.45414734 -211.43516541]
[229.20742798 -197.38270569]
[232.00421143 -182.75303650]
[219.92861938 -172.53096008]
[214.68190002 -158.47848511]
[209.43518066 -144.42601013]
[204.18846130 -130.37355042]
[215.59799194 -120.72429657]
[223.03172302 -107.72933960]
[225.57568359 -92.94750214]
[222.90382385 -78.15957642]
[215.31961060 -65.15381622]
[203.72177124 -55.50963974]
[189.49771118 -50.40588379]
[174.35768127 -50.47671127]
[169.11096191 -36.42424011]
[163.86425781 -22.37176704]
[178.38623047 -26.12835503]
[190.46870422 -17.23937416]
[191.20491028 -2.25745177]
[180.05215454 7.77329683]
[165.23182678 5.45857716]
[157.66906738 -7.49363947]
[151.39170837 6.12967634]
[145.11433411 19.75299263]
[138.83697510 33.37630844]
[132.55961609 46.99962616]
[126.28225708 60.62294006]
[120.00489807 74.24625397]
[121.70583344 89.04341888]
[108.90341187 98.33904266]
[109.71266937 102.10964966]
[108.85597992 106.21865845]
[106.21945953 109.91403198]
[102.02949524 112.42082977]
[95.15008545 125.75025940]
[88.27066803 139.07968140]
[81.39125824 152.40911865]
[82.68576813 170.77772522]
[67.55970001 179.67541504]
[60.87950516 193.10580444]
[54.19931030 206.53617859]
[64.25325012 220.94975281]
[65.61528778 238.38121033]
[58.00012589 254.02133179]
[43.58677673 263.60092163]
[26.39590454 264.55606079]
[20.11854362 278.17935181]
[21.37047768 293.95095825]
[9.01705456 302.27215576]
[2.73969340 315.89547729]
[3.99162865 331.66705322]
[-8.36179543 339.98825073]
[-14.63915634 353.61157227]
[-1.68589008 361.19970703]
[10.46122456 370.02093506]
[21.68520164 379.99035645]
[31.87794685 391.01190186]
[40.94129181 402.97946167]
[48.78795624 415.77777100]
[55.34236526 429.28356934]
[60.54139328 443.36679077]
[64.33497620 457.89178467]
[66.68656921 472.71868896]
[67.57353210 487.70468140]
[66.98731995 502.70544434]
[64.93358612 517.57653809]
[61.43209457 532.17468262]
[56.51658249 546.35931396]
[50.23437881 559.99389648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 194]
[47 193]
[49 191]
[50 190]
[52 188]
[53 187]
[60 182]
[61 181]
[62 180]
[65 178]
[66 177]
[67 176]
[68 175]
[69 171]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 163]
[78 157]
[79 156]
[80 155]
[88 147]
[89 146]
[90 145]
[91 144]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
