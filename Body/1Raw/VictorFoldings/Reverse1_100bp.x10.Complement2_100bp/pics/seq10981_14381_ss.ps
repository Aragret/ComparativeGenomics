%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[279.91992188 604.53350830]
[290.65820312 594.00122070]
[303.10464478 585.55578613]
[297.03079224 571.84051514]
[290.95697021 558.12524414]
[284.88314819 544.40997314]
[278.80929565 530.69470215]
[272.73547363 516.97943115]
[266.66162109 503.26419067]
[260.58779907 489.54891968]
[254.51396179 475.83364868]
[248.33819580 462.16397095]
[242.06083679 448.54067993]
[227.20639038 439.19656372]
[229.04722595 420.87463379]
[222.56773376 407.34628296]
[216.84330750 402.67160034]
[216.09416199 393.56793213]
[209.81680298 379.94461060]
[203.53942871 366.32131958]
[190.40953064 369.13171387]
[176.97560120 369.13235474]
[163.83250427 366.32046509]
[151.56275940 360.81784058]
[140.71081543 352.86560059]
[131.75877380 342.81365967]
[125.10511780 331.10522461]
[121.04685211 318.25738525]
[119.76630402 304.83819580]
[121.32292938 291.44158936]
[125.65055084 278.66104126]
[132.56015015 267.06335449]
[141.74816895 257.16348267]
[152.80979919 249.40164185]
[147.14701843 235.51161194]
[141.48423767 221.62158203]
[135.82144165 207.73156738]
[130.15866089 193.84153748]
[124.49587250 179.95150757]
[112.52632904 171.08700562]
[114.48125458 155.38703918]
[108.81846619 141.49702454]
[103.15567780 127.60699463]
[91.16306305 126.34412384]
[80.83478546 120.11961365]
[74.11607361 110.10578156]
[72.27233887 98.18862915]
[75.65081787 86.61263275]
[83.61521149 77.55800629]
[78.36849213 63.50553894]
[66.29290771 53.28346634]
[69.08969116 38.65379333]
[63.84297180 24.60132408]
[58.59625244 10.54885292]
[53.34953690 -3.50361872]
[48.50138092 -7.99883080]
[46.89266586 -13.44943333]
[48.16263580 -18.05336952]
[43.33663559 -32.25582504]
[38.51063919 -46.45827866]
[26.74475479 -57.03535461]
[29.97587967 -71.57527161]
[25.14988327 -85.77772522]
[20.32388496 -99.98017883]
[14.60654259 -86.11251831]
[1.89070940 -78.15591431]
[-13.08092403 -79.07798004]
[-24.72430801 -88.53480530]
[-28.69674683 -102.99923706]
[-23.51662254 -117.07639313]
[-11.11599064 -125.51584625]
[3.88001943 -125.16988373]
[15.87894154 -116.16659546]
[12.77483177 -130.84188843]
[9.67072201 -145.51719666]
[6.56661177 -160.19250488]
[3.46250153 -174.86779785]
[-6.96313047 -186.76808167]
[-2.02710581 -200.82101440]
[-5.13121605 -215.49632263]
[-8.23532581 -230.17163086]
[-18.66095734 -242.07191467]
[-13.72493362 -256.12484741]
[-16.82904243 -270.80014038]
[-31.88539124 -270.80957031]
[-46.61067963 -273.94955444]
[-60.36118698 -280.08285522]
[-72.53579712 -288.94131470]
[-82.60228729 -300.13772583]
[-90.12059784 -313.18258667]
[-94.76205444 -327.50567627]
[-96.32375336 -342.48080444]
[-94.73743439 -357.45336914]
[-90.07242584 -371.76879883]
[-82.53268433 -384.80126953]
[-72.44779205 -395.98110962]
[-60.25863647 -404.81954956]
[-46.49806595 -410.93023682]
[-31.76763153 -414.04602051]
[-16.71129036 -414.03067017]
[-1.98723602 -410.88488770]
[11.76085567 -404.74618530]
[23.93197823 -395.88293457]
[33.99406433 -384.68255615]
[41.50724030 -371.63473511]
[46.14306259 -357.30981445]
[47.69887161 -342.33407593]
[46.10665894 -327.36215210]
[41.43602753 -313.04855347]
[33.89115143 -300.01904297]
[23.80186844 -288.84317017]
[11.60923386 -280.00952148]
[-2.15374088 -273.90426636]
[0.95036918 -259.22894287]
[11.15397453 -248.37834167]
[6.43997622 -233.27574158]
[9.54408646 -218.60043335]
[12.64819622 -203.92512512]
[22.85180092 -193.07452393]
[18.13780403 -177.97190857]
[21.24191475 -163.29661560]
[24.34602356 -148.62130737]
[27.45013428 -133.94599915]
[30.55424500 -119.27070618]
[34.52634048 -104.80617523]
[39.35233688 -90.60372162]
[44.17833710 -76.40126801]
[55.59903336 -66.84004974]
[52.71309662 -51.28427887]
[57.53909302 -37.08182144]
[62.36508942 -22.87936592]
[67.40200806 -8.75033665]
[72.64872742 5.30213451]
[77.89543915 19.35460663]
[83.14215851 33.40707779]
[94.84246826 42.62402344]
[92.42095947 58.25881958]
[97.66767883 72.31129456]
[114.69555664 76.41727448]
[125.88392639 89.89421844]
[126.78691101 107.38684845]
[117.04570770 121.94420624]
[122.70849609 135.83422852]
[128.37127686 149.72425842]
[140.74586487 159.58226013]
[138.38589478 174.28872681]
[144.04869080 188.17874146]
[149.71147156 202.06877136]
[155.37425232 215.95880127]
[161.03704834 229.84883118]
[166.69982910 243.73886108]
[183.20303345 241.45327759]
[199.72848511 243.48901367]
[215.16436768 249.70375061]
[228.47358704 259.67419434]
[238.76339722 272.72485352]
[245.34529114 287.97393799]
[247.78111267 304.39279175]
[245.91213989 320.87536621]
[239.86950684 336.31268311]
[230.06494141 349.66748047]
[217.16275024 360.04394531]
[223.44010925 373.66726685]
[229.71746826 387.29058838]
[236.09608459 400.86679077]
[242.57557678 414.39514160]
[254.45924377 419.40924072]
[259.57751465 430.81042480]
[255.68414307 442.26330566]
[261.96151733 455.88662720]
[268.39505005 462.37103271]
[268.22921753 469.75982666]
[274.30307007 483.47509766]
[280.37689209 497.19033813]
[286.45074463 510.90560913]
[292.52456665 524.62091064]
[298.59838867 538.33612061]
[304.67224121 552.05139160]
[310.74606323 565.76666260]
[316.81991577 579.48193359]
[331.43856812 575.94158936]
[346.45449829 575.06854248]
[361.38494873 576.89099121]
[375.75000000 581.35028076]
[389.08786011 588.30303955]
[400.96975708 597.52581787]
[411.01379395 608.72216797]
[418.89703369 621.53210449]
[424.36611938 635.54382324]
[427.24517822 650.30700684]
[427.44171143 665.34698486]
[424.94937134 680.18029785]
[419.84832764 694.33020020]
[412.30249023 707.34173584]
[402.55444336 718.79663086]
[390.91757202 728.32678223]
[377.76593018 735.62567139]
[363.52230835 740.45880127]
[348.64459229 742.67077637]
[333.61099243 742.19042969]
[318.90478516 739.03320312]
[304.99874878 733.30072021]
[292.33990479 725.17706299]
[281.33514404 714.92352295]
[272.33822632 702.86968994]
[265.63842773 689.40295410]
[261.45104980 674.95629883]
[259.91070557 659.99414062]
[261.06695557 644.99737549]
[264.88259888 630.44812012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 170]
[13 169]
[15 166]
[16 165]
[18 164]
[19 163]
[20 162]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[41 144]
[42 143]
[43 142]
[49 138]
[50 137]
[52 135]
[53 134]
[54 133]
[55 132]
[58 131]
[59 130]
[60 129]
[62 127]
[63 126]
[64 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[79 118]
[80 117]
[81 116]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
