%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[21.97181892 637.98541260]
[12.95433140 649.99298096]
[2.62683344 660.89440918]
[-8.87603569 670.54748535]
[-21.40431213 678.82635498]
[-34.79466248 685.62316895]
[-48.87252045 690.84924316]
[-63.45434952 694.43640137]
[-78.35004425 696.33801270]
[-93.36540985 696.52917480]
[-108.30468750 695.00744629]
[-122.97312164 691.79266357]
[-137.17947388 686.92675781]
[-150.73852539 680.47308350]
[-163.47352600 672.51580811]
[-175.21842957 663.15875244]
[-185.82012939 652.52380371]
[-195.14041138 640.74969482]
[-203.05776978 627.98986816]
[-209.46896362 614.41070557]
[-214.29042053 600.18914795]
[-217.45930481 585.51074219]
[-218.93426514 570.56677246]
[-218.69610596 555.55206299]
[-216.74790955 540.66241455]
[-213.11509705 526.09185791]
[-207.84500122 512.03045654]
[-201.00636292 498.66143799]
[-192.68829346 486.15911865]
[-182.99928284 474.68652344]
[-172.06561279 464.39318848]
[-160.02984619 455.41329956]
[-147.04888916 447.86398315]
[-133.29196167 441.84359741]
[-118.93843842 437.43069458]
[-104.17542267 434.68273926]
[-89.19539642 433.63558960]
[-74.19364166 434.30288696]
[-59.36575317 436.67596436]
[-44.90503311 440.72384644]
[-39.24224854 426.83380127]
[-33.57946014 412.94378662]
[-27.91667366 399.05377197]
[-30.27663994 384.34729004]
[-17.90205765 374.48928833]
[-12.23927116 360.59927368]
[-15.56035900 343.36740112]
[-0.92079782 332.19760132]
[4.53455925 318.22479248]
[9.98991585 304.25198364]
[15.44527340 290.27920532]
[20.79645920 276.26617432]
[26.04317665 262.21371460]
[22.21050453 245.08834839]
[36.51100922 233.48760986]
[41.54792404 219.35858154]
[40.83301544 212.00259399]
[46.76644135 205.05764771]
[52.01316071 191.00517273]
[50.97356033 188.40184021]
[50.90253448 185.22984314]
[52.02185059 181.85603333]
[54.41648102 178.72070312]
[58.01315308 176.28802490]
[64.08698273 162.57276917]
[70.16082001 148.85749817]
[76.23465729 135.14222717]
[82.30848694 121.42696381]
[74.89715576 111.91433716]
[72.21368408 100.15777588]
[74.76347351 88.37149811]
[82.06629944 78.77532196]
[92.74675751 73.17659760]
[104.79328156 72.62978363]
[111.27278137 59.10143661]
[117.75227356 45.57309341]
[124.23177338 32.04474640]
[128.31143188 17.61019516]
[129.87196350 2.69158959]
[131.32138062 -12.23821926]
[132.65960693 -27.17840385]
[133.99784851 -42.11858749]
[135.33609009 -57.05877304]
[136.67431641 -71.99896240]
[134.32299805 -80.82557678]
[138.14530945 -87.15105438]
[139.70584106 -102.06966400]
[130.07623291 -111.48695374]
[127.66388702 -124.54034424]
[133.12913513 -136.42366028]
[144.27314758 -142.89207458]
[138.23056030 -157.51390076]
[147.42543030 -169.23155212]
[149.20790100 -184.12527466]
[150.99037170 -199.01899719]
[144.94778442 -213.64082336]
[154.14265442 -225.35847473]
[155.92512512 -240.25219727]
[141.91412354 -245.85168457]
[129.83036804 -254.88746643]
[120.49774933 -266.74346924]
[114.55258942 -280.61132812]
[112.40023041 -295.54550171]
[114.18743134 -310.52777100]
[119.79232788 -324.53662109]
[128.83276367 -336.61688232]
[140.69236755 -345.94491577]
[154.56253052 -351.88470459]
[169.49752808 -354.03131104]
[184.47911072 -352.23831177]
[198.48577881 -346.62802124]
[210.56256104 -337.58291626]
[219.88601685 -325.71969604]
[225.82046509 -311.84725952]
[227.96128845 -296.91140747]
[226.16252136 -281.93054199]
[220.54681396 -267.92602539]
[211.49703979 -255.85275269]
[199.63023376 -246.53387451]
[185.75549316 -240.60478210]
[170.81883240 -238.46972656]
[169.03637695 -223.57600403]
[175.20645142 -210.01948547]
[165.88407898 -197.23652649]
[164.10162354 -182.34280396]
[162.31915283 -167.44909668]
[168.48924255 -153.89256287]
[159.16687012 -141.10960388]
[170.11688232 -128.34497070]
[168.41334534 -111.27414703]
[154.62445068 -100.50914001]
[153.06391907 -85.59053040]
[151.61450195 -70.66072845]
[150.27626038 -55.72053909]
[148.93803406 -40.78035355]
[147.59979248 -25.84016991]
[146.26156616 -10.89998531]
[148.79577637 -3.95739698]
[144.79057312 4.25211239]
[143.23004150 19.17071724]
[151.27337646 6.50956059]
[162.17767334 -3.79073811]
[175.27615356 -11.10031223]
[189.76782227 -14.97217751]
[204.76652527 -15.16956902]
[219.35507202 -11.68041611]
[232.64138794 -4.71808052]
[243.81297302 5.29168701]
[252.18672180 17.73678589]
[257.25054932 31.85619354]
[258.69479370 46.78650284]
[256.43118286 61.61471939]
[250.59808350 75.43408966]
[241.55223083 87.39955902]
[229.84675598 96.77943420]
[216.19747925 103.00012207]
[201.43902588 105.68123627]
[186.47392273 104.65882111]
[172.21725464 99.99540710]
[159.54083252 91.97614288]
[149.21983337 81.09143066]
[141.88539124 68.00686646]
[137.98600769 53.52257156]
[137.76011658 38.52424240]
[131.28062439 52.05258942]
[124.80112457 65.58093262]
[118.32163239 79.10928345]
[127.17909241 94.22062683]
[125.23652649 111.62850189]
[113.26583099 124.41561127]
[96.02375793 127.50079346]
[89.94992065 141.21606445]
[83.87608337 154.93133545]
[77.80225372 168.64659119]
[71.72841644 182.36186218]
[66.06563568 196.25189209]
[60.81891251 210.30436707]
[55.67695236 224.39550781]
[50.64003754 238.52453613]
[55.45303345 250.49105835]
[50.96689987 262.15545654]
[40.09564972 267.46041870]
[34.84893036 281.51287842]
[34.77896118 290.64706421]
[29.41807175 295.73455811]
[23.96271324 309.70733643]
[18.50735664 323.68014526]
[13.05200005 337.65295410]
[17.50657272 349.75747681]
[12.67513466 361.28314209]
[1.65075612 366.26205444]
[-4.01203060 380.15209961]
[-2.05710530 395.85205078]
[-14.02664757 404.71655273]
[-19.68943405 418.60656738]
[-25.35222054 432.49661255]
[-31.01500702 446.38662720]
[-17.84604645 453.60302734]
[-5.58555126 462.27352905]
[5.60663843 472.28515625]
[15.58460999 483.50738525]
[24.21827888 495.79385376]
[31.39508820 508.98440552]
[37.02147293 522.90710449]
[41.02408218 537.38043213]
[43.35073471 552.21569824]
[43.97109604 567.21942139]
[42.87707901 582.19610596]
[40.08294678 596.95043945]
[35.62512589 611.29010010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 197]
[41 196]
[42 195]
[43 194]
[45 192]
[46 191]
[48 188]
[49 187]
[50 186]
[51 185]
[52 183]
[53 182]
[55 179]
[56 178]
[58 177]
[59 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[74 167]
[75 166]
[76 165]
[77 164]
[78 140]
[79 139]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[86 132]
[87 131]
[91 128]
[93 126]
[94 125]
[95 124]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
