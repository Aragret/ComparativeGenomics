%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[75.48585510 642.51599121]
[62.00112915 649.24346924]
[47.32828522 652.67926025]
[32.25861359 652.63800049]
[17.60479927 649.12194824]
[4.15710640 642.32080078]
[-7.35925007 632.60119629]
[-16.32320595 620.48736572]
[-22.25134659 606.63262939]
[-24.82397652 591.78411865]
[-23.90235519 576.74261475]
[-19.53618622 562.31927490]
[-11.96092892 549.29187012]
[-1.58510947 538.36309814]
[11.03171825 530.12219238]
[25.20914268 525.01361084]
[40.18259811 523.31292725]
[41.96506119 508.41918945]
[43.74752808 493.52548218]
[45.52999496 478.63174438]
[47.31245804 463.73803711]
[48.65069580 448.79785156]
[49.54351044 433.82443237]
[38.48674774 426.34179688]
[32.52333832 414.27606201]
[33.30681610 400.73147583]
[40.73930359 389.25207520]
[52.96921921 382.89440918]
[54.08486557 367.93594360]
[55.20051575 352.97747803]
[48.43125534 339.70999146]
[57.17353821 326.52352905]
[58.28918457 311.56506348]
[51.51992798 298.29757690]
[60.26220703 285.11111450]
[61.37785339 270.15264893]
[62.49350357 255.19419861]
[50.45027542 264.13626099]
[35.59189606 262.07992554]
[26.42991829 250.20312500]
[28.21274185 235.30946350]
[39.91908264 225.93067932]
[54.84301758 227.43937683]
[64.43515015 238.97039795]
[66.88088226 224.17112732]
[69.32660675 209.37185669]
[71.77233124 194.57258606]
[69.76869202 190.23731995]
[70.46717072 184.59736633]
[74.51750946 179.37182617]
[72.64383698 174.97883606]
[73.50992584 169.36216736]
[77.71405029 164.25953674]
[81.03630829 149.63208008]
[84.35856628 135.00460815]
[87.68083191 120.37715149]
[91.00308990 105.74969482]
[92.78555298 90.85597229]
[93.00888062 75.85763550]
[78.87989044 70.41732788]
[67.48609161 60.48992920]
[60.18995667 47.28816223]
[57.85519409 32.41473007]
[60.74452972 17.66775703]
[68.49029541 4.82339573]
[80.14109802 -4.57808924]
[94.27863312 -9.41701794]
[94.50196075 -24.41535568]
[94.72528839 -39.41369247]
[94.94861603 -54.41202927]
[95.17194366 -69.41036987]
[84.44435883 -80.70446014]
[84.88449860 -95.91172791]
[95.71780396 -106.06924438]
[95.94113159 -121.06758118]
[96.16445923 -136.06591797]
[96.38778687 -151.06425476]
[96.61111450 -166.06259155]
[84.19378662 -157.64773560]
[69.82801056 -161.96334839]
[64.10370636 -175.82814026]
[71.24061584 -189.02148438]
[85.97767639 -191.81774902]
[97.45059204 -182.15713501]
[98.78882599 -197.09732056]
[99.79308319 -212.06365967]
[100.46286774 -227.04870605]
[97.71977234 -235.76152039]
[101.25582123 -242.25137329]
[102.14863586 -257.22479248]
[95.24645996 -271.46102905]
[103.72757721 -283.70520020]
[104.39736176 -298.69021606]
[104.84397125 -313.68359375]
[105.29058075 -328.67694092]
[90.83588409 -333.00408936]
[77.99418640 -340.92578125]
[67.64104462 -351.90188599]
[60.48236465 -365.18405151]
[57.00622559 -379.86663818]
[57.44964218 -394.94860840]
[61.78238297 -409.40164185]
[69.70903015 -422.24026489]
[80.68913269 -432.58917236]
[93.97405243 -439.74273682]
[108.65799713 -443.21319580]
[123.73979950 -442.76394653]
[138.19114685 -438.42562866]
[151.02671814 -430.49401855]
[161.37138367 -419.50994873]
[168.51980591 -406.22225952]
[171.98460388 -391.53695679]
[171.52954102 -376.45535278]
[167.18563843 -362.00567627]
[159.24908447 -349.17315674]
[148.26098633 -338.83273315]
[134.97055054 -331.68945312]
[120.28392792 -328.23031616]
[119.83731842 -313.23696899]
[119.39071655 -298.24362183]
[121.95558929 -294.21490479]
[122.01687622 -288.53219604]
[118.70098877 -282.81237793]
[125.66703033 -269.64712524]
[117.12204742 -256.33197021]
[116.22922516 -241.35855103]
[115.44790649 -226.37892151]
[114.77812195 -211.39387512]
[116.87490082 -208.55912781]
[117.70281219 -204.56793213]
[116.73328400 -200.02774048]
[113.72900391 -195.75909424]
[112.39076996 -180.81890869]
[111.60945129 -165.83926392]
[111.38612366 -150.84092712]
[111.16279602 -135.84259033]
[110.93946838 -120.84425354]
[110.71614075 -105.84591675]
[121.24221039 -95.37035370]
[121.22938538 -80.15673065]
[110.17028046 -69.18704224]
[109.94695282 -54.18870163]
[109.72362518 -39.19036484]
[109.50029755 -24.19202805]
[109.27696991 -9.19369030]
[123.26417542 -3.93597937]
[134.62989807 5.80822515]
[141.98979187 18.87751389]
[144.43878174 33.70397568]
[141.66221619 48.50129700]
[133.97625732 61.47998047]
[122.29192352 71.06374359]
[108.00721741 76.08096313]
[107.78388977 91.07929993]
[115.59474945 78.27342987]
[127.66618347 69.36946106]
[142.20745850 65.68826294]
[157.06147766 67.77591705]
[170.02471924 75.32272339]
[179.17417908 87.20916748]
[183.15257263 101.67195892]
[181.36973572 116.56563568]
[174.09014893 129.68080139]
[162.39369202 139.07189941]
[148.01545715 143.34582520]
[133.08837891 141.86856079]
[119.82679749 134.85925293]
[110.19799042 123.35768890]
[105.63054657 109.07195282]
[102.30828857 123.69940948]
[98.98603058 138.32687378]
[95.66377258 152.95433044]
[92.34150696 167.58178711]
[89.23739624 182.25709534]
[86.57160187 197.01831055]
[84.12587738 211.81758118]
[81.68015289 226.61685181]
[79.23442078 241.41612244]
[77.45195770 256.30984497]
[76.33631134 271.26831055]
[75.22065735 286.22674561]
[81.91011810 300.56417847]
[73.24763489 312.68072510]
[72.13198853 327.63916016]
[78.82144928 341.97659302]
[70.15896606 354.09313965]
[69.04331970 369.05160522]
[67.92767334 384.01004028]
[80.98187256 394.76568604]
[85.01290131 411.02151489]
[78.62441254 426.32345581]
[64.51691437 434.71725464]
[63.62409973 449.69067383]
[65.70450592 453.50195312]
[66.39450073 457.38632202]
[65.84183502 460.89773560]
[64.32395935 463.68389893]
[62.20617676 465.52050781]
[60.42370987 480.41421509]
[58.64124680 495.30795288]
[56.85877991 510.20166016]
[55.07631302 525.09539795]
[69.22556305 530.28143311]
[81.79708862 538.59130859]
[92.11292267 549.57678223]
[99.61674500 562.64538574]
[103.90389252 577.09246826]
[104.74315643 592.13879395]
[102.08927917 606.97296143]
[96.08538055 620.79504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 193]
[23 192]
[28 188]
[29 187]
[30 186]
[32 184]
[33 183]
[35 181]
[36 180]
[37 179]
[44 178]
[45 177]
[46 176]
[47 175]
[50 174]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 154]
[59 153]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[84 133]
[85 132]
[86 128]
[87 127]
[89 126]
[90 125]
[92 123]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
