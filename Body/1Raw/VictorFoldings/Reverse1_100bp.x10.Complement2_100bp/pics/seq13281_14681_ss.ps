%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[36.05467224 662.76586914]
[24.33725739 672.14715576]
[11.82607365 680.44030762]
[-1.37814271 687.57861328]
[-15.16907787 693.50451660]
[-29.43569183 698.17034912]
[-44.06311798 701.53851318]
[-58.93358231 703.58190918]
[-73.92735291 704.28411865]
[-88.92370605 703.63946533]
[-103.80190277 701.65307617]
[-118.44213867 698.34106445]
[-132.72654724 693.72998047]
[-146.54011536 687.85705566]
[-159.77162170 680.76947021]
[-172.31452942 672.52441406]
[-184.06785583 663.18811035]
[-194.93695068 652.83587646]
[-204.83432007 641.55102539]
[-213.68026733 629.42437744]
[-221.40356445 616.55358887]
[-227.94203186 603.04229736]
[-233.24301147 588.99932861]
[-237.26385498 574.53765869]
[-239.97215271 559.77380371]
[-241.34611511 544.82666016]
[-241.37467957 529.81646729]
[-240.05761719 514.86413574]
[-237.40551758 500.09008789]
[-233.43975830 485.61325073]
[-228.19224548 471.55017090]
[-221.70526123 458.01409912]
[-214.03100586 445.11404419]
[-205.23127747 432.95379639]
[-195.37692261 421.63134766]
[-184.54730225 411.23782349]
[-172.82960510 401.85690308]
[-160.31816101 393.56411743]
[-147.11373901 386.42623901]
[-133.32261658 380.50076294]
[-119.05586243 375.83535767]
[-104.42832947 372.46762085]
[-89.55780792 370.42465210]
[-74.56401062 369.72293091]
[-59.56767654 370.36804199]
[-44.68954468 372.35485840]
[-30.04940605 375.66735840]
[-15.76513672 380.27883911]
[-9.89617634 366.47467041]
[-4.02721500 352.67050171]
[1.84174562 338.86630249]
[7.29710245 324.89352417]
[12.33401871 310.76449585]
[17.37093544 296.63546753]
[22.40785217 282.50643921]
[21.69294357 275.15042114]
[27.62636948 268.20547485]
[32.87308884 254.15301514]
[24.50623512 241.85935974]
[24.98844147 226.81837463]
[34.34425354 214.80496216]
[49.15113068 210.55494690]
[54.39785004 196.50247192]
[59.64456940 182.45001221]
[64.89128876 168.39753723]
[56.75998688 159.38325500]
[53.21189499 147.69805908]
[54.97906494 135.54165649]
[61.78686142 125.22983551]
[72.39456177 118.75332642]
[84.82109833 117.39356232]
[90.48388672 103.50353241]
[90.36888123 95.44379425]
[96.33576965 89.44987488]
[102.20472717 75.64569855]
[108.07369232 61.84151840]
[106.35272980 46.11418915]
[118.45292664 37.42888260]
[124.32188416 23.62470627]
[127.31665802 8.92670155]
[127.31665802 -6.07329845]
[127.31665802 -21.07329750]
[127.31665802 -36.07329941]
[127.09333038 -51.07163620]
[126.64672852 -66.06498718]
[126.20011902 -81.05833435]
[125.75351715 -96.05168915]
[125.30690765 -111.04503632]
[124.86030579 -126.03838348]
[113.63910675 -136.84220886]
[113.39976501 -152.05395508]
[123.76870728 -162.68507385]
[123.21050262 -177.67468262]
[122.54071045 -192.65971375]
[121.87092590 -207.64476013]
[107.33818817 -211.89660645]
[94.97488403 -220.63888550]
[86.12209320 -232.92329407]
[81.74010468 -247.41732788]
[82.30423737 -262.54876709]
[87.75330353 -276.67626953]
[97.49623108 -288.26739502]
[110.47617340 -296.06481934]
[125.28516388 -299.22274780]
[140.31683350 -297.39862061]
[153.94067383 -290.79028320]
[164.67884827 -280.11459351]
[171.36657715 -266.52957153]
[173.27842712 -251.50880432]
[170.20700073 -236.68164062]
[162.48547363 -223.65640259]
[150.95143127 -213.84597778]
[136.85597229 -208.31454468]
[137.52575684 -193.32949829]
[138.19554138 -178.34446716]
[141.63456726 -171.80268860]
[138.76205444 -163.13168335]
[149.74539185 -153.13658142]
[150.41189575 -137.93754578]
[139.85365295 -126.48499298]
[140.30026245 -111.49163818]
[140.74685669 -96.49829102]
[141.19346619 -81.50494385]
[141.64007568 -66.51158905]
[142.08668518 -51.51824188]
[144.88679504 -47.64934158]
[145.28622437 -41.98034668]
[142.31666565 -36.07329941]
[142.31666565 -21.07329750]
[142.31666565 -6.07329845]
[142.31666565 8.92670155]
[148.94415283 -4.52975941]
[158.27467346 -16.27460289]
[169.88374329 -25.77351761]
[183.24324036 -32.59436798]
[197.74537659 -36.42684555]
[212.73042297 -37.09660721]
[227.51664734 -34.57317352]
[241.43136597 -28.97134781]
[253.84156799 -20.54597855]
[264.18267822 -9.68035984]
[271.98422241 3.13119364]
[276.89129639 17.30584145]
[278.68063354 32.19873047]
[277.27090454 47.13233948]
[272.72616577 61.42728043]
[265.25320435 74.43323517]
[255.19197083 85.55851746]
[243.00021362 94.29699707]
[229.23257446 100.25114441]
[214.51536560 103.15007019]
[199.51812744 102.86190033]
[184.92314148 99.39974213]
[171.39439392 92.92110443]
[159.54733276 83.72071838]
[149.92092896 72.21714020]
[142.95310974 58.93371201]
[138.96087646 44.47473145]
[138.12606812 29.49366570]
[132.25709534 43.29784393]
[134.39784241 58.03780365]
[121.87786865 67.71047974]
[116.00890350 81.51465607]
[110.13994598 95.31883240]
[104.37390900 109.16632080]
[98.71112823 123.05634308]
[108.72619629 138.17111206]
[107.67257690 156.11462402]
[96.16059113 169.71333313]
[78.94375610 173.64425659]
[73.69703674 187.69673157]
[68.45031738 201.74919128]
[63.20360184 215.80166626]
[71.60199738 228.71574402]
[70.79524231 243.92108154]
[61.30200958 255.59765625]
[46.92556000 259.39971924]
[41.67884064 273.45220947]
[36.53688049 287.54333496]
[31.49996376 301.67236328]
[26.46304893 315.80139160]
[21.42613220 329.93041992]
[22.35998917 334.17092896]
[21.93829536 338.09353638]
[20.42744446 341.31109619]
[18.19218826 343.56280518]
[15.64592266 344.73526001]
[9.77696133 358.53945923]
[3.90800095 372.34362793]
[-1.96095991 386.14779663]
[11.27076149 393.23495483]
[23.81392097 401.47967529]
[35.56752396 410.81558228]
[46.43694305 421.16748047]
[56.33465195 432.45205688]
[65.18096924 444.57843018]
[72.90465546 457.44897461]
[79.44353485 470.96005249]
[84.74495697 485.00289917]
[88.76622772 499.46441650]
[91.47498322 514.22821045]
[92.84940338 529.17535400]
[92.87842560 544.18548584]
[91.56181335 559.13787842]
[88.91017151 573.91198730]
[84.94485474 588.38897705]
[79.69777679 602.45220947]
[73.21119690 615.98846436]
[65.53733063 628.88879395]
[56.73797607 641.04925537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 190]
[49 189]
[50 188]
[51 187]
[52 182]
[53 181]
[54 180]
[55 179]
[57 178]
[58 177]
[62 173]
[63 172]
[64 171]
[65 170]
[71 166]
[72 165]
[74 164]
[75 163]
[76 162]
[78 160]
[79 159]
[80 131]
[81 130]
[82 129]
[83 128]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[92 117]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
