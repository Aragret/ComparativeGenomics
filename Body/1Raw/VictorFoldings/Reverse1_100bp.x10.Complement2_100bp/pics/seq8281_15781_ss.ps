%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[96.61283112 558.14282227]
[95.05230713 543.22424316]
[93.49179077 528.30566406]
[91.93126678 513.38702393]
[90.37074280 498.46841431]
[81.35134888 486.61517334]
[87.61096191 472.08493042]
[86.05043793 457.16632080]
[84.48991394 442.24771118]
[75.11267090 453.95529175]
[60.42898178 457.01947021]
[47.15201950 450.03933716]
[41.35184097 436.20611572]
[45.68021011 421.84417725]
[58.15824890 413.51959229]
[73.08117676 415.03826904]
[83.62719727 425.70755005]
[83.62719727 410.70755005]
[83.62719727 395.70755005]
[83.62719727 380.70755005]
[73.33079529 372.96072388]
[69.31636810 360.51217651]
[73.26277924 347.83792114]
[83.94321442 339.63165283]
[84.16654205 324.63333130]
[84.38986969 309.63497925]
[84.61319733 294.63665771]
[84.83652496 279.63830566]
[85.05985260 264.63998413]
[85.28318024 249.64163208]
[73.06462860 238.08543396]
[72.98294830 220.93002319]
[85.57709503 208.78890991]
[85.57709503 193.78890991]
[85.57709503 178.78890991]
[85.57709503 163.78890991]
[85.57709503 148.78890991]
[85.57709503 133.78890991]
[78.57247925 147.05296326]
[67.85575867 157.54829407]
[54.44839096 164.27453613]
[39.62827301 166.59060669]
[24.80797005 164.27574158]
[11.40005779 157.55056763]
[0.68249112 147.05610657]
[-6.32319880 133.79261780]
[-8.94927406 119.02427673]
[-6.94543409 104.15872955]
[-0.50267190 90.61284637]
[9.76492882 79.67774963]
[22.87872696 72.39569855]
[37.58879852 69.46076965]
[52.49307251 71.15269470]
[66.17096710 77.31022644]
[77.31879425 87.34645844]
[84.87401581 100.30480194]
[88.11658478 114.95127869]
[81.04122162 102.30670166]
[84.87813568 88.33442688]
[97.41889191 81.07662201]
[101.39098358 66.61209869]
[105.36308289 52.14757538]
[109.22738647 37.65388489]
[112.98368835 23.13182449]
[116.73999023 8.60976505]
[120.49629211 -5.91229391]
[123.60040283 -20.58759689]
[126.04612732 -35.38686752]
[128.49185181 -50.18613815]
[123.10819244 -65.06319427]
[132.81710815 -76.35859680]
[135.26284790 -91.15786743]
[137.70857239 -105.95713806]
[140.15429688 -120.75640869]
[142.48977661 -135.57347107]
[144.71490479 -150.40751648]
[146.94001770 -165.24156189]
[145.02789307 -170.09860229]
[145.15713501 -174.73936462]
[146.90350342 -178.42247009]
[149.61000061 -180.68237305]
[152.49526978 -195.40226746]
[155.38055420 -210.12214661]
[158.26582336 -224.84204102]
[161.15109253 -239.56193542]
[152.40005493 -249.80078125]
[151.16189575 -263.01733398]
[157.66552734 -274.36569214]
[169.34219360 -279.81408691]
[172.44630432 -294.48937988]
[175.55041504 -309.16470337]
[161.44122314 -314.33300781]
[148.21119690 -321.45672607]
[136.12971497 -330.39083862]
[125.44270325 -340.95343018]
[116.36776733 -352.92950439]
[109.08963776 -366.07522583]
[103.75650024 -380.12295532]
[100.47692871 -394.78668213]
[99.31769562 -409.76788330]
[100.30239105 -424.76159668]
[103.41097260 -439.46252441]
[108.58014679 -453.57141113]
[115.70469666 -466.80099487]
[124.63954926 -478.88192749]
[135.20281982 -489.56826782]
[147.17945862 -498.64248657]
[160.32560730 -505.91976929]
[174.37365723 -511.25204468]
[189.03759766 -514.53070068]
[204.01889038 -515.68902588]
[219.01252747 -514.70343018]
[233.71327209 -511.59390259]
[247.82182312 -506.42385864]
[261.05096436 -499.29849243]
[273.13134766 -490.36288452]
[283.81704712 -479.79895020]
[292.89050293 -467.82177734]
[300.16699219 -454.67517090]
[305.49841309 -440.62677002]
[308.77615356 -425.96264648]
[309.93353271 -410.98126221]
[308.94699097 -395.98770142]
[305.83657837 -381.28713989]
[300.66564941 -367.17889404]
[293.53948975 -353.95022583]
[284.60311890 -341.87039185]
[274.03854370 -331.18533325]
[262.06079102 -322.11260986]
[248.91372681 -314.83694458]
[234.86500549 -309.50640869]
[220.20066833 -306.22955322]
[205.21923828 -305.07308960]
[190.22570801 -306.06057739]
[187.12159729 -291.38528442]
[184.01748657 -276.70999146]
[193.78503418 -263.01931763]
[190.56530762 -246.16856384]
[175.87098694 -236.67666626]
[172.98571777 -221.95677185]
[170.10043335 -207.23687744]
[167.21516418 -192.51698303]
[164.32989502 -177.79710388]
[161.77406311 -163.01644897]
[159.54895020 -148.18240356]
[157.32382202 -133.34835815]
[159.44032288 -126.26723480]
[154.95356750 -118.31067657]
[152.50784302 -103.51140594]
[150.06211853 -88.71213531]
[147.61637878 -73.91286469]
[153.17498779 -60.09435654]
[143.29112244 -47.74040985]
[140.84539795 -32.94113922]
[138.39967346 -18.14186859]
[151.19264221 -25.97383881]
[165.80831909 -22.60009575]
[173.87416077 -9.95327377]
[170.76969910 4.72195387]
[158.27331543 13.01895046]
[143.54348755 10.18481922]
[135.01835632 -2.15599346]
[131.26205444 12.36606598]
[127.50574493 26.88812447]
[123.74944305 41.41018295]
[125.11777496 48.67306900]
[119.82760620 56.11967468]
[115.85550690 70.58419800]
[111.88341522 85.04872131]
[118.95877838 97.69329834]
[115.12186432 111.66557312]
[102.58110809 118.92337799]
[100.57709503 133.78890991]
[100.57709503 148.78890991]
[100.57709503 163.78890991]
[100.57709503 178.78890991]
[100.57709503 193.78890991]
[100.57709503 208.78890991]
[111.13417053 217.15327454]
[114.89144135 229.88487244]
[110.69212341 242.27227783]
[100.28152466 249.86495972]
[100.05819702 264.86331177]
[99.83486938 279.86163330]
[99.61153412 294.85998535]
[99.38820648 309.85830688]
[99.16487885 324.85665894]
[98.94155121 339.85498047]
[111.35353851 352.18228149]
[111.01645660 369.33456421]
[98.62719727 380.70755005]
[98.62719727 395.70755005]
[98.62719727 410.70755005]
[98.62719727 425.70755005]
[99.40852356 440.68719482]
[100.96904755 455.60580444]
[102.52956390 470.52441406]
[111.66058350 483.44473267]
[105.28934479 496.90789795]
[106.84986877 511.82650757]
[108.41039276 526.74511719]
[109.97091675 541.66369629]
[111.53144073 556.58233643]
[125.03265381 564.23065186]
[131.42913818 578.36798096]
[128.26130676 593.55828857]
[116.74726105 603.96051025]
[101.31438446 605.57482910]
[87.89693451 597.78045654]
[81.65419769 583.57458496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[7 197]
[8 196]
[9 195]
[17 194]
[18 193]
[19 192]
[20 191]
[24 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[57 172]
[60 169]
[61 168]
[62 167]
[63 165]
[64 164]
[65 163]
[66 162]
[67 155]
[68 154]
[69 153]
[71 151]
[72 150]
[73 149]
[74 148]
[75 146]
[76 145]
[77 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[89 136]
[90 135]
[91 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
