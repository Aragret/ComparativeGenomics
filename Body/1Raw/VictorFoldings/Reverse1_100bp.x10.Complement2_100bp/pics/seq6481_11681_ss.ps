%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-57.98829651 495.76824951]
[-51.83805466 509.48071289]
[-47.80034256 523.95672607]
[-45.96536636 538.87286377]
[-46.37411880 553.89581299]
[-49.01746368 568.69012451]
[-53.83635712 582.92510986]
[-60.72313690 596.28289795]
[-69.52395630 608.46496582]
[-80.04219055 619.19921875]
[-92.04286957 628.24584961]
[-105.25788116 635.40277100]
[-119.39201355 640.51000977]
[-134.12948608 643.45355225]
[-149.14108276 644.16760254]
[-164.09141541 642.63616943]
[-178.64649963 638.89355469]
[-192.48117065 633.02331543]
[-205.28634644 625.15661621]
[-216.77595520 615.46917725]
[-226.69332886 604.17749023]
[-234.81690979 591.53369141]
[-240.96519470 577.82031250]
[-245.00085449 563.34375000]
[-246.83369446 548.42736816]
[-246.42280579 533.40441895]
[-243.77735901 518.61053467]
[-238.95643616 504.37619019]
[-232.06774902 491.01940918]
[-223.26519775 478.83856201]
[-212.74543762 468.10580444]
[-200.74346924 459.06088257]
[-187.52743530 451.90588379]
[-173.39257812 446.80065918]
[-158.65467834 443.85922241]
[-143.64299011 443.14730835]
[-128.69287109 444.68084717]
[-114.13832855 448.42553711]
[-100.30449677 454.29772949]
[-92.45274353 441.51690674]
[-84.60098267 428.73605347]
[-76.74922943 415.95520020]
[-79.25405121 404.12084961]
[-72.81722260 393.40863037]
[-60.42192841 389.84219360]
[-52.38075638 377.17968750]
[-44.33958435 364.51715088]
[-36.29840851 351.85464478]
[-36.00718307 336.96286011]
[-22.07762527 329.46099854]
[-14.03645325 316.79846191]
[-5.99527979 304.13595581]
[1.27794957 291.01727295]
[7.75744534 277.48892212]
[14.23694134 263.96057129]
[7.97595119 248.35163879]
[15.08115196 232.73654175]
[31.60036659 226.98025513]
[37.87772751 213.35693359]
[44.15509033 199.73362732]
[40.26172256 188.28074646]
[45.38000107 176.87956238]
[57.26366425 171.86544800]
[63.74316025 158.33711243]
[70.22265625 144.80876160]
[76.70215607 131.28041077]
[83.18164825 117.75207520]
[89.66114044 104.22372437]
[96.03974915 90.64752197]
[102.31710815 77.02420044]
[108.59446716 63.40088654]
[114.04982758 49.42808914]
[110.93260956 33.91701126]
[122.20968628 24.18681335]
[126.82369232 9.91407967]
[131.43769836 -4.35865402]
[136.05171204 -18.63138771]
[140.66572571 -32.90412140]
[144.31381226 -47.45374298]
[146.97959900 -62.21495819]
[149.64540100 -76.97617340]
[152.31120300 -91.73739624]
[147.14962769 -106.69295502]
[157.02565002 -117.84255219]
[159.69143677 -132.60377502]
[152.99172974 -143.62541199]
[155.51596069 -155.86518860]
[165.37677002 -162.87168884]
[168.26203918 -177.59156799]
[163.32371521 -192.62232971]
[173.36463928 -203.62364197]
[176.24990845 -218.34353638]
[179.13519287 -233.06343079]
[182.02046204 -247.78332520]
[184.90573120 -262.50320435]
[170.89787292 -267.98223877]
[158.09355164 -275.87460327]
[146.90438843 -285.92657471]
[137.69004822 -297.81503296]
[130.74674988 -311.15783691]
[126.29767609 -325.52606201]
[124.48585510 -340.45779419]
[125.36953735 -355.47308350]
[128.92030334 -370.08923340]
[135.02401733 -383.83639526]
[143.48446655 -396.27267456]
[154.02967834 -406.99826050]
[166.32067871 -415.66836548]
[179.96237183 -422.00433350]
[194.51620483 -425.80242920]
[209.51434326 -426.94061279]
[224.47467041 -425.38226318]
[238.91625977 -421.17749023]
[252.37489319 -414.46145630]
[264.41790771 -405.45004272]
[274.65817261 -394.43295288]
[282.76654053 -381.76431274]
[288.48229980 -367.85137939]
[291.62176514 -353.14138794]
[292.08401489 -338.10723877]
[289.85415649 -323.23217773]
[285.00387573 -308.99438477]
[277.68911743 -295.85153198]
[268.14498901 -284.22616577]
[256.67831421 -274.49194336]
[243.65769958 -266.96176147]
[229.50169373 -261.87774658]
[214.66535950 -259.40328979]
[199.62562561 -259.61795044]
[196.74035645 -244.89805603]
[193.85507202 -230.17816162]
[190.96980286 -215.45826721]
[188.08453369 -200.73837280]
[193.22923279 -186.76049805]
[182.98193359 -174.70629883]
[180.09666443 -159.98640442]
[186.67031860 -143.71514893]
[174.45265198 -129.93797302]
[171.78686523 -115.17675781]
[177.13911438 -101.27701569]
[167.07241821 -89.07159424]
[164.40661621 -74.31037903]
[161.74082947 -59.54916382]
[159.07502747 -44.78794479]
[170.33236694 -54.70117950]
[185.14578247 -57.05974197]
[198.92517090 -51.13280487]
[207.40083313 -38.75689316]
[207.94650269 -23.76682281]
[200.39308167 -10.80742550]
[187.08110046 -3.89431286]
[172.13540649 -5.16958857]
[160.18710327 -14.23809433]
[154.93846130 -28.29011154]
[150.32444763 -14.01737785]
[145.71043396 0.25535536]
[141.09643555 14.52808857]
[136.48242188 28.80082130]
[139.92965698 43.29101944]
[128.32255554 54.04209900]
[141.19189453 46.33623505]
[156.14257812 47.55154800]
[167.59838867 57.23475647]
[171.28657532 71.77426147]
[165.83155823 85.74719238]
[153.26789856 93.94197845]
[138.28155518 93.30218506]
[126.46204376 84.06642914]
[122.21778870 69.67824554]
[115.94042969 83.30156708]
[109.66306305 96.92488098]
[109.41806793 104.98171234]
[103.18949127 110.70322418]
[96.70999146 124.23156738]
[90.23049927 137.75991821]
[83.75099945 151.28825378]
[77.27150726 164.81660461]
[70.79200745 178.34495544]
[72.63285065 196.66687012]
[57.77840424 206.01098633]
[51.50104523 219.63430786]
[45.22368240 233.25761414]
[51.31142426 245.27235413]
[49.39580536 258.40783691]
[40.39788437 267.90097046]
[27.76528740 270.44006348]
[21.28579140 283.96841431]
[14.80629539 297.49676514]
[28.58976555 291.57931519]
[43.24405289 294.78115845]
[53.30347443 305.90808105]
[55.01611328 320.80999756]
[47.74319458 333.92886353]
[34.19734192 340.37167358]
[19.43082047 337.73541260]
[8.95117760 327.00335693]
[6.66724491 312.17712402]
[-1.37392795 324.83966064]
[-9.41510105 337.50216675]
[-10.28148842 353.29965210]
[-23.63588524 359.89581299]
[-31.67705917 372.55831909]
[-39.71823120 385.22085571]
[-47.75940323 397.88339233]
[-48.10882568 416.29421997]
[-63.96838760 423.80697632]
[-71.82014465 436.58779907]
[-79.67189789 449.36865234]
[-87.52365112 462.14950562]
[-76.03265381 471.83529663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 209]
[40 208]
[41 207]
[42 206]
[45 204]
[46 203]
[47 202]
[48 201]
[50 199]
[51 198]
[52 197]
[53 188]
[54 187]
[55 186]
[58 182]
[59 181]
[60 180]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[69 171]
[70 170]
[71 169]
[72 160]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 144]
[80 143]
[81 142]
[82 141]
[84 139]
[85 138]
[88 136]
[89 135]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
