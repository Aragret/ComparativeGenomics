%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[146.53788757 427.94287109]
[152.00245667 413.93612671]
[159.69805908 401.01995850]
[169.41476440 389.54669189]
[180.88746643 379.82934570]
[193.80319214 372.13299561]
[188.34783936 358.16021729]
[182.89248657 344.18740845]
[177.43713379 330.21459961]
[174.92689514 328.96685791]
[172.75967407 326.64959717]
[171.34529114 323.38845825]
[171.04057312 319.45504761]
[172.10028076 315.24423218]
[167.48626709 300.97149658]
[162.87225342 286.69876099]
[151.59518433 276.96856689]
[154.71240234 261.45748901]
[150.09838867 247.18475342]
[145.48437500 232.91203308]
[140.34242249 218.82089233]
[128.37287903 209.95639038]
[130.32780457 194.25642395]
[124.66501617 180.36639404]
[112.69547272 171.50189209]
[114.65039825 155.80194092]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[61.93284607 62.73101807]
[48.74615860 55.24782181]
[40.15135574 42.83212662]
[37.80912781 27.97699165]
[42.13113785 13.63719845]
[52.20885086 2.64151001]
[46.54606247 -11.24851704]
[40.88327789 -25.13854408]
[34.74570465 -31.90374947]
[35.24127960 -39.27777100]
[29.78592300 -53.25056839]
[24.33056641 -67.22336578]
[18.87520981 -81.19616699]
[13.41985226 -95.16896057]
[-4.20857811 -102.10817719]
[-11.04948139 -119.43200684]
[-3.19223118 -135.96618652]
[-9.06119156 -149.77037048]
[-14.93015289 -163.57453918]
[-32.71292877 -167.11441040]
[-44.70580292 -180.50285339]
[-46.24742889 -198.25318909]
[-36.90859222 -213.24177551]
[-43.18595505 -226.86509705]
[-49.46331406 -240.48840332]
[-55.74067688 -254.11172485]
[-62.01803589 -267.73504639]
[-68.29539490 -281.35836792]
[-81.09781647 -290.65396118]
[-79.39688873 -305.45114136]
[-93.64246368 -300.70489502]
[-108.32370758 -297.55462646]
[-123.26240540 -296.03854370]
[-138.27722168 -296.17510986]
[-153.18586731 -297.96258545]
[-167.80740356 -301.37933350]
[-181.96429443 -306.38388062]
[-195.48472595 -312.91543579]
[-208.20454407 -320.89474487]
[-219.96937561 -330.22491455]
[-230.63636780 -340.79272461]
[-240.07604980 -352.46984863]
[-248.17384338 -365.11456299]
[-254.83142090 -378.57339478]
[-259.96798706 -392.68292236]
[-263.52120972 -407.27188110]
[-265.44790649 -422.16320801]
[-265.72473145 -437.17608643]
[-264.34829712 -452.12829590]
[-261.33529663 -466.83831787]
[-256.72235107 -481.12762451]
[-250.56544495 -494.82272339]
[-242.93930054 -507.75735474]
[-233.93650818 -519.77453613]
[-223.66633606 -530.72839355]
[-212.25346375 -540.48590088]
[-199.83642578 -548.92871094]
[-186.56597900 -555.95428467]
[-172.60317993 -561.47729492]
[-158.11755371 -565.43072510]
[-143.28492737 -567.76660156]
[-128.28535461 -568.45654297]
[-113.30092621 -567.49218750]
[-98.51352692 -564.88531494]
[-84.10266876 -560.66741943]
[-70.24328613 -554.88983154]
[-57.10361481 -547.62261963]
[-44.84316635 -538.95404053]
[-33.61076736 -528.98925781]
[-23.54277039 -517.84930420]
[-14.76138783 -505.66937256]
[-7.37322092 -492.59735107]
[-1.46795392 -478.79187012]
[2.88272810 -464.42056274]
[5.62601185 -449.65786743]
[6.72859716 -434.68295288]
[6.17709827 -419.67764282]
[3.97821116 -404.82409668]
[0.15862764 -390.30261230]
[-5.23528576 -376.28942871]
[-12.13805199 -362.95471191]
[-20.46587753 -350.46029663]
[-30.11767197 -338.95785522]
[-40.97626877 -328.58700562]
[-52.90985489 -319.47369385]
[-65.77356720 -311.72848511]
[-53.42014694 -303.40731812]
[-54.67208099 -287.63571167]
[-48.39472198 -274.01239014]
[-42.11735916 -260.38906860]
[-35.84000015 -246.76576233]
[-29.56263733 -233.14245605]
[-23.28527641 -219.51913452]
[-11.15928268 -218.93989563]
[-0.36637309 -213.22622681]
[7.01652145 -203.40818787]
[9.53927708 -191.31210327]
[6.66307020 -179.22096252]
[-1.12597597 -169.44351196]
[4.74298477 -155.63932800]
[10.61194611 -141.83515930]
[21.86618996 -139.96212769]
[30.91238785 -132.81495667]
[35.43144608 -122.07848358]
[34.19408035 -110.37506866]
[27.39265060 -100.62432098]
[32.84800720 -86.65151978]
[38.30336380 -72.67872620]
[43.75872040 -58.70592499]
[49.21407700 -44.73312759]
[54.77330399 -30.80133057]
[60.43609238 -16.91130447]
[66.09887695 -3.02127671]
[80.99184418 -2.20581651]
[94.10781097 5.02473831]
[102.81942749 17.28315163]
[105.35514069 32.16906357]
[101.15920258 46.73892975]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[128.54042053 150.13914490]
[140.91500854 159.99716187]
[138.55503845 174.70361328]
[144.21783447 188.59364319]
[156.59240723 198.45164490]
[154.23245239 213.15809631]
[162.36741638 200.55563354]
[177.27647400 198.90638733]
[187.96922302 209.42613220]
[186.56335449 224.36010742]
[174.09524536 232.69953918]
[159.75711060 228.29801941]
[164.37112427 242.57075500]
[168.98513794 256.84347534]
[180.59223938 267.59457397]
[177.14498901 282.08474731]
[181.75900269 296.35748291]
[186.37301636 310.63021851]
[191.40992737 324.75924683]
[196.86528015 338.73205566]
[202.32063293 352.70486450]
[207.77600098 366.67764282]
[222.48979187 363.58666992]
[237.51167297 362.95983887]
[252.43183899 364.81420898]
[266.84323120 369.09921265]
[280.35272217 375.69793701]
[292.59176636 384.43038940]
[303.22647095 395.05831909]
[311.96670532 407.29180908]
[318.57400513 420.79711914]
[322.86816406 435.20581055]
[324.73202515 450.12478638]
[324.11471558 465.14706421]
[321.03308105 479.86282349]
[315.57119751 493.87060547]
[307.87808228 506.78823853]
[298.16360474 518.26336670]
[286.69277954 527.98297119]
[273.77853394 535.68176270]
[259.77316284 541.14984131]
[245.05877686 544.23797607]
[230.03677368 544.86193848]
[215.11697388 543.00469971]
[200.70639038 538.71691895]
[187.19816589 532.11560059]
[174.96081543 523.38073730]
[164.32815552 512.75079346]
[155.59030151 500.51559448]
[148.98558044 487.00903320]
[144.69419861 472.59951782]
[142.83322144 457.68017578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 180]
[7 179]
[8 178]
[9 177]
[14 176]
[15 175]
[16 174]
[18 172]
[19 171]
[20 170]
[21 164]
[23 162]
[24 161]
[26 159]
[27 158]
[28 157]
[29 156]
[31 154]
[32 153]
[33 152]
[39 146]
[40 145]
[41 144]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[50 134]
[51 133]
[52 132]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[63 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
