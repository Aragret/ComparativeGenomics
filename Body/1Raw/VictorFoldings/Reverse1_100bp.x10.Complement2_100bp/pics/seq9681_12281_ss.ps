%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[86.75695038 330.34680176]
[86.41075134 345.38180542]
[83.45882416 360.12823486]
[77.99088287 374.13796997]
[70.17308044 386.98529053]
[60.24299240 398.27972412]
[48.50238800 407.67810059]
[35.30804825 414.89477539]
[21.06093597 419.71047974]
[6.19400454 421.97885132]
[-8.84095764 421.63092041]
[-23.58705521 418.67733765]
[-37.59616852 413.20779419]
[-50.44258118 405.38854980]
[-61.73590088 395.45718384]
[-71.13293457 383.71551514]
[-78.34812927 370.52035522]
[-83.16220856 356.27267456]
[-85.42888641 341.40548706]
[-85.07927704 326.37057495]
[-82.12400055 311.62481689]
[-76.65287781 297.61633301]
[-68.83216095 284.77078247]
[-58.89951324 273.47860718]
[-47.15677643 264.08288574]
[-33.96080399 256.86920166]
[-19.71259880 252.05673218]
[-4.84515285 249.79174805]
[10.18972969 250.14306641]
[24.93515778 253.10000610]
[30.39051437 239.12721252]
[35.84587097 225.15440369]
[41.30122757 211.18161011]
[46.75658417 197.20881653]
[46.26100922 189.83479309]
[52.39858246 183.06958008]
[51.43695068 180.43644714]
[51.46040344 177.26374817]
[52.67966843 173.92475891]
[55.16659164 170.86212158]
[58.83409882 168.53761292]
[65.31359100 155.00926208]
[71.79309082 141.48092651]
[70.31265259 126.66007233]
[83.25205231 117.55609131]
[89.73155212 104.02774811]
[74.93232727 106.47376251]
[63.69107437 96.54228210]
[64.29442596 81.55442047]
[76.29761505 72.55867767]
[90.85233307 76.18637085]
[97.22939301 89.76165009]
[104.69713593 76.75270081]
[112.16487885 63.74374771]
[119.63262177 50.73479462]
[127.10035706 37.72584152]
[134.56809998 24.71689034]
[142.03584290 11.70793819]
[141.56282043 -6.70015144]
[157.07110596 -14.91356087]
[164.34432983 -28.03225517]
[171.61756897 -41.15094757]
[178.89079285 -54.26964188]
[163.97222900 -52.70882416]
[153.34204102 -63.29178619]
[154.83641052 -78.21716309]
[167.35374451 -86.48252106]
[181.66674805 -81.99494934]
[187.22448730 -68.06416321]
[195.45329285 -80.60556030]
[203.68209839 -93.14696503]
[211.91090393 -105.68836212]
[198.64115906 -98.69451141]
[183.78918457 -96.59241486]
[169.09977722 -99.62902832]
[156.29861450 -107.44761658]
[146.88957214 -119.12965393]
[141.97802734 -133.30274963]
[142.14097595 -148.30186462]
[147.35926819 -162.36491394]
[157.01988220 -173.83979797]
[169.98786926 -181.37843323]
[184.73979187 -184.09519958]
[199.54260254 -181.67094421]
[212.65725708 -174.39045715]
[222.54310608 -163.10905457]
[228.03872681 -149.15203857]
[228.49851990 -134.15908813]
[223.86772156 -119.89016724]
[234.82363892 -130.13555908]
[245.77954102 -140.38095093]
[256.73544312 -150.62634277]
[261.53024292 -165.70349121]
[276.11093140 -168.74526978]
[287.06683350 -178.99066162]
[277.74307251 -190.75161743]
[269.40893555 -203.23339844]
[262.11990356 -216.35296631]
[255.92453003 -230.02301025]
[250.86401367 -244.15255737]
[246.97203064 -258.64755249]
[244.27447510 -273.41156006]
[242.78930664 -288.34634399]
[242.52642822 -303.35244751]
[243.48754883 -318.33007812]
[245.66630554 -333.17950439]
[249.04820251 -347.80194092]
[253.61070251 -362.10006714]
[259.32345581 -375.97872925]
[266.14846802 -389.34555054]
[274.04028320 -402.11160278]
[282.94638062 -414.19192505]
[292.80755615 -425.50610352]
[303.55810547 -435.97885132]
[315.12649536 -445.54046631]
[327.43579102 -454.12731934]
[340.40402222 -461.68231201]
[353.94491577 -468.15509033]
[367.96835327 -473.50262451]
[382.38101196 -477.68930054]
[397.08694458 -480.68728638]
[411.98834229 -482.47662354]
[426.98596191 -483.04541016]
[441.98007202 -482.38983154]
[456.87084961 -480.51425171]
[471.55920410 -477.43118286]
[485.94735718 -473.16113281]
[499.93960571 -467.73251343]
[513.44281006 -461.18142700]
[526.36706543 -453.55151367]
[538.62646484 -444.89352417]
[550.13934326 -435.26510620]
[560.82904053 -424.73028564]
[570.62457275 -413.35922241]
[579.46057129 -401.22756958]
[587.27838135 -388.41604614]
[594.02587891 -375.00991821]
[599.65820312 -361.09841919]
[604.13787842 -346.77413940]
[607.43499756 -332.13235474]
[609.52777100 -317.27056885]
[610.40222168 -302.28762817]
[610.05242920 -287.28329468]
[608.48083496 -272.35736084]
[605.69787598 -257.60922241]
[601.72204590 -243.13697815]
[596.57977295 -229.03697205]
[590.30535889 -215.40303040]
[582.94055176 -202.32588196]
[574.53430176 -189.89254761]
[565.14257812 -178.18577576]
[554.82788086 -167.28347778]
[543.65887451 -157.25819397]
[531.70989990 -148.17666626]
[519.06042480 -140.09931946]
[505.79464722 -133.07991028]
[492.00088501 -127.16513824]
[477.77087402 -122.39437866]
[463.19937134 -118.79938507]
[448.38333130 -116.40406799]
[433.42132568 -115.22438049]
[418.41299438 -115.26816559]
[403.45812988 -116.53513336]
[388.65631104 -119.01685333]
[374.10601807 -122.69681549]
[359.90411377 -127.55052185]
[346.14508057 -133.54566956]
[332.92050171 -140.64236450]
[320.31835938 -148.79339600]
[308.42254639 -157.94448853]
[297.31222534 -168.03475952]
[286.35632324 -157.78936768]
[282.34518433 -143.44503784]
[266.98083496 -139.67042542]
[256.02493286 -129.42503357]
[245.06903076 -119.17964935]
[234.11311340 -108.93425751]
[224.45230103 -97.45955658]
[216.22349548 -84.91815186]
[207.99468994 -72.37675476]
[199.76588440 -59.83535385]
[192.00949097 -46.99641418]
[184.73626709 -33.87771988]
[177.46302795 -20.75902557]
[170.18980408 -7.64033175]
[173.22055054 4.07039309]
[167.26847839 15.05931854]
[155.04479980 19.17568016]
[147.57705688 32.18463135]
[140.10931396 45.19358444]
[132.64157104 58.20253754]
[125.17382812 71.21148682]
[117.70608521 84.22044373]
[110.23834991 97.22939301]
[103.25989532 110.50724030]
[96.78039551 124.03558350]
[97.79737854 139.82406616]
[85.32143402 147.96041870]
[78.84194183 161.48875427]
[72.36244202 175.01710510]
[66.28861237 188.73237610]
[60.72938156 202.66416931]
[55.27402496 216.63696289]
[49.81866837 230.60977173]
[44.36331177 244.58256531]
[38.90795517 258.55535889]
[51.75613785 266.37170410]
[63.05171204 276.30050659]
[72.45140839 288.04003906]
[79.66959381 301.23358154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[36 201]
[41 200]
[42 199]
[43 198]
[45 196]
[46 195]
[52 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[60 185]
[61 184]
[62 183]
[63 182]
[69 181]
[70 180]
[71 179]
[72 178]
[89 177]
[90 176]
[91 175]
[92 174]
[94 172]
[95 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
