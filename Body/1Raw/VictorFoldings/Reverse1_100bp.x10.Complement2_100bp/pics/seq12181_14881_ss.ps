%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[117.26726532 695.44976807]
[110.16407776 708.72113037]
[100.53450775 720.29077148]
[88.77289581 729.68487549]
[75.36087036 736.51879883]
[60.84763718 740.51263428]
[45.82751083 741.50292969]
[30.91555023 739.44903564]
[16.72239685 734.43511963]
[3.82924819 726.66650391]
[-7.23592854 716.46130371]
[-16.02002144 704.23736572]
[-22.16332626 690.49530029]
[-25.41428185 675.79779053]
[-25.63976097 660.74670410]
[-22.83053017 645.95843506]
[-17.10162544 632.03851318]
[-8.68764400 619.55694580]
[2.06686831 609.02484131]
[14.72152042 600.87347412]
[28.75811386 595.43664551]
[43.60185623 592.93701172]
[58.64490891 593.47692871]
[62.18458176 578.90057373]
[65.72425079 564.32415771]
[69.26392365 549.74780273]
[72.80359650 535.17144775]
[76.34326935 520.59503174]
[66.79233551 511.26651001]
[63.06817245 498.33303833]
[66.24631500 485.14331055]
[75.60060883 475.16754150]
[88.76571655 471.08456421]
[92.52201843 456.56250000]
[96.27832031 442.04043579]
[98.94411469 427.27923584]
[100.50463867 412.36062622]
[102.06516266 397.44201660]
[103.62568665 382.52340698]
[105.18620300 367.60479736]
[106.74672699 352.68621826]
[108.30725098 337.76760864]
[109.86777496 322.84899902]
[109.97943878 307.84942627]
[108.64120483 292.90924072]
[107.30297089 277.96905518]
[105.96473694 263.02886963]
[104.40422058 248.11024475]
[102.62174988 233.21653748]
[100.83928680 218.32281494]
[99.05681610 203.42909241]
[96.52589417 200.97415161]
[95.05830383 197.17135620]
[95.27458954 192.53384399]
[97.54266357 187.83247375]
[96.42701721 172.87402344]
[95.31136322 157.91557312]
[92.34128571 154.17555237]
[91.68912506 148.53005981]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[89.28342438 28.20340919]
[88.61363983 13.21837139]
[87.27540588 -1.72181392]
[74.99112701 -11.29961014]
[73.17053223 -26.40391731]
[82.37720490 -38.05607986]
[80.37319183 -52.92160797]
[70.86153412 -65.56435394]
[76.82910156 -79.21123505]
[74.82508850 -94.07676697]
[71.09295654 -99.53412628]
[70.73141479 -105.20565796]
[72.98954010 -109.41397095]
[71.42902374 -124.33258057]
[69.86849976 -139.25119019]
[68.30797577 -154.16978455]
[53.13764572 -160.74649048]
[43.40972519 -174.00028992]
[41.70298386 -190.25770569]
[48.38907242 -205.07162476]
[61.55679703 -214.43771362]
[59.77433395 -229.33142090]
[50.45196533 -242.11437988]
[56.62204742 -255.67091370]
[54.83958054 -270.56463623]
[39.99494171 -273.47869873]
[26.77834129 -280.83917236]
[16.48460197 -291.92495728]
[10.12220383 -305.64993286]
[8.31446743 -320.66949463]
[11.23849773 -335.51217651]
[18.60782814 -348.72384644]
[29.70048523 -359.01016235]
[43.42972565 -365.36334229]
[58.45049667 -367.16101074]
[73.29121399 -364.22705078]
[86.49794006 -356.84887695]
[96.77681732 -345.74932861]
[103.12081909 -332.01580811]
[104.90842438 -316.99386597]
[101.96450043 -302.15509033]
[94.57747650 -288.95330811]
[83.47103882 -278.68188477]
[69.73329926 -272.34707642]
[71.51576233 -257.45336914]
[80.71063995 -245.73571777]
[74.66805267 -231.11389160]
[76.45051575 -216.22016907]
[89.33256531 -211.68476868]
[99.05040741 -201.99497986]
[103.66732025 -189.00138855]
[102.22858429 -175.22067261]
[94.95827484 -163.34806824]
[83.22657776 -155.73031616]
[84.78710175 -140.81170654]
[86.34762573 -125.89310455]
[87.90814972 -110.97449493]
[89.69061279 -96.08078003]
[91.69462585 -81.21524811]
[101.06294250 -69.63578796]
[95.23871613 -54.92562103]
[97.24272919 -40.06009293]
[109.20630646 -31.26188087]
[111.45042419 -16.21466827]
[102.14093781 -3.72582769]
[112.07299042 -14.96656895]
[127.03527832 -16.02954102]
[138.45672607 -6.30582619]
[139.79460144 8.63439083]
[130.28251648 20.23267555]
[115.36941528 21.84500313]
[103.59867859 12.54858589]
[104.26846313 27.53362465]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.26982117 156.79991150]
[111.38546753 171.75837708]
[112.50112152 186.71682739]
[113.95053864 201.64663696]
[115.73300171 216.54034424]
[117.51546478 231.43406677]
[119.29793549 246.32778931]
[122.94839478 251.84010315]
[123.22545624 257.51638794]
[120.90492249 261.69061279]
[122.24315643 276.63079834]
[123.58139038 291.57098389]
[124.91962433 306.51116943]
[131.60043335 293.08111572]
[143.11410522 283.46676636]
[157.52038574 279.28836060]
[172.39155579 281.25000000]
[185.22158813 289.02114868]
[193.84835815 301.29220581]
[196.81814575 315.99526978]
[193.63044739 330.65264893]
[184.82247925 342.79431152]
[171.87852478 350.37414551]
[156.97987366 352.11483765]
[142.63719177 347.72305298]
[131.26750183 337.93887329]
[124.78637695 324.40951538]
[123.22586060 339.32812500]
[121.66533661 354.24673462]
[120.10481262 369.16534424]
[118.54428864 384.08392334]
[116.98376465 399.00253296]
[115.42324066 413.92114258]
[113.86271667 428.83975220]
[123.92407227 417.71459961]
[138.16938782 413.01663208]
[152.87498474 415.97390747]
[164.19685364 425.81338501]
[169.17547607 439.96307373]
[166.50946045 454.72424316]
[156.89569092 466.23837280]
[142.84718323 471.49572754]
[128.03619385 469.12200928]
[116.33427429 459.73770142]
[110.80037689 445.79675293]
[107.04407501 460.31881714]
[103.28777313 474.84085083]
[114.22267914 487.74530029]
[115.30056000 504.45874023]
[106.29431152 518.38171387]
[90.91964722 524.13470459]
[87.37997437 538.71112061]
[83.84030151 553.28747559]
[80.30062866 567.86383057]
[76.76095581 582.44024658]
[73.22128296 597.01660156]
[86.83657837 603.43597412]
[98.88075256 612.46496582]
[108.86059570 623.73388672]
[116.36744690 636.78118896]
[121.09390259 651.07263184]
[122.84641266 666.02301025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[33 195]
[34 194]
[35 193]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 161]
[45 160]
[46 159]
[47 158]
[48 155]
[49 154]
[50 153]
[51 152]
[55 151]
[56 150]
[57 149]
[60 148]
[61 147]
[62 146]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 132]
[73 129]
[74 128]
[76 126]
[77 125]
[80 124]
[81 123]
[82 122]
[83 121]
[88 115]
[89 114]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
