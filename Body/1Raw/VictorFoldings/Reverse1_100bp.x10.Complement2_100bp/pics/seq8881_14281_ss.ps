%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[66.56353760 665.53729248]
[51.76905060 661.92578125]
[39.72653580 652.60388184]
[32.52242279 639.18670654]
[31.40487289 623.99884033]
[36.56750488 609.67169189]
[47.11586380 598.68750000]
[61.22237778 592.94940186]
[61.66898727 577.95605469]
[62.11559296 562.96270752]
[62.56219864 547.96936035]
[63.00880432 532.97601318]
[55.65386963 520.02398682]
[63.79862595 506.46032715]
[61.23375320 502.43161011]
[61.17246246 496.74890137]
[64.48834991 491.02908325]
[65.38117218 476.05566406]
[66.27398682 461.08227539]
[67.16680145 446.10885620]
[52.28118896 442.08773804]
[38.54780197 435.06497192]
[26.56460571 425.34375000]
[16.85391808 413.34472656]
[9.83962631 399.58801270]
[5.82868385 384.67037964]
[4.99768591 369.23968506]
[7.38508987 353.96643066]
[12.88944435 339.51483154]
[21.27369690 326.51385498]
[32.17540359 315.52981567]
[45.12239838 307.04180908]
[59.55323410 301.42068481]
[74.84154510 298.91296387]
[75.51132965 283.92791748]
[76.18111420 268.94290161]
[76.85089874 253.95785522]
[77.52068329 238.97280884]
[78.19046783 223.98777771]
[65.52809906 232.02920532]
[51.29718781 227.28776550]
[45.98823166 213.25869751]
[53.51478958 200.28369141]
[68.32857513 197.92742920]
[79.50876617 207.92536926]
[73.33868408 194.36883545]
[82.66104889 181.58587646]
[84.44351196 166.69215393]
[86.22598267 151.79844666]
[88.00844574 136.90472412]
[89.79090881 122.01100922]
[91.57337952 107.11729431]
[78.34799194 114.19465637]
[64.50914764 108.40791321]
[60.25832748 94.02283478]
[68.72908020 81.64356232]
[83.67707825 80.39563751]
[94.08268738 91.19741821]
[96.96796417 76.47752380]
[99.85323334 61.75763321]
[93.31835938 50.63746262]
[96.02455139 38.43663025]
[105.98857880 31.57772064]
[109.09268951 16.90241814]
[112.19680023 2.22711515]
[115.30091095 -12.44818687]
[118.40502167 -27.12348938]
[121.50913239 -41.79879379]
[124.61324310 -56.47409439]
[127.71735382 -71.14939880]
[130.82145691 -85.82469940]
[132.27088928 -100.75450897]
[132.04756165 -115.75284576]
[131.82421875 -130.75117493]
[131.60089111 -145.74952698]
[131.26591492 -160.74577332]
[130.81932068 -175.73913574]
[128.92602539 -190.61917114]
[125.60376740 -205.24662781]
[112.51397705 -213.69027710]
[109.35311127 -228.57192993]
[117.48351288 -240.99900818]
[114.16125488 -255.62646484]
[110.83898926 -270.25393677]
[107.51673126 -284.88137817]
[92.44760132 -285.01510620]
[77.81563568 -288.62100220]
[64.40993500 -295.50457764]
[52.95343781 -305.29464722]
[44.06398773 -317.46322632]
[38.22097778 -331.35409546]
[35.73951340 -346.21810913]
[36.75341797 -361.25369263]
[41.20801544 -375.64999390]
[48.86307526 -388.63061523]
[59.30576324 -399.49557495]
[71.97292328 -407.65887451]
[86.18142700 -412.68032837]
[101.16503906 -414.28912354]
[116.11569977 -412.39849854]
[130.22714233 -407.11041260]
[142.73835754 -398.71005249]
[152.97462463 -387.65042114]
[160.38392639 -374.52795410]
[164.56668091 -360.05035400]
[165.29730225 -344.99832153]
[162.53642273 -330.18368530]
[156.43290710 -316.40527344]
[147.31591797 -304.40625000]
[135.67712402 -294.83361816]
[122.14419556 -288.20364380]
[125.46645355 -273.57617188]
[128.78871155 -258.94873047]
[132.11097717 -244.32125854]
[144.81176758 -236.62547302]
[148.38938904 -221.83847046]
[140.23123169 -208.56887817]
[143.55348206 -193.94142151]
[148.38012695 -208.14366150]
[158.50610352 -219.21003723]
[172.22499084 -225.27568054]
[187.22492981 -225.31842041]
[200.97816467 -219.33105469]
[211.16702271 -208.32255554]
[216.07452393 -194.14805603]
[214.87365723 -179.19619751]
[207.76678467 -165.98664856]
[195.95153809 -156.74543762]
[181.41900635 -153.02986145]
[166.61816406 -155.46607971]
[154.04321289 -163.64353943]
[145.81266785 -176.18572998]
[146.25927734 -161.19238281]
[149.60052490 -154.60012817]
[146.59924316 -145.97285461]
[146.82257080 -130.97451782]
[147.04589844 -115.97617340]
[147.26922607 -100.97783661]
[154.49729919 -114.12145996]
[165.93830872 -123.82214355]
[180.08699036 -128.80358887]
[195.08183289 -128.41041565]
[208.95002747 -122.69434357]
[219.86694336 -112.40741730]
[226.39628601 -98.90306091]
[227.67903137 -83.95800781]
[223.54637146 -69.53853607]
[214.54205322 -57.54177475]
[201.85075378 -49.54610062]
[187.14221191 -46.60348892]
[172.35160828 -49.10108185]
[159.42489624 -56.71028900]
[150.06280518 -68.42997742]
[145.49676514 -82.72058868]
[142.39265442 -68.04528809]
[139.28854370 -53.36998367]
[136.18443298 -38.69468307]
[133.08032227 -24.01937866]
[129.97621155 -9.34407711]
[126.87210846 5.33122540]
[123.76799774 20.00652695]
[120.66388702 34.68183136]
[126.99454498 51.04916382]
[114.57312775 64.64290619]
[111.68785095 79.36280060]
[108.80258179 94.08268738]
[106.46709442 108.89975739]
[104.68463135 123.79347229]
[102.90216064 138.68719482]
[101.11969757 153.58091736]
[99.33723450 168.47462463]
[97.55476379 183.36834717]
[103.59735107 197.99017334]
[94.40248108 209.70782471]
[93.17550659 224.65756226]
[92.50572205 239.64259338]
[91.83593750 254.62763977]
[91.16615295 269.61267090]
[90.49636841 284.59771729]
[89.82658386 299.58276367]
[103.99713898 303.13970947]
[117.19342041 309.39825439]
[128.90618896 318.11474609]
[138.68386841 328.95071411]
[146.14997864 341.48599243]
[151.01760864 355.23504639]
[153.10043335 369.66583252]
[152.31988525 384.22027588]
[148.70806885 398.33590698]
[142.40647888 411.46759033]
[133.66044617 423.10858154]
[122.80957794 432.81011963]
[110.27458191 440.19866943]
[96.54096222 444.99032593]
[82.14020538 447.00167847]
[81.24739075 461.97506714]
[80.35457611 476.94848633]
[79.46176147 491.92190552]
[78.79197693 506.90692139]
[86.11495972 520.93133545]
[78.00215149 533.42260742]
[77.55554962 548.41595459]
[77.10894012 563.40930176]
[76.66233826 578.40264893]
[76.21572876 593.39599609]
[89.95569611 599.96362305]
[99.83156586 611.55615234]
[104.13227844 626.16516113]
[102.11270905 641.25958252]
[94.12276459 654.22418213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[14 199]
[17 198]
[18 197]
[19 196]
[20 195]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[45 174]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[58 166]
[59 165]
[60 164]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 138]
[73 137]
[74 136]
[75 135]
[76 133]
[77 132]
[78 118]
[79 117]
[82 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
