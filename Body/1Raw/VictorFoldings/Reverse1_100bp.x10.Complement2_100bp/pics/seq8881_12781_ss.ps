%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[52.75015640 563.99578857]
[43.39308548 575.73852539]
[32.82122803 586.40075684]
[21.15854073 595.85742188]
[8.54175568 603.99768066]
[-4.88119888 610.72613525]
[-18.95294762 615.96380615]
[-33.50850296 619.64929199]
[-48.37721252 621.73944092]
[-63.38474655 622.20971680]
[-78.35514832 621.05462646]
[-93.11289978 618.28765869]
[-107.48497772 613.94134521]
[-121.30286407 608.06652832]
[-134.40455627 600.73217773]
[-146.63645935 592.02423096]
[-157.85514832 582.04486084]
[-167.92907715 570.91094971]
[-176.74014282 558.75317383]
[-184.18505859 545.71398926]
[-190.17651367 531.94628906]
[-194.64427185 517.61145020]
[-197.53594971 502.87765503]
[-198.81764221 487.91757202]
[-198.47431946 472.90658569]
[-196.51000977 458.02072144]
[-192.94773865 443.43450928]
[-187.82928467 429.31896973]
[-181.21464539 415.83959961]
[-173.18138123 403.15438843]
[-163.82368469 391.41213989]
[-153.25125122 380.75048828]
[-141.58805847 371.29443359]
[-128.97084045 363.15484619]
[-115.54751587 356.42715454]
[-101.47548676 351.19024658]
[-86.91973114 347.50549316]
[-72.05091095 345.41616821]
[-57.04335022 344.94668579]
[-42.07300949 346.10260010]
[-27.31540680 348.87033081]
[-12.94356823 353.21746826]
[-7.07460785 339.41329956]
[-1.20564687 325.60910034]
[4.66331387 311.80493164]
[2.52256727 297.06497192]
[15.04254913 287.39230347]
[20.91151047 273.58813477]
[17.84734726 256.30871582]
[32.65158844 245.35810852]
[38.31437302 231.46807861]
[35.95440674 216.76162720]
[48.32899094 206.90361023]
[53.99177933 193.01358032]
[59.65456390 179.12356567]
[65.31735229 165.23353577]
[59.32196426 151.64710999]
[64.86696625 137.47998047]
[79.15830994 131.28358459]
[84.82109833 117.39356232]
[90.48388672 103.50353241]
[90.36888123 95.44379425]
[96.33576965 89.44987488]
[102.20472717 75.64569855]
[108.07369232 61.84151840]
[113.73647308 47.95149231]
[119.19183350 33.97869492]
[124.64718628 20.00589561]
[112.01330566 9.17872143]
[103.86228943 -5.29712200]
[101.16398621 -21.66342163]
[104.22716522 -37.93924713]
[112.66433716 -52.16070557]
[125.44062805 -62.61793137]
[141.00074768 -68.06063843]
[157.45822144 -67.84760284]
[162.49514771 -81.97663116]
[167.53205872 -96.10566711]
[172.03968811 -110.41235352]
[176.01177979 -124.87687683]
[179.98388672 -139.34140015]
[176.17716980 -154.69781494]
[187.00851440 -164.92185974]
[190.98062134 -179.38638306]
[194.95271301 -193.85090637]
[198.92480469 -208.31542969]
[202.89691162 -222.77995300]
[188.95289612 -228.35171509]
[175.72041321 -235.44970703]
[163.36587524 -243.98466492]
[152.04466248 -253.84924316]
[141.89912415 -264.91940308]
[133.05688477 -277.05590820]
[125.62911987 -290.10610962]
[119.70925140 -303.90594482]
[115.37173462 -318.28182983]
[112.67110443 -333.05297852]
[111.64132690 -348.03359985]
[112.29535675 -363.03533936]
[114.62497711 -377.86953735]
[118.60087585 -392.34960938]
[124.17304993 -406.29342651]
[131.27143860 -419.52569580]
[139.80676270 -431.87997437]
[149.67169189 -443.20092773]
[160.74214172 -453.34609985]
[172.87890625 -462.18798828]
[185.92935181 -469.61535645]
[199.72935486 -475.53482056]
[214.10536194 -479.87191772]
[228.87658691 -482.57211304]
[243.85725403 -483.60144043]
[258.85897827 -482.94696045]
[273.69308472 -480.61688232]
[288.17303467 -476.64056396]
[302.11672974 -471.06796265]
[315.34878540 -463.96917725]
[327.70278931 -455.43347168]
[339.02343750 -445.56820679]
[349.16830444 -434.49746704]
[358.00982666 -422.36044312]
[365.43679810 -409.30975342]
[371.35583496 -395.50958252]
[375.69250488 -381.13345337]
[378.39224243 -366.36215210]
[379.42111206 -351.38143921]
[378.76620483 -336.37973022]
[376.43569946 -321.54568481]
[372.45892334 -307.06585693]
[366.88592529 -293.12234497]
[359.78674316 -279.89050293]
[351.25067139 -267.53674316]
[341.38507080 -256.21640015]
[330.31399536 -246.07186890]
[318.17672729 -237.23071289]
[305.12582397 -229.80412292]
[291.32546997 -223.88549805]
[276.94918823 -219.54927063]
[262.17782593 -216.84996033]
[247.19708252 -215.82153320]
[232.19540405 -216.47691345]
[217.36143494 -218.80786133]
[213.38932800 -204.34332275]
[209.41723633 -189.87879944]
[205.44514465 -175.41427612]
[201.47303772 -160.94975281]
[205.56387329 -146.62794495]
[194.44841003 -135.36930847]
[190.47630310 -120.90477753]
[186.50421143 -106.44025421]
[200.63314819 -111.47744751]
[213.46046448 -103.70185852]
[215.53034973 -88.84535980]
[205.31697083 -77.85961151]
[190.34922791 -78.84289551]
[181.66108704 -91.06874847]
[176.62417603 -76.93972015]
[171.58726501 -62.81068802]
[182.38961792 -54.76676178]
[190.49935913 -43.99269104]
[195.25239563 -31.35500717]
[196.25506592 -17.87349319]
[193.41676331 -4.63886499]
[186.95799255 7.27545691]
[177.39332581 16.90041351]
[165.49035645 23.45012283]
[152.20816040 26.38604546]
[138.61999512 25.46125221]
[133.16462708 39.43405151]
[127.70927429 53.40684891]
[128.77239990 58.06290054]
[126.92190552 63.43623352]
[121.87786865 67.71047974]
[116.00890350 81.51465607]
[110.13994598 95.31883240]
[104.37390900 109.16632080]
[98.71112823 123.05634308]
[93.04833984 136.94636536]
[98.93374634 151.36856079]
[92.99300385 165.37435913]
[79.20737457 170.89631653]
[73.54459381 184.78634644]
[67.88180542 198.67637634]
[62.21901703 212.56640625]
[64.17394257 228.26635742]
[52.20439911 237.13085938]
[46.54161453 251.02088928]
[50.81547546 263.19039917]
[45.81297302 274.64285278]
[34.71568680 279.45709229]
[28.84672546 293.26126099]
[30.56768608 308.98858643]
[18.46749115 317.67388916]
[12.59852982 331.47805786]
[6.72956944 345.28225708]
[0.86060846 359.08642578]
[13.96270180 366.42007446]
[26.19506645 375.12734985]
[37.41428375 385.10614014]
[47.48881912 396.23947144]
[56.30054474 408.39678955]
[63.74615479 421.43557739]
[69.73834991 435.20297241]
[74.20687866 449.53753662]
[77.09934998 464.27117920]
[78.38184357 479.23123169]
[78.03932953 494.24221802]
[76.07582092 509.12817383]
[72.51434326 523.71459961]
[67.39664459 537.83038330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 196]
[43 195]
[44 194]
[45 193]
[47 191]
[48 190]
[50 187]
[51 186]
[53 184]
[54 183]
[55 182]
[56 181]
[59 178]
[60 177]
[61 176]
[63 175]
[64 174]
[65 173]
[66 170]
[67 169]
[68 168]
[76 158]
[77 157]
[78 156]
[79 150]
[80 149]
[81 148]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
