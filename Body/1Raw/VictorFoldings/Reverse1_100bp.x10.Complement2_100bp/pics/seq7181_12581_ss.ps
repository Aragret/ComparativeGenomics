%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[137.62963867 535.67254639]
[144.97853088 522.55999756]
[154.28829956 510.75851440]
[165.32969666 500.55880737]
[177.83081055 492.21200562]
[171.55345154 478.58871460]
[165.27609253 464.96539307]
[158.99873352 451.34207153]
[152.41870117 437.86233521]
[145.53929138 424.53289795]
[138.65988159 411.20346069]
[131.78047180 397.87405396]
[129.15405273 396.89422607]
[126.75750732 394.81497192]
[125.01152802 391.71868896]
[124.29925537 387.83834839]
[124.91513062 383.54013062]
[118.84130096 369.82485962]
[112.76746368 356.10958862]
[106.69362640 342.39431763]
[101.11091614 337.55126953]
[100.63315582 328.42935181]
[94.76419830 314.62518311]
[88.89523315 300.82098389]
[88.02396393 315.79565430]
[84.28712463 330.32275391]
[77.82443237 343.85913086]
[68.87748718 355.89874268]
[57.78079224 365.99148560]
[44.94919586 373.76000977]
[30.86241722 378.91390991]
[16.04710197 381.26049805]
[1.05713284 380.71203613]
[-13.54708099 377.28903198]
[-27.21954918 371.11944580]
[-39.44911575 362.43395996]
[-49.77857208 351.55728149]
[-57.82174301 338.89602661]
[-63.27792740 324.92355347]
[-65.94314575 310.16223145]
[-65.71775055 295.16390991]
[-62.61016846 280.48934937]
[-56.73658371 266.68713379]
[-48.31658554 254.27330017]
[-37.66495514 243.71191406]
[-25.17991829 235.39784241]
[-11.32823277 229.64190674]
[3.37224436 226.65928650]
[18.37192535 226.56152344]
[33.11003494 229.35223389]
[47.03558350 234.92709351]
[59.62794495 243.07769775]
[70.41635132 253.49932861]
[78.99747467 265.80236816]
[85.04857635 279.52102661]
[85.71836090 264.53598022]
[75.50885010 253.75167847]
[75.97463989 238.54516602]
[87.35544586 227.90962219]
[88.02523041 212.92457581]
[88.69502258 197.93954468]
[89.36480713 182.95449829]
[90.03459167 167.96946716]
[90.70437622 152.98442078]
[81.78975677 137.86831665]
[91.82851410 122.43119812]
[80.24058533 113.39765930]
[76.13734436 99.28920746]
[81.07305908 85.44999695]
[93.17813110 77.12220001]
[93.62474060 62.12884903]
[83.32138824 53.45385742]
[79.94484711 40.61604309]
[84.51112366 28.35915947]
[95.14317322 21.07980347]
[88.02980042 6.94790602]
[96.32768250 -5.42118263]
[96.99746704 -20.40622139]
[97.66725159 -35.39126205]
[97.44392395 -50.38959885]
[96.32827759 -65.34805298]
[92.92759705 -71.01787567]
[92.90427399 -76.70087433]
[95.40887451 -80.76731873]
[87.06307983 -94.20823669]
[94.22436523 -107.26830292]
[93.55458069 -122.25334167]
[92.88479614 -137.23838806]
[92.21501160 -152.22341919]
[91.54521942 -167.20846558]
[90.65240479 -182.18186951]
[89.53675842 -197.14031982]
[88.42111206 -212.09877014]
[73.68183899 -215.45219421]
[60.58666611 -223.00254822]
[50.29999924 -234.07846069]
[43.73652267 -247.69506836]
[41.47985458 -262.64160156]
[43.73065948 -277.58901978]
[50.28879547 -291.20822144]
[60.57111740 -302.28814697]
[73.66333008 -309.84365845]
[88.40128326 -313.20285034]
[103.47447968 -312.06704712]
[117.54263306 -306.53726196]
[129.35481262 -297.10519409]
[137.86067200 -284.60952759]
[142.30389404 -270.16137695]
[142.28938293 -255.04545593]
[137.81842041 -240.60585022]
[129.28857422 -228.12654114]
[117.45831299 -218.71717834]
[103.37956238 -213.21441650]
[104.49520874 -198.25596619]
[105.61086273 -183.29751587]
[108.58094025 -179.55751038]
[109.23310089 -173.91200256]
[106.53025818 -167.87825012]
[107.20005035 -152.89320374]
[107.86983490 -137.90817261]
[108.53961945 -122.92312622]
[109.20940399 -107.93808746]
[117.50728607 -95.56900024]
[110.39391327 -81.43710327]
[111.28672791 -66.46369934]
[112.40238190 -51.50524521]
[121.41029358 -63.49930954]
[135.71345520 -68.01809692]
[149.97715759 -63.37621307]
[158.88136292 -51.30496597]
[159.10505676 -36.30663681]
[150.56477356 -23.97522354]
[136.44584656 -18.91004372]
[122.01428986 -23.00028419]
[112.65229034 -34.72147369]
[111.98250580 -19.73643684]
[111.31272125 -4.75139761]
[118.47399902 8.30866814]
[110.12821198 21.74958801]
[121.99727631 33.66445160]
[121.56813812 50.81468964]
[108.61808777 62.57545471]
[108.17148590 77.56880188]
[119.75941467 86.60234070]
[123.86265564 100.71079254]
[118.92694092 114.55000305]
[106.82186890 122.87779999]
[115.08242035 132.78366089]
[114.40177155 145.26246643]
[105.68941498 153.65420532]
[105.01963043 168.63925171]
[104.34984589 183.62428284]
[103.68006134 198.60932922]
[103.01026917 213.59436035]
[102.34048462 228.57940674]
[112.72705078 240.18789673]
[111.83432770 255.37530518]
[100.70339966 265.20578003]
[100.03361511 280.19082642]
[102.69940948 294.95202637]
[108.56837463 308.75619507]
[114.43733215 322.56039429]
[120.40889740 336.32049561]
[126.48272705 350.03576660]
[132.55656433 363.75100708]
[138.63040161 377.46627808]
[145.10989380 390.99462891]
[151.98930359 404.32406616]
[158.86871338 417.65350342]
[165.74813843 430.98291016]
[170.14160156 433.80154419]
[172.75338745 437.63973999]
[173.49349976 441.64813232]
[172.62203979 445.06469727]
[178.89941406 458.68801880]
[185.17677307 472.31134033]
[191.45413208 485.93466187]
[205.92141724 481.85491943]
[220.84880066 480.08871460]
[235.86869812 480.67953491]
[250.61123657 483.61282349]
[264.71334839 488.81637573]
[277.82775879 496.16201782]
[289.63153076 505.46887207]
[299.83398438 516.50775146]
[308.18383789 529.00677490]
[314.47552490 542.65820312]
[318.55407715 557.12585449]
[320.31903076 572.05334473]
[319.72698975 587.07324219]
[316.79248047 601.81549072]
[311.58776855 615.91717529]
[304.24102783 629.03100586]
[294.93319702 640.83398438]
[283.89349365 651.03552246]
[271.39376831 659.38439941]
[257.74182129 665.67492676]
[243.27386475 669.75225830]
[228.34617615 671.51605225]
[213.32638550 670.92272949]
[198.58433533 667.98699951]
[184.48307800 662.78112793]
[171.36987305 655.43328857]
[159.56764221 646.12451172]
[149.36701965 635.08398438]
[141.01921082 622.58355713]
[134.72978210 608.93109131]
[130.65362549 594.46276855]
[128.89111328 579.53497314]
[129.48565674 564.51519775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 177]
[6 176]
[7 175]
[8 174]
[9 170]
[10 169]
[11 168]
[12 167]
[17 166]
[18 165]
[19 164]
[20 163]
[22 162]
[23 161]
[24 160]
[55 159]
[56 158]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[66 147]
[70 143]
[71 142]
[75 139]
[77 137]
[78 136]
[79 135]
[80 126]
[81 125]
[84 124]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
