%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[75.08368683 681.83782959]
[60.16708755 683.63818359]
[45.14509964 683.34497070]
[30.31012726 680.96380615]
[15.95094109 676.54119873]
[2.34704375 670.16308594]
[-10.23675919 661.95367432]
[-21.55552101 652.07281494]
[-31.38891792 640.71276855]
[-39.54554367 628.09472656]
[-45.86661911 614.46423340]
[-50.22911072 600.08660889]
[-52.54809952 585.24182129]
[-52.77844238 570.21875000]
[-50.91565704 555.30981445]
[-46.99600220 540.80523682]
[-41.09577942 526.98736572]
[-33.32983398 514.12518311]
[-23.84933472 502.46899414]
[-12.83882236 492.24575806]
[-0.51261717 483.65444946]
[12.88934517 476.86227417]
[27.10619354 472.00146484]
[41.86119080 469.16665649]
[56.86712646 468.41299438]
[58.20536041 453.47280884]
[59.54359436 438.53262329]
[60.88182831 423.59243774]
[62.22006607 408.65225220]
[53.98931122 393.15316772]
[64.70735931 378.17971802]
[65.82300568 363.22125244]
[66.93865967 348.26278687]
[58.47805405 332.88796997]
[68.97198486 317.75659180]
[61.17993546 308.50399780]
[61.80121231 296.02209473]
[71.04749298 287.02935791]
[72.16314697 272.07092285]
[73.27879333 257.11245728]
[74.39443970 242.15400696]
[75.51008606 227.19555664]
[76.62574005 212.23710632]
[74.61428833 209.34117126]
[73.90557861 205.32710266]
[75.00985718 200.81779480]
[78.13989258 196.64047241]
[79.92235565 181.74676514]
[81.70482635 166.85304260]
[79.82469177 163.87017822]
[79.29592133 159.82846069]
[80.60045624 155.37297058]
[83.91389465 151.33958435]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[102.48703003 32.78852463]
[104.71215057 17.95448303]
[106.27267456 3.03587770]
[107.16548920 -11.93752766]
[108.05830383 -26.91093445]
[108.95111847 -41.88433838]
[109.62090302 -56.86937714]
[110.06751251 -71.86273193]
[110.51411438 -86.85607910]
[110.96072388 -101.84942627]
[111.40733337 -116.84278107]
[111.85393524 -131.83613586]
[112.30054474 -146.82948303]
[104.07115936 -134.28845215]
[91.49658966 -126.11042786]
[76.69586182 -123.67353821]
[62.16315842 -127.38844299]
[50.34749985 -136.62911987]
[43.24002457 -149.83834839]
[42.03847504 -164.79014587]
[46.94532776 -178.96487427]
[57.13369370 -189.97383118]
[70.88665771 -195.96182251]
[85.88659668 -195.91976929]
[99.60576630 -189.85475159]
[109.73223877 -178.78883362]
[114.55972290 -164.58515930]
[117.88198090 -179.21263123]
[121.20423889 -193.84008789]
[123.64997101 -208.63935852]
[125.21049500 -223.55796814]
[122.87158203 -229.74189758]
[123.85861206 -235.33857727]
[127.04603577 -238.89517212]
[129.05004883 -253.76069641]
[131.05406189 -268.62622070]
[133.05807495 -283.49176025]
[135.06208801 -298.35726929]
[137.06610107 -313.22280884]
[139.07011414 -328.08834839]
[125.34386444 -334.41931152]
[114.09462738 -344.51614380]
[106.32268524 -357.48104858]
[102.71911621 -372.16116333]
[103.60434723 -387.25115967]
[108.89965820 -401.40921021]
[118.13419342 -413.37646484]
[130.48683167 -422.08874512]
[144.85917664 -426.77136230]
[159.97326660 -427.00796509]
[174.48513794 -422.77749634]
[187.10443115 -414.45614624]
[196.70903015 -402.78381348]
[202.44491577 -388.79843140]
[203.80203247 -373.74356079]
[200.65974426 -358.95782471]
[193.29742432 -345.75604248]
[182.36973572 -335.31204224]
[168.84837341 -328.55450439]
[153.93563843 -326.08432007]
[151.93162537 -311.21881104]
[149.92761230 -296.35327148]
[147.92359924 -281.48773193]
[145.91958618 -266.62222290]
[143.91557312 -251.75668335]
[141.91156006 -236.89115906]
[140.12910461 -221.99743652]
[138.56857300 -207.07884216]
[149.56466675 -217.28108215]
[164.44322205 -219.18597412]
[177.65490723 -212.08305359]
[184.27207947 -198.62150574]
[181.82670593 -183.82218933]
[171.23083496 -173.20484924]
[156.43649292 -170.72950745]
[142.96157837 -177.31941223]
[135.83169556 -190.51782227]
[132.50944519 -175.89036560]
[129.18717957 -161.26290894]
[127.29389191 -146.38287354]
[126.84728241 -131.38952637]
[126.40068054 -116.39617157]
[125.95407104 -101.40282440]
[125.50746918 -86.40946960]
[125.06085968 -71.41612244]
[124.61425781 -56.42277145]
[127.17913055 -52.39406586]
[127.24041748 -46.71134949]
[123.92453003 -40.99152374]
[123.03170776 -26.01811790]
[122.13889313 -11.04471207]
[121.24607849 3.92869353]
[133.15483093 -5.19169331]
[148.04219055 -3.35679698]
[157.37997437 8.38226986]
[155.81909180 23.30083656]
[144.25369263 32.85287094]
[129.30894470 31.56653404]
[119.54619598 20.17959976]
[117.32107544 35.01364517]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[98.71316528 153.78530884]
[96.59854126 168.63551331]
[94.81607819 183.52922058]
[93.03360748 198.42294312]
[91.58419037 213.35275269]
[90.46854401 228.31120300]
[89.35289764 243.26965332]
[88.23724365 258.22811890]
[87.12159729 273.18655396]
[86.00595093 288.14501953]
[94.38423157 304.54275513]
[83.94538879 318.64941406]
[91.90734100 328.79681396]
[90.85546112 341.24981689]
[81.89710999 349.37844849]
[80.78146362 364.33691406]
[79.66580963 379.29534912]
[87.47580719 389.56018066]
[86.23862457 401.99615479]
[77.16024780 409.99050903]
[75.82201385 424.93069458]
[74.48377991 439.87088013]
[73.14554596 454.81106567]
[71.80731201 469.75125122]
[86.44042969 473.15975952]
[100.45674896 478.57168579]
[113.58341980 485.88171387]
[125.56493378 494.94757080]
[136.16807556 505.59271240]
[145.18644714 517.60998535]
[152.44448853 530.76550293]
[157.80094910 544.80310059]
[161.15153503 559.44958496]
[162.43104553 574.41986084]
[161.61456299 589.42254639]
[158.71798706 604.16552734]
[153.79769897 618.36187744]
[146.94947815 631.73529053]
[138.30662537 644.02539062]
[128.03736877 654.99304199]
[116.34159851 664.42462158]
[103.44699097 672.13665771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[31 185]
[32 184]
[33 183]
[35 180]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[47 172]
[48 171]
[49 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 164]
[58 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 152]
[64 151]
[65 150]
[66 149]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[87 139]
[88 138]
[89 137]
[90 128]
[91 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
