%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[50.49080276 491.25616455]
[40.99522018 479.41561890]
[36.42187119 464.94326782]
[37.38927460 449.79638672]
[43.76659012 436.02340698]
[54.69133759 425.48709106]
[68.68604279 419.61233521]
[68.23943329 404.61898804]
[67.68122864 389.62936401]
[67.01143646 374.64434814]
[66.34165192 359.65930176]
[58.44533157 372.41265869]
[45.57385254 380.11492920]
[30.60274315 381.04541016]
[16.87658119 374.99624634]
[7.46182966 363.31881714]
[4.46176767 348.62188721]
[8.54661751 334.18878174]
[18.80381203 323.24392700]
[32.94186783 318.23242188]
[47.80230713 320.27380371]
[60.06527328 328.91207886]
[66.99118805 342.21743774]
[68.77365112 327.32373047]
[70.55612183 312.42999268]
[72.33858490 297.53628540]
[74.12104797 282.64257812]
[75.90351868 267.74884033]
[77.57505798 252.84226990]
[79.13558197 237.92367554]
[67.99674225 225.32347107]
[69.44592285 208.22918701]
[83.07302094 197.26007080]
[84.41125488 182.31988525]
[85.74948883 167.37969971]
[87.08772278 152.43951416]
[84.55350494 145.49693298]
[88.55872345 137.28741455]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.46742249 77.58021545]
[95.80565643 62.64002609]
[87.53636169 75.15476990]
[75.69189453 84.35848999]
[61.52221298 89.27989960]
[46.52269363 89.39962006]
[32.27626038 84.70503235]
[20.28637886 75.69155884]
[11.81836987 63.31040955]
[7.76588011 48.86820221]
[8.55657959 33.88905716]
[14.10702515 19.95375633]
[23.83146286 8.53292942]
[36.70365143 0.83184046]
[51.36515808 -2.33679557]
[66.26871490 -0.63858491]
[79.84152222 5.74725628]
[90.65119934 16.14681435]
[97.55698395 29.46260071]
[99.83008575 44.28955841]
[104.86700439 30.16052818]
[109.90391541 16.03149986]
[114.94083405 1.90247011]
[112.28681946 -13.69454193]
[123.84860229 -23.08466530]
[128.88551331 -37.21369553]
[133.92243958 -51.34272385]
[138.95935059 -65.47175598]
[143.99626160 -79.60078430]
[149.03318787 -93.72981262]
[154.07009888 -107.85884094]
[154.00407410 -116.99303436]
[159.28862000 -122.15978241]
[146.08804321 -115.03625488]
[131.20652771 -116.91793823]
[120.19452667 -127.10301971]
[117.15924072 -141.79270935]
[123.23274994 -155.50811768]
[136.14978027 -163.13374329]
[151.09262085 -161.82540894]
[162.48794556 -152.07109070]
[166.08549500 -137.50775146]
[172.96490479 -150.83717346]
[179.84431458 -164.16661072]
[186.72372437 -177.49603271]
[193.60314941 -190.82546997]
[183.71002197 -203.74288940]
[180.45217896 -219.62464905]
[184.43211365 -235.28097534]
[194.80386353 -247.58993530]
[209.45216370 -254.11994934]
[225.42372131 -253.61004639]
[232.10391235 -267.04040527]
[238.78410339 -280.47079468]
[245.46430969 -293.90118408]
[251.12709045 -307.79119873]
[255.74110413 -322.06393433]
[260.35510254 -336.33666992]
[264.96911621 -350.60940552]
[251.78479004 -357.85992432]
[240.21105957 -367.47476196]
[230.66630554 -379.10635376]
[223.49559021 -392.33425903]
[218.95808411 -406.68026733]
[217.21786499 -421.62576294]
[218.33779907 -436.63049316]
[222.27743530 -451.15206909]
[228.89433289 -464.66549683]
[237.94931030 -476.68234253]
[249.11502075 -486.76812744]
[261.98785400 -494.55828857]
[276.10244751 -499.77124023]
[290.94857788 -502.21850586]
[305.98953247 -501.81164551]
[320.68164062 -498.56533813]
[334.49377441 -492.59695435]
[346.92663574 -484.12225342]
[357.53076172 -473.44754028]
[365.92282104 -460.95877075]
[371.79949951 -447.10736084]
[374.94830322 -432.39407349]
[375.25540161 -417.35070801]
[372.70974731 -402.52114868]
[367.40332031 -388.44143677]
[359.52795410 -375.62054443]
[349.36831665 -364.52197266]
[337.29171753 -355.54687500]
[323.73468018 -349.01974487]
[309.18731689 -345.17651367]
[294.17547607 -344.15609741]
[279.24185181 -345.99539185]
[274.62783813 -331.72265625]
[270.01382446 -317.44992065]
[265.39981079 -303.17718506]
[277.54562378 -311.97943115]
[292.45480347 -313.62774658]
[306.23007202 -307.69131470]
[315.27069092 -295.72186279]
[317.21337891 -280.84820557]
[311.55038452 -266.95825195]
[299.76199341 -257.68283081]
[284.92962646 -255.44650269]
[270.93045044 -260.83383179]
[261.42382812 -272.43661499]
[258.89468384 -287.22097778]
[252.21449280 -273.79058838]
[245.53428650 -260.36022949]
[238.85409546 -246.92985535]
[247.89341736 -236.40563965]
[252.25254822 -223.18936157]
[251.24200439 -209.26606750]
[244.98141479 -196.74026489]
[234.38647461 -187.51786804]
[221.03512573 -183.01614380]
[206.93257141 -183.94604492]
[200.05316162 -170.61662292]
[193.17375183 -157.28718567]
[186.29434204 -143.95776367]
[179.41491699 -130.62834167]
[173.34109497 -116.91307068]
[168.19912720 -102.82192993]
[163.16221619 -88.69289398]
[158.12528992 -74.56386566]
[153.08837891 -60.43483734]
[148.05146790 -46.30580902]
[143.01454163 -32.17678070]
[137.97763062 -18.04775047]
[140.99192810 -3.46134090]
[129.06987000 6.93938637]
[124.03295135 21.06841660]
[118.99603271 35.19744492]
[113.95911407 49.32647324]
[110.74584198 63.97826385]
[109.40760803 78.91844940]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.47732544 138.84794617]
[102.02790833 153.77774048]
[100.68967438 168.71792603]
[99.35144043 183.65811157]
[98.01320648 198.59829712]
[107.78195190 207.87118530]
[110.38838196 220.88720703]
[105.10066223 232.85057068]
[94.05418396 239.48419189]
[92.49365997 254.40280151]
[94.71330261 263.26342773]
[90.79723358 269.53131104]
[89.01477051 284.42501831]
[87.23229980 299.31875610]
[85.44983673 314.21246338]
[83.66737366 329.10617065]
[81.88490295 343.99990845]
[81.32669067 358.98950195]
[81.99647522 373.97454834]
[82.66626740 388.95959473]
[86.17574310 397.39294434]
[83.23278809 404.17236328]
[83.67938995 419.16574097]
[97.99895477 424.19708252]
[109.53147125 434.06448364]
[116.71726227 447.43344116]
[118.58450317 462.49591064]
[114.88067627 477.21481323]
[106.10668945 489.59951782]
[93.44914246 497.97515869]
[78.61988068 501.20895386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 199]
[10 198]
[11 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[29 189]
[30 188]
[33 184]
[34 183]
[35 182]
[36 181]
[38 180]
[39 179]
[40 178]
[41 176]
[42 175]
[43 174]
[61 173]
[62 172]
[63 171]
[64 170]
[66 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[74 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[93 149]
[94 148]
[95 147]
[96 146]
[97 135]
[98 134]
[99 133]
[100 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
