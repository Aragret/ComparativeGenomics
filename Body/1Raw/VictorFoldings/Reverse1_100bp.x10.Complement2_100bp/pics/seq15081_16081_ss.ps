%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACACCGGGGAGUCUUACUAUAAACCGGAGUGCCCUCCUGUAUCGGAUACUUCCGACAACGAUAUCAACGUUCGUCCUCCUAUUACGGCUACAAAGUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[50.93032074 456.09353638]
[45.97986221 441.38732910]
[50.65106583 426.59005737]
[63.14775848 417.39157104]
[62.92443085 402.39321899]
[62.70110321 387.39489746]
[62.47777557 372.39654541]
[62.25444794 357.39822388]
[54.82832718 370.43096924]
[43.02735138 379.69039917]
[28.60212517 383.80291748]
[13.69253922 382.15844727]
[0.51034576 375.00094604]
[-8.98895550 363.39218140]
[-13.39620018 349.05426025]
[-12.05759907 334.11410522]
[-5.17172670 320.78802490]
[6.23993921 311.05282593]
[20.48454666 306.35269165]
[35.44898987 307.38488770]
[48.91338730 313.99624634]
[58.88037491 325.20602417]
[63.87112808 339.34942627]
[66.75640106 324.62954712]
[69.64167023 309.90963745]
[64.49696350 295.93176270]
[74.74426270 283.87756348]
[77.62953949 269.15768433]
[80.51480865 254.43778992]
[82.40810394 239.55775452]
[83.30091858 224.58435059]
[80.56111908 217.72029114]
[84.32012939 209.39517212]
[85.43578339 194.43672180]
[78.66651917 181.16921997]
[87.40879822 167.98275757]
[88.52445221 153.02429199]
[81.75518799 139.75680542]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[92.06160736 63.52339554]
[95.78932190 57.14170456]
[97.12755585 42.20151901]
[98.46578979 27.26133537]
[91.99053192 12.82590485]
[100.83245087 0.83967304]
[99.82819366 -14.12667084]
[96.50592804 -28.75413132]
[93.18367004 -43.38159180]
[89.86141205 -58.00905228]
[79.25975800 -69.75279236]
[83.98600769 -83.87766266]
[80.66374969 -98.50511932]
[77.34149170 -113.13258362]
[74.01923370 -127.76004028]
[70.69696808 -142.38749695]
[66.34529877 -128.03260803]
[57.15941620 -116.17430115]
[44.34786987 -108.37274170]
[29.59624481 -105.65436554]
[14.84537125 -108.37681580]
[2.03598022 -116.18190765]
[-7.14663315 -128.04275513]
[-11.49433804 -142.39884949]
[-10.43511868 -157.36140442]
[-4.10833406 -170.96183777]
[6.65361881 -181.41078186]
[20.43482018 -187.33349609]
[35.42211533 -187.95072937]
[49.64366531 -183.18130493]
[61.22838593 -173.65270996]
[68.65289307 -160.61633301]
[68.65289307 -175.61633301]
[68.65289307 -190.61633301]
[68.65289307 -205.61633301]
[56.36222076 -197.01753235]
[41.93378830 -201.11878967]
[36.00369263 -214.89680481]
[42.94338226 -228.19496155]
[57.63717651 -231.21032715]
[69.25264740 -221.72158813]
[70.36829376 -236.68005371]
[71.48394775 -251.63850403]
[72.59959412 -266.59695435]
[73.71524048 -281.55541992]
[65.33695984 -297.95315552]
[75.77580261 -312.05978394]
[76.66861725 -327.03320312]
[77.56143188 -342.00659180]
[63.00091171 -345.81152344]
[49.46260452 -352.38424683]
[37.46688843 -361.47207642]
[27.47484589 -372.72576904]
[19.87054443 -385.71270752]
[14.94627380 -399.93374634]
[12.89130878 -414.84225464]
[13.78463650 -429.86517334]
[17.59192085 -444.42507935]
[24.16682053 -457.96231079]
[33.25661087 -469.95657349]
[44.51190948 -479.94677734]
[57.50008774 -487.54898071]
[71.72191620 -492.47094727]
[86.63075256 -494.52349854]
[101.65352631 -493.62774658]
[116.21281433 -489.81811523]
[129.74899292 -483.24102783]
[141.74176025 -474.14929199]
[151.73016357 -462.89236450]
[159.33026123 -449.90295410]
[164.24992371 -435.68032837]
[166.30006409 -420.77117920]
[165.40188599 -405.74853516]
[161.58987427 -391.18988037]
[155.01060486 -377.65475464]
[145.91693115 -365.66345215]
[134.65840149 -355.67687988]
[121.66775513 -348.07888794]
[107.44433594 -343.16152954]
[92.53483582 -341.11380005]
[91.64202118 -326.14038086]
[90.74920654 -311.16699219]
[98.54125214 -301.91436768]
[97.91997528 -289.43249512]
[88.67369843 -280.43975830]
[87.55804443 -265.48129272]
[86.44239807 -250.52285767]
[85.32675171 -235.56439209]
[84.21109772 -220.60594177]
[83.65289307 -205.61633301]
[83.65289307 -190.61633301]
[83.65289307 -175.61633301]
[83.65289307 -160.61633301]
[85.32443237 -145.70976257]
[88.64669037 -131.08230591]
[91.96894836 -116.45484161]
[95.29120636 -101.82737732]
[98.61347198 -87.19992065]
[108.97749329 -76.50243378]
[104.48886871 -61.33131027]
[107.81113434 -46.70384979]
[111.13339233 -32.07638931]
[114.45565033 -17.44893074]
[118.09178925 -32.00154114]
[125.47128296 -45.06075668]
[136.06140137 -55.68381882]
[149.09762573 -63.10383987]
[163.63887024 -66.78516388]
[178.63539124 -66.46202850]
[193.00457764 -62.15776443]
[205.70909119 -54.18310165]
[215.83178711 -43.11373138]
[222.64192200 -29.74877167]
[225.64782715 -15.05304146]
[224.63253784 -0.08744109]
[219.66932678 14.06764889]
[211.11651611 26.39036179]
[199.59150696 35.99111176]
[185.92633057 42.17680740]
[171.10746765 44.50090027]
[156.20471191 42.79561615]
[142.29391479 37.18405533]
[130.37930298 28.07132530]
[121.32099152 16.11528015]
[115.77263641 2.17790723]
[122.34361267 15.54471493]
[113.40597534 28.59956932]
[112.06774139 43.53975296]
[110.72950745 58.47993851]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[112.14538574 142.02339172]
[103.48290253 154.13993835]
[102.36725616 169.09840393]
[109.05671692 183.43582153]
[100.39423370 195.55236816]
[99.27858734 210.51081848]
[98.27432251 225.47717285]
[97.38150787 240.45057678]
[107.38108826 229.26985168]
[121.80927277 225.16770935]
[136.19532776 229.41523743]
[146.08157349 240.69628906]
[148.40466309 255.51530457]
[142.44474792 269.28045654]
[130.04858398 277.72647095]
[115.05724335 278.23623657]
[102.11597443 270.65182495]
[95.23470306 257.32305908]
[92.34942627 272.04296875]
[89.46415710 286.76284790]
[94.40248871 301.79360962]
[84.36156464 312.79492188]
[81.47628784 327.51480103]
[78.59101868 342.23471069]
[77.25278473 357.17489624]
[77.47611237 372.17321777]
[77.69944000 387.17156982]
[77.92276764 402.16989136]
[78.14609528 417.16824341]
[90.91111755 425.99057007]
[96.02082062 440.64221191]
[91.51041412 455.48928833]
[79.11424255 464.82281494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[23 201]
[24 200]
[25 199]
[27 197]
[28 196]
[29 195]
[30 185]
[31 184]
[33 183]
[34 182]
[36 180]
[37 179]
[39 177]
[40 176]
[42 174]
[43 173]
[45 172]
[46 171]
[47 170]
[49 168]
[50 146]
[51 145]
[52 144]
[53 143]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[75 136]
[76 135]
[77 134]
[78 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[90 125]
[91 124]
[92 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
