%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.73992157 585.21929932]
[95.77158356 600.11480713]
[92.86728668 615.03576660]
[84.46990967 627.70666504]
[71.86000061 636.19543457]
[56.96047592 639.20745850]
[42.04340363 636.28356934]
[29.38352585 627.86950684]
[20.91138649 615.24847412]
[17.91892242 600.34497070]
[20.86246681 585.43176270]
[29.29314613 572.78295898]
[41.92534637 564.32745361]
[56.83274460 561.35455322]
[59.71801758 546.63470459]
[62.60329056 531.91479492]
[65.48856354 517.19488525]
[68.37383270 502.47500610]
[71.25910950 487.75512695]
[73.37373352 472.90493774]
[74.71196747 457.96475220]
[76.05020142 443.02456665]
[69.47922516 429.65774536]
[78.41686249 416.60290527]
[79.75509644 401.66271973]
[80.31330872 386.67309570]
[80.08998108 371.67477417]
[79.86665344 356.67642212]
[79.64332581 341.67810059]
[76.90112305 337.76791382]
[76.58614349 332.09362793]
[79.64332581 326.23144531]
[76.59976196 319.49655151]
[79.98329163 311.01190186]
[80.42989349 296.01855469]
[80.87650299 281.02520752]
[68.99923706 272.07708740]
[64.61661530 257.68069458]
[69.60987091 243.29594421]
[82.26210022 234.50804138]
[82.70870972 219.51469421]
[83.15531921 204.52134705]
[83.60192108 189.52798462]
[84.04853058 174.53463745]
[84.49513245 159.54129028]
[74.28829956 170.53312683]
[59.59263611 173.53936768]
[45.88926315 167.43875122]
[38.28919601 154.50666809]
[39.62707520 139.56645203]
[49.40390396 128.19042969]
[63.97316360 124.62160492]
[77.90088654 130.19102478]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.84407043 54.94497299]
[98.17145538 50.93793869]
[97.88931274 47.00284958]
[98.80429077 43.56799316]
[100.60379028 40.95487213]
[102.90115356 39.34854889]
[98.41252899 24.17742920]
[108.77655792 13.47994041]
[112.09881592 -1.14751983]
[115.42107391 -15.77497959]
[118.74333191 -30.40244102]
[107.99999237 -39.36030960]
[102.19202423 -52.01272583]
[102.40106201 -65.86676788]
[108.52930450 -78.21965790]
[119.32973480 -86.68601990]
[132.65945435 -89.65849304]
[136.19912720 -104.23487091]
[139.73880005 -118.81124115]
[138.72285461 -127.88899994]
[143.44120789 -133.57749939]
[147.19750977 -148.09954834]
[150.95381165 -162.62161255]
[154.71011353 -177.14367676]
[157.81422424 -191.81896973]
[160.25994873 -206.61824036]
[162.70567322 -221.41751099]
[164.15509033 -236.34732056]
[164.60169983 -251.34066772]
[165.04830933 -266.33401489]
[165.49490356 -281.32736206]
[157.23435974 -291.23324585]
[157.91500854 -303.71203613]
[166.62736511 -312.10379028]
[167.29714966 -327.08880615]
[167.96693420 -342.07385254]
[168.63671875 -357.05889893]
[169.30650330 -372.04394531]
[169.97628784 -387.02896118]
[156.07060242 -393.11145020]
[145.30393982 -403.80926514]
[139.13238525 -417.67562866]
[138.39060974 -432.83526611]
[143.17892456 -447.23791504]
[152.84974670 -458.93576050]
[166.09516907 -466.34677124]
[181.12388611 -468.46862793]
[195.90335083 -465.01443481]
[208.43479919 -456.45129395]
[217.02342224 -443.93728638]
[220.50769043 -429.16488647]
[218.41639709 -414.13186646]
[211.03236389 -400.87139893]
[199.35421753 -391.17678833]
[184.96133423 -386.35919189]
[184.29154968 -371.37414551]
[183.62176514 -356.38909912]
[182.95198059 -341.40408325]
[182.28219604 -326.41903687]
[181.61239624 -311.43399048]
[190.52702332 -296.31790161]
[180.48826599 -280.88076782]
[180.04165649 -265.88742065]
[179.59504700 -250.89407349]
[179.14843750 -235.90071106]
[188.81069946 -247.37420654]
[203.11035156 -251.90409851]
[217.61648560 -248.08679199]
[227.83422852 -237.10510254]
[230.59750366 -222.36181641]
[225.05007935 -208.42532349]
[212.91087341 -199.61396790]
[197.94136047 -198.65808105]
[184.78001404 -205.85382080]
[177.50494385 -218.97178650]
[175.05921936 -204.17251587]
[172.61349487 -189.37324524]
[185.40646362 -197.20521545]
[200.02214050 -193.83146667]
[208.08798218 -181.18464661]
[204.98352051 -166.50942993]
[192.48713684 -158.21243286]
[177.75730896 -161.04655457]
[169.23216248 -173.38737488]
[165.47586060 -158.86531067]
[161.71957397 -144.34324646]
[157.96327209 -129.82119751]
[154.31518555 -115.27156830]
[150.77551270 -100.69519806]
[147.23583984 -86.11882019]
[159.19728088 -75.25436401]
[164.07563782 -59.75090408]
[160.44909668 -43.81148148]
[149.21514893 -31.80757141]
[133.37078857 -27.08018112]
[130.04853821 -12.45272064]
[126.72627258 2.17473984]
[123.40401459 16.80220032]
[128.13026428 30.92706490]
[117.52861023 42.67081070]
[114.64334106 57.39070129]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[99.48847961 159.98789978]
[99.04187775 174.98124695]
[98.59526825 189.97459412]
[98.14866638 204.96794128]
[97.70205688 219.96130371]
[97.25545502 234.95465088]
[109.36219025 244.48004150]
[113.49039459 259.13647461]
[108.25865936 273.24652100]
[95.86985016 281.47180176]
[95.42324066 296.46514893]
[94.97663879 311.45849609]
[94.64166260 326.45477295]
[94.64166260 341.45477295]
[94.86499023 356.45309448]
[95.08831787 371.45144653]
[95.31164551 386.44976807]
[105.69599152 375.62548828]
[120.59450531 373.88354492]
[133.19578552 382.02035522]
[137.73869324 396.31588745]
[132.14627075 410.23440552]
[118.97531128 417.41253662]
[104.24738312 414.56854248]
[94.69528198 403.00094604]
[93.35704803 417.94113159]
[99.83230591 432.37655640]
[90.99038696 444.36279297]
[89.65215302 459.30297852]
[88.31391907 474.24316406]
[99.76802063 464.55795288]
[114.76690674 464.37542725]
[126.45329285 473.77905273]
[129.48431396 488.46963501]
[122.47424316 501.73080444]
[108.62796783 507.49975586]
[94.27583313 503.13897705]
[85.97899628 490.64041138]
[83.09372711 505.36029053]
[80.20845795 520.08020020]
[77.32318115 534.80004883]
[74.43791199 549.51995850]
[71.55263519 564.23986816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 197]
[21 196]
[22 195]
[24 193]
[25 192]
[26 184]
[27 183]
[28 182]
[29 181]
[32 180]
[34 179]
[35 178]
[36 177]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[54 167]
[55 166]
[56 165]
[59 163]
[60 162]
[61 161]
[66 160]
[68 158]
[69 157]
[70 156]
[71 155]
[77 150]
[78 149]
[79 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 137]
[86 136]
[87 135]
[88 125]
[89 124]
[90 123]
[91 122]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
