%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[92.36234283 176.17645264]
[93.11770630 191.16450500]
[92.75088501 206.16709900]
[91.26393890 221.10032654]
[88.66518402 235.88066101]
[84.96915436 250.42547607]
[80.19651794 264.65341187]
[74.37397003 278.48489380]
[67.53406525 291.84259033]
[59.71505737 304.65179443]
[50.96067810 316.84085083]
[41.31988144 328.34158325]
[30.84658813 339.08972168]
[19.59936714 349.02511597]
[7.64111805 358.09222412]
[-4.96128321 366.24035645]
[-18.13735771 373.42388916]
[-31.81341743 379.60269165]
[-45.91298294 384.74218750]
[-60.35719681 388.81365967]
[-75.06528473 391.79431152]
[-89.95499420 393.66751099]
[-104.94305420 394.42272949]
[-119.94564056 394.05578613]
[-134.87884521 392.56869507]
[-149.65917969 389.96981812]
[-164.20394897 386.27365112]
[-178.43185425 381.50088501]
[-192.26329041 375.67822266]
[-205.62091064 368.83819580]
[-218.43003845 361.01907349]
[-230.61901855 352.26458740]
[-242.11968994 342.62368774]
[-252.86772156 332.15029907]
[-262.80303955 320.90298462]
[-271.87002563 308.94467163]
[-280.01803589 296.34219360]
[-287.20144653 283.16604614]
[-293.38012695 269.48992920]
[-298.51950073 255.39033508]
[-302.59085083 240.94607544]
[-305.57138062 226.23796082]
[-307.44442749 211.34823608]
[-308.19952393 196.36016846]
[-307.83242798 181.35758972]
[-306.34524536 166.42439270]
[-303.74621582 151.64408875]
[-300.04992676 137.09934998]
[-295.27703857 122.87149048]
[-289.45425415 109.04010773]
[-282.61410522 95.68253326]
[-274.79486084 82.87348175]
[-266.04028320 70.68458557]
[-256.39929199 59.18400192]
[-245.92579651 48.43605423]
[-234.67840576 38.50085068]
[-222.72000122 29.43395233]
[-210.11744690 21.28606415]
[-196.94125366 14.10275364]
[-183.26507568 7.92419386]
[-169.16542053 2.78493810]
[-154.72113037 -1.28627276]
[-140.01300049 -4.26667023]
[-125.12325287 -6.13958740]
[-110.13518524 -6.89454889]
[-95.13260651 -6.52733326]
[-80.19941711 -5.03999424]
[-65.41913605 -2.44084930]
[-50.87442398 1.25556540]
[-36.64661407 6.02857828]
[-22.81527901 11.85149574]
[-9.45776939 18.69175339]
[3.35121441 26.51109886]
[15.54003716 35.26580048]
[27.04053307 44.90689850]
[37.78838730 55.38047791]
[47.72349167 66.62796021]
[56.79028702 78.58644867]
[64.93806458 91.18907166]
[72.12126160 104.36533356]
[85.79093170 98.18956757]
[94.10257721 86.94642639]
[108.03330231 88.14076233]
[121.70297241 81.96499634]
[135.37265015 75.78923035]
[149.04231262 69.61345673]
[162.71199036 63.43769073]
[176.38165283 57.26192474]
[190.05133057 51.08615494]
[203.48170471 44.40596008]
[216.65417480 37.23059464]
[229.82664490 30.05522728]
[242.99913025 22.87986183]
[256.17160034 15.70449543]
[269.34408569 8.52912903]
[282.51654053 1.35376263]
[276.25421143 -12.28293991]
[270.93704224 -26.31521225]
[266.58990479 -40.67762756]
[263.23300171 -55.30322266]
[260.88204956 -70.12380981]
[259.54794312 -85.07027435]
[259.23693848 -100.07294464]
[259.95050049 -115.06185913]
[261.68527222 -129.96713257]
[264.43316650 -144.71928406]
[268.18139648 -159.24951172]
[272.91244507 -173.49008179]
[278.60430908 -187.37458801]
[285.23040771 -200.83830261]
[292.75985718 -213.81843567]
[301.15756226 -226.25448608]
[310.38433838 -238.08847046]
[320.39721680 -249.26519775]
[331.14944458 -259.73257446]
[342.59097290 -269.44177246]
[354.66839600 -278.34753418]
[367.32540894 -286.40835571]
[380.50299072 -293.58663940]
[394.13973999 -299.84890747]
[408.17205811 -305.16595459]
[422.53448486 -309.51300049]
[437.16012573 -312.86981201]
[451.98071289 -315.22067261]
[466.92718506 -316.55465698]
[481.92987061 -316.86557007]
[496.91876221 -316.15191650]
[511.82403564 -314.41705322]
[526.57617188 -311.66903687]
[541.10638428 -307.92071533]
[555.34692383 -303.18957520]
[569.23138428 -297.49761963]
[582.69506836 -290.87142944]
[595.67510986 -283.34188843]
[608.11114502 -274.94412231]
[619.94506836 -265.71722412]
[631.12170410 -255.70429993]
[641.58898926 -244.95198059]
[651.29815674 -233.51040649]
[660.20379639 -221.43292236]
[668.26452637 -208.77586365]
[675.44274902 -195.59820557]
[681.70489502 -181.96142578]
[687.02185059 -167.92907715]
[691.36883545 -153.56660461]
[694.72552490 -138.94096375]
[697.07629395 -124.12035370]
[698.41021729 -109.17386627]
[698.72100830 -94.17119598]
[698.00726318 -79.18228912]
[696.27227783 -64.27703094]
[693.52416992 -49.52492523]
[689.77575684 -34.99474335]
[685.04449463 -20.75424004]
[679.35247803 -6.86980820]
[672.72619629 6.59381533]
[665.19653320 19.57385635]
[656.79870605 32.00979614]
[647.57171631 43.84365082]
[637.55871582 55.02024841]
[626.80633545 65.48747253]
[615.36468506 75.19652557]
[603.28717041 84.10213470]
[590.63000488 92.16277313]
[577.45233154 99.34086609]
[563.81549072 105.60295105]
[549.78314209 110.91981506]
[535.42065430 115.26668549]
[520.79498291 118.62327576]
[505.97433472 120.97395325]
[491.02783203 122.30774689]
[476.02517700 122.61844635]
[461.03625488 121.90459442]
[446.13101196 120.16952515]
[431.37893677 117.42132568]
[416.84878540 113.67281342]
[402.60830688 108.94145966]
[388.72390747 103.24932861]
[375.26031494 96.62295532]
[362.28033447 89.09324646]
[349.84445190 80.69529724]
[338.01065063 71.46826935]
[326.83413696 61.45517731]
[316.36697388 50.70271683]
[306.65802002 39.26101303]
[297.75247192 27.18341637]
[289.69192505 14.52623844]
[276.51943970 21.70160484]
[263.34698486 28.87697029]
[250.17449951 36.05233765]
[237.00201416 43.22770309]
[223.82954407 50.40306854]
[210.65707397 57.57843781]
[224.08757019 64.25836945]
[227.38795471 78.89077759]
[218.12527466 90.68920898]
[203.12765503 90.95628357]
[193.45077515 79.49513245]
[196.22709656 64.75582886]
[182.55741882 70.93159485]
[168.88775635 77.10736084]
[155.21807861 83.28312683]
[141.54841614 89.45890045]
[127.87873840 95.63466644]
[114.20906830 101.81043243]
[105.89742279 113.05357361]
[91.96669769 111.85923767]
[78.29702759 118.03500366]
[83.43665314 132.13452148]
[87.50824738 146.57870483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 208]
[81 207]
[83 205]
[84 204]
[85 203]
[86 202]
[87 201]
[88 200]
[89 199]
[90 193]
[91 192]
[92 191]
[93 190]
[94 189]
[95 188]
[96 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
