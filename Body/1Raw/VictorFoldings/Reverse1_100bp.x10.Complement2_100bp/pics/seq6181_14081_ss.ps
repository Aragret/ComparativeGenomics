%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[69.65888214 742.99664307]
[58.25609589 733.17504883]
[48.98873520 721.31750488]
[42.21301651 707.87963867]
[38.18937683 693.37805176]
[37.07247925 678.37005615]
[38.90525055 663.43261719]
[43.61724854 649.13989258]
[51.02735138 636.04113770]
[60.85073471 624.63995361]
[72.70981598 615.37451172]
[86.14876556 608.60095215]
[100.65102386 604.57965088]
[99.53536987 589.62121582]
[98.41972351 574.66278076]
[97.30407715 559.70428467]
[96.18842316 544.74584961]
[87.52594757 532.62933350]
[94.21540833 518.29187012]
[93.09975433 503.33343506]
[81.48268127 512.82257080]
[66.78917694 509.80578613]
[59.85074234 496.50698853]
[65.78214264 482.72952271]
[80.21096039 478.62963867]
[92.50000000 487.22817993]
[81.81912994 476.91049194]
[81.60544586 461.69836426]
[92.50000000 450.56524658]
[92.50000000 435.56524658]
[92.50000000 420.56524658]
[92.50000000 405.56524658]
[80.36157990 396.97473145]
[75.55226898 382.71517944]
[80.11502075 368.18814087]
[92.50000000 359.02743530]
[92.50000000 344.02743530]
[92.50000000 329.02743530]
[92.50000000 314.02743530]
[92.50000000 299.02743530]
[92.50000000 284.02743530]
[84.76270294 271.30017090]
[92.50000000 257.50000000]
[92.50000000 242.50000000]
[92.50000000 227.50000000]
[92.50000000 212.50000000]
[92.50000000 197.50000000]
[92.50000000 182.50000000]
[92.50000000 167.50000000]
[92.50000000 152.50000000]
[92.50000000 137.50000000]
[92.50000000 122.50000000]
[92.50000000 107.50000000]
[91.71868134 92.52036285]
[90.15815735 77.60176086]
[88.59763336 62.68315506]
[79.46662140 49.76281357]
[85.83785248 36.29965591]
[84.27732849 21.38105202]
[82.71680450 6.46244717]
[81.15628052 -8.45615768]
[64.19347382 -17.32175064]
[56.06554413 -34.48410034]
[59.89327240 -52.93070221]
[73.95271301 -65.24432373]
[71.72759247 -80.07836151]
[69.50247955 -94.91240692]
[67.27735901 -109.74645233]
[65.05223846 -124.58049774]
[55.16272354 -132.86061096]
[53.61480713 -145.26171875]
[60.69709396 -155.06823730]
[58.69308090 -169.93376160]
[56.68906784 -184.79930115]
[54.68505478 -199.66482544]
[52.68103790 -214.53034973]
[50.67702484 -229.39587402]
[40.91188049 -237.82231140]
[39.54877090 -250.24510193]
[46.77627945 -259.94509888]
[37.45391083 -272.72805786]
[43.62399292 -286.28457642]
[41.84152603 -301.17828369]
[40.05906296 -316.07199097]
[26.11141014 -326.63052368]
[24.15391159 -343.67407227]
[34.91265869 -356.60034180]
[32.90864563 -371.46588135]
[30.90463066 -386.33139038]
[28.90061760 -401.19692993]
[26.89660263 -416.06246948]
[11.98386955 -418.53262329]
[-1.53749323 -425.29016113]
[-12.46517372 -435.73416138]
[-19.82748985 -448.93597412]
[-22.96978951 -463.72167969]
[-21.61266136 -478.77658081]
[-15.87678146 -492.76196289]
[-6.27217960 -504.43426514]
[6.34710979 -512.75561523]
[20.85898781 -516.98608398]
[35.97306824 -516.74951172]
[50.34541702 -512.06683350]
[62.69805527 -503.35458374]
[71.93259430 -491.38735962]
[77.22790527 -477.22927856]
[78.11313629 -462.13928223]
[74.50955963 -447.45916748]
[66.73762512 -434.49429321]
[55.48838806 -424.39746094]
[41.76213074 -418.06646729]
[43.76614380 -403.20092773]
[45.77016068 -388.33541870]
[47.77417374 -373.46987915]
[49.77818680 -358.60437012]
[61.01726913 -352.30258179]
[66.65884399 -340.50195312]
[64.44110107 -327.41409302]
[54.95277786 -317.85446167]
[56.73524475 -302.96075439]
[58.51771164 -288.06704712]
[67.71258545 -276.34936523]
[61.66999435 -261.72753906]
[72.92997742 -248.26724243]
[65.54255676 -231.39988708]
[67.54656982 -216.53436279]
[69.55058289 -201.66883850]
[71.55459595 -186.80331421]
[73.55860901 -171.93777466]
[75.56262207 -157.07225037]
[87.02175903 -143.78108215]
[79.88628387 -126.80561066]
[82.11140442 -111.97157288]
[84.33651733 -97.13752747]
[86.56163788 -82.30348206]
[88.78675079 -67.46943665]
[99.47859192 -64.28582764]
[108.25024414 -57.31043243]
[113.81064606 -47.52101135]
[115.32318878 -36.31293488]
[112.53141785 -25.30030441]
[105.80154419 -16.08351517]
[96.07489014 -10.01668072]
[97.63541412 4.90192413]
[99.19593811 19.82052803]
[100.75645447 34.73913193]
[109.77585602 46.59239197]
[103.51623535 61.12263107]
[105.07675934 76.04123688]
[106.63728333 90.95983887]
[116.01452637 79.25226593]
[130.69821167 76.18809509]
[143.97517395 83.16823578]
[149.77536011 97.00145721]
[145.44699097 111.36339569]
[132.96894836 119.68796539]
[118.04602814 118.16928864]
[107.50000000 107.50000000]
[107.50000000 122.50000000]
[107.50000000 137.50000000]
[107.50000000 152.50000000]
[107.50000000 167.50000000]
[107.50000000 182.50000000]
[107.50000000 197.50000000]
[107.50000000 212.50000000]
[107.50000000 227.50000000]
[107.50000000 242.50000000]
[107.50000000 257.50000000]
[115.23729706 271.30017090]
[107.50000000 284.02743530]
[107.50000000 299.02743530]
[107.50000000 314.02743530]
[107.50000000 329.02743530]
[107.50000000 344.02743530]
[107.50000000 359.02743530]
[119.88497925 368.18814087]
[124.44773102 382.71517944]
[119.63842010 396.97473145]
[107.50000000 405.56524658]
[107.50000000 420.56524658]
[107.50000000 435.56524658]
[107.50000000 450.56524658]
[118.39455414 461.69836426]
[118.18087006 476.91049194]
[107.50000000 487.22817993]
[108.05821228 502.21777344]
[109.17385864 517.17620850]
[117.91613770 530.36273193]
[111.14688110 543.63018799]
[112.26252747 558.58868408]
[113.37817383 573.54711914]
[114.49382782 588.50555420]
[115.60947418 603.46398926]
[130.54780579 605.28955078]
[144.84286499 609.99456787]
[157.94519043 617.39831543]
[169.35115051 627.21618652]
[178.62236023 639.07073975]
[185.40242004 652.50640869]
[189.43075562 667.00671387]
[190.55250549 682.01434326]
[188.72457886 696.95233154]
[184.01721191 711.24664307]
[176.61134338 724.34777832]
[166.79165649 735.75213623]
[154.93556213 745.02142334]
[141.49880981 751.79931641]
[126.99785614 755.82531738]
[111.99008179 756.94464111]
[97.05234528 755.11425781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[19 187]
[20 186]
[26 185]
[29 182]
[30 181]
[31 180]
[32 179]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 150]
[55 149]
[56 148]
[58 146]
[59 145]
[60 144]
[61 143]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[80 123]
[82 121]
[83 120]
[84 119]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
