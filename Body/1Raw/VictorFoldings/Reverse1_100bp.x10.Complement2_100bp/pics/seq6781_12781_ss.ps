%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[93.76730347 604.34216309]
[83.39141846 615.22045898]
[71.40481567 624.29333496]
[58.11797714 631.32586670]
[43.87506485 636.13580322]
[29.04500198 638.59857178]
[14.01192188 638.65045166]
[-0.83478063 636.29003906]
[-15.11054039 631.57843018]
[-28.44558144 624.63781738]
[-40.49449158 615.64782715]
[-50.94517899 604.84136963]
[-59.52694702 592.49835205]
[-66.01750183 578.93853760]
[-70.24872589 564.51312256]
[-72.11101532 549.59576416]
[-71.55613708 534.57281494]
[-68.59846497 519.83343506]
[-63.31460953 505.75949097]
[-55.84143066 492.71542358]
[-46.37250519 481.03912354]
[-35.15310287 471.03308105]
[-22.47382927 462.95642090]
[-8.66310883 457.01840210]
[5.92132568 453.37280273]
[20.90170288 452.11404419]
[35.88999557 453.27474976]
[39.42966843 438.69836426]
[42.96934128 424.12200928]
[46.50901413 409.54562378]
[50.04868698 394.96923828]
[39.60070801 379.93743896]
[43.52544022 361.73004150]
[59.78654099 352.00939941]
[62.89065170 337.33407593]
[65.22613525 322.51702881]
[66.78665924 307.59841919]
[68.34718323 292.67980957]
[69.90770721 277.76119995]
[63.53647232 264.29803467]
[72.66748810 251.37770081]
[74.22801208 236.45910645]
[66.85688782 226.86779785]
[68.03488922 214.42608643]
[77.67349243 205.85520935]
[79.45595551 190.96148682]
[81.23842621 176.06776428]
[79.04320526 171.82630920]
[79.48914337 166.16078186]
[83.30210876 160.75959778]
[85.52722931 145.92555237]
[87.75234222 131.09150696]
[89.97746277 116.25746155]
[81.44966125 104.54324341]
[83.59905243 90.21403503]
[95.18849182 81.51742554]
[97.41361237 66.68338013]
[83.39987946 61.16783905]
[70.97093964 52.67607880]
[60.74834061 41.63663483]
[53.24239731 28.60535240]
[48.82677078 14.23738384]
[47.71984100 -0.74573326]
[49.97391510 -15.59232235]
[55.47276306 -29.55827141]
[63.93761826 -41.94433212]
[74.94129181 -52.13112259]
[87.92972565 -59.61011505]
[102.24992371 -64.00900269]
[117.18274689 -65.11024475]
[119.40786743 -79.94429016]
[121.63298035 -94.77833557]
[123.85810089 -109.61238098]
[126.08321381 -124.44641876]
[128.30833435 -139.28047180]
[122.70377350 -154.07571411]
[132.24343872 -165.51441956]
[119.56849670 -157.49284363]
[104.90421295 -160.64860535]
[96.65097046 -173.17393494]
[99.53659058 -187.89376831]
[111.90807343 -196.37590027]
[126.67845917 -193.76138306]
[135.38638306 -181.54885864]
[138.92605591 -196.12524414]
[142.46572876 -210.70161438]
[138.20349121 -225.93788147]
[148.72563171 -236.47987366]
[140.76593018 -249.86946106]
[144.56330872 -264.60156250]
[157.37728882 -272.10739136]
[160.91696167 -286.68377686]
[154.88514709 -298.08465576]
[158.13342285 -310.15246582]
[168.39378357 -316.55963135]
[172.15008545 -331.08169556]
[175.90638733 -345.60375977]
[179.66268921 -360.12579346]
[166.07017517 -366.57873535]
[153.94468689 -375.48764038]
[143.72453308 -386.53051758]
[135.77917480 -399.30813599]
[130.39584351 -413.35864258]
[127.76911926 -428.17404175]
[127.99398041 -443.21884155]
[131.06228638 -457.94915771]
[136.86311340 -471.83248901]
[145.18678284 -484.36697388]
[155.73239136 -495.09948730]
[168.11871338 -503.64202881]
[181.89799500 -509.68585205]
[196.57214355 -513.01245117]
[211.61067200 -513.50152588]
[226.46994019 -511.13549805]
[240.61283875 -505.99981689]
[253.52806091 -498.28012085]
[264.74874878 -488.25555420]
[273.86929321 -476.28842163]
[280.55999756 -462.81134033]
[284.57897949 -448.31155396]
[285.78094482 -433.31314087]
[284.12243652 -418.35836792]
[279.66345215 -403.98776245]
[272.56518555 -390.72085571]
[263.08416748 -379.03723145]
[251.56318665 -369.35925293]
[238.41868591 -362.03674316]
[224.12586975 -357.33444214]
[209.20138550 -355.42233276]
[194.18475342 -356.36950684]
[190.42845154 -341.84744263]
[186.67214966 -327.32537842]
[182.91584778 -312.80331421]
[188.50935364 -296.16964722]
[175.49333191 -283.14410400]
[171.95365906 -268.56771851]
[179.89813232 -256.02096558]
[176.51605225 -241.18803406]
[163.30200195 -232.94020081]
[167.81742859 -218.74653625]
[157.04211426 -207.16194153]
[153.50244141 -192.58557129]
[149.96276855 -178.00918579]
[147.07748413 -163.28930664]
[152.84120178 -149.55508423]
[143.14237976 -137.05534363]
[140.91726685 -122.22130585]
[138.69213867 -107.38726044]
[136.46702576 -92.55321503]
[134.24191284 -77.71917725]
[132.01679993 -62.88512802]
[145.96931458 -57.45106506]
[158.36863708 -49.04422760]
[168.59112549 -38.08358002]
[176.12171936 -25.11663628]
[180.57995605 -10.79210186]
[181.73919678 4.17256546]
[179.53808594 19.02709770]
[174.08383179 33.02603149]
[165.64697266 45.46611786]
[154.64799500 55.72164917]
[141.63632202 63.27593231]
[127.26290131 67.74732208]
[112.24765778 68.90849304]
[110.02253723 83.74253845]
[118.55033875 95.45675659]
[116.40094757 109.78596497]
[104.81150818 118.48257446]
[102.58638763 133.31661987]
[100.36127472 148.15066528]
[98.13615417 162.98471069]
[96.13214111 177.85023499]
[94.34967804 192.74395752]
[92.56720734 207.63766479]
[100.20494080 224.39317322]
[89.14661407 238.01962280]
[87.58609009 252.93823242]
[93.84570312 267.46847534]
[84.82630920 279.32171631]
[83.26578522 294.24032593]
[81.70526886 309.15893555]
[80.14474487 324.07754517]
[91.74177551 314.56393433]
[106.74171448 314.60473633]
[118.28680420 324.18133545]
[121.09877014 338.91540527]
[113.89202881 352.07073975]
[99.96140289 357.63290405]
[85.67578125 353.05892944]
[77.56595612 340.43820190]
[74.46184540 355.11349487]
[82.76210022 363.62478638]
[85.89113617 374.96984863]
[83.18311310 386.29946899]
[75.42330933 394.82595825]
[64.62506104 398.50891113]
[61.08538818 413.08529663]
[57.54571533 427.66168213]
[54.00604248 442.23803711]
[50.46637344 456.81442261]
[64.31773376 462.65701294]
[77.05242157 470.64599609]
[88.34059906 480.57440186]
[97.88985443 492.18508911]
[105.45284271 505.17727661]
[110.83367920 519.21447754]
[113.89296722 533.93310547]
[114.55147552 548.95184326]
[112.79215240 563.88165283]
[108.66055298 578.33593750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[34 191]
[35 190]
[36 182]
[37 181]
[38 180]
[39 179]
[41 177]
[42 176]
[45 174]
[46 173]
[47 172]
[50 171]
[51 170]
[52 169]
[53 168]
[56 165]
[57 164]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[77 144]
[84 143]
[85 142]
[86 141]
[88 139]
[91 136]
[92 135]
[95 133]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
