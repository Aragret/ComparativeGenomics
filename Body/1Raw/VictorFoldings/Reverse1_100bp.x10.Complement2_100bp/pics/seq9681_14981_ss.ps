%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[67.41625977 761.91064453]
[52.48748398 760.39257812]
[37.69525909 757.87005615]
[23.10707283 754.35467529]
[8.78948975 749.86248779]
[-5.19216061 744.41400146]
[-18.77408409 738.03399658]
[-31.89430618 730.75164795]
[-44.49296570 722.60015869]
[-56.51257706 713.61669922]
[-67.89829254 703.84234619]
[-78.59816742 693.32159424]
[-88.56336975 682.10253906]
[-97.74844360 670.23632812]
[-106.11147308 657.77709961]
[-113.61429596 644.78167725]
[-120.22268677 631.30938721]
[-125.90648651 617.42175293]
[-130.63975525 603.18200684]
[-134.40090942 588.65527344]
[-137.17279053 573.90771484]
[-138.94273376 559.00671387]
[-139.70266724 544.02020264]
[-139.44912720 529.01660156]
[-138.18327332 514.06433105]
[-135.91087341 499.23162842]
[-132.64230347 484.58615112]
[-128.39248657 470.19476318]
[-123.18079376 456.12313843]
[-117.03101349 442.43542480]
[-109.97120667 429.19412231]
[-102.03358459 416.45965576]
[-93.25436401 404.29006958]
[-83.67360687 392.74096680]
[-73.33502960 381.86499023]
[-62.28580093 371.71179199]
[-50.57633591 362.32769775]
[-38.26006317 353.75549316]
[-25.39318085 346.03433228]
[-12.03439713 339.19943237]
[1.75533307 333.28198242]
[15.91309166 328.30899048]
[30.37427902 324.30310059]
[45.07291031 321.28265381]
[59.94191742 319.26138306]
[74.91345978 318.24853516]
[74.91345978 303.24853516]
[74.91345978 288.24853516]
[74.91345978 273.24853516]
[74.91345978 258.24853516]
[74.91345978 243.24853516]
[74.91345978 228.24853516]
[65.59709930 240.00462341]
[51.43865967 244.95826721]
[36.82529449 241.57455444]
[26.28511238 230.90194702]
[23.08410263 216.24746704]
[28.21413231 202.15197754]
[40.08560562 192.98312378]
[55.02001953 191.58195496]
[68.38978577 198.38264465]
[76.05219269 211.27818298]
[78.05620575 196.41265869]
[80.06021881 181.54711914]
[82.06423187 166.68159485]
[84.06824493 151.81607056]
[81.93642426 147.54238892]
[82.46665955 141.88412476]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[102.04438019 32.72885132]
[103.38261414 17.78866768]
[104.72084808 2.84848237]
[106.05908203 -12.09170246]
[91.81707001 -17.01618576]
[79.17522430 -25.20130157]
[68.86605072 -36.16761780]
[61.48563385 -49.27470398]
[57.45920944 -63.75853348]
[57.01664352 -78.77601624]
[60.17931747 -93.45409393]
[66.75914764 -106.94044495]
[76.36975861 -118.45304871]
[88.44916534 -127.32546997]
[102.29263306 -133.04547119]
[117.09381104 -135.28456116]
[118.43204498 -150.22474670]
[111.95679474 -164.66017151]
[120.79870605 -176.64640808]
[122.13694000 -191.58659363]
[123.47518158 -206.52677917]
[124.81341553 -221.46696472]
[110.64190674 -226.64680481]
[98.29447937 -235.31880188]
[88.61300659 -246.89167786]
[82.25758362 -260.57638550]
[79.66152954 -275.43984985]
[81.00186157 -290.46868896]
[86.18717194 -304.63821411]
[94.86393738 -316.98226929]
[106.44055176 -326.65927124]
[120.12770844 -333.00942993]
[134.99218750 -335.59973145]
[150.02050781 -334.25360107]
[164.18800354 -329.06280518]
[176.52873230 -320.38128662]
[186.20126343 -308.80093384]
[192.54611206 -295.11132812]
[195.13069153 -280.24584961]
[193.77876282 -265.21804810]
[188.58250427 -251.05256653]
[179.89620972 -238.71519470]
[168.31211853 -229.04711914]
[154.62007141 -222.70756531]
[139.75360107 -220.12872314]
[138.41535950 -205.18853760]
[137.07713318 -190.24835205]
[135.73889160 -175.30816650]
[142.30987549 -161.94136047]
[133.37223816 -148.88650513]
[132.03399658 -133.94631958]
[146.20162964 -129.11241150]
[158.80816650 -121.02321625]
[169.11848450 -110.14528656]
[176.53009033 -97.10795593]
[180.60838318 -82.66692352]
[181.11212158 -67.66043854]
[178.00770569 -52.96066666]
[171.47131348 -39.42297745]
[161.87899780 -27.83618927]
[149.78500366 -18.87658691]
[135.88975525 -13.06847286]
[120.99926758 -10.75346851]
[119.66103363 4.18671656]
[118.32279968 19.12690163]
[116.98456573 34.06708527]
[118.67643738 36.30219650]
[119.58489227 39.34215164]
[119.39894104 42.89191437]
[117.92004395 46.54942703]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[98.93377686 153.82008362]
[96.92976379 168.68560791]
[94.92575073 183.55113220]
[92.92173767 198.41667175]
[90.91772461 213.28219604]
[89.91345978 228.24853516]
[89.91345978 243.24853516]
[89.91345978 258.24853516]
[89.91345978 273.24853516]
[89.91345978 288.24853516]
[89.91345978 303.24853516]
[89.91345978 318.24853516]
[104.88500214 319.26138306]
[119.75401306 321.28265381]
[134.45265198 324.30310059]
[148.91383362 328.30899048]
[163.07159424 333.28198242]
[176.86132812 339.19943237]
[190.22010803 346.03433228]
[203.08699036 353.75549316]
[215.40325928 362.32769775]
[227.11271667 371.71179199]
[238.16195679 381.86499023]
[248.50053406 392.74096680]
[258.08129883 404.29006958]
[266.86050415 416.45965576]
[274.79812622 429.19412231]
[281.85794067 442.43542480]
[288.00772095 456.12313843]
[293.21939087 470.19476318]
[297.46923828 484.58615112]
[300.73779297 499.23162842]
[303.01019287 514.06433105]
[304.27606201 529.01660156]
[304.52957153 544.02020264]
[303.76965332 559.00671387]
[301.99969482 573.90771484]
[299.22784424 588.65527344]
[295.46667480 603.18200684]
[290.73339844 617.42175293]
[285.04962158 631.30938721]
[278.44122314 644.78167725]
[270.93838501 657.77709961]
[262.57537842 670.23632812]
[253.39028931 682.10253906]
[243.42509460 693.32159424]
[232.72521973 703.84234619]
[221.33949280 713.61669922]
[209.31988525 722.60015869]
[196.72123718 730.75164795]
[183.60101318 738.03399658]
[170.01908875 744.41400146]
[156.03742981 749.86248779]
[141.71984863 754.35467529]
[127.13166809 757.87005615]
[112.33943939 760.39257812]
[97.41066742 761.91064453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[69 153]
[70 152]
[71 151]
[72 149]
[73 148]
[74 147]
[75 146]
[76 141]
[77 140]
[78 139]
[79 138]
[91 126]
[92 125]
[94 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
