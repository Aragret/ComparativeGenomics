%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[10.29437828 275.14657593]
[7.57574654 289.90426636]
[3.84543729 304.43923950]
[-0.87877244 318.68222046]
[-6.57436943 332.56533813]
[-13.21421146 346.02243042]
[-20.76665688 358.98934937]
[-29.19571304 371.40432739]
[-38.46121216 383.20819092]
[-48.51900101 394.34469604]
[-59.32114410 404.76074219]
[-70.81616974 414.40673828]
[-82.94929504 423.23666382]
[-95.66270447 431.20849609]
[-108.89580536 438.28421021]
[-122.58554077 444.43008423]
[-136.66667175 449.61685181]
[-151.07208252 453.81979370]
[-165.73315430 457.01882935]
[-180.57998657 459.19879150]
[-195.54183960 460.34924316]
[-210.54740906 460.46472168]
[-225.52520752 459.54464722]
[-240.40382385 457.59344482]
[-255.11238098 454.62039185]
[-269.58078003 450.63964844]
[-283.74005127 445.67019653]
[-297.52276611 439.73571777]
[-310.86318970 432.86450195]
[-323.69775391 425.08926392]
[-335.96533203 416.44708252]
[-347.60745239 406.97915649]
[-358.56860352 396.73056030]
[-368.79660034 385.75015259]
[-378.24264526 374.09030151]
[-386.86175537 361.80648804]
[-394.61285400 348.95733643]
[-401.45901489 335.60403442]
[-407.36758423 321.81021118]
[-412.31042480 307.64160156]
[-416.26397705 293.16577148]
[-419.20941162 278.45166016]
[-421.13265991 263.56939697]
[-422.02459717 248.58990479]
[-421.88092041 233.58456421]
[-420.70236206 218.62489319]
[-418.49453735 203.78218079]
[-415.26794434 189.12716675]
[-411.03796387 174.72966003]
[-405.82476807 160.65830994]
[-399.65316772 146.98013306]
[-392.55261230 133.76034546]
[-384.55691528 121.06194305]
[-375.70419312 108.94542694]
[-366.03662109 97.46853638]
[-355.60031128 86.68598175]
[-344.44491577 76.64913177]
[-332.62368774 67.40582275]
[-320.19290161 59.00010300]
[-307.21179199 51.47203064]
[-293.74224854 44.85747910]
[-279.84848022 39.18797302]
[-265.59664917 34.49052429]
[-251.05468750 30.78752708]
[-236.29190063 28.09662437]
[-221.37864685 26.43063736]
[-206.38598633 25.79750633]
[-191.38537598 26.20025063]
[-176.44828796 27.63694763]
[-161.64591980 30.10075378]
[-147.04878235 33.57992935]
[-132.72648621 38.05788803]
[-118.74723816 43.51329422]
[-105.17768097 49.92015076]
[-92.08247375 57.24792099]
[-79.52402496 65.46169281]
[-67.56217957 74.52231598]
[-56.25394440 84.38661957]
[-45.65320206 95.00758362]
[-35.81047440 106.33460999]
[-26.77267075 118.31370544]
[-18.58285522 130.88778687]
[-11.28005695 143.99693298]
[2.29614997 137.61833191]
[15.87235737 131.23973083]
[29.44856453 124.86112213]
[43.02477264 118.48252106]
[56.60097885 112.10391235]
[70.17718506 105.72530365]
[83.75339508 99.34670258]
[92.97634125 85.33551025]
[109.67450714 86.93160248]
[123.15424347 80.35157776]
[136.63397217 73.77154541]
[130.92004395 59.89698029]
[126.09761047 45.68795013]
[122.18608093 31.20166397]
[119.20120239 16.49645996]
[117.15499878 1.63154888]
[116.05570984 -13.33321285]
[115.90776062 -28.33756638]
[116.71174622 -43.32109451]
[118.46443176 -58.22346497]
[121.15876007 -72.98466492]
[124.78388214 -87.54526520]
[129.32519531 -101.84663391]
[134.76441956 -115.83116913]
[141.07965088 -129.44258118]
[148.24545288 -142.62603760]
[156.23298645 -155.32847595]
[165.01007080 -167.49874878]
[174.54136658 -179.08781433]
[184.78851318 -190.04905701]
[195.71023560 -200.33830261]
[207.26254272 -209.91412354]
[219.39894104 -218.73799133]
[232.07055664 -226.77433777]
[245.22634888 -233.99081421]
[258.81335449 -240.35838318]
[272.77685547 -245.85137939]
[287.06063843 -250.44769287]
[301.60717773 -254.12881470]
[316.35791016 -256.87991333]
[331.25341797 -258.68994141]
[346.23373413 -259.55157471]
[361.23855591 -259.46136475]
[376.20742798 -258.41967773]
[391.08010864 -256.43069458]
[405.79669189 -253.50241089]
[420.29791260 -249.64665222]
[434.52542114 -244.87893677]
[448.42184448 -239.21844482]
[461.93133545 -232.68797302]
[474.99938965 -225.31382751]
[487.57345581 -217.12570190]
[499.60287476 -208.15657043]
[511.03921509 -198.44252014]
[521.83642578 -188.02270508]
[531.95104980 -176.93905640]
[541.34234619 -165.23620605]
[549.97241211 -152.96130371]
[557.80664062 -140.16374207]
[564.81341553 -126.89506531]
[570.96453857 -113.20870972]
[576.23522949 -99.15978241]
[580.60424805 -84.80484772]
[584.05407715 -70.20171356]
[586.57067871 -55.40918350]
[588.14410400 -40.48682022]
[588.76782227 -25.49470520]
[588.43951416 -10.49321556]
[587.16033936 4.45724678]
[584.93554688 19.29648018]
[581.77410889 33.96473312]
[577.68865967 48.40293884]
[572.69573975 62.55295944]
[566.81542969 76.35781860]
[560.07135010 89.76193237]
[552.49072266 102.71132660]
[544.10406494 115.15384674]
[534.94512939 127.03940582]
[525.05078125 138.32012939]
[514.46093750 148.95060730]
[503.21813965 158.88803101]
[491.36770630 168.09237671]
[478.95736694 176.52659607]
[466.03707886 184.15670776]
[452.65887451 190.95201111]
[438.87661743 196.88513184]
[424.74581909 201.93217468]
[410.32333374 206.07281494]
[395.66729736 209.29039001]
[380.83670044 211.57194519]
[365.89123535 212.90829468]
[350.89111328 213.29403687]
[335.89672852 212.72764587]
[320.96844482 211.21138000]
[306.16638184 208.75135803]
[291.55017090 205.35746765]
[277.17861938 201.04339600]
[263.10961914 195.82652283]
[249.39982605 189.72781372]
[236.10443115 182.77186584]
[223.27699280 174.98667908]
[210.96914673 166.40359497]
[199.23045349 157.05717468]
[188.10818481 146.98504639]
[177.64712524 136.22778320]
[167.88938904 124.82869720]
[158.87428284 112.83367920]
[150.63809204 100.29103851]
[143.21400452 87.25128174]
[129.73426819 93.83130646]
[116.25453186 100.41133881]
[111.80970001 111.17631531]
[101.30583191 116.20721436]
[90.13199615 112.92291260]
[76.55579376 119.30151367]
[62.97958374 125.68012238]
[49.40337753 132.05873108]
[35.82716751 138.43733215]
[22.25096130 144.81593323]
[8.67475510 151.19453430]
[-4.90145206 157.57315063]
[0.52768439 171.56260681]
[4.97873116 185.89331055]
[8.43047619 200.49693298]
[10.86647129 215.30392456]
[12.27510738 230.24368286]
[12.64967060 245.24502563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 204]
[84 203]
[85 202]
[86 201]
[87 200]
[88 199]
[89 198]
[90 197]
[92 194]
[93 193]
[94 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
