%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[129.93185425 305.38720703]
[137.24568176 292.26135254]
[146.35314941 280.30999756]
[157.06883240 269.77645874]
[169.17456055 260.87524414]
[162.09745789 247.64970398]
[155.02035522 234.42417908]
[147.94323730 221.19865417]
[145.30253601 220.25802612]
[142.87530518 218.21470642]
[141.08341980 215.14476013]
[140.31344604 211.27543640]
[140.86526489 206.96853638]
[134.58790588 193.34521484]
[128.20928955 179.76901245]
[121.72979736 166.24066162]
[115.25030518 152.71231079]
[111.12341309 150.30860901]
[108.46269226 145.28689575]
[108.78601837 138.68333435]
[102.71218872 124.96807098]
[96.63835144 111.25280762]
[94.63366699 126.11824036]
[86.82541656 138.92572021]
[74.52944946 147.51693726]
[59.81783676 150.44413757]
[45.16975403 147.21403503]
[33.05364990 138.37095642]
[25.51131058 125.40511322]
[23.81374550 110.50148010]
[28.24702835 96.17157745]
[38.06407166 84.83025360]
[51.61053467 78.38871765]
[66.60359192 77.93247223]
[80.51665497 83.53841400]
[91.00602722 94.26324463]
[87.68376923 79.63578033]
[84.36150360 65.00832367]
[81.03924561 50.38086319]
[77.71698761 35.75340271]
[74.39472961 21.12594032]
[71.07247162 6.49848080]
[67.75020599 -8.12897968]
[57.14855576 -19.87272263]
[61.87480545 -33.99758911]
[57.70450974 -19.58895683]
[48.91365051 -7.43491364]
[36.53496933 1.03669930]
[22.02269936 4.83064413]
[7.08172750 3.50121164]
[-6.53269339 -2.79541707]
[-17.22115707 -13.31952095]
[-23.72799110 -26.83473778]
[-25.28878212 -41.75331497]
[-21.72016716 -56.32263184]
[-13.44138527 -68.83110046]
[-1.42501891 -77.80923462]
[12.91726112 -82.20230103]
[27.90053749 -81.49419403]
[41.76459122 -75.76811218]
[52.88068771 -65.69674683]
[59.94340515 -52.46178055]
[60.16673279 -67.46012115]
[60.39006042 -82.45845795]
[57.38876724 -91.08573914]
[60.73002625 -97.67799377]
[61.17663193 -112.67134094]
[61.62323761 -127.66469574]
[54.54388046 -114.44036865]
[44.43587875 -103.35757446]
[31.91734314 -95.09402466]
[17.75378227 -90.15504456]
[2.81130552 -88.84265137]
[-11.99634933 -91.23709106]
[-25.76368904 -97.19194794]
[-37.64883423 -106.34308624]
[-46.92500305 -118.13090515]
[-53.02495956 -131.83457947]
[-55.57567978 -146.61611938]
[-54.42119598 -161.57162476]
[-49.63209915 -175.78656006]
[-41.50124359 -188.39169312]
[-30.52584076 -198.61619568]
[-17.37703514 -205.83483887]
[-2.85888195 -209.60621643]
[12.14082718 -209.69969177]
[26.70485306 -206.10954285]
[39.94260406 -199.05532837]
[51.04458237 -188.96839905]
[59.33189774 -176.46559143]
[64.29778290 -162.31143188]
[65.63856506 -147.37144470]
[71.09391785 -161.34423828]
[76.54927826 -175.31704712]
[82.00463104 -189.28984070]
[87.45999146 -203.26263428]
[92.91534424 -217.23544312]
[98.37070465 -231.20823669]
[85.36737823 -238.74574280]
[73.66711426 -248.17994690]
[63.54418182 -259.28970337]
[55.23587418 -271.81457520]
[48.93694687 -285.46096802]
[44.79506302 -299.90899658]
[42.90731430 -314.81994629]
[43.31794739 -329.84432983]
[46.01733398 -344.62991333]
[50.94220734 -358.83013916]
[57.97711182 -372.11209106]
[66.95714569 -384.16445923]
[77.67179871 -394.70468140]
[89.86990356 -403.48571777]
[103.26552582 -410.30172729]
[117.54464722 -414.99288940]
[132.37254333 -417.44927979]
[147.40162659 -417.61331177]
[162.27960205 -415.48110962]
[176.65771484 -411.10269165]
[190.19889832 -404.58068848]
[202.58573914 -396.06796265]
[213.52787781 -385.76406860]
[222.76879883 -373.91055298]
[230.09190369 -360.78527832]
[235.32551575 -346.69592285]
[238.34695435 -331.97277832]
[239.08538818 -316.96093750]
[237.52351379 -302.01232910]
[233.69793701 -287.47735596]
[227.69833374 -273.69674683]
[219.66535950 -260.99353027]
[209.78729248 -249.66549683]
[198.29571533 -239.97819519]
[185.45999146 -232.15869141]
[171.58100891 -226.39028931]
[156.98411560 -222.80822754]
[142.01148987 -221.49645996]
[127.01409149 -222.48574829]
[112.34350586 -225.75288391]
[106.88814545 -211.78007507]
[101.43278503 -197.80728149]
[95.97743225 -183.83448792]
[90.52207184 -169.86167908]
[85.06671906 -155.88888550]
[79.61135864 -141.91609192]
[76.61658478 -127.21808624]
[76.16998291 -112.22473907]
[75.72337341 -97.23138428]
[75.38839722 -82.23513031]
[75.16506958 -67.23679352]
[74.94174194 -52.23845291]
[76.50226593 -37.31984711]
[86.86628723 -26.62235832]
[82.37767029 -11.45123863]
[85.69992828 3.17622137]
[89.02218628 17.80368233]
[92.34444427 32.43114090]
[95.66670990 47.05860138]
[98.98896790 61.68606186]
[102.31122589 76.31352234]
[105.63348389 90.94097900]
[110.35362244 105.17897034]
[116.42745209 118.89424133]
[122.50128937 132.60951233]
[128.77865601 146.23281860]
[135.25814819 159.76116943]
[141.73764038 173.28950500]
[148.26699829 179.67741394]
[148.21121216 187.06785583]
[154.48857117 200.69117737]
[161.16877747 214.12155151]
[168.24588013 227.34707642]
[175.32298279 240.57260132]
[182.40008545 253.79812622]
[196.52200317 248.66470337]
[211.23077393 245.59335327]
[226.22691345 244.64663696]
[241.20515442 245.84382629]
[255.86053467 249.16052246]
[269.89471436 254.52922058]
[283.02194214 261.84060669]
[294.97497559 270.94586182]
[305.51049805 281.65957642]
[314.41397095 293.76367188]
[321.50418091 307.01168823]
[326.63671875 321.13391113]
[329.70715332 335.84286499]
[330.65295410 350.83908081]
[329.45483398 365.81723022]
[326.13723755 380.47241211]
[320.76766968 394.50625610]
[313.45544434 407.63302612]
[304.34948730 419.58551025]
[293.63510132 430.12036133]
[281.53045654 439.02310181]
[268.28201294 446.11245728]
[254.15945435 451.24414062]
[239.45031738 454.31365967]
[224.45405579 455.25851440]
[209.47596741 454.05947876]
[194.82098389 450.74096680]
[180.78749084 445.37054443]
[167.66116333 438.05752563]
[155.70924377 428.95080566]
[145.17506409 418.23577881]
[136.27307129 406.13058472]
[129.18452454 392.88171387]
[124.05371094 378.75881958]
[120.98510742 364.04949951]
[120.04116821 349.05316162]
[121.24112701 334.07516479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[13 169]
[14 168]
[15 166]
[16 165]
[17 164]
[20 163]
[21 162]
[22 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[45 151]
[62 150]
[63 149]
[64 148]
[66 147]
[67 146]
[68 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
