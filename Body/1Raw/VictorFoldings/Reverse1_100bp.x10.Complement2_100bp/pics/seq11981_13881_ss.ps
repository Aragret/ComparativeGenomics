%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[52.91133881 622.83923340]
[48.51350021 637.25292969]
[40.90965271 650.26361084]
[30.50985336 661.16961670]
[17.87495804 669.38281250]
[3.68634629 674.46020508]
[-11.29080582 676.12805176]
[-26.24880028 674.29632568]
[-40.38097000 669.06390381]
[-52.92518616 660.71289062]
[-63.20495605 649.69366455]
[-70.66590118 636.60052490]
[-74.90566254 622.13946533]
[-75.69560242 607.09045410]
[-72.99311066 592.26501465]
[-66.94393158 578.46270752]
[-57.87429810 566.42785645]
[-46.27331161 556.80944824]
[-32.76660538 550.12615967]
[-18.08258057 546.73852539]
[-3.01312518 546.82922363]
[0.52654719 532.25280762]
[4.06621981 517.67645264]
[7.60589218 503.10006714]
[11.14556408 488.52368164]
[14.46782398 473.89624023]
[17.57193375 459.22091675]
[20.67604446 444.54562378]
[23.78015518 429.87033081]
[26.88426399 415.19503784]
[18.56974411 402.89038086]
[21.50869751 387.96331787]
[34.47131729 379.32571411]
[37.57542801 364.65042114]
[40.67953873 349.97509766]
[35.74351501 335.92218018]
[46.16914368 324.02188110]
[48.50463104 309.20480347]
[50.06515503 294.28622437]
[51.62567902 279.36761475]
[53.18620300 264.44900513]
[43.63668442 253.07612610]
[45.00675583 237.92431641]
[57.00042725 227.98501587]
[58.56094742 213.06640625]
[49.63875198 225.12435913]
[36.82108688 232.91586304]
[22.00937271 235.28506470]
[7.40084219 231.88053894]
[-4.83741522 223.20730591]
[-12.88992786 210.55198669]
[-15.56215382 195.79193115]
[-12.45768356 181.11669922]
[-4.03704739 168.70329285]
[8.45060444 160.39314270]
[23.15280151 157.41902161]
[37.88856125 160.22212219]
[50.47192001 168.38661194]
[59.03621674 180.70135498]
[62.31092834 195.33761597]
[66.92494202 181.06488037]
[71.53894806 166.79214478]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[109.61357880 43.11353683]
[113.90769958 28.74132538]
[118.09471130 14.33754349]
[121.19882202 -0.33775878]
[123.20283508 -15.20328712]
[125.20684814 -30.06881523]
[127.21086121 -44.93434525]
[120.02568817 -55.64583588]
[122.00087738 -67.98611450]
[131.53898621 -75.42593384]
[133.76411438 -90.25997925]
[126.73921204 -101.07726288]
[128.89790344 -113.38676453]
[138.54573059 -120.68374634]
[140.99145508 -135.48301697]
[143.43717957 -150.28228760]
[145.77267456 -165.09934998]
[147.99778748 -179.93339539]
[140.86231995 -196.90887451]
[152.32145691 -210.20004272]
[154.32546997 -225.06556702]
[156.32948303 -239.93109131]
[158.33349609 -254.79663086]
[160.33750916 -269.66213989]
[162.00904846 -284.56872559]
[163.34727478 -299.50891113]
[164.68551636 -314.44909668]
[150.51400757 -319.62893677]
[138.16658020 -328.30093384]
[128.48510742 -339.87380981]
[122.12968445 -353.55850220]
[119.53363800 -368.42199707]
[120.87396240 -383.45083618]
[126.05928040 -397.62033081]
[134.73603821 -409.96441650]
[146.31265259 -419.64141846]
[159.99980164 -425.99154663]
[174.86428833 -428.58187866]
[189.89260864 -427.23574829]
[204.06010437 -422.04495239]
[216.40083313 -413.36343384]
[226.07336426 -401.78308105]
[232.41821289 -388.09347534]
[235.00279236 -373.22799683]
[233.65086365 -358.20019531]
[228.45460510 -344.03469849]
[219.76831055 -331.69732666]
[208.18421936 -322.02926636]
[194.49217224 -315.68969727]
[179.62570190 -313.11087036]
[178.28746033 -298.17068481]
[176.94923401 -283.23049927]
[178.91734314 -280.30493164]
[179.56620789 -276.28076172]
[178.39491272 -271.78839111]
[175.20303345 -267.65814209]
[173.19902039 -252.79261780]
[171.19500732 -237.92707825]
[169.19099426 -223.06155396]
[167.18698120 -208.19602966]
[174.26927185 -198.38951111]
[172.72135925 -185.98838806]
[162.83183289 -177.70828247]
[160.60671997 -162.87423706]
[162.72320557 -155.79312134]
[158.23645020 -147.83656311]
[155.79072571 -133.03729248]
[153.34500122 -118.23802185]
[160.40019226 -102.16969299]
[148.59814453 -88.03485870]
[146.37303162 -73.20081329]
[153.66667175 -57.23930740]
[142.07638550 -42.93032837]
[140.07237244 -28.06480217]
[138.06835938 -13.19927311]
[136.06434631 1.66625488]
[146.45248413 -9.15440750]
[160.83135986 -13.42614841]
[175.44238281 -10.03234577]
[186.46627808 0.13986953]
[191.02139282 14.43150425]
[187.91706848 29.10676003]
[177.96473694 40.32955933]
[163.76593018 45.16629028]
[149.03218079 42.35264206]
[137.61485291 32.62409592]
[132.49848938 18.52455521]
[128.31147766 32.92833710]
[129.46295166 40.22874069]
[123.95342255 47.51453781]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[90.86025238 166.00859070]
[85.81168365 171.40615845]
[81.19766998 185.67889404]
[76.58366394 199.95162964]
[73.47955322 214.62692261]
[71.91902924 229.54553223]
[81.59622955 241.75166321]
[79.80111694 256.85900879]
[68.10480499 266.00952148]
[66.54428101 280.92813110]
[64.98375702 295.84674072]
[63.42323685 310.76535034]
[75.02027130 301.25173950]
[90.02021027 301.29254150]
[101.56529999 310.86914062]
[104.37726593 325.60321045]
[97.17052460 338.75854492]
[83.23989868 344.32067871]
[68.95427704 339.74673462]
[60.84444809 327.12600708]
[65.55844879 342.22860718]
[55.35483932 353.07922363]
[52.25072861 367.75451660]
[49.14662170 382.42980957]
[57.50144958 395.57647705]
[54.14438248 410.41510010]
[41.55956650 418.29913330]
[38.45545578 432.97442627]
[35.35134506 447.64974976]
[32.24723816 462.32504272]
[29.14312553 477.00033569]
[30.82600021 483.39404297]
[29.26207733 488.85766602]
[25.72193909 492.06335449]
[22.18226814 506.63973999]
[18.64259529 521.21612549]
[15.10292244 535.79248047]
[11.56325054 550.36889648]
[24.99597359 557.19958496]
[36.49095535 566.94445801]
[45.42828369 579.07788086]
[51.32598114 592.94561768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[33 192]
[34 191]
[35 190]
[37 188]
[38 180]
[39 179]
[40 178]
[41 177]
[44 174]
[45 173]
[60 172]
[61 171]
[62 170]
[63 168]
[64 167]
[65 166]
[66 165]
[68 163]
[69 162]
[70 161]
[71 160]
[72 158]
[73 157]
[74 146]
[75 145]
[76 144]
[77 143]
[80 141]
[81 140]
[84 138]
[85 137]
[86 136]
[87 134]
[88 133]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
