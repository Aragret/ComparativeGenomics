%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[95.24710083 659.35980225]
[82.94129944 668.46069336]
[67.81389618 670.78887939]
[53.34106445 665.80932617]
[42.84855652 654.66632080]
[38.74747086 639.92053223]
[41.98020935 624.96026611]
[51.80390930 613.22344971]
[65.96115875 607.40704346]
[67.29939270 592.46685791]
[68.63762665 577.52667236]
[69.97586060 562.58648682]
[71.20283508 547.63671875]
[72.31848145 532.67828369]
[73.43413544 517.71984863]
[59.86132431 508.95104980]
[52.52042770 494.45046997]
[53.49953461 478.13305664]
[62.62593842 464.45809937]
[77.48747253 457.21057129]
[78.38028717 442.23715210]
[79.27310181 427.26376343]
[80.16591644 412.29034424]
[81.05873108 397.31692505]
[81.72851562 382.33190918]
[82.17512512 367.33856201]
[82.62173462 352.34518433]
[83.06833649 337.35183716]
[75.71340179 324.39984131]
[83.85815430 310.83615112]
[84.30476379 295.84280396]
[84.75137329 280.84945679]
[81.80841064 274.07003784]
[85.31789398 265.63668823]
[85.98767853 250.65164185]
[74.11860657 238.73677063]
[74.54775238 221.58653259]
[87.49779510 209.82577515]
[87.94440460 194.83242798]
[88.39100647 179.83906555]
[88.83761597 164.84571838]
[89.28421783 149.85237122]
[87.14546967 147.04914856]
[86.25822449 143.07072449]
[87.16004944 138.51660156]
[90.10044098 134.20368958]
[91.21608734 119.24523926]
[92.33174133 104.28678131]
[90.54573822 101.81702423]
[89.61890411 98.64282990]
[89.81388092 95.08116913]
[91.27254486 91.54160309]
[93.98518372 88.47981262]
[95.98919678 73.61428833]
[90.16497803 58.90411758]
[99.53328705 47.32465363]
[101.53730011 32.45912552]
[103.54132080 17.59359741]
[105.54533386 2.72806954]
[92.21603394 9.60774517]
[78.46488190 3.61560416]
[74.42871094 -10.83117008]
[83.08283234 -23.08295250]
[98.04775238 -24.10818672]
[108.29138947 -13.15268040]
[111.39550018 -27.82798195]
[114.49961090 -42.50328445]
[117.60372162 -57.17858887]
[119.38618469 -72.07230377]
[112.06319427 -86.09672546]
[120.17601013 -98.58798981]
[120.62261200 -113.58133698]
[121.06922150 -128.57469177]
[121.51582336 -143.56803894]
[111.36488342 -148.89463806]
[103.96813202 -157.58534241]
[100.36500549 -168.35983276]
[101.03974915 -179.64936829]
[105.85664368 -189.82524109]
[114.08519745 -197.43371582]
[124.51063538 -201.40373230]
[125.62628174 -216.36218262]
[126.74192810 -231.32063293]
[126.51860046 -246.31896973]
[124.95807648 -261.23757935]
[123.39755249 -276.15618896]
[121.83703613 -291.07479858]
[120.16548920 -305.98135376]
[118.38302612 -320.87509155]
[116.60056305 -335.76879883]
[114.81809235 -350.66250610]
[113.03562927 -365.55624390]
[98.19098663 -368.47030640]
[84.97438812 -375.83078003]
[74.68064880 -386.91656494]
[68.31825256 -400.64154053]
[66.51051331 -415.66110229]
[69.43454742 -430.50378418]
[76.80387115 -443.71545410]
[87.89653015 -454.00177002]
[101.62577057 -460.35494995]
[116.64654541 -462.15261841]
[131.48725891 -459.21865845]
[144.69398499 -451.84048462]
[154.97285461 -440.74093628]
[161.31686401 -427.00744629]
[163.10446167 -411.98547363]
[160.16055298 -397.14669800]
[152.77351379 -383.94491577]
[141.66708374 -373.67349243]
[127.92934418 -367.33868408]
[129.71180725 -352.44497681]
[131.49427795 -337.55126953]
[133.27674866 -322.65756226]
[135.05920410 -307.76382446]
[138.97528076 -301.49597168]
[136.75563049 -292.63531494]
[138.31616211 -277.71670532]
[139.87667847 -262.79809570]
[141.43721008 -247.87950134]
[148.21067810 -261.26309204]
[160.06744385 -270.45095825]
[174.71817017 -273.66906738]
[189.33401489 -270.29608154]
[201.09289551 -260.98327637]
[207.72434998 -247.52876282]
[207.94796753 -232.53042603]
[201.72053528 -218.88421631]
[190.24450684 -209.22499084]
[175.73571777 -205.41778564]
[160.99555969 -208.19773865]
[148.87016296 -217.02806091]
[141.70037842 -230.20498657]
[140.58473206 -215.24653625]
[139.46908569 -200.28808594]
[154.40542603 -189.05426025]
[159.59454346 -170.94345093]
[152.76560974 -153.22410583]
[136.50917053 -143.12142944]
[136.06256104 -128.12808228]
[135.61596680 -113.13473511]
[135.16935730 -98.14138031]
[142.52429199 -85.18938446]
[134.37953186 -71.62570190]
[142.88034058 -83.98435974]
[155.85832214 -91.50578308]
[170.80764771 -92.73771667]
[184.84182739 -87.44227600]
[195.25109863 -76.64194489]
[200.02557373 -62.42208481]
[198.24339294 -47.52833557]
[190.24864197 -34.83644104]
[177.58500671 -26.79701424]
[162.69763184 -24.96233559]
[148.46104431 -29.68665695]
[137.62408447 -40.05778503]
[132.27902222 -54.07447815]
[129.17491150 -39.39917374]
[126.07080078 -24.72387314]
[122.96669006 -10.04857063]
[120.41085815 4.73208332]
[118.40684509 19.59761238]
[116.40283203 34.46313858]
[114.39881897 49.32866669]
[120.36637878 62.97555161]
[110.85472870 75.61830139]
[108.85071564 90.48382568]
[107.29019165 105.40243530]
[106.17454529 120.36088562]
[105.05889130 135.31933594]
[104.27757263 150.29898071]
[103.83096313 165.29232788]
[103.38436127 180.28567505]
[102.93775177 195.27902222]
[102.49114990 210.27236938]
[112.79450226 218.94737244]
[116.17104340 231.78518677]
[111.60476685 244.04206848]
[100.97271729 251.32142639]
[100.30293274 266.30645752]
[99.74472046 281.29608154]
[99.29811096 296.28942871]
[98.85150909 311.28277588]
[106.17449188 325.30718994]
[98.06168365 337.79846191]
[97.61508179 352.79180908]
[97.16847229 367.78515625]
[96.72187042 382.77850342]
[99.51424408 388.77136230]
[98.94620514 394.42593384]
[96.03214264 398.20974731]
[95.13932037 413.18316650]
[94.24650574 428.15655518]
[93.35369110 443.12997437]
[92.46087646 458.10336304]
[104.52101898 465.18969727]
[112.31422424 476.72579956]
[114.36686707 490.42852783]
[110.33474731 503.61532593]
[101.05927277 513.72937012]
[88.39258575 518.83544922]
[87.27693939 533.79394531]
[86.16128540 548.75238037]
[88.64375305 557.54302979]
[84.91604614 563.92468262]
[83.57781219 578.86486816]
[82.23957825 593.80505371]
[80.90134430 608.74523926]
[93.79953003 616.98510742]
[101.38098145 630.28100586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 203]
[14 202]
[15 201]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 188]
[26 187]
[27 186]
[28 185]
[30 183]
[31 182]
[32 181]
[34 180]
[35 179]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[46 170]
[47 169]
[48 168]
[53 167]
[54 166]
[56 164]
[57 163]
[58 162]
[59 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 144]
[71 142]
[72 141]
[73 140]
[74 139]
[81 135]
[82 134]
[83 133]
[84 120]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
