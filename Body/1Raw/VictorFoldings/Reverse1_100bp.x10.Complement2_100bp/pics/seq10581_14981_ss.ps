%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[285.31039429 413.71078491]
[294.22259521 401.60815430]
[304.87786865 391.00790405]
[317.02645874 382.15850830]
[310.14706421 368.82907104]
[303.26763916 355.49966431]
[296.38824463 342.17022705]
[288.06628418 329.69042969]
[278.40548706 318.21572876]
[268.74465942 306.74102783]
[259.08386230 295.26632690]
[242.28149414 294.54556274]
[230.97662354 281.64151001]
[232.53211975 264.21737671]
[222.70153809 252.88780212]
[212.87095642 241.55819702]
[203.04037476 230.22860718]
[193.20979309 218.89901733]
[183.37921143 207.56942749]
[169.19407654 203.02725220]
[165.99386597 187.53308105]
[156.16328430 176.20349121]
[141.56576538 179.16627502]
[127.35063171 174.39282227]
[117.36743164 163.07019043]
[114.37239838 148.17298889]
[119.26805878 133.68231201]
[109.43747711 122.35271454]
[99.60689545 111.02312469]
[95.95909882 125.57281494]
[82.37336731 131.93110657]
[68.86459351 125.41089630]
[65.39095306 110.81864166]
[74.51307678 98.91121674]
[89.50496674 98.46566010]
[80.54426575 86.43627930]
[72.90811157 81.42360687]
[71.54129028 74.16043854]
[62.76068878 61.99898148]
[57.99771881 59.86328506]
[54.84545898 56.45497894]
[53.51893234 52.60071182]
[53.87392044 49.09267807]
[45.64511108 36.55127716]
[37.41630173 24.00987625]
[29.18749428 11.46847534]
[20.95868683 -1.07292497]
[21.40461159 13.92044544]
[15.78909588 27.82965088]
[5.05845499 38.31074524]
[-8.97900963 43.59748077]
[-23.95773888 42.79895020]
[-37.35355377 36.04972076]
[-46.90902710 24.48715210]
[-51.01388931 10.05974293]
[-48.97639847 -4.80123425]
[-41.13991165 -17.59144402]
[-28.82501411 -26.15551186]
[-14.10697937 -29.05024338]
[0.53394276 -25.78782272]
[12.63160801 -16.91679192]
[6.96882153 -30.80681992]
[1.30603504 -44.69684601]
[-9.24886227 -46.25181580]
[-18.13826180 -52.00383377]
[-23.79459190 -60.85874557]
[-25.25370979 -71.18269348]
[-22.31869507 -81.10343933]
[-15.58341789 -88.84985352]
[-20.62033463 -102.97888184]
[-25.65725136 -117.10791779]
[-27.48362541 -102.21952057]
[-33.05185699 -88.29131317]
[-41.99261856 -76.24711609]
[-53.71290207 -66.88576508]
[-67.43534851 -60.82817078]
[-82.24979401 -58.47610855]
[-97.17365265 -59.98558426]
[-111.21707153 -65.25647736]
[-123.44860840 -73.93919373]
[-133.05699158 -85.45783234]
[-139.40492249 -99.04840851]
[-142.07136536 -113.80950928]
[-140.87947083 -128.76208496]
[-135.90829468 -142.91436768]
[-127.48754883 -155.32771301]
[-116.17575836 -165.17877197]
[-102.72319031 -171.81417847]
[-88.02210999 -174.79379272]
[-73.04757690 -173.92002869]
[-58.79280853 -169.25080872]
[-46.20326996 -161.09584045]
[-36.11397552 -149.99601746]
[-29.19235420 -136.68272400]
[-29.41568184 -151.68106079]
[-29.63900948 -166.67939758]
[-29.86233711 -181.67773438]
[-30.08566475 -196.67607117]
[-44.10518646 -202.62358093]
[-54.48883820 -213.76358032]
[-59.43758774 -228.16601562]
[-58.09403610 -243.33554077]
[-50.69095993 -256.64398193]
[-38.51099014 -265.78555298]
[-23.66437531 -269.17639160]
[-8.72338581 -266.22909546]
[3.72336435 -257.45422363]
[11.51939964 -244.37210083]
[13.31400871 -229.24929810]
[8.79626751 -214.70591736]
[-1.25110090 -203.26168823]
[-15.08732700 -196.89939880]
[-14.86399937 -181.90106201]
[-14.64067173 -166.90272522]
[-14.41734409 -151.90438843]
[-14.19401646 -136.90605164]
[-11.52822113 -122.14482880]
[-6.49130487 -108.01580048]
[-1.45438862 -93.88677216]
[16.71194649 -86.85124969]
[23.95900345 -68.43974304]
[15.19606209 -50.35963440]
[20.85884857 -36.46960449]
[26.52163506 -22.57957840]
[33.50008774 -9.30173302]
[41.72889709 3.23966742]
[49.95770264 15.78106785]
[58.18651199 28.32246780]
[66.41532135 40.86386871]
[74.92214966 53.21837616]
[83.70275116 65.37983704]
[92.57364655 77.47558594]
[101.53433990 89.50495911]
[110.93649292 101.19254303]
[120.76707458 112.52214050]
[130.59765625 123.85173035]
[145.63377380 121.04778290]
[159.95997620 126.11303711]
[169.76216125 137.59274292]
[172.48396301 152.33885193]
[167.49287415 166.37290955]
[177.32345581 177.70249939]
[192.21173096 183.05503845]
[194.70880127 197.73884583]
[204.53938293 209.06843567]
[214.36996460 220.39802551]
[224.20054626 231.72763062]
[234.03112793 243.05722046]
[243.86170959 254.38681030]
[257.31732178 253.78565979]
[268.49911499 260.93951416]
[273.44570923 273.04791260]
[270.55856323 285.60552979]
[280.21936035 297.08023071]
[289.88018799 308.55493164]
[299.54098511 320.02963257]
[296.82446289 305.27764893]
[299.54876709 290.52713013]
[307.35543823 277.71871948]
[319.21743774 268.53756714]
[333.57409668 264.19168091]
[348.53649902 265.25277710]
[362.13613892 271.58123779]
[372.58374023 282.34451294]
[378.50473022 296.12646484]
[379.12008667 311.11383057]
[374.34887695 325.33477783]
[364.81884766 336.91830444]
[351.78378296 344.34039307]
[336.95870972 346.62454224]
[322.29412842 343.47021484]
[309.71765137 335.29080200]
[316.59707642 348.62023926]
[323.47650146 361.94967651]
[330.35589600 375.27911377]
[344.60699463 370.50344849]
[359.42007446 367.95928955]
[374.44793701 367.70623779]
[389.33828735 369.75030518]
[403.74206543 374.04348755]
[417.32162476 380.48519897]
[429.75866699 388.92440796]
[440.76162720 399.16333008]
[450.07260132 410.96188354]
[457.47332764 424.04354858]
[462.79028320 438.10165405]
[465.89886475 452.80667114]
[466.72619629 467.81387329]
[465.25286865 482.77145386]
[461.51342773 497.32882690]
[455.59555054 511.14474487]
[447.63793945 523.89532471]
[437.82714844 535.28161621]
[426.39315796 545.03686523]
[413.60397339 552.93225098]
[399.75939941 558.78271484]
[385.18395996 562.45117188]
[370.21936035 563.85156250]
[355.21636963 562.95117188]
[340.52670288 559.77093506]
[326.49465942 554.38555908]
[313.44921875 546.92120361]
[301.69613647 537.55285645]
[291.51098633 526.50012207]
[283.13247681 514.02209473]
[276.75698853 500.41131592]
[272.53402710 485.98678589]
[270.56256104 471.08663940]
[270.88882446 456.06021118]
[273.50512695 441.25967407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[8 156]
[9 155]
[10 154]
[11 153]
[14 149]
[15 148]
[16 147]
[17 146]
[18 145]
[19 144]
[21 142]
[22 141]
[27 136]
[28 135]
[29 134]
[35 133]
[36 132]
[38 131]
[39 130]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[61 124]
[62 123]
[63 122]
[69 119]
[70 118]
[71 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
