%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[129.04148865 400.96975708]
[132.85067749 386.42889404]
[138.88778687 372.66299438]
[147.00411987 360.01107788]
[156.99981689 348.78463745]
[168.62873840 339.26022339]
[181.60449219 331.67233276]
[176.14913940 317.69952393]
[170.69378662 303.72671509]
[165.23841858 289.75393677]
[150.96649170 279.54223633]
[153.89460754 261.36236572]
[148.23181152 247.47233582]
[142.56903076 233.58230591]
[136.90623474 219.69227600]
[132.92973328 217.04719543]
[130.57263184 211.87602234]
[131.28843689 205.30340576]
[126.04172516 191.25094604]
[120.79500580 177.19847107]
[115.54828644 163.14599609]
[110.30156708 149.09352112]
[105.05484772 135.04104614]
[93.35454559 125.82410431]
[95.77604675 110.18930817]
[87.26946259 122.54398346]
[72.31790924 123.74859619]
[61.94311905 112.91514587]
[63.79299545 98.02964783]
[76.50388336 90.06514740]
[90.70460510 94.89161682]
[86.51759338 80.48783112]
[82.33058167 66.08405304]
[78.14356995 51.68026733]
[66.86170959 40.58836746]
[70.73885345 26.20723343]
[66.55184174 11.80345058]
[62.36483383 -2.60033107]
[58.17782211 -17.00411224]
[54.40856552 -20.61517906]
[52.58382797 -24.88409424]
[52.62856674 -28.96000481]
[54.14092255 -32.14514542]
[50.60124969 -46.72151947]
[47.06157684 -61.29789734]
[43.52190781 -75.87426758]
[39.98223495 -90.45064545]
[33.80646515 -104.12031555]
[25.20790100 -116.41115570]
[16.60933685 -128.70199585]
[8.01077271 -140.99282837]
[-0.58779085 -153.28367615]
[-9.18635464 -165.57450867]
[-22.25973892 -158.19601440]
[-35.98422623 -152.11375427]
[-50.23167038 -147.38449097]
[-64.86904907 -144.05241394]
[-79.75968170 -142.14862061]
[-94.76454926 -141.69088745]
[-109.74354553 -142.68348694]
[-124.55680847 -145.11714172]
[-139.06604004 -148.96914673]
[-153.13574219 -154.20352173]
[-166.63458252 -160.77140808]
[-179.43649292 -168.61146545]
[-191.42195129 -177.65051270]
[-202.47904968 -187.80412292]
[-212.50456238 -198.97750854]
[-221.40486145 -211.06636047]
[-229.09686279 -223.95777893]
[-235.50874329 -237.53140259]
[-240.58061218 -251.66050720]
[-244.26513672 -266.21316528]
[-246.52790833 -281.05349731]
[-247.34780884 -296.04293823]
[-246.71716309 -311.04153442]
[-244.64187622 -325.90924072]
[-241.14132690 -340.50723267]
[-236.24818420 -354.69921875]
[-230.00814819 -368.35272217]
[-222.47947693 -381.34017944]
[-213.73246765 -393.54040527]
[-203.84877014 -404.83944702]
[-192.92071533 -415.13180542]
[-181.05029297 -424.32141113]
[-168.34834290 -432.32241821]
[-154.93348694 -439.06015015]
[-140.93096924 -444.47171021]
[-126.47151184 -448.50653076]
[-111.69014740 -451.12695312]
[-96.72487640 -452.30853271]
[-81.71542358 -452.04022217]
[-66.80194855 -450.32452393]
[-52.12368011 -447.17745972]
[-37.81768036 -442.62841797]
[-24.01751709 -436.71984863]
[-10.85204506 -429.50695801]
[1.55581021 -421.05706787]
[13.09019756 -411.44906616]
[23.64342117 -400.77270508]
[33.11694717 -389.12762451]
[41.42231750 -376.62255859]
[48.48199081 -363.37429810]
[54.23004913 -349.50653076]
[58.61281967 -335.14871216]
[61.58938599 -320.43490601]
[63.13195419 -305.50253296]
[63.22612000 -290.49099731]
[61.87100601 -275.54043579]
[59.07926178 -260.79046631]
[54.87695694 -246.37878418]
[49.30332565 -232.43998718]
[42.41041183 -219.10420227]
[34.26257324 -206.49594116]
[24.93588448 -194.73292542]
[14.51742840 -183.92500305]
[3.10448313 -174.17306519]
[11.70304680 -161.88223267]
[20.30161095 -149.59140015]
[28.90017509 -137.30055237]
[37.49873734 -125.00971985]
[46.09730148 -112.71887970]
[43.82581711 -127.54589844]
[44.98750305 -142.50083923]
[49.52142715 -156.79922485]
[57.18973923 -169.69096375]
[67.59018707 -180.49978638]
[80.17716980 -188.65869141]
[94.29041290 -193.73968506]
[109.18955994 -195.47621155]
[124.09302521 -193.77717590]
[138.21900940 -188.73171997]
[150.82649231 -180.60452271]
[161.25408936 -169.82189941]
[168.95483398 -156.94949341]
[173.52471924 -142.66256714]
[174.72402954 -127.71059418]
[172.48986816 -112.87791443]
[166.93942261 -98.94261932]
[158.36384583 -86.63572693]
[147.21301270 -76.60283661]
[134.07186890 -69.37024689]
[119.62976837 -65.31737518]
[104.64431763 -64.65682220]
[89.90162659 -67.42323303]
[76.17506409 -73.47149658]
[64.18470001 -82.48432922]
[54.55860901 -93.99031830]
[58.09828186 -79.41394043]
[61.63795471 -64.83757019]
[65.17762756 -50.26119232]
[68.71730042 -35.68481827]
[72.58160400 -21.19112396]
[76.76861572 -6.78734207]
[80.95562744 7.61643982]
[85.14263916 22.02022171]
[96.12501526 32.08186722]
[92.54734802 47.49325562]
[96.73435974 61.89703751]
[100.92137146 76.30081940]
[105.10838318 90.70460510]
[109.82852173 104.94258881]
[121.90410614 115.16466522]
[119.10732269 129.79434204]
[124.35404205 143.84680176]
[129.60075378 157.89927673]
[134.84747314 171.95175171]
[140.09419250 186.00422668]
[145.34091187 200.05668640]
[150.79626465 214.02949524]
[156.45906067 227.91950989]
[162.12184143 241.80953979]
[167.78462219 255.69956970]
[179.34877014 261.41210938]
[183.77937317 273.09774780]
[179.21122742 284.29855347]
[184.66658020 298.27136230]
[190.12193298 312.24417114]
[195.57728577 326.21694946]
[210.26174927 323.00555420]
[225.26780701 322.13098145]
[240.22590637 323.61477661]
[254.76771545 327.42034912]
[268.53509521 333.45404053]
[281.18905640 341.56726074]
[292.41793823 351.56018066]
[301.94525146 363.18673706]
[309.53637695 376.16061401]
[315.00433350 390.16232300]
[318.21450806 404.84704590]
[319.08786011 419.85317993]
[317.60284424 434.81115723]
[313.79605103 449.35263062]
[307.76123047 463.11953735]
[299.64697266 475.77279663]
[289.65313721 487.00088501]
[278.02578735 496.52722168]
[265.05126953 504.11727905]
[251.04913330 509.58407593]
[236.36413574 512.79302979]
[221.35794067 513.66516113]
[206.40008545 512.17889404]
[191.85890198 508.37091064]
[178.09251404 502.33496094]
[165.43991089 494.21966553]
[154.21266174 484.22488403]
[144.68727112 472.59677124]
[137.09829712 459.62164307]
[131.63264465 445.61901855]
[128.42488098 430.93377686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[9 177]
[10 176]
[12 173]
[13 172]
[14 171]
[15 170]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[25 162]
[31 161]
[32 160]
[33 159]
[34 158]
[36 156]
[37 155]
[38 154]
[39 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
