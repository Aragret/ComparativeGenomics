%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[92.91371155 471.76931763]
[82.53782654 482.64761353]
[70.55122375 491.72052002]
[57.26438904 498.75302124]
[43.02147293 503.56295776]
[28.19141006 506.02575684]
[13.15832996 506.07760620]
[-1.68837237 503.71719360]
[-15.96413231 499.00561523]
[-29.29917336 492.06497192]
[-41.34808350 483.07498169]
[-51.79877090 472.26852417]
[-60.38053894 459.92553711]
[-66.87109375 446.36569214]
[-71.10231781 431.94027710]
[-72.96460724 417.02291870]
[-72.40972900 401.99996948]
[-69.45205688 387.26062012]
[-64.16819763 373.18664551]
[-56.69502258 360.14257812]
[-47.22609711 348.46627808]
[-36.00669479 338.46023560]
[-23.32741928 330.38360596]
[-9.51670074 324.44555664]
[5.06773376 320.79995728]
[20.04811096 319.54119873]
[35.03640366 320.70190430]
[38.57607651 306.12554932]
[42.11574936 291.54916382]
[34.17126846 279.00241089]
[37.55335617 264.16946411]
[50.76740265 255.92164612]
[54.30707550 241.34527588]
[57.84674835 226.76889038]
[61.38642120 212.19252014]
[64.92609406 197.61614990]
[58.90245438 187.12603760]
[61.73212051 174.95324707]
[72.42939758 167.74693298]
[76.18569946 153.22486877]
[74.72093201 150.01756287]
[74.73687744 145.94143677]
[76.62497711 141.70016479]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[93.06276703 70.67013550]
[104.19373322 60.77311325]
[108.59472656 46.43326569]
[109.93296051 31.49308205]
[108.15049744 16.59936333]
[106.36803436 1.70564675]
[104.58556366 -13.18807030]
[102.80310059 -28.08178711]
[101.02062988 -42.97550583]
[99.23816681 -57.86922073]
[97.45570374 -72.76293945]
[95.67323303 -87.65665436]
[93.89076996 -102.55037689]
[80.82533264 -104.43353271]
[68.60379791 -109.39443207]
[57.93915176 -117.13826752]
[49.45227432 -127.20800018]
[43.63576126 -139.01139832]
[40.82534790 -151.85581970]
[41.18054199 -164.98889160]
[44.67554855 -177.64251709]
[51.10111237 -189.07789612]
[60.07701111 -198.62858582]
[71.07455444 -205.73934937]
[83.44774628 -209.99845886]
[82.33209991 -224.95690918]
[81.21645355 -239.91535950]
[65.82652283 -243.15406799]
[51.98339081 -250.58712769]
[40.80274582 -261.60617065]
[33.18306732 -275.31423950]
[29.73344612 -290.59872437]
[30.72489548 -306.22171021]
[36.06906891 -320.92019653]
[45.32608032 -333.50827026]
[57.74068451 -342.97271729]
[72.30390930 -348.55462646]
[70.96567535 -363.49481201]
[69.62744141 -378.43499756]
[68.28920746 -393.37518311]
[66.95097351 -408.31536865]
[52.02247620 -410.33718872]
[37.91835403 -415.63070679]
[25.34605789 -423.93041992]
[14.93621063 -434.82000732]
[7.21096611 -447.75323486]
[2.55781937 -462.08135986]
[1.21016967 -477.08575439]
[3.23561502 -492.01376343]
[8.53255939 -506.11660767]
[16.83531189 -518.68688965]
[27.72740746 -529.09411621]
[40.66250610 -536.81622314]
[54.99178696 -541.46588135]
[69.99649811 -542.80987549]
[84.92401123 -540.78082275]
[99.02556610 -535.48046875]
[111.59384155 -527.17468262]
[121.99840546 -516.28002930]
[129.71737671 -503.34307861]
[134.36358643 -489.01269531]
[135.70396423 -474.00765991]
[133.67127991 -459.08062744]
[128.36750793 -444.98034668]
[120.05866241 -432.41409302]
[109.16152954 -422.01217651]
[96.22268677 -414.29632568]
[81.89115906 -409.65359497]
[83.22939301 -394.71340942]
[84.56762695 -379.77322388]
[85.90586090 -364.83303833]
[87.24409485 -349.89285278]
[101.35669708 -347.38656616]
[114.34880829 -341.30377197]
[125.33022308 -332.05435181]
[133.54672241 -320.26531982]
[138.43186951 -306.73846436]
[139.64601135 -292.39566040]
[137.09994507 -278.21621704]
[130.96141052 -265.16983032]
[121.64405823 -254.15048218]
[109.77958679 -245.91494751]
[96.17490387 -241.03100586]
[97.29055023 -226.07255554]
[98.40620422 -211.11410522]
[114.89295197 -207.46231079]
[129.46682739 -198.89743042]
[140.70300293 -186.24397278]
[147.49903870 -170.72677612]
[149.18298340 -153.85246277]
[145.57987976 -137.26318359]
[137.02976990 -122.57673645]
[124.35569000 -111.22885132]
[108.78448486 -104.33283997]
[110.56695557 -89.43912506]
[112.34941864 -74.54540253]
[114.13188171 -59.65168762]
[115.91435242 -44.75797272]
[117.69681549 -29.86425400]
[119.47927856 -14.97053623]
[121.26174927 -0.07681916]
[123.04421234 14.81689835]
[124.82668304 29.71061516]
[129.81365967 15.56388378]
[137.59619141 2.74077463]
[147.84336853 -8.21346569]
[160.11947632 -16.83305740]
[173.90251160 -22.75149345]
[188.60643005 -25.71711540]
[203.60600281 -25.60382652]
[218.26344299 -22.41644096]
[231.95550537 -16.29049110]
[244.10000610 -7.48645306]
[254.18055725 3.62131977]
[261.76852417 16.56052017]
[266.54122925 30.78096581]
[268.29580688 45.67799759]
[266.95758057 60.61818314]
[262.58349609 74.96626282]
[255.35951233 88.11214447]
[245.59283447 99.49685669]
[233.69869995 108.63632965]
[220.18289185 115.14192963]
[205.62010193 118.73704529]
[190.62951660 119.26881409]
[175.84858704 116.71461487]
[161.90577698 111.18305969]
[149.39395142 102.90935516]
[138.84512329 92.24529266]
[130.70782471 79.64432526]
[125.32806396 65.64225006]
[122.93457794 50.83426285]
[118.53357697 65.17411041]
[122.19617462 79.61137390]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.70775604 156.98117065]
[86.95145416 171.50321960]
[92.28216553 189.12892151]
[79.50246429 201.15582275]
[75.96279144 215.73219299]
[72.42312622 230.30856323]
[68.88345337 244.88494873]
[65.34378052 259.46130371]
[73.30347443 272.85089111]
[69.50609589 287.58300781]
[56.69212341 295.08883667]
[53.15245056 309.66522217]
[49.61278152 324.24157715]
[63.46413803 330.08419800]
[76.19882965 338.07318115]
[87.48700714 348.00158691]
[97.03626251 359.61224365]
[104.59925079 372.60446167]
[109.98008728 386.64166260]
[113.03937531 401.36022949]
[113.69788361 416.37899780]
[111.93856049 431.30883789]
[107.80696106 445.76312256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 200]
[28 199]
[29 198]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[39 189]
[40 188]
[44 187]
[45 186]
[46 185]
[48 183]
[50 181]
[51 180]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[73 133]
[74 132]
[75 131]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
