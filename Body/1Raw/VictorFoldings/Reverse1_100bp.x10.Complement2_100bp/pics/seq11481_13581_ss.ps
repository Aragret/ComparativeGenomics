%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[64.78527832 512.19604492]
[70.10474396 526.28143311]
[72.37906647 541.16497803]
[71.50881958 556.19616699]
[67.53205109 570.71783447]
[60.62261581 584.09521484]
[51.08255005 595.74340820]
[39.32891464 605.15332031]
[25.87552261 611.91345215]
[11.31050014 615.72839355]
[-3.72943163 616.43133545]
[-18.58679199 613.99157715]
[-32.61208344 608.51574707]
[-45.19217300 600.24316406]
[-55.77712250 589.53558350]
[-63.90419769 576.86102295]
[-69.21811676 562.77362061]
[-71.48658752 547.88909912]
[-70.61042786 532.85827637]
[-66.62795258 518.33819580]
[-59.71324921 504.96356201]
[-50.16860580 493.31909180]
[-38.41126633 483.91384888]
[-24.95521736 477.15896606]
[-10.38869572 473.34976196]
[4.65151167 472.65270996]
[19.50791168 475.09832764]
[24.96326828 461.12554932]
[30.41862488 447.15274048]
[35.87398148 433.17996216]
[39.63028336 418.65789795]
[41.63429642 403.79235840]
[43.63830948 388.92681885]
[45.64232254 374.06130981]
[43.51049805 369.78762817]
[44.04074097 364.12936401]
[47.93370056 358.78555298]
[50.37942505 343.98626709]
[52.82515335 329.18701172]
[55.27088165 314.38772583]
[57.71660995 299.58847046]
[52.15801239 285.76995850]
[62.04187012 273.41601562]
[64.48759460 258.61672974]
[66.93332672 243.81745911]
[69.37905121 229.01818848]
[60.48354340 219.69621277]
[58.55255890 206.75968933]
[64.51267242 194.89851379]
[76.38820648 188.54348755]
[79.05400085 173.78227234]
[73.70175934 159.88253784]
[83.76844788 147.67710876]
[78.41620636 133.77737427]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[82.97892761 80.97261810]
[80.84584045 65.89603424]
[87.91579437 52.61146545]
[101.29244232 46.11506653]
[103.73816681 31.31579399]
[106.18389893 16.51652336]
[108.62962341 1.71725321]
[111.07535553 -13.08201790]
[113.52108002 -27.88128853]
[115.96680450 -42.68056107]
[118.41253662 -57.47983170]
[116.57294464 -62.36480331]
[116.77125549 -67.00312042]
[118.57226562 -70.65981293]
[121.31211090 -72.87917328]
[124.41622162 -87.55448151]
[127.52033234 -102.22978210]
[130.62445068 -116.90508270]
[133.72856140 -131.58038330]
[136.83267212 -146.25569153]
[139.16815186 -161.07275391]
[140.61756897 -176.00256348]
[141.95581055 -190.94274902]
[143.29403687 -205.88293457]
[144.63227844 -220.82312012]
[145.97050476 -235.76330566]
[147.19747925 -250.71304321]
[138.81919861 -267.11077881]
[149.25804138 -281.21743774]
[150.15086365 -296.19082642]
[151.04367065 -311.16424561]
[151.93649292 -326.13763428]
[152.82929993 -341.11105347]
[138.19973755 -344.59631348]
[124.39772797 -350.56921387]
[111.84267426 -358.84820557]
[100.91613007 -369.18173218]
[91.95012665 -381.25573730]
[85.21714020 -394.70333862]
[80.92178345 -409.11587524]
[79.19457245 -424.05535889]
[80.08800507 -439.06777954]
[83.57493591 -453.69692993]
[89.54938507 -467.49829102]
[97.82981110 -480.05239868]
[108.16457367 -490.97778320]
[120.23960876 -499.94238281]
[133.68797302 -506.67385864]
[148.10099792 -510.96759033]
[163.04066467 -512.69311523]
[178.05297852 -511.79797363]
[192.68174744 -508.30938721]
[206.48242188 -502.33337402]
[219.03558350 -494.05151367]
[229.95979309 -483.71551514]
[238.92304993 -471.63946533]
[245.65298462 -458.19033813]
[249.94508362 -443.77682495]
[251.66889954 -428.83694458]
[250.77206421 -413.82473755]
[247.28181458 -399.19635010]
[241.30422974 -385.39636230]
[233.02096558 -372.84414673]
[222.68373108 -361.92111206]
[210.60665894 -352.95922852]
[197.15675354 -346.23080444]
[182.74276733 -341.94036865]
[167.80270386 -340.21823120]
[166.90989685 -325.24481201]
[166.01707458 -310.27142334]
[165.12426758 -295.29800415]
[164.23144531 -280.32461548]
[172.02349854 -271.07202148]
[171.40222168 -258.59011841]
[162.15592957 -249.59738159]
[164.79324341 -242.69329834]
[160.91069031 -234.42506409]
[159.57246399 -219.48487854]
[158.23422241 -204.54469299]
[156.89599609 -189.60450745]
[155.55775452 -174.66433716]
[158.09197998 -167.72174072]
[154.08676147 -159.51223755]
[165.68379211 -169.02584839]
[180.68373108 -168.98503113]
[192.22882080 -159.40844727]
[195.04078674 -144.67437744]
[187.83404541 -131.51904297]
[173.90341187 -125.95687866]
[159.61779785 -130.53083801]
[151.50796509 -143.15158081]
[148.40385437 -128.47627258]
[145.29974365 -113.80097198]
[142.19563293 -99.12567139]
[139.09152222 -84.45037079]
[135.98741150 -69.77506256]
[133.21180725 -55.03410339]
[130.76608276 -40.23483276]
[128.32035828 -25.43556023]
[125.87462616 -10.63629055]
[123.42889404 4.16298056]
[120.98316956 18.96225166]
[118.53744507 33.76152420]
[116.09171295 48.56079483]
[126.66703033 59.01549530]
[129.08697510 73.86836243]
[122.21668243 87.45704651]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[108.40568542 139.19331360]
[98.52966309 150.34291077]
[103.69123840 165.29847717]
[93.81521606 176.44807434]
[91.14942169 191.20928955]
[101.38536835 205.39535522]
[98.25613403 222.26316833]
[84.17832184 231.46392822]
[81.73259735 246.26319885]
[79.28686523 261.06246948]
[76.84114075 275.86172485]
[82.22480011 290.73880005]
[72.51587677 302.03417969]
[70.07015228 316.83346558]
[67.62442780 331.63272095]
[65.17869568 346.43200684]
[62.73297119 361.23126221]
[60.50785065 376.06530762]
[58.50383759 390.93084717]
[56.49982452 405.79638672]
[54.49581146 420.66189575]
[63.44254303 408.62213135]
[75.92935181 400.31072998]
[90.48930359 396.70407104]
[105.41190338 398.22592163]
[118.94406128 404.69744873]
[129.49603271 415.35839844]
[135.82818604 428.95632935]
[137.19662476 443.89376831]
[133.44059753 458.41589355]
[125.00132751 470.81665039]
[112.87027740 479.63922119]
[98.47258759 483.84710693]
[83.49967194 482.94601440]
[69.71054840 477.04177856]
[58.72514725 466.82800293]
[51.83401489 453.50463867]
[49.84677887 438.63531494]
[44.39142227 452.60809326]
[38.93606567 466.58090210]
[33.48070908 480.55371094]
[46.06405640 488.82128906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 209]
[28 208]
[29 207]
[30 206]
[31 189]
[32 188]
[33 187]
[34 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[43 179]
[44 178]
[45 177]
[46 176]
[50 173]
[51 172]
[53 170]
[55 168]
[56 167]
[57 165]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 140]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 132]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
