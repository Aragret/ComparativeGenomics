%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[120.49749756 533.22583008]
[116.72951508 518.66418457]
[115.62237549 503.66372681]
[117.21168518 488.70666504]
[121.44633484 474.27380371]
[128.19021606 460.82910156]
[137.22653198 448.80474854]
[148.26480103 438.58731079]
[160.95019531 430.50518799]
[174.87492371 424.81820679]
[171.77081299 410.14291382]
[168.66670227 395.46762085]
[165.56259155 380.79229736]
[162.45848083 366.11700439]
[159.24520874 351.46520996]
[148.88117981 340.76773071]
[153.36981201 325.59661865]
[149.93875122 310.99429321]
[146.39907837 296.41790771]
[142.85940552 281.84152222]
[139.31973267 267.26516724]
[135.34762573 252.80062866]
[130.94664001 238.46078491]
[126.54563904 224.12094116]
[122.82096863 221.13163757]
[120.93461609 215.77079773]
[122.23394775 209.28825378]
[111.40259552 199.06420898]
[115.20931244 183.70779419]
[111.23721313 169.24327087]
[107.26512146 154.77874756]
[103.29302216 140.31422424]
[89.35026550 139.02133179]
[76.68379974 133.05201721]
[66.81160736 123.12166595]
[60.91679001 110.42035675]
[59.70581055 96.47024536]
[63.32378387 82.94315338]
[71.33712769 71.46018982]
[82.78549957 63.39751053]
[79.02920532 48.87545395]
[75.27290344 34.35339355]
[71.51660156 19.83133507]
[67.76029968 5.30927515]
[64.00399780 -9.21278381]
[60.24769974 -23.73484230]
[56.49139786 -38.25690079]
[52.73509598 -52.77896118]
[48.97879791 -67.30101776]
[45.22249603 -81.82308197]
[40.50930786 -67.58279419]
[30.14665604 -56.73772430]
[16.13540649 -51.38189316]
[1.18091393 -52.54942703]
[-11.82934570 -60.01489258]
[-20.38329315 -72.33682251]
[-22.82929802 -87.13604736]
[-18.69507217 -101.55506897]
[-8.77887154 -112.80979919]
[5.00464201 -118.72712708]
[19.99408722 -118.16450500]
[33.29523849 -111.23057556]
[42.34037399 -99.26300049]
[41.22472763 -114.22145844]
[40.10907745 -129.17991638]
[31.36679840 -142.36637878]
[38.13605499 -155.63388062]
[34.73537445 -161.30369568]
[34.71205139 -166.98669434]
[37.21665573 -171.05314636]
[36.54687119 -186.03819275]
[25.16606331 -196.67373657]
[24.70027351 -211.88024902]
[34.90978241 -222.66456604]
[34.23999786 -237.64959717]
[33.57021332 -252.63464355]
[18.91980553 -256.27407837]
[5.90166855 -263.88659668]
[-4.43349028 -274.84786987]
[-11.25430393 -288.26370239]
[-14.01561546 -303.04299927]
[-12.50204372 -317.98638916]
[-6.84475660 -331.88372803]
[2.48984838 -343.61193848]
[14.73858452 -352.22586060]
[28.90386581 -357.03439331]
[28.23407936 -372.01943970]
[19.88828659 -385.46035767]
[27.04956818 -398.52044678]
[26.37978172 -413.50546265]
[25.70999718 -428.49050903]
[16.73556137 -437.75454712]
[16.48619270 -450.24938965]
[24.55027008 -459.26589966]
[24.10366440 -474.25924683]
[23.65705872 -489.25259399]
[23.21045303 -504.24594116]
[22.76384735 -519.23931885]
[8.80029297 -525.40222168]
[-1.09989655 -537.01898193]
[-4.97103310 -551.78308105]
[-2.04449940 -566.76300049]
[7.09863949 -578.98449707]
[20.64300537 -586.02105713]
[35.89935684 -586.47546387]
[49.83853149 -580.25756836]
[59.69289780 -568.60192871]
[63.50586319 -553.82275391]
[60.52036285 -538.85449219]
[51.32916641 -526.66906738]
[37.75719452 -519.68591309]
[38.20380402 -504.69256592]
[38.65040970 -489.69921875]
[39.09701538 -474.70587158]
[39.54362106 -459.71249390]
[49.55782700 -445.30130005]
[40.69503784 -429.16030884]
[41.36482239 -414.17526245]
[42.03460693 -399.19021606]
[50.33249283 -386.82113647]
[43.21912003 -372.68923950]
[43.88890457 -357.70419312]
[58.42669678 -354.17858887]
[71.39508820 -346.69177246]
[81.73880768 -335.84313965]
[88.61339569 -322.50595093]
[91.45411682 -307.75717163]
[90.02235413 -292.79046631]
[84.42564392 -278.81961060]
[75.10961151 -266.97998047]
[62.82254410 -258.23638916]
[48.55525208 -253.30442810]
[49.22503662 -238.31938171]
[49.89482117 -223.33435059]
[61.02574921 -213.50387573]
[61.91847610 -198.31646729]
[51.53190994 -186.70797729]
[52.20169449 -171.72293091]
[53.09450912 -156.74952698]
[61.75699234 -144.63298035]
[55.06753159 -130.29556274]
[56.18317795 -115.33710480]
[57.29882812 -100.37865448]
[59.74455643 -85.57938385]
[63.50085449 -71.05731964]
[67.25715637 -56.53526306]
[71.01345825 -42.01320267]
[74.76976013 -27.49114418]
[78.52606201 -12.96908474]
[82.28235626 1.55297458]
[86.03865814 16.07503319]
[89.79496002 30.59709358]
[93.55126190 45.11915207]
[97.30756378 59.64121246]
[112.98347473 61.69190216]
[126.67594147 69.59481049]
[136.29319763 82.14263916]
[140.36604309 97.41848755]
[138.27227783 113.08870697]
[130.33175659 126.75939941]
[117.75754547 136.34213257]
[121.72964478 150.80665588]
[125.70173645 165.27117920]
[129.67382812 179.73570251]
[140.78930664 190.99433899]
[136.69847107 205.31616211]
[140.88548279 219.71994019]
[145.28648376 234.05978394]
[149.68748474 248.39964294]
[152.96958923 251.24247742]
[154.97468567 254.64013672]
[155.68515015 258.12304688]
[155.23770142 261.26412964]
[153.89610291 263.72549438]
[157.43577576 278.30184937]
[160.97544861 292.87823486]
[164.51512146 307.45462036]
[169.58123779 315.05541992]
[167.99726868 322.27435303]
[178.59892273 334.01809692]
[173.87266541 348.14294434]
[178.82505798 355.81835938]
[177.13378906 363.01290894]
[180.23789978 377.68820190]
[183.34201050 392.36349487]
[186.44612122 407.03878784]
[189.55023193 421.71411133]
[204.58509827 421.27557373]
[219.45663452 423.52883911]
[233.68676758 428.40155029]
[246.81805420 435.73703003]
[258.42837524 445.29943848]
[268.14453125 456.78143311]
[275.65417480 469.81390381]
[280.71588135 483.97790527]
[283.16696167 498.81811523]
[282.92861938 513.85748291]
[280.00851440 528.61260986]
[274.50048828 542.60906982]
[266.58166504 555.39703369]
[256.50656128 566.56536865]
[244.59902954 575.75506592]
[231.24189758 582.67077637]
[216.86450195 587.09008789]
[201.92904663 588.87103271]
[186.91561890 587.95623779]
[172.30683899 584.37524414]
[158.57234192 578.24310303]
[146.15361023 569.75695801]
[135.44987488 559.18951416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 181]
[17 179]
[18 177]
[19 176]
[20 175]
[21 174]
[22 169]
[23 168]
[24 167]
[27 166]
[29 164]
[30 163]
[31 162]
[32 161]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[63 143]
[64 142]
[65 141]
[67 139]
[70 138]
[71 137]
[74 134]
[75 133]
[76 132]
[86 122]
[87 121]
[89 119]
[90 118]
[91 117]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
