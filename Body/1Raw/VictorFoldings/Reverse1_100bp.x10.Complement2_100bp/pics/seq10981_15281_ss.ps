%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[15.68215942 630.98175049]
[6.56743193 643.18182373]
[-6.72466946 650.61413574]
[-21.89120865 651.99108887]
[-36.30448914 647.07409668]
[-47.46732712 636.71496582]
[-53.44569016 622.70855713]
[-53.20379257 607.48156738]
[-46.78354263 593.67218018]
[-35.29728699 583.67285156]
[-20.73509216 579.21612549]
[-18.95262527 564.32244873]
[-17.17016029 549.42871094]
[-15.38769341 534.53497314]
[-24.76682472 523.02117920]
[-23.17131805 507.89147949]
[-11.03099728 498.13183594]
[-9.24853230 483.23812866]
[-7.46606588 468.34439087]
[-5.68359995 453.45068359]
[-3.90113401 438.55697632]
[-12.82041740 450.61709595]
[-25.45488358 458.70227051]
[-40.14225006 461.74877930]
[-54.95014191 459.35580444]
[-67.93032837 451.83816528]
[-77.37503815 440.18496704]
[-82.04165649 425.92935181]
[-81.31621552 410.94689941]
[-75.29415894 397.20883179]
[-64.76779175 386.52258301]
[-51.12202835 380.29415894]
[-36.15221786 379.34301758]
[-21.82788658 383.79425049]
[-10.03365135 393.06225586]
[-2.32124567 405.92767334]
[0.29461473 420.70019531]
[5.33153105 406.57116699]
[10.36844730 392.44213867]
[7.35415745 377.85571289]
[19.27621460 367.45498657]
[18.10343170 364.12979126]
[18.48297310 360.07135010]
[20.74192429 356.01544189]
[24.86640358 352.81610107]
[30.52919006 338.92608643]
[36.19197464 325.03604126]
[41.12356949 310.86990356]
[45.31058121 296.46612549]
[49.49759293 282.06234741]
[53.68460464 267.65856934]
[57.87161636 253.25479126]
[62.05862427 238.85099792]
[66.24563599 224.44721985]
[69.89372253 209.89759827]
[72.99783325 195.22230530]
[76.10194397 180.54699707]
[79.20605469 165.87168884]
[72.87538910 149.50436401]
[85.29681396 135.91061401]
[88.18208313 121.19072723]
[91.06735992 106.47083282]
[77.35221100 112.54493713]
[63.98209381 105.74494171]
[60.81296158 91.08354187]
[70.18097687 79.36858368]
[85.18038940 79.23589325]
[94.75378418 90.78169250]
[98.72588348 76.31716919]
[102.69797516 61.85264206]
[101.37657166 56.80279160]
[102.05635834 52.21027756]
[104.22801971 48.76079178]
[107.18389130 46.83851624]
[111.79790497 32.56578064]
[116.41191101 18.29304886]
[120.81291199 3.95320201]
[124.99992371 -10.45057964]
[115.66428375 -22.70423698]
[115.33788300 -37.92747116]
[123.93635559 -50.27778244]
[137.99020386 -55.13859177]
[142.17721558 -69.54237366]
[146.36422729 -83.94615173]
[150.55123901 -98.34993744]
[149.94165039 -107.46400452]
[154.90930176 -112.93613434]
[159.31028748 -127.27598572]
[155.96247864 -142.73893738]
[167.09344482 -152.63595581]
[169.86904907 -167.37690735]
[170.98469543 -182.33537292]
[172.10035706 -197.29382324]
[164.29035950 -207.55865479]
[165.52754211 -219.99461365]
[174.60591125 -227.98896790]
[175.94415283 -242.92915344]
[177.28237915 -257.86932373]
[178.62062073 -272.80950928]
[164.70034790 -278.73248291]
[153.29302979 -288.66867065]
[145.51620483 -301.64468384]
[142.13179016 -316.38919067]
[143.47134399 -331.45773315]
[149.40362549 -345.37402344]
[159.34747314 -356.77468872]
[172.32867432 -364.54281616]
[187.07545471 -367.91735840]
[202.14308167 -366.56768799]
[216.05540466 -360.62606812]
[227.44940186 -350.67459106]
[235.20883179 -337.68820190]
[238.57348633 -322.93914795]
[237.21372986 -307.87243652]
[231.26280212 -293.96411133]
[221.30369568 -282.57678223]
[208.31208801 -274.82604980]
[193.56080627 -271.47128296]
[192.22256470 -256.53109741]
[190.88433838 -241.59091187]
[189.54609680 -226.65072632]
[197.77685547 -211.15164185]
[187.05880737 -196.17817688]
[185.94316101 -181.21971130]
[184.82749939 -166.26126099]
[193.19938660 -178.70761108]
[205.46022034 -187.34890747]
[219.99690247 -191.04820251]
[234.89688110 -189.31881714]
[248.19979858 -182.38827515]
[258.15542603 -171.16841125]
[263.45394897 -157.13539124]
[263.39822388 -142.13549805]
[257.99560547 -128.14222717]
[247.95690918 -116.99662018]
[234.60287476 -110.16510010]
[219.69046021 -108.54644775]
[205.18165588 -112.35363770]
[192.98535156 -121.08576202]
[184.70616150 -133.59396362]
[181.43328857 -148.23495483]
[185.09588623 -133.79768372]
[173.65014648 -122.87498474]
[169.24914551 -108.53514099]
[164.95501709 -94.16292572]
[160.76800537 -79.75914001]
[156.58099365 -65.35536194]
[152.39398193 -50.95158005]
[161.65202332 -39.31428146]
[162.28985596 -24.27908134]
[153.85346985 -11.60308647]
[139.40370178 -6.26356888]
[135.21669006 8.14021301]
[136.69096375 12.68284988]
[135.32723999 18.19984818]
[130.68464661 22.90705872]
[126.07063293 37.17979050]
[121.45662689 51.45252609]
[117.16250610 65.82473755]
[113.19040680 80.28926086]
[109.21830750 94.75378418]
[105.78724670 109.35610962]
[102.90197754 124.07599640]
[100.01670074 138.79589844]
[106.55157471 149.91606140]
[103.84539032 162.11689758]
[93.88135529 168.97579956]
[90.77724457 183.65110779]
[87.67313385 198.32641602]
[84.56903076 213.00170898]
[98.37308502 207.13247681]
[111.64048004 214.13078308]
[114.59097290 228.83773804]
[105.04957581 240.41192627]
[90.04985046 240.32128906]
[80.64942169 228.63423157]
[76.46240997 243.03800964]
[72.27539825 257.44180298]
[68.08838654 271.84558105]
[63.90137482 286.24935913]
[59.71436310 300.65313721]
[55.52735138 315.05691528]
[68.63053131 307.75576782]
[83.38443756 310.46173096]
[93.04379272 321.93765259]
[93.19245911 336.93692017]
[83.76248169 348.60205078]
[69.06510925 351.59991455]
[55.81978226 344.55993652]
[50.08200455 330.69885254]
[44.41921616 344.58886719]
[38.75643158 358.47888184]
[33.40524292 372.49191284]
[36.05926132 388.08892822]
[24.49747658 397.47906494]
[19.46055984 411.60809326]
[14.42364407 425.73712158]
[10.99258327 440.33941650]
[9.21011734 455.23315430]
[7.42765141 470.12686157]
[5.64518547 485.02056885]
[3.86271954 499.91430664]
[13.35711861 512.26312256]
[11.33727741 527.34210205]
[-0.49397638 536.31744385]
[-2.27644229 551.21118164]
[-4.05890799 566.10491943]
[-5.84137392 580.99859619]
[7.25787258 588.76580811]
[16.06012154 601.19323730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[37 197]
[38 196]
[39 195]
[41 193]
[45 192]
[46 191]
[47 190]
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 170]
[56 169]
[57 168]
[58 167]
[60 164]
[61 163]
[62 162]
[68 161]
[69 160]
[70 159]
[74 158]
[75 157]
[76 156]
[77 153]
[78 152]
[82 148]
[83 147]
[84 146]
[85 145]
[87 144]
[88 143]
[90 141]
[91 125]
[92 124]
[93 123]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
