%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[129.90098572 553.61785889]
[122.28952789 566.58380127]
[112.64764404 578.11999512]
[101.23836517 587.91174316]
[88.37294769 595.69189453]
[74.40236664 601.24822998]
[59.70775223 604.42913818]
[44.68998718 605.14782715]
[29.75876427 603.38476562]
[15.32141590 599.18798828]
[1.77180696 592.67205811]
[-10.52042103 584.01458740]
[-21.21992683 573.45190430]
[-30.03482056 561.27209473]
[-36.72462463 547.80749512]
[-41.10683441 533.42535400]
[-43.06190491 518.51806641]
[-42.53649902 503.49227905]
[-39.54494476 488.75793457]
[-34.16886139 474.71701050]
[-26.55490685 461.75253296]
[-16.91079903 450.21820068]
[-5.49963427 440.42864990]
[7.36728191 432.65097046]
[21.33893013 427.09735107]
[36.03415680 423.91925049]
[51.05205917 423.20343018]
[65.98294067 424.96936035]
[70.16995239 410.56558228]
[74.35696411 396.16180420]
[78.54397583 381.75802612]
[82.73098755 367.35424805]
[86.91799927 352.95043945]
[91.10501099 338.54666138]
[93.21963501 323.69647217]
[93.21963501 308.69647217]
[93.21963501 293.69647217]
[85.48233795 280.96920776]
[93.21963501 267.16903687]
[93.21963501 252.16902161]
[82.53876495 241.85134888]
[82.32508087 226.63920593]
[93.21963501 215.50608826]
[93.21963501 200.50608826]
[93.21963501 185.50608826]
[83.63893890 170.80311584]
[92.97838593 154.93313599]
[92.75505829 139.93479919]
[92.53173065 124.93646240]
[92.30840302 109.93812561]
[85.73944855 123.42326355]
[75.81720734 134.67266846]
[63.25798798 142.87425232]
[48.96844482 147.43592834]
[33.98014832 148.02839661]
[19.37512207 144.60885620]
[6.20771170 137.42420959]
[-4.57151413 126.99308014]
[-12.18439388 114.06852722]
[-16.08134842 99.58358002]
[-15.98105049 84.58391571]
[-11.89074421 70.15237427]
[-4.10571003 57.33078003]
[6.81204271 47.04473877]
[20.07435226 40.03680420]
[34.72380066 36.81288910]
[49.70283508 37.60572433]
[63.93009949 42.35808182]
[76.37852478 50.72688293]
[86.14943695 62.10797501]
[92.53747559 75.67974854]
[95.08151245 90.46360016]
[99.48251343 76.12375641]
[89.13855743 64.85655212]
[85.84486389 50.02252579]
[90.38822174 35.62723923]
[101.45297241 25.50660515]
[115.99993134 22.30477333]
[120.40092468 7.96492577]
[124.80192566 -6.37492132]
[129.20292664 -20.71476936]
[133.60392761 -35.05461502]
[138.00491333 -49.39446259]
[142.40591431 -63.73431015]
[145.18153381 -78.47527313]
[146.29718018 -93.43372345]
[147.41282654 -108.39218140]
[148.52847290 -123.35063171]
[149.64411926 -138.30908203]
[150.75976562 -153.26753235]
[151.09474182 -168.26379395]
[142.94999695 -181.82748413]
[150.30493164 -194.77947998]
[149.85832214 -209.77282715]
[135.24092102 -213.58178711]
[122.28942871 -221.35583496]
[112.05379486 -232.46475220]
[105.36374664 -246.00802612]
[102.76164246 -260.88772583]
[104.45840454 -275.89764404]
[110.31649017 -289.82098389]
[119.86100769 -301.52905273]
[132.31823730 -310.07272339]
[146.67831421 -314.75939941]
[161.77713013 -315.20913696]
[176.39070129 -311.38549805]
[189.33436584 -303.59844971]
[199.55885315 -292.47924805]
[206.23527527 -278.92926025]
[208.82243347 -264.04696655]
[207.11059570 -249.03875732]
[201.23852539 -235.12129211]
[191.68225098 -223.42282104]
[179.21644592 -214.89167786]
[164.85166931 -210.21943665]
[165.29827881 -195.22608948]
[173.41108704 -182.73483276]
[166.08810425 -168.71040344]
[176.31013489 -179.68811035]
[191.18106079 -181.65165710]
[203.90208435 -173.70336914]
[208.65733337 -159.47706604]
[203.27276611 -145.47683716]
[190.21012878 -138.10339355]
[175.44149780 -140.72778320]
[165.71823120 -152.15188599]
[164.60256958 -137.19343567]
[163.48692322 -122.23498535]
[162.37127686 -107.27652740]
[161.25563049 -92.31807709]
[160.13998413 -77.35962677]
[168.51185608 -89.80597687]
[180.77270508 -98.44725800]
[195.30938721 -102.14656067]
[210.20935059 -100.41718292]
[223.51226807 -93.48664093]
[233.46791077 -82.26677704]
[238.76641846 -68.23375702]
[238.71070862 -53.23385620]
[233.30809021 -39.24058151]
[223.26937866 -28.09498405]
[209.91534424 -21.26345825]
[195.00294495 -19.64480972]
[180.49414062 -23.45199776]
[168.29782104 -32.18412399]
[160.01864624 -44.69232559]
[156.74575806 -59.33331299]
[152.34477234 -44.99346542]
[147.94377136 -30.65361786]
[143.54277039 -16.31377029]
[139.14176941 -1.97392321]
[134.74076843 12.36592388]
[130.33978271 26.70577049]
[140.58607483 37.51682663]
[144.06842041 52.10206604]
[139.75418091 66.56766510]
[128.70603943 77.00008392]
[113.82235718 80.52475739]
[109.42136383 94.86460114]
[107.30673981 109.71479797]
[107.53006744 124.71313477]
[107.75339508 139.71147156]
[107.97672272 154.70980835]
[116.67135620 164.23693848]
[116.54859161 176.73368835]
[108.21963501 185.50608826]
[108.21963501 200.50608826]
[108.21963501 215.50608826]
[119.11418915 226.63920593]
[118.90050507 241.85134888]
[108.21963501 252.16902161]
[108.21963501 267.16903687]
[115.95693207 280.96920776]
[108.21963501 293.69647217]
[108.21963501 308.69647217]
[108.21963501 323.69647217]
[115.12911224 310.38259888]
[125.61309052 299.65478516]
[138.76460266 292.44107056]
[153.44592285 289.36553955]
[168.38696289 290.69424438]
[182.29516602 296.31222534]
[193.96734619 305.73348999]
[202.39372253 318.14300537]
[206.84536743 332.46722412]
[206.93711853 347.46694946]
[202.66108704 361.84454346]
[194.38716125 374.35623169]
[182.83113098 383.91958618]
[168.99269104 389.70733643]
[154.06903076 391.21875000]
[139.35118103 388.32305908]
[126.11239624 381.27078247]
[115.49794006 370.67205811]
[108.42609406 357.44372559]
[105.50879669 342.73367310]
[101.32178497 357.13745117]
[97.13477325 371.54125977]
[92.94776154 385.94503784]
[88.76074982 400.34881592]
[84.57373810 414.75259399]
[80.38672638 429.15637207]
[93.93759155 435.66973877]
[106.23148346 444.32479858]
[116.93302917 454.88543701]
[125.75026703 467.06353760]
[132.44265747 480.52688599]
[136.82765198 494.90817261]
[138.78558350 509.81509399]
[138.26307678 524.84094238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[35 176]
[36 175]
[37 174]
[39 172]
[40 171]
[43 168]
[44 167]
[45 166]
[47 163]
[48 162]
[49 161]
[50 160]
[72 159]
[73 158]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 118]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
