%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[104.30078125 454.30740356]
[108.32762146 439.79953003]
[115.28317261 426.44610596]
[124.86336517 414.83087158]
[136.64939880 405.46160889]
[150.12602234 398.74786377]
[146.36972046 384.22583008]
[142.61341858 369.70376587]
[138.85711670 355.18170166]
[134.13877869 349.49319458]
[135.15472412 340.41543579]
[132.35000610 338.27865601]
[130.44091797 334.67718506]
[130.10459900 330.04684448]
[131.79792786 325.10925293]
[128.91265869 310.38937378]
[126.02738190 295.66946411]
[123.14211273 280.94958496]
[120.25684357 266.22970581]
[117.37156677 251.50981140]
[107.33064270 240.50848389]
[112.26897430 225.47773743]
[109.38369751 210.75784302]
[106.67720032 208.49794006]
[104.93083191 204.81483459]
[104.80159760 200.17407227]
[106.71371460 195.31703186]
[97.17404175 183.87832642]
[102.77860260 169.08308411]
[100.55348969 154.24903870]
[91.01380920 142.81033325]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[84.17978668 66.18755341]
[86.40147400 59.13872910]
[84.39746094 44.27320099]
[82.39344788 29.40767479]
[80.38942719 14.54214668]
[78.38541412 -0.32338190]
[76.38140106 -15.18891048]
[73.93567657 -29.98818016]
[71.05039978 -44.70807266]
[56.10143280 -47.10675430]
[42.89988708 -54.46141815]
[33.02970505 -65.86754608]
[27.66756630 -79.93586731]
[27.44260788 -94.96154022]
[32.36268234 -109.13077545]
[41.81573486 -120.73977661]
[54.64587784 -128.39959717]
[51.76060486 -143.11949158]
[48.87533188 -157.83937073]
[45.99005890 -172.55926514]
[43.10478592 -187.27915955]
[40.21951294 -201.99905396]
[29.97221375 -214.05323792]
[35.11692047 -228.03112793]
[32.23164749 -242.75102234]
[21.98226357 -250.58126831]
[19.88215256 -262.90090942]
[26.51949310 -273.01388550]
[23.85369873 -287.77508545]
[21.18790245 -302.53631592]
[8.23352718 -305.14126587]
[-3.03735971 -311.97686768]
[-11.29449081 -322.21099854]
[-15.57194614 -334.61190796]
[-15.38111877 -347.69644165]
[-10.76642227 -359.90759277]
[-2.29742646 -369.79953003]
[9.00135231 -376.20901489]
[6.77623510 -391.04306030]
[4.55111790 -405.87710571]
[2.32600069 -420.71115112]
[-12.50095177 -423.77493286]
[-25.36092949 -431.71176147]
[-34.71195602 -443.54724121]
[-39.44056320 -457.84094238]
[-38.99436569 -472.86169434]
[-33.44650650 -486.79708862]
[-23.48451424 -497.97241211]
[-10.32514191 -505.05169678]
[-12.55025864 -519.88574219]
[-14.77537632 -534.71978760]
[-17.00049400 -549.55383301]
[-32.01170731 -550.94195557]
[-46.25428772 -555.88281250]
[-58.90019608 -564.08917236]
[-69.21421051 -575.08392334]
[-76.59669495 -588.22784424]
[-80.61843109 -602.75677490]
[-81.04560089 -617.82598877]
[-77.85338593 -632.55938721]
[-71.22735596 -646.10040283]
[-61.55274963 -657.66180420]
[-49.39204025 -666.57135010]
[-35.45222855 -672.31115723]
[-20.54375648 -674.54742432]
[-5.53338766 -673.15020752]
[8.70619774 -668.20068359]
[21.34712791 -659.98663330]
[31.65447426 -648.98565674]
[39.02898407 -635.83721924]
[43.04191208 -621.30590820]
[43.45995331 -606.23645020]
[40.25879669 -591.50500488]
[33.62456131 -577.96795654]
[23.94295120 -566.41247559]
[11.77684021 -557.51025391]
[-2.16644931 -551.77893066]
[0.05866778 -536.94488525]
[2.28378487 -522.11083984]
[4.50890207 -507.27682495]
[19.16618919 -504.37005615]
[31.96858978 -496.60940552]
[41.36093521 -484.91503906]
[46.19457626 -470.68627930]
[45.86784744 -455.63424683]
[40.40089035 -441.57608032]
[30.43554306 -430.21545410]
[17.16004372 -422.93627930]
[19.38516235 -408.10223389]
[21.61027908 -393.26818848]
[23.83539581 -378.43414307]
[40.11455917 -373.91210938]
[52.82098389 -362.69247437]
[59.36625290 -346.99618530]
[58.38886261 -329.96255493]
[50.03714371 -315.02133179]
[35.94911957 -305.20211792]
[38.61491394 -290.44088745]
[41.28071213 -275.67968750]
[53.32189560 -262.91345215]
[46.95153809 -245.63629150]
[49.83681107 -230.91639709]
[59.87773514 -219.91506958]
[54.93940353 -204.88432312]
[57.82467651 -190.16442871]
[60.70994949 -175.44453430]
[63.59522247 -160.72465515]
[66.48049164 -146.00476074]
[69.36576843 -131.28486633]
[84.13822937 -129.03549194]
[97.27439117 -121.85424042]
[107.17955017 -110.59091949]
[112.64371490 -96.59219360]
[112.98942566 -81.54059601]
[108.15564728 -67.25231934]
[98.70751953 -55.45804977]
[85.77029419 -47.59334564]
[88.65556335 -32.87345505]
[90.90408325 -31.19944191]
[92.62498474 -28.53390121]
[93.43728638 -25.07332611]
[93.03810883 -21.14838219]
[91.24693298 -17.19292450]
[93.25094604 -2.32739568]
[95.25495911 12.53813267]
[97.25897217 27.40366173]
[99.26298523 42.26918793]
[101.26699829 57.13471603]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[121.15125275 138.28970337]
[115.38753510 152.02392578]
[117.61264801 166.85795593]
[127.31147766 179.35769653]
[121.54776001 193.09191895]
[124.10359192 207.87257385]
[126.98886871 222.59245300]
[137.23616028 234.64665222]
[132.09146118 248.62452698]
[134.97673035 263.34442139]
[137.86199951 278.06430054]
[140.74728394 292.78421021]
[143.63255310 307.50408936]
[146.51782227 322.22399902]
[149.73109436 336.87576294]
[153.37918091 351.42538452]
[157.13548279 365.94744873]
[160.89178467 380.46951294]
[164.64808655 394.99157715]
[179.68983459 394.32867432]
[194.54064941 396.80801392]
[208.55130005 402.32119751]
[221.10931396 410.62722778]
[231.66571045 421.36294556]
[239.75900269 434.05911255]
[245.03540039 448.16064453]
[247.26422119 463.05111694]
[246.34803772 478.07955933]
[242.32690430 492.58901978]
[235.37660217 505.94519043]
[225.80097961 517.56420898]
[214.01864624 526.93811035]
[200.54464722 533.65710449]
[185.96803284 537.42749023]
[170.92602539 538.08447266]
[156.07618713 535.59930420]
[142.06770325 530.08062744]
[129.51295471 521.76965332]
[118.96078491 511.02978516]
[110.87248993 498.33044434]
[105.60164642 484.22683716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[11 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[22 176]
[23 175]
[27 174]
[29 172]
[30 171]
[32 169]
[33 168]
[35 166]
[36 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 154]
[45 153]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[60 138]
[61 137]
[64 135]
[65 134]
[66 133]
[74 127]
[75 126]
[76 125]
[77 124]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
