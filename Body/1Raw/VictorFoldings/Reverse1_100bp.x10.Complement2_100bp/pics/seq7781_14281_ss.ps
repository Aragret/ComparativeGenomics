%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[34.91582489 537.75354004]
[34.64297485 552.90942383]
[29.20005608 567.05688477]
[19.24433136 578.48754883]
[5.97800159 585.82104492]
[-8.99695873 588.17187500]
[-23.87224960 585.25610352]
[-36.85160828 577.42590332]
[-46.36771774 565.62677002]
[-51.27145386 551.28350830]
[-50.97067261 536.12817383]
[-45.50168991 521.99078369]
[-35.52491760 510.57849121]
[-22.24509621 503.26943970]
[-7.26582861 500.94622803]
[-4.38055611 486.22631836]
[-1.49528325 471.50643921]
[1.38998938 456.78656006]
[4.27526188 442.06665039]
[6.83109426 427.28601074]
[9.05621147 412.45196533]
[11.28132820 397.61791992]
[-0.15935566 407.31900024]
[-15.10812759 408.55761719]
[-27.98946381 400.87185669]
[-33.99894714 387.12826538]
[-30.89518547 372.45288086]
[-19.83580780 362.31927490]
[-4.94568682 360.50701904]
[8.22152901 367.69201660]
[14.75495815 381.19564819]
[10.66413116 366.87380981]
[21.77959633 355.61517334]
[25.75169182 341.15066528]
[29.61599731 326.65695190]
[33.37229919 312.13488770]
[37.12859726 297.61285400]
[40.88489914 283.09078979]
[35.29138947 266.45709229]
[48.30741501 253.43154907]
[51.84708786 238.85517883]
[55.38676071 224.27880859]
[53.91044998 217.03709412]
[59.08916092 209.51255798]
[62.84546280 194.99049377]
[66.60176086 180.46844482]
[65.29696655 177.98738098]
[64.89633179 174.83998108]
[65.65857697 171.36804199]
[67.71403503 168.00061035]
[71.03810120 165.20695496]
[67.59085846 150.71675110]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[112.01830292 41.32001495]
[116.84430695 27.11756134]
[121.67030334 12.91510487]
[114.93690491 -1.13121474]
[120.03347015 -15.46577644]
[133.46598816 -21.79847908]
[138.29197693 -36.00093460]
[143.11798096 -50.20339203]
[147.94398499 -64.40584564]
[143.93896484 -82.37920380]
[157.57778931 -93.42227173]
[162.19180298 -107.69500732]
[159.07458496 -123.20608521]
[170.35165405 -132.93627930]
[174.96566772 -147.20901489]
[179.25979614 -161.58123779]
[183.23188782 -176.04576111]
[187.20397949 -190.51028442]
[190.08926392 -205.23016357]
[191.87171936 -220.12388611]
[193.65419006 -235.01760864]
[195.43666077 -249.91131592]
[195.65998840 -264.90966797]
[194.32174683 -279.84985352]
[192.98352051 -294.79003906]
[184.04588318 -307.84487915]
[190.61685181 -321.21170044]
[189.27862549 -336.15188599]
[180.34098816 -349.20672607]
[186.91195679 -362.57354736]
[183.90768433 -366.84219360]
[182.93815613 -371.38238525]
[183.76606750 -375.37356567]
[185.86283875 -378.20834351]
[185.19305420 -393.19335938]
[184.52326965 -408.17840576]
[170.13038635 -412.99600220]
[158.45223999 -422.69061279]
[151.06820679 -435.95111084]
[148.97691345 -450.98410034]
[152.46118164 -465.75650024]
[161.04980469 -478.27050781]
[173.58125305 -486.83364868]
[188.36071777 -490.28787231]
[203.38943481 -488.16598511]
[216.63485718 -480.75497437]
[226.30567932 -469.05712891]
[231.09399414 -454.65447998]
[230.35221863 -439.49484253]
[224.18066406 -425.62847900]
[213.41400146 -414.93066406]
[199.50831604 -408.84820557]
[200.17810059 -393.86315918]
[200.84788513 -378.87811279]
[201.85214233 -363.91177368]
[210.69406128 -351.92553711]
[204.21879578 -337.49011230]
[205.55703735 -322.54992676]
[214.39895630 -310.56369019]
[207.92370605 -296.12826538]
[209.26193237 -281.18807983]
[210.60017395 -266.24789429]
[217.03639221 -279.79687500]
[228.11599731 -289.90838623]
[242.19538879 -295.08239746]
[257.18597412 -294.55142212]
[270.86401367 -288.39419556]
[281.20043945 -277.52410889]
[286.66186523 -263.55368042]
[286.43817139 -248.55535889]
[280.56253052 -234.75402832]
[269.90652466 -224.19703674]
[256.05096436 -218.45046997]
[241.05119324 -218.36677551]
[227.13237000 -223.95838928]
[216.35923767 -234.39581299]
[210.33036804 -248.12886047]
[208.54791260 -233.23513794]
[206.76544189 -218.34141541]
[204.98297119 -203.44770813]
[215.20884705 -214.42182922]
[229.52253723 -218.90718079]
[244.18247986 -215.73129272]
[255.35658264 -205.72433472]
[260.12399292 -191.50209045]
[257.23849487 -176.78225708]
[247.45436096 -165.41252136]
[233.32914734 -160.36492920]
[218.55513000 -162.95889282]
[206.99423218 -172.51637268]
[201.66850281 -186.53817749]
[197.69641113 -172.07365417]
[193.72431946 -157.60913086]
[195.14117432 -154.38037109]
[195.06452942 -150.30494690]
[193.11349487 -146.09225464]
[189.23840332 -142.59500122]
[184.62438965 -128.32228088]
[188.07164001 -113.83207703]
[176.46453857 -103.08100128]
[171.85052490 -88.80826569]
[177.07725525 -77.89919281]
[173.35006714 -65.97058868]
[162.14643860 -59.57984924]
[157.32043457 -45.37739182]
[152.49444580 -31.17493820]
[147.66844177 -16.97248268]
[154.46186829 -3.76699662]
[149.76994324 10.70506096]
[135.87275696 17.74110222]
[131.04675293 31.94355774]
[126.22076416 46.14601517]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[96.58791351 160.09075928]
[85.31083679 169.82095337]
[81.12382507 184.22473145]
[77.36752319 198.74679565]
[73.61122131 213.26885986]
[69.96313477 227.81848145]
[66.42346191 242.39485168]
[62.88378906 256.97122192]
[68.91560364 268.37210083]
[65.66732025 280.43994141]
[55.40695953 286.84707642]
[51.65065765 301.36914062]
[47.89435577 315.89120483]
[44.13805771 330.41326904]
[45.01873779 339.50512695]
[40.21621704 345.12274170]
[36.24412155 359.58728027]
[40.05083847 374.94369507]
[29.21948242 385.16772461]
[26.11537170 399.84304810]
[23.89025497 414.67706299]
[21.66513824 429.51110840]
[23.57725716 434.36816406]
[23.44802094 439.00891113]
[21.70165825 442.69201660]
[18.99515343 444.95193481]
[16.10988045 459.67181396]
[13.22460842 474.39172363]
[10.33933544 489.11160278]
[7.45406294 503.83148193]
[20.44783020 511.63775635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 201]
[21 200]
[22 199]
[31 198]
[33 196]
[34 195]
[35 193]
[36 192]
[37 191]
[38 190]
[40 187]
[41 186]
[42 185]
[44 184]
[45 183]
[46 182]
[51 181]
[53 179]
[54 178]
[55 177]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[66 167]
[67 166]
[68 165]
[69 164]
[71 161]
[72 160]
[74 158]
[75 157]
[76 153]
[77 152]
[78 151]
[79 140]
[80 139]
[81 138]
[82 137]
[83 122]
[84 121]
[85 120]
[87 118]
[88 117]
[90 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
