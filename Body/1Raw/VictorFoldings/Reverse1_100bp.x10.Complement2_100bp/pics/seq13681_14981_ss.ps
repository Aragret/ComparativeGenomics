%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[-8.53910446 466.28652954]
[-0.60052937 479.06225586]
[4.92908096 493.05023193]
[7.87197208 507.80078125]
[8.13354206 522.83978271]
[5.70538378 537.68377686]
[0.66555107 551.85559082]
[-6.82394600 564.89959717]
[-16.52235031 576.39660645]
[-28.11789894 585.97692871]
[-41.23784256 593.33270264]
[-55.46043015 598.22735596]
[-70.32846832 600.50360107]
[-85.36399841 600.08825684]
[-100.08370209 596.99475098]
[-114.01439667 591.32238770]
[-126.70827484 583.25360107]
[-137.75727844 573.04772949]
[-146.80621338 561.03289795]
[-153.56420898 547.59527588]
[-157.81402588 533.16687012]
[-159.41903687 518.21148682]
[-158.32766724 503.20986938]
[-154.57496643 488.64425659]
[-148.28160095 474.98287964]
[-139.64987183 462.66488647]
[-128.95724487 452.08627319]
[-116.54743958 443.58703613]
[-102.81938934 437.44049072]
[-88.21438599 433.84411621]
[-73.20192719 432.91360474]
[-58.26459885 434.67883301]
[-43.88257599 439.08303833]
[-37.00316238 425.75363159]
[-30.12374878 412.42419434]
[-31.89424324 394.96475220]
[-16.31653786 385.14553833]
[-17.57615089 370.30429077]
[-4.50263786 361.39398193]
[2.17755675 347.96359253]
[8.85775185 334.53323364]
[15.53794575 321.10284424]
[14.89445305 316.37051392]
[17.21695137 311.18371582]
[22.62220764 307.37649536]
[29.69931221 294.15097046]
[36.77641678 280.92544556]
[43.85352325 267.69992065]
[50.93062973 254.47439575]
[58.00773239 241.24887085]
[65.08483887 228.02334595]
[70.64406586 214.09153748]
[74.61616516 199.62701416]
[78.58825684 185.16249084]
[82.45256042 170.66880798]
[86.20886230 156.14674377]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[97.63335419 42.35549164]
[97.63335419 27.35549164]
[96.29512024 12.41530704]
[84.45075989 2.29854131]
[83.30642700 -12.87199402]
[93.02421570 -24.10143280]
[91.68597412 -39.04161835]
[90.34774017 -53.98180389]
[86.46519470 -62.25003433]
[89.10250092 -69.15412140]
[87.98685455 -84.11257935]
[86.87120056 -99.07102966]
[85.75555420 -114.02947998]
[84.41732025 -128.96966553]
[82.85679626 -143.88827515]
[81.29627228 -158.80686951]
[79.73574829 -173.72547913]
[78.17522430 -188.64408875]
[68.66529846 -197.35752869]
[67.67266083 -209.81539917]
[75.18577576 -219.29588318]
[73.84754181 -234.23606873]
[65.01919556 -222.10922241]
[50.78489685 -217.37799072]
[36.45367432 -221.80699158]
[27.37072372 -233.74432373]
[26.92376137 -248.73767090]
[35.27949142 -261.19485474]
[49.32143402 -266.46969604]
[63.81229401 -262.59475708]
[73.34777069 -251.01426697]
[73.79437256 -266.00759888]
[74.24098206 -281.00097656]
[74.68758392 -295.99432373]
[75.13419342 -310.98767090]
[75.46916962 -325.98391724]
[75.69249725 -340.98226929]
[62.21718216 -348.23999023]
[53.66782761 -360.93515015]
[52.00901794 -376.15048218]
[57.62192917 -390.38964844]
[69.21675873 -400.38058472]
[84.12910461 -403.82742310]
[98.93220520 -399.93811035]
[110.22442627 -389.60638428]
[115.41089630 -375.20642090]
[113.29980469 -360.04721069]
[104.37625885 -347.61221313]
[90.69083405 -340.75894165]
[90.46750641 -325.76058960]
[93.51107025 -319.02572632]
[90.12754059 -310.54104614]
[89.68093872 -295.54769897]
[89.23432922 -280.55435181]
[88.78772736 -265.56100464]
[88.34111786 -250.56765747]
[88.78772736 -235.57431030]
[90.12596130 -220.63412476]
[100.98017883 -206.84452820]
[93.09383392 -190.20460510]
[94.65435791 -175.28601074]
[96.21488190 -160.36740112]
[97.77539825 -145.44879150]
[99.33592224 -130.53019714]
[102.41603851 -126.88027191]
[103.23600006 -121.25668335]
[100.71400452 -115.14513397]
[101.82965851 -100.18667603]
[102.94530487 -85.22822571]
[104.06095123 -70.26976776]
[105.28792572 -55.32003784]
[106.62615967 -40.37985229]
[107.96439362 -25.43966675]
[119.52317810 -16.11602974]
[121.09316254 -0.98362124]
[111.23530579 11.07707310]
[112.57353973 26.01725769]
[119.54550934 12.73600864]
[131.53776550 3.72568583]
[146.23477173 0.72604066]
[160.79878235 4.31625748]
[172.41770935 13.80312252]
[178.84811401 27.35486984]
[178.84838867 42.35486984]
[172.41848755 55.90685654]
[160.79992676 65.39415741]
[146.23605347 68.98491669]
[131.53892517 65.98582458]
[119.54634094 56.97594452]
[112.57353973 43.69372559]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[113.23427582 131.12025452]
[127.01939392 125.20666504]
[141.98060608 126.28467560]
[154.77554321 134.11344910]
[162.54577637 146.94401550]
[163.55541992 161.91000366]
[157.57891846 175.66795349]
[145.95143127 185.14433289]
[131.27058411 188.22206116]
[116.81609344 184.21359253]
[105.81714630 174.01441956]
[100.73092651 159.90304565]
[96.97462463 174.42510986]
[97.85530090 183.51698303]
[93.05278015 189.13459778]
[89.08068848 203.59912109]
[85.10858917 218.06364441]
[95.71820068 207.46005249]
[109.41224670 201.33853149]
[124.38904572 200.50445557]
[138.67813110 205.06758118]
[150.39952087 214.42753601]
[158.01109314 227.35285950]
[160.51138306 242.14300537]
[157.57145691 256.85208130]
[149.57810974 269.54483032]
[137.58299255 278.55136108]
[123.16427612 282.68664551]
[108.21898651 281.40664673]
[94.71343994 274.87976074]
[84.42452240 263.96472168]
[78.70590973 250.09756470]
[78.31036377 235.10044861]
[71.23326111 248.32597351]
[64.15615845 261.55151367]
[57.07905197 274.77703857]
[50.00194550 288.00256348]
[42.92483902 301.22808838]
[35.84773636 314.45361328]
[28.96832275 327.78305054]
[22.28812790 341.21340942]
[15.60793304 354.64379883]
[8.92773819 368.07415771]
[9.70953941 383.87603760]
[-2.88616109 391.82574463]
[0.47073504 404.27941895]
[-5.36970615 415.32809448]
[-16.79432106 419.30358887]
[-23.67373276 432.63302612]
[-30.55314445 445.96246338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 210]
[34 209]
[35 208]
[37 205]
[39 203]
[40 202]
[41 201]
[42 200]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 177]
[53 176]
[54 175]
[55 173]
[56 172]
[57 160]
[58 159]
[59 158]
[61 156]
[62 155]
[63 154]
[64 153]
[65 140]
[66 139]
[69 136]
[70 135]
[71 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[84 121]
[85 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
