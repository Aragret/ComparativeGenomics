%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[198.17669678 502.19262695]
[202.20353699 487.68475342]
[209.15908813 474.33132935]
[218.73927307 462.71609497]
[230.52531433 453.34683228]
[244.00193787 446.63311768]
[240.24563599 432.11105347]
[236.48933411 417.58898926]
[232.73303223 403.06692505]
[228.97674561 388.54486084]
[225.22044373 374.02279663]
[221.46414185 359.50073242]
[206.58398438 358.13464355]
[193.04367065 351.74798584]
[182.48567200 341.09420776]
[176.19796753 327.44552612]
[174.95700073 312.44119263]
[178.93174744 297.89053345]
[187.66111755 285.55480957]
[200.10728455 276.93402100]
[196.35098267 262.41195679]
[190.58494568 248.56448364]
[182.92436218 235.66815186]
[175.26376343 222.77182007]
[167.60316467 209.87548828]
[159.94256592 196.97917175]
[151.71376038 184.43777466]
[142.93315125 172.27630615]
[134.15254211 160.11485291]
[120.42921448 154.32525635]
[118.62408447 138.60736084]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.90476990 82.40039825]
[68.94407654 70.37101746]
[59.98337936 58.34164047]
[51.02268219 46.31226349]
[41.88388062 34.41762924]
[32.56899643 22.66037750]
[23.25411415 10.90312672]
[13.76521683 -0.71413666]
[4.10440636 -12.18883705]
[-5.55640411 -23.66353607]
[-15.21721458 -35.13823700]
[-19.08123398 -20.64446831]
[-32.76012802 -14.48915577]
[-46.17032623 -21.20976830]
[-49.42632675 -35.85211945]
[-40.12792969 -47.62241364]
[-25.13106918 -47.84471512]
[-33.91167068 -60.00616837]
[-42.69227600 -72.16762543]
[-51.56317139 -84.26337433]
[-60.52386475 -96.29275513]
[-69.48456573 -108.32213593]
[-82.47085571 -100.78197479]
[-96.23202515 -94.77132416]
[-110.58866882 -90.36853790]
[-125.35362244 -87.63101959]
[-140.33438110 -86.59445953]
[-155.33566284 -87.27236176]
[-170.16186523 -89.65589905]
[-184.61972046 -93.71399689]
[-198.52073669 -99.39374542]
[-211.68368530 -106.62110138]
[-223.93695068 -115.30183411]
[-235.12080383 -125.32277679]
[-245.08943176 -136.55328369]
[-253.71286011 -148.84695435]
[-260.87869263 -162.04348755]
[-266.49346924 -175.97087097]
[-270.48403931 -190.44750977]
[-272.79830933 -205.28469849]
[-273.40618896 -220.28897095]
[-272.29971313 -235.26472473]
[-269.49328613 -250.01673889]
[-265.02352905 -264.35266113]
[-258.94869995 -278.08563232]
[-251.34799194 -291.03659058]
[-242.32049561 -303.03668213]
[-231.98393250 -313.92947388]
[-220.47302246 -323.57296753]
[-207.93785095 -331.84143066]
[-194.54185486 -338.62704468]
[-180.45964050 -343.84136963]
[-165.87483215 -347.41644287]
[-150.97756958 -349.30563354]
[-135.96203613 -349.48428345]
[-121.02403259 -347.95013428]
[-106.35828400 -344.72311401]
[-92.15599060 -339.84536743]
[-78.60231018 -333.38040161]
[-65.87394714 -325.41256714]
[-54.13683701 -316.04571533]
[-43.54399490 -305.40194702]
[-34.23352432 -293.62005615]
[-26.32680702 -280.85363770]
[-19.92691994 -267.26913452]
[-15.11730194 -253.04360962]
[-11.96065331 -238.36254883]
[-10.49812889 -223.41735840]
[-10.74879646 -208.40286255]
[-12.70938683 -193.51481628]
[-16.35433960 -178.94732666]
[-21.63613701 -164.89028931]
[-28.48591805 -151.52696228]
[-36.81438065 -139.03158569]
[-46.51295090 -127.56705475]
[-57.45518494 -117.28282928]
[-48.49448776 -105.25344849]
[-39.53379440 -93.22407532]
[-33.01707458 -89.73778534]
[-30.53081894 -80.94822693]
[-21.75021553 -68.78677368]
[-12.96961308 -56.62531662]
[-3.74251461 -44.79904556]
[5.91829586 -33.32434845]
[15.57910633 -21.84964752]
[25.23991585 -10.37494755]
[29.83725166 -9.08128834]
[33.67072678 -4.88587570]
[35.01136780 1.58824384]
[44.32624817 13.34549522]
[53.64113235 25.10274696]
[58.19791031 26.53271103]
[61.90477371 30.84040070]
[63.05205917 37.35156631]
[72.01275635 49.38094330]
[80.97344971 61.41032028]
[89.93415070 73.43969727]
[96.45086670 76.92598724]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[130.78553772 129.82676697]
[145.13691711 136.48623657]
[146.31401062 151.33425903]
[155.09460449 163.49571228]
[163.87521362 175.65716553]
[167.32885742 161.06016541]
[180.01962280 153.06362915]
[194.67764282 156.24833679]
[202.90615845 168.78993225]
[199.99148560 183.50402832]
[187.60328674 191.96171570]
[172.83888245 189.31857300]
[180.49948120 202.21490479]
[188.16007996 215.11122131]
[195.82067871 228.00755310]
[203.48127747 240.90388489]
[202.62225342 225.92849731]
[206.15715027 211.35096741]
[213.78013611 198.43237305]
[224.83178711 188.29031372]
[238.35598755 181.80220032]
[253.18278503 179.52928162]
[268.02951050 181.66821289]
[281.61175537 188.03393555]
[292.75451660 198.07577515]
[300.49386597 210.92500305]
[304.16027832 225.47001648]
[303.43652344 240.45254517]
[298.38522339 254.57644653]
[289.44338989 266.61984253]
[277.38458252 275.54089355]
[263.25201416 280.56784058]
[248.26824951 281.26574707]
[233.72956848 277.57427979]
[220.89372253 269.81280518]
[210.87304688 258.65567017]
[214.62934875 273.17773438]
[229.69458008 274.68237305]
[243.31048584 281.23822021]
[253.84207153 292.03665161]
[260.03207397 305.76086426]
[261.15097046 320.74652100]
[257.08297729 335.18347168]
[248.33767700 347.33453369]
[235.98619080 355.74444580]
[239.74249268 370.26651001]
[243.49879456 384.78857422]
[247.25509644 399.31063843]
[251.01139832 413.83267212]
[254.76770020 428.35473633]
[258.52398682 442.87680054]
[273.56576538 442.21389771]
[288.41656494 444.69323730]
[302.42721558 450.20642090]
[314.98522949 458.51245117]
[325.54162598 469.24819946]
[333.63491821 481.94433594]
[338.91131592 496.04586792]
[341.14013672 510.93634033]
[340.22393799 525.96478271]
[336.20281982 540.47424316]
[329.25253296 553.83038330]
[319.67691040 565.44940186]
[307.89456177 574.82330322]
[294.42056274 581.54235840]
[279.84396362 585.31274414]
[264.80194092 585.96972656]
[249.95210266 583.48455811]
[235.94361877 577.96582031]
[223.38887024 569.65490723]
[212.83670044 558.91497803]
[204.74839783 546.21563721]
[199.47756958 532.11206055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[20 174]
[21 173]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 142]
[28 141]
[29 140]
[31 138]
[32 137]
[33 136]
[35 134]
[36 132]
[37 131]
[38 130]
[39 129]
[40 126]
[41 125]
[42 124]
[43 121]
[44 120]
[45 119]
[46 118]
[52 117]
[53 116]
[54 115]
[55 113]
[56 112]
[57 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
