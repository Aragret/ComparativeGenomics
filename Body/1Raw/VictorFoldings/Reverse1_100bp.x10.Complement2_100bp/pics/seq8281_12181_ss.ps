%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[204.33676147 489.67578125]
[213.35333252 477.64453125]
[224.22731018 467.26153564]
[236.66204834 458.81008911]
[230.38468933 445.18676758]
[224.10733032 431.56344604]
[217.82997131 417.94012451]
[211.24993896 404.46038818]
[198.53727722 396.69912720]
[199.08372498 380.88735962]
[192.20431519 367.55792236]
[185.32490540 354.22848511]
[178.44549561 340.89907837]
[171.56607056 327.56964111]
[164.68666077 314.24020386]
[157.80725098 300.91076660]
[155.97280884 315.79818726]
[147.50599670 328.18014526]
[134.29830933 335.29049683]
[119.30039978 335.54080200]
[105.86282349 328.87509155]
[96.98757935 316.78253174]
[94.65740967 301.96463013]
[99.39289093 287.73171997]
[110.13609314 277.26351929]
[124.48696899 272.89859009]
[139.23948669 275.61212158]
[151.09791565 284.79788208]
[146.48390198 270.52514648]
[141.86988831 256.25241089]
[126.98055267 255.14031982]
[113.61513519 248.39413452]
[103.82434845 237.01408386]
[99.12377167 222.71401978]
[100.25927734 207.66328430]
[107.08888245 194.15776062]
[118.59965515 184.26948547]
[113.98564911 169.99674988]
[109.37163544 155.72401428]
[104.75762939 141.45129395]
[100.14361572 127.17855072]
[95.52960968 112.90582275]
[93.32583618 127.74304962]
[88.30785370 141.87881470]
[80.66327667 154.78465271]
[70.67789459 165.97804260]
[58.72501755 175.04052734]
[45.25151062 181.63330078]
[30.76109886 185.50988770]
[15.79551125 186.52536011]
[0.91424751 184.64175415]
[-13.32634449 179.92947388]
[-26.39386940 172.56471252]
[-37.79978943 162.82278442]
[-47.11768341 151.06791687]
[-53.99919891 137.73957825]
[-58.18706512 123.33604431]
[-59.52471161 108.39580536]
[-57.96213150 93.47741699]
[-53.55774307 79.13861084]
[-46.47620773 65.91545105]
[-36.98227692 54.30230331]
[-25.43088341 44.73332977]
[-12.25388527 37.56626892]
[2.05608368 33.06907272]
[16.96403694 31.40986824]
[31.91262627 32.65068817]
[46.34299088 36.74514008]
[59.71564102 43.54015732]
[71.53063202 52.78169632]
[81.34624481 64.12425995]
[88.79552460 77.14379120]
[93.59857941 91.34761047]
[95.60259247 76.48208618]
[89.77837372 61.77191925]
[99.14668274 50.19245148]
[101.15069580 35.32692337]
[103.15470886 20.46139717]
[105.15872192 5.59586859]
[107.16273499 -9.26966000]
[109.16675568 -24.13518715]
[101.77933502 -41.00254059]
[113.03931427 -54.46284485]
[114.82177734 -69.35655975]
[116.60424042 -84.25028229]
[118.38671112 -99.14399719]
[119.50235748 -114.10244751]
[119.94896698 -129.09579468]
[120.39556885 -144.08915710]
[113.07257843 -158.11357117]
[121.18538666 -170.60482788]
[121.63199615 -185.59819031]
[107.00308990 -189.16030884]
[93.43463135 -195.68646240]
[81.51978302 -204.89135742]
[71.77941132 -216.37258911]
[64.63932800 -229.62826538]
[60.41165161 -244.07888794]
[59.28120804 -259.09274292]
[61.29741669 -274.01348877]
[66.37213898 -288.18884277]
[74.28351593 -300.99914551]
[84.68571472 -311.88436890]
[97.12398529 -320.36865234]
[111.05458069 -326.08111572]
[125.86851501 -328.77200317]
[140.91819763 -328.32373047]
[155.54570007 -324.75585938]
[169.11158752 -318.22436523]
[181.02281189 -309.01477051]
[190.75866699 -297.52969360]
[197.89353943 -284.27124023]
[202.11552429 -269.81893921]
[203.24006653 -254.80464172]
[201.21798706 -239.88470459]
[196.13769531 -225.71133423]
[188.22126770 -212.90414429]
[177.81478882 -202.02302551]
[165.37318420 -193.54362488]
[151.44033813 -187.83665466]
[136.62535095 -185.15158081]
[136.17874146 -170.15823364]
[143.53367615 -157.20622253]
[135.38891602 -143.64254761]
[134.94230652 -128.64920044]
[134.49571228 -113.65584564]
[146.12763977 -123.12675476]
[161.06301880 -121.73592377]
[170.74618530 -110.28008270]
[169.63017273 -95.32165527]
[158.35429382 -85.42951202]
[143.37788391 -86.27031708]
[133.28042603 -97.36153412]
[131.49795532 -82.46781158]
[129.71549988 -67.57409668]
[127.93302917 -52.68037796]
[135.16053772 -42.98039627]
[133.79742432 -30.55760574]
[124.03227997 -22.13117409]
[122.02826691 -7.26564598]
[120.02425385 7.59988213]
[118.02024078 22.46541023]
[116.01622772 37.33094025]
[114.01221466 52.19646835]
[119.97977448 65.84335327]
[110.46812439 78.48609924]
[108.46411133 93.35162354]
[109.80234528 108.29180908]
[114.41635132 122.56454468]
[119.03035736 136.83728027]
[123.64437103 151.11001587]
[128.25837708 165.38275146]
[132.87239075 179.65547180]
[147.99324036 180.93441772]
[161.43621826 187.88635254]
[171.16712952 199.42424011]
[175.72695923 213.76982117]
[174.45053101 228.72761536]
[167.56336975 242.02093506]
[156.14262390 251.63841248]
[160.75663757 265.91116333]
[165.37065125 280.18386841]
[171.13668823 294.03137207]
[178.01609802 307.36080933]
[184.89550781 320.69021606]
[191.77491760 334.01965332]
[198.65432739 347.34909058]
[205.53373718 360.67852783]
[212.41316223 374.00793457]
[225.61787415 382.72262573]
[224.57937622 397.58099365]
[228.97283936 400.39959717]
[231.58462524 404.23779297]
[232.32473755 408.24621582]
[231.45329285 411.66278076]
[237.73065186 425.28610229]
[244.00801086 438.90939331]
[250.28536987 452.53271484]
[264.78909302 448.57144165]
[279.74703979 447.05160522]
[294.75112915 448.01461792]
[309.39202881 451.43423462]
[323.27032471 457.21716309]
[336.00744629 465.20565796]
[347.25585938 475.18176270]
[356.70874023 486.87335205]
[364.10818481 499.96142578]
[369.25234985 514.08898926]
[372.00088501 528.87054443]
[372.27880859 543.90295410]
[370.07855225 558.77606201]
[365.46011353 573.08410645]
[358.54953003 586.43670654]
[349.53527832 598.46972656]
[338.66329956 608.85479736]
[326.23019409 617.30865479]
[312.57513428 623.60064697]
[298.07061768 627.55914307]
[283.11239624 629.07611084]
[268.10848999 628.11022949]
[253.46826172 624.68774414]
[239.59106445 618.90216064]
[226.85549927 610.91119385]
[215.60899353 600.93292236]
[206.15837097 589.23956299]
[198.76142883 576.15002441]
[193.61999512 562.02148438]
[190.87431335 547.23937988]
[190.59927368 532.20690918]
[192.80241394 517.33428955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 171]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[28 162]
[29 161]
[30 160]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[73 147]
[74 146]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[83 136]
[84 135]
[85 134]
[86 133]
[87 126]
[88 125]
[89 124]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
