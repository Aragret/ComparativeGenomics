%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[79.05116272 680.16949463]
[74.10070038 665.46331787]
[78.77190399 650.66601562]
[91.26859283 641.46752930]
[91.04526520 626.46917725]
[90.82193756 611.47082520]
[81.02340698 596.91217041]
[90.12552643 580.90490723]
[89.67892456 565.91156006]
[89.23231506 550.91815186]
[85.89105988 544.32592773]
[88.89235687 535.69866943]
[88.66902924 520.70031738]
[88.44570160 505.70196533]
[88.22237396 490.70364380]
[87.99904633 475.70529175]
[85.25683594 471.79513550]
[84.94186401 466.12081909]
[87.99904633 460.25863647]
[88.22237396 445.26031494]
[88.44570160 430.26196289]
[88.66902924 415.26364136]
[88.78069305 400.26403809]
[88.78069305 385.26403809]
[74.71676636 380.21514893]
[63.20722961 370.64126587]
[55.65355682 357.68298340]
[52.98410416 342.89465332]
[55.54004669 328.05761719]
[63.03192520 314.96594238]
[74.57227325 305.20928955]
[88.78069305 299.97991943]
[88.78069305 284.97991943]
[88.78069305 269.97991943]
[85.63719177 263.29113770]
[88.89402008 254.75701904]
[89.11734772 239.75868225]
[89.34067535 224.76034546]
[89.56400299 209.76200867]
[89.78733063 194.76367188]
[86.74376678 188.02879333]
[90.12729645 179.54412842]
[90.57390594 164.55078125]
[91.02050781 149.55743408]
[91.46711731 134.56408691]
[84.11218262 121.61209106]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[92.48026276 63.05754471]
[91.58744812 48.08414078]
[90.69463348 33.11073303]
[89.80181885 18.13732910]
[88.68616486 3.17887497]
[87.34793091 -11.76130962]
[86.00969696 -26.70149422]
[84.67146301 -41.64168167]
[69.60073090 -48.44351196]
[60.07122421 -61.84067535]
[58.60671997 -78.12171173]
[65.51262665 -92.83443451]
[78.81833649 -102.00343323]
[77.25781250 -116.92203522]
[66.09870148 -131.56976318]
[73.86434174 -147.30703735]
[71.74971771 -162.15722656]
[69.30399323 -176.95649719]
[66.85826111 -191.75576782]
[64.41253662 -206.55503845]
[61.52726364 -221.27493286]
[58.20500183 -235.90238953]
[54.88274384 -250.52984619]
[51.56048203 -265.15731812]
[48.23822403 -279.78475952]
[44.91596603 -294.41223145]
[34.31431198 -306.15597534]
[39.04056168 -320.28085327]
[35.71829987 -334.90829468]
[32.39604187 -349.53576660]
[29.07378197 -364.16323853]
[23.93869591 -350.06958008]
[13.25774097 -339.53784180]
[-0.90675867 -334.60156250]
[-15.81986046 -336.21383667]
[-28.60207748 -344.06335449]
[-36.78536224 -356.63449097]
[-38.78965378 -371.50000000]
[-34.22795486 -385.78952026]
[-23.98105431 -396.74401855]
[-10.02747059 -402.24835205]
[4.93857765 -401.23968506]
[18.02738190 -393.91281128]
[26.71219063 -381.68121338]
[26.04240417 -396.66625977]
[25.37261963 -411.65130615]
[24.70283508 -426.63635254]
[10.30995083 -431.45394897]
[-1.36819720 -441.14855957]
[-8.75223446 -454.40902710]
[-10.84353065 -469.44201660]
[-7.35925579 -484.21444702]
[1.22937131 -496.72842407]
[13.76080894 -505.29159546]
[28.54028320 -508.74578857]
[43.56899261 -506.62390137]
[56.81442261 -499.21292114]
[66.48524475 -487.51507568]
[71.27355957 -473.11239624]
[70.53177643 -457.95278931]
[64.36022949 -444.08639526]
[53.59355927 -433.38858032]
[39.68787384 -427.30612183]
[40.35765839 -412.32107544]
[41.02744293 -397.33605957]
[41.69722748 -382.35101318]
[43.70124435 -367.48547363]
[47.02350235 -352.85803223]
[50.34576035 -338.23056030]
[53.66802216 -323.60308838]
[64.03204346 -312.90560913]
[59.54342651 -297.73449707]
[62.86568451 -283.10702515]
[66.18794250 -268.47958374]
[69.51020050 -253.85211182]
[72.83246613 -239.22465515]
[76.15472412 -224.59719849]
[78.45208740 -222.99087524]
[80.25158691 -220.37774658]
[81.16655731 -216.94288635]
[80.88442230 -213.00779724]
[79.21180725 -209.00076294]
[81.65753174 -194.20149231]
[84.10326385 -179.40222168]
[86.54898834 -164.60295105]
[89.18700409 -162.26347351]
[90.82293701 -158.52999878]
[90.81394196 -153.88745117]
[88.75805664 -149.08949280]
[98.07043457 -141.36898804]
[99.67733002 -128.97537231]
[92.17642212 -118.48255920]
[93.73693848 -103.56395721]
[106.55004120 -98.83726501]
[116.12253571 -89.00385284]
[120.54548645 -75.94297028]
[118.90173340 -62.18519974]
[111.45545959 -50.42215729]
[99.61164856 -42.97991562]
[100.94988251 -28.03973007]
[102.28811646 -13.09954453]
[103.62635040 1.84064078]
[106.65178680 5.53601599]
[107.38792419 11.17118454]
[104.77522278 17.24451256]
[105.66803741 32.21791840]
[106.56085205 47.19132233]
[107.45366669 62.16473007]
[119.21073914 52.84961319]
[133.85769653 56.08480453]
[140.59736633 69.48543549]
[134.46150208 83.17306519]
[119.97323608 87.05767822]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[114.57327271 122.51943207]
[106.46046448 135.01069641]
[106.01386261 150.00404358]
[105.56725311 164.99739075]
[105.12065125 179.99073792]
[104.78567505 194.98699951]
[104.56234741 209.98533630]
[104.33901978 224.98367310]
[104.11568451 239.98200989]
[103.89235687 254.98034668]
[103.78069305 269.97991943]
[103.78069305 284.97991943]
[103.78069305 299.97991943]
[117.98912048 305.20928955]
[129.52946472 314.96594238]
[137.02133179 328.05761719]
[139.57728577 342.89465332]
[136.90783691 357.68298340]
[129.35415649 370.64126587]
[117.84461975 380.21514893]
[103.78069305 385.26403809]
[103.78069305 400.26403809]
[106.91010284 408.84567261]
[103.66736603 415.48696899]
[103.44403839 430.48529053]
[103.22071075 445.48364258]
[102.99738312 460.48196411]
[102.99738312 475.48196411]
[103.22071075 490.48031616]
[103.44403839 505.47863770]
[103.66736603 520.47698975]
[103.89069366 535.47534180]
[104.22566986 550.47155762]
[104.67227173 565.46490479]
[105.11888123 580.45825195]
[113.95439148 589.85491943]
[114.01770020 602.35211182]
[105.82028198 611.24749756]
[106.04360962 626.24584961]
[106.26693726 641.24420166]
[119.03195953 650.06652832]
[124.14166260 664.71820068]
[119.63125610 679.56524658]
[107.23508453 688.89880371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[8 201]
[9 200]
[10 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 188]
[24 187]
[32 179]
[33 178]
[34 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[42 171]
[43 170]
[44 169]
[45 168]
[47 166]
[48 164]
[49 163]
[50 157]
[51 156]
[52 155]
[53 154]
[54 151]
[55 150]
[56 149]
[57 148]
[62 142]
[63 141]
[65 138]
[66 134]
[67 133]
[68 132]
[69 131]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[77 119]
[78 118]
[79 117]
[80 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
