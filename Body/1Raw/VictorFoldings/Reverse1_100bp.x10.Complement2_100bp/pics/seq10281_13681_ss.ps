%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[17.31033516 676.27606201]
[10.22698498 689.51403809]
[1.79867351 701.93908691]
[-7.88225460 713.41497803]
[-18.70972824 723.81616211]
[-30.56511879 733.02850342]
[-43.31853104 740.95111084]
[-56.83022690 747.49725342]
[-70.95217133 752.59515381]
[-85.52963257 756.18890381]
[-100.40289307 758.23925781]
[-115.40899658 758.72363281]
[-130.38352966 757.63677979]
[-145.16239929 754.99053955]
[-159.58372498 750.81402588]
[-173.48945618 745.15289307]
[-186.72724915 738.06921387]
[-199.15206909 729.64062500]
[-210.62777710 719.95941162]
[-221.02865601 709.13171387]
[-230.24072266 697.27606201]
[-238.16304016 684.52246094]
[-244.70884705 671.01062012]
[-249.80638123 656.88854980]
[-253.39981079 642.31097412]
[-255.44976807 627.43768311]
[-255.93379211 612.43157959]
[-254.84655762 597.45709229]
[-252.20001221 582.67828369]
[-248.02311707 568.25701904]
[-242.36166382 554.35144043]
[-235.27766418 541.11383057]
[-226.84875488 528.68920898]
[-217.16726685 517.21374512]
[-206.33929443 506.81314087]
[-194.48345947 497.60134888]
[-181.72966003 489.67932129]
[-168.21763611 483.13385010]
[-154.09544373 478.03665161]
[-139.51780701 474.44357300]
[-124.64445496 472.39398193]
[-109.63832855 471.91033936]
[-94.66385651 472.99792480]
[-79.88510132 475.64483643]
[-65.46398926 479.82208252]
[-51.55852890 485.48388672]
[-44.48142624 472.25833130]
[-37.40431976 459.03280640]
[-30.32721329 445.80728149]
[-23.25010872 432.58175659]
[-16.17300224 419.35623169]
[-9.09589767 406.13070679]
[-2.01879191 392.90518188]
[5.05831337 379.67965698]
[12.13541889 366.45413208]
[-0.77623254 354.41830444]
[-9.82315254 339.24694824]
[-14.28064442 322.14157104]
[-13.78780746 304.45919800]
[-8.37675476 287.60464478]
[1.52938521 272.91891479]
[15.14954662 261.57250977]
[31.40630341 254.47216797]
[49.01110458 252.18835449]
[66.56639862 254.90946960]
[72.64023590 241.19421387]
[78.71407318 227.47894287]
[84.78790283 213.76367188]
[90.86174011 200.04841614]
[94.07501221 185.39662170]
[94.29833984 170.39828491]
[94.52166748 155.39994812]
[94.29833984 140.40161133]
[93.62855530 125.41657257]
[92.95877075 110.43153381]
[91.95450592 95.46518707]
[90.61627197 80.52500153]
[89.27803802 65.58481598]
[87.71752167 50.66621399]
[75.57719421 40.90658569]
[73.98168945 25.77684402]
[83.36082458 14.26305008]
[81.57835388 -0.63066763]
[79.79589081 -15.52438450]
[78.01342773 -30.41810226]
[76.12013245 -45.29813766]
[74.11611938 -60.16366577]
[72.11210632 -75.02919006]
[70.10809326 -89.89472198]
[68.10408020 -104.76025391]
[66.10006714 -119.62577820]
[51.18732834 -122.09595490]
[37.66596603 -128.85348511]
[26.73828697 -139.29748535]
[19.37597084 -152.49929810]
[16.23367119 -167.28500366]
[17.59079742 -182.33988953]
[23.32667732 -196.32528687]
[32.93128204 -207.99760437]
[45.55057144 -216.31895447]
[60.06244659 -220.54940796]
[75.17652893 -220.31282043]
[89.54887390 -215.63018799]
[101.90151215 -206.91790771]
[111.13605499 -194.95068359]
[116.43136597 -180.79260254]
[117.31658936 -165.70260620]
[113.71302032 -151.02250671]
[105.94108582 -138.05761719]
[94.69184875 -127.96076965]
[80.96559143 -121.62979126]
[82.96960449 -106.76426697]
[84.97361755 -91.89873505]
[86.97763062 -77.03321075]
[88.98164368 -62.16767883]
[90.98565674 -47.30215073]
[94.99461365 -41.09327698]
[92.90714264 -32.20056915]
[94.68960571 -17.30685043]
[96.47207642 -2.41313362]
[98.25453949 12.48058414]
[110.08579254 21.45594025]
[112.10563660 36.53489685]
[102.61123657 48.88374710]
[105.74535370 52.48740768]
[106.64894867 58.09815979]
[104.21822357 64.24658203]
[105.55645752 79.18676758]
[106.89469147 94.12695312]
[109.47373199 96.99417114]
[110.77642059 100.98426819]
[110.32960510 105.50172424]
[107.94380951 109.76174927]
[108.61359406 124.74678802]
[109.28337860 139.73182678]
[111.74900055 143.30598450]
[112.83936310 147.09751892]
[112.65500641 150.64735413]
[111.43522644 153.57630920]
[109.52000427 155.62327576]
[109.29667664 170.62161255]
[109.07334900 185.61994934]
[115.90045166 172.26365662]
[125.40480804 160.65902710]
[137.15402222 151.33401489]
[150.61358643 144.71281433]
[165.17117310 141.09667969]
[180.16452026 140.65010071]
[194.91152954 143.39340210]
[208.74131775 149.20176697]
[221.02470398 157.81097412]
[231.20288086 168.82936096]
[238.81282043 181.75564575]
[243.50830078 196.00177002]
[245.07572937 210.91966248]
[243.44380188 225.83062744]
[238.68673706 240.05632019]
[231.02096558 252.94956970]
[220.79522705 263.92382812]
[208.47471619 272.47982788]
[194.61993408 278.22830200]
[179.86120605 280.90780640]
[164.86991882 280.39639282]
[150.32810974 276.71731567]
[136.89730835 270.03796387]
[125.18853760 260.66220093]
[115.73446655 249.01658630]
[108.96519470 235.63088989]
[105.18867493 221.11407471]
[104.57700348 206.12223816]
[98.50317383 219.83750916]
[92.42933655 233.55278015]
[86.35549927 247.26805115]
[80.28166962 260.98330688]
[90.31636047 268.41912842]
[98.68416595 277.68298340]
[105.05836487 288.40960693]
[109.19075012 300.17681885]
[110.92131805 312.52191162]
[110.18443298 324.96002197]
[107.01136017 337.00299072]
[101.52889252 348.17871094]
[93.95434570 358.04956055]
[84.58688354 366.22946167]
[73.79573822 372.39910889]
[62.00566101 376.31829834]
[49.68017960 377.83547974]
[37.30339050 376.89334106]
[25.36094666 373.53121948]
[18.28384018 386.75674438]
[11.20673561 399.98229980]
[4.12963009 413.20782471]
[-2.94747519 426.43334961]
[-10.02458096 439.65887451]
[-17.10168648 452.88439941]
[-24.17879105 466.10992432]
[-31.25589752 479.33544922]
[-38.33300400 492.56097412]
[-25.90777206 500.98898315]
[-14.43159008 510.66964722]
[-4.03019714 521.49688721]
[5.18244362 533.35205078]
[13.10539341 546.10522461]
[19.65184593 559.61676025]
[24.75007057 573.73858643]
[28.34421158 588.31597900]
[30.39488983 603.18920898]
[30.87963486 618.19525146]
[29.79313850 633.16986084]
[27.14730072 647.94879150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 142]
[71 141]
[72 140]
[73 135]
[74 134]
[75 133]
[76 129]
[77 128]
[78 127]
[79 124]
[82 121]
[83 120]
[84 119]
[85 118]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
