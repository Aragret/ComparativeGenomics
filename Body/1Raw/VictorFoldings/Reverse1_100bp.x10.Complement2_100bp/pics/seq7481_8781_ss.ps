%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[76.99016571 486.30529785]
[63.50317764 493.10806274]
[48.64569092 495.83419800]
[33.62214279 494.26269531]
[19.65041924 488.52096558]
[7.86314631 479.07443237]
[-0.78413314 466.68890381]
[-5.59042311 452.36843872]
[-6.16609955 437.27389526]
[-2.46449518 422.62893677]
[5.21431828 409.62075806]
[16.24785233 399.30389404]
[29.74167061 392.51464844]
[44.60188675 389.80346680]
[46.16241074 374.88485718]
[47.72293091 359.96624756]
[49.28345490 345.04763794]
[50.84397888 330.12902832]
[52.40450287 315.21041870]
[53.96502304 300.29180908]
[55.52554703 285.37322998]
[57.08607101 270.45462036]
[58.64659500 255.53601074]
[51.52417374 248.20906067]
[49.56940079 237.95590210]
[53.66487885 228.11683655]
[62.68135071 222.03309631]
[64.68536377 207.16757202]
[66.68937683 192.30203247]
[60.72181320 178.65515137]
[70.23346710 166.01240540]
[72.23748016 151.14688110]
[70.01579285 144.09805298]
[74.38359070 136.07557678]
[65.83175659 148.39897156]
[54.78309250 158.54426575]
[41.77669525 166.01646423]
[27.44717026 170.45095825]
[12.49368858 171.63139343]
[-2.35413480 169.50015259]
[-16.37184334 164.16125488]
[-28.87548256 155.87518311]
[-39.25497055 145.04623413]
[-47.00386810 132.20277405]
[-51.74409485 117.97145844]
[-53.24435806 103.04666901]
[-51.43145752 88.15662384]
[-46.39385605 74.02783966]
[-38.37733841 61.34969330]
[-27.77305794 50.74077225]
[-15.09841347 42.71871185]
[-0.97183400 37.67493057]
[13.91741562 35.85552216]
[28.84285545 37.34925842]
[43.07624054 42.08325958]
[55.92309189 49.82654190]
[66.75658417 60.20129395]
[75.04812622 72.70130920]
[80.39315033 86.71668243]
[82.53086853 101.56356812]
[81.35822296 116.51107025]
[89.01882172 103.61473846]
[75.42042542 109.94591522]
[60.43330002 109.32460785]
[47.40560150 101.88962555]
[39.24774551 89.30195618]
[37.78222656 74.37371826]
[43.33644104 60.43991852]
[54.66956329 50.61340714]
[69.24974823 47.08944702]
[83.81974030 50.65530396]
[95.12456512 60.51435471]
[100.63870239 74.46405792]
[99.13027191 89.38803864]
[108.70539093 77.84174347]
[118.19429016 66.22447968]
[127.68318939 54.60721207]
[137.17208862 42.98994827]
[146.31088257 31.09531784]
[155.09149170 18.93386078]
[163.87210083 6.77240562]
[172.56192017 -5.45408010]
[181.16047668 -17.74491882]
[189.75904846 -30.03575516]
[198.35760498 -42.32659531]
[206.95617676 -54.61743164]
[215.55473328 -66.90827179]
[224.15330505 -79.19910431]
[232.75186157 -91.48994446]
[239.23136902 -105.01828766]
[243.41838074 -119.42207336]
[247.60539246 -133.82585144]
[251.79238892 -148.22964478]
[255.97940063 -162.63342285]
[260.16641235 -177.03720093]
[264.35342407 -191.44097900]
[250.77677917 -197.89625549]
[238.41149902 -206.44589233]
[227.57792664 -216.86845398]
[218.55664062 -228.89395142]
[211.58131409 -242.21089172]
[206.83264160 -256.47436523]
[204.43362427 -271.31488037]
[204.44639587 -286.34802246]
[206.87062073 -301.18444824]
[211.64350891 -315.43981934]
[218.64144897 -328.74490356]
[227.68315125 -340.75506592]
[238.53442383 -351.15917969]
[250.91419983 -359.68780518]
[264.50180054 -366.12002563]
[278.94528198 -370.28918457]
[293.87051392 -372.08731079]
[308.89093018 -371.46786499]
[323.61743164 -368.44686890]
[337.66854858 -363.10253906]
[350.68038940 -355.57336426]
[362.31585693 -346.05432129]
[372.27359009 -334.79202271]
[380.29565430 -322.07812500]
[386.17425537 -308.24200439]
[389.75711060 -293.64202881]
[390.95144653 -278.65640259]
[389.72631836 -263.67321777]
[386.11346436 -249.08064270]
[380.20642090 -235.25663757]
[372.15826416 -222.55928040]
[362.17739868 -211.31744385]
[350.52239990 -201.82234192]
[337.49514771 -194.31991577]
[323.43304443 -189.00448608]
[308.70037842 -186.01374817]
[293.67874146 -185.42515564]
[278.75720215 -187.25396729]
[274.57019043 -172.85018921]
[270.38317871 -158.44641113]
[266.19616699 -144.04263306]
[262.00915527 -129.63883972]
[257.82214355 -115.23506165]
[253.63514709 -100.83128357]
[263.83117676 -111.83313751]
[276.49890137 -119.86612701]
[290.79809570 -124.39744568]
[305.78036499 -125.12654114]
[320.45199585 -122.00505829]
[333.83984375 -115.24004364]
[345.05593872 -105.28018188]
[353.35641479 -92.78608704]
[358.19067383 -78.58644104]
[359.23806763 -63.62305450]
[356.42916870 -48.88839722]
[349.95028687 -35.35976791]
[340.23110962 -23.93446732]
[327.91625977 -15.37029743]
[313.82260132 -10.23528957]
[298.88485718 -8.87002850]
[284.09381104 -11.36506844]
[270.43051147 -17.55492210]
[258.80120850 -27.02903748]
[249.97718811 -39.15903473]
[244.54374695 -53.14036942]
[242.86125183 -68.04570770]
[245.04270935 -82.89138031]
[236.44413757 -70.60054016]
[227.84558105 -58.30970764]
[219.24700928 -46.01886749]
[210.64845276 -33.72803116]
[202.04988098 -21.43719292]
[193.45132446 -9.14635372]
[184.85275269 3.14448380]
[183.59422302 10.42719650]
[176.03355408 15.55300903]
[167.25294495 27.71446419]
[158.47235107 39.87591934]
[158.78544617 42.66161728]
[158.01397705 45.73918533]
[156.04121399 48.69614792]
[152.90180969 51.08543015]
[148.78935242 52.47884750]
[139.30044556 64.09611511]
[129.81155396 75.71337128]
[120.32265472 87.33063507]
[118.52594757 94.49957275]
[110.60497284 99.04885101]
[101.91514587 111.27533722]
[94.25454712 124.17166138]
[89.21763611 138.30068970]
[87.10301208 153.15089417]
[85.09899139 168.01641846]
[90.92321777 182.72659302]
[81.55490112 194.30604553]
[79.55088806 209.17158508]
[77.54687500 224.03710938]
[86.03721619 242.32034302]
[73.56520081 257.09652710]
[72.00467682 272.01513672]
[70.44415283 286.93374634]
[68.88362885 301.85235596]
[67.32310486 316.77096558]
[65.76258087 331.68954468]
[64.20205688 346.60815430]
[62.64153671 361.52676392]
[61.08101273 376.44537354]
[59.52049255 391.36398315]
[73.49797821 397.09167480]
[85.29473114 406.52636719]
[93.95445251 418.90319824]
[98.77512360 433.21884155]
[99.36596680 448.31280518]
[95.67907715 462.96145630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[27 193]
[28 192]
[29 191]
[31 189]
[32 188]
[34 187]
[61 186]
[62 185]
[74 184]
[75 182]
[76 181]
[77 180]
[78 179]
[79 174]
[80 173]
[81 172]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
