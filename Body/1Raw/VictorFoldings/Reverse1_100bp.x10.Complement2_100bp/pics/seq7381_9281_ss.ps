%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[-6.31828260 503.08410645]
[-11.24007988 517.26788330]
[-17.59420395 530.87048340]
[-25.31329727 543.74755859]
[-34.31553268 555.76269531]
[-44.50547791 566.78851318]
[-55.77511978 576.70819092]
[-68.00498962 585.41644287]
[-81.06545258 592.82110596]
[-94.81804657 598.84356689]
[-109.11699677 603.42004395]
[-123.81072235 606.50201416]
[-138.74345398 608.05676270]
[-153.75691223 608.06787109]
[-168.69194031 606.53521729]
[-183.39021301 603.47503662]
[-197.69592285 598.91973877]
[-211.45742798 592.91766357]
[-224.52883911 585.53234863]
[-236.77159119 576.84222412]
[-248.05592346 566.93927002]
[-258.26217651 555.92852783]
[-267.28219604 543.92675781]
[-275.02035522 531.06109619]
[-281.39462280 517.46795654]
[-286.33743286 503.29150391]
[-289.79635620 488.68191528]
[-291.73477173 473.79412842]
[-292.13211060 458.78591919]
[-290.98416138 443.81640625]
[-288.30310059 429.04428101]
[-284.11734009 414.62609863]
[-278.47125244 400.71475220]
[-271.42468262 387.45770264]
[-263.05233765 374.99542236]
[-253.44299316 363.46008301]
[-242.69845581 352.97393799]
[-230.93267822 343.64816284]
[-218.27033997 335.58160400]
[-204.84570312 328.85974121]
[-190.80107117 323.55389404]
[-176.28530884 319.72024536]
[-161.45230103 317.39950562]
[-146.45928955 316.61621094]
[-131.46519470 317.37866211]
[-116.62898254 319.67883301]
[-102.10791779 323.49230957]
[-88.05592346 328.77865601]
[-74.62196350 335.48184204]
[-66.58078766 322.81930542]
[-58.53961563 310.15679932]
[-50.49843979 297.49426270]
[-42.45726776 284.83175659]
[-34.41609573 272.16921997]
[-26.37492180 259.50668335]
[-18.33374977 246.84417725]
[-18.81211090 244.08204651]
[-18.22518158 240.96401978]
[-16.43192101 237.89488220]
[-13.44029617 235.32296753]
[-9.41806221 233.68724060]
[-0.63745880 221.52578735]
[0.53962713 206.67776489]
[14.89100552 200.01829529]
[15.02772236 195.24436951]
[18.16484261 190.50564575]
[24.11852455 187.63072205]
[33.25732803 175.73608398]
[42.39612961 163.84146118]
[51.53493118 151.94682312]
[60.67373276 140.05218506]
[69.72373199 128.08985901]
[78.68443298 116.06047821]
[87.64512634 104.03109741]
[96.24369049 91.74025726]
[104.47249603 79.19886017]
[112.70130157 66.65746307]
[118.67286682 52.89735794]
[122.21253967 38.32098007]
[125.75221252 23.74460602]
[129.29188538 9.16823101]
[123.69934845 -8.37614155]
[136.29856873 -20.59197617]
[138.41319275 -35.44217300]
[139.30599976 -50.41558075]
[140.19882202 -65.38898468]
[127.09230804 -79.06866455]
[128.12911987 -97.66538239]
[142.18463135 -109.39389038]
[142.63124084 -124.38723755]
[143.07785034 -139.38058472]
[132.77449036 -148.05558777]
[129.39794922 -160.89340210]
[133.96423340 -173.15028381]
[144.59628296 -180.42964172]
[145.26606750 -195.41467285]
[145.93585205 -210.39971924]
[146.60563660 -225.38475037]
[147.27542114 -240.36979675]
[133.36973572 -246.45225525]
[122.60306549 -257.15008545]
[116.43151855 -271.01644897]
[115.68973541 -286.17608643]
[120.47805023 -300.57873535]
[130.14886475 -312.27658081]
[143.39430237 -319.68759155]
[158.42300415 -321.80944824]
[173.20248413 -318.35525513]
[185.73391724 -309.79208374]
[194.32255554 -297.27810669]
[197.80682373 -282.50570679]
[195.71553040 -267.47268677]
[188.33149719 -254.21221924]
[176.65335083 -244.51760864]
[162.26046753 -239.70001221]
[161.59066772 -224.71496582]
[160.92088318 -209.72993469]
[160.25109863 -194.74488831]
[159.58131409 -179.75985718]
[171.45039368 -167.84498596]
[171.02124023 -150.69474792]
[158.07119751 -138.93399048]
[157.62458801 -123.94063568]
[157.17799377 -108.94728851]
[166.61549377 -102.53636932]
[171.84040833 -92.25941467]
[171.45159912 -80.61712646]
[165.43002319 -70.50566864]
[155.17222595 -64.49617004]
[154.27940369 -49.52276230]
[153.38659668 -34.54935837]
[162.56686401 -46.41201782]
[176.16979980 -52.73341370]
[191.15647888 -52.10133743]
[204.17883301 -44.65699005]
[212.32763672 -32.06345749]
[213.78242493 -17.13417244]
[208.21820068 -3.20437145]
[196.87800598 6.61399221]
[182.29530334 10.12747002]
[167.72787476 6.55114269]
[156.43013000 -3.31602931]
[150.92602539 -17.26971626]
[157.10517883 -6.87045527]
[154.45706177 5.34311247]
[143.86825562 12.70790291]
[140.32858276 27.28427887]
[136.78890991 41.86065292]
[133.24923706 56.43703079]
[142.91200256 44.96397400]
[155.09468079 36.21284103]
[169.05230713 30.71876335]
[183.93135071 28.81770897]
[198.82196045 30.62592697]
[212.81356812 36.03284454]
[225.05059814 44.70782471]
[234.78472900 56.12039185]
[241.42071533 69.57266235]
[244.55278015 84.24202728]
[243.98939514 99.23144531]
[239.76499939 113.62430573]
[232.13792419 126.54048157]
[221.57455444 137.19013977]
[208.72087097 144.92207336]
[194.36285400 149.26344299]
[179.37850952 149.94877625]
[164.68415833 146.93617249]
[151.17832947 140.40985107]
[139.68693542 130.76890564]
[130.91267395 118.60288239]
[125.39208984 104.65572357]
[123.46277618 89.78031921]
[125.24270630 74.88626862]
[117.01390076 87.42766571]
[108.78508759 99.96907043]
[109.14955139 102.99507141]
[108.42102814 106.22055817]
[106.52352142 109.24097443]
[103.53153229 111.62933350]
[99.67450714 112.99179840]
[90.71380615 125.02117157]
[81.75311279 137.05055237]
[79.13626862 145.80212402]
[72.56836700 149.19099426]
[63.42956543 161.08563232]
[54.29076004 172.98025513]
[45.15195847 184.87489319]
[36.01315689 196.76953125]
[27.05246162 208.79890442]
[25.24732780 224.51679993]
[11.52399731 230.30639648]
[2.74339366 242.46784973]
[-5.67122459 254.88534546]
[-13.71239758 267.54788208]
[-21.75357056 280.21038818]
[-29.79474449 292.87292480]
[-37.83591843 305.53543091]
[-45.87709045 318.19796753]
[-53.91826248 330.86050415]
[-61.95943451 343.52301025]
[-50.17984772 352.83135986]
[-39.41979980 363.30157471]
[-29.79336166 374.82269287]
[-21.40257072 387.27252197]
[-14.33638000 400.51913452]
[-8.66969204 414.42211914]
[-4.46257734 428.83407593]
[-1.75963426 443.60220337]
[-0.58951521 458.57000732]
[-0.96462423 473.57879639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 200]
[50 199]
[51 198]
[52 197]
[53 196]
[54 195]
[55 194]
[56 193]
[61 192]
[62 191]
[64 189]
[67 188]
[68 187]
[69 186]
[70 185]
[71 184]
[72 182]
[73 181]
[74 180]
[75 175]
[76 174]
[77 173]
[78 149]
[79 148]
[80 147]
[81 146]
[83 143]
[84 131]
[85 130]
[86 129]
[89 124]
[90 123]
[91 122]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
