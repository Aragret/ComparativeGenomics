%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[198.52148438 593.93695068]
[196.92037964 579.00817871]
[196.91520691 563.99377441]
[198.50601196 549.06390381]
[201.67478943 534.38769531]
[206.38562012 520.13146973]
[212.58512878 506.45675659]
[220.20307922 493.51846313]
[229.15315247 481.46325684]
[239.33392334 470.42767334]
[250.63005066 460.53677368]
[262.91351318 451.90264893]
[255.64028931 438.78396606]
[248.36706543 425.66525269]
[235.42895508 418.28591919]
[235.50439453 402.46490479]
[228.23115540 389.34622192]
[216.69323730 385.71261597]
[210.52642822 374.84274292]
[213.51104736 362.29461670]
[206.43394470 349.06909180]
[199.35684204 335.84356689]
[192.27972412 322.61804199]
[185.20262146 309.39251709]
[171.25622559 311.82385254]
[157.21946716 309.82617188]
[144.46659851 303.58163452]
[134.25025940 293.68890381]
[127.57852173 281.10565186]
[125.11537933 267.05593872]
[127.11470795 252.91110229]
[133.39414978 240.05590820]
[143.35166931 229.75302124]
[136.47225952 216.42358398]
[132.87532043 230.98593140]
[121.48046112 240.74079895]
[106.53768921 242.04983521]
[93.62028503 234.42483521]
[87.54612732 220.70971680]
[90.58071899 206.01988220]
[101.59223175 195.83427429]
[116.47365570 193.95188904]
[129.67538452 201.07562256]
[124.42866516 187.02316284]
[119.18194580 172.97068787]
[113.93522644 158.91821289]
[108.68850708 144.86573792]
[95.07340240 138.93577576]
[89.55229950 124.75932312]
[95.86450195 110.51875305]
[90.56258392 124.55049133]
[78.08928680 132.88217163]
[63.09683609 132.40626526]
[51.17705154 123.30030060]
[46.77571106 108.96055603]
[51.53441238 94.73541260]
[63.67827225 85.93048859]
[78.67793274 85.82981110]
[90.93959808 94.47185516]
[87.39992523 79.89547729]
[76.62460327 68.31088257]
[81.14002991 54.11721420]
[77.60035706 39.54084015]
[74.06068420 24.96446419]
[70.52101135 10.38808918]
[66.98133850 -4.18828630]
[63.44166565 -18.76466179]
[59.79357910 -33.31428146]
[56.03727722 -47.83634186]
[52.88538361 -50.82289886]
[51.03400421 -54.30670929]
[50.47976303 -57.81786346]
[51.06702805 -60.93583298]
[52.51718521 -63.33483124]
[49.63191223 -78.05471802]
[46.74663925 -92.77461243]
[43.86137009 -107.49450684]
[39.08423233 -93.27553558]
[29.54934883 -81.69598389]
[16.51120186 -74.27933502]
[1.68518126 -72.00137329]
[-12.97809505 -75.16180420]
[-25.54941940 -83.34482574]
[-34.37482071 -95.47380829]
[-38.29316330 -109.95298767]
[-36.78892136 -124.87737274]
[-30.06000710 -138.28340149]
[-18.99172211 -148.40728760]
[-5.04029036 -153.91705322]
[9.95873833 -154.08779907]
[24.03198242 -148.89706421]
[35.32786560 -139.02775574]
[42.36093521 -125.77611542]
[35.03794861 -139.80053711]
[43.15075684 -152.29179382]
[43.59736252 -167.28515625]
[44.04396820 -182.27850342]
[36.72097778 -196.30291748]
[44.83378983 -208.79418945]
[30.95506859 -214.99494934]
[20.50936508 -226.03831482]
[15.08957577 -240.24021912]
[15.52217674 -255.43499756]
[21.74119949 -269.30554199]
[32.79829025 -279.73672485]
[47.00732040 -285.13781738]
[62.20151520 -284.68524170]
[76.06387329 -278.44796753]
[86.48048401 -267.37716675]
[91.86289215 -253.16104126]
[91.39031982 -237.96745300]
[85.13481903 -224.11331177]
[74.05033112 -213.71127319]
[59.82713699 -208.34757996]
[67.18206787 -195.39558411]
[59.03731537 -181.83189392]
[58.59070969 -166.83854675]
[58.14410400 -151.84519958]
[65.49903870 -138.89318848]
[57.35428238 -125.32950592]
[58.58126068 -110.37977600]
[61.46653366 -95.65988159]
[64.35180664 -80.93999481]
[67.23707581 -66.22010040]
[70.55933380 -51.59264374]
[74.31563568 -37.07058334]
[79.03398895 -31.38208961]
[78.01804352 -22.30433464]
[81.55771637 -7.72795868]
[85.09738922 6.84841681]
[88.63706207 21.42479134]
[92.17673492 36.00116730]
[95.71640015 50.57754135]
[106.23854828 61.11954117]
[101.97630310 76.35581207]
[105.51597595 90.93218231]
[109.91696930 105.27203369]
[124.01748657 111.89118195]
[129.13822937 126.21712494]
[122.74098206 139.61901855]
[127.98769379 153.67149353]
[133.23442078 167.72396851]
[138.48114014 181.77644348]
[143.72784424 195.82890320]
[149.80168152 209.54417419]
[156.68109131 222.87361145]
[172.47346497 220.76629639]
[188.00651550 224.18824768]
[201.40614319 232.70777893]
[211.06211853 245.27929688]
[215.82151794 260.37164307]
[215.12643433 276.15451050]
[209.07926941 290.72045898]
[198.42814636 302.31539917]
[205.50526428 315.54095459]
[212.58236694 328.76647949]
[219.65946960 341.99200439]
[226.73657227 355.21752930]
[242.59973145 364.56857300]
[241.34985352 382.07296753]
[248.62307739 395.19168091]
[262.08142090 403.50933838]
[261.48574829 418.39202881]
[268.75900269 431.51074219]
[276.03222656 444.62942505]
[289.86267090 438.78555298]
[304.23593140 434.44488525]
[318.98916626 431.65661621]
[333.95516968 430.45236206]
[348.96441650 430.84573364]
[363.84680176 432.83227539]
[378.43374634 436.38949585]
[392.55990601 441.47711182]
[406.06524658 448.03741455]
[418.79675293 455.99612427]
[430.61013794 465.26303101]
[441.37161255 475.73315430]
[450.95916748 487.28784180]
[459.26419067 499.79617310]
[466.19259644 513.11645508]
[471.66586304 527.09771729]
[475.62197876 541.58154297]
[478.01614380 556.40380859]
[478.82116699 571.39660645]
[478.02801514 586.39001465]
[475.64559937 601.21423340]
[471.70092773 615.70117188]
[466.23873901 629.68676758]
[459.32089233 643.01245117]
[451.02575684 655.52740479]
[441.44735718 667.08966064]
[430.69418335 677.56829834]
[418.88812256 686.84454346]
[406.16293335 694.81335449]
[392.66278076 701.38433838]
[378.54064941 706.48309326]
[363.95654297 710.05187988]
[349.07574463 712.05023193]
[334.06680298 712.45550537]
[319.09985352 711.26306152]
[304.34442139 708.48651123]
[289.96771240 704.15722656]
[276.13265991 698.32427979]
[262.99597168 691.05377197]
[250.70654297 682.42816162]
[239.40359497 672.54504395]
[229.21522522 661.51647949]
[220.25685120 649.46746826]
[212.62997437 636.53442383]
[206.42103577 622.86395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 165]
[13 164]
[14 163]
[16 161]
[17 160]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[33 146]
[34 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[50 137]
[59 136]
[60 135]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 126]
[69 125]
[74 124]
[75 123]
[76 122]
[77 121]
[93 120]
[95 118]
[96 117]
[97 116]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
