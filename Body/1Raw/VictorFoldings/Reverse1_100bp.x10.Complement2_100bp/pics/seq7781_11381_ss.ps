%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[2.20409536 845.06915283]
[-12.54818630 847.80505371]
[-27.42878151 849.72412109]
[-42.39249802 850.82049561]
[-57.39389038 851.09094238]
[-72.38739777 850.53454590]
[-87.32749176 849.15307617]
[-102.16879272 846.95062256]
[-116.86622620 843.93395996]
[-131.37516785 840.11224365]
[-145.65155029 835.49707031]
[-159.65200806 830.10241699]
[-173.33401489 823.94476318]
[-186.65605164 817.04266357]
[-199.57762146 809.41723633]
[-212.05950928 801.09149170]
[-224.06379700 792.09082031]
[-235.55403137 782.44256592]
[-246.49531555 772.17596436]
[-256.85440063 761.32220459]
[-266.59988403 749.91424561]
[-275.70208740 737.98681641]
[-284.13345337 725.57604980]
[-291.86828613 712.71960449]
[-298.88317871 699.45666504]
[-305.15676880 685.82739258]
[-310.67004395 671.87322998]
[-315.40621948 657.63653564]
[-319.35095215 643.16052246]
[-322.49224854 628.48925781]
[-324.82052612 613.66717529]
[-326.32879639 598.73931885]
[-327.01242065 583.75109863]
[-326.86932373 568.74792480]
[-325.89996338 553.77545166]
[-324.10726929 538.87908936]
[-321.49667358 524.10412598]
[-318.07614136 509.49542236]
[-313.85601807 495.09732056]
[-308.84918213 480.95355225]
[-303.07077026 467.10705566]
[-296.53836060 453.59994507]
[-289.27178955 440.47317505]
[-281.29312134 427.76666260]
[-272.62661743 415.51895142]
[-263.29855347 403.76724243]
[-253.33728027 392.54727173]
[-242.77305603 381.89306641]
[-231.63793945 371.83700562]
[-219.96577454 362.40963745]
[-207.79200745 353.63955688]
[-195.15359497 345.55343628]
[-182.08892822 338.17581177]
[-168.63768005 331.52911377]
[-154.84069824 325.63348389]
[-140.73989868 320.50686646]
[-126.37809753 316.16479492]
[-111.79890442 312.62051392]
[-97.04660034 309.88473511]
[-82.16599274 307.96575928]
[-67.20227051 306.86947632]
[-52.20087814 306.59915161]
[-37.20737457 307.15563965]
[-22.26729012 308.53726196]
[-7.42600536 310.73977661]
[7.27141142 313.75653076]
[21.78032303 317.57836914]
[26.39433289 303.30563354]
[31.00834274 289.03289795]
[35.62235260 274.76016235]
[40.23636246 260.48742676]
[44.85036850 246.21469116]
[49.46437836 231.94195557]
[54.07838821 217.66923523]
[58.69239807 203.39649963]
[63.30640793 189.12376404]
[67.92041779 174.85102844]
[72.53442383 160.57829285]
[65.54513550 147.47541809]
[70.02107239 132.93510437]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[101.34782410 64.60537720]
[102.29975128 60.06147003]
[104.67288208 56.74736023]
[107.73793030 55.00442886]
[113.19328308 41.03163147]
[118.64864349 27.05883217]
[124.10399628 13.08603382]
[129.24595642 -1.00510681]
[134.07196045 -15.20756245]
[138.89794922 -29.41001892]
[125.54709625 -36.31018448]
[113.37384033 -45.12320709]
[102.65012360 -55.65219879]
[93.61553955 -67.66194153]
[86.47190094 -80.88412476]
[81.37881470 -95.02336884]
[78.45006561 -109.76378632]
[77.75106812 -124.77608490]
[79.29744720 -139.72486877]
[83.05465698 -154.27619934]
[88.93875885 -168.10498047]
[96.81829834 -180.90226746]
[106.51724243 -192.38215637]
[117.81891632 -202.28820801]
[130.47084045 -210.39910889]
[144.19035339 -216.53364563]
[158.67095947 -220.55477905]
[173.58917236 -222.37268066]
[188.61169434 -221.94673157]
[203.40292358 -219.28645325]
[217.63243103 -214.45126343]
[230.98229980 -207.54919434]
[243.15429688 -198.73443604]
[253.87651062 -188.20391846]
[262.90939331 -176.19288635]
[270.05114746 -162.96968079]
[275.14221191 -148.82972717]
[278.06887817 -134.08888245]
[278.76571655 -119.07648468]
[277.21722412 -104.12791443]
[273.45794678 -89.57712555]
[267.57186890 -75.74919128]
[259.69049072 -62.95302582]
[249.98992920 -51.47450638]
[238.68684387 -41.57006454]
[226.03376770 -33.46097183]
[212.31336975 -27.32838631]
[197.83219910 -23.30931282]
[182.91372681 -21.49353790]
[167.89126587 -21.92162895]
[153.10040283 -24.58402061]
[148.27441406 -10.38156509]
[143.44841003 3.82089090]
[144.67057800 7.12825632]
[144.35150146 11.19190502]
[142.15318298 15.28100109]
[138.07679749 18.54139137]
[132.62144470 32.51419067]
[127.16608429 46.48698807]
[121.71072388 60.45978546]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[105.02648163 144.25146484]
[100.14389801 158.66030884]
[86.80715942 165.19230652]
[82.19315338 179.46504211]
[77.57913971 193.73777771]
[72.96513367 208.01049805]
[68.35112000 222.28323364]
[63.73711395 236.55596924]
[59.12310410 250.82870483]
[54.50909424 265.10144043]
[49.89508438 279.37417603]
[45.28107452 293.64691162]
[40.66706467 307.91964722]
[36.05305862 322.19238281]
[50.05355072 327.58691406]
[63.73561478 333.74450684]
[77.05769348 340.64648438]
[89.97932434 348.27185059]
[102.46127319 356.59747314]
[114.46562195 365.59805298]
[125.95591736 375.24624634]
[136.89727783 385.51278687]
[147.25645447 396.36645508]
[157.00198364 407.77432251]
[166.10429382 419.70172119]
[174.53572083 432.11245728]
[182.27067566 444.96878052]
[189.28564453 458.23171997]
[195.55934143 471.86093140]
[201.07270813 485.81506348]
[205.80899048 500.05172729]
[209.75381470 514.52764893]
[212.89520264 529.19897461]
[215.22361755 544.02099609]
[216.73196411 558.94885254]
[217.41569519 573.93707275]
[217.27270508 588.94024658]
[216.30345154 603.91271973]
[214.51086426 618.80908203]
[211.90037537 633.58404541]
[208.47994995 648.19281006]
[204.25993347 662.59094238]
[199.25317383 676.73474121]
[193.47486877 690.58123779]
[186.94255066 704.08843994]
[179.67607117 717.21527100]
[171.69750977 729.92181396]
[163.03108215 742.16961670]
[153.70309448 753.92138672]
[143.74191284 765.14141846]
[133.17774963 775.79565430]
[122.04271698 785.85180664]
[110.37062073 795.27929688]
[98.19690704 804.04943848]
[85.55855560 812.13568115]
[72.49393463 819.51336670]
[59.04273605 826.16015625]
[45.24580383 832.05590820]
[31.14503670 837.18261719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[81 151]
[82 150]
[85 148]
[86 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 139]
[95 138]
[96 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
