%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[118.47758484 553.67504883]
[110.62852478 540.47326660]
[110.44799805 525.11541748]
[117.98455048 511.73275757]
[131.21090698 503.92510986]
[130.98757935 488.92675781]
[130.76425171 473.92843628]
[130.42927551 458.93215942]
[129.98266602 443.93881226]
[129.53605652 428.94546509]
[119.52185059 414.53427124]
[128.38464355 398.39324951]
[127.71485901 383.40823364]
[127.04507446 368.42318726]
[115.91414642 358.59271240]
[115.02142334 343.40530396]
[125.40798950 331.79681396]
[124.73820496 316.81176758]
[124.06841278 301.82672119]
[123.39862823 286.84170532]
[122.72884369 271.85665894]
[122.05905914 256.87161255]
[121.16624451 241.89820862]
[120.05059814 226.93975830]
[118.82362366 211.99002075]
[117.48538971 197.04983521]
[114.81958771 182.28862000]
[110.84749603 167.82409668]
[106.87539673 153.35957336]
[102.90330505 138.89505005]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[82.50542450 66.72388458]
[78.31841278 52.32010651]
[75.01312256 66.95140839]
[66.96127319 79.60714722]
[55.10877609 88.80052948]
[40.84805679 93.45153809]
[25.85444450 93.01376343]
[11.88937950 87.53864288]
[0.59346098 77.66938782]
[-6.70627785 64.56542206]
[-9.15227032 49.76619720]
[-6.45716381 35.01030350]
[1.06242299 22.03125000]
[12.52309704 12.35380459]
[26.57846832 7.11486292]
[41.57732773 6.92989016]
[55.75762558 11.82061768]
[67.45346832 21.21248627]
[75.29142761 34.00360870]
[74.62164307 19.01856804]
[73.95185852 4.03353024]
[73.28206635 -10.95150852]
[72.50074768 -25.93114662]
[71.60793304 -40.90455246]
[70.71511841 -55.87795639]
[69.82230377 -70.85136414]
[61.22218704 -58.56160736]
[47.38370132 -52.77401352]
[32.59484100 -55.28193283]
[21.43810081 -65.30825043]
[17.37051582 -79.74621582]
[21.65247154 -94.12206268]
[32.95715714 -103.98126984]
[47.78169632 -106.26886749]
[61.53253937 -100.27601624]
[69.94892120 -87.85941315]
[71.06456757 -102.81786346]
[72.18021393 -117.77632141]
[73.29586792 -132.73477173]
[74.41151428 -147.69322205]
[75.52716064 -162.65167236]
[67.14888000 -179.04942322]
[77.58772278 -193.15606689]
[78.48053741 -208.12947083]
[66.42039490 -215.21577454]
[58.62719345 -226.75190735]
[56.57455063 -240.45463562]
[60.60666275 -253.64141846]
[69.88214111 -263.75549316]
[82.54882812 -268.86157227]
[83.66447449 -283.82000732]
[84.78012848 -298.77847290]
[74.87715149 -304.55300903]
[67.87583923 -313.56533813]
[64.75741577 -324.48999023]
[65.93558502 -335.73812866]
[71.20205688 -345.68875122]
[79.76213837 -352.92221069]
[90.35444641 -356.42276001]
[92.13690948 -371.31646729]
[93.91938019 -386.21017456]
[95.70184326 -401.10391235]
[89.65925598 -415.72573853]
[98.85412598 -427.44338989]
[100.63659668 -442.33709717]
[102.41905975 -457.23083496]
[88.68132019 -463.56561279]
[77.57488251 -473.83706665]
[70.18785858 -487.03884888]
[67.24393463 -501.87759399]
[69.03154755 -516.89953613]
[75.37554169 -530.63305664]
[85.65441895 -541.73260498]
[98.86114502 -549.11077881]
[113.70186615 -552.04473877]
[128.72264099 -550.24707031]
[142.45187378 -543.89385986]
[153.54452515 -533.60754395]
[160.91386414 -520.39593506]
[163.83789062 -505.55322266]
[162.03015137 -490.53366089]
[155.66775513 -476.80868530]
[145.37402344 -465.72293091]
[132.15740967 -458.36245728]
[117.31277466 -455.44836426]
[115.53031158 -440.55465698]
[113.74784851 -425.66091919]
[119.91793060 -412.10440063]
[110.59555817 -399.32144165]
[108.81309509 -384.42773438]
[107.03063202 -369.53399658]
[105.24816132 -354.64028931]
[119.66799164 -342.75073242]
[124.04324341 -324.42626953]
[116.42990112 -307.02954102]
[99.73857880 -297.66281128]
[98.62293243 -282.70437622]
[97.50727844 -267.74591064]
[111.08009338 -258.97714233]
[118.42098999 -244.47656250]
[117.44187927 -228.15913391]
[108.31547546 -214.48417664]
[93.45394135 -207.23664856]
[92.56112671 -192.26324463]
[100.35317230 -183.01065063]
[99.73189545 -170.52874756]
[90.48561859 -161.53602600]
[89.36996460 -146.57757568]
[88.25431824 -131.61912537]
[87.13867188 -116.66066742]
[86.02301788 -101.70221710]
[84.90737152 -86.74376678]
[84.79570770 -71.74417877]
[85.68852234 -56.77077484]
[86.58133698 -41.79736710]
[87.47415161 -26.82396126]
[91.01020813 -20.33411407]
[88.26710510 -11.62129402]
[88.93689728 3.36374497]
[89.60668182 18.34878349]
[90.27646637 33.33382416]
[92.72219086 48.13309479]
[96.90920258 62.53687668]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.36782837 134.92295837]
[121.33992004 149.38748169]
[125.31201935 163.85200500]
[129.28411865 178.31652832]
[133.78475952 164.00764465]
[143.98480225 153.00949097]
[157.91474915 147.44564819]
[172.88497925 148.39041138]
[186.00494385 155.66134644]
[194.74139404 167.85455322]
[197.40747070 182.61572266]
[193.48837280 197.09469604]
[183.74084473 208.49581909]
[170.04695129 214.61770630]
[155.05079651 214.27832031]
[141.64788818 207.54318237]
[132.42556763 195.71160889]
[133.76380920 210.65179443]
[137.64634705 218.92002869]
[135.00904846 225.82411194]
[136.12469482 240.78256226]
[139.52537537 246.45239258]
[139.54870605 252.13539124]
[137.04409790 256.20184326]
[137.71388245 271.18685913]
[138.38366699 286.17190552]
[139.05345154 301.15695190]
[139.72323608 316.14199829]
[140.39302063 331.12701416]
[151.77383423 341.76257324]
[152.23962402 356.96908569]
[142.03010559 367.75338745]
[142.69989014 382.73843384]
[143.36967468 397.72348022]
[152.34411621 406.98751831]
[152.59349060 419.48236084]
[144.52940369 428.49887085]
[144.97601318 443.49221802]
[145.42262268 458.48556519]
[148.80615234 466.97024536]
[145.76258850 473.70510864]
[145.98591614 488.70343018]
[146.20924377 503.70178223]
[159.66218567 511.11215210]
[167.59385681 524.26452637]
[167.87066650 539.62091064]
[160.41815186 553.05053711]
[147.24101257 560.94097900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 201]
[9 200]
[10 199]
[12 196]
[13 195]
[14 194]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 183]
[24 182]
[25 180]
[26 179]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 159]
[34 158]
[35 157]
[36 156]
[53 155]
[54 154]
[55 153]
[56 152]
[57 150]
[58 149]
[59 148]
[60 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[77 138]
[78 137]
[84 132]
[85 131]
[86 130]
[93 126]
[94 125]
[95 124]
[96 123]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
