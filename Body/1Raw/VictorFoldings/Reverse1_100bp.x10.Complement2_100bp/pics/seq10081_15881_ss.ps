%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[64.43217468 497.04901123]
[70.40232086 510.93603516]
[72.01230621 525.96594238]
[69.11898041 540.80242920]
[61.97960663 554.12609863]
[51.22901917 564.75231934]
[37.82315445 571.73614502]
[22.95404625 574.45666504]
[7.94385004 572.67187500]
[-5.87273884 566.54052734]
[-17.26715851 556.60784912]
[-25.22622490 543.75695801]
[-29.04222298 529.13061523]
[-28.37583733 514.02941895]
[-23.28632355 499.79605103]
[-14.22623539 487.69619751]
[-2.00119090 478.80578613]
[12.30176735 473.91531372]
[27.41082954 473.45962524]
[31.38292503 458.99511719]
[35.35502243 444.53057861]
[39.32711792 430.06607056]
[43.29921341 415.60153198]
[47.27130890 401.13702393]
[50.26608658 386.43899536]
[52.27009964 371.57348633]
[54.27411270 356.70794678]
[56.27812576 341.84240723]
[58.28213882 326.97689819]
[60.28615189 312.11135864]
[62.29016876 297.24584961]
[49.73604965 305.45523071]
[35.02640915 302.51815796]
[26.58759499 290.11706543]
[29.25374413 275.35592651]
[41.49756622 266.69055176]
[56.30524063 269.08486938]
[65.19403076 281.16638184]
[63.63442230 278.00408936]
[63.52900314 273.92932129]
[65.28997803 269.63369751]
[69.00505829 265.96691895]
[72.97714996 251.50239563]
[76.94924927 237.03787231]
[72.85842133 222.71604919]
[83.97388458 211.45741272]
[87.94598389 196.99288940]
[91.91807556 182.52836609]
[95.89017487 168.06384277]
[97.22840881 153.12365723]
[95.89017487 138.18347168]
[94.55194092 123.24328613]
[81.97264862 115.65075684]
[76.22195435 102.12986755]
[79.47817230 87.80220032]
[90.50787354 78.09494781]
[89.16963959 63.15476608]
[87.83140564 48.21458054]
[86.49317169 33.27439499]
[84.71070862 18.38067627]
[82.48558807 3.54663324]
[80.26047516 -11.28741074]
[78.03535461 -26.12145424]
[75.81024170 -40.95549774]
[66.96511841 -28.84088326]
[52.43289566 -25.12411118]
[38.85749817 -31.50444031]
[32.44541931 -45.06486893]
[36.12817383 -59.60575485]
[48.22205734 -68.47919464]
[63.19791031 -67.62837982]
[74.20982361 -57.44063950]
[73.54003906 -72.42567444]
[72.87025452 -87.41071320]
[72.20046997 -102.39575195]
[71.53068542 -117.38079071]
[69.74822235 -132.27450562]
[66.86294556 -146.99440002]
[56.61564636 -159.04858398]
[61.76035309 -173.02647400]
[58.76557922 -187.72448730]
[55.66146851 -202.39978027]
[52.55735779 -217.07508850]
[49.45324707 -231.75038147]
[34.39690018 -231.75979614]
[19.67160988 -234.89979553]
[5.92110395 -241.03308105]
[-6.25350475 -249.89155579]
[-16.31999588 -261.08795166]
[-23.83830261 -274.13284302]
[-28.47976112 -288.45590210]
[-30.04146385 -303.43106079]
[-28.45514107 -318.40359497]
[-23.79013824 -332.71902466]
[-16.25039101 -345.75152588]
[-6.16550446 -356.93136597]
[6.02365351 -365.76980591]
[19.78422546 -371.88049316]
[34.51465988 -374.99624634]
[49.57100296 -374.98089600]
[64.29505157 -371.83514404]
[78.04314423 -365.69644165]
[90.21427155 -356.83316040]
[100.27635193 -345.63281250]
[107.78952789 -332.58496094]
[112.42535400 -318.26007080]
[113.98116302 -303.28433228]
[112.38895416 -288.31237793]
[107.71831512 -273.99880981]
[100.17344666 -260.96926880]
[90.08415985 -249.79341125]
[77.89152527 -240.95976257]
[64.12854767 -234.85449219]
[67.23265839 -220.17919922]
[70.33676910 -205.50389099]
[73.44087982 -190.82858276]
[77.90052032 -184.93508911]
[76.48023987 -175.91174316]
[86.52117157 -164.91043091]
[81.58283997 -149.87966919]
[84.46810913 -135.15979004]
[90.82254028 -148.74732971]
[103.06254578 -157.41810608]
[117.98860931 -158.90559387]
[131.69909668 -152.82098389]
[140.61012268 -140.75476074]
[142.39236450 -125.86102295]
[136.57994080 -112.03293610]
[124.69222260 -102.88514709]
[109.83661652 -100.80886078]
[95.89634705 -106.34680939]
[86.51572418 -118.05057526]
[87.18550873 -103.06553650]
[87.85529327 -88.08049774]
[88.52507782 -73.09545898]
[89.19486237 -58.11042404]
[90.64427948 -43.18061447]
[92.86940002 -28.34657097]
[95.09452057 -13.51252747]
[97.31963348 1.32151604]
[99.54475403 16.15555954]
[101.71627808 17.92830276]
[103.31643677 20.66802788]
[103.97340393 24.16142273]
[103.39936829 28.06462669]
[101.43335724 31.93615913]
[102.77159119 46.87634659]
[104.10982513 61.81652832]
[105.44805908 76.75671387]
[118.02735138 84.34924316]
[123.77804565 97.87013245]
[120.52182770 112.19779968]
[109.49212646 121.90505219]
[110.83036041 136.84523010]
[112.16859436 151.78541565]
[117.59840393 137.80267334]
[126.17635345 125.49744415]
[137.41732788 115.56564331]
[150.68557739 108.56896973]
[165.23072815 104.90312195]
[180.23019409 104.77540588]
[194.83566284 108.19306183]
[208.22111511 114.96279907]
[219.62957764 124.70175171]
[228.41581726 136.85913086]
[234.08293152 150.74739075]
[236.31042480 165.58108521]
[234.97230530 180.52128601]
[230.14428711 194.72305298]
[222.09938049 207.38319397]
[211.29257202 217.78575134]
[198.33506775 225.34239197]
[183.95964050 229.62573242]
[168.97929382 230.39356995]
[154.24127197 227.60243225]
[140.57904053 221.41021729]
[128.76528931 212.16708374]
[119.46813965 200.39581299]
[113.21339417 186.76210022]
[110.35469818 172.03593445]
[106.38259888 186.50045776]
[102.41050720 200.96498108]
[98.43840790 215.42950439]
[102.24512482 230.78591919]
[91.41377258 241.00996399]
[87.44167328 255.47448730]
[83.46958160 269.93902588]
[79.82148743 284.48864746]
[77.15569305 299.24984741]
[75.15167999 314.11538696]
[73.14766693 328.98089600]
[71.14365387 343.84643555]
[69.13964081 358.71197510]
[67.13562775 373.57748413]
[65.13161469 388.44302368]
[75.93508148 378.03701782]
[90.62840271 375.01934814]
[104.65869141 380.32507324]
[113.67852020 392.31018066]
[114.89298248 407.26095581]
[107.92576599 420.54470825]
[94.93575287 428.04531860]
[79.94802094 427.43869019]
[67.60669708 418.91275024]
[61.73583603 405.10910034]
[57.76373672 419.57363892]
[53.79164124 434.03814697]
[49.81954575 448.50268555]
[45.84745026 462.96719360]
[41.87535477 477.43173218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[38 188]
[42 187]
[43 186]
[44 185]
[46 183]
[47 182]
[48 181]
[49 180]
[50 155]
[51 154]
[52 153]
[56 149]
[57 148]
[58 147]
[59 146]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 121]
[78 120]
[80 118]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
