%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[44.38242340 712.58068848]
[30.86355019 706.01885986]
[18.44421196 697.55847168]
[7.38912296 687.37994385]
[-2.06607461 675.70013428]
[-9.71984386 662.76812744]
[-15.40904331 648.85943604]
[-19.01240730 634.27062988]
[-20.45313072 619.31262207]
[-19.70050430 604.30426025]
[-16.77056885 589.56542969]
[-11.72577858 575.41027832]
[-4.67366123 562.14056396]
[4.23546553 550.03906250]
[14.81170368 539.36383057]
[26.82961845 530.34234619]
[40.03305054 523.16687012]
[54.14056396 517.99041748]
[68.85146332 514.92321777]
[67.95864868 499.94982910]
[67.06582642 484.97644043]
[55.78977585 475.31277466]
[54.67103195 460.14035034]
[64.88361359 448.37850952]
[63.99079514 433.40509033]
[61.07672882 429.62127686]
[60.50869751 423.96667480]
[63.30106735 417.97384644]
[62.85446167 402.98049927]
[62.40785599 387.98715210]
[61.96125031 372.99380493]
[61.51464462 358.00045776]
[61.06803894 343.00708008]
[60.62143326 328.01373291]
[49.57384109 338.16021729]
[34.58215714 337.66082764]
[24.23429680 326.80163574]
[24.45798302 311.80331421]
[35.12508011 301.25753784]
[50.12498856 301.20544434]
[60.86470413 311.67599487]
[61.75751877 296.70257568]
[62.65033722 281.72918701]
[59.91053391 274.86511230]
[63.66954803 266.54000854]
[64.78519440 251.58154297]
[54.09773254 262.10665894]
[39.28248978 264.45370483]
[25.86519051 257.74728394]
[18.85015297 244.48873901]
[20.85381317 229.62315369]
[31.12885475 218.69505310]
[45.84294510 215.78033447]
[59.50808716 221.96611023]
[67.02777100 234.94639587]
[69.91304779 220.22650146]
[72.79831696 205.50660706]
[59.82260513 196.18022156]
[52.18529892 182.07754517]
[51.46003342 165.99781799]
[57.84270477 151.15795898]
[70.10211182 140.54896545]
[85.81710052 136.33317566]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[96.15025330 77.23081970]
[94.47763824 73.22377777]
[94.19550323 69.28869629]
[95.11047363 65.85383606]
[96.90997314 63.24071503]
[99.20733643 61.63439178]
[102.52959442 47.00693130]
[94.37142944 33.73734283]
[97.94904327 18.95034409]
[110.64984894 11.25455379]
[113.97210693 -3.37290645]
[117.29437256 -18.00036621]
[120.61663055 -32.62782669]
[112.45845795 -45.89741898]
[116.03607941 -60.68441772]
[128.73687744 -68.38020325]
[132.05914307 -83.00766754]
[135.27241516 -97.65945435]
[121.46835327 -91.79022217]
[108.20096588 -98.78852844]
[105.25046539 -113.49548340]
[114.79186249 -125.06967163]
[129.79159546 -124.97902679]
[139.19201660 -113.29197693]
[143.37902832 -127.69575500]
[147.56604004 -142.09953308]
[151.75305176 -156.50332642]
[155.94006348 -170.90710449]
[160.12707520 -185.31088257]
[164.31408691 -199.71466064]
[160.73643494 -215.12605286]
[171.71881104 -225.18769836]
[175.90582275 -239.59149170]
[180.09283447 -253.99526978]
[166.77775574 -261.01620483]
[155.14875793 -270.57400513]
[145.68205261 -282.27725220]
[138.76527405 -295.64675903]
[134.68168640 -310.13497925]
[133.59849548 -325.14871216]
[135.56005859 -340.07308960]
[140.48605347 -354.29699707]
[148.17475891 -367.23794556]
[158.31132507 -378.36605835]
[170.48066711 -387.22561646]
[184.18447876 -393.45385742]
[198.86157227 -396.79568481]
[213.91093445 -397.11428833]
[228.71630859 -394.39660645]
[242.67141724 -388.75393677]
[255.20481873 -380.41735840]
[265.80328369 -369.72821045]
[274.03277588 -357.12423706]
[279.55633545 -343.12155151]
[282.14776611 -328.29357910]
[281.70095825 -313.24746704]
[278.23419189 -298.59936523]
[271.88946533 -284.94912720]
[262.92654419 -272.85571289]
[251.71246338 -262.81433105]
[238.70646667 -255.23614502]
[224.44110107 -250.43151855]
[209.50054932 -248.59718323]
[194.49661255 -249.80825806]
[190.30960083 -235.40447998]
[186.12258911 -221.00068665]
[189.99972534 -206.61955261]
[178.71788025 -195.52764893]
[174.53086853 -181.12387085]
[170.34385681 -166.72009277]
[166.15684509 -152.31631470]
[161.96983337 -137.91252136]
[157.78282166 -123.50874329]
[153.59580994 -109.10496521]
[149.94772339 -94.55534363]
[151.63899231 -87.36080170]
[146.68659973 -79.68540955]
[143.36434937 -65.05794525]
[151.49475098 -52.63087082]
[148.33387756 -37.74922180]
[135.24409485 -29.30556679]
[131.92182922 -14.67810726]
[128.59956360 -0.05064691]
[125.27731323 14.57681370]
[133.40771484 27.00388718]
[130.24684143 41.88554001]
[117.15705872 50.32919312]
[113.83480072 64.95664978]
[110.94952393 79.67654419]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[100.57832336 138.99897766]
[112.32785034 146.85360718]
[120.17246246 158.55772400]
[122.95520020 172.32586670]
[120.28829956 186.07279968]
[112.60682678 197.72930908]
[101.09807587 205.55368042]
[87.51821136 208.39187622]
[84.63293457 223.11177063]
[81.74766541 237.83166504]
[79.74365234 252.69718933]
[78.62799835 267.65563965]
[77.62374115 282.62197876]
[76.73092651 297.59539795]
[75.83811188 312.56878662]
[75.61478424 327.56713867]
[76.06138611 342.56048584]
[76.50799561 357.55383301]
[76.95459747 372.54718018]
[77.40120697 387.54052734]
[77.84780884 402.53387451]
[78.29441833 417.52725220]
[78.96420288 432.51226807]
[79.85701752 447.48568726]
[91.39491272 457.95062256]
[92.08705139 473.14849854]
[82.03923798 484.08361816]
[82.93205261 499.05703735]
[83.82486725 514.03045654]
[98.79599762 515.32775879]
[113.41868591 518.79113770]
[127.38122559 524.34674072]
[140.38603210 531.87622070]
[152.15588379 541.21905518]
[162.43991089 552.17608643]
[171.01890564 564.51379395]
[177.71002197 577.96917725]
[182.37063599 592.25537109]
[184.90139771 607.06799316]
[185.24835205 622.09124756]
[183.40412903 637.00488281]
[179.40802002 651.49102783]
[173.34519958 665.24096680]
[165.34492493 677.96154785]
[155.57769775 689.38165283]
[144.25170898 699.25787354]
[131.60838318 707.37969971]
[117.91719818 713.57403564]
[103.46999359 717.70874023]
[88.57470703 719.69586182]
[73.54884338 719.49285889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 188]
[20 187]
[21 186]
[24 183]
[25 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[41 174]
[42 173]
[43 172]
[45 171]
[46 170]
[55 169]
[56 168]
[57 167]
[63 160]
[64 159]
[65 158]
[66 156]
[67 155]
[72 154]
[73 153]
[76 150]
[77 149]
[78 148]
[79 147]
[82 144]
[83 143]
[84 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
