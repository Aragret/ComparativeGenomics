%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[92.58065033 507.47171021]
[88.54806519 492.75091553]
[91.31037903 477.73986816]
[100.31913757 465.41894531]
[113.78563690 458.23449707]
[113.11584473 443.24945068]
[112.44606018 428.26440430]
[111.77627563 413.27938843]
[111.10649109 398.29434204]
[110.43670654 383.30929565]
[100.20904541 369.04879761]
[108.83054352 352.77761841]
[107.93772888 337.80419922]
[107.04491425 322.83081055]
[98.56378937 310.58663940]
[105.46597290 296.35040283]
[104.57315063 281.37698364]
[91.52893066 270.76156616]
[90.17151642 253.65974426]
[101.82776642 240.61555481]
[93.16528320 228.49900818]
[99.85474396 214.16157532]
[98.73909760 199.20312500]
[97.62345123 184.24467468]
[93.99116516 177.80819702]
[96.60423279 169.05549622]
[95.71141815 154.08209229]
[94.81860352 139.10868835]
[86.33747864 126.86450958]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[83.79859161 71.97519684]
[73.72556305 83.08979034]
[60.74232101 90.60213470]
[46.08633423 93.79620361]
[31.15452385 92.36756134]
[17.37009239 86.45236969]
[6.04688644 76.61443329]
[-1.73583961 63.79144287]
[-5.23628616 49.20559692]
[-4.12081194 34.24713135]
[1.50426233 20.34178734]
[11.10279083 8.81493855]
[23.75990295 0.76524782]
[38.26920319 -3.04003882]
[53.24775696 -2.23822570]
[67.26790619 3.09426308]
[78.99333954 12.44916916]
[87.30645752 24.93484116]
[91.41505432 39.36235428]
[94.51916504 24.68705177]
[97.62327576 10.01174927]
[100.72737885 -4.66355324]
[103.28321838 -19.44420624]
[105.28723145 -34.30973434]
[107.29124451 -49.17526245]
[99.90382385 -66.04261780]
[111.16380310 -79.50292206]
[112.94626617 -94.39663696]
[114.72872925 -109.29035187]
[101.02975464 -115.67748260]
[89.99063873 -125.97216797]
[82.68389893 -139.15699768]
[79.81410980 -153.93466187]
[81.64994812 -168.85552979]
[87.99914551 -182.45989990]
[98.22850037 -193.42076111]
[111.32701874 -200.67326355]
[126.00582886 -203.51817322]
[127.78829193 -218.41189575]
[129.57075500 -233.30561829]
[120.08243561 -242.86523438]
[117.86469269 -255.95309448]
[123.50627136 -267.75372314]
[134.74534607 -274.05551147]
[136.74937439 -288.92102051]
[138.75338745 -303.78656006]
[125.42408752 -296.90689087]
[111.67293549 -302.89901733]
[107.63675690 -317.34579468]
[116.29087830 -329.59756470]
[131.25579834 -330.62280273]
[141.49943542 -319.66729736]
[144.60354614 -334.34262085]
[147.70765686 -349.01791382]
[142.99366760 -364.12051392]
[153.19726562 -374.97113037]
[156.30137634 -389.64642334]
[159.40548706 -404.32174683]
[145.32926941 -409.58651733]
[132.19500732 -416.89053345]
[120.29610443 -426.07061768]
[109.89839935 -436.92166138]
[101.23417664 -449.20126343]
[94.49700165 -462.63510132]
[89.83737946 -476.92306519]
[87.35940552 -491.74594116]
[87.11845398 -506.77255249]
[89.11988831 -521.66723633]
[93.31900787 -536.09729004]
[99.62200165 -549.74023438]
[107.88805389 -562.29132080]
[117.93250275 -573.47015381]
[129.53094482 -583.02703857]
[142.42428589 -590.74841309]
[156.32446289 -596.46179199]
[170.92094421 -600.03955078]
[185.88763428 -601.40173340]
[200.89018250 -600.51800537]
[215.59342957 -597.40795898]
[229.66889954 -592.14117432]
[242.80212402 -584.83526611]
[254.69972229 -575.65350342]
[265.09588623 -564.80096436]
[273.75836182 -552.52014160]
[280.49362183 -539.08532715]
[285.15121460 -524.79669189]
[287.62707520 -509.97351074]
[287.86587524 -494.94683838]
[285.86230469 -480.05242920]
[281.66113281 -465.62301636]
[275.35620117 -451.98098755]
[267.08837891 -439.43106079]
[257.04232788 -428.25363159]
[245.44252014 -418.69842529]
[232.54808044 -410.97888184]
[218.64709473 -405.26748657]
[204.05010986 -401.69177246]
[189.08322144 -400.33169556]
[174.08079529 -401.21762085]
[170.97668457 -386.54232788]
[167.87257385 -371.86700439]
[172.80859375 -357.81408691]
[162.38296509 -345.91378784]
[159.27885437 -331.23849487]
[156.17474365 -316.56320190]
[153.61891174 -301.78253174]
[151.61489868 -286.91702271]
[149.61088562 -272.05148315]
[160.36962891 -259.12521362]
[158.41212463 -242.08166504]
[144.46447754 -231.52314758]
[142.68200684 -216.62942505]
[140.89955139 -201.73571777]
[154.49246216 -195.50726318]
[165.50962830 -185.36860657]
[172.86357117 -172.30340576]
[175.82312012 -157.58497620]
[174.08610535 -142.65228271]
[167.81016541 -128.96917725]
[157.59843445 -117.88092804]
[144.44177246 -110.48197937]
[129.62245178 -107.50788879]
[127.83998108 -92.61417389]
[126.05751801 -77.72045135]
[133.28501892 -68.02046967]
[131.92192078 -55.59767914]
[122.15676880 -47.17124939]
[120.15275574 -32.30572128]
[118.14874268 -17.44019318]
[131.47804260 -24.31986809]
[145.22918701 -18.32772827]
[149.26536560 -3.88095355]
[140.61125183 8.37082958]
[125.64632416 9.39606285]
[115.40268707 -1.55944324]
[112.29857635 13.11585903]
[109.19446564 27.79116249]
[106.09035492 42.46646500]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[116.75804901 125.05062866]
[109.79200745 138.21586609]
[110.68482208 153.18927002]
[111.57764435 168.16267395]
[112.58190155 183.12902832]
[113.69754791 198.08747864]
[114.81320190 213.04592896]
[123.55548096 226.23240662]
[116.78621674 239.49989319]
[127.93616486 247.05590820]
[132.62995911 259.47277832]
[129.36360168 272.13821411]
[119.54656219 280.48416138]
[120.43937683 295.45758057]
[128.98435974 308.77273560]
[122.01831818 321.93798828]
[122.91113281 336.91140747]
[123.80394745 351.88479614]
[132.91531372 361.01419067]
[133.35069275 373.50396729]
[125.42174530 382.63952637]
[126.09152985 397.62454224]
[126.76131439 412.60958862]
[127.43109894 427.59463501]
[128.10089111 442.57968140]
[128.77067566 457.56469727]
[142.82443237 463.51907349]
[152.89648438 474.98715210]
[156.98699951 489.69192505]
[154.28382874 504.71374512]
[145.32365417 517.07006836]
[131.88555908 524.30749512]
[116.63766479 524.98901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[12 195]
[13 194]
[14 193]
[16 191]
[17 190]
[20 186]
[22 184]
[23 183]
[24 182]
[26 181]
[27 180]
[28 179]
[30 177]
[32 175]
[33 174]
[34 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 163]
[58 162]
[59 161]
[61 158]
[62 157]
[63 156]
[72 147]
[73 146]
[74 145]
[78 142]
[79 141]
[80 140]
[86 139]
[87 138]
[88 137]
[90 135]
[91 134]
[92 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
