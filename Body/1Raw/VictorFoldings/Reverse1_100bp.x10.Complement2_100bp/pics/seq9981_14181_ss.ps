%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[120.20146179 369.03341675]
[118.91076660 354.07788086]
[119.02621460 339.06716919]
[120.54679871 324.13323975]
[123.45915985 309.40731812]
[127.73768616 295.01882935]
[133.34478760 281.09420776]
[140.23118591 267.75585938]
[148.33636475 255.12095642]
[157.58909607 243.30056763]
[167.90806580 232.39857483]
[179.20257568 222.51077271]
[170.42196655 210.34931946]
[161.64135742 198.18786621]
[152.86076355 186.02641296]
[138.16139221 183.91351318]
[129.08337402 171.70515442]
[131.39924622 156.30143738]
[117.67591095 150.51182556]
[115.87078094 134.79394531]
[107.09017944 122.63248444]
[98.30957031 110.47103119]
[88.90742493 98.78344727]
[78.90924835 87.60147095]
[68.91107941 76.41950226]
[58.91290665 65.23752594]
[48.91473389 54.05554962]
[38.45055389 56.13514328]
[28.14581871 53.70212936]
[19.84449196 47.26073837]
[15.00337315 38.02621078]
[14.43663788 27.69595146]
[18.17962837 18.13765526]
[8.69073009 6.52039242]
[-0.79816836 -5.09687090]
[-10.28706646 -16.71413422]
[-19.77596474 -28.33139801]
[-29.85710335 -39.43863297]
[-40.50311279 -50.00568008]
[-51.14912033 -60.57272720]
[-61.79513168 -71.13977814]
[-72.44113922 -81.70682526]
[-83.86849213 -71.97634125]
[-96.06999207 -63.23621750]
[-108.96006775 -55.54774475]
[-122.44828796 -48.96486282]
[-136.44004822 -43.53374100]
[-150.83721924 -39.29247665]
[-165.53878784 -36.27081680]
[-180.44163513 -34.48996353]
[-195.44125366 -33.96240616]
[-210.43238831 -34.69184113]
[-225.30992126 -36.67315674]
[-239.96948242 -39.89245224]
[-254.30824280 -44.32714462]
[-268.22561646 -49.94613266]
[-281.62402344 -56.70999527]
[-294.40942383 -64.57129669]
[-306.49215698 -73.47489166]
[-317.78747559 -83.35832214]
[-328.21615601 -94.15225983]
[-337.70504761 -105.78100586]
[-346.18756104 -118.16297913]
[-353.60421753 -131.21133423]
[-359.90301514 -144.83453369]
[-365.03976440 -158.93704224]
[-368.97839355 -173.41992188]
[-371.69131470 -188.18157959]
[-373.15948486 -203.11848450]
[-373.37261963 -218.12583923]
[-372.32919312 -233.09841919]
[-370.03656006 -247.93116760]
[-366.51080322 -262.52005005]
[-361.77661133 -276.76272583]
[-355.86721802 -290.55929565]
[-348.82406616 -303.81301880]
[-340.69656372 -316.43087769]
[-331.54174805 -328.32437134]
[-321.42379761 -339.41012573]
[-310.41369629 -349.61032104]
[-298.58865356 -358.85342407]
[-286.03164673 -367.07464600]
[-272.83074951 -374.21624756]
[-259.07852173 -380.22817993]
[-244.87149048 -385.06826782]
[-230.30926514 -388.70257568]
[-215.49398804 -391.10556030]
[-200.52960205 -392.26040649]
[-185.52107239 -392.15899658]
[-170.57365417 -390.80206299]
[-155.79220581 -388.19912720]
[-141.28041077 -384.36840820]
[-127.14006042 -379.33679199]
[-113.47033691 -373.13958740]
[-100.36713409 -365.82028198]
[-87.92235565 -357.43014526]
[-76.22329712 -348.02810669]
[-65.35201263 -337.68008423]
[-55.38476944 -326.45864868]
[-46.39147568 -314.44250488]
[-38.43521118 -301.71600342]
[-31.57179070 -288.36834717]
[-25.84935188 -274.49316406]
[-21.30803680 -260.18780518]
[-17.97969818 -245.55262756]
[-15.88768387 -230.69026184]
[-15.04666710 -215.70495605]
[-15.46254826 -200.70184326]
[-17.13240814 -185.78614807]
[-20.04453659 -171.06248474]
[-24.17850304 -156.63415527]
[-29.50531387 -142.60234070]
[-35.98760223 -129.06549072]
[-43.57990265 -116.11853790]
[-52.22895432 -103.85230255]
[-61.87409210 -92.35282898]
[-51.22808075 -81.78578186]
[-40.58207321 -71.21873474]
[-29.93606567 -60.65168762]
[-19.29005623 -50.08464050]
[-19.43366432 -65.08395386]
[-9.99974537 -76.74591064]
[4.69863939 -79.73881531]
[17.94158554 -72.69435883]
[23.67459869 -58.83316803]
[19.27661896 -44.49239349]
[6.75834703 -36.22844696]
[-8.15870190 -37.82029724]
[1.33019662 -26.20303345]
[10.81909466 -14.58576965]
[20.30799294 -2.96850586]
[29.79689217 8.64875698]
[49.27089310 9.17560768]
[62.27963257 24.08453941]
[60.09671021 44.05737686]
[70.09487915 55.23935318]
[80.09305573 66.42132568]
[90.09122467 77.60330200]
[100.08939362 88.78527832]
[100.83882141 73.80400848]
[110.95014191 62.72424698]
[125.80061340 60.61151123]
[138.60078430 68.43170929]
[143.49859619 82.60955811]
[138.25483704 96.66313934]
[125.26688385 104.16733551]
[110.47103119 101.69042969]
[119.25163269 113.85188293]
[128.03224182 126.01333618]
[142.38362122 132.67280579]
[143.56069946 147.52082825]
[158.91064453 150.16978455]
[167.64218140 162.62831116]
[165.02221680 177.24580383]
[173.80282593 189.40725708]
[182.58341980 201.56872559]
[191.36402893 213.73017883]
[204.30361938 206.12088013]
[217.89891052 199.75672913]
[232.03042603 194.69363403]
[246.57395935 190.97608948]
[261.40170288 188.63677979]
[276.38336182 187.69625854]
[291.38723755 188.16279602]
[306.28152466 190.03227234]
[320.93530273 193.28828430]
[335.21975708 197.90219116]
[349.00942993 203.83346558]
[362.18304443 211.02998352]
[374.62490845 219.42848206]
[386.22564697 228.95515442]
[396.88327026 239.52630615]
[406.50418091 251.04899597]
[415.00381470 263.42199707]
[422.30743408 276.53656006]
[428.35089111 290.27740479]
[433.08105469 304.52380371]
[436.45639038 319.15054321]
[438.44720459 334.02908325]
[439.03598022 349.02868652]
[438.21759033 364.01751709]
[435.99920654 378.86383057]
[432.40029907 393.43716431]
[427.45254517 407.60946655]
[421.19940186 421.25619507]
[413.69580078 434.25735474]
[405.00772095 446.49874878]
[395.21151733 457.87280273]
[384.39324951 468.27951050]
[372.64801025 477.62744141]
[360.07901001 485.83444214]
[346.79672241 492.82839966]
[332.91787720 498.54782104]
[318.56442261 502.94247437]
[303.86251831 505.97372437]
[288.94137573 507.61492920]
[273.93209839 507.85165405]
[258.96658325 506.68182373]
[244.17640686 504.11575317]
[229.69149780 500.17596436]
[215.63917542 494.89706421]
[202.14291382 488.32550049]
[189.32135010 480.51895142]
[177.28715515 471.54608154]
[166.14607239 461.48571777]
[155.99601746 450.42630005]
[146.92620850 438.46499634]
[139.01634216 425.70690918]
[132.33592224 412.26422119]
[126.94366455 398.25500488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 157]
[13 156]
[14 155]
[15 154]
[18 151]
[20 149]
[21 148]
[22 147]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 120]
[39 119]
[40 118]
[41 117]
[42 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
