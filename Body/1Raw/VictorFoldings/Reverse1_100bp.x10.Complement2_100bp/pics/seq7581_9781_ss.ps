%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[128.86503601 673.61553955]
[113.82260895 674.35003662]
[98.97404480 671.83319092]
[85.01383972 666.18280029]
[72.59494019 657.66314697]
[62.29819870 646.67266846]
[54.60520554 633.72534180]
[49.87578583 619.42687988]
[48.33113861 604.44598389]
[50.04351044 589.48327637]
[54.93281174 575.23864746]
[62.77035904 562.37835693]
[73.18957520 551.50390625]
[85.70314026 543.12390137]
[99.72576141 537.63024902]
[114.60158539 535.27996826]
[115.49440002 520.30651855]
[116.38721466 505.33312988]
[117.28003693 490.35974121]
[117.94982147 475.37469482]
[118.39642334 460.38134766]
[118.84303284 445.38800049]
[118.28482056 430.39837646]
[109.26542664 418.54513550]
[115.52503967 404.01489258]
[106.50564575 392.16162109]
[112.76525879 377.63140869]
[111.20473480 362.71279907]
[109.64421844 347.79418945]
[108.08369446 332.87557983]
[106.52317047 317.95697021]
[97.50377655 306.10372925]
[103.76338959 291.57348633]
[102.20286560 276.65487671]
[100.64234161 261.73626709]
[98.14825439 259.24392700]
[96.73744202 255.41969299]
[97.02275085 250.78591919]
[99.36056519 246.11883545]
[98.46775055 231.14541626]
[94.93170166 224.65557861]
[97.67479706 215.94274902]
[84.39315033 209.20008850]
[76.21536255 196.63108826]
[75.42163086 181.55673218]
[82.32511902 168.02017212]
[95.16101837 159.70230103]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[83.23827362 76.40639496]
[83.17496490 63.90920639]
[91.37239075 55.01377106]
[91.14906311 40.01543427]
[90.92573547 25.01709747]
[90.70240784 10.01875973]
[90.47908020 -4.97957706]
[81.78444672 -14.50670528]
[81.90721130 -27.00345230]
[90.23616791 -35.77585602]
[90.23616791 -50.77585602]
[90.23616791 -65.77585602]
[79.24250793 -71.72625732]
[71.86476135 -81.72812653]
[69.45363617 -93.84695435]
[72.40650940 -105.77095032]
[80.10343933 -115.25199127]
[91.03610229 -120.52951813]
[91.48270416 -135.52285767]
[88.61019135 -144.19387817]
[92.04922485 -150.73565674]
[92.71900940 -165.72068787]
[93.38880157 -180.70573425]
[94.05858612 -195.69076538]
[91.35574341 -201.72453308]
[92.00790405 -207.37002563]
[94.97798157 -211.11004639]
[96.09363556 -226.06849670]
[93.61116791 -234.85911560]
[97.33887482 -241.24081421]
[98.67710876 -256.18099976]
[100.01534271 -271.12118530]
[93.54009247 -285.55661011]
[102.38200378 -297.54284668]
[103.72023773 -312.48303223]
[104.50156403 -327.46267700]
[104.72489166 -342.46099854]
[104.94821930 -357.45935059]
[104.83655548 -372.45892334]
[104.38994598 -387.45227051]
[103.94333649 -402.44561768]
[103.49673462 -417.43896484]
[88.97127533 -421.66580200]
[76.46404266 -430.17605591]
[67.20037842 -442.13598633]
[62.08782959 -456.37387085]
[61.62728119 -471.49481201]
[65.86385345 -486.01742554]
[74.38248444 -498.51895142]
[86.34860229 -507.77459717]
[100.58990479 -512.87762451]
[115.71115875 -513.32800293]
[130.23094177 -509.08172607]
[142.72674561 -500.55471802]
[151.97438049 -488.58239746]
[157.06784058 -474.33767700]
[157.50813293 -459.21612549]
[153.25210571 -444.69918823]
[144.71672058 -432.20910645]
[132.73820496 -422.96948242]
[118.49008179 -417.88558960]
[118.93669128 -402.89224243]
[119.38329315 -387.89889526]
[119.82990265 -372.90551758]
[122.13171387 -370.23458862]
[123.25418091 -366.31600952]
[122.62502289 -361.71627808]
[119.94655609 -357.23602295]
[119.72322845 -342.23767090]
[119.49990082 -327.23934937]
[131.91723633 -335.65420532]
[146.28300476 -331.33859253]
[152.00730896 -317.47378540]
[144.87039185 -304.28045654]
[130.13333130 -301.48416138]
[118.66042328 -311.14480591]
[117.32218933 -296.20462036]
[123.89316559 -282.83779907]
[114.95552826 -269.78295898]
[113.61729431 -254.84275818]
[112.27906036 -239.90257263]
[111.05208588 -224.95285034]
[109.93643951 -209.99438477]
[109.04362488 -195.02098083]
[108.37384033 -180.03594971]
[107.70404816 -165.05090332]
[107.03426361 -150.06587219]
[106.47605896 -135.07626343]
[106.02944946 -120.08290863]
[120.48827362 -109.94318390]
[126.01461792 -93.00475311]
[120.21624756 -75.99127197]
[105.23616791 -65.77585602]
[105.23616791 -50.77585602]
[105.23616791 -35.77585602]
[114.81685638 -21.07288742]
[105.47741699 -5.20290470]
[105.70074463 9.79543209]
[105.92407227 24.79376984]
[106.14739990 39.79210663]
[106.37072754 54.79044342]
[116.16926575 69.34913635]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[110.14605713 159.03251648]
[123.67285919 166.17204285]
[131.75648499 179.03874207]
[132.31079102 194.12379456]
[125.28696442 207.37226868]
[112.65983582 215.27296448]
[113.44115448 230.25260925]
[114.33397675 245.22601318]
[115.56095123 260.17575073]
[117.12147522 275.09436035]
[118.68199158 290.01296997]
[127.81301117 302.93328857]
[121.44177246 316.39645386]
[123.00229645 331.31506348]
[124.56282043 346.23367310]
[126.12334442 361.15225220]
[127.68386841 376.07086182]
[136.81488037 388.99121094]
[130.44364929 402.45437622]
[139.57466125 415.37469482]
[133.20343018 428.83786011]
[141.24618530 416.17636108]
[154.81245422 409.77661133]
[169.69854736 411.62167358]
[181.29185486 421.13983154]
[186.00007629 435.38174438]
[182.36430359 449.93444824]
[171.51112366 460.28860474]
[156.80351257 463.23587036]
[142.79879761 457.86300659]
[133.83638000 445.83459473]
[133.38977051 460.82794189]
[132.94316101 475.82131958]
[135.73553467 481.81414795]
[135.16751099 487.46875000]
[132.25343323 491.25256348]
[131.36062622 506.22595215]
[130.46780396 521.19934082]
[129.57499695 536.17279053]
[144.06611633 540.27410889]
[157.33657837 547.39514160]
[168.76567078 557.20281982]
[177.81883240 569.23834229]
[184.07264709 582.93884277]
[187.23460388 597.66351318]
[187.15681458 612.72369385]
[183.84291077 627.41491699]
[177.44789124 641.05010986]
[168.27087402 652.99145508]
[156.74107361 662.68054199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 199]
[17 198]
[18 197]
[19 196]
[20 193]
[21 192]
[22 191]
[23 181]
[25 179]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[33 171]
[34 170]
[35 169]
[39 168]
[40 167]
[42 166]
[47 161]
[48 160]
[49 159]
[50 158]
[53 156]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[63 148]
[64 147]
[65 146]
[71 142]
[72 141]
[74 140]
[75 139]
[76 138]
[77 137]
[80 136]
[81 135]
[83 134]
[84 133]
[85 132]
[87 130]
[88 129]
[89 123]
[90 122]
[91 121]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
