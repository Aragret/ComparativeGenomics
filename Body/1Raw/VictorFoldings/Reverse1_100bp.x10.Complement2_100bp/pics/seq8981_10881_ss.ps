%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[16.30222702 466.45849609]
[22.92458534 480.02487183]
[25.64006615 494.87509155]
[24.24716377 509.90713501]
[18.84923935 524.00555420]
[9.84685421 536.12408447]
[-2.09195280 545.36352539]
[-16.08124352 551.03826904]
[-31.08292198 552.72711182]
[-45.98376083 550.30480957]
[-59.67802048 543.95111084]
[-71.14949799 534.13745117]
[-79.54692841 521.59210205]
[-84.24716949 507.24600220]
[-84.90142822 492.16372681]
[-81.46116638 477.46450806]
[-74.18166351 464.23910522]
[-63.60310745 453.46893311]
[-50.51050186 445.95318604]
[-35.87540054 442.24963379]
[-20.78382683 442.63305664]
[-16.38282967 428.29321289]
[-11.98183060 413.95336914]
[-7.58083296 399.61352539]
[-3.28670931 385.24130249]
[0.90030187 370.83752441]
[-2.97684193 356.45639038]
[8.30501556 345.36447144]
[6.83073759 340.82183838]
[8.19446564 335.30484009]
[12.83706188 330.59762573]
[17.45107079 316.32492065]
[3.11131120 320.72619629]
[-9.35601902 312.38558960]
[-10.76046753 297.45147705]
[-0.06672657 286.93273926]
[14.84217548 288.58337402]
[22.97573853 301.18499756]
[28.63852501 287.29495239]
[34.30131149 273.40493774]
[39.96409607 259.51492310]
[45.10605621 245.42376709]
[49.72006607 231.15103149]
[54.33407593 216.87829590]
[58.94808578 202.60556030]
[55.50083923 188.11537170]
[67.10794067 177.36428833]
[71.72195435 163.09155273]
[68.27470398 148.60136414]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[89.37303925 80.99420166]
[74.62052155 83.70773315]
[60.26964569 79.34283447]
[49.52643585 68.87462616]
[44.79094696 54.64173508]
[47.12110519 39.82382584]
[55.99634171 27.73126030]
[69.43390656 21.06554604]
[84.43182373 21.31581879]
[97.63950348 28.42617035]
[106.10633087 40.80812836]
[107.94078064 55.69555283]
[114.82019806 42.36612320]
[121.69960785 29.03669548]
[121.34066010 24.70944214]
[122.28263092 20.87835693]
[124.20980835 17.89148712]
[126.72586060 15.95858669]
[129.40594482 15.13681602]
[137.06654358 2.24048924]
[144.72714233 -10.65583801]
[152.38772583 -23.55216408]
[160.04832458 -36.44849014]
[167.70892334 -49.34481812]
[168.10458374 -65.16107941]
[181.25666809 -72.15192413]
[177.57577515 -87.28760529]
[185.52842712 -100.25718689]
[199.98066711 -103.67307281]
[207.64126587 -116.56940460]
[215.30186462 -129.46572876]
[215.76553345 -136.06091309]
[219.00413513 -140.73088074]
[223.38742065 -142.62715149]
[231.42858887 -155.28967285]
[239.46977234 -167.95219421]
[245.94926453 -181.48054504]
[250.77525330 -195.68299866]
[255.60125732 -209.88545227]
[260.42724609 -224.08790588]
[263.42202759 -238.78591919]
[264.53768921 -253.74436951]
[265.65332031 -268.70281982]
[266.76898193 -283.66128540]
[267.88461304 -298.61972046]
[254.16619873 -305.11352539]
[243.72282410 -316.12716675]
[237.96685791 -330.17114258]
[237.67677307 -345.34613037]
[242.89176941 -359.59982300]
[252.90660095 -371.00454712]
[266.36682129 -378.01791382]
[281.45202637 -379.69137573]
[296.12210083 -375.79864502]
[308.39303589 -366.86621094]
[316.60525513 -354.10205078]
[319.64816284 -339.23245239]
[317.11019897 -324.26837158]
[309.33462524 -311.23361206]
[297.37301636 -301.89102173]
[282.84307861 -297.50408936]
[281.72741699 -282.54562378]
[280.61178589 -267.58715820]
[279.49612427 -252.62872314]
[278.38049316 -237.67025757]
[286.46252441 -250.30673218]
[298.16867065 -259.68579102]
[312.26348877 -264.81759644]
[327.25958252 -265.16064453]
[341.57431030 -260.67868042]
[353.69708252 -251.84471130]
[362.34848022 -239.59101868]
[366.61553955 -225.21073914]
[366.04794312 -210.22148132]
[360.70559692 -196.20509338]
[351.15228271 -184.64074707]
[338.39617920 -176.74887085]
[323.78347778 -173.36228943]
[308.85626221 -174.83842468]
[295.18991089 -181.02148438]
[284.22659302 -191.25894165]
[277.12332153 -204.47044373]
[274.62969971 -219.26191711]
[269.80371094 -205.05944824]
[264.97772217 -190.85699463]
[260.15170288 -176.65454102]
[271.24725342 -186.74856567]
[285.09957886 -192.50291443]
[300.08139038 -193.24157715]
[314.43261719 -188.87777710]
[326.46725464 -179.92416382]
[334.77154541 -167.43261719]
[338.36987305 -152.87060547]
[336.83950806 -137.94888306]
[330.36026001 -124.42041779]
[319.69326782 -113.87453461]
[306.09173584 -107.55014801]
[291.15350342 -106.19023895]
[276.63351440 -109.95457458]
[264.23757935 -118.40092468]
[255.42195129 -130.53701782]
[251.22227478 -144.93710327]
[252.13229370 -159.91102600]
[244.09111023 -147.24850464]
[236.04994202 -134.58596802]
[228.19819641 -121.80513000]
[220.53759766 -108.90880585]
[212.87699890 -96.01247406]
[216.79061890 -81.68700409]
[209.20539856 -68.49916840]
[194.15299988 -64.49132538]
[194.30528259 -49.59749985]
[180.60525513 -41.68421936]
[172.94465637 -28.78789330]
[165.28405762 -15.89156723]
[157.62345886 -2.99524021]
[149.96286011 9.90108681]
[142.30226135 22.79741287]
[135.02903748 35.91610718]
[128.14962769 49.24553680]
[121.27021027 62.57496643]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[97.27176666 157.97537231]
[85.99468231 167.70556641]
[81.38067627 181.97830200]
[84.49789429 197.48937988]
[73.22081757 207.21957397]
[68.60681152 221.49230957]
[63.99280167 235.76504517]
[59.37879181 250.03778076]
[73.71855164 245.63648987]
[86.18588257 253.97709656]
[87.59033203 268.91119385]
[76.89659119 279.42993164]
[61.98768616 277.77929688]
[53.85412598 265.17770386]
[48.19133759 279.06771851]
[42.52855301 292.95776367]
[36.86576462 306.84777832]
[31.72380447 320.93890381]
[27.10979652 335.21163940]
[22.70879745 349.55148315]
[26.28645897 364.96289062]
[15.30408382 375.02453613]
[11.11707306 389.42831421]
[11.72666454 398.54238892]
[6.75901413 404.01452637]
[2.35801601 418.35437012]
[-2.04298186 432.69421387]
[-6.44398022 447.03405762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 205]
[26 204]
[28 202]
[31 201]
[32 200]
[38 199]
[39 198]
[40 197]
[41 196]
[42 190]
[43 189]
[44 188]
[45 187]
[47 185]
[48 184]
[50 182]
[51 181]
[52 180]
[54 178]
[55 177]
[67 176]
[68 175]
[69 174]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 168]
[81 166]
[84 163]
[85 162]
[86 161]
[89 160]
[90 159]
[91 158]
[92 141]
[93 140]
[94 139]
[95 138]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
