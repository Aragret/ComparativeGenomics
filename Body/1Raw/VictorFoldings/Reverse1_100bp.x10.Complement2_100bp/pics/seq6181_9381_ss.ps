%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[0.96275836 480.47308350]
[-2.54072499 495.06838989]
[-7.32044601 509.29696655]
[-13.33899593 523.04742432]
[-20.54927063 536.21209717]
[-28.89483833 548.68804932]
[-38.31038284 560.37756348]
[-48.72221375 571.18920898]
[-60.04884338 581.03833008]
[-72.20162201 589.84783936]
[-85.08544159 597.54882812]
[-98.59945679 604.08099365]
[-112.63790894 609.39318848]
[-127.09091949 613.44384766]
[-141.84538269 616.20129395]
[-156.78579712 617.64398193]
[-171.79527283 617.76055908]
[-186.75630188 616.55010986]
[-201.55180359 614.02215576]
[-216.06599426 610.19641113]
[-230.18525696 605.10290527]
[-243.79908752 598.78143311]
[-256.80096436 591.28149414]
[-269.08911133 582.66180420]
[-280.56732178 572.98980713]
[-291.14584351 562.34118652]
[-300.74179077 550.79925537]
[-309.28012085 538.45446777]
[-316.69400024 525.40332031]
[-322.92538452 511.74801636]
[-327.92553711 497.59542847]
[-331.65527344 483.05627441]
[-334.08544922 468.24438477]
[-335.19702148 453.27569580]
[-334.98129272 438.26733398]
[-333.43997192 423.33676147]
[-330.58508301 408.60083008]
[-326.43899536 394.17489624]
[-321.03417969 380.17184448]
[-314.41287231 366.70129395]
[-306.62695312 353.86862183]
[-297.73736572 341.77432251]
[-287.81362915 330.51300049]
[-276.93344116 320.17282104]
[-265.18197632 310.83471680]
[-252.65115356 302.57174683]
[-239.43910217 295.44860840]
[-225.64920044 289.52102661]
[-211.38937378 284.83541870]
[-196.77122498 281.42843628]
[-181.90917969 279.32675171]
[-166.91954041 278.54681396]
[-151.91963196 279.09469604]
[-137.02684021 280.96618652]
[-122.35772705 284.14657593]
[-108.02710724 288.61099243]
[-94.14713287 294.32446289]
[-80.82644653 301.24234009]
[-68.16928864 309.31042480]
[-56.27472305 318.46557617]
[-46.11117554 307.43371582]
[-35.94762802 296.40182495]
[-25.78408241 285.36996460]
[-15.62053585 274.33807373]
[-5.45698929 263.30621338]
[4.70655727 252.27432251]
[13.48716068 240.11286926]
[9.14874554 225.91027832]
[16.33795357 212.50244141]
[31.26435852 208.04820251]
[38.53759003 194.92951965]
[39.03163147 187.55538940]
[46.01802063 181.67082214]
[53.48575974 168.66186523]
[60.95350266 155.65290833]
[68.42124176 142.64396667]
[75.69447327 129.52526855]
[82.77157593 116.29973602]
[89.84868622 103.07421112]
[96.22728729 89.49800110]
[94.27236176 73.79804230]
[106.24190521 64.93354034]
[111.90469360 51.04351807]
[109.94976807 35.34355164]
[121.91931152 26.47905540]
[127.58209229 12.58902836]
[127.06230164 5.99802351]
[129.57232666 0.89931571]
[133.62582397 -1.62619579]
[139.69964600 -15.34146214]
[145.77348328 -29.05672836]
[151.84732056 -42.77199554]
[157.92115784 -56.48726273]
[163.99497986 -70.20252991]
[169.96655273 -83.96263123]
[175.83551025 -97.76680756]
[162.91644287 -105.43368530]
[151.13456726 -114.75415039]
[140.70016479 -125.56186676]
[131.79945374 -137.66395569]
[124.59125519 -150.84445190]
[119.20422363 -164.86811829]
[115.73448944 -179.48469543]
[114.24398041 -194.43333435]
[114.75930023 -209.44726562]
[117.27124023 -224.25852966]
[121.73497772 -238.60281372]
[128.07084656 -252.22412109]
[136.16578674 -264.87936401]
[145.87533569 -276.34271240]
[157.02619934 -286.40957642]
[169.41938782 -294.90029907]
[182.83374023 -301.66333008]
[197.02983093 -306.57803345]
[211.75434875 -309.55664062]
[226.74449158 -310.54602051]
[241.73277283 -309.52853394]
[256.45166016 -306.52230835]
[270.63851929 -301.58102417]
[284.04016113 -294.79284668]
[296.41741943 -286.27890015]
[307.54940796 -276.19116211]
[317.23742676 -264.70962524]
[325.30862427 -252.03923035]
[331.61895752 -238.40606689]
[336.05578613 -224.05343628]
[338.53994751 -209.23748779]
[339.02713013 -194.22262573]
[337.50860596 -179.27680969]
[334.01147461 -164.66674805]
[328.59814453 -150.65321350]
[321.36526489 -137.48625183]
[312.44186401 -125.40087128]
[301.98721313 -114.61273956]
[290.18789673 -105.31437683]
[277.25448608 -97.67173767]
[263.41775513 -91.82120514]
[248.92468262 -87.86718750]
[234.03388977 -85.88025665]
[219.01113892 -85.89585876]
[204.12451172 -87.91372681]
[189.63969421 -91.89785004]
[183.77072144 -78.09367371]
[184.04652405 -70.70816040]
[177.71025085 -64.12869263]
[171.63641357 -50.41342926]
[165.56259155 -36.69816208]
[159.48875427 -22.98289490]
[153.41491699 -9.26762867]
[147.34107971 4.44763803]
[141.47212219 18.25181580]
[135.80934143 32.14184189]
[138.16929626 46.84829712]
[125.79471588 56.70630264]
[120.13193512 70.59632874]
[122.49189758 85.30278778]
[110.11731720 95.16078949]
[123.90896606 89.26245117]
[138.30130005 93.48863983]
[146.71434021 105.90720367]
[145.30175781 120.84053802]
[134.70936584 131.46133423]
[119.77986145 132.91389465]
[107.33881378 124.53413391]
[103.07421112 110.15131378]
[95.99710846 123.37684631]
[88.91999817 136.60237122]
[88.75128174 143.21168518]
[85.72443390 148.02160645]
[81.43019867 150.11169434]
[73.96245575 163.12065125]
[66.49471283 176.12960815]
[59.02697372 189.13856506]
[51.65628052 202.20274353]
[44.38305283 215.32144165]
[48.51295471 230.34082031]
[40.94998550 243.54142761]
[26.60585403 247.38609314]
[39.31866074 239.42465210]
[53.97315598 236.22373962]
[68.84774017 238.15939331]
[82.19496155 245.00422668]
[92.44680786 255.95410156]
[98.39889526 269.72262573]
[99.35198212 284.69232178]
[95.19409943 299.10455322]
[86.41371918 311.26614380]
[74.04233551 319.74844360]
[59.53334045 323.55487061]
[44.59122849 322.23831177]
[30.97138977 315.95343018]
[20.27386475 305.43853760]
[13.75538826 291.92892456]
[12.18174553 277.01168823]
[15.73843479 262.43786621]
[5.57488775 273.46975708]
[-4.58865881 284.50161743]
[-14.75220585 295.53350830]
[-24.91575241 306.56536865]
[-35.07929993 317.59725952]
[-45.24284744 328.62911987]
[-35.14540863 339.73495483]
[-26.06902504 351.68975830]
[-18.08473396 364.39993286]
[-11.25502777 377.76602173]
[-5.63335562 391.68344116]
[-1.26371634 406.04324341]
[1.81969094 420.73303223]
[3.59273386 435.63787842]
[4.04153585 450.64108276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 178]
[70 175]
[71 174]
[73 173]
[74 172]
[75 171]
[76 170]
[77 167]
[78 166]
[79 165]
[80 157]
[82 155]
[83 154]
[85 152]
[86 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
