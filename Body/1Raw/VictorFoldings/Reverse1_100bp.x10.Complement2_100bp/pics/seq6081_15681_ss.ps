%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-0.94580698 676.97064209]
[-8.44470787 689.98309326]
[-17.45744705 701.99670410]
[-27.85258865 712.83636475]
[-39.47854233 722.34399414]
[-52.16577148 730.38085938]
[-65.72924805 736.82989502]
[-79.97119141 741.59686279]
[-94.68389893 744.61242676]
[-109.65282440 745.83251953]
[-124.65967560 745.23937988]
[-139.48561096 742.84161377]
[-153.91441345 738.67425537]
[-167.73567200 732.79803467]
[-180.74784851 725.29864502]
[-192.76115417 716.28546143]
[-203.60043335 705.88989258]
[-213.10760498 694.26361084]
[-221.14402771 681.57604980]
[-227.59249878 668.01232910]
[-232.35899353 653.77026367]
[-235.37397766 639.05743408]
[-236.59352112 624.08843994]
[-235.99980164 609.08160400]
[-233.60151672 594.25579834]
[-229.43359375 579.82714844]
[-223.55685425 566.00610352]
[-216.05699158 552.99420166]
[-207.04335022 540.98120117]
[-196.64739990 530.14233398]
[-185.02073669 520.63562012]
[-172.33290100 512.59967041]
[-158.76893616 506.15167236]
[-144.52664185 501.38571167]
[-129.81370544 498.37127686]
[-114.84468842 497.15231323]
[-99.83788300 497.74658203]
[-85.01213074 500.14541626]
[-70.58364105 504.31387329]
[-64.71468353 490.50970459]
[-58.84571838 476.70553589]
[-52.97676086 462.90133667]
[-47.10779953 449.09716797]
[-61.78303909 452.20156860]
[-73.45654297 442.78195190]
[-73.52303314 427.78210449]
[-61.93350220 418.25933838]
[-47.23131561 421.23352051]
[-40.25444412 434.51049805]
[-33.37503433 421.18109131]
[-26.49562073 407.85165405]
[-19.61620903 394.52221680]
[-12.73679543 381.19281006]
[-5.85738325 367.86337280]
[1.02202952 354.53393555]
[7.90144205 341.20449829]
[14.78085423 327.87509155]
[20.75241661 314.11499023]
[25.78933334 299.98593140]
[30.82625008 285.85690308]
[35.86316681 271.72787476]
[32.84887695 257.14147949]
[44.77093506 246.74075317]
[49.70252609 232.57461548]
[54.52852631 218.37216187]
[59.35452271 204.16970825]
[48.50702667 190.23400879]
[48.19363403 172.41961670]
[58.72856522 157.85614014]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[104.35124969 57.21685791]
[107.01704407 42.45563889]
[100.31733704 31.43399429]
[102.84157562 19.19422340]
[112.70237732 12.18772411]
[115.58765411 -2.53216720]
[118.47292328 -17.25205803]
[121.35820007 -31.97195053]
[122.36245728 -46.93829346]
[121.46964264 -61.91170120]
[120.57682800 -76.88510895]
[119.68401337 -91.85851288]
[117.16544342 -95.39556885]
[116.01875305 -99.17044067]
[116.15023804 -102.72264099]
[117.32627869 -105.66941833]
[119.21080780 -107.74467468]
[119.21080780 -122.74467468]
[119.21080780 -137.74467468]
[109.63612366 -153.47384644]
[118.99684906 -168.31782532]
[118.77352142 -183.31616211]
[104.75399780 -189.26368713]
[94.37034607 -200.40368652]
[89.42160034 -214.80610657]
[90.76515198 -229.97564697]
[98.16822815 -243.28407288]
[110.34819794 -252.42562866]
[125.19480896 -255.81649780]
[140.13580322 -252.86917114]
[152.58255005 -244.09431458]
[160.37858582 -231.01219177]
[162.17320251 -215.88938904]
[157.65545654 -201.34600830]
[147.60807800 -189.90177917]
[133.77186584 -183.53948975]
[133.99519348 -168.54115295]
[142.45382690 -159.89373779]
[142.76263428 -147.40019226]
[134.21081543 -137.74467468]
[134.21081543 -122.74467468]
[134.21081543 -107.74467468]
[134.65740967 -92.75132751]
[135.55023193 -77.77792358]
[136.44305420 -62.80451584]
[137.33586121 -47.83111191]
[143.65721130 -61.43407059]
[154.00535583 -72.29298401]
[167.28820801 -79.26188660]
[182.10401917 -81.60533142]
[196.88923645 -79.07601166]
[210.08354187 -71.94085693]
[220.29449463 -60.95284271]
[226.44451904 -47.27157211]
[227.88459778 -32.34085846]
[224.46273804 -17.73637772]
[216.54005432 -4.99937344]
[204.95268250 4.52598810]
[190.92341614 9.83447170]
[175.93283081 10.36585999]
[161.56291199 6.06407595]
[149.33015442 -2.61690402]
[140.52548218 -14.76095486]
[136.07809448 -29.08667755]
[133.19281006 -14.36678600]
[130.30754089 0.35310552]
[127.42227173 15.07299709]
[133.99591064 31.34426308]
[121.77826691 45.12143707]
[119.11247253 59.88265228]
[130.83691406 50.52651596]
[145.81594849 49.73350906]
[158.46273804 57.79940414]
[164.06034851 71.71582031]
[160.52102661 86.29228210]
[149.16484070 96.09212494]
[134.22735596 97.46025085]
[121.27990723 89.88638306]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[99.15039825 165.80052185]
[103.26889801 177.52684021]
[102.01824951 189.81973267]
[95.69683838 200.35258484]
[85.55691528 207.15808105]
[73.55697632 208.99569702]
[68.73097992 223.19815063]
[63.90498352 237.40061951]
[64.10700226 246.53280640]
[58.89996338 251.77766418]
[61.55397797 267.37466431]
[49.99219513 276.76480103]
[44.95528030 290.89382935]
[39.91836166 305.02285767]
[34.88144684 319.15188599]
[47.60448456 311.20681763]
[62.60422516 311.29510498]
[75.23283386 319.38943481]
[81.57720184 332.98168945]
[79.67145538 347.86013794]
[70.10611725 359.41452026]
[55.84510040 364.06463623]
[41.30734253 360.36956787]
[30.99752808 349.47424316]
[28.11028290 334.75448608]
[21.23087120 348.08392334]
[14.35145855 361.41336060]
[7.47204638 374.74276733]
[0.59263361 388.07220459]
[-6.28677893 401.40164185]
[-13.16619110 414.73107910]
[-20.04560471 428.06048584]
[-26.92501640 441.38992310]
[-33.30362320 454.96612549]
[-39.17258072 468.77029419]
[-45.04154205 482.57449341]
[-50.91050339 496.37866211]
[-56.77946472 510.18283081]
[-43.76673508 517.68127441]
[-31.75274277 526.69354248]
[-20.91268730 537.08825684]
[-11.40464783 548.71386719]
[-3.36728120 561.40081787]
[3.08220530 574.96405029]
[7.84975910 589.20581055]
[10.86585426 603.91839600]
[12.08650875 618.88726807]
[11.49392128 633.89416504]
[9.09673214 648.72015381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 176]
[59 175]
[60 174]
[61 173]
[63 171]
[64 169]
[65 168]
[66 167]
[70 161]
[71 160]
[72 159]
[73 158]
[75 156]
[76 155]
[77 146]
[78 145]
[81 143]
[82 142]
[83 141]
[84 140]
[85 122]
[86 121]
[87 120]
[88 119]
[93 118]
[94 117]
[95 116]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
