%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[27.92633247 441.94845581]
[30.73395920 456.71109009]
[31.36211586 471.72518921]
[29.79741669 486.67074585]
[26.07321167 501.22918701]
[20.26888466 515.09020996]
[12.50815105 527.95831299]
[2.95643497 539.55932617]
[-8.18266964 549.64587402]
[-20.67173195 558.00292969]
[-34.24454498 564.45251465]
[-48.61180878 568.85699463]
[-63.46727753 571.12255859]
[-78.49430847 571.20092773]
[-93.37260437 569.09045410]
[-107.78502655 564.83605957]
[-121.42437744 558.52844238]
[-133.99992371 550.30206299]
[-145.24363708 540.33227539]
[-154.91584778 528.83154297]
[-162.81037903 516.04504395]
[-168.75897217 502.24533081]
[-172.63482666 487.72653198]
[-174.35533142 472.79812622]
[-173.88381958 457.77828979]
[-171.23033142 442.98718262]
[-166.45143127 428.74008179]
[-159.64897156 415.34063721]
[-150.96797180 403.07452393]
[-140.59344482 392.20312500]
[-128.74652100 382.95822144]
[-115.67974854 375.53683472]
[-101.67161560 370.09713745]
[-87.02072144 366.75512695]
[-72.03934479 365.58200073]
[-57.04681396 366.60275269]
[-42.36270142 369.79568481]
[-28.29999924 375.09268188]
[-21.02676964 361.97399902]
[-13.75354004 348.85528564]
[-6.48031044 335.73660278]
[0.79291916 322.61791992]
[7.87002468 309.39239502]
[14.74943733 296.06295776]
[21.62884903 282.73352051]
[28.50826263 269.40408325]
[34.47982407 255.64398193]
[39.51674271 241.51495361]
[44.55365753 227.38592529]
[43.83874893 220.02993774]
[49.77217484 213.08499146]
[55.01889420 199.03251648]
[52.22210693 184.40284729]
[64.29769897 174.18077087]
[69.54441071 160.12829590]
[74.79113007 146.07583618]
[62.83484268 137.11091614]
[53.88740158 125.14154816]
[48.67318344 111.13674927]
[47.61432648 96.23032379]
[50.79655457 81.62909698]
[57.96223831 68.51515198]
[68.53125000 57.95018387]
[81.64793396 50.78952408]
[96.25038147 47.61288834]
[111.15639496 48.67745209]
[116.40311432 34.62498093]
[121.64983368 20.57250786]
[126.89655304 6.52003717]
[132.14326477 -7.53243399]
[137.38998413 -21.58490562]
[142.53195190 -35.67604446]
[147.56886292 -49.80507660]
[152.60577393 -63.93410492]
[156.57788086 -78.39862823]
[159.46315002 -93.11852264]
[162.34841919 -107.83840942]
[165.23368835 -122.55830383]
[166.57192993 -137.49848938]
[166.34860229 -152.49682617]
[166.12527466 -167.49516296]
[165.90194702 -182.49349976]
[157.96003723 -196.17694092]
[165.50698853 -209.01800537]
[165.28366089 -224.01634216]
[162.60519409 -228.49662781]
[161.97604370 -233.09634399]
[163.09851074 -237.01490784]
[165.40031433 -239.68585205]
[165.84692383 -254.67921448]
[166.29353333 -269.67254639]
[166.74014282 -284.66592407]
[152.11122131 -288.22802734]
[138.54277039 -294.75418091]
[126.62792206 -303.95907593]
[116.88755035 -315.44030762]
[109.74746704 -328.69598389]
[105.51979065 -343.14660645]
[104.38935089 -358.16046143]
[106.40555573 -373.08120728]
[111.48027802 -387.25656128]
[119.39165497 -400.06686401]
[129.79385376 -410.95208740]
[142.23211670 -419.43637085]
[156.16271973 -425.14883423]
[170.97665405 -427.83975220]
[186.02633667 -427.39144897]
[200.65383911 -423.82357788]
[214.21972656 -417.29208374]
[226.13095093 -408.08248901]
[235.86680603 -396.59744263]
[243.00167847 -383.33895874]
[247.22366333 -368.88665771]
[248.34820557 -353.87237549]
[246.32612610 -338.95242310]
[241.24583435 -324.77905273]
[233.32940674 -311.97186279]
[222.92292786 -301.09075928]
[210.48132324 -292.61135864]
[196.54847717 -286.90438843]
[181.73348999 -284.21929932]
[181.28688049 -269.22595215]
[180.84027100 -254.23260498]
[180.39366150 -239.23925781]
[180.28199768 -224.23966980]
[180.50532532 -209.24133301]
[188.43125916 -196.63066101]
[180.90028381 -182.71682739]
[181.12361145 -167.71849060]
[181.34693909 -152.72015381]
[181.57026672 -137.72181702]
[188.99638367 -150.75457764]
[200.79736328 -160.01400757]
[215.22259521 -164.12651062]
[230.13217163 -162.48205566]
[243.31436157 -155.32455444]
[252.81367493 -143.71578979]
[257.22091675 -129.37786865]
[255.88230896 -114.43771362]
[248.99644470 -101.11161804]
[237.58477783 -91.37643433]
[223.34016418 -86.67630768]
[208.37571716 -87.70848083]
[194.91133118 -94.31983948]
[184.94433594 -105.52961731]
[179.95358276 -119.67302704]
[177.06831360 -104.95314026]
[174.18304443 -90.23324585]
[171.29777527 -75.51335907]
[182.31153870 -85.69652557]
[196.91918945 -89.10484314]
[211.30230713 -84.84739685]
[221.70118713 -74.03705597]
[225.39758301 -59.49963760]
[221.42526245 -45.03517151]
[210.82258606 -34.42464447]
[196.36106873 -30.44161606]
[181.82092285 -34.12724304]
[171.00288391 -44.51811218]
[166.73480225 -58.89719009]
[161.69789124 -44.76815796]
[156.66098022 -30.63912964]
[157.37588501 -23.28313255]
[151.44245911 -16.33818626]
[146.19573975 -2.28571582]
[140.94902039 11.76675510]
[135.70230103 25.81922722]
[130.45558167 39.87169647]
[125.20886993 53.92416763]
[137.16516113 62.88908386]
[146.11259460 74.85845184]
[151.32681274 88.86325073]
[152.38566589 103.76967621]
[149.20344543 118.37090302]
[142.03776550 131.48484802]
[131.46875000 142.04981995]
[118.35206604 149.21047974]
[103.74961853 152.38711548]
[88.84360504 151.32255554]
[83.59688568 165.37501526]
[78.35016632 179.42749023]
[80.77167511 195.06228638]
[69.07136536 204.27923584]
[63.82464600 218.33171082]
[58.68268585 232.42285156]
[53.64577103 246.55187988]
[48.60885620 260.68090820]
[61.33189011 252.73582458]
[76.33163452 252.82412720]
[88.96024323 260.91845703]
[95.30461121 274.51071167]
[93.39886475 289.38916016]
[83.83352661 300.94354248]
[69.57250977 305.59365845]
[55.03475189 301.89855957]
[44.72493744 291.00326538]
[41.83769226 276.28350830]
[34.95827866 289.61294556]
[28.07886696 302.94235229]
[21.19945335 316.27178955]
[21.12915611 322.88290405]
[18.17426109 327.73733521]
[13.91161346 329.89114380]
[6.63838387 343.00982666]
[-0.63484573 356.12854004]
[-7.90807533 369.24722290]
[-15.18130493 382.36590576]
[-3.23860431 391.48675537]
[7.24875546 402.24932861]
[16.05723572 414.42425537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[43 200]
[44 199]
[45 198]
[46 197]
[47 187]
[48 186]
[49 185]
[51 184]
[52 183]
[54 181]
[55 180]
[56 179]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 162]
[73 161]
[74 160]
[75 149]
[76 148]
[77 147]
[78 146]
[79 131]
[80 130]
[81 129]
[82 128]
[84 126]
[85 125]
[89 124]
[90 123]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
