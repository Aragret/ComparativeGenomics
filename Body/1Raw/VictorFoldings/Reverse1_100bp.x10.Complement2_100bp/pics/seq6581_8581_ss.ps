%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[84.39152527 674.68322754]
[74.77523041 663.10681152]
[67.60241699 649.87664795]
[63.14879990 635.50128174]
[61.58555222 620.53326416]
[62.97277069 605.54785156]
[67.25712585 591.12109375]
[74.27394867 577.80755615]
[83.75351715 566.11895752]
[95.33147430 556.50451660]
[108.56279755 549.33386230]
[122.93889618 544.88256836]
[121.37837219 529.96398926]
[119.81784821 515.04534912]
[118.25732422 500.12673950]
[109.23793030 488.27349854]
[115.49754333 473.74325562]
[113.93701935 458.82464600]
[112.37649536 443.90603638]
[103.35710144 432.05279541]
[109.61672211 417.52255249]
[108.05619812 402.60394287]
[106.49567413 387.68533325]
[104.40547180 385.81741333]
[102.92924500 383.00894165]
[102.42891693 379.48971558]
[103.17666626 375.61602783]
[105.31359100 371.83615112]
[104.64380646 356.85110474]
[103.97402191 341.86605835]
[103.30423737 326.88104248]
[99.86519623 320.33926392]
[102.73771667 311.66824341]
[102.29110718 296.67489624]
[101.84449768 281.68154907]
[93.73168945 269.19027710]
[101.05467987 255.16586304]
[100.38489532 240.18081665]
[99.49208069 225.20741272]
[98.59926605 210.23400879]
[97.70644379 195.26060486]
[96.81362915 180.28720093]
[95.92081451 165.31378174]
[95.02799988 150.34037781]
[91.49195099 143.85054016]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[85.35119629 60.36400986]
[93.27713013 47.75334549]
[85.74615479 33.83950424]
[93.67208099 21.22884178]
[93.89540863 6.23050451]
[94.11873627 -8.76783276]
[94.34206390 -23.76617050]
[94.56539154 -38.76450729]
[86.15827179 -48.54628372]
[86.65305328 -61.03383636]
[95.23950958 -69.55436707]
[95.68611145 -84.54771423]
[93.49314880 -88.29536438]
[92.68781281 -92.15748596]
[93.13568115 -95.68378448]
[94.56993103 -98.51390076]
[96.63209534 -100.41275024]
[97.97032928 -115.35293579]
[99.30856323 -130.29312134]
[96.87784576 -136.44154358]
[97.78144073 -142.05229187]
[100.91555023 -145.65596008]
[102.69802094 -160.54966736]
[104.48048401 -175.44338989]
[106.26295471 -190.33711243]
[98.91909790 -200.94044495]
[100.71033478 -213.30874634]
[110.13662720 -220.88975525]
[100.82713318 -233.37860107]
[103.07125854 -248.42581177]
[115.03482819 -257.22402954]
[117.03884125 -272.08953857]
[109.65142059 -288.95690918]
[120.91139984 -302.41720581]
[122.69386292 -317.31091309]
[124.47633362 -332.20465088]
[126.25879669 -347.09835815]
[128.04125977 -361.99206543]
[129.82373047 -376.88580322]
[131.60620117 -391.77951050]
[133.38865662 -406.67321777]
[119.13588715 -411.52627563]
[106.20377350 -419.23690796]
[95.15765381 -429.46810913]
[86.48043060 -441.77255249]
[80.55142975 -455.61236572]
[77.62983704 -470.38253784]
[77.84336853 -485.43737793]
[81.18270111 -500.11874390]
[87.50184631 -513.78485107]
[96.52455902 -525.83825684]
[107.85640717 -535.75201416]
[121.00200653 -543.09277344]
[135.38668823 -547.53961182]
[150.38162231 -548.89819336]
[165.33129883 -547.10900879]
[179.58216858 -542.25036621]
[192.51124573 -534.53460693]
[203.55332947 -524.29907227]
[212.22570801 -511.99124146]
[218.14927673 -498.14907837]
[221.06506348 -483.37774658]
[220.84559631 -468.32299805]
[217.50048828 -453.64294434]
[211.17596436 -439.97933960]
[202.14851379 -427.92950439]
[190.81277466 -418.02020264]
[177.66427612 -410.68460083]
[163.27784729 -406.24340820]
[148.28237915 -404.89074707]
[146.49990845 -389.99703979]
[144.71745300 -375.10333252]
[142.93498230 -360.20959473]
[141.15251160 -345.31588745]
[139.37005615 -330.42218018]
[137.58758545 -315.52844238]
[135.80511475 -300.63473511]
[143.03262329 -290.93475342]
[141.66950989 -278.51196289]
[131.90437317 -270.08554077]
[129.90036011 -255.22000122]
[139.10702515 -243.56784058]
[137.28643799 -228.46354675]
[125.00215149 -218.88574219]
[132.53262329 -203.03459167]
[121.15666962 -188.55464172]
[119.37420654 -173.66091919]
[117.59173584 -158.76721191]
[115.80927277 -143.87348938]
[114.24874878 -128.95487976]
[112.91051483 -114.01470184]
[111.57228088 -99.07451630]
[110.67946625 -84.10111237]
[110.23285675 -69.10775757]
[119.37154388 -54.12605667]
[109.56373596 -38.54117966]
[109.34040833 -23.54284286]
[109.11708069 -8.54450512]
[108.89375305 6.45383215]
[108.67041779 21.45216942]
[116.21737671 34.29322815]
[108.27546692 47.97667313]
[115.82241821 60.81772995]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[110.00140381 149.44757080]
[110.89421844 164.42097473]
[111.78704071 179.39437866]
[112.67985535 194.36778259]
[113.57266998 209.34118652]
[114.46548462 224.31459045]
[115.35829926 239.28799438]
[118.67419434 245.00782776]
[118.61289978 250.69053650]
[116.04802704 254.71925354]
[124.19277954 268.28292847]
[116.83785248 281.23492432]
[117.28445435 296.22827148]
[117.73106384 311.22164917]
[118.28927612 326.21124268]
[118.95906067 341.19628906]
[119.62884521 356.18133545]
[120.29862976 371.16635132]
[121.41427612 386.12481689]
[122.97480011 401.04342651]
[124.53532410 415.96203613]
[133.66633606 428.88235474]
[127.29510498 442.34552002]
[128.85562134 457.26412964]
[130.41615295 472.18273926]
[139.54716492 485.10305786]
[133.17593384 498.56622314]
[134.73645020 513.48480225]
[136.29698181 528.40344238]
[137.85749817 543.32202148]
[152.84355164 544.70196533]
[167.27236938 548.97930908]
[180.58930969 555.98968506]
[192.28254700 565.46356201]
[201.90258789 577.03686523]
[209.07968140 590.26470947]
[213.53794861 604.63861084]
[215.10604858 619.60620117]
[213.72367859 634.59204102]
[209.44398499 649.02014160]
[202.43148804 662.33593750]
[192.95568848 674.02764893]
[181.38084412 683.64581299]
[168.15185547 690.82073975]
[153.77719116 695.27673340]
[138.80940247 696.84240723]
[123.82379150 695.45758057]
[109.39636230 691.17553711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 192]
[13 191]
[14 190]
[15 189]
[17 187]
[18 186]
[19 185]
[21 183]
[22 182]
[23 181]
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[35 174]
[37 172]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[46 162]
[47 161]
[48 160]
[53 159]
[54 158]
[56 156]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[65 148]
[66 147]
[71 146]
[72 145]
[73 144]
[76 143]
[77 142]
[78 141]
[79 140]
[82 138]
[85 135]
[86 134]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
