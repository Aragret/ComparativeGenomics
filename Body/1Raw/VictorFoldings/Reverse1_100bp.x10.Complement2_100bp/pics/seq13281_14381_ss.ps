%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[72.08216858 737.95593262]
[79.66362000 724.66003418]
[92.56180573 716.42016602]
[91.22357178 701.47998047]
[89.88533783 686.53979492]
[88.54710388 671.59967041]
[87.20886993 656.65948486]
[73.21059418 651.51031494]
[62.79331207 640.74975586]
[58.06171036 626.47485352]
[60.00511932 611.50006104]
[68.29119110 598.80249023]
[81.32128906 590.92993164]
[79.98305511 575.98974609]
[77.92089081 574.09088135]
[76.48664093 571.26074219]
[76.03876495 567.73443604]
[76.84410858 563.87231445]
[79.03707123 560.12469482]
[78.59046936 545.13134766]
[78.14385986 530.13800049]
[77.69725800 515.14465332]
[69.21243286 527.51428223]
[55.72246552 534.07330322]
[40.75360870 533.10723877]
[28.21868134 524.86853027]
[21.39428329 511.51086426]
[22.06429482 496.52584839]
[30.05357742 483.83050537]
[43.27375031 476.74340820]
[58.26909637 477.11709595]
[71.11986542 484.85388184]
[78.46667480 497.93051147]
[80.24913788 483.03680420]
[82.03160095 468.14309692]
[83.81407166 453.24935913]
[85.59653473 438.35565186]
[87.37900543 423.46194458]
[89.05054474 408.55535889]
[90.61106873 393.63674927]
[92.17158508 378.71813965]
[93.73210907 363.79956055]
[95.29263306 348.88095093]
[96.85315704 333.96234131]
[98.41368103 319.04373169]
[99.08346558 304.05868530]
[98.86013794 289.06036377]
[98.63681030 274.06201172]
[98.41348267 259.06369019]
[97.96687317 244.07032776]
[89.66899109 231.70124817]
[96.78236389 217.56935120]
[96.11257935 202.58430481]
[95.44279480 187.59927368]
[94.77301025 172.61422729]
[91.33396912 166.07244873]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[80.47217560 62.22804642]
[80.23284149 47.01629639]
[90.60178375 36.38517761]
[90.15517426 21.39182854]
[89.70857239 6.39847851]
[86.56445312 0.58246279]
[86.79490662 -5.09590960]
[89.47859192 -9.04646492]
[86.34918213 -17.62810898]
[89.59192657 -24.26937675]
[89.81525421 -39.26771545]
[82.28427124 -53.18155289]
[90.21020508 -65.79222107]
[90.43353271 -80.79055786]
[90.65686035 -95.78889465]
[90.88018799 -110.78723145]
[83.34921265 -124.70107269]
[91.27513885 -137.31173706]
[91.38681030 -152.31132507]
[91.38681030 -167.31132507]
[91.38681030 -182.31132507]
[90.60548401 -197.29095459]
[89.04496765 -212.20956421]
[87.48444366 -227.12815857]
[85.92391968 -242.04676819]
[76.22260284 -246.48616028]
[69.29212189 -254.49089050]
[66.33232117 -264.57272339]
[67.81296539 -274.89358521]
[73.40054321 -283.60073853]
[82.03039551 -289.15921021]
[81.13758087 -304.13262939]
[80.24476624 -319.10601807]
[65.86817932 -324.04388428]
[54.47889328 -334.11126709]
[47.81368256 -347.77301025]
[46.88894653 -362.94580078]
[51.84569931 -377.31588745]
[61.92807388 -388.69192505]
[75.59857941 -395.33914185]
[90.77256775 -396.24392700]
[105.13610840 -391.26828003]
[116.49887085 -381.17092896]
[123.12811279 -367.49169922]
[124.01292419 -352.31652832]
[119.01838684 -337.95956421]
[108.90611267 -326.61007690]
[95.21817017 -319.99884033]
[96.11098480 -305.02542114]
[97.00379944 -290.05203247]
[112.48420715 -278.22531128]
[114.30393219 -258.52273560]
[100.84252167 -243.60729980]
[102.40304565 -228.68869019]
[103.96356964 -213.77008057]
[105.52409363 -198.85148621]
[114.90133667 -210.55905151]
[129.58502197 -213.62321472]
[142.86198425 -206.64308167]
[148.66217041 -192.80986023]
[144.33380127 -178.44792175]
[131.85575867 -170.12335205]
[116.93283844 -171.64202881]
[106.38681030 -182.31132507]
[106.38681030 -167.31132507]
[106.38681030 -152.31132507]
[109.53031158 -145.62251282]
[106.27348328 -137.08840942]
[113.82043457 -124.24734497]
[105.87852478 -110.56390381]
[105.65519714 -95.56556702]
[105.43186951 -80.56723022]
[105.20854187 -65.56889343]
[112.75549316 -52.72783279]
[104.81359100 -39.04438782]
[104.59026337 -24.04604912]
[104.47859192 -9.04646492]
[104.70191956 5.95187235]
[105.14852905 20.94522285]
[105.59513092 35.93857193]
[116.57846832 45.93367004]
[117.24497223 61.13269806]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.75804901 171.94444275]
[110.42783356 186.92948914]
[111.09761810 201.91452026]
[111.76740265 216.89956665]
[120.11319733 230.34048462]
[112.95191193 243.40054321]
[116.18228149 249.16911316]
[116.03638458 254.85028076]
[113.41181946 258.84036255]
[113.63514709 273.83868408]
[113.85847473 288.83703613]
[114.08180237 303.83535767]
[123.78764343 292.39874268]
[138.33441162 288.73928833]
[152.29652405 294.22192383]
[160.46646118 306.80175781]
[159.79702759 321.78683472]
[150.53791809 333.58804321]
[136.14254761 337.80386353]
[121.98002625 332.86190796]
[113.33228302 320.60424805]
[111.77175903 335.52285767]
[110.21124268 350.44146729]
[108.65071869 365.36007690]
[107.09019470 380.27868652]
[105.52967072 395.19726562]
[103.96914673 410.11587524]
[106.18878174 418.97653198]
[102.27272034 425.24441528]
[100.49024963 440.13812256]
[98.70778656 455.03182983]
[96.92532349 469.92556763]
[95.14285278 484.81927490]
[93.36038971 499.71298218]
[92.69060516 514.69799805]
[93.13720703 529.69140625]
[93.58381653 544.68475342]
[94.03041840 559.67810059]
[94.92324066 574.65148926]
[96.26147461 589.59167480]
[110.48326111 595.02325439]
[120.89403534 606.04608154]
[125.46781921 620.43707275]
[123.34846497 635.32562256]
[115.00937653 647.76623535]
[102.14905548 655.32122803]
[103.48728943 670.26141357]
[104.82552338 685.20159912]
[106.16375732 700.14178467]
[107.50199127 715.08197021]
[121.65924072 720.89837646]
[131.48294067 732.63525391]
[134.71566772 747.59545898]
[130.61459351 762.34130859]
[120.12207794 773.48425293]
[105.64925385 778.46380615]
[90.52185059 776.13562012]
[78.21604156 767.03479004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[13 192]
[14 191]
[19 190]
[20 189]
[21 188]
[22 187]
[33 186]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 164]
[47 163]
[48 162]
[49 161]
[50 158]
[52 156]
[53 155]
[54 154]
[55 153]
[57 152]
[58 151]
[59 150]
[60 149]
[62 147]
[63 146]
[66 143]
[67 142]
[68 141]
[71 140]
[73 139]
[74 138]
[76 136]
[77 135]
[78 134]
[79 133]
[81 131]
[82 129]
[83 128]
[84 127]
[85 119]
[86 118]
[87 117]
[88 116]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
