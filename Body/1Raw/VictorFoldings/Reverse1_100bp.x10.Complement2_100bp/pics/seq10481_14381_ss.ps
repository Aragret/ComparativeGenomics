%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[179.23728943 461.52923584]
[182.25395203 446.81600952]
[187.05587769 432.58502197]
[193.57026672 419.05200195]
[201.69836426 406.42214966]
[211.31697083 394.88687134]
[222.28024292 384.62109375]
[234.42198181 375.78042603]
[227.14875793 362.66171265]
[219.87551880 349.54302979]
[212.60229492 336.42434692]
[202.56617737 334.50357056]
[195.08695984 327.22277832]
[192.80264282 316.81307983]
[196.70320129 306.65954590]
[189.82379150 293.33010864]
[182.94438171 280.00067139]
[176.06495667 266.67126465]
[169.18554688 253.34182739]
[162.30613708 240.01239014]
[155.42672729 226.68296814]
[148.54731750 213.35353088]
[144.35067749 211.07377625]
[141.54162598 206.13349915]
[141.66819763 199.52323914]
[135.18870544 185.99490356]
[128.70921326 172.46655273]
[122.02901459 159.03617859]
[115.14960480 145.70674133]
[108.27018738 132.37731934]
[101.39077759 119.04788971]
[87.61955261 114.54238129]
[80.97425842 101.66657257]
[85.27979279 87.83152771]
[78.40038300 74.50209808]
[71.52096558 61.17266846]
[64.64155579 47.84323883]
[57.76214218 34.51380920]
[50.88272858 21.18437958]
[43.60950089 8.06568527]
[35.94890213 -4.83064127]
[28.28830528 -17.72696877]
[20.62770844 -30.62329483]
[12.96711159 -43.51962280]
[5.30651379 -56.41595078]
[-2.35408354 -69.31227875]
[-16.05410576 -77.22555542]
[-15.90182209 -92.11938477]
[-20.45526123 -94.67149353]
[-23.29088020 -98.34743500]
[-24.26825523 -102.30467987]
[-23.60171127 -105.76705933]
[-30.67881775 -118.99258423]
[-37.75592422 -132.21810913]
[-44.83302689 -145.44364929]
[-51.91013336 -158.66917419]
[-65.75033569 -152.85684204]
[-80.07400513 -148.36607361]
[-94.75526428 -145.23634338]
[-109.66508484 -143.49516296]
[-124.67243958 -143.15783691]
[-139.64544678 -144.22731018]
[-154.45249939 -146.69418335]
[-168.96348572 -150.53680420]
[-183.05088806 -155.72137451]
[-196.59088135 -162.20234680]
[-209.46447754 -169.92276001]
[-221.55856323 -178.81475830]
[-232.76683044 -188.80020142]
[-242.99078369 -199.79135132]
[-252.14056396 -211.69160461]
[-260.13577271 -224.39636230]
[-266.90615845 -237.79399109]
[-272.39221191 -251.76673889]
[-276.54568481 -266.19183350]
[-279.33010864 -280.94247437]
[-280.72103882 -295.88903809]
[-280.70620728 -310.90017700]
[-279.28576660 -325.84396362]
[-276.47216797 -340.58908081]
[-272.29019165 -355.00592041]
[-266.77655029 -368.96780396]
[-259.97970581 -382.35202026]
[-251.95941162 -395.04095459]
[-242.78611755 -406.92309570]
[-232.54046631 -417.89401245]
[-221.31250000 -427.85729980]
[-209.20086670 -436.72540283]
[-196.31202698 -444.42034912]
[-182.75924683 -450.87454224]
[-168.66163635 -456.03128052]
[-154.14308167 -459.84521484]
[-139.33117676 -462.28283691]
[-124.35610199 -463.32269287]
[-109.34944153 -462.95571899]
[-94.44309235 -461.18505859]
[-79.76805115 -458.02633667]
[-65.45327759 -453.50729370]
[-51.62458801 -447.66760254]
[-38.40350342 -440.55865479]
[-25.90621376 -432.24285889]
[-14.24255085 -422.79333496]
[-3.51501632 -412.29312134]
[6.18211412 -400.83450317]
[14.76361942 -388.51815796]
[22.15408325 -375.45236206]
[28.28855705 -361.75189209]
[33.11312866 -347.53717041]
[36.58539963 -332.93313599]
[38.67485428 -318.06811523]
[39.36312866 -303.07278442]
[38.64418030 -288.07885742]
[36.52431870 -273.21813965]
[33.02217865 -258.62124634]
[28.16853523 -244.41642761]
[22.00604630 -230.72854614]
[14.58886814 -217.67788696]
[5.98218441 -205.37911987]
[-3.73836732 -193.94035339]
[-14.48736095 -183.46211243]
[-26.17033195 -174.03646851]
[-38.68460464 -165.74627686]
[-31.60750008 -152.52075195]
[-24.53039551 -139.29522705]
[-17.45328903 -126.06969452]
[-10.37618446 -112.84416199]
[-3.00549483 -99.77997589]
[10.14658928 -92.78913116]
[10.54224300 -76.97286987]
[18.20284081 -64.07654572]
[25.86343765 -51.18021774]
[33.52403641 -38.28389359]
[41.18463135 -25.38756561]
[48.84523010 -12.49123859]
[56.50582886 0.40508807]
[59.18590927 1.22685850]
[61.70195770 3.15975881]
[63.62913513 6.14662933]
[64.57111359 9.97771358]
[64.21215820 14.30496693]
[71.09157562 27.63439560]
[77.97098541 40.96382523]
[84.85039520 54.29325485]
[91.72981262 67.62268066]
[98.60922241 80.95211029]
[112.38044739 85.45761871]
[119.02574158 98.33342743]
[114.72020721 112.16847229]
[121.59961700 125.49790192]
[128.47903442 138.82733154]
[135.35844421 152.15676880]
[140.70642090 156.04400635]
[142.95143127 161.26483154]
[142.23754883 165.98706055]
[148.71705627 179.51539612]
[155.19654846 193.04374695]
[161.87673950 206.47412109]
[168.75614929 219.80355835]
[175.63557434 233.13298035]
[182.51498413 246.46240234]
[189.39439392 259.79183960]
[196.27380371 273.12127686]
[203.15321350 286.45068359]
[210.03262329 299.78012085]
[227.47015381 309.89422607]
[225.72099304 329.15112305]
[232.99421692 342.26980591]
[240.26745605 355.38848877]
[247.54067993 368.50720215]
[261.47122192 362.89294434]
[275.98611450 359.03320312]
[290.86529541 356.98645020]
[305.88323975 356.78375244]
[320.81225586 358.42819214]
[335.42602539 361.89477539]
[349.50302124 367.13101196]
[362.82980347 374.05749512]
[375.20437622 382.56921387]
[386.43914795 392.53713989]
[396.36376953 403.81018066]
[404.82781982 416.21740723]
[411.70297241 429.57077026]
[416.88497925 443.66778564]
[420.29531860 458.29479980]
[421.88229370 473.23004150]
[421.62179565 488.24707031]
[419.51782227 503.11828613]
[415.60226440 517.61822510]
[409.93444824 531.52703857]
[402.60034180 544.63391113]
[393.71109009 556.74017334]
[383.40145874 567.66223145]
[371.82775879 577.23449707]
[359.16540527 585.31195068]
[345.60641479 591.77209473]
[331.35629272 596.51696777]
[316.63110352 599.47460938]
[301.65402222 600.60028076]
[286.65216064 599.87689209]
[271.85287476 597.31536865]
[257.48059082 592.95452881]
[243.75314331 586.86053467]
[230.87864685 579.12573242]
[219.05227661 569.86743164]
[208.45332336 559.22589111]
[199.24244690 547.36254883]
[191.55931091 534.45715332]
[185.52035522 520.70538330]
[181.21714783 506.31573486]
[178.71493530 491.50634766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[10 167]
[11 166]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[25 156]
[26 155]
[27 154]
[28 151]
[29 150]
[30 149]
[31 148]
[34 145]
[35 144]
[36 143]
[37 142]
[38 141]
[39 140]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[48 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
