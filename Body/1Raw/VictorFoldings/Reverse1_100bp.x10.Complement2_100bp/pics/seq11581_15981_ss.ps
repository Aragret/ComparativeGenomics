%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[123.52708435 722.24896240]
[111.22127533 731.34979248]
[96.09387207 733.67797852]
[81.62104797 728.69842529]
[71.12853241 717.55548096]
[67.02745056 702.80963135]
[70.26018524 687.84942627]
[80.08388519 676.11254883]
[94.24113464 670.29614258]
[95.57936859 655.35595703]
[96.91760254 640.41577148]
[98.03324890 625.45733643]
[98.92607117 610.48388672]
[99.81888580 595.51049805]
[100.71170044 580.53710938]
[101.60451508 565.56365967]
[102.49732971 550.59027100]
[103.39014435 535.61688232]
[104.28296661 520.64349365]
[104.95275116 505.65841675]
[105.39935303 490.66506958]
[105.39935303 475.66506958]
[104.95275116 460.67172241]
[104.50614166 445.67837524]
[96.39333344 433.18713379]
[103.71632385 419.16268921]
[103.26971436 404.16934204]
[95.15690613 391.67810059]
[102.47989655 377.65365601]
[102.03328705 362.66030884]
[101.58668518 347.66696167]
[86.57682037 342.91375732]
[74.08068848 333.29180908]
[65.62037659 319.94995117]
[62.23431778 304.49142456]
[64.34985352 288.78140259]
[71.72942352 274.72171021]
[83.49705505 264.02087402]
[98.24232483 257.98623657]
[97.57254028 243.00120544]
[96.90274811 228.01615906]
[83.53795624 223.73579407]
[72.41329956 215.13227844]
[64.87755585 203.22294617]
[61.85315323 189.42745972]
[63.72330475 175.39859009]
[70.28357697 162.82417297]
[80.76402283 153.22410583]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[90.86397552 52.68835449]
[89.97116089 37.71495056]
[89.07834625 22.74154282]
[88.18553162 7.76813745]
[76.42845917 17.08325195]
[61.78149796 13.84806347]
[55.04183578 0.44743130]
[61.17770004 -13.24019623]
[75.66596222 -17.12480927]
[87.82562256 -8.34426498]
[88.04895020 -23.34260178]
[88.27227783 -38.34093857]
[73.98315430 -43.26824188]
[61.93293381 -52.35860443]
[53.29416275 -64.71174622]
[48.90254593 -79.11065674]
[49.17613220 -94.14154816]
[54.07555008 -108.33262634]
[63.10908508 -120.29821777]
[75.38201141 -128.87408447]
[89.68520355 -133.23065186]
[89.90853119 -148.22900391]
[90.13185883 -163.22734070]
[90.35518646 -178.22567749]
[81.01574707 -194.09565735]
[90.59643555 -208.79861450]
[90.59643555 -223.79861450]
[90.59643555 -238.79861450]
[90.37310791 -253.79696655]
[89.81489563 -268.78656006]
[89.14511108 -283.77160645]
[88.47532654 -298.75665283]
[87.80554199 -313.74169922]
[78.83110809 -323.00570679]
[78.58174133 -335.50057983]
[86.64581299 -344.51708984]
[86.19921112 -359.51043701]
[83.05509186 -365.32644653]
[83.28554535 -371.00482178]
[85.96923065 -374.95538330]
[85.96923065 -389.95538330]
[71.57605743 -394.61282349]
[59.32775497 -403.49166870]
[50.42428589 -415.72210693]
[45.73792267 -430.10589600]
[45.72778702 -445.23385620]
[50.39487076 -459.62390137]
[59.28194046 -471.86624146]
[71.51833344 -480.76150513]
[85.90525055 -485.43823242]
[101.03321075 -485.43823242]
[115.42012787 -480.76150513]
[127.65652466 -471.86624146]
[136.54359436 -459.62390137]
[141.21067810 -445.23385620]
[141.20054626 -430.10589600]
[136.51417542 -415.72210693]
[127.61071014 -403.49166870]
[115.36240387 -394.61282349]
[100.96923065 -389.95538330]
[100.96923065 -374.95538330]
[101.19255829 -359.95703125]
[101.63916779 -344.96368408]
[111.65337372 -330.55249023]
[102.79058075 -314.41146851]
[103.46036530 -299.42642212]
[104.13014984 -284.44140625]
[104.79993439 -269.45635986]
[108.23897552 -262.91458130]
[105.36646271 -254.24356079]
[108.16657257 -250.37466431]
[108.56600189 -244.70567322]
[105.59643555 -238.79861450]
[105.59643555 -223.79861450]
[105.59643555 -208.79861450]
[113.92539215 -200.02621460]
[114.04815674 -187.52946472]
[105.35352325 -178.00234985]
[105.13019562 -163.00401306]
[104.90686798 -148.00567627]
[104.68354034 -133.00732422]
[118.85066986 -128.22682190]
[130.86282349 -119.28935242]
[139.53610229 -107.06010437]
[144.01081848 -92.72944641]
[143.83676147 -77.69707489]
[139.01838684 -63.43529510]
[130.01564026 -51.34484482]
[117.70011139 -42.61728668]
[103.27061462 -38.11761093]
[103.04728699 -23.11927414]
[102.82395935 -8.12093735]
[103.15893555 6.87532187]
[104.05175018 21.84872818]
[104.94456482 36.82213211]
[105.83738708 51.79553986]
[108.75144958 55.57935333]
[109.31948090 61.23394394]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[123.98017883 152.93099976]
[135.71250916 163.86822510]
[142.33348083 178.43525696]
[142.85620117 194.38926697]
[137.23017883 209.28634644]
[126.34457397 220.85581970]
[111.88778687 227.34637451]
[112.55757904 242.33142090]
[113.22736359 257.31646729]
[126.99243927 261.29443359]
[138.83831787 269.31704712]
[147.61427307 280.58898926]
[152.47271729 294.00006104]
[152.95112610 308.23458862]
[149.01596069 321.90039062]
[141.06468201 333.66503906]
[129.88566589 342.38577271]
[116.58003235 347.22036743]
[117.02664185 362.21371460]
[117.47324371 377.20706177]
[125.61799622 390.77075195]
[118.26306915 403.72274780]
[118.70967102 418.71609497]
[126.85442352 432.27978516]
[119.49949646 445.23178101]
[119.94609833 460.22512817]
[120.39270782 475.21847534]
[122.80484009 478.82894897]
[123.83863068 482.63629150]
[123.60144806 486.18298340]
[122.33818817 489.09347534]
[120.39270782 491.11169434]
[119.94609833 506.10504150]
[122.73847198 512.09790039]
[122.17043304 517.75244141]
[119.25637054 521.53631592]
[118.36355591 536.50970459]
[117.47074127 551.48309326]
[116.57791901 566.45648193]
[115.68510437 581.42993164]
[114.79228973 596.40332031]
[113.89947510 611.37670898]
[113.00666046 626.35009766]
[115.61936188 632.42346191]
[114.88322449 638.05859375]
[111.85778809 641.75402832]
[110.51955414 656.69415283]
[109.18132019 671.63433838]
[122.07950592 679.87420654]
[129.66094971 693.17010498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 193]
[21 192]
[22 187]
[23 186]
[24 185]
[26 183]
[27 182]
[29 180]
[30 179]
[31 178]
[39 169]
[40 168]
[41 167]
[49 160]
[50 159]
[51 158]
[54 155]
[55 154]
[56 151]
[57 150]
[58 149]
[59 148]
[65 147]
[66 146]
[67 145]
[76 136]
[77 135]
[78 134]
[79 133]
[81 130]
[82 129]
[83 128]
[84 125]
[85 123]
[86 122]
[87 121]
[88 120]
[91 118]
[92 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
