%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[76.12705994 656.43493652]
[61.53669739 660.08081055]
[46.53488159 661.13751221]
[31.57750130 659.57293701]
[17.11909485 655.43463135]
[3.59903955 648.84832764]
[-8.57180786 640.01422119]
[-19.02358818 629.20074463]
[-27.43868446 616.73651123]
[-33.56137085 603.00024414]
[-37.20558548 588.40948486]
[-38.26058578 573.40753174]
[-36.69430923 558.45031738]
[-32.55435562 543.99243164]
[-25.96653557 530.47308350]
[-17.13103867 518.30328369]
[-6.31637192 507.85269165]
[6.14882231 499.43902588]
[19.88574028 493.31790161]
[34.47693253 489.67532349]
[49.47898865 488.62203979]
[51.03951263 473.70343018]
[52.60003281 458.78482056]
[54.16055679 443.86621094]
[55.72108078 428.94760132]
[57.28160095 414.02902222]
[58.39725113 399.07055664]
[59.06703568 384.08551025]
[59.73682022 369.10046387]
[60.40660858 354.11544800]
[48.63495636 363.41210938]
[33.72193909 361.79907227]
[24.21040726 350.20034790]
[25.54899979 335.26019287]
[36.97090912 325.53701782]
[51.93314743 326.60070801]
[61.86435318 337.84103394]
[63.86836624 322.97549438]
[65.87237549 308.10995483]
[59.90481567 294.46307373]
[69.41647339 281.82034302]
[71.42048645 266.95480347]
[73.42449951 252.08927917]
[75.42851257 237.22375488]
[61.60843277 229.46929932]
[51.79841614 216.97480774]
[47.52388382 201.63520813]
[49.46786499 185.79144287]
[57.36204529 171.87319946]
[70.02336121 162.02629089]
[85.53120422 157.78186035]
[87.31366730 142.88813782]
[81.14358521 129.33161926]
[90.46595001 116.54866028]
[81.59315491 105.09354401]
[83.31495667 90.70668793]
[94.64032745 81.66887665]
[96.42279816 66.77515411]
[98.20526123 51.88143921]
[99.98773193 36.98772049]
[97.74114990 30.76964951]
[98.81139374 25.18828773]
[102.05141449 21.67954254]
[104.27653503 6.84549809]
[106.50164795 -7.98854589]
[108.72676849 -22.82258987]
[109.61958313 -37.79599380]
[109.17298126 -52.78934479]
[108.72637177 -67.78269196]
[108.27976227 -82.77604675]
[107.83316040 -97.76939392]
[97.79440308 -113.20652008]
[106.70901489 -128.32261658]
[106.03923035 -143.30766296]
[105.36944580 -158.29269409]
[95.10196686 -173.57865906]
[103.79053497 -188.82580566]
[102.89772034 -203.79920959]
[102.00490570 -218.77261353]
[93.45992279 -232.08778381]
[100.42596436 -245.25303650]
[99.53314972 -260.22644043]
[89.64248657 -248.94924927]
[74.83661652 -246.54380798]
[61.88457870 -254.10983276]
[56.70787430 -268.18823242]
[61.67321777 -282.34259033]
[74.51052094 -290.10168457]
[89.35074615 -287.91818237]
[99.40985107 -276.78863525]
[100.07963562 -291.77365112]
[100.74942017 -306.75869751]
[101.41920471 -321.74374390]
[102.08898926 -336.72879028]
[87.59320831 -340.84814453]
[74.43844604 -348.19992065]
[63.33412170 -358.38769531]
[54.87907791 -370.86203003]
[49.52928543 -384.95019531]
[47.57324982 -399.89245605]
[49.11645889 -414.88293457]
[54.07569122 -429.11328125]
[62.18349457 -441.81607056]
[73.00263214 -452.30618286]
[85.94964600 -460.01797485]
[100.32630157 -464.53555298]
[115.35730743 -465.61523438]
[130.23204041 -463.19885254]
[144.14833069 -457.41668701]
[156.35569763 -448.58056641]
[166.19581604 -437.16702271]
[173.13800049 -423.79156494]
[176.80789185 -409.17553711]
[177.00755310 -394.10711670]
[173.72624207 -379.39898682]
[167.14089966 -365.84426880]
[157.60665894 -354.17401123]
[145.63771057 -345.01754761]
[131.87951660 -338.86868286]
[117.07402802 -336.05899048]
[116.40424347 -321.07394409]
[115.73445892 -306.08892822]
[115.06467438 -291.10388184]
[114.39488983 -276.11883545]
[114.50655365 -261.11926270]
[115.39936829 -246.14584351]
[123.88049316 -233.90167236]
[116.97830963 -219.66543579]
[117.87112427 -204.69203186]
[118.76394653 -189.71862793]
[127.60027313 -181.45751953]
[128.46664429 -168.99023438]
[120.35448456 -158.96249390]
[121.02426910 -143.97744751]
[121.69405365 -128.99241638]
[130.40641785 -120.60066223]
[131.08706665 -108.12186432]
[122.82650757 -98.21600342]
[123.27311707 -83.22264862]
[123.71971893 -68.22930145]
[124.16632843 -53.23595047]
[124.61293030 -38.24259949]
[132.36306763 -51.08532333]
[144.87036133 -59.36587906]
[159.71984863 -61.48542404]
[174.04434204 -57.03470993]
[185.07800293 -46.87309265]
[190.69039917 -32.96262741]
[189.79785156 -17.98920441]
[182.57272339 -4.84395933]
[170.41006470 3.93496943]
[155.65827942 6.65250731]
[141.16572571 2.78394008]
[129.73068237 -6.92377234]
[123.56081390 -20.59747314]
[121.33569336 -5.76342869]
[119.11058044 9.07061481]
[116.88545990 23.90465927]
[114.88144684 38.77018738]
[113.09898376 53.66390610]
[111.31651306 68.55762482]
[109.53404999 83.45133972]
[118.40684509 94.90645599]
[116.68504333 109.29331207]
[105.35967255 118.33112335]
[111.40225983 132.95294189]
[102.20738220 144.67060852]
[100.42491913 159.56433105]
[113.04103088 166.17378235]
[122.62320709 176.67059326]
[128.03549194 189.78013611]
[128.64659119 203.91992188]
[124.40347290 217.39056396]
[115.83528137 228.58009338]
[103.98741150 236.15681458]
[90.29403687 239.22776794]
[88.29002380 254.09329224]
[86.28601074 268.95883179]
[84.28199768 283.82434082]
[90.10621643 298.53451538]
[80.73790741 310.11398315]
[78.73389435 324.97952271]
[76.72988129 339.84503174]
[75.39164734 354.78521729]
[74.72186279 369.77026367]
[74.05207825 384.75531006]
[73.38229370 399.74032593]
[75.51921082 403.52023315]
[76.26696014 407.39389038]
[75.76663971 410.91314697]
[74.29041290 413.72158813]
[72.20021057 415.58953857]
[70.63968658 430.50814819]
[69.07916260 445.42672729]
[67.51863861 460.34533691]
[65.95811462 475.26394653]
[64.39759064 490.18255615]
[78.85693359 494.31759644]
[92.37848663 500.90081787]
[104.55133820 509.73217773]
[115.00556946 520.54327393]
[123.42349243 533.00561523]
[129.54930115 546.74041748]
[133.19682312 561.33038330]
[134.25521851 576.33209229]
[132.69233704 591.28967285]
[128.55566406 605.74853516]
[121.97090912 619.26934814]
[113.13817596 631.44116211]
[102.32587433 641.89416504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[27 187]
[28 186]
[29 185]
[30 184]
[37 183]
[38 182]
[39 181]
[41 179]
[42 178]
[43 177]
[44 176]
[51 168]
[52 167]
[54 165]
[57 162]
[58 161]
[59 160]
[60 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[73 135]
[74 134]
[75 133]
[77 130]
[78 129]
[79 128]
[81 126]
[82 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
