%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[78.55596161 616.65795898]
[66.38890076 625.46514893]
[53.21393204 632.67785645]
[39.23883438 638.18237305]
[24.68402481 641.89190674]
[9.77904701 643.74798584]
[-5.24102306 643.72125244]
[-20.13929939 641.81213379]
[-34.68081284 638.05078125]
[-48.63622284 632.49658203]
[-61.78543472 625.23699951]
[-73.92106628 616.38659668]
[-84.85171509 606.08489990]
[-94.40499115 594.49450684]
[-102.43023682 581.79809570]
[-108.80086517 568.19592285]
[-113.41641998 553.90258789]
[-116.20408630 539.14343262]
[-117.11991882 524.15130615]
[-116.14945984 509.16259766]
[-113.30802155 494.41369629]
[-108.64041901 480.13726807]
[-102.22026062 466.55844116]
[-94.14881134 453.89135742]
[-84.55335236 442.33581543]
[-73.58523560 432.07406616]
[-61.41743851 423.26791382]
[-48.24185944 416.05630493]
[-34.26630020 410.55294800]
[-19.71117783 406.84463501]
[-4.80604458 404.98983765]
[10.21402359 405.01785278]
[25.11213875 406.92819214]
[28.86843872 392.40612793]
[32.62474060 377.88406372]
[36.38104248 363.36199951]
[39.37581635 348.66400146]
[41.60093307 333.82995605]
[43.82604980 318.99591064]
[46.05116653 304.16186523]
[48.27628326 289.32781982]
[50.50139999 274.49377441]
[52.72651672 259.65972900]
[40.05156708 267.68130493]
[25.38728523 264.52554321]
[17.13403893 252.00021362]
[20.01966476 237.28039551]
[32.39114380 228.79826355]
[47.16152954 231.41278076]
[55.86945724 243.62528992]
[59.40913010 229.04891968]
[62.94880295 214.47254944]
[54.77127457 204.51475525]
[53.80781174 191.47045898]
[60.63360977 180.08543396]
[72.94891357 174.63127136]
[76.70521545 160.10920715]
[72.40161133 145.84988403]
[83.34822083 134.42700195]
[87.10452271 119.90493774]
[90.86081696 105.38288116]
[94.07409668 90.73109436]
[96.73989105 75.96987152]
[99.40568542 61.20865631]
[102.07147980 46.44744110]
[104.73727417 31.68622398]
[107.40306854 16.92500687]
[107.96128082 1.93539643]
[106.40075684 -12.98320866]
[104.84023285 -27.90181351]
[103.27971649 -42.82041931]
[101.71919250 -57.73902130]
[92.20925903 -66.45246124]
[91.21662903 -78.91033173]
[98.72973633 -88.39082336]
[97.39150238 -103.33100891]
[89.16111755 -90.79064178]
[75.50107574 -84.59359741]
[60.64410782 -86.66007996]
[49.19379044 -96.34977722]
[44.69813919 -110.66023254]
[48.55017471 -125.15718842]
[59.55630112 -135.34861755]
[74.30615997 -138.07658386]
[88.22933197 -132.49578857]
[97.01167297 -120.33528900]
[97.68145752 -135.32032776]
[98.35124207 -150.30535889]
[99.02102661 -165.29040527]
[99.24435425 -180.28874207]
[99.02102661 -195.28707886]
[98.79769897 -210.28541565]
[98.57437134 -225.28375244]
[98.35104370 -240.28208923]
[95.29386139 -246.14427185]
[95.60884094 -251.81858826]
[98.35104370 -255.72874451]
[98.57437134 -270.72708130]
[98.79769897 -285.72543335]
[99.02102661 -300.72375488]
[85.54571533 -307.98147583]
[76.99636078 -320.67663574]
[75.33754730 -335.89199829]
[80.95046234 -350.13116455]
[92.54529572 -360.12207031]
[107.45763397 -363.56890869]
[122.26073456 -359.67959595]
[133.55296326 -349.34790039]
[138.73942566 -334.94793701]
[136.62834167 -319.78869629]
[127.70479584 -307.35372925]
[114.01936340 -300.50042725]
[113.79603577 -285.50210571]
[113.57270813 -270.50375366]
[113.34938049 -255.50541687]
[113.34938049 -240.50541687]
[113.57270813 -225.50708008]
[113.79603577 -210.50874329]
[114.01936340 -195.51040649]
[114.24269104 -180.51206970]
[116.15791321 -178.46510315]
[117.37769318 -175.53614807]
[117.56204987 -171.98629761]
[116.47169495 -168.19477844]
[114.00606537 -164.62062073]
[113.33628082 -149.63557434]
[112.66649628 -134.65054321]
[111.99671173 -119.66550446]
[112.33168793 -104.66924286]
[113.66992188 -89.72905731]
[124.52414703 -75.93946838]
[116.63779449 -59.29954529]
[118.19831848 -44.38093948]
[119.75884247 -29.46233559]
[121.31936646 -14.54373169]
[122.87989044 0.37487343]
[128.36676025 -13.58557796]
[137.67778015 -25.34588623]
[150.00746155 -33.88866425]
[164.28915405 -38.47488022]
[179.28733826 -38.70777893]
[193.70454407 -34.56721115]
[206.29351807 -26.41138077]
[215.96520996 -14.94584370]
[221.88290405 -1.16248715]
[223.53465271 13.74629211]
[220.77758789 28.49073410]
[213.85021973 41.79529953]
[203.35180664 52.50900650]
[190.19059753 59.70501709]
[175.50515747 62.76079941]
[160.56593323 61.41200256]
[146.66528320 55.77530670]
[135.00579834 46.33834839]
[126.59611511 33.91751099]
[122.16429138 19.59080124]
[119.49848938 34.35202026]
[116.83269501 49.11323547]
[114.16690063 63.87445450]
[111.50110626 78.63567352]
[108.83531189 93.39688873]
[122.45850372 87.11925507]
[135.92837524 93.71944427]
[139.31544495 108.33203125]
[130.12287903 120.18517303]
[115.12711334 120.54116058]
[105.38288116 109.13918304]
[101.62657928 123.66123962]
[97.87027740 138.18330383]
[101.90520477 153.48133850]
[91.22727203 163.86550903]
[87.47097015 178.38757324]
[96.62345886 193.29566956]
[92.24832153 209.88400269]
[77.52517700 218.01222229]
[73.98550415 232.58859253]
[70.44583130 247.16496277]
[67.56056213 261.88485718]
[65.33544159 276.71890259]
[63.11032867 291.55294800]
[60.88521194 306.38699341]
[58.66009140 321.22103882]
[56.43497467 336.05508423]
[54.20985794 350.88912964]
[66.22013092 341.90283203]
[81.20328522 342.61340332]
[92.30924225 352.69595337]
[94.46049500 367.54086304]
[86.67352295 380.36129761]
[72.50843048 385.29586792]
[58.44129562 380.08859253]
[50.90309906 367.11831665]
[47.14680099 381.64038086]
[43.39049911 396.16241455]
[39.63419724 410.68447876]
[53.59007645 416.23757935]
[66.73989868 423.49603271]
[78.87627411 432.34542847]
[89.80779266 442.64617920]
[99.36204529 454.23577881]
[107.38835144 466.93151855]
[113.76013184 480.53314209]
[118.37688446 494.82608032]
[121.16580200 509.58499146]
[122.08289337 524.57708740]
[121.11369324 539.56585693]
[118.27349854 554.31500244]
[113.60710144 568.59179688]
[107.18807983 582.17120361]
[99.11769867 594.83892822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 195]
[34 194]
[35 193]
[36 192]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[50 177]
[51 176]
[52 175]
[56 172]
[57 171]
[59 169]
[60 168]
[61 167]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[75 130]
[76 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
