%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[48.27731323 690.19030762]
[42.94748688 704.49255371]
[31.93400002 715.05981445]
[17.42358589 719.79376221]
[2.29729843 717.75457764]
[-10.44152641 709.34716797]
[-18.26358604 696.24072266]
[-19.61580467 681.03765869]
[-14.22969913 666.75646973]
[-3.17468309 656.23272705]
[11.35426044 651.55590820]
[13.35827446 636.69036865]
[15.36228752 621.82482910]
[17.36630058 606.95928955]
[19.37031555 592.09375000]
[21.37432861 577.22827148]
[23.37834167 562.36273193]
[15.18581104 556.17779541]
[10.26132393 547.07916260]
[9.55241203 536.67675781]
[13.25386143 526.84295654]
[20.76051140 519.37591553]
[30.76514435 515.67034912]
[33.43093872 500.90911865]
[36.09673691 486.14791870]
[22.08723259 480.83999634]
[9.28825474 473.04602051]
[-1.86353934 463.03021240]
[-10.98737621 451.13253784]
[-17.77136230 437.75732422]
[-21.98315048 423.35946655]
[-23.47789001 408.42883301]
[-22.20322037 393.47381592]
[-18.20108986 379.00384521]
[-11.60638618 365.51211548]
[-2.64238954 353.45874023]
[8.38679123 343.25512695]
[21.10653114 335.24984741]
[35.08441544 329.71676636]
[49.84494400 326.84567261]
[64.88568878 326.73580933]
[67.55149078 311.97460938]
[70.21728516 297.21337891]
[72.88307953 282.45217896]
[75.54887390 267.69094849]
[70.19663239 253.79121399]
[80.26332092 241.58580017]
[82.81915283 226.80514526]
[85.26488495 212.00587463]
[87.71060944 197.20660400]
[90.15633392 182.40733337]
[91.49456787 167.46714783]
[91.71790314 152.46881104]
[91.94123077 137.47047424]
[92.16455841 122.47213745]
[92.38788605 107.47379303]
[91.16090393 92.52406311]
[88.49510956 77.76284790]
[78.42842102 65.55742645]
[83.78066254 51.65768814]
[81.11486816 36.89646912]
[78.19383240 33.68375778]
[76.60669708 30.07189941]
[76.31513977 26.52924538]
[77.13267517 23.46358871]
[78.75724792 21.17909622]
[76.97478485 6.28537989]
[75.19231415 -8.60833740]
[73.40985107 -23.50205421]
[62.03389359 -37.98200989]
[69.56436920 -53.83315659]
[67.56035614 -68.69868469]
[53.45704651 -79.04837036]
[51.24601364 -96.06090546]
[61.81111526 -109.14591217]
[59.58599472 -123.97995758]
[57.36087799 -138.81399536]
[55.13576126 -153.64804077]
[52.91064453 -168.48208618]
[50.68552780 -183.31613159]
[48.46041107 -198.15017700]
[46.23529434 -212.98422241]
[34.43325424 -227.11904907]
[41.48844147 -243.18737793]
[39.04271698 -257.98663330]
[24.00117493 -258.56710815]
[9.38445950 -262.16384888]
[-4.20888281 -268.62957764]
[-16.22221375 -277.69958496]
[-26.16359711 -289.00241089]
[-33.62593842 -302.07519531]
[-38.30365372 -316.38269043]
[-40.00520325 -331.33892822]
[-38.66090393 -346.33154297]
[-34.32580566 -360.74652100]
[-27.17742729 -373.99362183]
[-17.50848961 -385.53036499]
[-5.71493053 -394.88433838]
[7.72031116 -401.67248535]
[22.24707031 -405.61688232]
[37.27048492 -406.55596924]
[52.17535782 -404.45129395]
[66.35134125 -399.38903809]
[79.21794128 -391.57650757]
[90.24827576 -381.33361816]
[98.99065399 -369.07983398]
[105.08708954 -355.31689453]
[108.28794098 -340.60839844]
[108.46212006 -325.55667114]
[105.60250854 -310.77807617]
[99.82620239 -296.87774658]
[91.36972809 -284.42489624]
[80.57938385 -273.92950439]
[67.89702606 -265.82131958]
[53.84198761 -260.43237305]
[56.28771591 -245.63310242]
[65.93553925 -238.33612061]
[68.09423828 -226.02661133]
[61.06933594 -215.20933533]
[63.29445267 -200.37528992]
[65.51956940 -185.54124451]
[67.74468994 -170.70719910]
[69.96980286 -155.87315369]
[72.19492340 -141.03910828]
[74.42003632 -126.20507050]
[76.64515686 -111.37102509]
[87.97682190 -105.23727417]
[93.79346466 -93.52194977]
[91.77082062 -80.40252686]
[82.42588043 -70.70269775]
[84.42989349 -55.83716965]
[93.85618591 -48.25616837]
[95.64742279 -35.88785172]
[88.30356598 -25.28452110]
[90.08603668 -10.39080334]
[91.86849976 4.50291395]
[93.65097046 19.39663124]
[95.87608337 34.23067474]
[98.54187775 48.99189377]
[108.41790009 60.14149094]
[103.25633240 75.09705353]
[105.92212677 89.85826874]
[111.37812042 75.88571930]
[121.98812866 65.28252411]
[135.96417236 59.83551407]
[150.95106506 60.46260071]
[164.42323303 67.05810547]
[174.11038208 78.51058197]
[178.38005066 92.89007568]
[176.51274109 107.77339172]
[168.82312012 120.65243530]
[156.60702515 129.35685730]
[141.92308044 132.41979980]
[127.24578094 129.32511902]
[115.04852295 120.59432220]
[107.38622284 107.69712067]
[107.16289520 122.69546509]
[106.93956757 137.69380188]
[106.71623993 152.69213867]
[106.49291229 167.69047546]
[115.52160645 155.71205139]
[129.29098511 149.76191711]
[144.20178223 151.39543152]
[156.35632324 160.18559265]
[162.57746887 173.83467102]
[161.23901367 188.77484131]
[152.69081116 201.10075378]
[139.16737366 207.59048462]
[124.20366669 206.54759216]
[111.71118927 198.24472046]
[104.95560455 184.85305786]
[102.50988007 199.65232849]
[100.06415558 214.45159912]
[97.61842346 229.25086975]
[99.30673218 238.22792053]
[95.02454376 244.25158691]
[100.18611145 259.20715332]
[90.31008911 270.35675049]
[87.64429474 285.11798096]
[84.97850037 299.87918091]
[82.31270599 314.64041138]
[79.64691162 329.40161133]
[93.69912720 334.76550293]
[106.52300262 342.61819458]
[117.68255615 352.69094849]
[126.79870605 364.63967896]
[133.56216431 378.05654907]
[137.74388123 392.48394775]
[139.20285034 407.43014526]
[137.89083862 422.38592529]
[133.85400391 436.84213257]
[127.23123932 450.30676270]
[118.24939728 462.32192993]
[107.21554565 472.47933960]
[94.50646973 480.43411255]
[80.55577087 485.91656494]
[65.83910370 488.74133301]
[50.85795212 488.81372070]
[48.19215775 503.57492065]
[45.52636337 518.33612061]
[57.84112549 534.21148682]
[54.56103134 553.72418213]
[38.24386978 564.36676025]
[36.23985672 579.23223877]
[34.23584366 594.09777832]
[32.23183060 608.96331787]
[30.22781563 623.82885742]
[28.22380257 638.69439697]
[26.21978951 653.55987549]
[38.99162292 661.91711426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[23 200]
[24 199]
[25 198]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[47 176]
[48 174]
[49 173]
[50 172]
[51 171]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 142]
[58 141]
[60 139]
[61 138]
[66 137]
[67 136]
[68 135]
[69 134]
[71 131]
[72 130]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
