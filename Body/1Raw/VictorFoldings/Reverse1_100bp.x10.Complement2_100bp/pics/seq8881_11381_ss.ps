%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-12.42897892 365.08218384]
[-12.18007088 380.09127808]
[-13.33774567 395.05770874]
[-15.89182854 409.84997559]
[-19.81987381 424.33807373]
[-25.08735847 438.39468384]
[-31.64799500 451.89624023]
[-39.44412613 464.72415161]
[-48.40723419 476.76562500]
[-58.45855331 487.91485596]
[-69.50974274 498.07385254]
[-81.46369934 507.15338135]
[-94.21534729 515.07360840]
[-107.65263367 521.76489258]
[-121.65747070 527.16851807]
[-136.10678101 531.23693848]
[-150.87356567 533.93444824]
[-165.82806396 535.23724365]
[-180.83885193 535.13397217]
[-195.77401733 533.62548828]
[-210.50228882 530.72509766]
[-224.89424133 526.45825195]
[-238.82341003 520.86242676]
[-252.16734314 513.98687744]
[-264.80880737 505.89190674]
[-276.63668823 496.64877319]
[-287.54705811 486.33865356]
[-297.44400024 475.05218506]
[-306.24060059 462.88851929]
[-313.85946655 449.95455933]
[-320.23370361 436.36398315]
[-325.30728149 422.23623657]
[-329.03558350 407.69546509]
[-331.38589478 392.86944580]
[-332.33752441 377.88851929]
[-331.88211060 362.88427734]
[-330.02368164 347.98861694]
[-326.77853394 333.33242798]
[-322.17520142 319.04455566]
[-316.25418091 305.25048828]
[-309.06741333 292.07153320]
[-300.67816162 279.62344360]
[-291.16006470 268.01568604]
[-280.59683228 257.35018921]
[-269.08126831 247.72074890]
[-256.71456909 239.21195984]
[-243.60545349 231.89860535]
[-229.86907959 225.84495544]
[-215.62619019 221.10423279]
[-201.00195312 217.71806335]
[-186.12487793 215.71623230]
[-171.12573242 215.11631775]
[-156.13630676 215.92359924]
[-141.28834534 218.13098145]
[-126.71233368 221.71907043]
[-112.53636932 226.65632629]
[-98.88503265 232.89935303]
[-85.87829590 240.39329529]
[-73.63045502 249.07229614]
[-62.24916458 258.86007690]
[-51.44701004 248.45271301]
[-40.64485168 238.04533386]
[-29.84269714 227.63796997]
[-26.04556274 213.23548889]
[-10.73912334 209.23255920]
[0.06303277 198.82519531]
[0.08259176 183.97476196]
[10.88925743 173.26632690]
[26.46562004 173.38752747]
[37.26777649 162.98014832]
[48.06993103 152.57278442]
[58.87208939 142.16540527]
[69.67424774 131.75804138]
[80.47640228 121.35066223]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[118.22919464 29.73413467]
[122.94932556 15.49614525]
[127.02899170 1.06159222]
[131.00108337 -13.40293121]
[134.97319031 -27.86745644]
[138.94528198 -42.33197784]
[138.20005798 -51.43595886]
[143.08569336 -56.98144913]
[147.27270508 -71.38523102]
[151.45971680 -85.78900909]
[137.66145325 -91.72091675]
[124.69675446 -99.30355072]
[112.76216888 -108.42195892]
[102.03862000 -118.93790436]
[92.68867493 -130.69197083]
[84.85408020 -143.50598145]
[78.65359497 -157.18565369]
[74.18122101 -171.52363586]
[71.50476837 -186.30253601]
[70.66479492 -201.29833984]
[71.67404938 -216.28370667]
[74.51721954 -231.03144836]
[79.15121460 -245.31800842]
[85.50577545 -258.92678833]
[93.48458099 -271.65151978]
[102.96665955 -283.29925537]
[113.80826569 -293.69342041]
[125.84505463 -302.67648315]
[138.89454651 -310.11224365]
[152.75892639 -315.88796997]
[167.22798157 -319.91607666]
[182.08239746 -322.13555908]
[197.09696960 -322.51272583]
[212.04408264 -321.04187012]
[226.69714355 -317.74530029]
[240.83401489 -312.67297363]
[254.24038696 -305.90179443]
[266.71301270 -297.53442383]
[278.06283569 -287.69769287]
[288.11776733 -276.54071045]
[296.72540283 -264.23266602]
[303.75521851 -250.96008301]
[309.10067749 -236.92420959]
[312.68072510 -222.33781433]
[314.44110107 -207.42202759]
[314.35510254 -192.40296936]
[312.42404175 -177.50831604]
[308.67721558 -162.96386719]
[303.17138672 -148.99012756]
[295.99005127 -135.79891968]
[287.24203491 -123.59023285]
[277.05999756 -112.54914093]
[265.59829712 -102.84300995]
[253.03067017 -94.61900330]
[239.54763794 -88.00179291]
[225.35360718 -83.09167480]
[210.66375732 -79.96311188]
[195.70079041 -78.66350555]
[180.69151306 -79.21257782]
[165.86349487 -81.60199738]
[161.67648315 -67.19821930]
[157.48947144 -52.79443741]
[153.40980530 -38.35988235]
[149.43771362 -23.89535904]
[145.46560669 -9.43083572]
[141.49351501 5.03368855]
[142.75355530 12.31613922]
[137.35310364 19.68315697]
[151.55546570 14.85687828]
[164.26560974 22.82258606]
[166.11407471 37.70825577]
[155.73825073 48.54072571]
[140.78681946 47.33470154]
[132.28166199 34.98085403]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[113.69883728 103.79483795]
[126.41021729 95.83111572]
[140.41658020 90.46253204]
[155.19430542 87.88980865]
[170.19090271 88.20912170]
[184.84573364 91.40853119]
[198.61088562 97.36843109]
[210.97175598 105.86600494]
[221.46623230 116.58355713]
[229.70196533 129.12042236]
[235.37104797 143.00787354]
[238.26153564 157.72674561]
[238.26538086 172.72674561]
[235.38243103 187.44708252]
[229.72047424 201.33744812]
[221.49116516 213.87852478]
[211.00219727 224.60145569]
[198.64567566 233.10536194]
[184.88357544 239.07232666]
[170.23039246 242.27925110]
[155.23394775 242.60624695]
[140.45491028 240.04109192]
[126.44580078 234.67968750]
[113.73033905 226.72248840]
[102.78392792 216.46694946]
[94.01578522 204.29650879]
[87.75373077 190.66613770]
[84.23187256 176.08544922]
[83.58187103 161.09954834]
[85.82803345 146.26867676]
[90.88377380 132.15281677]
[80.08161926 142.56019592]
[69.27946472 152.96755981]
[58.47730637 163.37493896]
[47.67514801 173.78231812]
[36.87299347 184.18968201]
[36.41445541 199.75976562]
[25.31127548 210.16044617]
[10.47040558 209.62734985]
[-0.33175039 220.03471375]
[-4.90152693 235.18159485]
[-19.43532372 238.44012451]
[-30.23748016 248.84748840]
[-41.03963470 259.25485229]
[-51.84179306 269.66223145]
[-42.48433685 281.39990234]
[-34.26713943 293.96221924]
[-27.26242065 307.23883057]
[-21.53173447 321.11303711]
[-17.12544823 335.46292114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 205]
[61 204]
[62 203]
[63 202]
[65 200]
[66 199]
[69 196]
[70 195]
[71 194]
[72 193]
[73 192]
[74 191]
[75 160]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[82 148]
[83 146]
[84 145]
[85 144]
[86 143]
[88 142]
[89 141]
[90 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
