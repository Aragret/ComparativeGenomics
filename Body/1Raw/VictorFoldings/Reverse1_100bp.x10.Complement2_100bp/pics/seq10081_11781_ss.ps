%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[37.31890106 676.75598145]
[24.18943405 669.37823486]
[12.95322609 659.35021973]
[4.13581419 647.14086914]
[-1.85039461 633.32135010]
[-4.72541475 618.53796387]
[-4.35477638 603.48217773]
[-0.75581497 588.85821533]
[5.90314007 575.34997559]
[15.31063652 563.58929443]
[27.02667046 554.12628174]
[40.50325775 547.40350342]
[55.11008072 543.73541260]
[54.66347504 528.74206543]
[54.21686935 513.74871826]
[53.77025986 498.75537109]
[53.32365417 483.76202393]
[52.87704849 468.76867676]
[52.09572601 453.78903198]
[50.98007965 438.83059692]
[49.86442947 423.87213135]
[42.98440933 437.20126343]
[31.32887268 446.64309692]
[16.86198044 450.60656738]
[2.02165675 448.42370605]
[-10.69124126 440.46240234]
[-19.13436890 428.06430054]
[-21.88490677 413.31863403]
[-18.47934532 398.71032715]
[-9.49158001 386.70117188]
[3.56379342 379.31488037]
[18.48671532 377.79620361]
[32.76240921 382.40103149]
[43.98517227 392.35339355]
[50.26414108 405.97775269]
[52.04660797 391.08404541]
[53.82907486 376.19033813]
[55.61154175 361.29660034]
[53.98696899 359.01211548]
[53.16942978 355.94647217]
[53.46098709 352.40380859]
[55.04812241 348.79196167]
[57.96915817 345.57922363]
[60.63495255 330.81802368]
[63.30074692 316.05679321]
[65.74647522 301.25753784]
[67.97159576 286.42349243]
[70.19670868 271.58944702]
[57.31368637 261.83544922]
[51.07162857 246.82904053]
[53.26165771 230.62963867]
[63.37987518 217.67135620]
[78.73929596 211.54925537]
[80.74330902 196.68371582]
[82.74732208 181.81819153]
[84.75133514 166.95266724]
[86.75534821 152.08714294]
[88.53781128 137.19342041]
[90.09833527 122.27481842]
[91.65885925 107.35620880]
[79.35472870 115.93574524]
[64.56416321 113.43792725]
[55.75986481 101.29360962]
[57.98534012 86.45962524]
[69.96572876 77.43354034]
[84.83812714 79.38591003]
[94.08268738 91.19741821]
[96.96796417 76.47752380]
[90.59760284 59.20037079]
[102.63879395 46.43413925]
[105.30458832 31.67292023]
[107.97038269 16.91170311]
[110.63617706 2.15048599]
[113.30197144 -12.61073112]
[115.96776581 -27.37194824]
[118.63356018 -42.13316727]
[120.96904755 -56.95023346]
[122.97306061 -71.81576538]
[124.97708130 -86.68128967]
[126.09272766 -101.63973999]
[126.31605530 -116.63808441]
[126.53938293 -131.63641357]
[117.19994354 -147.50640869]
[126.78063202 -162.20936584]
[126.78063202 -177.20936584]
[126.55730438 -192.20770264]
[126.11070251 -207.20104980]
[125.55249023 -222.19065857]
[124.88270569 -237.17570496]
[124.21292114 -252.16073608]
[123.54313660 -267.14578247]
[108.73764801 -269.95544434]
[94.97944641 -276.10433960]
[83.01049805 -285.26080322]
[73.47626495 -296.93106079]
[66.89091492 -310.48577881]
[63.60960007 -325.19390869]
[63.80926895 -340.26232910]
[67.47915649 -354.87835693]
[74.42134857 -368.25381470]
[84.26145935 -379.66735840]
[96.46882629 -388.50347900]
[110.38511658 -394.28564453]
[125.25985718 -396.70202637]
[140.29086304 -395.62234497]
[154.66751099 -391.10476685]
[167.61453247 -383.39297485]
[178.43367004 -372.90286255]
[186.54147339 -360.20007324]
[191.50070190 -345.96972656]
[193.04391479 -330.97924805]
[191.08787537 -316.03698730]
[185.73808289 -301.94882202]
[177.28303528 -289.47448730]
[166.17871094 -279.28671265]
[153.02395630 -271.93490601]
[138.52816772 -267.81558228]
[139.19795227 -252.83052063]
[139.86773682 -237.84548950]
[140.53752136 -222.86044312]
[143.97656250 -216.31867981]
[141.10404968 -207.64765930]
[141.55065918 -192.65431213]
[144.35076904 -188.78541565]
[144.75019836 -183.11642456]
[141.78063965 -177.20936584]
[141.78063965 -162.20936584]
[150.10958862 -153.43696594]
[150.23234558 -140.94021606]
[141.53771973 -131.41308594]
[141.31439209 -116.41475677]
[141.09106445 -101.41641235]
[151.13311768 -112.55900574]
[165.78239441 -115.78370667]
[179.57507324 -109.88778687]
[187.36683655 -97.07028198]
[186.25154114 -82.11180115]
[176.64517212 -70.59149170]
[162.13066101 -66.80613708]
[148.12156677 -72.16758728]
[139.84260559 -84.67727661]
[137.83859253 -69.81174469]
[135.83457947 -54.94622040]
[137.67008972 -51.93569946]
[138.13862610 -47.88656235]
[136.76789856 -43.45097351]
[133.39477539 -39.46736908]
[130.72898865 -24.70615387]
[128.06318665 -9.94493580]
[125.39739227 4.81628132]
[122.73159790 19.57749939]
[120.06580353 34.33871460]
[117.40000916 49.09993362]
[124.03734589 59.21290970]
[121.93724060 71.53253937]
[111.68785095 79.36280060]
[108.80258179 94.08268738]
[106.57746124 108.91673279]
[105.01694489 123.83534241]
[103.45642090 138.75393677]
[105.79532623 144.93788147]
[104.80829620 150.53456116]
[101.62088013 154.09115601]
[99.61685944 168.95668030]
[97.61284637 183.82220459]
[95.60883331 198.68772888]
[93.60482025 213.55326843]
[105.10450745 221.51693726]
[112.01810455 233.60073853]
[113.04589844 247.41818237]
[108.04416656 260.26855469]
[98.04212952 269.66473389]
[85.03075409 273.81457520]
[82.80563354 288.64859009]
[80.58052063 303.48263550]
[82.64096832 309.76486206]
[81.40502167 315.31185913]
[78.06196594 318.72259521]
[75.39617157 333.48382568]
[72.73037720 348.24502563]
[70.50525665 363.07907104]
[68.72279358 377.97277832]
[66.94032288 392.86651611]
[65.15785980 407.76022339]
[64.82288361 422.75650024]
[65.93852997 437.71493530]
[67.05418396 452.67340088]
[69.99456787 456.98629761]
[70.89639282 461.54043579]
[70.00915527 465.51885986]
[67.87039948 468.32208252]
[68.31700897 483.31542969]
[68.76361084 498.30877686]
[69.21022034 513.30212402]
[69.65682220 528.29547119]
[70.10343170 543.28881836]
[84.90267944 546.08099365]
[98.75552368 551.98968506]
[111.01403046 560.73858643]
[121.10485840 571.91845703]
[128.55603027 585.00640869]
[133.01904297 599.39025879]
[134.28517151 614.39727783]
[132.29516602 629.32556152]
[127.14212036 643.47692871]
[119.06705475 656.18939209]
[108.44764709 666.86846924]
[95.78058624 675.01458740]
[81.65834045 680.24682617]
[66.74142456 682.32043457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 187]
[20 186]
[21 185]
[35 184]
[36 183]
[37 182]
[38 181]
[43 180]
[44 179]
[45 178]
[46 175]
[47 174]
[48 173]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 160]
[59 159]
[60 158]
[67 157]
[68 156]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 143]
[78 142]
[79 141]
[80 132]
[81 131]
[82 130]
[84 127]
[85 126]
[86 123]
[87 122]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
