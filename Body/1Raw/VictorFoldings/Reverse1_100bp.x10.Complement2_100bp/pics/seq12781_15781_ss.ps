%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[131.55984497 714.21710205]
[123.17096710 701.75225830]
[116.59857178 688.24114990]
[111.97059631 673.94677734]
[109.37712097 659.14746094]
[108.86862946 644.13122559]
[110.45502472 629.19036865]
[114.10541534 614.61572266]
[119.74875641 600.69091797]
[127.27519989 587.68713379]
[136.53823853 575.85742188]
[147.35755920 565.43206787]
[159.52255249 556.61395264]
[172.79644775 549.57476807]
[186.92085266 544.45153809]
[183.81674194 529.77624512]
[180.71263123 515.10095215]
[177.60852051 500.42565918]
[174.28625488 485.79818726]
[170.74658203 471.22180176]
[167.20690918 456.64544678]
[163.66723633 442.06906128]
[150.85327148 434.56323242]
[147.05589294 419.83111572]
[155.01559448 406.44155884]
[151.47592163 391.86517334]
[147.50381470 377.40063477]
[143.10282898 363.06079102]
[138.70182800 348.72094727]
[134.30082703 334.38110352]
[129.89982605 320.04125977]
[125.49883270 305.70141602]
[121.09783173 291.36157227]
[116.69683075 277.02172852]
[112.29583740 262.68188477]
[108.22321320 277.11840820]
[98.35515594 288.41537476]
[84.59703064 294.39151001]
[69.60531616 293.89288330]
[56.27468491 287.01580811]
[47.17906570 275.08810425]
[44.07468033 260.41287231]
[47.56093979 245.82363892]
[56.96470261 234.13734436]
[70.47024536 227.61045837]
[85.46986389 227.50320435]
[99.06735992 233.83628845]
[108.63785553 245.38803101]
[106.85539246 230.49432373]
[105.07292175 215.60060120]
[103.29045868 200.70687866]
[92.14644623 194.23846436]
[86.68119049 182.35514832]
[89.09354401 169.30175781]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[85.45252991 107.26293182]
[84.32715607 95.67092133]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[80.96694946 58.30492783]
[87.53792572 44.93812180]
[86.19969177 29.99793434]
[84.86145782 15.05774975]
[83.30093384 0.13914543]
[81.51847076 -14.75457191]
[65.98657990 -18.30425453]
[52.63166809 -26.94321442]
[43.05844498 -39.61151505]
[38.40971756 -54.76638794]
[39.22998428 -70.57012177]
[45.40170670 -85.11288452]
[56.16176987 -96.64353943]
[70.19577026 -103.78048706]
[68.19175720 -118.64601898]
[66.18774414 -133.51155090]
[61.93987274 -141.59815979]
[64.26625824 -148.61312866]
[62.48379517 -163.50685120]
[60.70132828 -178.40055847]
[58.91886139 -193.29428101]
[57.13639832 -208.18800354]
[53.00939560 -216.33695984]
[55.43996811 -223.31651306]
[53.87944412 -238.23512268]
[52.31892395 -253.15371704]
[50.75839996 -268.07232666]
[46.75318146 -276.28182983]
[49.28739929 -283.22442627]
[47.94916534 -298.16461182]
[46.61093140 -313.10479736]
[45.27269745 -328.04498291]
[30.61640930 -331.91397095]
[18.16904449 -340.56491089]
[9.43368244 -352.95318604]
[5.46516037 -367.58282471]
[6.74269772 -382.68725586]
[13.11202431 -396.44253540]
[23.80401421 -407.18762207]
[37.52755737 -413.62503052]
[52.62546921 -414.97738647]
[67.27460480 -411.08142090]
[79.70600128 -402.40753174]
[88.41851807 -390.00317383]
[92.36007690 -375.36624146]
[91.05470276 -360.26419067]
[84.66004181 -346.52069092]
[73.94826508 -335.79531860]
[60.21288300 -329.38320923]
[61.55111694 -314.44302368]
[62.88935089 -299.50283813]
[64.22758484 -284.56265259]
[65.67700195 -269.63284302]
[67.23752594 -254.71424866]
[68.79804993 -239.79563904]
[70.35857391 -224.87702942]
[72.03011322 -209.97045898]
[73.81257629 -195.07675171]
[75.59504700 -180.18302917]
[77.37751007 -165.28930664]
[79.15998077 -150.39559937]
[81.05326843 -135.51556396]
[83.05728149 -120.65003204]
[85.06129456 -105.78450012]
[98.97715759 -103.18405914]
[111.42847443 -96.40277100]
[121.19155121 -86.09198761]
[127.30225372 -73.25068665]
[129.15115356 -59.12865829]
[126.54438019 -45.10488129]
[119.72373962 -32.55286789]
[109.34445953 -22.70614815]
[96.41218567 -16.53703690]
[98.19464874 -1.64332044]
[101.32876587 1.96033823]
[102.23236084 7.57109070]
[99.80164337 13.71951580]
[101.13987732 28.65970039]
[102.47811127 43.59988785]
[111.32003021 55.58611679]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[116.18365479 98.42885590]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[127.43065643 169.08895874]
[129.13418579 186.15977478]
[118.18417358 198.92442322]
[119.96664429 213.81813049]
[121.74910736 228.71185303]
[123.53157043 243.60557556]
[126.63568115 258.28088379]
[131.03668213 272.62072754]
[135.43768311 286.96057129]
[139.83868408 301.30041504]
[144.23966980 315.64025879]
[148.64067078 329.98010254]
[153.04167175 344.31994629]
[157.44267273 358.65979004]
[161.84367371 372.99966431]
[165.12577820 375.84249878]
[167.13087463 379.24014282]
[167.84133911 382.72305298]
[167.39389038 385.86413574]
[166.05229187 388.32550049]
[169.59196472 402.90188599]
[182.80601501 411.14971924]
[186.18809509 425.98263550]
[178.24362183 438.52938843]
[181.78329468 453.10577393]
[185.32296753 467.68212891]
[188.86264038 482.25851440]
[193.14227295 487.29800415]
[194.09188843 492.90115356]
[192.28382874 497.32153320]
[195.38792419 511.99685669]
[198.49203491 526.67211914]
[201.59614563 541.34747314]
[216.58532715 540.31256104]
[231.57263184 541.37396240]
[246.26635742 544.51092529]
[260.38049316 549.66241455]
[273.64025879 556.72808838]
[285.78759766 565.57049561]
[296.58605957 576.01751709]
[305.82540894 587.86578369]
[313.32580566 600.88458252]
[318.94128418 614.82061768]
[322.56250000 629.40252686]
[324.11901855 644.34655762]
[323.58047485 659.36175537]
[320.95739746 674.15582275]
[316.30084229 688.44091797]
[309.70141602 701.93884277]
[301.28762817 714.38690186]
[291.22320557 725.54278564]
[279.70410156 735.18933105]
[266.95452881 743.13879395]
[253.22262573 749.23645020]
[238.77571106 753.36352539]
[223.89500427 755.43981934]
[208.87016296 755.42474365]
[193.99365234 753.31872559]
[179.55502319 749.16271973]
[165.83535767 743.03765869]
[153.10169983 735.06268311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 182]
[16 181]
[17 180]
[18 179]
[19 176]
[20 175]
[21 174]
[22 173]
[25 170]
[26 169]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[48 155]
[49 154]
[50 153]
[51 152]
[55 149]
[56 148]
[57 147]
[58 146]
[61 144]
[62 143]
[64 141]
[65 140]
[66 139]
[67 136]
[68 135]
[76 126]
[77 125]
[78 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[86 118]
[87 117]
[88 116]
[89 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
