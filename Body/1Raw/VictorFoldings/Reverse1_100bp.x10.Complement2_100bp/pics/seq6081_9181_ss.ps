%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[63.71855545 548.69354248]
[50.54161453 541.34295654]
[39.71680832 530.83172607]
[31.98218727 517.87652588]
[27.86511230 503.36056519]
[27.64629364 488.27368164]
[31.34064674 473.64447021]
[38.69628906 460.47036743]
[49.21169662 449.64959717]
[62.16991806 441.91998291]
[76.68743134 437.80853271]
[76.46410370 422.81018066]
[76.24077606 407.81185913]
[76.01744843 392.81350708]
[68.09151459 380.20285034]
[75.62248993 366.28900146]
[75.39916229 351.29067993]
[73.13737488 348.58572388]
[72.07337189 344.65090942]
[72.77094269 340.06106567]
[75.51582336 335.62115479]
[75.96242523 320.62780762]
[76.40903473 305.63446045]
[76.85563660 290.64108276]
[77.30224609 275.64773560]
[77.74884796 260.65438843]
[78.19545746 245.66104126]
[78.64205933 230.66769409]
[79.08866882 215.67434692]
[67.45673370 225.14526367]
[52.52135468 223.75442505]
[42.83819199 212.29858398]
[43.95419693 197.34016418]
[55.23007584 187.44801331]
[70.20649719 188.28881836]
[80.30394745 199.38003540]
[82.08641815 184.48631287]
[83.86888123 169.59260559]
[72.83728790 159.62054443]
[69.75653076 144.89053345]
[76.01321411 131.00863647]
[89.39901733 123.38455963]
[91.18148041 108.49083710]
[82.65031433 120.82855225]
[70.76235199 129.97604370]
[56.65069580 135.06141663]
[41.66036606 135.59997559]
[27.22015190 131.54040527]
[14.70639992 123.26960754]
[5.31184101 111.57592773]
[-0.06809453 97.57391357]
[-0.92062575 82.59815979]
[2.83550525 68.07605743]
[10.84228802 55.39175797]
[22.33656693 45.75425339]
[36.22278214 40.08212280]
[51.17738342 38.91600037]
[65.77500153 42.36703110]
[78.62427521 50.10629272]
[88.50049591 61.39611816]
[94.46233368 75.16043854]
[95.94147491 90.08846283]
[101.60425568 76.19843292]
[107.26704407 62.30840683]
[112.92983246 48.41837692]
[118.59262085 34.52835083]
[116.63769531 18.82838821]
[128.60723877 9.96389008]
[134.27001953 -3.92613649]
[139.93281555 -17.81616402]
[145.59559631 -31.70619011]
[151.25837708 -45.59621811]
[156.92117310 -59.48624420]
[162.37652588 -73.45904541]
[167.62324524 -87.51151276]
[172.86996460 -101.56398773]
[178.01191711 -115.65512848]
[183.04884338 -129.78414917]
[171.67994690 -119.99903870]
[157.56854248 -114.91298676]
[142.57119751 -115.19515228]
[128.66107178 -120.80840302]
[117.66829681 -131.01423645]
[111.03916168 -144.46987915]
[109.64582825 -159.40502930]
[113.67162323 -173.85470581]
[122.58688354 -185.91778564]
[135.21864319 -194.00720215]
[149.90499878 -197.05860901]
[164.71368408 -194.67057800]
[177.69638062 -187.15727234]
[187.14497375 -175.50721741]
[191.81636047 -161.25315857]
[191.09536743 -146.26814270]
[199.13653564 -158.93066406]
[207.17771912 -171.59320068]
[215.21888733 -184.25572205]
[223.26005554 -196.91824341]
[211.60270691 -206.38517761]
[201.12326050 -217.14144897]
[191.96342468 -229.04161072]
[184.24707031 -241.92472839]
[178.07856750 -255.61656189]
[173.54133606 -269.93194580]
[170.69673157 -284.67727661]
[169.58323669 -299.65313721]
[170.21589661 -314.65701294]
[172.58615112 -329.48599243]
[176.66195679 -343.93951416]
[182.38818359 -357.82211304]
[189.68740845 -370.94604492]
[198.46089172 -383.13385010]
[208.59001160 -394.22067261]
[219.93775940 -404.05657959]
[232.35067749 -412.50857544]
[245.66088867 -419.46231079]
[259.68841553 -424.82379150]
[274.24349976 -428.52047729]
[289.12936401 -430.50238037]
[304.14465332 -430.74270630]
[319.08630371 -429.23818970]
[333.75225830 -426.00921631]
[347.94418335 -421.09942627]
[361.47012329 -414.57519531]
[374.14715576 -406.52481079]
[385.80386353 -397.05709839]
[396.28262329 -386.30010986]
[405.44165039 -374.39935303]
[413.15713501 -361.51571655]
[419.32473755 -347.82348633]
[423.86102295 -333.50781250]
[426.70462036 -318.76229858]
[427.81713867 -303.78634644]
[427.18347168 -288.78250122]
[424.81222534 -273.95370483]
[420.73544312 -259.50045776]
[415.00830078 -245.61822510]
[407.70819092 -232.49476624]
[398.93389893 -220.30755615]
[388.80404663 -209.22140503]
[377.45565796 -199.38624573]
[365.04217529 -190.93510437]
[351.73147583 -183.98223877]
[337.70361328 -178.62170410]
[323.14825439 -174.92599487]
[308.26226807 -172.94508362]
[293.24697876 -172.70574951]
[278.30541992 -174.21124268]
[263.63967896 -177.44120789]
[249.44808960 -182.35195923]
[235.92259216 -188.87707520]
[227.88140869 -176.21455383]
[219.84024048 -163.55201721]
[211.79907227 -150.88949585]
[203.75788879 -138.22697449]
[197.17787170 -124.74723816]
[192.14094543 -110.61820984]
[192.85586548 -103.26221466]
[186.92243958 -96.31726837]
[181.67572021 -82.26479340]
[176.42900085 -68.21232605]
[177.56132507 -63.57261658]
[175.79104614 -58.17232895]
[170.81120300 -53.82345581]
[165.14840698 -39.93342972]
[159.48562622 -26.04340363]
[153.82283020 -12.15337658]
[148.16004944 1.73665023]
[142.49726868 15.62667751]
[144.85722351 30.33313179]
[132.48265076 40.19113922]
[126.81986237 54.08116531]
[121.15707397 67.97119141]
[115.49428558 81.86122131]
[109.83149719 95.75124359]
[106.07519531 110.27330780]
[104.29273224 125.16702271]
[115.50138092 135.73454285]
[118.30553436 150.70083618]
[111.83583069 164.28784180]
[98.76259613 171.37506104]
[96.98013306 186.26878357]
[95.19766235 201.16250610]
[94.08201599 216.12095642]
[93.63541412 231.11430359]
[93.18880463 246.10765076]
[92.74220276 261.10101318]
[92.29559326 276.09436035]
[91.84899139 291.08770752]
[91.40238190 306.08105469]
[90.95577240 321.07440186]
[90.50917053 336.06774902]
[90.39750671 351.06735229]
[90.62083435 366.06567383]
[98.56273651 379.74911499]
[91.01578522 392.59017944]
[91.23911285 407.58853149]
[91.46244049 422.58685303]
[91.68576813 437.58520508]
[106.31925964 441.26260376]
[119.50187683 448.60296631]
[130.33479309 459.10583496]
[138.07942200 472.05508423]
[142.20770264 486.56784058]
[142.43817139 501.65457153]
[138.75511169 516.28662109]
[131.40965271 529.46643066]
[120.90259552 540.29528809]
[107.95035553 548.03491211]
[93.43601990 552.15759277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 199]
[12 198]
[13 197]
[14 196]
[16 194]
[17 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[36 183]
[37 182]
[38 181]
[42 177]
[43 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[68 169]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[74 161]
[75 160]
[76 159]
[77 157]
[78 156]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
