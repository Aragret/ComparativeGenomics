%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[65.22093201 659.16992188]
[73.48036194 646.33465576]
[86.49535370 638.36138916]
[77.47595978 626.50811768]
[83.73558044 611.97790527]
[82.17505646 597.05932617]
[80.61453247 582.14068604]
[71.59513855 570.28741455]
[77.85475159 555.75720215]
[76.29422760 540.83862305]
[67.27483368 528.98535156]
[73.53444672 514.45507812]
[71.97393036 499.53649902]
[62.95453262 487.68322754]
[69.21414948 473.15298462]
[67.65362549 458.23437500]
[66.09310150 443.31579590]
[58.96987152 456.51654053]
[46.57966232 464.97128296]
[31.69047737 466.79119873]
[17.62859917 461.56976318]
[7.53548574 450.47338867]
[3.66596627 435.98110962]
[6.88450050 421.33047485]
[16.47205925 409.79449463]
[30.28675842 403.95034790]
[45.24235916 405.10360718]
[57.99774170 412.99667358]
[65.70332336 425.86618042]
[66.59613800 410.89279175]
[67.48895264 395.91937256]
[65.04517365 391.81610107]
[65.15310669 386.13406372]
[68.63782501 380.51550293]
[69.97605896 365.57531738]
[71.31429291 350.63513184]
[72.65252686 335.69494629]
[73.99076080 320.75476074]
[75.32899475 305.81457520]
[76.66722870 290.87438965]
[70.09625244 277.50759888]
[79.03388977 264.45272827]
[80.37212372 249.51254272]
[73.80115509 236.14573669]
[82.73879242 223.09088135]
[84.07702637 208.15069580]
[85.41526031 193.21051025]
[86.64223480 178.26078796]
[87.75788116 163.30232239]
[80.98862457 150.03483582]
[89.73090363 136.84835815]
[90.84654999 121.88990784]
[91.96219635 106.93144989]
[92.18552399 91.93311310]
[91.51573944 76.94807434]
[83.16995239 63.50715637]
[90.33123016 50.44709015]
[89.66144562 35.46205139]
[81.31565094 22.02113152]
[88.47692871 8.96106529]
[87.80714417 -6.02397346]
[86.91432953 -20.99737930]
[85.79868317 -35.95583344]
[82.03966522 -44.28095245]
[84.77947235 -51.14500809]
[83.88665009 -66.11841583]
[82.99383545 -81.09181976]
[82.10102081 -96.06522369]
[81.20820618 -111.03863525]
[80.31539154 -126.01203918]
[79.42257690 -140.98544312]
[76.90400696 -144.52250671]
[75.75731659 -148.29737854]
[75.88880157 -151.84956360]
[77.06484222 -154.79635620]
[78.94937134 -156.87161255]
[78.94937134 -171.87161255]
[71.21207428 -185.67178345]
[78.94937134 -198.39904785]
[78.94937134 -213.39904785]
[78.61439514 -228.39530945]
[77.94461060 -243.38035583]
[66.56380463 -254.01589966]
[66.09801483 -269.22241211]
[76.30752563 -280.00671387]
[75.63774109 -294.99176025]
[74.96795654 -309.97680664]
[74.29817200 -324.96185303]
[73.51684570 -339.94146729]
[72.51258850 -354.90783691]
[71.39694214 -369.86627197]
[70.28128815 -384.82473755]
[69.16564178 -399.78317261]
[68.04999542 -414.74163818]
[53.39710236 -418.55889893]
[40.77899170 -426.92919922]
[31.56437302 -438.94458008]
[26.75278473 -453.30172729]
[26.86614990 -468.44326782]
[31.89217186 -482.72674561]
[41.28566360 -494.60281372]
[54.02769089 -502.78323364]
[68.73609924 -506.38067627]
[83.81542206 -505.00488281]
[97.62996674 -498.80514526]
[108.68124390 -488.45391846]
[115.77048492 -475.07403564]
[118.12870789 -460.11682129]
[115.50010681 -445.20477295]
[108.16981506 -431.95541382]
[96.93296814 -421.80593872]
[83.00844574 -415.85726929]
[84.12409973 -400.89883423]
[85.23974609 -385.94036865]
[86.35539246 -370.98193359]
[87.47104645 -356.02346802]
[91.10332489 -349.58697510]
[88.49025726 -340.83428955]
[92.02630615 -334.34445190]
[89.28321075 -325.63162231]
[89.95299530 -310.64657593]
[90.62277985 -295.66156006]
[91.29256439 -280.67651367]
[102.42349243 -270.84603882]
[103.31621552 -255.65863037]
[92.92964935 -244.05014038]
[93.59943390 -229.06509399]
[95.94075775 -226.42871094]
[97.12144470 -222.52729797]
[96.56083679 -217.91871643]
[93.94937134 -213.39904785]
[93.94937134 -198.39904785]
[101.68667603 -185.67178345]
[93.94937134 -171.87161255]
[93.94937134 -156.87161255]
[94.39598083 -141.87826538]
[95.28879547 -126.90485382]
[96.18161011 -111.93144989]
[97.07442474 -96.95804596]
[97.96724701 -81.98463440]
[98.86006165 -67.01123047]
[99.75287628 -52.03782654]
[100.75713348 -37.07147980]
[101.87278748 -22.11302757]
[104.84286499 -18.37301826]
[105.49502563 -12.72751427]
[102.79218292 -6.69375849]
[103.46196747 8.29127979]
[111.75985718 20.66036987]
[104.64648438 34.79226685]
[105.31626892 49.77730560]
[113.61415100 62.14639282]
[106.50077820 76.27828979]
[107.17056274 91.26332855]
[116.53159332 79.54278564]
[130.96295166 75.45185852]
[145.08212280 80.51636505]
[153.62298584 92.84737396]
[153.40000916 107.84571075]
[144.49636841 119.91738129]
[130.23289490 124.55994415]
[115.92951965 120.04183960]
[106.92065430 108.04709625]
[105.80500793 123.00555420]
[104.68935394 137.96400452]
[111.37881470 152.30142212]
[102.71633148 164.41796875]
[101.60068512 179.37643433]
[104.08315277 188.16705322]
[100.35544586 194.54875183]
[99.01721191 209.48893738]
[97.67897797 224.42912292]
[104.15422821 238.86454773]
[95.31230927 250.85078430]
[93.97407532 265.79095459]
[100.44933319 280.22640991]
[91.60741425 292.21261597]
[90.26918030 307.15280151]
[88.93094635 322.09298706]
[87.59271240 337.03317261]
[86.25447845 351.97335815]
[84.91624451 366.91354370]
[83.57801056 381.85372925]
[82.46236420 396.81219482]
[81.56954956 411.78558350]
[80.67672729 426.75900269]
[81.01170349 441.75524902]
[82.57222748 456.67385864]
[84.13275146 471.59246826]
[93.26376343 484.51281738]
[86.89253235 497.97598267]
[88.45305634 512.89459229]
[97.58406830 525.81494141]
[91.21283722 539.27807617]
[92.77335358 554.19665527]
[101.90437317 567.11700439]
[95.53313446 580.58020020]
[97.09365845 595.49877930]
[98.65418243 610.41735840]
[107.78519440 623.33770752]
[101.41396332 636.80090332]
[115.79721832 641.90820312]
[126.53399658 652.75640869]
[131.49250793 667.19165039]
[129.68824768 682.34777832]
[121.47942352 695.21545410]
[108.49592590 703.23992920]
[93.31562805 704.82781982]
[78.95259857 699.66387939]
[68.25862122 688.77343750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[5 199]
[6 198]
[7 197]
[9 195]
[10 194]
[12 192]
[13 191]
[15 189]
[16 188]
[17 187]
[29 186]
[30 185]
[31 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[42 175]
[43 174]
[45 172]
[46 171]
[47 170]
[48 168]
[49 167]
[51 165]
[52 164]
[53 163]
[54 154]
[55 153]
[57 151]
[58 150]
[60 148]
[61 147]
[62 144]
[63 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[76 135]
[77 134]
[79 132]
[80 131]
[81 127]
[82 126]
[85 123]
[86 122]
[87 121]
[88 120]
[89 118]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
