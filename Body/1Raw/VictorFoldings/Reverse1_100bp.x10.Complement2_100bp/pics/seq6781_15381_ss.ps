%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[112.07877350 715.53485107]
[99.37830353 707.53564453]
[87.42334747 698.45996094]
[76.30488586 688.37683105]
[66.10754395 677.36303711]
[56.90893555 665.50238037]
[48.77906418 652.88519287]
[41.77980042 639.60736084]
[35.96441650 625.77008057]
[31.37717438 611.47857666]
[28.05298615 596.84167480]
[26.01714706 581.97076416]
[25.28515625 566.97900391]
[25.86258125 551.98046875]
[27.74502754 537.08929443]
[30.91817093 522.41894531]
[35.35786057 508.08090210]
[41.03030777 494.18441772]
[47.89233780 480.83517456]
[55.89172745 468.13482666]
[64.96759796 456.17999268]
[75.05086517 445.06167603]
[86.06480408 434.86450195]
[97.92557526 425.66604614]
[110.54292297 417.53634644]
[123.82080841 410.53726196]
[137.65818787 404.72207642]
[151.94973755 400.13504028]
[148.62747192 385.50756836]
[145.30522156 370.88012695]
[141.98295593 356.25265503]
[131.91790771 349.54284668]
[129.03036499 337.38366699]
[135.39895630 326.16744995]
[132.29484558 311.49212646]
[129.19073486 296.81683350]
[116.02779388 295.22607422]
[103.97483063 289.64718628]
[94.21068573 280.61029053]
[87.69509888 268.98458862]
[85.07437897 255.89450073]
[86.61734009 242.61120605]
[92.18776703 230.42897034]
[101.25633240 220.53916931]
[112.95087433 213.91369629]
[110.28507233 199.15248108]
[107.61927795 184.39126587]
[104.95348358 169.63005066]
[102.28768921 154.86882019]
[99.62189484 140.10760498]
[96.95610046 125.34638977]
[94.29030609 110.58517456]
[91.40502930 95.86528015]
[88.30091858 81.18997955]
[85.19680786 66.51467896]
[81.76574707 51.91235733]
[78.00944519 37.39029694]
[74.25314331 22.86823845]
[70.49684906 8.34617901]
[66.74054718 -6.17588043]
[62.87623978 -20.66957283]
[58.90414429 -35.13409805]
[54.93204880 -49.59862137]
[50.95995331 -64.06314850]
[46.98785400 -78.52767181]
[32.19169998 -75.98983002]
[17.21804237 -74.91451263]
[2.21108532 -75.31206512]
[-12.68463993 -77.17865753]
[-27.32567596 -80.49631500]
[-41.57101822 -85.23309326]
[-55.28347015 -91.34336090]
[-68.33097076 -98.76828003]
[-80.58786774 -107.43634796]
[-91.93611145 -117.26406860]
[-102.26641846 -128.15679932]
[-111.47928619 -140.00964355]
[-119.48599243 -152.70843506]
[-126.20942688 -166.13088989]
[-131.58483887 -180.14772034]
[-135.56047058 -194.62396240]
[-138.09800720 -209.42016602]
[-139.17303467 -224.39384460]
[-138.77517700 -239.40078735]
[-136.90827942 -254.29647827]
[-133.59033203 -268.93743896]
[-128.85327148 -283.18270874]
[-122.74272919 -296.89501953]
[-115.31754303 -309.94238281]
[-106.64923859 -322.19909668]
[-96.82128906 -333.54714966]
[-85.92834473 -343.87722778]
[-74.07532501 -353.08987427]
[-61.37636566 -361.09631348]
[-47.95378113 -367.81948853]
[-33.93683624 -373.19461060]
[-19.46052933 -377.16995239]
[-4.66427279 -379.70721436]
[10.30942917 -380.78192139]
[25.31637001 -380.38375854]
[40.21202087 -378.51657104]
[54.85292435 -375.19833374]
[69.09807587 -370.46099854]
[82.81028748 -364.35015869]
[95.85749054 -356.92474365]
[108.11403656 -348.25616455]
[119.46189117 -338.42800903]
[129.79176331 -327.53485107]
[139.00415039 -315.68164062]
[147.01034546 -302.98251343]
[153.73324585 -289.55981445]
[159.10810852 -275.54275513]
[163.08314514 -261.06637573]
[165.62010193 -246.27006531]
[166.69451904 -231.29634094]
[166.29606628 -216.28939819]
[164.42858887 -201.39379883]
[161.11004639 -186.75296021]
[156.37242126 -172.50790405]
[150.26132202 -158.79580688]
[142.83561707 -145.74874878]
[134.16682434 -133.49237061]
[124.33841705 -122.14472198]
[113.44506073 -111.81507111]
[101.59166718 -102.60292053]
[88.89239502 -94.59696960]
[75.46953583 -87.87433624]
[61.45237732 -82.49976349]
[65.42447662 -68.03524017]
[69.39656830 -53.57071686]
[73.36866760 -39.10619354]
[77.34076691 -24.64167023]
[82.14328766 -19.02405739]
[81.26260376 -9.93218136]
[85.01890564 4.58987808]
[88.77520752 19.11193657]
[92.53150940 33.63399506]
[96.28781128 48.15605545]
[99.12402344 50.25086212]
[101.08651733 53.82349014]
[101.49174500 58.44832230]
[99.87210846 63.41056824]
[102.97621918 78.08586884]
[106.08032990 92.76117706]
[109.71475220 96.54336548]
[110.97136688 102.09262085]
[109.05152130 107.91938019]
[111.71731567 122.68059540]
[114.38311005 137.44181824]
[117.04890442 152.20303345]
[119.71469879 166.96424866]
[122.38050079 181.72546387]
[125.04629517 196.48667908]
[127.71208954 211.24789429]
[144.25173950 214.57829285]
[158.21308899 223.98539734]
[167.47010803 238.00265503]
[170.62626648 254.46412659]
[167.22515869 270.83920288]
[157.81616211 284.62152100]
[143.86604309 293.71270752]
[146.97015381 308.38803101]
[150.07426453 323.06332397]
[162.69668579 336.47061157]
[156.61041260 352.93038940]
[159.93267822 367.55786133]
[163.25494385 382.18533325]
[166.57719421 396.81277466]
[181.44804382 394.77630615]
[196.43980408 394.04370117]
[211.43835449 394.62048340]
[226.32955933 396.50231934]
[241.00009155 399.67483521]
[255.33828735 404.11392212]
[269.23501587 409.78579712]
[282.58453369 416.64724731]
[295.28524780 424.64611816]
[307.24044800 433.72146606]
[318.35919189 443.80429077]
[328.55685425 454.81777954]
[337.75579834 466.67816162]
[345.88601685 479.29516602]
[352.88565063 492.57275391]
[358.70141602 506.40991211]
[363.28906250 520.70123291]
[366.61367798 535.33807373]
[368.64993286 550.20892334]
[369.38232422 565.20068359]
[368.80532837 580.19927979]
[366.92330933 595.09045410]
[363.75057983 609.76092529]
[359.31127930 624.09906006]
[353.63922119 637.99572754]
[346.77755737 651.34515381]
[338.77853394 664.04571533]
[329.70300293 676.00079346]
[319.62002563 687.11938477]
[308.60638428 697.31689453]
[296.74588013 706.51568604]
[284.12875366 714.64575195]
[270.85107422 721.64520264]
[257.01385498 727.46075439]
[242.72242737 732.04821777]
[228.08557129 735.37261963]
[213.21466064 737.40863037]
[198.22288513 738.14086914]
[183.22434998 737.56365967]
[168.33319092 735.68139648]
[153.66275024 732.50848389]
[139.32467651 728.06896973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 168]
[29 167]
[30 166]
[31 165]
[34 163]
[35 162]
[36 161]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 144]
[54 143]
[55 142]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
