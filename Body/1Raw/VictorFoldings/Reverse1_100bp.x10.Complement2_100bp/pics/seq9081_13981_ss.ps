%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[188.20606995 638.37127686]
[187.48539734 623.37200928]
[188.47923279 608.38836670]
[191.17463684 593.61566162]
[195.53646851 579.24652100]
[201.50784302 565.46826172]
[209.01094055 552.46051025]
[217.94793701 540.39288330]
[228.20230103 529.42266846]
[239.64035034 519.69287109]
[252.11299133 511.33038330]
[245.23358154 498.00097656]
[238.35415649 484.67153931]
[231.47474670 471.34210205]
[224.59533691 458.01269531]
[217.71592712 444.68325806]
[210.83651733 431.35382080]
[207.23956299 445.91616821]
[195.84471130 455.67102051]
[180.90194702 456.98007202]
[167.98454285 449.35507202]
[161.91038513 435.63995361]
[164.94497681 420.95010376]
[175.95649719 410.76449585]
[190.83790588 408.88211060]
[204.03964233 416.00585938]
[198.79292297 401.95339966]
[193.54620361 387.90090942]
[182.67495728 382.59597778]
[178.18881226 370.93154907]
[183.00181580 358.96502686]
[177.96488953 344.83599854]
[166.40310669 335.44589233]
[169.05712891 319.84887695]
[164.02021790 305.71984863]
[158.98329163 291.59082031]
[153.94638062 277.46179199]
[142.38459778 268.07165527]
[145.03860474 252.47463989]
[140.00169373 238.34561157]
[134.96478271 224.21658325]
[129.92785645 210.08755493]
[124.89094543 195.95852661]
[114.09988403 190.49230957]
[109.78791046 178.76240540]
[114.77854156 166.86885071]
[109.95253754 152.66639709]
[105.12654114 138.46394348]
[100.30054474 124.26148224]
[95.47454834 110.05902863]
[86.60388947 122.15496063]
[71.62310028 122.91387177]
[61.57545853 111.77632141]
[63.86771393 96.95250702]
[76.81009674 89.36997986]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[79.59191895 51.05094147]
[75.83561707 36.52888489]
[72.07931519 22.00682449]
[68.10722351 7.54230022]
[63.92020798 -6.86148214]
[59.73319626 -21.26526451]
[55.54618835 -35.66904449]
[41.97703552 -43.31861115]
[37.93599701 -57.98574066]
[45.31230927 -70.87471008]
[41.12530136 -85.27849579]
[36.93828964 -99.68227386]
[32.65117645 -85.30796814]
[22.61601639 -74.15917969]
[8.77044201 -68.38855743]
[-6.21218300 -69.11032104]
[-19.43894958 -76.18511200]
[-28.35597420 -88.24689484]
[-31.24152184 -102.96673584]
[-27.53843689 -117.50244904]
[-17.96172905 -129.04743958]
[-4.36050701 -135.37252808]
[10.63904381 -135.25645447]
[24.14074516 -128.72161865]
[33.53819275 -117.02865601]
[31.97767067 -131.94726562]
[22.84665489 -144.86759949]
[29.21789169 -158.33076477]
[27.65736771 -173.24935913]
[26.09684563 -188.16796875]
[24.53632164 -203.08657837]
[21.86232948 -206.50764465]
[20.54822540 -210.22753906]
[20.52096558 -213.78207397]
[21.56425476 -216.77842712]
[23.35423851 -218.93576050]
[22.68445396 -233.92080688]
[22.01466942 -248.90583801]
[21.34488297 -263.89086914]
[7.15449762 -269.41833496]
[-3.55622911 -280.24423218]
[-8.93159866 -294.49295044]
[-8.04029560 -309.69573975]
[-1.03674436 -323.21868896]
[10.86564827 -332.71884155]
[25.60472107 -336.55026245]
[40.62683868 -334.04910278]
[53.32933044 -325.64871216]
[61.51141357 -312.80450439]
[63.75548935 -297.74182129]
[59.67276382 -283.07037354]
[49.97058487 -271.33209229]
[36.32992172 -264.56066895]
[36.99970627 -249.57562256]
[37.66949081 -234.59059143]
[38.33927917 -219.60554504]
[39.45492554 -204.64709473]
[41.01544952 -189.72848511]
[42.57597351 -174.80989075]
[44.13649368 -159.89128113]
[53.15589142 -148.03802490]
[46.89627457 -133.50778198]
[48.45679855 -118.58917999]
[51.34207153 -103.86928558]
[55.52908325 -89.46550751]
[59.71609116 -75.06172180]
[72.85243988 -68.13554382]
[77.30384827 -53.58770370]
[69.94996643 -39.85605621]
[74.13697815 -25.45227432]
[78.32398987 -11.04849339]
[82.51100159 3.35528898]
[86.19075012 6.39971066]
[87.99707794 11.78805065]
[86.60137939 18.25052261]
[90.35767365 32.77258301]
[94.11397552 47.29464340]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.67700195 105.23303223]
[114.50299835 119.43548584]
[119.32899475 133.63793945]
[124.15499878 147.84039307]
[128.98098755 162.04286194]
[143.10719299 173.85522461]
[139.01997375 190.92160034]
[144.05688477 205.05064392]
[149.09381104 219.17967224]
[154.13072205 233.30870056]
[159.16763306 247.43772888]
[171.08969116 257.83843994]
[168.07540894 272.42486572]
[173.11231995 286.55389404]
[178.14924622 300.68292236]
[183.18615723 314.81195068]
[195.10821533 325.21267700]
[192.09391785 339.79907227]
[197.13084412 353.92810059]
[211.43135071 365.52883911]
[207.59867859 382.65420532]
[212.84538269 396.70666504]
[218.09210205 410.75915527]
[224.16593933 424.47439575]
[231.04534912 437.80383301]
[237.92477417 451.13327026]
[244.80418396 464.46270752]
[251.68359375 477.79211426]
[258.56301880 491.12155151]
[265.44241333 504.45098877]
[279.48434448 499.12911987]
[294.04138184 495.44265747]
[308.92376709 493.43960571]
[323.93750000 493.14611816]
[338.88681030 494.56604004]
[353.57678223 497.68078613]
[367.81597900 502.44982910]
[381.41867065 508.81094360]
[394.20761108 516.68121338]
[406.01599121 525.95806885]
[416.68991089 536.52050781]
[426.09020996 548.23089600]
[434.09429932 560.93646240]
[440.59786987 574.47161865]
[445.51611328 588.65997314]
[448.78494263 603.31646729]
[450.36169434 618.25006104]
[450.22583008 633.26599121]
[448.37915039 648.16857910]
[444.84570312 662.76354980]
[439.67153931 676.86053467]
[432.92413330 690.27587891]
[424.69146729 702.83453369]
[415.08084106 714.37292480]
[404.21755981 724.74053955]
[392.24325562 733.80218506]
[379.31402588 741.43975830]
[365.59844971 747.55377197]
[351.27532959 752.06439209]
[336.53137207 754.91284180]
[321.55883789 756.06201172]
[306.55288696 755.49694824]
[291.70916748 753.22497559]
[277.22119141 749.27575684]
[263.27786255 743.70068359]
[250.06094360 736.57250977]
[237.74273682 727.98419189]
[226.48385620 718.04760742]
[216.43106079 706.89239502]
[207.71542358 694.66394043]
[200.45056152 681.52166748]
[194.73118591 667.63690186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[26 161]
[27 160]
[28 159]
[31 157]
[32 156]
[34 154]
[35 153]
[36 152]
[37 151]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 130]
[63 129]
[64 128]
[65 127]
[68 124]
[69 123]
[70 122]
[83 121]
[84 120]
[86 118]
[87 117]
[88 116]
[89 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
