%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[71.12323761 730.73681641]
[56.28862762 728.42633057]
[41.77020645 724.60278320]
[27.72188759 719.30670166]
[14.29258537 712.59417725]
[1.62466061 704.53643799]
[-10.14760017 695.21881104]
[-20.89940453 684.74011230]
[-30.51677704 673.21142578]
[-38.89776993 660.75500488]
[-45.95353699 647.50280762]
[-51.60928345 633.59539795]
[-55.80505753 619.18017578]
[-58.49637985 604.40991211]
[-59.65472031 589.44116211]
[-59.26780319 574.43267822]
[-57.33972549 559.54357910]
[-53.89093018 544.93157959]
[-48.95797729 530.75164795]
[-42.59315109 517.15411377]
[-34.86392975 504.28311157]
[-25.85224342 492.27505493]
[-15.65362453 481.25723267]
[-4.37618113 471.34646606]
[7.86053848 462.64779663]
[20.92681885 455.25344849]
[34.68414688 449.24182129]
[48.98669434 444.67660522]
[63.68283844 441.60620117]
[78.61679840 440.06317139]
[78.61679840 425.06317139]
[78.61679840 410.06317139]
[78.61679840 395.06317139]
[70.87949371 382.33587646]
[78.61679840 368.53570557]
[78.61679840 353.53570557]
[76.39553070 350.79742432]
[75.39022827 346.84716797]
[76.15605927 342.26821899]
[78.96673584 337.86965942]
[79.63652039 322.88464355]
[80.30630493 307.89959717]
[72.37736511 298.76403809]
[72.81273651 286.27426147]
[81.92410278 277.14486694]
[82.81691742 262.17147827]
[83.70973206 247.19807434]
[76.74369049 234.03282166]
[85.28867340 220.71765137]
[86.18148804 205.74424744]
[87.07431030 190.77084351]
[80.10826874 177.60560608]
[88.65325165 164.29043579]
[89.54606628 149.31703186]
[90.43888092 134.34361267]
[76.44004822 126.75495911]
[67.14162445 113.82846832]
[64.39871979 98.14307404]
[68.75856781 82.82815552]
[79.35134125 70.93916321]
[94.06369781 64.84805298]
[94.73348236 49.86301041]
[95.40326691 34.87797165]
[96.07305145 19.89293480]
[96.74283600 4.90789557]
[89.62946320 -9.22400093]
[97.92734528 -21.59309006]
[90.81397247 -35.72498703]
[99.11186218 -48.09407425]
[99.78164673 -63.07911301]
[100.45143127 -78.06415558]
[93.33805847 -92.19605255]
[101.63594055 -104.56513977]
[102.30573273 -119.55017853]
[102.97551727 -134.53521729]
[103.64530182 -149.52024841]
[89.19760132 -153.80389404]
[76.20288086 -161.41635132]
[65.41431427 -171.91140747]
[57.45600128 -184.67585754]
[52.78685379 -198.96545410]
[51.67416382 -213.94819641]
[54.17827606 -228.75285339]
[60.14934540 -242.51956177]
[69.23630524 -254.44981384]
[80.90748596 -263.85275269]
[94.48173523 -270.18521118]
[109.16817474 -273.08297729]
[109.83795929 -288.06799316]
[107.09486389 -296.78082275]
[110.63091278 -303.27066040]
[111.52372742 -318.24407959]
[109.44332123 -322.05535889]
[108.75332642 -325.93972778]
[109.30599213 -329.45114136]
[110.82386780 -332.23730469]
[112.94165039 -334.07391357]
[114.72412109 -348.96762085]
[116.50658417 -363.86135864]
[102.61592102 -369.79650879]
[90.96094513 -379.40579224]
[82.48645782 -391.91018677]
[77.87945557 -406.29602051]
[77.51341248 -421.39709473]
[81.41799164 -435.98925781]
[89.27666473 -448.88955688]
[100.45237732 -459.05224609]
[114.03915405 -465.65347290]
[128.93557739 -468.15808105]
[143.93406677 -466.36309814]
[157.81875610 -460.41397095]
[169.46408081 -450.79299927]
[177.92599487 -438.28009033]
[182.51853943 -423.88964844]
[182.86943054 -408.78817749]
[178.95018005 -394.19998169]
[171.07855225 -381.30755615]
[159.89263916 -371.15609741]
[146.29924011 -364.56854248]
[131.40029907 -362.07888794]
[129.61782837 -347.18515015]
[127.83536530 -332.29144287]
[126.49713135 -317.35125732]
[125.60431671 -302.37786865]
[124.82299805 -287.39822388]
[124.15321350 -272.41317749]
[138.52255249 -268.21670532]
[151.47772217 -260.69848633]
[162.26347351 -250.29179382]
[170.24983215 -237.59840393]
[174.96888733 -223.35388184]
[176.14221191 -208.38485718]
[173.69726562 -193.56112671]
[167.77188110 -179.74508667]
[158.70651245 -167.74153137]
[147.02464294 -158.25083923]
[133.40258789 -151.82806396]
[118.63034058 -148.85046387]
[117.96055603 -133.86543274]
[117.29077148 -118.88039398]
[116.62098694 -103.89535522]
[123.78226471 -90.83528900]
[115.43647003 -77.39437103]
[114.76668549 -62.40932846]
[114.09690094 -47.42428970]
[121.25817871 -34.36422348]
[112.91238403 -20.92330551]
[120.07366943 -7.86323833]
[111.72787476 5.57768059]
[111.05809021 20.56271935]
[110.38830566 35.54776001]
[109.71852112 50.53279877]
[109.04873657 65.51783752]
[121.48934937 71.55519104]
[130.69670105 81.87233734]
[135.28543091 94.91696167]
[134.56515503 108.72637177]
[128.64421082 121.22281647]
[118.41349030 130.52609253]
[105.41228485 135.23643494]
[104.51947021 150.20983887]
[103.62665558 165.18324280]
[110.52883911 179.41947937]
[102.04771423 191.66366577]
[101.15489960 206.63706970]
[100.26207733 221.61047363]
[107.16426086 235.84671021]
[98.68313599 248.09088135]
[97.79032135 263.06430054]
[96.89750671 278.03768921]
[105.51900482 294.30886841]
[95.29134369 308.56936646]
[94.62155914 323.55441284]
[93.95177460 338.53945923]
[93.61679840 353.53570557]
[93.61679840 368.53570557]
[101.35409546 382.33587646]
[93.61679840 395.06317139]
[93.61679840 410.06317139]
[93.61679840 425.06317139]
[93.61679840 440.06317139]
[108.55075073 441.60620117]
[123.24689484 444.67660522]
[137.54943848 449.24182129]
[151.30677795 455.25344849]
[164.37304688 462.64779663]
[176.60977173 471.34646606]
[187.88722229 481.25723267]
[198.08583069 492.27505493]
[207.09751892 504.28311157]
[214.82673645 517.15411377]
[221.19157410 530.75164795]
[226.12452698 544.93157959]
[229.57331848 559.54357910]
[231.50138855 574.43267822]
[231.88830566 589.44116211]
[230.72996521 604.40991211]
[228.03865051 619.18017578]
[223.84288025 633.59539795]
[218.18713379 647.50280762]
[211.13136292 660.75500488]
[202.75036621 673.21142578]
[193.13299561 684.74011230]
[182.38119507 695.21881104]
[170.60893250 704.53643799]
[157.94100952 712.59417725]
[144.51170349 719.30670166]
[130.46337891 724.60278320]
[115.94496155 728.42633057]
[101.11035156 730.73681641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 181]
[31 180]
[32 179]
[33 178]
[35 176]
[36 175]
[40 174]
[41 173]
[42 172]
[45 170]
[46 169]
[47 168]
[49 166]
[50 165]
[51 164]
[53 162]
[54 161]
[55 160]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[67 147]
[69 145]
[70 144]
[71 143]
[73 141]
[74 140]
[75 139]
[76 138]
[88 126]
[89 125]
[91 124]
[92 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
