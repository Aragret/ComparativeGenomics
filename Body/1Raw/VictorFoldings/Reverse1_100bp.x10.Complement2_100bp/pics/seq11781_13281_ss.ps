%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[236.67494202 537.84729004]
[245.65711975 525.77227783]
[256.82263184 515.68176270]
[269.74234009 507.96377563]
[264.70541382 493.83474731]
[259.66848755 479.70568848]
[254.63157654 465.57666016]
[249.59466553 451.44763184]
[244.55773926 437.31860352]
[230.59617615 426.68652344]
[234.06427002 408.60189819]
[228.81755066 394.54940796]
[210.03121948 392.43356323]
[194.86016846 381.01675415]
[187.56278992 363.39956665]
[190.24014282 344.43707275]
[202.23185730 329.40100098]
[196.15802002 315.68572998]
[190.08418274 301.97048950]
[184.01034546 288.25521851]
[177.93652344 274.53994751]
[171.86268616 260.82467651]
[159.63452148 252.32048035]
[161.12112427 236.56927490]
[155.04730225 222.85400391]
[142.81913757 214.34982300]
[144.30574036 198.59861755]
[138.23190308 184.88334656]
[131.45191956 171.50306702]
[123.98417664 158.49412537]
[117.92791748 154.25814819]
[116.50374603 145.23542786]
[109.23051453 132.11672974]
[101.95729065 118.99803162]
[88.05802155 114.90454102]
[81.03231812 102.23230743]
[84.92401886 88.27519226]
[77.65078735 75.15650177]
[70.37755585 62.03780746]
[63.10432816 48.91911316]
[55.83110046 35.80041885]
[48.55787277 22.68172646]
[41.28464127 9.56303120]
[27.82630157 1.24535966]
[28.42196274 -13.63733006]
[21.14873314 -26.75602341]
[7.69039297 -35.07369614]
[8.28605366 -49.95638657]
[1.01282394 -63.07508087]
[0.61414909 -48.08037949]
[-5.42213011 -34.34854126]
[-16.20056725 -23.91660690]
[-30.12224770 -18.33208847]
[-45.12196732 -18.42341614]
[-58.97461319 -24.17704201]
[-69.62522888 -34.73945236]
[-75.49385071 -48.54377365]
[-75.70990753 -63.54221725]
[-70.24134827 -77.50984955]
[-59.89940262 -88.37466431]
[-46.21823883 -94.52492523]
[-31.22737122 -95.04827881]
[-17.15060806 -89.86708832]
[-6.07729006 -79.75148773]
[-10.47828770 -94.09133148]
[-14.87928581 -108.43118286]
[-20.33640289 -94.45906830]
[-32.41832352 -85.56935120]
[-47.38133621 -84.51658630]
[-60.58898544 -91.62700653]
[-67.94873810 -104.69735718]
[-67.18009186 -119.67765045]
[-58.52122879 -131.92607117]
[-44.65518570 -137.64733887]
[-29.87850571 -135.06863403]
[-18.76977158 -124.98877716]
[-21.21549797 -139.78804016]
[-23.66122627 -154.58731079]
[-26.10695267 -169.38658142]
[-35.99081039 -181.74053955]
[-30.43221283 -195.55903625]
[-34.91896820 -203.51560974]
[-32.80247116 -210.59672546]
[-35.02759171 -225.43077087]
[-37.47331619 -240.23004150]
[-40.13911438 -254.99125671]
[-42.80490875 -269.75247192]
[-57.85079575 -270.69305420]
[-72.23417664 -275.20767212]
[-85.11881256 -283.03390503]
[-95.75560760 -293.71667480]
[-103.52615356 -306.63494873]
[-107.97869110 -321.03768921]
[-108.85433960 -336.08749390]
[-106.10220337 -350.90939331]
[-99.88227844 -364.64169312]
[-90.55619049 -376.48599243]
[-78.66614532 -385.75369263]
[-64.90340424 -391.90597534]
[-50.06812668 -394.58514404]
[-35.02281189 -393.63543701]
[-20.64217377 -389.11209106]
[-7.76228571 -381.27807617]
[2.86803341 -370.58883667]
[10.63075066 -357.66583252]
[15.07455158 -343.26043701]
[15.94107914 -328.21008301]
[13.17995548 -313.38986206]
[6.95170832 -299.66131592]
[-2.38156009 -287.82269287]
[-14.27722645 -278.56219482]
[-28.04369164 -272.41827393]
[-25.37789536 -257.65704346]
[-22.71210098 -242.89582825]
[-19.36904716 -239.48510742]
[-18.13309669 -233.93807983]
[-20.19354630 -227.65588379]
[-17.96842957 -212.82183838]
[-15.63294220 -198.00477600]
[-5.92401934 -186.70936584]
[-11.30768204 -171.83232117]
[-8.86195469 -157.03305054]
[-6.41622734 -142.23377991]
[-3.97049999 -127.43450165]
[-0.53943896 -112.83218384]
[3.86155915 -98.49233246]
[8.26255703 -84.15248871]
[14.13151836 -70.34831238]
[21.40474701 -57.22961426]
[34.34285736 -49.85028076]
[34.26742554 -34.02925491]
[41.54065704 -20.91055870]
[54.47876740 -13.53122425]
[54.40333557 2.28980207]
[61.67656326 15.40849590]
[68.94979095 28.52718925]
[76.22302246 41.64588547]
[83.49625397 54.76457977]
[90.76948547 67.88327026]
[98.04270935 81.00196838]
[111.94197845 85.09545898]
[118.96768188 97.76769257]
[115.07598114 111.72480774]
[122.34921265 124.84349823]
[129.62243652 137.96218872]
[136.99313354 151.02638245]
[144.46087646 164.03532410]
[148.29431152 149.53344727]
[160.47961426 140.78596497]
[175.44583130 141.79212952]
[186.35060120 152.09191895]
[188.20841980 166.97642517]
[180.16992188 179.64064026]
[165.91017151 184.29466248]
[151.94717407 178.80950928]
[158.02101135 192.52478027]
[170.68362427 202.00997925]
[168.76255798 216.78018188]
[174.83639526 230.49543762]
[187.49900818 239.98063660]
[185.57795715 254.75083923]
[191.65177917 268.46609497]
[197.72561646 282.18136597]
[203.79945374 295.89663696]
[209.87329102 309.61190796]
[215.94711304 323.32717896]
[227.19512939 322.78396606]
[238.04895020 325.68377686]
[247.48251343 331.73568726]
[254.60906982 340.35162354]
[258.76464844 350.70343018]
[259.56976318 361.80242920]
[256.96420288 372.59390259]
[251.21095276 382.05728149]
[242.87002563 389.30270386]
[248.11674500 403.35516357]
[259.50567627 409.40948486]
[263.58639526 421.22183228]
[258.68676758 432.28170776]
[263.72369385 446.41073608]
[268.76062012 460.53976440]
[273.79751587 474.66879272]
[278.83444214 488.79782104]
[283.87136841 502.92684937]
[298.75982666 500.73144531]
[313.79049683 501.48309326]
[328.38565063 505.15295410]
[341.98425293 511.59994507]
[354.06365967 520.57629395]
[364.15954590 531.73687744]
[371.88385010 544.65283203]
[376.93966675 558.82763672]
[379.13265991 573.71643066]
[378.37857056 588.74700928]
[374.70635986 603.34155273]
[368.25714111 616.93914795]
[359.27886963 629.01708984]
[348.11663818 639.11114502]
[335.19943237 646.83337402]
[321.02383423 651.88690186]
[306.13464355 654.07745361]
[291.10421753 653.32092285]
[276.51025391 649.64636230]
[262.91372681 643.19494629]
[250.83723450 634.21472168]
[240.74496460 623.05084229]
[233.02484131 610.13244629]
[227.97361755 595.95599365]
[225.78543091 581.06646729]
[226.54438782 566.03613281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[11 176]
[12 175]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[22 161]
[24 159]
[25 158]
[27 156]
[28 155]
[29 147]
[30 146]
[32 145]
[33 144]
[34 143]
[37 140]
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[45 132]
[46 131]
[48 129]
[49 128]
[64 127]
[65 126]
[66 125]
[76 124]
[77 123]
[78 122]
[79 121]
[81 119]
[83 118]
[84 117]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
