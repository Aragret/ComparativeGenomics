%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[27.52338409 764.94708252]
[12.89558506 768.29431152]
[-1.92654049 770.63555908]
[-16.87388420 771.95983887]
[-31.87675095 772.26092529]
[-46.86519623 771.53753662]
[-61.76932907 769.79296875]
[-76.51966095 767.03540039]
[-91.04742432 763.27758789]
[-105.28488159 758.53717041]
[-119.16564178 752.83618164]
[-132.62500000 746.20123291]
[-145.60018921 738.66326904]
[-158.03071594 730.25738525]
[-169.85861206 721.02282715]
[-181.02876282 711.00262451]
[-191.48905945 700.24346924]
[-201.19073486 688.79559326]
[-210.08856201 676.71228027]
[-218.14105225 664.04998779]
[-225.31065369 650.86767578]
[-231.56394958 637.22680664]
[-236.87178040 623.19104004]
[-241.20939636 608.82574463]
[-244.55656433 594.19787598]
[-246.89768982 579.37573242]
[-248.22186279 564.42840576]
[-248.52290344 549.42553711]
[-247.79939270 534.43707275]
[-246.05471802 519.53295898]
[-243.29702759 504.78265381]
[-239.53915405 490.25491333]
[-234.79862976 476.01748657]
[-229.09754944 462.13677979]
[-222.46250916 448.67745972]
[-214.92443848 435.70233154]
[-206.51847839 423.27185059]
[-197.28382874 411.44400024]
[-187.26353455 400.27392578]
[-176.50433350 389.81372070]
[-165.05638123 380.11209106]
[-152.97305298 371.21435547]
[-140.31068420 363.16195679]
[-127.12831879 355.99243164]
[-113.48741913 349.73922729]
[-99.45158386 344.43148804]
[-85.08625031 340.09399414]
[-70.45841217 336.74691772]
[-55.63625336 334.40588379]
[-40.68889236 333.08181763]
[-25.68601990 332.78088379]
[-10.69758511 333.50448608]
[4.20652533 335.24926758]
[18.95682335 338.00704956]
[22.71312332 323.48498535]
[26.46942520 308.96295166]
[30.22572517 294.44088745]
[16.17335701 299.68786621]
[3.23168945 292.10412598]
[0.94083744 277.28009033]
[10.98953247 266.14349365]
[25.97024918 266.90383911]
[34.83945084 278.99896240]
[39.66545105 264.79650879]
[36.43432617 250.25659180]
[48.20021057 239.67951965]
[53.02620697 225.47706604]
[57.85220337 211.27461243]
[56.73555374 208.70338440]
[56.57011795 205.53489685]
[57.58848572 202.12927246]
[59.88870621 198.92404175]
[63.41135025 196.38534546]
[69.07413483 182.49533081]
[74.73692322 168.60530090]
[80.39971161 154.71527100]
[86.06250000 140.82524109]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[87.48445892 55.52393341]
[98.33868408 41.73434448]
[99.67691803 26.79415703]
[101.01515198 11.85397243]
[102.35338593 -3.08621240]
[103.69161987 -18.02639771]
[105.02985382 -32.96658325]
[106.36808777 -47.90676880]
[107.70632172 -62.84695435]
[108.82197571 -77.80540466]
[109.71479034 -92.77880859]
[109.93811798 -107.77714539]
[109.49150848 -122.77050018]
[101.34675598 -136.33418274]
[108.70169067 -149.28617859]
[94.47850037 -154.64988708]
[83.39400482 -165.05192566]
[77.13851166 -178.90606689]
[76.66593170 -194.09965515]
[82.04833984 -208.31578064]
[92.46495056 -219.38658142]
[106.32730865 -225.62384033]
[121.52150726 -226.07643127]
[135.73054504 -220.67532349]
[146.78762817 -210.24415588]
[153.00665283 -196.37361145]
[153.43925476 -181.17883301]
[148.01945496 -166.97691345]
[137.57376099 -155.93356323]
[123.69503784 -149.73278809]
[131.80784607 -137.24153137]
[124.48486328 -123.21710205]
[124.93146515 -108.22375488]
[135.97904968 -118.37021637]
[150.97073364 -117.87082672]
[161.31860352 -107.01164246]
[161.09490967 -92.01331329]
[150.42781067 -81.46755219]
[135.42790222 -81.41545868]
[124.68819427 -91.88599396]
[123.79537964 -76.91259003]
[126.23915863 -72.80930328]
[126.13123322 -67.12728119]
[122.64650726 -61.50871658]
[121.30827332 -46.56853485]
[119.97003937 -31.62834740]
[118.63180542 -16.68816376]
[117.29357147 -1.74797809]
[115.95533752 13.19220734]
[114.61710358 28.13239288]
[113.27886963 43.07257843]
[120.79197693 52.55307007]
[119.79934692 65.01094055]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[112.88627625 115.31334686]
[124.42943573 105.73443604]
[138.26007080 99.92809296]
[153.18168640 98.39661407]
[167.90341187 101.27249146]
[181.15167236 108.30693817]
[191.78038025 118.89139557]
[198.87001038 132.11021423]
[201.80728149 146.81980896]
[200.33804321 161.74768066]
[194.58943176 175.60241699]
[185.05876160 187.18542480]
[172.57051086 195.49467468]
[158.20504761 199.81132507]
[143.20512390 199.76194763]
[128.86839294 195.35081482]
[116.43511963 186.95951843]
[106.98090363 175.31401062]
[101.32363892 161.42173767]
[99.95252228 146.48802185]
[94.28974152 160.37805176]
[88.62695312 174.26808167]
[82.96416473 188.15811157]
[77.30137634 202.04814148]
[72.05465698 216.10060120]
[67.22866058 230.30307007]
[62.40266418 244.50552368]
[65.28860474 260.06127930]
[53.86790466 269.62249756]
[49.04190826 283.82495117]
[44.74778366 298.19717407]
[40.99148560 312.71923828]
[37.23518372 327.24130249]
[33.47888184 341.76336670]
[47.71640015 346.50360107]
[61.59723663 352.20437622]
[75.05667877 358.83917236]
[88.03196716 366.37698364]
[100.46260834 374.78268433]
[112.29064178 384.01708984]
[123.46092224 394.03713989]
[133.92135620 404.79614258]
[143.62319946 416.24389648]
[152.52117920 428.32705688]
[160.57383728 440.98925781]
[167.74362183 454.17147827]
[173.99710083 467.81225586]
[179.30511475 481.84799194]
[183.64292908 496.21322632]
[186.99029541 510.84100342]
[189.33161926 525.66308594]
[190.65599060 540.61047363]
[190.95721436 555.61334229]
[190.23391724 570.60174561]
[188.48944092 585.50592041]
[185.73194885 600.25628662]
[181.97425842 614.78405762]
[177.23393250 629.02154541]
[171.53305054 642.90234375]
[164.89817810 656.36175537]
[157.36029053 669.33697510]
[148.95449829 681.76757812]
[139.72000122 693.59552002]
[129.69985962 704.76574707]
[118.94080353 715.22613525]
[107.49298096 724.92785645]
[95.40976715 733.82574463]
[82.74750519 741.87835693]
[69.56523895 749.04803467]
[55.92441940 755.30145264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 174]
[55 173]
[56 172]
[57 171]
[63 170]
[64 169]
[66 167]
[67 166]
[68 165]
[73 164]
[74 163]
[75 162]
[76 161]
[77 160]
[78 140]
[79 139]
[81 137]
[82 136]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 123]
[93 122]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
