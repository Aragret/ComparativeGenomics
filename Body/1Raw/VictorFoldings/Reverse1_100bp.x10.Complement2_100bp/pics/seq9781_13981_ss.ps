%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[32.66837311 550.43060303]
[27.03003502 564.35314941]
[19.65756226 577.44036865]
[10.67201900 589.47729492]
[0.22095540 600.26635742]
[-11.52401257 609.63037109]
[-24.37002182 617.41546631]
[-38.10612869 623.49395752]
[-52.50677490 627.76593018]
[-67.33548737 630.16125488]
[-82.34876251 630.64062500]
[-97.30007935 629.19610596]
[-111.94391632 625.85150146]
[-126.03980255 620.66168213]
[-139.35627747 613.71185303]
[-151.67468262 605.11621094]
[-162.79270935 595.01580811]
[-172.52781677 583.57659912]
[-180.72013855 570.98638916]
[-187.23515320 557.45184326]
[-191.96586609 543.19531250]
[-194.83460999 528.45086670]
[-195.79425049 513.46063232]
[-194.82907104 498.47073364]
[-191.95487976 483.72735596]
[-187.21890259 469.47259521]
[-180.69888306 455.94049072]
[-172.50190735 443.35327148]
[-162.76257324 431.91763306]
[-151.64080811 421.82138062]
[-139.31922913 413.23025513]
[-126.00019073 406.28536987]
[-111.90238190 401.10076904]
[-97.25730896 397.76156616]
[-82.30546570 396.32260132]
[-67.29236603 396.80749512]
[-52.46453857 399.20831299]
[-38.06547165 403.48559570]
[-31.99163818 389.77032471]
[-25.91780472 376.05508423]
[-19.84397125 362.33981323]
[-13.77013683 348.62454224]
[-7.69630289 334.90927124]
[-19.46627045 324.57513428]
[-27.47662163 311.09295654]
[-30.93290138 295.77630615]
[-29.48505592 280.12191772]
[-23.26285744 265.66329956]
[-12.86436272 253.82054138]
[0.70154935 245.76084900]
[16.11305237 242.28350830]
[31.86416054 243.74064636]
[37.73311996 229.93646240]
[35.59237671 215.19650269]
[48.11235809 205.52383423]
[53.98131943 191.71965027]
[59.85027695 177.91548157]
[65.71923828 164.11129761]
[71.58820343 150.30712891]
[77.45716095 136.50294495]
[83.11994934 122.61292267]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[102.90725708 71.93172455]
[108.36260986 57.95892334]
[93.78630829 61.49888229]
[81.83752441 52.43099976]
[81.32445526 37.43977737]
[92.62532806 27.57618713]
[107.40954590 30.11130333]
[114.77862549 43.17468262]
[121.25812531 29.64633560]
[127.73761749 16.11799049]
[134.21711731 2.58964539]
[140.69660950 -10.93870068]
[126.57833862 -5.87170839]
[112.46306610 -10.94705200]
[104.80410767 -23.84435081]
[107.10303497 -38.66713715]
[118.30880737 -48.63862610]
[133.29829407 -49.19999313]
[145.21852112 -40.09458923]
[148.61947632 -25.48343658]
[156.47123718 -38.26427841]
[164.32298279 -51.04512024]
[164.95408630 -66.85373688]
[178.20878601 -73.64799500]
[186.06054688 -86.42883301]
[193.91230774 -99.20967865]
[201.76405334 -111.99052429]
[189.76541138 -121.01088715]
[178.66418457 -131.11518860]
[168.55792236 -142.21466064]
[159.53544617 -154.21171570]
[151.67605591 -167.00094604]
[145.04881287 -180.46995544]
[139.71197510 -194.50036621]
[135.71241760 -208.96888733]
[133.08531189 -223.74836731]
[131.85374451 -238.70890808]
[132.02851868 -253.71902466]
[133.60810852 -268.64682007]
[136.57864380 -283.36111450]
[140.91400146 -297.73260498]
[146.57609558 -311.63494873]
[153.51515198 -324.94598389]
[161.67021179 -337.54873657]
[170.96958923 -349.33245850]
[181.33155823 -360.19360352]
[192.66505432 -370.03668213]
[204.87048340 -378.77520752]
[217.84057617 -386.33239746]
[231.46134949 -392.64181519]
[245.61311340 -397.64804077]
[260.17147827 -401.30706787]
[275.00851440 -403.58673096]
[289.99383545 -404.46697998]
[304.99572754 -403.94009399]
[319.88235474 -402.01074219]
[334.52291870 -398.69583130]
[348.78872681 -394.02450562]
[362.55441284 -388.03781128]
[375.69900513 -380.78836060]
[388.10696411 -372.33990479]
[399.66928101 -362.76663208]
[410.28433228 -352.15270996]
[419.85882568 -340.59143066]
[428.30859375 -328.18432617]
[435.55941772 -315.04052734]
[441.54757690 -301.27548218]
[446.22039795 -287.01016235]
[449.53686523 -272.36996460]
[451.46780396 -257.48352051]
[451.99627686 -242.48168945]
[451.11761475 -227.49627686]
[448.83950806 -212.65899658]
[445.18203735 -198.10025024]
[440.17733765 -183.94795227]
[433.86935425 -170.32650757]
[426.31353760 -157.35562134]
[417.57629395 -145.14926147]
[407.73440552 -133.81471252]
[396.87435913 -123.45159912]
[385.09164429 -114.15097809]
[372.48974609 -105.99459839]
[359.17944336 -99.05412292]
[345.27767944 -93.39055634]
[330.90667725 -89.05367279]
[316.19268799 -86.08158112]
[301.26504517 -84.50040436]
[286.25494385 -84.32404327]
[271.29428101 -85.55403137]
[256.51452637 -88.17957306]
[242.04559326 -92.17759705]
[228.01460266 -97.51295471]
[214.54490662 -104.13876343]
[206.69314575 -91.35792542]
[198.84138489 -78.57707977]
[190.98963928 -65.79623413]
[190.92015076 -50.90179443]
[177.10383606 -43.19336700]
[169.25207520 -30.41252327]
[161.40032959 -17.63167953]
[154.22496033 -4.45920467]
[147.74545288 9.06914139]
[141.26596069 22.59748650]
[134.78646851 36.12583160]
[128.30697632 49.65417862]
[122.33541107 63.41427994]
[116.88005066 77.38707733]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.09274292 128.06828308]
[97.71061707 134.65081787]
[95.27678680 139.78633118]
[91.26133728 142.37190247]
[85.39237976 156.17608643]
[79.52341461 169.98025513]
[73.65445709 183.78443909]
[67.78549194 197.58862305]
[61.91653442 211.39279175]
[63.63749313 227.12011719]
[51.53730011 235.80543518]
[45.66833878 249.60960388]
[56.70330429 258.85733032]
[64.67556763 270.82708740]
[68.94615936 284.54339600]
[69.17737579 298.89138794]
[65.35943604 312.70748901]
[57.81056213 324.87380981]
[47.15048218 334.40859985]
[34.24955368 340.54544067]
[20.15769768 342.79476929]
[6.01896381 340.98309326]
[-0.05487008 354.69836426]
[-6.12870407 368.41363525]
[-12.20253754 382.12890625]
[-18.27637291 395.84417725]
[-24.35020638 409.55944824]
[-11.50568199 417.34701538]
[0.23750065 426.71325684]
[10.68650723 437.50427246]
[19.66975594 449.54296875]
[27.03973198 462.63156128]
[32.67541885 476.55520630]
[36.48426437 491.08520508]
[38.40373230 505.98297119]
[38.40230179 521.00390625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 201]
[39 200]
[40 199]
[41 198]
[42 197]
[43 196]
[52 186]
[53 185]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 175]
[62 174]
[64 172]
[65 171]
[66 170]
[72 169]
[73 168]
[74 167]
[75 166]
[76 165]
[84 164]
[85 163]
[86 162]
[88 160]
[89 159]
[90 158]
[91 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
