%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[161.80480957 674.03540039]
[146.87570190 672.15966797]
[132.57144165 667.49224854]
[119.40914154 660.20184326]
[107.86458588 650.55200195]
[98.35511017 638.89147949]
[91.22447968 625.64196777]
[86.73046112 611.28228760]
[85.03550720 596.33160400]
[86.20088959 581.33032227]
[90.18448639 566.82073975]
[96.84228516 553.32739258]
[105.93361664 541.33807373]
[117.12983704 531.28613281]
[130.02619934 523.53497314]
[144.15650940 518.36480713]
[159.00997925 515.96252441]
[159.45658875 500.96917725]
[159.90319824 485.97583008]
[160.34980774 470.98248291]
[147.60644531 463.27062988]
[140.38613892 450.12820435]
[140.71578979 435.03656006]
[148.60696411 422.05096436]
[162.02595520 414.71081543]
[162.47256470 399.71746826]
[162.91917419 384.72412109]
[153.78048706 369.74243164]
[163.58830261 354.15753174]
[163.81163025 339.15921021]
[164.03495789 324.16085815]
[164.25828552 309.16253662]
[161.70245361 294.38186646]
[156.45573425 280.32940674]
[151.20901489 266.27691650]
[145.96229553 252.22445679]
[140.71557617 238.17198181]
[135.46885681 224.11952209]
[130.22213745 210.06704712]
[126.32614899 207.30474854]
[124.12406158 202.06567383]
[125.03524017 195.51730347]
[120.20924377 181.31483459]
[115.38324738 167.11238098]
[110.55724335 152.90992737]
[105.73124695 138.70747375]
[100.90525055 124.50502014]
[95.86833191 110.37599182]
[90.51715088 96.36296844]
[85.06179047 82.39016724]
[79.60643768 68.41737366]
[74.15107727 54.44457245]
[61.92463684 44.40341949]
[64.50329590 29.73373222]
[52.27685928 19.69257927]
[54.85551834 5.02289009]
[53.56400299 19.96718597]
[48.90608215 34.22565079]
[41.12610245 47.05030823]
[30.63218498 57.76840973]
[17.97481918 65.81770325]
[3.81798482 70.77593231]
[-11.09567738 72.38300323]
[-25.98382759 70.55461884]
[-40.06546021 65.38668060]
[-52.60188675 57.15029526]
[-62.93546677 46.27752686]
[-70.52412415 33.33873367]
[-74.96976471 19.01266670]
[-76.03919220 4.05083704]
[-73.67630005 -10.76188469]
[-68.00504303 -24.64845467]
[-59.32291412 -36.88040924]
[-48.08537674 -46.81608582]
[-34.88191605 -53.93427658]
[-20.40516472 -57.86157990]
[-5.41454554 -58.39197540]
[9.30356598 -55.49763489]
[22.97708702 -49.33039856]
[34.88872910 -40.21377945]
[44.41363525 -28.62602043]
[51.05270767 -15.17342949]
[51.05270767 -30.17342949]
[51.05270767 -45.17343140]
[51.05270767 -60.17343140]
[50.94104004 -75.17301178]
[50.71771240 -90.17134857]
[42.77580643 -103.85479736]
[50.32275772 -116.69585419]
[50.09943008 -131.69419861]
[49.87610245 -146.69253540]
[49.65277481 -161.69087219]
[34.93750763 -164.94010925]
[21.36848068 -171.49589539]
[9.67745686 -181.00466919]
[0.49491885 -192.95362854]
[-5.68393183 -206.69839478]
[-8.52587700 -221.49771118]
[-7.87765503 -236.55349731]
[-3.77422261 -251.05378723]
[3.56312680 -264.21661377]
[13.73869896 -275.33212280]
[26.20373917 -283.80087280]
[40.28602219 -289.16610718]
[55.22610855 -291.13854980]
[70.21829987 -289.61181641]
[84.45408630 -284.66821289]
[97.16574097 -276.57437134]
[107.66775513 -265.76675415]
[115.39375305 -252.82821655]
[119.92709351 -238.45652771]
[121.02330017 -223.42672729]
[118.62324524 -208.54934692]
[112.85636902 -194.62670898]
[104.03366089 -182.40963745]
[92.63093567 -172.55700684]
[79.26311493 -165.60012817]
[64.65111542 -161.91419983]
[64.87444305 -146.91586304]
[65.09777069 -131.91752625]
[65.32109833 -116.91918182]
[73.24702454 -104.30851746]
[65.71604919 -90.39467621]
[65.93937683 -75.39633942]
[69.18211365 -68.75507355]
[66.05270386 -60.17343140]
[66.05270386 -45.17343140]
[66.05270386 -30.17342949]
[66.05270386 -15.17342949]
[68.82831573 -0.43246678]
[80.66455078 8.60925770]
[78.47609711 24.27837372]
[90.31233215 33.32009888]
[88.12387848 48.98921585]
[93.57923126 62.96201324]
[99.03459167 76.93481445]
[104.48994446 90.90760803]
[110.12203979 96.67407227]
[109.92080688 105.12927246]
[114.76895905 109.62448120]
[116.37767792 115.07508850]
[115.10770416 119.67902374]
[119.93370056 133.88146973]
[124.75970459 148.08393860]
[129.58569336 162.28639221]
[134.41169739 176.48884583]
[139.23770142 190.69129944]
[144.27461243 204.82032776]
[149.52133179 218.87280273]
[154.76805115 232.92527771]
[160.01477051 246.97773743]
[165.26148987 261.03021240]
[170.50820923 275.08267212]
[175.75491333 289.13516235]
[177.26878357 274.21173096]
[182.13848877 260.02420044]
[190.10853577 247.31680298]
[200.76087952 236.75613403]
[213.53668213 228.89617920]
[227.76576233 224.14927673]
[242.70170593 222.76441956]
[257.56097412 224.81427002]
[271.56411743 230.19128418]
[283.97650146 238.61340332]
[294.14706421 249.63882446]
[301.54223633 262.68917847]
[305.77410889 277.07983398]
[306.62066650 292.05593872]
[304.03747559 306.83181763]
[298.16009521 320.63241577]
[289.29681396 332.73376465]
[277.91259766 342.50103760]
[264.60461426 349.42184448]
[250.07101440 353.13317871]
[235.07415771 353.44033813]
[220.40075684 350.32717896]
[206.82058716 343.95703125]
[195.04598999 334.66409302]
[185.69465637 322.93579102]
[179.25662231 309.38586426]
[179.03329468 324.38418579]
[178.80996704 339.38253784]
[178.58663940 354.38085938]
[186.99375916 364.16265869]
[186.49897766 376.65020752]
[177.91252136 385.17071533]
[177.46591187 400.16406250]
[177.01931763 415.15740967]
[189.97763062 423.28326416]
[197.08189392 436.71554565]
[196.51268005 451.80004883]
[188.52293396 464.48941040]
[175.34315491 471.42907715]
[174.89654541 486.42242432]
[174.44993591 501.41577148]
[174.00332642 516.40911865]
[188.68748474 519.69122314]
[202.48501587 525.69329834]
[214.89715576 534.19830322]
[225.47521973 544.89880371]
[233.83680725 557.40802002]
[239.67967224 571.27374268]
[242.79257202 585.99468994]
[243.06300354 601.03875732]
[240.48117065 615.86206055]
[235.14041138 629.92877197]
[227.23379517 642.73040771]
[217.04714966 653.80419922]
[204.94868469 662.74981689]
[191.37577820 669.24383545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 196]
[18 195]
[19 194]
[20 193]
[25 188]
[26 187]
[27 186]
[29 183]
[30 182]
[31 181]
[32 180]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 139]
[49 137]
[50 136]
[51 135]
[52 134]
[54 132]
[56 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 124]
[87 123]
[89 121]
[90 120]
[91 119]
[92 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
