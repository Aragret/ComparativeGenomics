%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[44.32510376 645.22393799]
[33.29520035 655.42791748]
[20.92533302 663.95831299]
[7.46733665 670.64135742]
[-6.80479956 675.34100342]
[-21.60051346 677.96166992]
[-36.61858368 678.44982910]
[-51.55326080 676.79571533]
[-66.10049438 673.03289795]
[-79.96411896 667.23803711]
[-92.86189270 659.52905273]
[-104.53123474 650.06292725]
[-114.73456573 639.03240967]
[-123.26416779 626.66198730]
[-129.94638062 613.20361328]
[-134.64517212 598.93115234]
[-137.26486206 584.13531494]
[-137.75215149 569.11718750]
[-136.09707642 554.18261719]
[-132.33337402 539.63562012]
[-126.53763580 525.77233887]
[-118.82786560 512.87506104]
[-109.36103821 501.20629883]
[-98.32986450 491.00366211]
[-85.95894623 482.47482300]
[-72.50012207 475.79342651]
[-58.22740173 471.09552002]
[-43.43136597 468.47674561]
[-28.41323471 467.99038696]
[-13.47876263 469.64639282]
[-9.72246170 455.12432861]
[-5.96616125 440.60226440]
[-2.20986056 426.08020020]
[-3.81873631 421.58349609]
[-2.61987495 416.02832031]
[1.88051283 411.18496704]
[6.06752396 396.78118896]
[10.25453568 382.37741089]
[5.15875340 365.58456421]
[18.55682564 352.95233154]
[22.52892113 338.48779297]
[26.50101662 324.02328491]
[30.47311401 309.55874634]
[34.44520950 295.09423828]
[38.41730499 280.62969971]
[30.84991264 267.85198975]
[34.67213058 253.12632751]
[48.12588882 245.27557373]
[52.09798431 230.81105042]
[55.96228790 216.31736755]
[59.71858978 201.79530334]
[58.41379166 199.31425476]
[58.01315689 196.16685486]
[58.77540207 192.69491577]
[60.83086014 189.32746887]
[64.15493011 186.53381348]
[68.76893616 172.26107788]
[73.38294220 157.98834229]
[77.99695587 143.71560669]
[82.61096191 129.44288635]
[79.16371918 114.95268250]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[100.38722992 75.54917145]
[105.21322632 61.34671402]
[104.30204773 54.79833603]
[106.50414276 49.55926895]
[110.40013123 46.79696655]
[115.64685059 32.74449539]
[120.89356995 18.69202232]
[126.14028168 4.63955116]
[123.71878052 -10.99524593]
[135.41908264 -20.21219254]
[140.66580200 -34.26466370]
[145.91252136 -48.31713486]
[151.15924072 -62.36960602]
[155.77325439 -76.64234161]
[159.74534607 -91.10686493]
[163.71743774 -105.57138824]
[167.68954468 -120.03591156]
[160.13203430 -133.65655518]
[164.36634827 -148.26904297]
[177.39811707 -155.39004517]
[181.37022400 -169.85456848]
[185.34231567 -184.31909180]
[189.31440735 -198.78361511]
[193.07070923 -213.30567932]
[196.61038208 -227.88204956]
[200.15005493 -242.45841980]
[191.86494446 -253.07781982]
[191.21815491 -266.33648682]
[198.22203064 -277.38308716]
[210.13034058 -282.30468750]
[213.88664246 -296.82672119]
[215.66909790 -311.72045898]
[215.44577026 -326.71878052]
[215.22244263 -341.71713257]
[214.99911499 -356.71545410]
[201.31369019 -363.56875610]
[192.39015198 -376.00375366]
[190.27905273 -391.16296387]
[195.46553040 -405.56292725]
[206.75775146 -415.89465332]
[221.56085205 -419.78393555]
[236.47319031 -416.33709717]
[248.06802368 -406.34619141]
[253.68093872 -392.10702515]
[252.02212524 -376.89166260]
[243.47276306 -364.19650269]
[229.99745178 -356.93878174]
[230.22077942 -341.94046021]
[230.44410706 -326.94210815]
[230.66743469 -311.94378662]
[237.47380066 -325.31066895]
[248.03306580 -335.96438599]
[261.33880615 -342.88949585]
[276.12280273 -345.42596436]
[290.97592163 -343.33200073]
[304.48248291 -336.80718994]
[315.35510254 -326.47348022]
[322.55749512 -313.31576538]
[325.40316772 -298.58816528]
[323.62084961 -283.69439697]
[317.38049316 -270.05410767]
[307.27682495 -258.96734619]
[294.27291870 -251.49085999]
[279.60818481 -248.33724976]
[264.68035889 -249.80708313]
[250.91230774 -255.76028442]
[239.61628723 -265.62942505]
[231.86897278 -278.47384644]
[228.40869141 -293.07043457]
[224.65238953 -278.54837036]
[233.79887390 -264.43524170]
[229.82994080 -247.74504089]
[214.72642517 -238.91874695]
[211.18675232 -224.34237671]
[207.64707947 -209.76600647]
[209.32273865 -205.29373169]
[208.20671082 -199.72132874]
[203.77893066 -194.81152344]
[199.80683899 -180.34700012]
[195.83474731 -165.88247681]
[191.86264038 -151.41793823]
[199.43003845 -138.64022827]
[195.60781860 -123.91455841]
[182.15406799 -116.06381226]
[178.18196106 -101.59928894]
[174.20986938 -87.13476562]
[170.23777771 -72.67024231]
[183.77612305 -79.12879944]
[197.96150208 -74.25282288]
[204.66787720 -60.83549881]
[200.05352783 -46.56287384]
[186.76176453 -39.61096191]
[172.40670776 -43.96212769]
[165.21171570 -57.12288666]
[159.96499634 -43.07041550]
[154.71827698 -29.01794434]
[149.47155762 -14.96547413]
[152.26834106 -0.33580324]
[140.19274902 9.88626957]
[134.94604492 23.93873978]
[129.69932556 37.99121094]
[124.45259857 52.04368210]
[119.41568756 66.17271423]
[114.58969116 80.37516785]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[108.16077423 124.32669067]
[96.88369751 134.05688477]
[92.26969147 148.32962036]
[87.65567780 162.60235596]
[83.04167175 176.87509155]
[78.42765808 191.14782715]
[74.24064636 205.55160522]
[70.48435211 220.07366943]
[71.36502838 229.16554260]
[66.56250763 234.78315735]
[62.59041214 249.24768066]
[70.14792633 262.86831665]
[65.91359711 277.48080444]
[52.88182831 284.60180664]
[48.90973282 299.06634521]
[44.93763733 313.53085327]
[40.96554184 327.99539185]
[36.99344635 342.45989990]
[33.02134705 356.92443848]
[38.71104050 368.49984741]
[35.10489273 380.46560669]
[24.65831757 386.56442261]
[20.47130585 400.96820068]
[16.28429413 415.37197876]
[12.31219864 429.83651733]
[8.55589771 444.35858154]
[4.79959726 458.88064575]
[1.04329658 473.40267944]
[14.90764046 479.19586182]
[27.80636978 486.90322876]
[39.47688293 496.36788940]
[49.68157959 507.39715576]
[58.21271133 519.76647949]
[64.89659119 533.22406006]
[69.59714508 547.49591064]
[72.21867371 562.29150391]
[72.70780945 577.30950928]
[71.05459595 592.24432373]
[67.29267883 606.79174805]
[61.49866104 620.65576172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 198]
[31 197]
[32 196]
[33 195]
[36 194]
[37 193]
[38 192]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[48 181]
[49 180]
[50 178]
[51 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[62 170]
[64 169]
[65 168]
[66 167]
[69 166]
[70 165]
[71 164]
[72 163]
[74 161]
[75 160]
[76 159]
[77 158]
[78 151]
[79 150]
[80 149]
[81 148]
[84 145]
[85 144]
[86 143]
[87 142]
[88 139]
[89 138]
[90 137]
[94 134]
[95 133]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
