%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[12.32230091 470.76583862]
[7.94606161 485.12393188]
[2.30037856 499.03192139]
[-4.56929159 512.37786865]
[-12.60763836 525.05426025]
[-21.74993896 536.95910645]
[-31.92258453 547.99645996]
[-43.04366684 558.07751465]
[-55.02365112 567.12109375]
[-67.76606750 575.05438232]
[-81.16833496 581.81347656]
[-95.12252808 587.34399414]
[-109.51630402 591.60137939]
[-124.23377228 594.55139160]
[-139.15641785 596.17022705]
[-154.16410828 596.44488525]
[-169.13600159 595.37316895]
[-183.95155334 592.96368408]
[-198.49147034 589.23577881]
[-212.63868713 584.21954346]
[-226.27929688 577.95538330]
[-239.30346680 570.49365234]
[-251.60633850 561.89447021]
[-263.08883667 552.22711182]
[-273.65853882 541.56933594]
[-283.23031616 530.00701904]
[-291.72711182 517.63323975]
[-299.08050537 504.54760742]
[-305.23132324 490.85549927]
[-310.12997437 476.66714478]
[-313.73709106 462.09680176]
[-316.02359009 447.26174927]
[-316.97106934 432.28149414]
[-316.57189941 417.27658081]
[-314.82931519 402.36788940]
[-311.75729370 387.67541504]
[-307.38061523 373.31744385]
[-301.73449707 359.40960693]
[-294.86444092 346.06390381]
[-286.82568359 333.38772583]
[-277.68304443 321.48321533]
[-267.51004028 310.44613647]
[-256.38867188 300.36541748]
[-244.40840149 291.32220459]
[-231.66574097 283.38931274]
[-218.26327515 276.63061523]
[-204.30889893 271.10052490]
[-189.91499329 266.84356689]
[-175.19744873 263.89401245]
[-160.27474976 262.27563477]
[-145.26704407 262.00143433]
[-130.29518127 263.07360840]
[-115.47970581 265.48358154]
[-100.93990326 269.21188354]
[-86.79283905 274.22854614]
[-73.15242767 280.49316406]
[-60.12848282 287.95529175]
[-47.82587814 296.55480957]
[-38.16506958 285.08013916]
[-28.50425911 273.60543823]
[-18.84344864 262.13073730]
[-9.18263817 250.65602112]
[0.47817212 239.18132019]
[10.13898277 227.70661926]
[8.61347294 212.93473816]
[18.24744797 201.16014099]
[33.75189590 199.66020203]
[43.41270828 188.18550110]
[51.82732391 175.76802063]
[58.90443039 162.54248047]
[65.98153687 149.31695557]
[72.95999146 136.03910828]
[79.83940125 122.70968628]
[86.71881104 109.38025665]
[83.85260773 98.09193420]
[89.27091217 87.78256226]
[100.19384766 83.74141693]
[107.27095032 70.51589203]
[114.34805298 57.29036331]
[121.42516327 44.06483459]
[128.50227356 30.83930779]
[135.57937622 17.61378098]
[142.65647888 4.38825274]
[147.90319824 -9.66421795]
[151.22544861 -24.29167938]
[154.54771423 -38.91913986]
[148.69458008 -56.37830353]
[161.11053467 -68.78036499]
[164.21464539 -83.45566559]
[166.99024963 -98.19663239]
[169.43597412 -112.99590302]
[164.05232239 -127.87295532]
[173.76124573 -139.16836548]
[176.20697021 -153.96763611]
[178.65269470 -168.76690674]
[181.09841919 -183.56617737]
[167.04338074 -188.95512390]
[154.36102295 -197.06330872]
[143.57067871 -207.55870056]
[135.11421204 -220.01153564]
[129.33790588 -233.91186523]
[126.47828674 -248.69047546]
[126.65247345 -263.74221802]
[129.85331726 -278.45068359]
[135.94975281 -292.21362305]
[144.69213867 -304.46740723]
[155.72247314 -314.71029663]
[168.58906555 -322.52282715]
[182.76504517 -327.58508301]
[197.66992188 -329.68975830]
[212.69334412 -328.75067139]
[227.22009277 -324.80630493]
[240.65533447 -318.01812744]
[252.44889832 -308.66415405]
[262.11782837 -297.12741089]
[269.26620483 -283.88031006]
[273.60131836 -269.46533203]
[274.94561768 -254.47273254]
[273.24404907 -239.51647949]
[268.56634521 -225.20899963]
[261.10400391 -212.13619995]
[251.16262817 -200.83337402]
[239.14929199 -191.76338196]
[225.55595398 -185.29762268]
[210.93923950 -181.70088196]
[195.89768982 -181.12043762]
[193.45196533 -166.32116699]
[191.00624084 -151.52189636]
[188.56051636 -136.72262573]
[194.11911011 -122.90412140]
[184.23524475 -110.55017853]
[181.78952026 -95.75090790]
[183.53459167 -92.68707275]
[183.88235474 -88.62577820]
[182.38018799 -84.23296356]
[178.88993835 -80.35155487]
[175.78582764 -65.67625427]
[182.11912537 -55.37014771]
[179.65315247 -43.11850357]
[169.17517090 -35.59687805]
[165.85292053 -20.96941948]
[162.53065491 -6.34195900]
[172.29908752 -17.72518349]
[185.07418823 -25.58626938]
[199.63833618 -29.17594910]
[214.60334778 -28.15207481]
[228.54286194 -22.61223793]
[240.12826538 -13.08446026]
[248.25529480 -0.47686759]
[252.14933777 14.00886345]
[251.43923950 28.99204636]
[246.19268799 43.04457855]
[236.90974426 54.82706451]
[224.47520447 63.21646881]
[210.07423401 67.41316986]
[195.07946777 67.01716614]
[180.92008972 62.06619644]
[168.94569397 53.03216171]
[160.29759216 40.77612686]
[155.80007935 26.46625710]
[155.88200378 11.46535873]
[148.80490112 24.69088554]
[141.72779846 37.91641235]
[134.65069580 51.14194107]
[127.57358551 64.36746979]
[120.49647522 77.59299469]
[113.41937256 90.81852722]
[114.39295197 107.56452179]
[100.04824066 116.25966644]
[93.16883087 129.58909607]
[86.28942108 142.91851807]
[85.13452148 151.97964478]
[79.20706177 156.39405823]
[72.12995911 169.61959839]
[65.05285645 182.84512329]
[77.86693573 175.04772949]
[92.67755127 172.67170715]
[107.28765106 176.06951904]
[119.52989960 184.73712158]
[127.58823395 197.38873291]
[130.26725769 212.14755249]
[127.16953278 226.82420349]
[118.75460815 239.24148560]
[106.27078247 247.55738831]
[91.56995392 250.53826904]
[76.83290863 247.74195862]
[64.24579620 239.58323669]
[55.67583466 227.27244568]
[52.39433289 212.63578796]
[54.88740540 197.84631348]
[45.22659683 209.32101440]
[46.39037704 224.85432434]
[36.42948151 236.35366821]
[21.61368179 237.36743164]
[11.95287228 248.84213257]
[2.29206181 260.31683350]
[-7.36874866 271.79153442]
[-17.02955818 283.26623535]
[-26.69036865 294.74093628]
[-36.35118103 306.21563721]
[-25.78116035 316.87307739]
[-16.20902634 328.43508911]
[-7.71185207 340.80862427]
[-0.35805017 353.89404297]
[5.79316902 367.58596802]
[10.69227791 381.77416992]
[14.29983139 396.34439087]
[16.58678436 411.17935181]
[17.53471947 426.15960693]
[17.13600922 441.16452026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 200]
[59 199]
[60 198]
[61 197]
[62 196]
[63 195]
[64 194]
[67 191]
[68 190]
[69 175]
[70 174]
[71 173]
[72 171]
[73 170]
[74 169]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[83 161]
[84 142]
[85 141]
[86 140]
[88 137]
[89 136]
[90 132]
[91 131]
[93 129]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
