%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[18.91951561 372.85043335]
[25.02574921 386.58956909]
[28.78716660 401.14642334]
[30.10115242 416.12384033]
[28.93186378 431.11325073]
[25.31119728 445.70574951]
[19.33792686 459.50320435]
[11.17500973 472.12924194]
[1.04513526 483.23937988]
[-10.77534676 492.53057861]
[-23.96396446 499.74929810]
[-38.16092300 504.69866943]
[-52.97891617 507.24365234]
[-68.01370239 507.31478882]
[-82.85511780 504.91018677]
[-97.09828186 500.09539795]
[-110.35462952 493.00180054]
[-122.26251984 483.82290649]
[-132.49708557 472.80911255]
[-140.77914429 460.26092529]
[-146.88272095 446.52059937]
[-150.64134216 431.96304321]
[-151.95243835 416.98535156]
[-150.78025818 401.99618530]
[-147.15678406 387.40438843]
[-141.18086243 373.60806274]
[-133.01550293 360.98361206]
[-122.88349152 349.87542725]
[-111.06121826 340.58651733]
[-97.87120819 333.37030029]
[-83.67330170 328.42367554]
[-68.85481262 325.88156128]
[-53.82001495 325.81329346]
[-38.97906113 328.22079468]
[-24.73682594 333.03829956]
[-17.65971947 319.81277466]
[-10.58261395 306.58724976]
[-3.50550866 293.36172485]
[3.57159662 280.13619995]
[10.64870167 266.91067505]
[17.72580719 253.68515015]
[24.80291367 240.45960999]
[30.97868156 226.78994751]
[36.22539902 212.73747253]
[41.47211838 198.68499756]
[46.71883774 184.63253784]
[51.96555328 170.58006287]
[39.94054794 179.54663086]
[25.23270416 182.49269104]
[10.68187618 178.84942627]
[-0.90240037 169.32028198]
[-7.28338194 155.74519348]
[-7.22900105 140.74530029]
[-0.74975777 127.21682739]
[10.90330696 117.77192688]
[25.48016930 114.23426056]
[40.16626740 117.28689575]
[52.12594223 126.34041595]
[59.04996872 139.64672852]
[59.60119247 154.63783264]
[67.26179504 141.74151611]
[74.82617188 128.78851318]
[82.29391479 115.77955627]
[89.76165009 102.77060699]
[96.74010468 89.49275970]
[103.21960449 75.96441650]
[109.69909668 62.43606949]
[116.17859650 48.90772247]
[122.65808868 35.37937927]
[129.03669739 21.80317116]
[135.31405640 8.17985439]
[121.62021637 14.30184174]
[106.91987610 11.31853390]
[96.69590759 0.34263086]
[94.76159668 -14.53212738]
[101.83838654 -27.75782394]
[115.28681183 -34.40159988]
[130.09094238 -31.98549080]
[140.72921753 -21.41064835]
[143.23362732 -6.62006807]
[151.08538818 -19.40091133]
[158.93714905 -32.18175507]
[166.78889465 -44.96259689]
[174.64065552 -57.74343872]
[175.20246887 -64.33099365]
[178.51023865 -68.95221710]
[182.92126465 -70.78301239]
[191.15008545 -83.32441711]
[199.37889099 -95.86581421]
[207.60769653 -108.40721893]
[215.83650208 -120.94861603]
[223.87767029 -133.61114502]
[231.72943115 -146.39198303]
[239.58119202 -159.17282104]
[227.66432190 -168.30476379]
[216.74957275 -178.61361694]
[206.95266724 -189.99011230]
[198.37745667 -202.31365967]
[191.11482239 -215.45359802]
[185.24176025 -229.27066040]
[180.82054138 -243.61837769]
[177.89802551 -258.34463501]
[176.50518799 -273.29336548]
[176.65679932 -288.30606079]
[178.35124207 -303.22360229]
[181.57057190 -317.88781738]
[186.28065491 -332.14334106]
[192.43154907 -345.83895874]
[199.95806885 -358.82955933]
[208.78041077 -370.97741699]
[218.80506897 -382.15374756]
[229.92578125 -392.24005127]
[242.02464294 -401.12945557]
[254.97340393 -408.72772217]
[268.63479614 -414.95428467]
[282.86404419 -419.74313354]
[297.51025391 -423.04351807]
[312.41818237 -424.82046509]
[327.42980957 -425.05511475]
[342.38598633 -423.74496460]
[357.12820435 -420.90396118]
[371.50015259 -416.56216431]
[385.34948730 -410.76562500]
[398.52941895 -403.57577515]
[410.90020752 -395.06884766]
[422.33071899 -385.33502197]
[432.69976807 -374.47747803]
[441.89749146 -362.61129761]
[449.82632446 -349.86227417]
[456.40228271 -336.36557007]
[461.55560303 -322.26425171]
[465.23165894 -307.70779419]
[467.39151001 -292.85049438]
[468.01226807 -277.84988403]
[467.08731079 -262.86492920]
[464.62649536 -248.05451965]
[460.65585327 -233.57563782]
[455.21749878 -219.58177185]
[448.36911011 -206.22125244]
[440.18322754 -193.63572693]
[430.74667358 -181.95858765]
[420.15945435 -171.31364441]
[408.53384399 -161.81370544]
[395.99301147 -153.55950928]
[382.66992188 -146.63854980]
[368.70584106 -141.12417603]
[354.24877930 -137.07484436]
[339.45196533 -134.53350830]
[324.47225952 -133.52706909]
[309.46850586 -134.06622314]
[294.59967041 -136.14523315]
[280.02343750 -139.74208069]
[265.89428711 -144.81863403]
[252.36203003 -151.32107544]
[244.51026917 -138.54022217]
[236.65852356 -125.75938416]
[236.87724304 -120.98851776]
[234.10127258 -116.02958679]
[228.37789917 -112.71981049]
[220.14909363 -100.17840576]
[211.92028809 -87.63700867]
[203.69148254 -75.09561157]
[195.46267700 -62.55420685]
[187.42149353 -49.89168167]
[179.56974792 -37.11083984]
[171.71798706 -24.32999802]
[163.86622620 -11.54915524]
[156.01448059 1.23168731]
[148.93737793 14.45721531]
[142.66000366 28.08053017]
[142.71580505 35.47097778]
[136.18643188 41.85887146]
[129.70693970 55.38721848]
[123.22743988 68.91556549]
[116.74794769 82.44390869]
[110.26844788 95.97225189]
[125.06767273 93.52623749]
[136.30892944 103.45771790]
[135.70556641 118.44557953]
[123.70238495 127.44132233]
[109.14766693 123.81362915]
[102.77060699 110.23834991]
[95.30286407 123.24729919]
[87.83512115 136.25625610]
[86.27677917 145.25677490]
[80.15811920 149.40209961]
[72.49752045 162.29843140]
[66.01802826 175.82678223]
[60.77130890 189.87925720]
[55.52458954 203.93171692]
[50.27787018 217.98419189]
[45.03115082 232.03666687]
[57.87107086 224.28189087]
[72.86783600 224.59350586]
[85.37453461 232.87496948]
[91.51583099 246.56015015]
[89.38877869 261.40856934]
[79.65246582 272.81927490]
[65.32379913 277.25656128]
[50.84266663 273.34542847]
[40.69620895 262.29782104]
[38.02844238 247.53672791]
[30.95133591 260.76223755]
[23.87422943 273.98776245]
[16.79712486 287.21331787]
[9.72001839 300.43884277]
[2.64291334 313.66436768]
[-4.43419218 326.88989258]
[-11.51129723 340.11541748]
[0.39835763 349.29202271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[60 187]
[61 186]
[62 184]
[63 183]
[64 182]
[65 176]
[66 175]
[67 174]
[68 173]
[69 172]
[70 170]
[71 169]
[80 168]
[81 167]
[82 166]
[83 165]
[84 164]
[87 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 156]
[93 155]
[94 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
