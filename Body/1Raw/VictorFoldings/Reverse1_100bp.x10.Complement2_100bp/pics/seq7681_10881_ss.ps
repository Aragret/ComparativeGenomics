%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[30.41121483 642.69451904]
[23.87440872 656.25018311]
[14.81837940 668.26995850]
[3.59121799 678.29180908]
[-9.37553310 685.93048096]
[-23.58346558 690.89239502]
[-38.48646927 692.98687744]
[-53.51170349 692.13336182]
[-68.08164978 688.36468506]
[-81.63626862 681.82568359]
[-93.65455627 672.76770020]
[-103.67456818 661.53894043]
[-111.31116486 648.57092285]
[-116.27080536 634.36218262]
[-118.36286163 619.45886230]
[-117.50691223 604.43377686]
[-113.73587036 589.86444092]
[-107.19467163 576.31085205]
[-98.13475800 564.29406738]
[-86.90435028 554.27581787]
[-73.93512726 546.64135742]
[-59.72558975 541.68402100]
[-44.82191086 539.59436035]
[-29.79694939 540.45275879]
[-34.10055542 526.19342041]
[-23.15394592 514.77050781]
[-19.39764595 500.24847412]
[-15.64134502 485.72640991]
[-19.94495010 471.46710205]
[-8.99834061 460.04421997]
[-10.36666870 452.78134155]
[-5.07649994 445.33471680]
[-12.64389420 432.55700684]
[-8.82167625 417.83132935]
[4.63208151 409.98059082]
[8.60417747 395.51608276]
[12.57627392 381.05154419]
[16.54837036 366.58700562]
[20.52046585 352.12249756]
[24.49256325 337.65795898]
[28.46465874 323.19345093]
[32.43675613 308.72891235]
[36.40885162 294.26440430]
[40.38094711 279.79986572]
[44.35304260 265.33535767]
[38.64440536 254.67054749]
[41.83524704 242.58740234]
[52.74234009 235.70277405]
[56.92934799 221.29899597]
[46.52322388 210.64169312]
[42.82410812 196.10990906]
[46.92250061 181.58168030]
[57.81409836 170.98593140]
[72.64365387 167.24005127]
[76.83066559 152.83627319]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[96.81387329 56.37288666]
[107.79624939 46.31124115]
[102.99268341 28.53464699]
[116.12480164 16.89358139]
[119.77288818 2.34396124]
[123.09514618 -12.28349876]
[126.41740417 -26.91095924]
[129.73966980 -41.53841782]
[133.06192017 -56.16587830]
[136.38418579 -70.79334259]
[139.70645142 -85.42079926]
[142.59172058 -100.14069366]
[145.03744507 -114.93996429]
[147.48316956 -129.73922729]
[142.09950256 -144.61628723]
[151.80842590 -155.91168213]
[150.12011719 -164.88873291]
[154.40231323 -170.91241455]
[157.06811523 -185.67362976]
[159.73390198 -200.43484497]
[162.39970398 -215.19606018]
[149.47357178 -227.91111755]
[146.79113770 -245.68424988]
[155.23979187 -261.37091064]
[171.27047729 -268.77960205]
[173.49560547 -283.61364746]
[175.72071838 -298.44769287]
[177.94583130 -313.28173828]
[163.55403137 -317.60107422]
[149.92346191 -323.92471313]
[137.33161926 -332.12387085]
[126.03486633 -342.03164673]
[116.26318359 -353.44635010]
[108.21551514 -366.13552856]
[102.05570221 -379.84091187]
[97.90914154 -394.28344727]
[95.86026001 -409.16909790]
[95.95076752 -424.19485474]
[98.17882538 -439.05474854]
[102.49906921 -453.44625854]
[108.82353973 -467.07644653]
[117.02348328 -479.66778564]
[126.93196869 -490.96392822]
[138.34725952 -500.73489380]
[151.03695679 -508.78176880]
[164.74270630 -514.94073486]
[179.18550110 -519.08642578]
[194.07128906 -521.13439941]
[209.09701538 -521.04290771]
[223.95677185 -518.81396484]
[238.34803772 -514.49285889]
[251.97782898 -508.16751099]
[264.56866455 -499.96679688]
[275.86419678 -490.05761719]
[285.63446045 -478.64172363]
[293.68054199 -465.95150757]
[299.83865356 -452.24536133]
[303.98342896 -437.80233765]
[306.03048706 -422.91641235]
[305.93811035 -407.89068604]
[303.70822144 -393.03106689]
[299.38619995 -378.64007568]
[293.06002808 -365.01068115]
[284.85852051 -352.42034912]
[274.94863892 -341.12545776]
[263.53213501 -331.35589600]
[250.84146118 -323.31057739]
[237.13493347 -317.15328979]
[222.69163513 -313.00942993]
[207.80558777 -310.96331787]
[192.77987671 -311.05661011]
[190.55476379 -296.22256470]
[188.32963562 -281.38851929]
[186.10452271 -266.55447388]
[195.92523193 -259.41802979]
[201.81466675 -248.72000122]
[202.60139465 -236.46104431]
[198.07490540 -224.96363831]
[189.03707886 -216.43215942]
[177.16091919 -212.53027344]
[174.49513245 -197.76904297]
[171.82933044 -183.00782776]
[169.16352844 -168.24661255]
[166.60769653 -153.46595764]
[172.16630554 -139.64744568]
[162.28244019 -127.29350281]
[159.83671570 -112.49423218]
[157.39099121 -97.69496155]
[158.91192627 -95.34020996]
[159.59176636 -92.24110413]
[159.14231873 -88.71500397]
[157.39547729 -85.17761993]
[154.33390808 -82.09854126]
[151.01164246 -67.47107697]
[147.68939209 -52.84362030]
[144.36712646 -38.21615982]
[141.04486084 -23.58869934]
[137.72261047 -8.96123981]
[134.40034485 5.66622066]
[135.95996094 8.82849216]
[136.06536865 12.90328503]
[134.30439758 17.19889450]
[130.58932495 20.86567879]
[136.29795837 31.53048134]
[133.10711670 43.61362076]
[122.20002747 50.49825287]
[126.07717133 64.87938690]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[91.23444366 157.02328491]
[87.04743195 171.42706299]
[97.55799103 182.53901672]
[101.07218170 197.32235718]
[96.74364471 211.78369141]
[85.83080292 222.06794739]
[71.33312988 225.48600769]
[67.14611816 239.88978577]
[71.94968414 257.66638184]
[58.81756592 269.30743408]
[54.84547043 283.77197266]
[50.87337494 298.23651123]
[46.90127945 312.70101929]
[42.92918396 327.16555786]
[38.95708466 341.63006592]
[34.98498917 356.09460449]
[31.01289368 370.55911255]
[27.04079819 385.02365112]
[23.06870079 399.48815918]
[19.09660530 413.95269775]
[26.65411758 427.57333374]
[22.41979408 442.18582153]
[9.38802338 449.30682373]
[5.52371836 463.80050659]
[9.55864716 479.09854126]
[-1.11928558 489.48272705]
[-4.87558603 504.00479126]
[-8.63188648 518.52685547]
[-4.59695768 533.82489014]
[-15.27489090 544.20904541]
[-1.71815562 550.74365234]
[10.30306721 559.79772949]
[20.32671547 571.02325439]
[27.96750450 583.98876953]
[32.93174362 598.19592285]
[35.02862549 613.09857178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[26 202]
[27 201]
[28 200]
[30 198]
[32 197]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[48 182]
[49 181]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[60 170]
[61 169]
[63 167]
[65 164]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[73 149]
[74 148]
[75 147]
[77 145]
[79 144]
[80 143]
[81 142]
[82 141]
[86 135]
[87 134]
[88 133]
[89 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
