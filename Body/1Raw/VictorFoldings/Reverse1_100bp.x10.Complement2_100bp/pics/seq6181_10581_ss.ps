%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[99.48899078 541.86596680]
[87.26743317 550.76116943]
[72.96639252 555.65728760]
[57.85751343 556.11883545]
[43.28425598 552.10491943]
[30.54247284 543.97235107]
[20.76515198 532.44433594]
[14.82168674 518.54589844]
[13.24056435 503.51290894]
[16.16237831 488.68203735]
[23.32732391 475.37207031]
[34.09829712 464.76654053]
[47.51755142 457.80844116]
[62.39185333 455.11651611]
[64.17432404 440.22280884]
[53.22431564 427.45816040]
[54.92784119 410.38732910]
[68.71675110 399.62234497]
[70.27726746 384.70373535]
[71.83779144 369.78512573]
[73.39831543 354.86651611]
[61.26383209 346.22824097]
[55.04101944 332.58520508]
[56.49221802 317.55987549]
[65.32735443 305.19714355]
[79.25512695 298.87539673]
[80.81565094 283.95678711]
[82.37617493 269.03817749]
[83.93669891 254.11958313]
[85.16367340 239.16984558]
[86.05648804 224.19644165]
[86.94930267 209.22303772]
[87.84211731 194.24963379]
[88.73493195 179.27622986]
[80.04636383 164.02906799]
[90.31384277 148.74311829]
[83.15256500 135.68304443]
[91.49835968 122.24213409]
[92.16814423 107.25709534]
[91.27532959 92.28368378]
[88.82959747 77.48441315]
[86.38387299 62.68514633]
[82.49091339 57.34132767]
[81.96067047 51.68307114]
[84.09249878 47.40938950]
[82.08848572 32.54386139]
[80.08447266 17.67833138]
[78.08045959 2.81280351]
[76.07643890 -12.05272484]
[74.07242584 -26.91825294]
[72.06841278 -41.78378296]
[70.06439972 -56.64931107]
[60.55274963 -69.29205322]
[66.52030945 -82.93894196]
[54.93002701 -97.24791718]
[62.22366714 -113.20942688]
[59.99855042 -128.04347229]
[57.77343369 -142.87751770]
[55.54831696 -157.71156311]
[53.32320023 -172.54560852]
[38.80332947 -177.12104797]
[27.75492287 -187.50468445]
[22.33268547 -201.59793091]
[23.56209373 -216.58624268]
[31.14591980 -229.50115967]
[43.53376389 -237.80818176]
[41.30864716 -252.64222717]
[39.08353043 -267.47625732]
[36.85841370 -282.31030273]
[34.63329697 -297.14434814]
[31.80921173 -300.44262695]
[30.33031654 -304.10012817]
[30.14436531 -307.64990234]
[31.05281830 -310.68984985]
[32.74468994 -312.92495728]
[31.40645409 -327.86514282]
[30.06822014 -342.80532837]
[28.72998619 -357.74551392]
[14.89715195 -359.78857422]
[1.87760413 -364.86727905]
[-9.67189121 -372.72171021]
[-19.16956329 -382.95196533]
[-26.13794518 -395.03857422]
[-30.22787285 -408.36892700]
[-31.23598480 -422.26821899]
[-29.11482239 -436.03372192]
[-23.97506142 -448.97021484]
[-16.07973480 -460.42514038]
[-5.83077860 -469.82153320]
[6.25142765 -476.68704224]
[19.55448723 -480.67776489]
[18.66167068 -495.65115356]
[17.76885605 -510.62457275]
[3.04452300 -513.99664307]
[-10.13267994 -521.38159180]
[-20.69453812 -532.18084717]
[-27.78484726 -545.51892090]
[-30.82882690 -560.31457520]
[-29.57971764 -575.36834717]
[-24.13877869 -589.45996094]
[-14.94708157 -601.44696045]
[-2.74975705 -610.35778809]
[11.46441364 -615.46990967]
[26.54314995 -616.36901855]
[41.26408768 -612.98217773]
[54.43386459 -605.58392334]
[64.98487091 -594.77410889]
[72.06177521 -581.42889404]
[75.09088898 -566.63018799]
[73.82666016 -551.57769775]
[68.37156677 -537.49157715]
[59.16783142 -525.51379395]
[46.96155930 -516.61523438]
[32.74225998 -511.51739502]
[33.63507843 -496.54397583]
[34.52789307 -481.57055664]
[50.30797577 -478.53485107]
[64.78103638 -471.52755737]
[76.96551514 -461.01779175]
[86.03347015 -447.71237183]
[91.36686707 -432.50833130]
[92.59965515 -416.43246460]
[89.64291382 -400.57189941]
[82.69124603 -386.00070190]
[72.20994568 -373.70700073]
[58.90390396 -364.52612305]
[43.67016983 -359.08374023]
[45.00840378 -344.14355469]
[46.34663773 -329.20336914]
[47.68487167 -314.26318359]
[49.46733856 -299.36947632]
[51.69245529 -284.53543091]
[53.91757202 -269.70138550]
[56.14269257 -254.86734009]
[58.36780930 -240.03329468]
[72.64774323 -235.72645569]
[83.68704224 -225.60502625]
[89.25991058 -211.63705444]
[88.21125793 -196.57318115]
[80.69565582 -183.40493774]
[68.15724182 -174.77072144]
[70.38236237 -159.93667603]
[72.60747528 -145.10263062]
[74.83259583 -130.26858521]
[77.05770874 -115.43454742]
[86.59582520 -107.99472809]
[88.57101440 -95.65444946]
[81.38584137 -84.94295502]
[90.75415039 -73.36348724]
[84.92993164 -58.65332413]
[86.93394470 -43.78779602]
[88.93795776 -28.92226601]
[90.94197083 -14.05673885]
[92.94598389 0.80878973]
[94.94999695 15.67431831]
[96.95401001 30.53984642]
[98.95802307 45.40537262]
[101.18314362 60.23941803]
[103.62886810 75.03868866]
[106.07460022 89.83795929]
[111.48526001 75.84779358]
[121.78211975 64.94023895]
[135.43769836 58.73337173]
[150.42626953 58.14793777]
[164.52436829 63.27078629]
[175.64062500 73.34197235]
[182.12602234 86.86749268]
[183.01846313 101.84091949]
[178.18557739 116.04103851]
[168.34429932 127.36133575]
[154.95451355 134.12251282]
[140.00251770 135.32160950]
[125.70635223 130.78071594]
[114.18676758 121.17347717]
[107.15318298 107.92687988]
[106.48339844 122.91191864]
[113.59677124 137.04380798]
[105.29888153 149.41290283]
[113.41103363 159.44065857]
[112.54467010 171.90794373]
[103.70834351 180.16903687]
[102.81552124 195.14244080]
[101.92270660 210.11584473]
[101.02989197 225.08924866]
[100.13707733 240.06266785]
[102.47489929 244.72975159]
[102.76020050 249.36352539]
[101.34939575 253.18774414]
[98.85530090 255.68009949]
[97.29477692 270.59869385]
[95.73425293 285.51730347]
[94.17372894 300.43591309]
[106.49178314 309.50305176]
[112.57732391 323.42651367]
[110.88775635 338.42691040]
[101.97634888 350.48687744]
[88.31692505 356.42703247]
[86.75640106 371.34564209]
[85.19587708 386.26425171]
[83.63535309 401.18286133]
[93.26495361 410.60015869]
[95.67730713 423.65353394]
[90.21205139 435.53683472]
[79.06803894 442.00527954]
[77.28557587 456.89898682]
[91.10456848 463.02490234]
[102.50288391 472.95312500]
[110.46698761 485.80087280]
[114.28871918 500.42572021]
[113.62825775 515.52722168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 205]
[15 204]
[18 200]
[19 199]
[20 198]
[21 197]
[26 192]
[27 191]
[28 190]
[29 189]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[36 178]
[38 176]
[39 175]
[40 160]
[41 159]
[42 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[54 148]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[75 130]
[76 129]
[77 128]
[78 127]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
