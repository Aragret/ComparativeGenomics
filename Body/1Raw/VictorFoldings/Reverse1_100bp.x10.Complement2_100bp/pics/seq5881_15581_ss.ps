%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[217.11828613 255.76791382]
[226.01245117 243.67256165]
[214.90521240 233.59141541]
[202.81170654 233.86314392]
[193.47558594 225.55528259]
[192.26437378 212.71411133]
[177.68367004 209.67231750]
[172.88888550 194.59516907]
[161.85700989 184.43162537]
[150.74977112 174.35047913]
[139.64254761 164.26934814]
[128.53530884 154.18820190]
[133.64947510 168.28945923]
[134.21862793 183.27865601]
[130.18853760 197.72712708]
[121.94329071 210.25773621]
[110.26880646 219.67613220]
[96.27780151 225.08462524]
[81.30381775 225.96772766]
[66.77408600 222.24124146]
[54.07347107 214.26036072]
[44.41252518 202.78576660]
[38.71207047 188.91116333]
[37.51543045 173.95896912]
[40.93666458 159.35433960]
[48.64968491 146.48930359]
[59.91933441 136.59005737]
[73.67146301 130.60014343]
[88.59529877 129.09048462]
[103.26840210 132.20495605]
[116.29311371 139.64744568]
[108.25193787 126.98491669]
[100.21076965 114.32239532]
[87.90818024 107.67875671]
[87.12670898 93.71878052]
[86.14908600 108.68688965]
[77.90076447 121.21546173]
[64.53782654 128.02955627]
[49.55331802 127.34799194]
[36.86415482 119.34893036]
[29.78724861 106.12329102]
[30.17248726 91.12824249]
[37.91917419 78.28343964]
[51.00233841 70.94649506]
[66.00207520 71.03526306]
[78.99685669 78.52590942]
[72.92302704 64.81064606]
[66.84918976 51.09537888]
[60.77536011 37.38011169]
[54.70152283 23.66484451]
[48.62768936 9.94957829]
[42.22808838 23.51589966]
[28.15722847 28.71310616]
[14.47554302 22.56400299]
[9.02052116 8.59107399]
[14.91704655 -5.20135117]
[28.78732109 -10.91234493]
[42.68514633 -5.27105522]
[37.85914612 -19.47351074]
[33.03314972 -33.67596817]
[21.82952118 -40.06670380]
[18.10232353 -51.99531555]
[23.32905769 -62.90438461]
[18.71504974 -77.17711639]
[14.10103989 -91.44985199]
[9.48703003 -105.72257996]
[4.87302113 -119.99531555]
[0.15288675 -134.23330688]
[-4.67311096 -148.43576050]
[-9.49910831 -162.63821411]
[-14.32510662 -176.84066772]
[-26.09099007 -187.41775513]
[-22.85986519 -201.95765686]
[-27.68586349 -216.16012573]
[-32.51185989 -230.36257935]
[-47.32507324 -227.81007385]
[-62.35520935 -227.60643005]
[-77.23213959 -229.75663757]
[-91.58950806 -234.20776367]
[-105.07375336 -240.85017395]
[-117.35280609 -249.52032471]
[-128.12428284 -260.00466919]
[-137.12294006 -272.04504395]
[-144.12716675 -285.34494019]
[-148.96447754 -299.57684326]
[-151.51574707 -314.39025879]
[-151.71815491 -329.42041016]
[-149.56672668 -344.29718018]
[-145.11442566 -358.65417480]
[-138.47088623 -372.13787842]
[-129.79972839 -384.41619873]
[-119.31449127 -395.18682861]
[-107.27336884 -404.18447876]
[-93.97289276 -411.18762207]
[-79.74059296 -416.02374268]
[-64.92696381 -418.57379150]
[-49.89679337 -418.77496338]
[-35.02021790 -416.62231445]
[-20.66358376 -412.16882324]
[-7.18043852 -405.52416992]
[5.09718370 -396.85202026]
[15.86693573 -386.36587524]
[24.86360168 -374.32400513]
[31.86563301 -361.02294922]
[36.70059586 -346.79025269]
[39.24942780 -331.97640991]
[39.44935608 -316.94622803]
[37.29546356 -302.06982422]
[32.84078979 -287.71356201]
[26.19503212 -274.23095703]
[17.52185249 -261.95407104]
[7.03483343 -251.18518066]
[-5.00777245 -242.18949890]
[-18.30940437 -235.18856812]
[-13.48340702 -220.98611450]
[-8.65740967 -206.78366089]
[2.76328707 -197.22244263]
[-0.12265056 -181.66667175]
[4.70334721 -167.46421814]
[9.52934456 -153.26176453]
[14.35534286 -139.05931091]
[19.48371696 -133.73750305]
[19.14575386 -124.60932922]
[23.75976372 -110.33659363]
[28.37377357 -96.06385803]
[32.98778152 -81.79112244]
[37.60179138 -67.51839447]
[51.24061203 -56.47531891]
[47.23560333 -38.50196457]
[52.06160355 -24.29950905]
[56.88759995 -10.09705353]
[62.34295654 3.87574482]
[68.41679382 17.59101105]
[74.49062347 31.30627823]
[80.56446075 45.02154541]
[86.63829041 58.73681259]
[92.71212769 72.45207977]
[99.78923035 85.67760468]
[112.09181976 92.32124329]
[112.87329102 106.28121948]
[120.91446686 118.94374847]
[128.95564270 131.60627747]
[138.61645508 143.08097839]
[149.72367859 153.16210938]
[160.83091736 163.24325562]
[171.93815613 173.32438660]
[180.39590454 176.77462769]
[183.13427734 183.63925171]
[198.49862671 187.41386414]
[202.50976562 201.75819397]
[220.53802490 205.50833130]
[224.98635864 222.48417664]
[236.09358215 232.56532288]
[247.27291870 222.54402161]
[259.42343140 213.72532654]
[272.41629028 206.20272827]
[286.11376953 200.05595398]
[300.37069702 195.35015869]
[315.03588867 192.13525391]
[329.95394897 190.44529724]
[344.96667480 190.29820251]
[359.91497803 191.69554138]
[374.64038086 194.62249756]
[388.98675537 199.04803467]
[402.80203247 204.92524719]
[415.93978882 212.19183350]
[428.26077271 220.77075195]
[439.63430786 230.57109070]
[449.93988037 241.48892212]
[459.06823730 253.40853882]
[466.92257690 266.20358276]
[473.41970825 279.73840332]
[478.49069214 293.86953735]
[482.08181763 308.44720459]
[484.15496826 323.31683350]
[484.68823242 338.32083130]
[483.67590332 353.30010986]
[481.12872314 368.09591675]
[477.07373047 382.55139160]
[471.55386353 396.51333618]
[464.62765503 409.83367920]
[456.36849976 422.37124634]
[446.86401367 433.99313354]
[436.21490479 444.57617188]
[424.53405762 454.00811768]
[411.94531250 462.18905640]
[398.58209229 469.03219604]
[384.58609009 474.46502686]
[370.10562134 478.42996216]
[355.29425049 480.88497925]
[340.30895996 481.80401611]
[325.30856323 481.17736816]
[310.45214844 479.01168823]
[295.89712524 475.32989502]
[281.79782104 470.17102051]
[268.30371094 463.58975220]
[255.55781555 455.65591431]
[243.69525146 446.45352173]
[232.84178162 436.08016968]
[223.11245728 424.64584351]
[214.61039734 412.27172852]
[207.42575073 399.08895874]
[201.63465881 385.23736572]
[197.29852295 370.86370850]
[194.46330261 356.12036133]
[193.15904236 341.16366577]
[193.39959717 326.15213013]
[195.18240356 311.24490356]
[198.48855591 296.60000610]
[203.28300476 282.37265015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[6 150]
[8 148]
[9 146]
[10 145]
[11 144]
[12 143]
[31 142]
[32 141]
[33 140]
[35 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[58 131]
[59 130]
[60 129]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 121]
[69 120]
[70 119]
[71 118]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
