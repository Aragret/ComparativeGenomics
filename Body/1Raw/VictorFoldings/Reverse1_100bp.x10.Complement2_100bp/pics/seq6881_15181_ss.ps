%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[8.26163197 302.36755371]
[14.08588028 316.21246338]
[18.12892723 330.67819214]
[20.32700920 345.53656006]
[20.64545631 360.55328369]
[19.07925034 375.49148560]
[15.65308952 390.11560059]
[10.42101002 404.19497681]
[3.46552992 417.50753784]
[-5.10365295 429.84335327]
[-15.15139103 441.00787354]
[-26.51921654 450.82498169]
[-39.02783966 459.13989258]
[-52.47998810 465.82144165]
[-66.66349792 470.76422119]
[-81.35467529 473.89035034]
[-96.32181549 475.15048218]
[-111.32886505 474.52471924]
[-126.13915253 472.02297974]
[-140.51908875 467.68469238]
[-154.24188232 461.57830811]
[-167.09109497 453.80007935]
[-178.86410522 444.47271729]
[-189.37521362 433.74331665]
[-198.45863342 421.78109741]
[-205.97113037 408.77474976]
[-211.79421997 394.92935181]
[-215.83604431 380.46328735]
[-218.03288269 365.60470581]
[-218.35006714 350.58795166]
[-216.78259277 335.64987183]
[-213.35520935 321.02606201]
[-208.12194824 306.94714355]
[-201.16534424 293.63516235]
[-192.59512329 281.30004883]
[-182.54644775 270.13638306]
[-171.17779541 260.32022095]
[-158.66847229 252.00639343]
[-145.21575928 245.32597351]
[-131.03182983 240.38436890]
[-116.34039307 237.25949097]
[-101.37314606 236.00062561]
[-86.36614227 236.62762451]
[-71.55606842 239.13061523]
[-57.17650223 243.47012329]
[-43.45422363 249.57768250]
[-30.60565567 257.35699463]
[-21.29077339 245.59973145]
[-11.97589016 233.84248352]
[-2.66100717 222.08522034]
[6.65387583 210.32797241]
[8.49278641 195.54731750]
[23.12721062 189.53532410]
[32.17721176 177.57298279]
[40.95781326 165.41152954]
[49.73841858 153.25007629]
[58.51902008 141.08862305]
[67.29962158 128.92715454]
[66.98651886 126.14146423]
[67.75799561 123.06389618]
[69.73075104 120.10693359]
[72.87015533 117.71765137]
[76.98262024 116.32423401]
[86.47151947 104.70697021]
[88.90633392 90.93876648]
[101.91121674 85.80413055]
[111.40011597 74.18686676]
[120.88901520 62.56960678]
[130.37791443 50.95234299]
[139.86680603 39.33507919]
[148.55664062 27.10859489]
[156.40838623 14.32775116]
[164.26014709 1.54690897]
[157.59265137 -13.99788284]
[161.46592712 -30.29202271]
[174.16081238 -40.95981598]
[190.54676819 -41.94870758]
[198.20736694 -54.84503174]
[205.86796570 -67.74136353]
[205.66906738 -86.15444946]
[221.29791260 -94.13605499]
[228.76565552 -107.14501190]
[236.23339844 -120.15396118]
[243.70114136 -133.16291809]
[244.06657410 -139.76428223]
[247.23527527 -144.48193359]
[251.58984375 -146.44325256]
[259.44158936 -159.22409058]
[267.29336548 -172.00494385]
[255.24826050 -180.96112061]
[244.04183960 -190.94680786]
[233.76182556 -201.88385010]
[224.48866272 -213.68664551]
[216.29493713 -226.26283264]
[209.24476624 -239.51397705]
[203.39334106 -253.33636475]
[198.78643799 -267.62182617]
[195.46012878 -282.25851440]
[193.44044495 -297.13192749]
[192.74317932 -312.12564087]
[193.37380981 -327.12231445]
[195.32739258 -342.00454712]
[198.58862305 -356.65591431]
[203.13200378 -370.96166992]
[208.92196655 -384.80993652]
[215.91319275 -398.09225464]
[224.05094910 -410.70474243]
[233.27157593 -422.54861450]
[243.50289917 -433.53125000]
[254.66482544 -443.56661987]
[266.67001343 -452.57623291]
[279.42449951 -460.48956299]
[292.82846069 -467.24465942]
[306.77700806 -472.78866577]
[321.16091919 -477.07821655]
[335.86767578 -480.07968140]
[350.78216553 -481.76962280]
[365.78762817 -482.13479614]
[380.76666260 -481.17236328]
[395.60202026 -478.88980103]
[410.17758179 -475.30502319]
[424.37927246 -470.44607544]
[438.09597778 -464.35098267]
[451.22027588 -457.06744385]
[463.64950562 -448.65246582]
[475.28637695 -439.17190552]
[486.03982544 -428.69998169]
[495.82565308 -417.31863403]
[504.56729126 -405.11694336]
[512.19635010 -392.19039917]
[518.65307617 -378.64019775]
[523.88696289 -364.57235718]
[527.85699463 -350.09698486]
[530.53216553 -335.32739258]
[531.89154053 -320.37915039]
[531.92443848 -305.36926270]
[530.63067627 -290.41522217]
[528.02026367 -275.63403320]
[524.11370850 -261.14138794]
[518.94158936 -247.05073547]
[512.54431152 -233.47235107]
[504.97201538 -220.51248169]
[496.28396606 -208.27258301]
[486.54812622 -196.84843445]
[475.84072876 -186.32945251]
[464.24554443 -176.79795837]
[451.85333252 -168.32856750]
[438.76107788 -160.98754883]
[425.07122803 -154.83236694]
[410.89099121 -149.91119385]
[396.33126831 -146.26252747]
[381.50607300 -143.91496277]
[366.53143311 -142.88682556]
[351.52447510 -143.18620300]
[336.60275269 -144.81072998]
[321.88296509 -147.74769592]
[307.48034668 -151.97412109]
[293.50765991 -157.45692444]
[280.07418823 -164.15318298]
[272.22244263 -151.37234497]
[264.37069702 -138.59149170]
[256.71008301 -125.69517517]
[249.24235535 -112.68621826]
[241.77461243 -99.67726898]
[234.30686951 -86.66831207]
[237.16293335 -74.91376495]
[231.04789734 -64.01467896]
[218.76428223 -60.08076096]
[211.10369873 -47.18443680]
[203.44309998 -34.28810883]
[209.83670044 -22.56787109]
[209.60227966 -9.11093235]
[202.69413757 2.56584811]
[190.82464600 9.35802650]
[177.04098511 9.39866447]
[169.18923950 22.17950630]
[161.33747864 34.96035004]
[175.42927551 29.82016373]
[190.08604431 33.01061630]
[200.76623535 43.54310608]
[204.16049194 58.15402985]
[199.21704102 72.31603241]
[187.46768188 81.64086151]
[172.55307007 83.23912048]
[159.09466553 76.61557007]
[151.26271057 63.82259369]
[151.48406982 48.82397842]
[141.99517822 60.44124222]
[132.50628662 72.05850220]
[123.01737976 83.67576599]
[113.52848053 95.29302979]
[111.09366608 109.06123352]
[98.08878326 114.19586945]
[88.59988403 125.81313324]
[79.46108246 137.70776367]
[70.68047333 149.86921692]
[61.89987183 162.03067017]
[53.11927032 174.19212341]
[44.33866882 186.35359192]
[43.81025696 191.54664612]
[41.56703568 195.61128235]
[38.32599640 198.08326721]
[34.88446426 198.85020447]
[32.37928772 214.47181702]
[18.41112709 219.64285278]
[9.09624386 231.40011597]
[-0.21863876 243.15736389]
[-9.53352165 254.91461182]
[-18.84840393 266.67187500]
[-8.33639812 277.40036011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[53 203]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[63 194]
[64 193]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[71 177]
[72 176]
[73 175]
[77 170]
[78 169]
[79 168]
[81 165]
[82 164]
[83 163]
[84 162]
[87 161]
[88 160]
[89 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
