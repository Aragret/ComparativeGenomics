%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[47.28746414 551.22473145]
[46.79175568 566.31298828]
[42.24255371 580.70770264]
[33.97743988 593.34063721]
[22.60974121 603.27429199]
[8.98301601 609.77160645]
[-5.89154148 612.35040283]
[-20.91014099 610.81927490]
[-34.95830154 605.29193115]
[-46.99355698 596.17846680]
[-56.12281418 584.15521240]
[-61.66861725 570.11431885]
[-63.21943283 555.09771729]
[-60.66017914 540.21978760]
[-54.18077087 526.58453369]
[-44.26202393 515.20379639]
[-31.63997269 506.92211914]
[-17.25126076 502.35403442]
[-2.16362190 501.83850098]
[1.37605047 487.26214600]
[4.91572285 472.68576050]
[0.40029490 458.49209595]
[11.17562008 446.90750122]
[14.71529293 432.33111572]
[18.25496483 417.75473022]
[21.79463768 403.17837524]
[8.85628510 394.02822876]
[0.39936462 380.58093262]
[-2.25611997 364.87988281]
[1.32561588 349.32434082]
[10.62494278 336.30288696]
[24.24197388 327.82662964]
[40.10723495 325.21859741]
[43.42949295 310.59112549]
[46.75175476 295.96365356]
[50.07401276 281.33621216]
[45.34776306 267.21133423]
[55.94941711 255.46759033]
[59.27167511 240.84013367]
[54.54542542 226.71527100]
[65.14707947 214.97152710]
[68.46933746 200.34407043]
[71.79159546 185.71661377]
[75.11386108 171.08914185]
[73.52989197 163.87022400]
[78.59600067 156.26940918]
[82.13567352 141.69303894]
[74.19120026 129.14628601]
[77.57328033 114.31334686]
[90.78733063 106.06552124]
[76.81463623 111.52114868]
[63.76149368 104.13092804]
[61.25019073 89.34264374]
[71.13196564 78.05767059]
[86.12233734 78.59487152]
[95.17063904 90.55662537]
[99.78464508 76.28389740]
[104.39865875 62.01116180]
[109.01266479 47.73843002]
[113.62667847 33.46569443]
[118.24068451 19.19296074]
[122.85469055 4.92022800]
[127.46870422 -9.35250568]
[132.08271790 -23.62523842]
[136.69671631 -37.89797211]
[133.57949829 -53.40904999]
[144.85658264 -63.13924789]
[149.47059631 -77.41197968]
[154.08459473 -91.68471527]
[153.74664307 -100.81288910]
[158.87501526 -106.13468933]
[155.98907471 -121.69046021]
[167.40977478 -131.25167847]
[172.23576355 -145.45413208]
[163.21960449 -162.11616516]
[169.14392090 -179.77445984]
[185.80348206 -187.36228943]
[190.20446777 -201.70213318]
[194.60546875 -216.04197693]
[199.00646973 -230.38182068]
[195.65866089 -245.84477234]
[206.78961182 -255.74179077]
[211.19061279 -270.08163452]
[215.59161377 -284.42147827]
[219.13128662 -298.99786377]
[221.79708862 -313.75906372]
[224.46287537 -328.52029419]
[227.12867737 -343.28152466]
[229.79446411 -358.04272461]
[232.46026611 -372.80395508]
[235.12605286 -387.56515503]
[237.79185486 -402.32638550]
[240.45765686 -417.08758545]
[235.29608154 -432.04315186]
[245.17210388 -443.19274902]
[247.83789062 -457.95397949]
[250.50369263 -472.71517944]
[253.16947937 -487.47640991]
[255.83528137 -502.23760986]
[258.50106812 -516.99884033]
[244.84820557 -523.42236328]
[233.32369995 -533.16137695]
[224.71330261 -545.55181885]
[219.60411072 -559.74896240]
[218.34446716 -574.78479004]
[221.02026367 -589.63409424]
[227.44903564 -603.28448486]
[237.19248962 -614.80523682]
[249.58627319 -623.41082764]
[263.78536987 -628.51452637]
[278.82168579 -629.76837158]
[293.66998291 -627.08685303]
[307.31790161 -620.65283203]
[318.83486938 -610.90490723]
[327.43569946 -598.50781250]
[332.53390503 -584.30670166]
[333.78195190 -569.26995850]
[331.09469604 -554.42266846]
[324.65536499 -540.77728271]
[314.90304565 -529.26403809]
[302.50259399 -520.66802979]
[288.29956055 -515.57525635]
[273.26229858 -514.33306885]
[270.59649658 -499.57183838]
[267.93069458 -484.81060791]
[265.26489258 -470.04940796]
[262.59912109 -455.28817749]
[259.93331909 -440.52694702]
[265.28555298 -426.62722778]
[255.21887207 -414.42181396]
[252.55307007 -399.66058350]
[249.88728333 -384.89935303]
[247.22148132 -370.13815308]
[244.55567932 -355.37692261]
[241.88989258 -340.61572266]
[239.22409058 -325.85449219]
[236.55830383 -311.09329224]
[233.89250183 -296.33206177]
[245.61695862 -305.68820190]
[260.59597778 -306.48120117]
[273.24276733 -298.41531372]
[278.84039307 -284.49890137]
[275.30105591 -269.92242432]
[263.94488525 -260.12258911]
[249.00740051 -258.75445557]
[236.05993652 -266.32833862]
[229.93145752 -280.02047729]
[225.53045654 -265.68063354]
[221.12947083 -251.34078979]
[224.79206848 -236.90353394]
[213.34631348 -225.98081970]
[208.94531250 -211.64097595]
[204.54432678 -197.30113220]
[200.14332581 -182.96128845]
[207.54626465 -174.28012085]
[209.86326599 -162.98643494]
[206.40538025 -151.86273193]
[197.92118835 -143.70678711]
[186.43821716 -140.62814331]
[181.61222839 -126.42568207]
[184.84335327 -111.88577271]
[173.07746887 -101.30869293]
[168.35733032 -87.07070923]
[163.74331665 -72.79797363]
[159.12931824 -58.52523804]
[162.57655334 -44.03504181]
[150.96945190 -33.28396225]
[146.35543823 -19.01123047]
[141.74143982 -4.73849630]
[137.12742615 9.53423691]
[132.51341248 23.80697060]
[127.89940643 38.07970428]
[123.28540039 52.35243607]
[118.67138672 66.62516785]
[114.05738068 80.89790344]
[109.44337463 95.17063904]
[105.36370850 109.60519409]
[113.32340240 122.99477386]
[109.52602386 137.72686768]
[96.71205139 145.23271179]
[93.17237854 159.80908203]
[89.74131775 174.41140747]
[86.41905975 189.03886414]
[83.09680176 203.66632080]
[79.77453613 218.29379272]
[84.26316071 233.46490479]
[73.89913940 244.16239929]
[70.57687378 258.78985596]
[75.06549835 273.96096802]
[64.70146942 284.65847778]
[61.37921143 299.28591919]
[58.05695343 313.91339111]
[54.73469543 328.54083252]
[66.59473419 336.42694092]
[75.03287506 347.86367798]
[79.05194092 361.46514893]
[78.18869019 375.59179688]
[72.56718445 388.54791260]
[62.88138580 398.78530884]
[50.30957031 405.08831787]
[36.37101364 406.71804810]
[32.83134079 421.29440308]
[29.29166794 435.87078857]
[25.75199509 450.44717407]
[30.01424217 465.68344116]
[19.49209785 476.22543335]
[15.95242596 490.80181885]
[12.41275311 505.37817383]
[25.58362961 512.75592041]
[36.27479553 523.41430664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[23 204]
[24 203]
[25 202]
[26 201]
[33 193]
[34 192]
[35 191]
[36 190]
[38 188]
[39 187]
[41 185]
[42 184]
[43 183]
[44 182]
[46 181]
[47 180]
[50 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[67 165]
[68 164]
[69 163]
[71 162]
[73 160]
[74 159]
[77 154]
[78 153]
[79 152]
[80 151]
[82 149]
[83 148]
[84 147]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
