%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[37.56786728 561.39636230]
[22.50923347 563.29425049]
[7.78282547 559.62042236]
[-4.61973047 550.87164307]
[-13.02109051 538.23114014]
[-16.28503990 523.40850830]
[-13.97015667 508.40829468]
[-6.38950920 495.25921631]
[5.43168211 485.73956299]
[19.89469910 481.13677979]
[20.78751373 466.16339111]
[21.68033028 451.18997192]
[22.57314682 436.21658325]
[23.46596146 421.24316406]
[14.28569412 433.10583496]
[0.68275571 439.42721558]
[-14.30392075 438.79513550]
[-27.32627487 431.35079956]
[-35.47507858 418.75726318]
[-36.92986679 403.82797241]
[-31.36563873 389.89816284]
[-20.02545738 380.07980347]
[-5.44274569 376.56634521]
[9.12467957 380.14266968]
[20.42241859 390.00982666]
[25.92653084 403.96353149]
[29.24879074 389.33605957]
[32.57104874 374.70858765]
[35.89331055 360.08114624]
[22.20638847 352.60363770]
[11.16753674 341.56542969]
[3.67529130 327.85345459]
[0.34275812 312.57275391]
[1.44744170 296.95736694]
[6.90815735 282.27078247]
[16.29093742 269.70358276]
[28.84350777 260.27706909]
[43.55560303 254.76010132]
[59.24025726 253.60653687]
[62.34436798 238.93122864]
[65.44847870 224.25593567]
[68.55258942 209.58062744]
[57.38262939 199.72680664]
[52.61293793 185.51040649]
[55.61941910 170.71759033]
[65.69277191 159.34111023]
[80.20264435 154.50263977]
[83.30675507 139.82734680]
[86.41086578 125.15203857]
[84.60280609 120.73163605]
[85.55242157 115.12848663]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[89.31697083 50.23588181]
[78.02918243 40.26601791]
[69.46082306 27.89175797]
[64.10638428 13.83486652]
[62.27305603 -1.08600223]
[64.06309509 -16.00299072]
[69.36814117 -30.04951096]
[77.87576294 -42.41059875]
[89.08782959 -52.37017822]
[102.34973907 -59.35256577]
[116.88855743 -62.95572281]
[131.85812378 -62.97441864]
[135.39779663 -77.55078888]
[138.93746948 -92.12716675]
[142.47714233 -106.70354462]
[146.01681519 -121.27991486]
[134.89100647 -134.02011108]
[133.56440735 -150.71565247]
[142.36235046 -164.77117920]
[157.64967346 -170.75245667]
[160.97192383 -185.37991333]
[164.29418945 -200.00737000]
[167.61643982 -214.63482666]
[170.93870544 -229.26229858]
[169.78771973 -238.32391357]
[174.42085266 -244.08203125]
[177.96052551 -258.65841675]
[181.50019836 -273.23477173]
[185.03987122 -287.81115723]
[188.57954407 -302.38754272]
[192.11921692 -316.96389771]
[195.65888977 -331.54028320]
[199.19856262 -346.11666870]
[185.22587585 -340.66101074]
[172.17272949 -348.05123901]
[169.66142273 -362.83953857]
[179.54319763 -374.12451172]
[194.53356934 -373.58731079]
[203.58186340 -361.62554932]
[208.19587708 -375.89828491]
[212.80989075 -390.17102051]
[199.43144226 -397.02764893]
[187.32621765 -405.94165039]
[176.80775452 -416.68215942]
[168.14851379 -428.97091675]
[161.57276917 -442.48962402]
[157.25088501 -456.88815308]
[155.29478455 -471.79351807]
[155.75514221 -486.81964111]
[158.62002563 -501.57730103]
[163.81524658 -515.68426514]
[171.20622253 -528.77508545]
[180.60150146 -540.51068115]
[191.75773621 -550.58715820]
[204.38594055 -558.74340820]
[218.15904236 -564.76818848]
[232.72024536 -568.50549316]
[247.69241333 -569.85845947]
[262.68771362 -568.79205322]
[277.31771851 -565.33392334]
[291.20352173 -559.57360840]
[303.98541260 -551.66033936]
[315.33230591 -541.79913330]
[324.95028687 -530.24530029]
[332.59024048 -517.29821777]
[338.05429077 -503.29321289]
[341.20089722 -488.59301758]
[341.94851685 -473.57846069]
[340.27783203 -458.63842773]
[336.23208618 -444.15988159]
[329.91607666 -430.51788330]
[321.49343872 -418.06576538]
[311.18228149 -407.12606812]
[299.24975586 -397.98220825]
[286.00488281 -390.87097168]
[271.79077148 -385.97656250]
[256.97558594 -383.42581177]
[241.94306946 -383.28472900]
[227.08262634 -385.55700684]
[222.46861267 -371.28427124]
[217.85459900 -357.01153564]
[213.77493286 -342.57699585]
[210.23526001 -328.00061035]
[206.69558716 -313.42422485]
[203.15591431 -298.84786987]
[199.61624146 -284.27148438]
[196.07656860 -269.69509888]
[192.53689575 -255.11872864]
[188.99722290 -240.54235840]
[185.56616211 -225.94003296]
[182.24391174 -211.31257629]
[178.92164612 -196.68511963]
[175.59938049 -182.05764771]
[172.27713013 -167.43019104]
[181.96589661 -158.24487305]
[185.88220215 -145.36828613]
[182.90078735 -132.13270569]
[173.69606018 -122.01877594]
[160.59320068 -117.74024963]
[157.05352783 -103.16387177]
[153.51385498 -88.58749390]
[149.97418213 -74.01111603]
[146.43450928 -59.43474579]
[159.72831726 -52.55267334]
[170.99542236 -42.68290329]
[179.57801819 -30.39588165]
[184.97364807 -16.40334702]
[186.86462402 -1.51710546]
[185.13671875 13.39807606]
[179.88606262 27.47469902]
[171.41378784 39.89299393]
[160.20880127 49.92865753]
[146.91954041 56.99509430]
[132.31643677 60.67771149]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[101.08616638 128.25614929]
[97.98205566 142.93145752]
[94.87794495 157.60675049]
[106.18586731 167.90618896]
[110.78985596 182.38720703]
[107.54888916 197.13043213]
[97.43118286 208.19786072]
[83.22789001 212.68473816]
[80.12377930 227.36003113]
[77.01966858 242.03533936]
[73.91555786 256.71063232]
[86.74578094 263.36840820]
[97.40361786 273.11520386]
[105.16523743 285.28057861]
[109.50573730 299.03012085]
[110.13459015 313.42260742]
[107.01512146 327.47460938]
[100.36657715 340.22756958]
[90.64870453 350.81317139]
[78.52999878 358.51254272]
[64.84169769 362.80502319]
[50.52077103 363.40341187]
[47.19850922 378.03085327]
[43.87625122 392.65832520]
[40.55399323 407.28579712]
[38.43936920 422.13598633]
[37.54655075 437.10937500]
[36.65373611 452.08279419]
[35.76092148 467.05618286]
[34.86810303 482.02960205]
[48.68169022 488.31842041]
[59.28789139 499.17535400]
[65.25230408 513.13208008]
[65.76829529 528.30108643]
[60.76608276 542.63085938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[26 200]
[27 199]
[28 198]
[29 197]
[39 186]
[40 185]
[41 184]
[42 183]
[47 178]
[48 177]
[49 176]
[52 175]
[54 173]
[55 172]
[56 171]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 138]
[95 137]
[96 136]
[97 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
