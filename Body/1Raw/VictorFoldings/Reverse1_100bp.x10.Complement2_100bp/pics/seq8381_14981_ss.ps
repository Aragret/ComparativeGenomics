%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[25.29295921 717.77111816]
[14.30407810 707.54571533]
[4.29058599 696.36334229]
[-4.66454172 684.31671143]
[-12.48709774 671.50567627]
[-19.11226082 658.03637695]
[-24.48513031 644.02038574]
[-28.56118774 629.57391357]
[-31.30665207 614.81658936]
[-32.69877625 599.87078857]
[-32.72602463 584.86029053]
[-31.38816833 569.90954590]
[-28.69629669 555.14239502]
[-24.67271423 540.68121338]
[-19.35076332 526.64581299]
[-12.77454281 513.15252686]
[-4.99854803 500.31317139]
[3.91278625 488.23413086]
[13.88561630 477.01547241]
[24.83730316 466.75021362]
[36.67709351 457.52337646]
[49.30688095 449.41140747]
[62.62200546 442.48156738]
[76.51213074 436.79125977]
[72.11112976 422.45141602]
[67.71013641 408.11157227]
[63.30913544 393.77172852]
[58.90813828 379.43188477]
[56.45989227 394.23074341]
[50.45503235 407.97634888]
[41.26076126 419.82815552]
[29.43930626 429.06140137]
[15.71355629 435.11151123]
[0.92284709 437.60848999]
[-14.02836418 436.39965820]
[-28.22580528 431.55892944]
[-40.80129623 423.38232422]
[-50.98584366 412.36984253]
[-58.15665817 399.19488525]
[-61.87523651 384.66311646]
[-61.91419220 369.66317749]
[-58.27114105 355.11227417]
[-51.16885757 341.90026855]
[-41.04164886 330.83502197]
[-28.50879478 322.59320068]
[-14.33668900 317.67877197]
[0.60804230 316.39230347]
[15.41152191 318.81243896]
[29.16851044 324.79116821]
[41.03776550 333.96292114]
[50.29347229 345.76681519]
[56.36965561 359.48104858]
[57.03944016 344.49603271]
[57.70922470 329.51098633]
[58.37900925 314.52593994]
[59.04879379 299.54089355]
[49.21678925 310.86926270]
[34.85128021 315.18576050]
[20.40358162 311.15289307]
[10.35046864 300.02029419]
[7.80700731 285.23748779]
[13.56131744 271.38513184]
[25.83036232 262.75552368]
[40.81244659 262.02258301]
[53.86520767 269.41351318]
[60.94415665 282.63830566]
[63.60995483 267.87710571]
[66.27574921 253.11589050]
[52.26859283 246.25698853]
[40.74786758 235.72270203]
[32.65082169 222.35894775]
[28.63929367 207.24229431]
[29.04561234 191.59315491]
[33.84509277 176.67738342]
[42.65736008 163.70376587]
[54.77649307 153.72615051]
[69.22756958 147.55775452]
[84.84506989 145.70498657]
[87.29079437 130.90571594]
[89.73652649 116.10643768]
[81.38407135 104.26655579]
[83.74656677 89.97093201]
[95.46420288 81.44783783]
[97.90993500 66.64856720]
[91.04686737 55.72789001]
[93.38859558 43.45189285]
[103.14398956 36.29935837]
[105.80978394 21.53813934]
[108.36561584 6.75748634]
[110.81134796 -8.04178429]
[113.25707245 -22.84105492]
[115.70279694 -37.64032745]
[118.14852905 -52.43959808]
[119.82006836 -67.34616852]
[112.91788483 -81.58240509]
[121.39900970 -93.82658386]
[122.29182434 -108.79998779]
[123.18463898 -123.77339172]
[124.07745361 -138.74679565]
[124.97027588 -153.72019958]
[111.28232574 -160.33145142]
[101.17005920 -171.68092346]
[96.17551422 -186.03790283]
[97.06032562 -201.21305847]
[103.68957520 -214.89230347]
[115.05233002 -224.98963928]
[129.41587830 -229.96528625]
[144.58985901 -229.06051636]
[158.26036072 -222.41328430]
[168.34274292 -211.03724670]
[173.29949951 -196.66717529]
[172.37475586 -181.49438477]
[165.70954895 -167.83264160]
[154.32026672 -157.76524353]
[139.94367981 -152.82739258]
[139.05085754 -137.85398865]
[138.15805054 -122.88057709]
[137.26522827 -107.90717316]
[136.37242126 -92.93376923]
[143.33845520 -79.76853180]
[134.79347229 -66.45335388]
[145.95413208 -76.47531891]
[160.94093323 -77.10432434]
[172.90213013 -68.05280304]
[176.36920166 -53.45899200]
[169.75706482 -39.99497986]
[156.08869934 -33.81632996]
[141.61308289 -37.74784470]
[132.94779968 -49.99386978]
[130.50207520 -35.19459915]
[128.05635071 -20.39532852]
[125.61061859 -5.59605742]
[123.16488647 9.20321369]
[125.17572021 16.31505775]
[120.57099915 24.20393562]
[117.90520477 38.96515274]
[124.72038269 55.13674164]
[112.70920563 69.09429169]
[110.26347351 83.89356232]
[118.61592865 95.73344421]
[116.25343323 110.02906799]
[104.53579712 118.55216217]
[102.09006500 133.35144043]
[99.64434052 148.15071106]
[112.75904846 154.22892761]
[123.84146881 163.49011230]
[132.13856506 175.29678345]
[137.08868408 188.83877563]
[138.35957336 203.18884277]
[135.87066650 217.36611938]
[129.79820251 230.40322876]
[120.56269073 241.41218567]
[108.79987335 249.64501953]
[95.31689453 254.54443359]
[81.03696442 255.78167725]
[78.37117004 270.54290771]
[75.70537567 285.30410767]
[74.03383636 300.21069336]
[73.36405182 315.19573975]
[72.69426727 330.18075562]
[72.02448273 345.16580200]
[71.35469055 360.15084839]
[73.24798584 375.03088379]
[77.64898682 389.37072754]
[82.04998016 403.71057129]
[86.45098114 418.05041504]
[90.85198212 432.39025879]
[105.54280090 429.30889893]
[120.45296478 427.57620239]
[135.45892334 427.20654297]
[150.43630981 428.20300293]
[165.26103210 430.55731201]
[179.81024170 434.24996948]
[193.96337891 439.25036621]
[207.60316467 445.51708984]
[220.61656189 452.99816895]
[232.89573669 461.63165283]
[244.33895874 471.34597778]
[254.85137939 482.06063843]
[264.34588623 493.68688965]
[272.74383545 506.12835693]
[279.97561646 519.28192139]
[285.98129272 533.03863525]
[290.71112061 547.28448486]
[294.12588501 561.90142822]
[296.19729614 576.76831055]
[296.90820312 591.76196289]
[296.25268555 606.75811768]
[294.23620605 621.63256836]
[290.87545776 636.26202393]
[286.19830322 650.52526855]
[280.24346924 664.30407715]
[273.06036377 677.48425293]
[264.70843506 689.95666504]
[255.25692749 701.61785889]
[244.78414917 712.37133789]
[233.37690735 722.12786865]
[221.12969971 730.80664062]
[208.14402771 738.33575439]
[194.52749634 744.65277100]
[180.39292908 749.70544434]
[165.85745239 753.45184326]
[151.04153442 755.86090088]
[136.06791687 756.91265869]
[121.06070709 756.59844971]
[106.14424133 754.92083740]
[91.44213104 751.89379883]
[77.07621002 747.54229736]
[63.16551590 741.90240479]
[49.82532120 735.02099609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[66 157]
[67 156]
[68 155]
[78 144]
[79 143]
[80 142]
[83 139]
[84 138]
[87 136]
[88 135]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 121]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
