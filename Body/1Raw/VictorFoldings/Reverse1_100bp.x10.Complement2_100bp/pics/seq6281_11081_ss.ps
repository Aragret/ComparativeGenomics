%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-6.06100368 547.82537842]
[-7.53946543 562.77423096]
[-10.95655823 577.40222168]
[-16.25381088 591.45904541]
[-23.34057808 604.70416260]
[-32.09560013 616.91088867]
[-42.36906433 627.87042236]
[-53.98517990 637.39514160]
[-66.74517822 645.32220459]
[-80.43071747 651.51580811]
[-94.80762482 655.87005615]
[-109.62989044 658.31042480]
[-124.64389038 658.79516602]
[-139.59269714 657.31604004]
[-154.22055054 653.89825439]
[-168.27711487 648.60034180]
[-181.52188110 641.51293945]
[-193.72819519 632.75732422]
[-204.68722534 622.48333740]
[-214.21142578 610.86676025]
[-222.13783264 598.10638428]
[-228.33079529 584.42053223]
[-232.68437195 570.04345703]
[-235.12405396 555.22106934]
[-235.60807800 540.20703125]
[-234.12820435 525.25830078]
[-230.70971680 510.63061523]
[-225.41111755 496.57427979]
[-218.32308960 483.32986450]
[-209.56690979 471.12396240]
[-199.29240417 460.16540527]
[-187.67538452 450.64178467]
[-174.91462708 442.71597290]
[-161.22850037 436.52365112]
[-146.85118103 432.17077637]
[-132.02867126 429.73181152]
[-117.01464081 429.24847412]
[-102.06596375 430.72906494]
[-87.43844604 434.14825439]
[-73.38238525 439.44750977]
[-66.30528259 426.22198486]
[-59.22817612 412.99645996]
[-52.15106964 399.77093506]
[-45.07396317 386.54541016]
[-37.99686050 373.31988525]
[-42.54624939 359.18344116]
[-35.55746078 345.67007446]
[-20.69902611 340.99407959]
[-13.62192154 327.76855469]
[-18.17131233 313.63214111]
[-11.18252277 300.11874390]
[3.67591119 295.44277954]
[10.75301647 282.21725464]
[17.83012199 268.99172974]
[24.10748291 255.36840820]
[29.56283951 241.39561462]
[28.48958015 238.03697205]
[28.98978806 233.99162292]
[31.36849785 230.00477600]
[35.58640289 226.92965698]
[41.66024017 213.21438599]
[47.73407364 199.49911499]
[45.81301880 184.72892761]
[58.47562408 175.24372864]
[64.54946136 161.52845764]
[70.62329102 147.81318665]
[76.69712830 134.09791565]
[82.77095795 120.38265228]
[88.84479523 106.66738892]
[94.50758362 92.77735901]
[99.75430298 78.72489166]
[105.00101471 64.67241669]
[107.00502777 49.80689240]
[105.66679382 34.86670685]
[104.32855988 19.92652130]
[102.99032593 4.98633623]
[101.65209198 -9.95384884]
[100.31385803 -24.89403343]
[91.37622070 -37.94888687]
[97.94719696 -51.31569672]
[96.60896301 -66.25588226]
[95.15954590 -81.18569183]
[93.59902191 -96.10429382]
[84.95220947 -83.84735107]
[70.78992462 -78.90470886]
[56.39435196 -83.11985016]
[47.13468170 -94.92063141]
[46.46453857 -109.90565491]
[54.63387299 -122.48587799]
[68.59572601 -127.96918488]
[83.14266968 -124.31044006]
[92.84950256 -112.87318420]
[93.07283020 -127.87152100]
[90.07154083 -136.49880981]
[93.41279602 -143.09106445]
[93.85940552 -158.08441162]
[86.53641510 -172.10882568]
[94.64922333 -184.60009766]
[95.09582520 -199.59344482]
[95.54243469 -214.58679199]
[81.97046661 -221.56994629]
[72.77926636 -233.75537109]
[69.79376984 -248.72364807]
[73.60673523 -263.50283813]
[83.46109772 -275.15847778]
[97.40027618 -281.37637329]
[112.65662384 -280.92193604]
[126.20098877 -273.88537598]
[135.34413147 -261.66384888]
[138.27066040 -246.68392944]
[134.39952087 -231.91989136]
[124.49933624 -220.30313110]
[110.53578186 -214.14018250]
[110.08917999 -199.14683533]
[109.64257050 -184.15348816]
[116.99750519 -171.20149231]
[108.85275269 -157.63780212]
[108.40614319 -142.64445496]
[108.07116699 -127.64819336]
[107.84783936 -112.64985657]
[108.51762390 -97.66481781]
[110.07814789 -82.74621582]
[113.90045929 -76.42073059]
[111.54914856 -67.59411621]
[112.88738251 -52.65393066]
[121.72930145 -40.66769791]
[115.25404358 -26.23226738]
[116.59227753 -11.29208279]
[117.93051147 3.64810205]
[119.26874542 18.58828735]
[120.60697937 33.52847290]
[121.94521332 48.46865845]
[127.38046265 34.48802567]
[135.40466309 21.81473541]
[145.71781921 10.92258835]
[157.93435669 2.21879458]
[171.59757996 -3.97124863]
[186.19664001 -7.41612148]
[201.18577576 -7.98703527]
[216.00459290 -5.66264582]
[230.09907532 -0.52985209]
[242.94229126 7.21945286]
[254.05409241 17.29555511]
[263.01904297 29.32175255]
[269.50201416 42.84843826]
[273.26062012 57.36990356]
[274.15429688 72.34325409]
[272.14971924 87.20870972]
[267.32174683 101.41049957]
[259.85095215 114.41768646]
[250.01657104 125.74398041]
[238.18629456 134.96595764]
[224.80241394 141.73883057]
[210.36529541 145.80938721]
[195.41467285 147.02546692]
[180.50949097 145.34159851]
[166.20698547 140.82070923]
[153.04187012 133.63185120]
[141.50633240 124.04377747]
[132.03163147 112.41492462]
[124.97198486 99.18006897]
[120.59133911 84.83399200]
[119.05348969 69.91913605]
[113.80677032 83.97161102]
[108.56005096 98.02407837]
[109.58567047 100.89420319]
[109.58963776 104.20094299]
[108.40822601 107.56660461]
[106.01953125 110.55832672]
[102.56005859 112.74122620]
[96.48622894 126.45648956]
[90.41239166 140.17175293]
[84.33856201 153.88702393]
[78.26472473 167.60229492]
[72.19089508 181.31755066]
[73.67750549 197.06877136]
[61.44934082 205.57295227]
[55.37550354 219.28822327]
[49.30167007 233.00349426]
[43.53563690 246.85096741]
[38.08028030 260.82376099]
[51.38545609 253.89756775]
[66.23729706 256.00061035]
[77.09643555 266.34851074]
[79.91268158 281.08175659]
[73.63565063 294.70523071]
[60.60650635 302.13769531]
[45.68481064 300.60702515]
[34.43597794 290.68411255]
[31.05564880 276.06884766]
[23.97854424 289.29437256]
[16.90143776 302.51989746]
[21.25449944 317.47610474]
[13.88890553 330.78787231]
[-0.39639390 334.84567261]
[-7.47349930 348.07119751]
[-3.12043834 363.02743530]
[-10.48603249 376.33917236]
[-24.77133179 380.39697266]
[-31.84843826 393.62249756]
[-38.92554092 406.84802246]
[-46.00264740 420.07357788]
[-53.07975388 433.29910278]
[-60.15686035 446.52462769]
[-47.94969940 455.27905273]
[-36.98969650 465.55200195]
[-27.46439171 477.16766357]
[-19.53677559 489.92727661]
[-13.34250164 503.61251831]
[-8.98756027 517.98925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 199]
[48 196]
[49 195]
[52 192]
[53 191]
[54 190]
[55 181]
[56 180]
[60 179]
[61 178]
[62 177]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 165]
[71 164]
[72 163]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[80 125]
[81 124]
[82 122]
[83 121]
[92 120]
[93 119]
[95 118]
[96 117]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
