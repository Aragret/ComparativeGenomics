%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[105.68184662 579.07385254]
[102.87541962 564.24053955]
[104.17617798 549.20025635]
[109.48760223 535.06903076]
[118.41555786 522.89556885]
[130.29751587 513.58312988]
[144.25177002 507.82278442]
[142.46931458 492.92904663]
[140.68684387 478.03533936]
[136.77078247 471.76745605]
[138.99041748 462.90682983]
[137.42990112 447.98822021]
[135.86936951 433.06961060]
[134.19783020 418.16305542]
[132.41535950 403.26931763]
[130.63290405 388.37561035]
[128.62889099 373.51007080]
[126.40377045 358.67602539]
[124.17864990 343.84197998]
[121.95352936 329.00793457]
[112.41385651 317.56924438]
[118.01842499 302.77398682]
[113.91747284 296.62548828]
[115.87231445 287.70269775]
[113.86830139 272.83715820]
[104.49998474 261.25769043]
[110.32421112 246.54753113]
[108.32019806 231.68200684]
[104.31124115 225.47312927]
[106.39871216 216.58042908]
[104.61624908 201.68670654]
[102.83377838 186.79298401]
[91.00252533 177.81762695]
[88.98268890 162.73867798]
[98.47708893 150.38983154]
[96.69461823 135.49610901]
[81.56997681 130.51611328]
[70.12228394 119.44791412]
[64.63543701 104.49968719]
[66.20412445 88.65373230]
[74.51536560 75.07144928]
[87.91100311 66.46263123]
[85.90699005 51.59709930]
[79.17995453 65.00407410]
[67.04696655 73.82397461]
[52.21856689 76.08641052]
[38.00745773 71.28594208]
[27.58844185 60.49502182]
[23.28914833 46.12435150]
[26.07005119 31.38438797]
[35.30989075 19.56806946]
[48.94446182 13.31519604]
[63.92776871 14.02267265]
[76.91249847 21.53244972]
[84.99784088 34.16684341]
[85.44445038 19.17349243]
[82.57193756 10.50247860]
[86.01097107 3.96070361]
[86.68075562 -11.02433491]
[87.35054016 -26.00937462]
[75.57889557 -16.71269417]
[60.66587448 -18.32573700]
[51.15434265 -29.92447662]
[52.49293518 -44.86463165]
[63.91484451 -54.58779907]
[78.87708282 -53.52410889]
[88.80828857 -42.28378677]
[90.81230164 -57.14931488]
[92.81631470 -72.01484680]
[94.82032776 -86.88037109]
[96.82434082 -101.74590302]
[98.82835388 -116.61142731]
[100.83236694 -131.47695923]
[102.83638000 -146.34248352]
[89.06599426 -152.52764893]
[77.60798645 -162.33256531]
[69.38538361 -174.95611572]
[65.05741119 -189.37059021]
[64.96662140 -204.40533447]
[69.11183929 -218.84185791]
[77.14889526 -231.51255798]
[88.41923523 -241.39512634]
[102.00385284 -247.69508362]
[116.79821014 -249.90963745]
[118.80222321 -264.77517700]
[120.80623627 -279.64068604]
[122.81025696 -294.50622559]
[124.81427002 -309.37173462]
[122.83004761 -314.19979858]
[122.89017487 -318.84194946]
[124.58150482 -322.55065918]
[127.25406647 -324.85058594]
[129.91986084 -339.61181641]
[132.14497375 -354.44586182]
[126.10238647 -369.06768799]
[135.29725647 -380.78533936]
[137.07972717 -395.67904663]
[138.75126648 -410.58563232]
[140.31179810 -425.50424194]
[141.87231445 -440.42285156]
[128.13108826 -446.78344727]
[117.20140839 -457.26300049]
[110.26884460 -470.72473145]
[108.08539581 -485.70843506]
[110.88790131 -500.58877563]
[118.37237549 -513.75164795]
[129.72694397 -523.76928711]
[143.71995544 -529.55493164]
[158.83355713 -530.48114014]
[173.42832947 -526.44738770]
[185.92114258 -517.89123535]
[194.95687866 -505.74072266]
[199.55540466 -491.31393433]
[199.21789551 -476.17575073]
[193.98097229 -461.96823120]
[184.41270447 -450.23251343]
[171.55096436 -442.24163818]
[156.79092407 -438.86230469]
[155.23039246 -423.94372559]
[153.66987610 -409.02511597]
[156.10044861 -402.04556274]
[151.97344971 -393.89660645]
[150.19097900 -379.00286865]
[156.36106873 -365.44635010]
[147.03869629 -352.66339111]
[148.66326904 -350.37890625]
[149.48080444 -347.31323242]
[149.18925476 -343.77059937]
[147.60211182 -340.15872192]
[144.68107605 -336.94601440]
[142.01528931 -322.18481445]
[139.67979431 -307.36773682]
[137.67578125 -292.50219727]
[135.67176819 -277.63668823]
[133.66775513 -262.77114868]
[131.66374207 -247.90562439]
[145.34353638 -241.85247803]
[156.77493286 -232.18013000]
[165.02597046 -219.66589355]
[169.42083740 -205.31925964]
[169.59519958 -190.30041504]
[165.52635193 -175.82641602]
[157.53584290 -163.07260132]
[146.26397705 -153.07708740]
[132.61859131 -146.65635681]
[117.70191193 -144.33847046]
[115.69789886 -129.47294617]
[113.69388580 -114.60741425]
[111.68987274 -99.74188995]
[109.68585968 -84.87635803]
[107.68183899 -70.01083374]
[105.67782593 -55.14530182]
[103.67381287 -40.27977371]
[102.33557892 -25.33958817]
[101.66579437 -10.35455036]
[100.99600983 4.63048887]
[100.43779755 19.62009811]
[99.99119568 34.61344910]
[100.77251434 49.59308624]
[102.77652740 64.45861053]
[116.09206390 68.18891907]
[126.98639679 76.70550537]
[133.82037354 88.72695923]
[135.56576538 102.44454956]
[131.95994568 115.79433441]
[123.54545593 126.76771545]
[111.58834076 133.71363831]
[113.37080383 148.60736084]
[125.51112366 158.36698914]
[127.10662842 173.49673462]
[117.72750092 185.01052856]
[119.50996399 199.90423584]
[121.29242706 214.79795837]
[123.18572235 229.67799377]
[125.18973541 244.54351807]
[134.70138550 257.18627930]
[128.73382568 270.83316040]
[130.73783875 285.69866943]
[132.85246277 300.54888916]
[142.55130005 313.04861450]
[136.78758240 326.78283691]
[139.01269531 341.61688232]
[141.23780823 356.45092773]
[143.46292114 371.28497314]
[147.27589417 376.68615723]
[147.72183228 382.35168457]
[145.52661133 386.59313965]
[147.30908203 401.48684692]
[149.09155273 416.38058472]
[153.21855164 424.52954102]
[150.78797913 431.50909424]
[152.34849548 446.42770386]
[153.90902710 461.34631348]
[155.58056641 476.25286865]
[157.36302185 491.14660645]
[159.14549255 506.04031372]
[174.06497192 508.34506226]
[187.80889893 514.59063721]
[199.35739136 524.31353760]
[207.85346985 536.79223633]
[212.66668701 551.10083008]
[213.43984985 566.17749023]
[210.11558533 580.90338135]
[202.94058228 594.18579102]
[192.44726562 605.03900146]
[179.41432190 612.65771484]
[164.80888367 616.47656250]
[149.71475220 616.21215820]
[135.25202942 611.88409424]
[122.49394226 603.81353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[11 193]
[12 192]
[13 191]
[14 189]
[15 188]
[16 187]
[17 184]
[18 183]
[19 182]
[20 181]
[22 179]
[24 178]
[25 177]
[27 175]
[28 174]
[30 173]
[31 172]
[32 171]
[35 168]
[36 167]
[42 160]
[43 159]
[55 158]
[56 157]
[58 156]
[59 155]
[60 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[92 131]
[93 130]
[94 125]
[96 123]
[97 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
