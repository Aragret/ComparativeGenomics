%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[82.33880615 651.69427490]
[70.57559204 661.09216309]
[57.11531830 667.83862305]
[42.54641724 671.63873291]
[27.50577545 672.32635498]
[12.65090847 669.87139893]
[-1.36879492 664.38128662]
[-13.94045258 656.09594727]
[-24.51448631 645.37756348]
[-32.62864304 632.69470215]
[-37.92821121 618.60186768]
[-40.18151093 603.71508789]
[-39.29004288 588.68518066]
[-35.29277420 574.16912842]
[-28.36444855 560.80151367]
[-18.80794334 549.16680908]
[-7.04102898 539.77355957]
[6.42189646 533.03240967]
[20.99229050 529.23803711]
[36.03319931 528.55627441]
[38.47892761 513.75701904]
[40.92465591 498.95776367]
[43.37038422 484.15847778]
[45.81610870 469.35922241]
[44.07104492 466.29537964]
[43.72327805 462.23410034]
[45.22545242 457.84127808]
[48.71569061 453.95986938]
[51.81980133 439.28457642]
[54.92390823 424.60925293]
[45.15637207 410.91860962]
[48.37609100 394.06784058]
[63.07041931 384.57595825]
[65.95568848 369.85604858]
[60.81098557 355.87817383]
[71.05828857 343.82397461]
[65.91358185 329.84609985]
[76.16088104 317.79190063]
[79.04615021 303.07202148]
[81.93142700 288.35214233]
[83.82471466 273.47210693]
[84.71752930 258.49868774]
[85.61035156 243.52528381]
[82.87054443 236.66122437]
[86.62956238 228.33610535]
[87.74520874 213.37765503]
[88.86085510 198.41920471]
[89.97650909 183.46075439]
[91.09215546 168.50228882]
[92.20780182 153.54383850]
[93.32345581 138.58538818]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[90.31004333 63.67556381]
[89.41722870 48.70215607]
[76.50894928 40.29486084]
[71.08962250 26.06516266]
[75.04166412 11.54464626]
[86.64724731 2.24687862]
[85.75443268 -12.72652721]
[84.86161804 -27.69993210]
[71.03883362 -31.47251892]
[59.07482147 -39.31788635]
[50.13202667 -50.45792389]
[45.07444000 -63.79518509]
[44.38415146 -78.02099609]
[48.11542130 -91.74386597]
[55.89065552 -103.62560272]
[66.93859100 -112.51178741]
[80.17077637 -117.54395294]
[79.50099182 -132.52899170]
[78.83120728 -147.51403809]
[77.38179016 -162.44384766]
[75.15666962 -177.27789307]
[65.45783997 -189.77761841]
[71.22156525 -203.51184082]
[61.33204269 -211.79194641]
[59.78412628 -224.19306946]
[66.86641693 -233.99957275]
[64.86240387 -248.86511230]
[55.35074615 -261.50784302]
[61.31830978 -275.15472412]
[59.31429672 -290.02026367]
[57.31028366 -304.88580322]
[55.30626678 -319.75131226]
[52.53160477 -323.09127808]
[51.10732651 -326.77038574]
[50.97424698 -330.32254028]
[51.92786026 -333.34863281]
[53.65282059 -335.55828857]
[52.53717041 -350.51675415]
[51.42152405 -365.47518921]
[36.76863098 -369.29248047]
[24.15052032 -377.66278076]
[14.93590164 -389.67816162]
[10.12431335 -404.03527832]
[10.23767757 -419.17681885]
[15.26369953 -433.46029663]
[24.65719223 -445.33636475]
[37.39921951 -453.51678467]
[52.10762405 -457.11422729]
[67.18695068 -455.73846436]
[81.00149536 -449.53869629]
[92.05277252 -439.18746948]
[99.14201355 -425.80758667]
[101.50023651 -410.85040283]
[98.87163544 -395.93835449]
[91.54134369 -382.68899536]
[80.30449677 -372.53952026]
[66.37997437 -366.59085083]
[67.49562836 -351.63238525]
[68.61127472 -336.67395020]
[70.17179871 -321.75534058]
[72.17581177 -306.88980103]
[74.17982483 -292.02429199]
[76.18383789 -277.15875244]
[85.55214691 -265.57928467]
[79.72792816 -250.86912537]
[81.73194122 -236.00358582]
[93.19107819 -222.71241760]
[86.05560303 -205.73695374]
[95.59528351 -194.29824829]
[89.99071503 -179.50300598]
[92.21583557 -164.66896057]
[101.06095123 -176.78356934]
[115.59317780 -180.50035095]
[129.16857910 -174.12001038]
[135.58065796 -160.55958557]
[131.89790344 -146.01870728]
[119.80401611 -137.14526367]
[104.82816315 -137.99607849]
[93.81624603 -148.18382263]
[94.48603058 -133.19877625]
[95.15581512 -118.21373749]
[110.23478699 -113.68452454]
[122.87278748 -104.24969482]
[131.53080750 -91.03527832]
[135.14663696 -75.62889862]
[133.26524353 -59.88910294]
[126.09581757 -45.72111511]
[114.48880768 -34.84624481]
[99.83502197 -28.59274864]
[100.72783661 -13.61934280]
[101.62065125 1.35406280]
[114.24886322 9.20684814]
[119.89839172 23.15485382]
[116.20839691 37.92771149]
[104.39063263 47.80934143]
[105.28344727 62.78274536]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[117.89284515 111.19672394]
[132.32421875 107.10579681]
[146.44337463 112.17030334]
[154.98423767 124.50130463]
[154.76126099 139.49964905]
[145.85762024 151.57131958]
[131.59414673 156.21388245]
[117.29077148 151.69577026]
[108.28190613 139.70103455]
[107.16625977 154.65948486]
[106.05060577 169.61795044]
[104.93495941 184.57640076]
[103.81931305 199.53485107]
[102.70365906 214.49330139]
[101.58801270 229.45175171]
[100.58375549 244.41810608]
[99.69094086 259.39151001]
[98.79811859 274.36489868]
[108.79769897 263.18420410]
[123.22588348 259.08206177]
[137.61193848 263.32958984]
[147.49818420 274.61062622]
[149.82127380 289.42965698]
[143.86135864 303.19479370]
[131.46519470 311.64080811]
[116.47386169 312.15057373]
[103.53258514 304.56616211]
[96.65131378 291.23739624]
[93.76604462 305.95730591]
[90.88076782 320.67718506]
[95.81909943 335.70794678]
[85.77817535 346.70925903]
[90.71650696 361.74002075]
[80.67558289 372.74133301]
[77.79031372 387.46121216]
[86.54134369 397.70007324]
[87.77951050 410.91662598]
[81.27587128 422.26498413]
[69.59921265 427.71337891]
[66.49510193 442.38867188]
[63.39099121 457.06399536]
[60.61538315 471.80493164]
[58.16965485 486.60421753]
[55.72392654 501.40347290]
[53.27819824 516.20275879]
[50.83246994 531.00201416]
[64.85433197 536.48663330]
[77.42925262 544.76702881]
[88.00749969 555.48126221]
[96.12664795 568.16088867]
[101.43175507 582.25164795]
[103.69091034 597.13757324]
[102.80535889 612.16784668]
[98.81379700 626.68548584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[28 197]
[29 196]
[30 195]
[33 191]
[34 190]
[36 188]
[38 186]
[39 185]
[40 184]
[41 174]
[42 173]
[43 172]
[45 171]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 156]
[53 155]
[54 153]
[55 152]
[56 151]
[57 150]
[61 146]
[62 145]
[63 144]
[72 136]
[73 135]
[74 134]
[75 126]
[76 125]
[78 123]
[81 121]
[82 120]
[84 118]
[85 117]
[86 116]
[87 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
