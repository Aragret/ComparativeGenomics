%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[168.67770386 584.06622314]
[162.75547791 597.97369385]
[152.99578857 609.51666260]
[140.26644897 617.66870117]
[125.69934082 621.70489502]
[110.58977509 621.26635742]
[96.28126526 616.39215088]
[84.04613495 607.51562500]
[74.97230530 595.42602539]
[69.86663055 581.19848633]
[69.18309021 566.09802246]
[72.98247528 551.46734619]
[80.92694092 538.60748291]
[92.31006622 528.66180420]
[106.11968231 522.51483154]
[121.12784576 520.71295166]
[123.79364014 505.95175171]
[126.45943451 491.19055176]
[129.01527405 476.40988159]
[131.46099854 461.61062622]
[133.90672302 446.81134033]
[136.35244751 432.01208496]
[138.68794250 417.19500732]
[140.80256653 402.34481812]
[142.69584656 387.46478271]
[144.47831726 372.57107544]
[146.26078796 357.67733765]
[147.59901428 342.73715210]
[148.49183655 327.76376343]
[149.38464355 312.79034424]
[147.71310425 297.88378906]
[143.52609253 283.47998047]
[139.33908081 269.07620239]
[135.15206909 254.67242432]
[130.96505737 240.26864624]
[120.51848602 234.16983032]
[116.91233826 222.20405579]
[122.60203552 210.62864685]
[118.62993622 196.16412354]
[114.65783691 181.69960022]
[110.68574524 167.23507690]
[106.71364594 152.77055359]
[102.74155426 138.30603027]
[98.76945496 123.84150696]
[85.04106903 118.60543060]
[76.97899628 106.32178497]
[77.63706970 91.64350891]
[86.76602173 80.13059235]
[75.65055847 68.87194824]
[79.74138641 54.55013275]
[75.76928711 40.08560944]
[71.79718781 25.62108612]
[67.82509613 11.15656185]
[63.85299683 -3.30796242]
[50.45492554 -15.94019127]
[55.55070877 -32.73304367]
[51.36369705 -47.13682556]
[40.08184052 -58.22872925]
[43.95898438 -72.60986328]
[30.38983154 -80.25942993]
[26.34879494 -94.92655945]
[33.72510910 -107.81552887]
[29.53809738 -122.21930695]
[25.35108566 -136.62309265]
[21.16407394 -151.02687073]
[16.97706223 -165.43064880]
[12.79005146 -179.83444214]
[1.88295925 -186.71907043]
[-1.30788076 -198.80221558]
[4.40075684 -209.46701050]
[0.42866081 -223.93153381]
[-3.54343534 -238.39605713]
[-7.51553154 -252.86058044]
[-10.56698608 -238.17424011]
[-17.58158684 -224.91545105]
[-28.00613213 -214.12986755]
[-41.01849747 -206.66807556]
[-55.59247589 -203.11856079]
[-70.57870483 -203.76121521]
[-84.79530334 -208.54539490]
[-97.12108612 -217.09379578]
[-106.58400726 -228.73222351]
[-112.43776703 -242.54286194]
[-114.22071075 -257.43652344]
[-111.79224396 -272.23861694]
[-105.34387207 -285.78182983]
[-95.38414764 -296.99807739]
[-82.69853210 -305.00277710]
[-68.28746796 -309.16464233]
[-53.28746796 -309.15548706]
[-38.88150024 -304.97598267]
[-26.20567894 -296.95578003]
[-16.25967026 -285.72738647]
[-9.82682323 -272.17300415]
[-9.38021755 -287.16635132]
[-9.04524136 -302.16259766]
[-8.82191372 -317.16094971]
[-8.59858608 -332.15930176]
[-22.67920303 -337.82504272]
[-33.75961304 -348.19754028]
[-40.34128189 -361.87402344]
[-41.53408813 -377.00482178]
[-37.17672348 -391.54367065]
[-27.85847664 -403.52426147]
[-14.83956909 -411.32635498]
[0.11929984 -413.89474487]
[14.99506664 -410.88211060]
[27.77590561 -402.69586182]
[36.73331451 -390.44314575]
[40.65587234 -375.78100586]
[39.01309204 -360.69241333]
[32.02714157 -347.21795654]
[20.64281654 -337.17996216]
[6.39975119 -331.93597412]
[6.17642355 -316.93762207]
[5.95309591 -301.93927002]
[8.99666119 -295.20440674]
[5.61313248 -286.71975708]
[5.16652632 -271.72640991]
[6.94899225 -256.83267212]
[10.92108822 -242.36814880]
[14.89318466 -227.90362549]
[18.86528015 -213.43910217]
[31.99739838 -201.79804993]
[27.19383430 -184.02145386]
[31.38084602 -169.61766052]
[35.56785583 -155.21388245]
[39.75486755 -140.81010437]
[43.94187927 -126.40631866]
[48.12889099 -112.00254059]
[61.26523590 -105.07635498]
[65.71665192 -90.52851868]
[58.36276627 -76.79687500]
[69.34513855 -66.73522949]
[65.76747894 -51.32383728]
[69.95449066 -36.92005539]
[80.40106964 -30.82123375]
[84.00721741 -18.85547256]
[78.31752014 -7.28005838]
[82.28961945 7.18446541]
[86.26171112 21.64898872]
[90.23381042 36.11351395]
[94.20590973 50.57803726]
[105.03726196 60.80207825]
[101.23054504 76.15849304]
[114.95893097 81.39456940]
[123.02100372 93.67821503]
[122.36293030 108.35649109]
[113.23397827 119.86940765]
[117.20607758 134.33393860]
[121.17816925 148.79846191]
[125.15026855 163.26298523]
[129.12236023 177.72750854]
[133.09446716 192.19203186]
[137.06655884 206.65655518]
[150.46463013 219.28878784]
[145.36885071 236.08163452]
[149.55586243 250.48541260]
[153.74287415 264.88919067]
[157.92988586 279.29296875]
[162.11689758 293.69677734]
[164.78520203 278.93600464]
[170.99404907 265.28131104]
[180.36375427 253.56771851]
[192.32136536 244.51147461]
[206.13566589 238.66639709]
[220.96191406 236.38990784]
[235.89347839 237.82119751]
[250.01727295 242.87277222]
[262.46963501 251.23571777]
[272.48910522 262.39862061]
[279.46295166 275.67886353]
[282.96475220 290.26440430]
[282.78039551 305.26327515]
[278.92111206 319.75830078]
[271.62289429 332.86309814]
[261.33206177 343.77633667]
[248.67788696 351.83065796]
[234.43418884 356.53350830]
[219.47195435 357.59735107]
[204.70614624 354.95709229]
[191.03970337 348.77420044]
[179.30831909 339.42675781]
[170.22938538 327.48635864]
[164.35806274 313.68316650]
[163.46524048 328.65658569]
[162.57241821 343.62997437]
[164.65283203 347.44125366]
[165.34283447 351.32565308]
[164.79016113 354.83703613]
[163.27227783 357.62319946]
[161.15449524 359.45980835]
[159.37203979 374.35351562]
[157.58956909 389.24725342]
[159.67703247 398.13995361]
[155.66809082 404.34881592]
[157.62292480 413.27163696]
[153.52197266 419.42013550]
[155.34375000 428.37106323]
[151.15171814 434.45779419]
[148.70599365 449.25708008]
[146.26026917 464.05633545]
[143.81454468 478.85562134]
[145.50283813 487.83267212]
[141.22065735 493.85635376]
[138.55485535 508.61755371]
[135.88905334 523.37878418]
[149.31893921 530.31634521]
[160.10609436 540.90539551]
[167.29138184 554.20440674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 207]
[17 206]
[18 205]
[19 203]
[20 202]
[21 201]
[22 200]
[23 198]
[24 196]
[25 194]
[26 193]
[27 192]
[28 187]
[29 186]
[30 185]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[48 145]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[56 136]
[57 135]
[59 133]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[70 123]
[71 122]
[72 121]
[73 120]
[94 119]
[95 118]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
