%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[240.79969788 381.48339844]
[244.54600525 366.94613647]
[249.69920349 352.84606934]
[256.20962524 339.31903076]
[264.01461792 326.49526978]
[273.03897095 314.49829102]
[283.19583130 303.44363403]
[273.19766235 292.26165771]
[258.94647217 287.93118286]
[255.51591492 272.48635864]
[245.51774597 261.30438232]
[235.51957703 250.12242126]
[225.52140808 238.94044495]
[215.52322388 227.75846863]
[205.44209290 216.65122986]
[195.27854919 205.61935425]
[184.95187378 194.74002075]
[174.46437073 184.01564026]
[163.97686768 173.29125977]
[153.48936462 162.56687927]
[143.00187683 151.84249878]
[132.51437378 141.11811829]
[121.78999329 130.63063049]
[110.83408356 120.38523102]
[99.87817383 110.13983917]
[92.30773163 107.37200165]
[88.83685303 99.65941620]
[78.03469849 89.25204468]
[62.72826004 85.24910736]
[58.93112564 70.84664154]
[48.12896729 60.43927002]
[37.32681274 50.03189850]
[26.52465630 39.62452316]
[26.89156532 54.62003708]
[17.63232040 66.42115784]
[2.98012590 69.63256836]
[-10.36623478 62.78606033]
[-16.30498314 49.01176453]
[-12.12100506 34.60710144]
[0.27284196 26.15768814]
[15.21193790 27.52726936]
[5.55112696 16.05256844]
[-4.10968304 4.57786894]
[-16.87033653 2.69942427]
[-24.68061638 -7.05676746]
[-23.77933311 -19.11969566]
[-33.26823044 -30.73695946]
[-42.75712967 -42.35422134]
[-60.12274170 -48.47933578]
[-62.26321030 -65.89730072]
[-71.92401886 -77.37199402]
[-81.58483124 -88.84669495]
[-94.00280762 -80.40881348]
[-107.22256470 -73.29249573]
[-121.10397339 -67.57318115]
[-135.49987793 -63.31151199]
[-150.25769043 -60.55264664]
[-165.22093201 -59.32584000]
[-180.23103333 -59.64409637]
[-195.12882996 -61.50403976]
[-209.75643921 -64.88595581]
[-223.95877075 -69.75399017]
[-237.58528137 -76.05654907]
[-250.49151611 -83.72680664]
[-262.54067993 -92.68346405]
[-273.60504150 -102.83157349]
[-283.56729126 -114.06356812]
[-292.32183838 -126.26036072]
[-299.77587891 -139.29267883]
[-305.85040283 -153.02236938]
[-310.48098755 -167.30387878]
[-313.61859131 -181.98582458]
[-315.22991943 -196.91256714]
[-315.29791260 -211.92587280]
[-313.82183838 -226.86659241]
[-310.81735229 -241.57635498]
[-306.31628418 -255.89921570]
[-300.36633301 -269.68334961]
[-293.03063965 -282.78265381]
[-284.38690186 -295.05822754]
[-274.52679443 -306.37997437]
[-263.55480957 -316.62789917]
[-251.58724976 -325.69329834]
[-238.75100708 -333.48013306]
[-225.18212891 -339.90585327]
[-211.02447510 -344.90231323]
[-196.42810059 -348.41656494]
[-181.54774475 -350.41134644]
[-166.54115295 -350.86553955]
[-151.56741333 -349.77429199]
[-136.78523254 -347.14920044]
[-122.35131073 -343.01809692]
[-108.41867065 -337.42474365]
[-95.13500214 -330.42843628]
[-82.64112091 -322.10336304]
[-71.06946564 -312.53775024]
[-60.54269409 -301.83303833]
[-51.17241287 -290.10266113]
[-43.05793762 -277.47097778]
[-36.28529739 -264.07189941]
[-30.92627907 -250.04745483]
[-27.03769302 -235.54631042]
[-24.66076088 -220.72219849]
[-23.82067871 -205.73226929]
[-24.52635193 -190.73539734]
[-26.77030182 -175.89057922]
[-30.52873993 -161.35516357]
[-35.76182175 -147.28324890]
[-42.41408157 -133.82398987]
[-50.41499329 -121.12007904]
[-59.67974472 -109.30617523]
[-70.11013031 -98.50750732]
[-60.44931793 -87.03280640]
[-50.78850937 -75.55810547]
[-38.76712418 -74.21169281]
[-30.62463188 -64.73099518]
[-31.13986778 -51.84312057]
[-21.65096855 -40.22585678]
[-12.16207027 -28.60859489]
[4.55902290 -23.28206062]
[7.36501694 -5.08294153]
[17.02582741 6.39175892]
[26.68663788 17.86645889]
[36.93202972 28.82236862]
[47.73418427 39.22974014]
[58.53634262 49.63711548]
[69.33850098 60.04448700]
[83.87229156 63.30301666]
[88.44207001 78.44989014]
[99.24422455 88.85726166]
[110.12356567 99.18392944]
[121.07947540 109.42932129]
[132.03538513 119.67471313]
[137.12020874 120.85436249]
[140.86920166 123.59268188]
[142.91233826 127.11981201]
[143.23875427 130.63063049]
[153.72625732 141.35499573]
[164.21374512 152.07937622]
[174.70124817 162.80375671]
[185.18875122 173.52813721]
[195.67625427 184.25251770]
[201.92938232 186.39959717]
[205.60737610 190.73196411]
[206.31042480 195.45581055]
[216.47396851 206.48768616]
[224.59017944 210.67874146]
[226.70520020 217.76029968]
[236.70336914 228.94227600]
[246.70155334 240.12425232]
[256.69970703 251.30621338]
[266.69790649 262.48818970]
[281.66421509 267.61846924]
[284.37960815 282.26348877]
[294.37780762 293.44543457]
[306.49545288 284.58377075]
[319.42333984 276.95251465]
[333.03698730 270.62515259]
[347.20529175 265.66265869]
[361.79177856 262.11282349]
[376.65594482 260.00982666]
[391.65469360 259.37393188]
[406.64355469 260.21124268]
[421.47814941 262.51370239]
[436.01565552 266.25912476]
[450.11599731 271.41146851]
[463.64346313 277.92108154]
[476.46768188 285.72531128]
[488.46520996 294.74896240]
[499.52047729 304.90512085]
[509.52700806 316.09600830]
[518.38848877 328.21383667]
[526.01947021 341.14187622]
[532.34655762 354.75567627]
[537.30871582 368.92407227]
[540.85827637 383.51062012]
[542.96099854 398.37484741]
[543.59661865 413.37359619]
[542.75897217 428.36245728]
[540.45623779 443.19699097]
[536.71051025 457.73440552]
[531.55786133 471.83468628]
[525.04797363 485.36196899]
[517.24353027 498.18606567]
[508.21963501 510.18341064]
[498.06323242 521.23846436]
[486.87216187 531.24481201]
[474.75415039 540.10601807]
[461.82595825 547.73675537]
[448.21203613 554.06353760]
[434.04354858 559.02545166]
[419.45693970 562.57470703]
[404.59265137 564.67712402]
[389.59387207 565.31243896]
[374.60507202 564.47448730]
[359.77053833 562.17144775]
[345.23321533 558.42541504]
[331.13305664 553.27252197]
[317.60586548 546.76239014]
[304.78195190 538.95764160]
[292.78479004 529.93353271]
[281.72991943 519.77691650]
[271.72384644 508.58563232]
[262.86288452 496.46743774]
[255.23239136 483.53909302]
[248.90586853 469.92504883]
[243.94422913 455.75646973]
[240.39526367 441.16976929]
[238.29315186 426.30545044]
[237.65815735 411.30667114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 155]
[8 154]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 146]
[16 145]
[17 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 133]
[24 132]
[25 131]
[27 130]
[28 129]
[30 127]
[31 126]
[32 125]
[33 124]
[41 123]
[42 122]
[43 121]
[46 119]
[47 118]
[48 117]
[50 114]
[51 113]
[52 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
