%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[24.76444817 517.68945312]
[31.38680649 531.25585938]
[34.10228729 546.10607910]
[32.70938492 561.13812256]
[27.31145859 575.23651123]
[18.30907440 587.35510254]
[6.37026691 596.59454346]
[-7.61902475 602.26922607]
[-22.62070274 603.95806885]
[-37.52154160 601.53576660]
[-51.21580124 595.18206787]
[-62.68727493 585.36840820]
[-71.08470917 572.82305908]
[-75.78495026 558.47698975]
[-76.43920898 543.39471436]
[-72.99894714 528.69549561]
[-65.71944427 515.47009277]
[-55.14088821 504.69989014]
[-42.04828262 497.18417358]
[-27.41317940 493.48059082]
[-12.32160759 493.86404419]
[-7.92060947 479.52416992]
[-3.51961160 465.18432617]
[0.88138652 450.84448242]
[5.28238440 436.50463867]
[0.43718809 419.63778687]
[14.02184963 407.20642090]
[10.14470577 392.82528687]
[21.42656326 381.73339844]
[25.61357498 367.32962036]
[29.80058670 352.92584229]
[33.98759842 338.52203369]
[25.26537895 324.14285278]
[29.72948074 307.57821655]
[45.08908081 299.20553589]
[49.06118011 284.74099731]
[36.56460190 270.84393311]
[34.95602417 252.07318115]
[45.06578445 235.99829102]
[62.96191025 229.21122742]
[66.28417206 214.58375549]
[69.60643005 199.95629883]
[72.92868805 185.32884216]
[76.25094604 170.70138550]
[79.57320404 156.07391357]
[71.44280243 143.64685059]
[74.60367584 128.76519775]
[87.69345856 120.32154083]
[91.01571655 105.69407654]
[93.24083710 90.86003876]
[94.35648346 75.90158081]
[86.54649353 65.63674927]
[87.78366852 53.20078659]
[96.86204529 45.20643616]
[98.20027924 30.26625252]
[99.53851318 15.32606792]
[100.87674713 0.38588285]
[102.21498108 -14.55430222]
[90.03995514 -5.79252720]
[75.21383667 -8.06986141]
[66.22970581 -20.08174515]
[68.23407745 -34.94722366]
[80.07875824 -44.15068054]
[94.97857666 -42.41995239]
[104.39796448 -30.74739265]
[107.06375885 -45.50860977]
[109.72955322 -60.26982498]
[104.56798553 -75.22538757]
[114.44400787 -86.37498474]
[117.10980225 -101.13619995]
[103.48661041 -94.85857391]
[90.01673126 -101.45875549]
[86.62966919 -116.07135010]
[95.82222748 -127.92448425]
[110.81800079 -128.28047180]
[120.56223297 -116.87849426]
[124.31853485 -131.40055847]
[128.07482910 -145.92260742]
[120.31536865 -159.42921448]
[124.33166504 -174.10314941]
[137.25596619 -181.41737366]
[133.22103882 -196.71540833]
[143.89897156 -207.09957886]
[147.65527344 -221.62164307]
[151.41157532 -236.14369202]
[155.16787720 -250.66575623]
[141.13246155 -256.00152588]
[127.76922607 -262.84893799]
[115.24038696 -271.12487793]
[103.69802856 -280.72891235]
[93.28226471 -291.54440308]
[84.11954498 -303.44009399]
[76.32107544 -316.27160645]
[69.98153687 -329.88311768]
[65.17788696 -344.10943604]
[61.96842957 -358.77786255]
[60.39213181 -373.71032715]
[60.46812057 -388.72555542]
[62.19547653 -403.64129639]
[65.55323792 -418.27648926]
[70.50063324 -432.45346069]
[76.97761536 -446.00012207]
[84.90554810 -458.75201416]
[94.18820953 -470.55435181]
[104.71290588 -481.26388550]
[116.35187531 -490.75057983]
[128.96383667 -498.89932251]
[142.39569092 -505.61111450]
[156.48439026 -510.80456543]
[171.05891418 -514.41656494]
[185.94233704 -516.40332031]
[200.95397949 -516.74066162]
[215.91160583 -515.42456055]
[230.63368225 -512.47088623]
[244.94146729 -507.91561890]
[258.66128540 -501.81399536]
[271.62655640 -494.24008179]
[283.67996216 -485.28582764]
[294.67514038 -475.05990601]
[304.47863770 -463.68646240]
[312.97143555 -451.30358887]
[320.05041504 -438.06158447]
[325.62969971 -424.12118530]
[329.64154053 -409.65161133]
[332.03720093 -394.82852173]
[332.78765869 -379.83184814]
[331.88375854 -364.84365845]
[329.33648682 -350.04586792]
[325.17678833 -335.61810303]
[319.45510864 -321.73553467]
[312.24096680 -308.56668091]
[303.62188721 -296.27136230]
[293.70248413 -284.99887085]
[282.60324097 -274.88601685]
[270.45883179 -266.05560303]
[257.41668701 -258.61477661]
[243.63514709 -252.65388489]
[229.28149414 -248.24526978]
[214.52996826 -245.44247437]
[199.55964661 -244.27951050]
[184.55223083 -244.77049255]
[169.68994141 -246.90945435]
[165.93363953 -232.38739014]
[162.17733765 -217.86534119]
[158.42103577 -203.34327698]
[162.72463989 -189.08395386]
[151.77803040 -177.66107178]
[159.53482056 -164.99743652]
[155.93228149 -150.21649170]
[142.59689331 -142.16630554]
[138.84059143 -127.64424896]
[135.08428955 -113.12219238]
[131.87101746 -98.47040558]
[129.20523071 -83.70919037]
[134.55746460 -69.80944824]
[124.49077606 -57.60403061]
[121.82498169 -42.84281158]
[119.15917969 -28.08159637]
[117.15516663 -13.21606827]
[115.81693268 1.72411704]
[114.47869873 16.66430283]
[113.14046478 31.60448647]
[111.80223083 46.54467392]
[120.03298950 62.04375458]
[109.31494141 77.01723480]
[108.19928741 91.97568512]
[117.92494202 80.55589294]
[132.02407837 75.43588257]
[146.81120300 77.95400238]
[158.42100525 87.45202637]
[163.81871033 101.44719696]
[161.59336853 116.28121185]
[152.32667542 128.07649231]
[138.44093323 133.74977112]
[123.56583405 131.81808472]
[111.58969116 122.78635406]
[105.64318085 109.01634216]
[102.32092285 123.64379883]
[110.47908783 136.91339111]
[106.90146637 151.70039368]
[94.20066833 159.39617920]
[90.87841034 174.02363586]
[87.55614471 188.65109253]
[84.23388672 203.27856445]
[80.91162872 217.90602112]
[77.58937073 232.53347778]
[86.52617645 239.71315002]
[92.11312866 249.66435242]
[93.57647705 260.93069458]
[90.74278259 271.87963867]
[84.05848694 280.93893433]
[74.52008820 286.82257080]
[63.52570343 288.71310425]
[59.55360794 303.17761230]
[67.51886749 314.03897095]
[67.77060699 327.31103516]
[60.44092941 338.14422607]
[48.39138031 342.70904541]
[44.20436859 357.11285400]
[40.01735687 371.51663208]
[35.83034515 385.92041016]
[39.40800476 401.33178711]
[28.42563248 411.39343262]
[33.94235229 423.05227661]
[30.15845108 434.96301270]
[19.62223244 440.90563965]
[15.22123337 455.24548340]
[10.82023525 469.58532715]
[6.41923761 483.92517090]
[2.01823950 498.26501465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[27 203]
[29 201]
[30 200]
[31 199]
[32 198]
[35 194]
[36 193]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[48 178]
[49 177]
[50 166]
[51 165]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[65 158]
[66 157]
[67 156]
[69 154]
[70 153]
[76 152]
[77 151]
[78 150]
[81 147]
[83 145]
[84 144]
[85 143]
[86 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
