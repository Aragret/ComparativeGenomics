%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[186.88272095 471.64639282]
[183.34304810 457.07000732]
[179.80337524 442.49362183]
[176.26370239 427.91726685]
[172.61561584 413.36764526]
[158.71272278 408.09054565]
[150.48577881 395.48971558]
[151.26528931 380.28292847]
[160.96162415 368.31268311]
[157.20532227 353.79061890]
[153.44902039 339.26855469]
[149.69271851 324.74649048]
[139.01478577 314.36233521]
[143.04971313 299.06430054]
[132.37178040 288.68011475]
[136.40670776 273.38208008]
[132.65040588 258.86001587]
[128.89410400 244.33796692]
[125.13780975 229.81590271]
[121.38150787 215.29383850]
[116.66315460 209.60534668]
[117.67910767 200.52758789]
[114.13943481 185.95121765]
[110.59976196 171.37484741]
[106.95167542 156.82522583]
[103.19537354 142.30316162]
[99.43907166 127.78110504]
[82.93076324 121.92591095]
[73.20517731 107.35811615]
[74.12693024 89.86646271]
[85.32975006 76.40152740]
[81.14273834 61.99774170]
[69.86087799 50.90584183]
[73.73802185 36.52470779]
[62.45616913 25.43280602]
[66.33331299 11.05167198]
[62.14630127 -3.35210991]
[57.95928955 -17.75589180]
[53.77227783 -32.15967560]
[41.30004120 -37.24474716]
[34.13829422 -48.42149734]
[34.71295166 -61.48870468]
[42.59037781 -71.68555450]
[38.61828232 -86.15007782]
[32.34091949 -99.77339172]
[23.92630196 -112.19088745]
[15.51168346 -124.60838318]
[7.09706450 -137.02587891]
[-1.31755412 -149.44337463]
[-9.73217297 -161.86087036]
[-18.14679146 -174.27836609]
[-16.63448715 -159.35479736]
[-19.98563194 -144.73391724]
[-27.84657669 -131.95872498]
[-39.38773346 -122.37741089]
[-53.39113617 -117.00109863]
[-68.37897491 -116.39717865]
[-82.76954651 -120.62937927]
[-95.04417419 -129.25105286]
[-103.90749359 -141.35235596]
[-108.42414093 -155.65620422]
[-108.11745453 -170.65307617]
[-103.01980591 -184.76029968]
[-93.66915894 -196.48913574]
[-81.05230713 -204.60177612]
[-66.50074768 -208.24211121]
[-51.55012894 -207.02595520]
[-37.77823257 -201.08163452]
[-26.63831711 -191.03634644]
[-31.67523384 -205.16537476]
[-36.81719208 -219.25651550]
[-42.06391144 -233.30897522]
[-47.31063080 -247.36145020]
[-52.55734634 -261.41390991]
[-67.28799438 -258.42150879]
[-82.30540466 -257.77044678]
[-97.23976135 -259.47677612]
[-111.72328949 -263.49844360]
[-125.39932251 -269.73645020]
[-137.93107605 -278.03713989]
[-149.00993347 -288.19613647]
[-158.36309814 -299.96325684]
[-165.76019287 -313.04870605]
[-171.01910400 -327.13027954]
[-174.01029968 -341.86117554]
[-174.66012573 -356.87863159]
[-172.95257568 -371.81286621]
[-168.92970276 -386.29605103]
[-162.69058228 -399.97155762]
[-154.38883972 -412.50262451]
[-144.22892761 -423.58065796]
[-132.46104431 -432.93283081]
[-119.37496948 -440.32885742]
[-105.29296875 -445.58660889]
[-90.56182861 -448.57659912]
[-75.54431152 -449.22518921]
[-60.61023712 -447.51638794]
[-46.12737274 -443.49234009]
[-32.45236969 -437.25207520]
[-19.92198753 -428.94931030]
[-8.84479904 -418.78848267]
[0.50641006 -407.01980591]
[7.90135860 -393.93313599]
[13.15793896 -379.85070801]
[16.14670181 -365.11932373]
[16.79404831 -350.10174561]
[15.08403683 -335.16781616]
[11.05877686 -320.68527222]
[4.81739330 -307.01080322]
[-3.48641229 -294.48110962]
[-13.64815235 -283.40475464]
[-25.41758537 -274.05450439]
[-38.50487518 -266.66064453]
[-33.25815964 -252.60816956]
[-28.01144028 -238.55569458]
[-22.76472092 -224.50323486]
[-17.48017120 -219.33647156]
[-17.54620361 -210.20228577]
[-12.50928688 -196.07325745]
[-5.72929573 -182.69297791]
[2.68532276 -170.27548218]
[11.09994125 -157.85798645]
[19.51456070 -145.44049072]
[27.92917824 -133.02299500]
[36.34379578 -120.60550690]
[44.75841522 -108.18801117]
[42.79824448 -123.05937958]
[44.70115280 -137.93818665]
[50.34093094 -151.83757019]
[59.34350586 -163.83564758]
[71.11177826 -173.13659668]
[84.86518860 -179.12355042]
[99.69153595 -181.39941406]
[114.60742950 -179.81321716]
[128.62356567 -174.47016907]
[140.81028748 -165.72468567]
[150.35931396 -154.15678406]
[156.63726807 -140.53375244]
[159.22778320 -125.75913239]
[157.95901489 -110.81288147]
[152.91513062 -96.68634033]
[144.43066406 -84.31645966]
[133.06837463 -74.52369690]
[119.58186340 -67.95756531]
[104.86564636 -65.05357361]
[89.89581299 -66.00433350]
[75.66524506 -70.74678802]
[63.11780167 -78.96638489]
[53.08280563 -90.12216949]
[57.05490112 -75.65764618]
[72.01352692 -67.97139740]
[76.88061523 -51.52067566]
[68.17605591 -36.34668350]
[72.36306763 -21.94290352]
[76.55007935 -7.53912115]
[80.73709106 6.86466074]
[91.71946716 16.92630768]
[88.14180756 32.33769608]
[99.12418365 42.39934158]
[95.54652405 57.81072998]
[99.73353577 72.21451569]
[111.52969360 74.71817780]
[121.15435791 81.98341370]
[126.79482269 92.64188385]
[127.38875580 104.68618011]
[122.82430267 115.84788513]
[113.96112823 124.02480316]
[117.71743011 138.54685974]
[121.47373199 153.06892395]
[126.65244293 160.59346008]
[125.17613983 167.83517456]
[128.71580505 182.41154480]
[132.25547791 196.98791504]
[135.90356445 211.53753662]
[139.65986633 226.05960083]
[143.41616821 240.58166504]
[147.17247009 255.10371399]
[150.92877197 269.62576294]
[161.87538147 281.04867554]
[157.57177734 295.30798340]
[168.51838684 306.73086548]
[164.21478271 320.99020386]
[167.97108459 335.51223755]
[171.72738647 350.03430176]
[175.48368835 364.55636597]
[189.76806641 370.32373047]
[197.82328796 383.24530029]
[196.73809814 398.25485229]
[187.13768005 409.61132812]
[192.31639099 417.13589478]
[190.84007263 424.37759399]
[194.37974548 438.95394897]
[197.91941833 453.53033447]
[201.45909119 468.10671997]
[216.53829956 469.48376465]
[230.35232544 475.68469238]
[241.40272522 486.03686523]
[248.49082947 499.41735840]
[250.84779358 514.37475586]
[248.21792603 529.28656006]
[240.88650513 542.53527832]
[229.64880371 552.68383789]
[215.72378540 558.63128662]
[200.62193298 559.73260498]
[185.98138428 555.86822510]
[173.39024353 547.45745850]
[164.21430969 535.41247559]
[159.44889832 521.03997803]
[159.61093140 505.89886475]
[164.68284607 491.63162231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 189]
[9 185]
[10 184]
[11 183]
[12 182]
[14 180]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[22 173]
[23 172]
[24 171]
[25 169]
[26 168]
[27 167]
[31 161]
[32 160]
[34 158]
[36 156]
[37 155]
[38 154]
[39 153]
[43 150]
[44 149]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[69 119]
[70 118]
[71 116]
[72 115]
[73 114]
[74 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
