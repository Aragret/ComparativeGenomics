%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[9.67350292 617.30578613]
[17.10567474 630.41528320]
[21.31366730 644.88562012]
[22.07054901 659.93627930]
[19.33550453 674.75573730]
[13.25602818 688.54473877]
[4.15998030 700.55969238]
[-7.46210098 710.15258789]
[-20.98345184 716.80615234]
[-35.67488098 720.16156006]
[-50.74410248 720.03778076]
[-65.37844849 716.44158936]
[-78.78871155 709.56689453]
[-90.25168610 699.78442383]
[-99.14919281 687.62170410]
[-105.00139618 673.73474121]
[-107.49269867 658.87237549]
[-106.48875427 643.83612061]
[-102.04368591 629.43688965]
[-94.39722443 616.45117188]
[-83.96173859 605.57928467]
[-71.29998016 597.40759277]
[-57.09480286 592.37677002]
[-42.11226654 590.75799561]
[-27.16035652 592.63873291]
[-21.91363716 578.58630371]
[-16.66691971 564.53381348]
[-11.42020130 550.48132324]
[-6.17348337 536.42889404]
[-0.92676514 522.37640381]
[4.00482845 508.21026611]
[8.61883736 493.93753052]
[1.62954664 480.83465576]
[6.10548782 466.29434204]
[19.89638138 459.05215454]
[24.51038933 444.77944946]
[29.12439919 430.50671387]
[33.73840714 416.23397827]
[38.35241699 401.96124268]
[42.96642685 387.68850708]
[47.58043671 373.41577148]
[52.08806610 359.10906982]
[56.48906326 344.76922607]
[59.81132126 330.14178467]
[62.03643799 315.30773926]
[64.04045105 300.44219971]
[65.82292175 285.54849243]
[67.60538483 270.65475464]
[65.27899933 263.63980103]
[69.52686310 255.55317688]
[71.53088379 240.68765259]
[64.44859314 230.88113403]
[65.99650574 218.48002625]
[75.88602448 210.19992065]
[78.11114502 195.36587524]
[80.33626556 180.53182983]
[82.56137848 165.69778442]
[84.78649902 150.86373901]
[87.01161194 136.02969360]
[89.23673248 121.19564819]
[91.46184540 106.36161041]
[92.46611023 91.39526367]
[92.24278259 76.39692688]
[79.46926880 64.44465637]
[79.29551697 47.28993225]
[91.34066010 35.55310059]
[90.89405823 20.55974960]
[90.44744873 5.56640053]
[90.00084686 -9.42694950]
[89.55423737 -24.42029953]
[88.88445282 -39.40533829]
[87.99163818 -54.37874222]
[78.88027191 -63.50813293]
[78.44490051 -75.99790192]
[86.37384033 -85.13346100]
[85.70405579 -100.11849976]
[85.03427124 -115.10353851]
[76.68847656 -128.54444885]
[83.84975433 -141.60452271]
[83.17996979 -156.58955383]
[74.83418274 -170.03048706]
[81.99546051 -183.09054565]
[81.21413422 -198.07019043]
[80.32131958 -213.04359436]
[79.42850494 -228.01699829]
[78.42424774 -242.98333740]
[77.30859375 -257.94180298]
[76.19294739 -272.90023804]
[64.50052643 -283.19223022]
[63.58219147 -298.37811279]
[73.46608734 -309.46163940]
[72.35043335 -324.42010498]
[71.23478699 -339.37854004]
[70.11914062 -354.33700562]
[55.46624756 -358.15426636]
[42.84813690 -366.52456665]
[33.63351822 -378.53994751]
[28.82192802 -392.89709473]
[28.93529320 -408.03860474]
[33.96131516 -422.32208252]
[43.35480881 -434.19818115]
[56.09683609 -442.37860107]
[70.80524445 -445.97604370]
[85.88455963 -444.60025024]
[99.69911194 -438.40051270]
[110.75038910 -428.04925537]
[117.83963013 -414.66937256]
[120.19785309 -399.71218872]
[117.56925201 -384.80014038]
[110.23896027 -371.55078125]
[99.00210571 -361.40130615]
[85.07759094 -355.45263672]
[86.19323730 -340.49420166]
[87.30889130 -325.53573608]
[88.42453766 -310.57730103]
[99.84322357 -301.08258057]
[101.18773651 -285.92849731]
[91.15140533 -274.01589966]
[92.26705170 -259.05743408]
[93.38269806 -244.09898376]
[97.01498413 -237.66250610]
[94.40190887 -228.90980530]
[95.29473114 -213.93640137]
[96.18754578 -198.96299744]
[99.72359467 -192.47314453]
[96.98049927 -183.76033020]
[105.27838135 -171.39123535]
[98.16500854 -157.25933838]
[98.83479309 -142.27430725]
[107.13268280 -129.90521240]
[100.01931000 -115.77332306]
[100.68909454 -100.78828430]
[101.35887909 -85.80324554]
[111.58654022 -71.54273987]
[102.96504211 -55.27156067]
[103.85785675 -40.29815292]
[106.77192688 -36.51433945]
[107.33995819 -30.85975075]
[104.54759216 -24.86690521]
[104.99419403 -9.87355518]
[105.44080353 5.11979437]
[105.88740540 20.11314392]
[106.33401489 35.10649490]
[116.85650635 42.54333878]
[121.23979187 54.86685181]
[117.67248535 67.65296936]
[107.24111938 76.17359924]
[107.46444702 91.17193604]
[115.73698425 78.65933990]
[128.83207703 71.34370422]
[143.82426453 70.85937500]
[157.36422729 77.31454468]
[166.42712402 89.26711273]
[168.98828125 104.04685211]
[164.47550964 118.35191345]
[153.89698792 128.98652649]
[139.61599731 133.57489014]
[124.82292175 131.09193420]
[112.82258606 122.09238434]
[106.29589081 108.58672333]
[104.07077789 123.42076874]
[101.84565735 138.25480652]
[99.62053680 153.08885193]
[97.39542389 167.92289734]
[95.17030334 182.75694275]
[92.94519043 197.59098816]
[90.72006989 212.42503357]
[97.85554504 229.40049744]
[86.39640808 242.69166565]
[84.39239502 257.55718994]
[82.49909973 272.43722534]
[80.71663666 287.33096313]
[78.93417358 302.22467041]
[81.18074799 308.44274902]
[80.11050415 314.02410889]
[76.87048340 317.53283691]
[74.64536285 332.36688232]
[85.19345093 321.70208740]
[99.63433838 317.64489746]
[114.19321442 321.25585938]
[125.06443024 331.59109497]
[129.40626526 345.94894409]
[126.08378601 360.57635498]
[115.96547699 371.64974976]
[101.69623566 376.27453613]
[87.00600433 373.24185181]
[75.73478699 363.34439087]
[70.82891083 349.17022705]
[66.42790985 363.51007080]
[66.90174103 372.63220215]
[61.85316849 378.02978516]
[57.23915863 392.30252075]
[52.62515259 406.57525635]
[48.01114273 420.84799194]
[43.39713287 435.12069702]
[38.78312302 449.39343262]
[34.16911316 463.66616821]
[41.11089325 477.61068726]
[36.22831345 492.01953125]
[22.89157104 498.55154419]
[18.27756119 512.82427979]
[19.37215996 517.92810059]
[18.48798561 522.48565674]
[16.16446686 525.83471680]
[13.12570572 527.62310791]
[7.87898779 541.67559814]
[2.63226986 555.72802734]
[-2.61444831 569.78051758]
[-7.86116648 583.83300781]
[-13.10788441 597.88549805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 201]
[32 200]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[42 189]
[43 188]
[44 177]
[45 176]
[46 173]
[47 172]
[48 171]
[50 170]
[51 169]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 160]
[62 148]
[63 147]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 136]
[72 135]
[75 133]
[76 132]
[77 131]
[79 129]
[80 128]
[82 126]
[83 124]
[84 123]
[85 122]
[86 120]
[87 119]
[88 118]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
