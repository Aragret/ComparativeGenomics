%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[66.49141693 578.13769531]
[60.41912079 591.86889648]
[52.94476700 604.89007568]
[44.15024948 617.05865479]
[34.13193512 628.24127197]
[22.99957848 638.31542969]
[10.87515926 647.17071533]
[-2.10848403 654.71014404]
[-15.80909443 660.85107422]
[-30.07656097 665.52624512]
[-44.75455856 668.68438721]
[-59.68227386 670.29095459]
[-74.69614410 670.32836914]
[-89.63167572 668.79614258]
[-104.32521820 665.71105957]
[-118.61578369 661.10699463]
[-132.34680176 655.03436279]
[-145.36782837 647.55969238]
[-157.53617859 638.76489258]
[-168.71856689 628.74627686]
[-178.79243469 617.61370850]
[-187.64743042 605.48907471]
[-195.18652344 592.50524902]
[-201.32711792 578.80450439]
[-206.00193787 564.53692627]
[-209.15974426 549.85882568]
[-210.76596069 534.93109131]
[-210.80297852 519.91723633]
[-209.27038574 504.98171997]
[-206.18498230 490.28823853]
[-201.58056641 475.99780273]
[-195.50761414 462.26693726]
[-188.03262329 449.24609375]
[-179.23751831 437.07794189]
[-169.21865845 425.89581299]
[-158.08581543 415.82220459]
[-145.96095276 406.96749878]
[-132.97694397 399.42871094]
[-119.27603912 393.28845215]
[-105.00834656 388.61398315]
[-90.33019257 385.45654297]
[-75.40240479 383.85067749]
[-60.38853073 383.81402588]
[-45.45307922 385.34698486]
[-30.75968552 388.43273926]
[-16.46934128 393.03750610]
[-2.73861885 399.11080933]
[4.72912216 386.10183716]
[12.19686317 373.09289551]
[11.82285023 358.20297241]
[25.40353584 350.08660889]
[25.02952194 335.19668579]
[38.61021042 327.08032227]
[46.07794952 314.07138062]
[53.54569244 301.06240845]
[61.01343155 288.05346680]
[68.48117065 275.04452515]
[73.20130920 260.80651855]
[74.98377228 245.91281128]
[76.76624298 231.01908875]
[70.59615326 217.46257019]
[79.91852570 204.67961121]
[81.70098877 189.78588867]
[75.53090668 176.22937012]
[84.85327148 163.44641113]
[86.63574219 148.55268860]
[88.41820526 133.65896606]
[90.20066833 118.76525879]
[81.23708344 109.80380249]
[78.99948120 97.32795715]
[84.28998566 85.80995941]
[95.21209717 79.37870789]
[97.21611786 64.51318359]
[99.22013092 49.64765167]
[100.89167023 34.74107742]
[102.22990417 19.80089188]
[103.56813812 4.86070776]
[95.43492126 -11.65995502]
[106.08263397 -25.60961914]
[106.19429779 -40.60920334]
[105.30148315 -55.58260727]
[104.40866852 -70.55601501]
[95.86368561 -83.87118530]
[102.82972717 -97.03643036]
[101.93691254 -112.00983429]
[101.04409790 -126.98323822]
[100.15127563 -141.95664978]
[91.60629272 -155.27182007]
[98.57233429 -168.43705750]
[97.67951965 -183.41046143]
[82.81784058 -185.87586975]
[68.87757874 -191.58699036]
[56.55797195 -200.25733948]
[46.47696304 -211.45202637]
[39.14021301 -224.60952759]
[34.91572952 -239.06987000]
[34.01541519 -254.10772705]
[36.48442459 -268.96881104]
[42.19891739 -282.90768433]
[50.87224960 -295.22518921]
[62.06937790 -305.30349731]
[75.22866058 -312.63705444]
[89.69002533 -316.85803223]
[104.72809601 -317.75469971]
[119.58858490 -315.28207397]
[133.52607727 -309.56420898]
[145.84147644 -300.88790894]
[155.91706848 -289.68832397]
[163.24743652 -276.52728271]
[167.46490479 -262.06488037]
[168.35794067 -247.02659607]
[165.88172913 -232.16671753]
[160.16047668 -218.23060608]
[151.48118591 -205.91729736]
[140.27917480 -195.84443665]
[127.11633301 -188.51724243]
[112.65292358 -184.30328369]
[113.54574585 -169.32987976]
[122.02686310 -157.08569336]
[115.12468719 -142.84945679]
[116.01750183 -127.87605286]
[116.91031647 -112.90264893]
[117.80313110 -97.92924500]
[126.28425598 -85.68506622]
[119.38207245 -71.44882965]
[120.27488708 -56.47542572]
[121.16770172 -41.50201797]
[129.76782227 -53.79177475]
[143.60630798 -59.57936859]
[158.39515686 -57.07144928]
[169.55191040 -47.04512787]
[173.61949158 -32.60716629]
[169.33753967 -18.23132324]
[158.03285217 -8.37211132]
[143.20831299 -6.08451509]
[129.45747375 -12.07736969]
[121.04108429 -24.49397087]
[128.69451904 -15.12638664]
[127.88746643 -2.65512133]
[118.50832367 6.19894171]
[117.17008972 21.13912773]
[115.83185577 36.07931137]
[117.79996490 39.00486755]
[118.44883728 43.02904892]
[117.27754211 47.52141571]
[114.08565521 51.65166473]
[112.08164215 66.51719666]
[110.07762909 81.38272095]
[120.38099670 94.27490997]
[118.29792023 110.64648438]
[105.09439087 120.54772186]
[103.31192017 135.44143677]
[101.52945709 150.33515930]
[99.74699402 165.22886658]
[105.78958130 179.85069275]
[96.59470367 191.56835938]
[94.81224060 206.46208191]
[100.85482788 221.08389282]
[91.65995789 232.80155945]
[89.87748718 247.69528198]
[88.09502411 262.58898926]
[96.27460480 250.01542664]
[106.93466949 239.46255493]
[119.59024811 231.41046143]
[133.66561890 226.22546387]
[148.52041626 224.14344788]
[163.47886658 225.25912476]
[177.86045837 229.52174377]
[191.01092529 236.73738098]
[202.33198547 246.57775879]
[211.30863953 258.59524536]
[217.53250122 272.24307251]
[220.72041321 286.90042114]
[220.72735596 301.90042114]
[217.55302429 316.56066895]
[211.34179688 330.21426392]
[202.37628174 342.24005127]
[191.06431580 352.09091187]
[177.92054749 359.31872559]
[163.54290771 363.59466553]
[148.58549500 364.72418213]
[133.72877502 362.65591431]
[119.64862061 357.48394775]
[106.98558044 349.44360352]
[96.31575775 338.90060425]
[88.12453461 326.33462524]
[82.78457642 312.31729126]
[80.53880310 297.48638916]
[81.49012756 282.51226807]
[74.02238464 295.52120972]
[66.55464172 308.53015137]
[59.08690262 321.53912354]
[51.61915970 334.54806519]
[51.45903015 350.36846924]
[38.41248703 357.55435181]
[38.25235748 373.37475586]
[25.20581627 380.56063843]
[17.73807526 393.56958008]
[10.27033329 406.57855225]
[22.43912315 415.37277222]
[33.62198639 425.39080811]
[43.69640350 436.52291870]
[52.55198669 448.64712524]
[60.09171295 461.63058472]
[66.23297119 475.33105469]
[70.90847778 489.59838867]
[74.06700134 504.27630615]
[75.67394257 519.20397949]
[75.71168518 534.21783447]
[74.17982483 549.15344238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 199]
[48 198]
[49 197]
[51 195]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 161]
[59 160]
[60 159]
[62 157]
[63 156]
[65 154]
[66 153]
[67 152]
[68 151]
[72 148]
[73 147]
[74 146]
[75 142]
[76 141]
[77 140]
[79 137]
[80 127]
[81 126]
[82 125]
[84 123]
[85 122]
[86 121]
[87 120]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
