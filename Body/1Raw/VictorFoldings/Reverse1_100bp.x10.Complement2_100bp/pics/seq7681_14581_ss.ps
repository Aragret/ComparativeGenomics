%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[63.83318710 469.81701660]
[61.42568207 454.96441650]
[61.87283325 439.92456055]
[65.15847778 425.24121094]
[71.16383362 411.44512939]
[79.67181396 399.03500366]
[90.37485504 388.45950317]
[102.88606262 380.10092163]
[116.75315857 374.26135254]
[113.64904785 359.58605957]
[110.54493713 344.91076660]
[107.44082642 330.23544312]
[104.33671570 315.56015015]
[101.23260498 300.88485718]
[98.12849426 286.20956421]
[92.78414917 300.22518921]
[81.94757080 310.59671021]
[67.71115112 315.32156372]
[52.82370377 313.48745728]
[40.15977097 305.44848633]
[32.16455841 292.75689697]
[30.38181305 277.86322021]
[35.15575790 263.64318848]
[45.56462097 252.84245300]
[59.59860611 247.54649353]
[74.54798126 248.77786255]
[87.52624512 256.29879761]
[96.02798462 268.65832520]
[95.58137512 253.66497803]
[95.13477325 238.67163086]
[94.68816376 223.67828369]
[94.24156189 208.68493652]
[90.90029907 202.09268188]
[93.90159607 193.46539307]
[93.67826843 178.46705627]
[93.45494080 163.46871948]
[85.52900696 150.85804749]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[92.50000000 31.72462654]
[78.13909912 27.01061630]
[65.95487213 18.10066795]
[57.13313675 5.87751865]
[52.52762985 -8.45441628]
[52.57740021 -23.48771667]
[57.26499176 -37.75016403]
[66.11937714 -49.84892654]
[78.26325989 -58.60655975]
[92.50000000 -63.17560959]
[92.50000000 -78.17561340]
[92.50000000 -93.17561340]
[92.50000000 -108.17561340]
[92.50000000 -123.17561340]
[89.37059021 -131.75724792]
[92.61332703 -138.39852905]
[85.08235168 -152.31236267]
[93.00828552 -164.92303467]
[93.23161316 -179.92137146]
[93.45494080 -194.91970825]
[78.50920868 -196.27708435]
[63.70893860 -198.76091003]
[49.13890457 -202.35696411]
[34.88256836 -207.04463196]
[21.02158546 -212.79705811]
[7.63535213 -219.58132935]
[-5.19945526 -227.35853577]
[-17.40931892 -236.08416748]
[-28.92430115 -245.70823669]
[-39.67844772 -256.17559814]
[-49.61015320 -267.42630005]
[-58.66253281 -279.39593506]
[-66.78372955 -292.01589966]
[-73.92723846 -305.21392822]
[-80.05212402 -318.91439819]
[-85.12332153 -333.03884888]
[-89.11176300 -347.50640869]
[-91.99462128 -362.23413086]
[-93.75537109 -377.13772583]
[-94.38393402 -392.13180542]
[-93.87670898 -407.13049316]
[-92.23659515 -422.04782104]
[-89.47299194 -436.79843140]
[-85.60173035 -451.29776001]
[-80.64498138 -465.46279907]
[-74.63114166 -479.21237183]
[-67.59465027 -492.46774292]
[-59.57582474 -505.15301514]
[-50.62058258 -517.19549561]
[-40.78023148 -528.52618408]
[-30.11112785 -539.08020020]
[-18.67438889 -548.79711914]
[-6.53552151 -557.62127686]
[6.23594189 -565.50207520]
[19.56684685 -572.39440918]
[33.38083267 -578.25878906]
[47.59877777 -583.06164551]
[62.13924026 -586.77545166]
[76.91893005 -589.37896729]
[91.85318756 -590.85723877]
[106.85647583 -591.20178223]
[121.84285736 -590.41070557]
[136.72648621 -588.48840332]
[151.42210388 -585.44604492]
[165.84553528 -581.30096436]
[179.91418457 -576.07690430]
[193.54743958 -569.80383301]
[206.66722107 -562.51763916]
[219.19837952 -554.26007080]
[231.06913757 -545.07843018]
[242.21150208 -535.02526855]
[252.56164551 -524.15826416]
[262.06027222 -512.53961182]
[270.65298462 -500.23583984]
[278.29058838 -487.31747437]
[284.92929077 -473.85845947]
[290.53109741 -459.93591309]
[295.06390381 -445.62957764]
[298.50173950 -431.02142334]
[300.82495117 -416.19509888]
[302.02017212 -401.23550415]
[302.08062744 -386.22839355]
[301.00588989 -371.25967407]
[298.80218506 -356.41510010]
[295.48211670 -341.77972412]
[291.06469727 -327.43734741]
[285.57519531 -313.47015381]
[279.04510498 -299.95809937]
[271.51181030 -286.97860718]
[263.01849365 -274.60604858]
[253.61373901 -262.91125488]
[243.35145569 -251.96122742]
[232.29042053 -241.81869507]
[220.49400330 -232.54174805]
[208.02975464 -224.18351746]
[194.96908569 -216.79188538]
[181.38679504 -210.40919495]
[167.36068726 -205.07200623]
[152.97109985 -200.81088257]
[138.30046082 -197.65023804]
[123.43280029 -195.60816956]
[108.45327759 -194.69638062]
[108.22994995 -179.69804382]
[108.00662231 -164.69970703]
[115.55357361 -151.85864258]
[107.61166382 -138.17520142]
[107.50000000 -123.17561340]
[107.50000000 -108.17561340]
[107.50000000 -93.17561340]
[107.50000000 -78.17561340]
[107.50000000 -63.17560959]
[121.73674011 -58.60655975]
[133.88063049 -49.84892654]
[142.73501587 -37.75016403]
[147.42259216 -23.48771667]
[147.47236633 -8.45441628]
[142.86686707 5.87751865]
[134.04513550 18.10066795]
[121.86090088 27.01061630]
[107.50000000 31.72462654]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[116.00022888 150.40432739]
[108.45327759 163.24539185]
[108.67660522 178.24372864]
[108.89993286 193.24206543]
[109.23490906 208.23832703]
[109.68151093 223.23167419]
[110.12812042 238.22502136]
[110.57472229 253.21836853]
[111.02133179 268.21173096]
[112.80379486 283.10543823]
[115.90790558 297.78073120]
[119.01201630 312.45605469]
[122.11612701 327.13134766]
[125.22023773 341.80664062]
[128.32434082 356.48196411]
[131.42845154 371.15725708]
[146.47241211 370.88156128]
[161.29663086 373.45819092]
[175.36523438 378.79400635]
[188.16964722 386.69613647]
[199.24699402 396.87890625]
[208.19683838 408.97421265]
[214.69564819 422.54483032]
[218.50851440 437.10021973]
[219.49757385 452.11413574]
[217.62709045 467.04391479]
[212.96467590 481.34979248]
[205.67887878 494.51464844]
[196.03306580 506.06259155]
[184.37594604 515.57617188]
[171.12889099 522.71142578]
[156.77079773 527.21051025]
[141.82067871 528.91070557]
[126.81899261 527.75054932]
[112.30803680 523.77203369]
[98.81236267 517.11901855]
[86.81983948 508.03186035]
[76.76398468 496.83917236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[34 176]
[35 175]
[36 174]
[38 172]
[39 171]
[40 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[61 151]
[63 149]
[64 148]
[65 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
