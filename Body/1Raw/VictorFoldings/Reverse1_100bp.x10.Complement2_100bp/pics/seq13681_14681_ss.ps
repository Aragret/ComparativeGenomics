%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[134.14710999 657.35791016]
[120.66012573 664.16070557]
[105.80264282 666.88684082]
[90.77909088 665.31536865]
[76.80736542 659.57360840]
[65.02009583 650.12707520]
[56.37281418 637.74157715]
[51.56652451 623.42108154]
[50.99084854 608.32653809]
[54.69245148 593.68157959]
[62.37126541 580.67340088]
[73.40480042 570.35650635]
[86.89862061 563.56732178]
[101.75883484 560.85607910]
[103.31935883 545.93750000]
[104.87988281 531.01885986]
[106.44039917 516.10028076]
[108.00092316 501.18167114]
[109.56144714 486.26306152]
[110.89968109 471.32287598]
[111.56946564 456.33786011]
[111.79279327 441.33950806]
[112.01612091 426.34118652]
[112.23944855 411.34283447]
[112.01612091 396.34448242]
[111.34633636 381.35946655]
[110.67655182 366.37442017]
[110.00676727 351.38937378]
[99.77910614 337.12887573]
[108.40060425 320.85769653]
[99.91947937 308.61352539]
[106.82166290 294.37728882]
[105.92884827 279.40386963]
[97.44772339 267.15969849]
[104.34990692 252.92346191]
[103.45708466 237.95005798]
[102.56427002 222.97665405]
[101.67145538 208.00325012]
[89.87167358 192.68489075]
[99.16992950 174.79901123]
[97.83169556 159.85882568]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[78.24288940 13.15081596]
[85.01215363 -0.11667861]
[73.31973267 -10.40866756]
[72.40139008 -25.59455872]
[82.28528595 -36.67807007]
[81.16963959 -51.63652420]
[80.05399323 -66.59497833]
[65.66198730 -71.40599060]
[54.23915863 -81.33383942]
[47.50574493 -94.84216309]
[46.45993805 -109.85861206]
[51.23003387 -124.09276581]
[61.05962372 -135.38543701]
[74.42733765 -142.03627014]
[73.31169128 -156.99472046]
[72.19604492 -171.95317078]
[58.14879990 -175.11001587]
[45.57474899 -182.09040833]
[35.48910141 -192.32049561]
[28.70326233 -204.96447754]
[25.75955200 -218.99287415]
[26.88787842 -233.26634216]
[31.98780823 -246.62825012]
[40.63742828 -257.99832153]
[52.12824631 -266.46005249]
[65.52320862 -271.33456421]
[64.63039398 -286.30798340]
[63.62613297 -301.27432251]
[62.51048660 -316.23278809]
[61.39483643 -331.19122314]
[51.67317581 -319.76803589]
[36.90475845 -317.14242554]
[23.84150887 -324.51477051]
[18.45576859 -338.51455688]
[23.20982552 -352.74124146]
[35.93018723 -360.69061279]
[50.80127716 -358.72830200]
[61.02496338 -347.74975586]
[61.47156906 -362.74310303]
[61.91817474 -377.73645020]
[62.36478043 -392.72979736]
[59.57241058 -398.72262573]
[60.14044571 -404.37722778]
[63.05451202 -408.16104126]
[63.94732666 -423.13446045]
[64.84014130 -438.10784912]
[65.73295593 -453.08126831]
[51.64252090 -458.58712769]
[39.94441223 -468.17929077]
[31.78469658 -480.91799927]
[27.96277809 -495.55520630]
[28.85309219 -510.65695190]
[34.36841202 -524.74371338]
[43.96840286 -536.43536377]
[56.71255875 -544.58654785]
[71.35233307 -548.39868164]
[86.45347595 -547.49822998]
[100.53652191 -541.97344971]
[112.22176361 -532.36566162]
[120.36440277 -519.61602783]
[124.16670227 -504.97369385]
[123.25614929 -489.87316895]
[117.72195435 -475.79382324]
[108.10630035 -464.11502075]
[95.35123444 -455.98092651]
[80.70636749 -452.18844604]
[79.81355286 -437.21502686]
[78.92073059 -422.24163818]
[78.02791595 -407.26821899]
[77.35813141 -392.28320312]
[76.91152954 -377.28982544]
[76.46492004 -362.29647827]
[76.01831818 -347.30313110]
[76.35328674 -332.30688477]
[77.46894073 -317.34841919]
[78.58458710 -302.38998413]
[82.21687317 -295.95349121]
[79.60379791 -287.20080566]
[80.49661255 -272.22738647]
[95.69525909 -268.44223022]
[108.99679565 -260.13531494]
[119.09278107 -248.10964966]
[124.98571777 -233.53469849]
[126.08761597 -217.83268738]
[122.27862549 -202.53982544]
[113.91996765 -189.15606689]
[101.81966400 -178.99786377]
[87.15449524 -173.06881714]
[88.27014160 -158.11036682]
[89.38579559 -143.15191650]
[103.59220123 -138.55766296]
[114.98821259 -128.84805298]
[121.81703949 -115.47898865]
[123.01036072 -100.47353363]
[118.35528564 -86.11582184]
[108.53154755 -74.60334015]
[95.01244354 -67.71062469]
[96.12808990 -52.75217056]
[97.24374390 -37.79372025]
[108.66242218 -28.29902077]
[110.00693512 -13.14491558]
[99.97060394 -1.23232734]
[108.63308716 10.88421917]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[112.77188110 158.52058411]
[114.11011505 173.46076965]
[122.84593964 179.94105530]
[126.49799347 189.95318604]
[124.08734131 200.10882568]
[116.64485931 207.11042786]
[117.53768158 222.08383179]
[118.43049622 237.05725098]
[119.32331085 252.03065491]
[127.86829376 265.34582520]
[120.90225220 278.51107788]
[121.79506683 293.48446655]
[130.34005737 306.79965210]
[123.37400818 319.96487427]
[132.48538208 329.09426880]
[132.92074585 341.58404541]
[124.99180603 350.71960449]
[125.66159058 365.70462036]
[126.33137512 380.68966675]
[127.00115967 395.67471313]
[129.46678162 399.24887085]
[130.55714417 403.04040527]
[130.37278748 406.59024048]
[129.15299988 409.51919556]
[127.23778534 411.56616211]
[127.01445770 426.56451416]
[126.79113007 441.56283569]
[126.56780243 456.56118774]
[128.81631470 460.27575684]
[129.67907715 464.12545776]
[129.28375244 467.65805054]
[127.89179993 470.50918579]
[125.85813904 472.43853760]
[128.38012695 478.55007935]
[127.56017303 484.17367554]
[124.48005676 487.82360840]
[122.91953278 502.74218750]
[121.35900879 517.66082764]
[119.79848480 532.57940674]
[118.23796082 547.49798584]
[116.67743683 562.41662598]
[130.65492249 568.14434814]
[142.45167542 577.57897949]
[151.11140442 589.95581055]
[155.93206787 604.27148438]
[156.52291870 619.36541748]
[152.83601379 634.01409912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 196]
[21 191]
[22 190]
[23 189]
[24 188]
[25 183]
[26 182]
[27 181]
[28 180]
[30 177]
[32 175]
[33 174]
[35 172]
[36 171]
[37 170]
[38 169]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[53 153]
[56 150]
[57 149]
[58 148]
[65 141]
[66 140]
[67 139]
[77 130]
[78 129]
[79 127]
[80 126]
[81 125]
[89 124]
[90 123]
[91 122]
[92 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
