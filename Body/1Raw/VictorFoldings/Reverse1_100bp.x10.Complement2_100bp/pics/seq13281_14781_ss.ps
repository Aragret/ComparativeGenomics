%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[56.52318192 634.54638672]
[58.90670776 619.09155273]
[70.70079803 608.82348633]
[70.25419617 593.83013916]
[69.80758667 578.83679199]
[69.36098480 563.84344482]
[67.41550446 561.82519531]
[66.15224457 558.91473389]
[65.91505432 555.36804199]
[66.94884491 551.56066895]
[69.36098480 547.95019531]
[69.80758667 532.95684814]
[70.25419617 517.96350098]
[70.70079803 502.97015381]
[71.14740753 487.97680664]
[63.79247665 475.02481079]
[71.93722534 461.46112061]
[72.38383484 446.46777344]
[72.60716248 431.46945190]
[72.60716248 416.46945190]
[72.60716248 401.46945190]
[72.60716248 386.46945190]
[72.60716248 371.46945190]
[64.27820587 362.69702148]
[64.15544128 350.20028687]
[72.85007477 340.67315674]
[73.07340240 325.67483521]
[73.29673004 310.67648315]
[65.74977875 297.83541870]
[73.69168854 284.15197754]
[73.91501617 269.15365601]
[74.13834381 254.15530396]
[74.36167145 239.15696716]
[66.16424561 230.26153564]
[66.22755432 217.76434326]
[75.06306458 208.36772156]
[75.50967407 193.37437439]
[66.68666840 205.50509644]
[53.27797699 212.22871399]
[38.27912521 212.04312134]
[25.04089737 204.98979187]
[16.52075005 192.64447021]
[14.62210464 177.76512146]
[19.76912308 163.67582703]
[30.81194878 153.52416992]
[45.28358459 149.57806396]
[59.95103455 152.71908569]
[71.53754425 162.24551392]
[77.45467377 176.02912903]
[80.33994293 161.30923462]
[67.16563416 155.38272095]
[55.64428711 146.66809082]
[46.35590744 135.60409546]
[39.76809692 122.74770355]
[36.21249771 108.74613953]
[35.86811066 94.30427551]
[38.75227356 80.14914703]
[44.71978760 66.99335480]
[53.47023392 55.49919510]
[64.56310272 46.24531174]
[77.43994141 39.69755936]
[91.45250702 36.18557358]
[105.89537811 35.88615417]
[108.99948883 21.21085358]
[112.10359955 6.53555059]
[110.81781769 -2.50793266]
[115.36471558 -8.33438587]
[118.68697357 -22.96184540]
[122.00923157 -37.58930588]
[125.22250366 -52.24109268]
[128.32661438 -66.91639709]
[131.43072510 -81.59169769]
[134.53483582 -96.26699829]
[137.63894653 -110.94230652]
[136.35316467 -119.98578644]
[140.90005493 -125.81224060]
[144.22232056 -140.43969727]
[147.43559265 -155.09149170]
[150.53970337 -169.76678467]
[145.82571411 -184.86940002]
[156.02931213 -195.72000122]
[159.13342285 -210.39530945]
[162.23753357 -225.07061768]
[157.52352905 -240.17321777]
[167.72714233 -251.02383423]
[170.83125305 -265.69912720]
[169.14837646 -272.09283447]
[170.71229553 -277.55645752]
[174.25244141 -280.76214600]
[177.79211426 -295.33853149]
[173.52986145 -310.57479858]
[184.05200195 -321.11679077]
[187.59167480 -335.69317627]
[191.13134766 -350.26956177]
[194.67102051 -364.84591675]
[198.21069336 -379.42230225]
[201.75036621 -393.99868774]
[188.03112793 -400.17095947]
[175.67977905 -408.75924683]
[165.11700439 -419.47103882]
[156.70254517 -431.94146729]
[150.72302246 -445.74581909]
[147.38209534 -460.41390991]
[146.79353333 -475.44613647]
[148.97740173 -490.33053589]
[153.85931396 -504.56015015]
[161.27299500 -517.65026855]
[170.96594238 -529.15515137]
[182.60798645 -538.68286133]
[195.80264282 -545.90887451]
[210.10049438 -550.58715820]
[225.01455688 -552.55828857]
[240.03686523 -551.75518799]
[254.65576172 -548.20520020]
[268.37332153 -542.02923584]
[280.72238159 -533.43762207]
[291.28225708 -522.72296143]
[299.69335938 -510.25027466]
[305.66915894 -496.44433594]
[309.00613403 -481.77532959]
[309.59063721 -466.74295044]
[307.40274048 -451.85913086]
[302.51699829 -437.63082886]
[295.09979248 -424.54269409]
[285.40374756 -413.04043579]
[273.75912476 -403.51589966]
[260.56253052 -396.29339600]
[246.26342773 -391.61898804]
[231.34883118 -389.65185547]
[216.32675171 -390.45901489]
[212.78707886 -375.88262939]
[209.24740601 -361.30624390]
[205.70773315 -346.72988892]
[202.16806030 -332.15350342]
[198.62838745 -317.57711792]
[203.14381409 -303.38345337]
[192.36848450 -291.79885864]
[188.82881165 -277.22247314]
[185.50654602 -262.59503174]
[182.40243530 -247.91972351]
[187.33847046 -233.86679077]
[176.91284180 -221.96650696]
[173.80873108 -207.29119873]
[170.70462036 -192.61589050]
[175.64064026 -178.56295776]
[165.21501160 -166.66267395]
[162.11090088 -151.98738098]
[163.80216980 -144.79283142]
[158.84977722 -137.11744690]
[155.52752686 -122.48998260]
[152.31425476 -107.83819580]
[149.21014404 -93.16288757]
[146.10603333 -78.48758698]
[143.00192261 -63.81228638]
[139.89781189 -49.13698196]
[141.58908081 -41.94244385]
[136.63668823 -34.26704788]
[133.31443787 -19.63958740]
[129.99217224 -5.01212645]
[126.77890015 9.63966084]
[123.67478943 24.31496239]
[120.57067871 38.99026489]
[134.54302979 45.66659164]
[146.51713562 55.48599625]
[155.80030823 67.88045502]
[161.85556030 82.13296509]
[164.33256531 97.41904449]
[163.08805847 112.85443115]
[158.19404602 127.54621887]
[149.93360901 140.64450073]
[138.78460693 151.39158630]
[125.39199066 159.16575623]
[110.53049469 163.51731873]
[95.05983734 164.19450378]
[92.17456055 178.91439819]
[90.50302124 193.82098389]
[90.05641937 208.81433105]
[99.15854645 224.82159424]
[89.36000824 239.38029480]
[89.13668060 254.37863159]
[88.91335297 269.37698364]
[88.69002533 284.37530518]
[96.22100067 298.28915405]
[88.29506683 310.89981079]
[88.07173920 325.89816284]
[87.84841156 340.89648438]
[97.18785858 356.76647949]
[87.60716248 371.46945190]
[87.60716248 386.46945190]
[87.60716248 401.46945190]
[87.60716248 416.46945190]
[87.60716248 431.46945190]
[90.57672119 437.37649536]
[90.17729950 443.04547119]
[87.37718201 446.91436768]
[86.93058014 461.90774536]
[94.25356293 475.93215942]
[86.14075470 488.42340088]
[85.69415283 503.41677856]
[85.24754333 518.41009521]
[84.80094147 533.40344238]
[84.35433197 548.39678955]
[84.35433197 563.39678955]
[84.80094147 578.39013672]
[85.24754333 593.38348389]
[85.69415283 608.37689209]
[98.07849884 617.92474365]
[101.37769318 633.21032715]
[94.03395081 647.01623535]
[79.51476288 652.82379150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[17 196]
[18 195]
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[26 186]
[27 185]
[28 184]
[30 182]
[31 181]
[32 180]
[33 179]
[36 177]
[37 176]
[49 175]
[50 174]
[63 162]
[64 161]
[65 160]
[67 159]
[68 158]
[69 157]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[76 150]
[77 149]
[78 147]
[79 146]
[81 144]
[82 143]
[83 142]
[85 140]
[86 139]
[89 138]
[90 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
