%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[184.27120972 574.88610840]
[195.09747314 564.38641357]
[208.19517517 556.90972900]
[204.22306824 542.44519043]
[200.25097656 527.98065186]
[195.44845581 522.36303711]
[196.32913208 513.27117920]
[192.57283020 498.74911499]
[188.81654358 484.22708130]
[185.06024170 469.70501709]
[181.30393982 455.18295288]
[166.81605530 455.78393555]
[152.51516724 453.35073853]
[139.02998352 447.98773193]
[126.95387268 439.92822266]
[116.81879425 429.52413940]
[109.07181549 417.23083496]
[104.05543518 403.58703613]
[101.99241638 389.19128418]
[102.97588348 374.67565918]
[106.96517181 360.67807007]
[113.78745270 347.81414795]
[123.14521790 336.65023804]
[134.62931824 327.67843628]
[147.73675537 321.29489136]
[144.19708252 306.71853638]
[140.65740967 292.14215088]
[137.11773682 277.56576538]
[133.57806396 262.98941040]
[117.99327850 262.38977051]
[103.19372559 257.42272949]
[90.37890625 248.48225403]
[80.58988953 236.28466797]
[74.62472534 221.81134033]
[72.97340393 206.22967529]
[75.77760315 190.79895020]
[82.81858826 176.76858521]
[93.53422546 165.27694702]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[78.98569489 82.85716248]
[76.15602875 70.68437958]
[82.17966461 60.19427109]
[78.63999176 45.61789322]
[64.06468201 45.95672989]
[49.74487686 43.25105286]
[36.30921936 37.62221909]
[24.34700203 29.31985474]
[14.38232422 18.71078682]
[6.85111856 6.26283884]
[2.08208966 -7.47580099]
[0.28236556 -21.90072250]
[1.52850282 -36.37788010]
[5.76323318 -50.27146149]
[12.79809093 -62.97181320]
[22.32180023 -73.92220306]
[33.91404343 -82.64320374]
[47.06401443 -88.75368500]
[43.74175262 -103.38114929]
[40.41949463 -118.00860596]
[37.09723663 -132.63606262]
[33.77497482 -147.26353455]
[20.73726654 -151.73666382]
[11.68414021 -161.98651123]
[8.90011215 -175.26502991]
[13.00770092 -188.08187866]
[22.83214569 -197.12193298]
[19.72803688 -211.79722595]
[16.62392616 -226.47253418]
[6.19829416 -238.37281799]
[11.13431931 -252.42575073]
[8.03020859 -267.10104370]
[-6.95468330 -266.02087402]
[-21.94708443 -266.99127197]
[-36.66769409 -269.99417114]
[-50.84227753 -274.97363281]
[-64.20677185 -281.83688354]
[-76.51219940 -290.45605469]
[-87.52931976 -300.67059326]
[-97.05289459 -312.29019165]
[-104.90550995 -325.09841919]
[-110.94085693 -338.85662842]
[-115.04652405 -353.30850220]
[-117.14601135 -368.18487549]
[-117.20021057 -383.20852661]
[-115.20810699 -398.09967041]
[-111.20681763 -412.58081055]
[-105.27088928 -426.38220215]
[-97.51089478 -439.24673462]
[-88.07140350 -450.93475342]
[-77.12825775 -461.22848511]
[-64.88533783 -469.93621826]
[-51.57071304 -476.89572144]
[-37.43242264 -481.97732544]
[-22.73386192 -485.08633423]
[-7.74885368 -486.16488647]
[7.24344158 -485.19287109]
[21.96372604 -482.18835449]
[36.13777161 -477.20736694]
[49.50151825 -470.34268188]
[61.80601501 -461.72219849]
[72.82203674 -451.50646973]
[82.34435272 -439.88583374]
[90.19557190 -427.07675171]
[96.22943878 -413.31790161]
[100.33353424 -398.86557007]
[102.43141174 -383.98898315]
[102.48398590 -368.96530151]
[100.49027252 -354.07440186]
[96.48741913 -339.59368896]
[90.54999542 -325.79293823]
[82.78860474 -312.92922974]
[73.34784698 -301.24224854]
[62.40359497 -290.94967651]
[50.15972900 -282.24325562]
[36.84434891 -275.28521729]
[22.70551109 -270.20516968]
[25.80962181 -255.52986145]
[36.01322556 -244.67924500]
[31.29922867 -229.57664490]
[34.40333939 -214.90133667]
[37.50745010 -200.22602844]
[52.70401001 -194.01782227]
[61.29172516 -179.83287048]
[59.71669769 -163.15892029]
[48.40243530 -150.58578491]
[51.72469330 -135.95832825]
[55.04695511 -121.33087158]
[58.36921310 -106.70340729]
[61.69147491 -92.07595062]
[77.14524078 -92.14963531]
[92.23660278 -88.78945923]
[106.21181488 -82.16006470]
[118.37218475 -72.58947754]
[128.10900879 -60.55282974]
[134.93400574 -46.64881134]
[138.50382996 -31.56986809]
[138.63734436 -16.06772995]
[135.32479858 -0.91592401]
[128.72845459 13.12880993]
[119.17466736 25.36432648]
[107.13774109 35.17816544]
[93.21636963 42.07822037]
[96.75604248 56.65459824]
[109.53573608 68.68149567]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[136.03858948 153.74987793]
[149.92187500 157.73033142]
[162.28910828 165.16609192]
[172.29870605 175.54382324]
[179.27140808 188.15020752]
[182.73637390 202.12103271]
[182.46302795 216.50039673]
[178.47630310 230.30612183]
[171.05461121 242.59684753]
[160.71031189 252.53619385]
[148.15443420 259.44973755]
[151.69410706 274.02609253]
[155.23377991 288.60247803]
[158.77345276 303.17886353]
[162.31312561 317.75521851]
[177.84861755 317.50210571]
[193.04586792 320.70248413]
[207.14717102 327.19369507]
[219.45018005 336.64898682]
[229.34284973 348.59408569]
[236.33390808 362.43096924]
[240.07727051 377.46774292]
[240.38914490 392.95339966]
[237.25706482 408.11508179]
[230.84034729 422.19686890]
[221.46199036 434.49734497]
[209.59245300 444.40460205]
[195.82598877 451.42663574]
[199.58229065 465.94869995]
[203.33859253 480.47076416]
[207.09489441 494.99282837]
[210.85119629 509.51489258]
[214.71549988 524.00860596]
[218.68759155 538.47308350]
[222.65969849 552.93762207]
[237.73890686 552.67669678]
[252.40908813 556.17474365]
[265.74804688 563.21203613]
[276.91729736 573.34606934]
[285.21472168 585.93981934]
[290.11874390 600.20172119]
[291.32110596 615.23522949]
[288.74618530 630.09521484]
[282.55587769 643.84771729]
[273.13928223 655.62817383]
[261.08837891 664.69604492]
[247.16067505 670.48132324]
[232.23165894 672.62036133]
[217.23980713 670.97869873]
[203.12750244 665.65948486]
[190.78187561 656.99719238]
[180.97895813 645.53619385]
[174.33499146 631.99707031]
[171.26760864 617.23083496]
[171.96963501 602.16571045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[39 155]
[40 154]
[41 153]
[42 152]
[44 150]
[47 148]
[48 147]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[71 126]
[72 125]
[73 124]
[75 122]
[76 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
