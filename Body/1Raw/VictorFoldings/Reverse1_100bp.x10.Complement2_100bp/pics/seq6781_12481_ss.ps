%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[36.37347031 505.15231323]
[37.57778931 520.17938232]
[35.15020370 535.05792236]
[29.23185158 548.92285156]
[20.16681671 560.96813965]
[8.48212814 570.49340820]
[-5.14288092 576.94500732]
[-19.91607094 579.94769287]
[-34.97854614 579.32702637]
[-49.45459747 575.11901855]
[-62.50260162 567.56829834]
[-73.36396790 557.11389160]
[-81.40722656 544.36364746]
[-86.16476440 530.05877686]
[-87.35997009 515.03094482]
[-84.92337036 500.15393066]
[-78.99661255 486.29257202]
[-69.92427063 474.25280762]
[-58.23381042 464.73458862]
[-44.60489273 458.29129028]
[-29.82988739 455.29751587]
[-14.76779079 455.92733765]
[-10.58077908 441.52355957]
[-6.39376831 427.11978149]
[-2.20675683 412.71600342]
[1.98025429 398.31222534]
[-1.89688945 383.93109131]
[9.38496780 372.83917236]
[13.57197952 358.43539429]
[4.79275227 350.05087280]
[0.38538170 338.66192627]
[1.24350393 326.40774536]
[7.26548624 315.61816406]
[17.36210442 308.37063599]
[29.65308952 306.09039307]
[34.26709747 291.81765747]
[38.88110733 277.54492188]
[43.49511719 263.27218628]
[40.04787064 248.78198242]
[51.65497589 238.03091431]
[56.26898575 223.75817871]
[60.88299179 209.48544312]
[65.39062500 195.17875671]
[69.79161835 180.83891296]
[73.97863007 166.43511963]
[77.95072937 151.97059631]
[73.85990143 137.64878845]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[83.80728149 101.47479248]
[86.97487640 90.26731110]
[96.82508850 84.05324554]
[101.01210022 69.64945984]
[105.19911194 55.24568176]
[101.62144470 39.83429337]
[112.60382080 29.77264595]
[116.79083252 15.36886406]
[120.97784424 0.96508217]
[109.65304565 10.80118847]
[95.20506287 14.83301544]
[80.42356110 12.28208160]
[68.16262817 3.64093256]
[60.78964996 -9.42196274]
[59.72823715 -24.38436127]
[65.18333435 -38.35726166]
[76.10164642 -48.64271164]
[90.37501526 -53.25475693]
[105.24747467 -51.30287933]
[117.84739685 -43.16395950]
[125.74192047 -30.40949249]
[127.40660858 -15.50089931]
[134.08680725 -28.93127441]
[140.76699829 -42.36165237]
[147.44718933 -55.79202652]
[154.02722168 -69.27175903]
[160.50671387 -82.80010986]
[166.98620605 -96.32845306]
[173.46571350 -109.85679626]
[177.54537964 -124.29135132]
[179.10589600 -139.20996094]
[180.66642761 -154.12855530]
[182.22694397 -169.04716492]
[183.78746033 -183.96577454]
[177.52784729 -198.49600220]
[186.54724121 -210.34927368]
[172.75468445 -216.53173828]
[161.56352234 -226.66091919]
[154.06129456 -239.73550415]
[150.97180176 -254.46881104]
[152.58528137 -269.41534424]
[158.73123169 -283.11273193]
[168.79626465 -294.22467041]
[181.78535461 -301.67141724]
[196.42018127 -304.73455811]
[197.98069763 -319.65313721]
[199.54122925 -334.57174683]
[201.10174561 -349.49035645]
[202.66227722 -364.40896606]
[204.22279358 -379.32757568]
[190.31413269 -385.24707031]
[178.76925659 -395.00448608]
[170.61474609 -407.73223877]
[166.57569885 -422.29855347]
[167.01124573 -437.40820312]
[171.88267517 -451.71765137]
[180.75680542 -463.95452881]
[192.84457397 -473.03073120]
[207.07113647 -478.13919067]
[222.17146301 -478.82571411]
[236.80287170 -475.02917480]
[249.66432190 -467.08724976]
[259.61218262 -455.70605469]
[265.76193237 -441.89764404]
[267.56668091 -426.88986206]
[264.86599731 -412.01712036]
[257.90002441 -398.60198975]
[247.28814697 -387.83724976]
[233.97396851 -380.68014526]
[219.14140320 -377.76705933]
[217.58087158 -362.84844971]
[216.02035522 -347.92984009]
[214.45982361 -333.01123047]
[212.89930725 -318.09262085]
[211.33879089 -303.17401123]
[225.02293396 -297.14865112]
[236.18981934 -287.17514038]
[243.73745728 -274.22088623]
[246.91581726 -259.54815674]
[245.40133667 -244.59124756]
[239.32980347 -230.81620789]
[229.28430176 -219.57714844]
[216.23924255 -211.98313904]
[201.46585083 -208.78874207]
[207.83708191 -195.32559204]
[198.70606995 -182.40524292]
[197.14555359 -167.48664856]
[195.58502197 -152.56803894]
[194.02450562 -137.64942932]
[192.46397400 -122.73082733]
[200.50730896 -135.39198303]
[211.41160583 -145.69227600]
[224.51008606 -153.00186157]
[239.00177002 -156.87371826]
[254.00045776 -157.07112122]
[268.58901978 -153.58195496]
[281.87530518 -146.61962891]
[293.04690552 -136.60986328]
[301.42065430 -124.16475677]
[306.48449707 -110.04534912]
[307.92874146 -95.11504364]
[305.66510010 -80.28682709]
[299.83203125 -66.46745300]
[290.78616333 -54.50198746]
[279.08068848 -45.12211609]
[265.43139648 -38.90142059]
[250.67297363 -36.22030640]
[235.70785522 -37.24272156]
[221.45118713 -41.90613937]
[208.77476501 -49.92539978]
[198.45378113 -60.81011581]
[191.11932373 -73.89468384]
[187.21994019 -88.37897491]
[186.99404907 -103.37730408]
[180.51455688 -89.84895325]
[174.03506470 -76.32061005]
[167.55557251 -62.79226685]
[167.50131226 -55.40180969]
[160.87756348 -49.11183167]
[154.19737244 -35.68145752]
[147.51718140 -22.25107956]
[140.83699036 -8.82070446]
[135.38162231 5.15209341]
[131.19461060 19.55587578]
[127.00760651 33.95965576]
[130.88475037 48.34079361]
[119.60289001 59.43269348]
[115.41587830 73.83647156]
[111.22886658 88.24025726]
[115.64680481 104.42228699]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[103.24660492 145.71865845]
[92.41525269 155.94270325]
[88.44315338 170.40722656]
[89.74248505 176.88975525]
[87.85613251 182.25061035]
[84.13146973 185.23989868]
[79.73046875 199.57975769]
[80.20429993 208.70188904]
[75.15572357 214.09945679]
[70.54171753 228.37217712]
[65.92771149 242.64491272]
[69.04492950 258.15600586]
[57.76784897 267.88619995]
[53.15383911 282.15893555]
[48.53983307 296.43167114]
[43.92582321 310.70440674]
[55.03733826 325.03240967]
[55.32121658 343.00457764]
[44.85254288 357.42184448]
[27.97576141 362.62240601]
[23.78874969 377.02618408]
[27.36641121 392.43759155]
[16.38403702 402.49923706]
[12.19702530 416.90301514]
[8.01001358 431.30679321]
[3.82300282 445.71057129]
[-0.36400852 460.11434937]
[12.68857193 467.65713501]
[23.55627441 478.10494995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[35 197]
[36 196]
[37 195]
[38 194]
[40 192]
[41 191]
[42 190]
[43 188]
[44 187]
[45 184]
[46 183]
[48 181]
[49 180]
[52 178]
[53 177]
[54 176]
[56 174]
[57 173]
[58 172]
[71 171]
[72 170]
[73 169]
[74 168]
[75 166]
[76 165]
[77 164]
[78 163]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[85 133]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
