%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[124.80445099 495.60736084]
[135.65324402 484.11477661]
[134.98345947 469.12976074]
[134.31367493 454.14471436]
[133.64389038 439.15966797]
[132.97410583 424.17462158]
[129.53506470 417.63284302]
[132.40757751 408.96185303]
[131.96096802 393.96850586]
[131.51435852 378.97515869]
[131.06776428 363.98178101]
[118.34537506 352.98272705]
[117.49775696 335.84805298]
[129.53721619 323.15667725]
[128.86741638 308.17166138]
[128.19763184 293.18661499]
[126.30434418 278.30657959]
[123.20023346 263.63128662]
[120.09612274 248.95597839]
[116.88285065 234.30418396]
[113.56059265 219.67672729]
[110.23833466 205.04927063]
[107.94097137 203.44294739]
[106.14147186 200.82981873]
[105.22649384 197.39495850]
[105.50863647 193.45986938]
[107.18125153 189.45283508]
[104.73551941 174.65356445]
[102.28979492 159.85429382]
[99.84407043 145.05502319]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[83.97802734 102.77047729]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[79.39230347 28.09100533]
[76.72650909 13.32978916]
[73.95089722 -1.41117382]
[71.06562805 -16.13106537]
[68.18035126 -30.85095596]
[64.85809326 -45.47841644]
[61.10179138 -60.00047684]
[57.34549332 -74.52253723]
[53.58919144 -89.04459381]
[49.44824600 -74.62750244]
[40.16557312 -62.84480286]
[27.11819839 -55.44439697]
[12.24162579 -53.52408218]
[-2.25729394 -57.36873245]
[-14.22773266 -66.40801239]
[-21.89394760 -79.30100250]
[-24.11870003 -94.13510132]
[-20.57196426 -108.70975494]
[-11.77987289 -120.86290741]
[0.95331621 -128.79171753]
[15.73871136 -131.31997681]
[30.38298607 -128.07263184]
[42.71375275 -119.53142548]
[50.90109634 -106.96515656]
[50.23130798 -121.95019531]
[41.88551712 -135.39111328]
[49.04679871 -148.45117188]
[48.37701035 -163.43621826]
[47.70722580 -178.42124939]
[41.68551254 -164.68302917]
[32.79463577 -152.60195923]
[21.46840286 -142.76750183]
[8.25944901 -135.65951538]
[-6.18773365 -131.62480164]
[-21.16823578 -130.86022949]
[-35.95112228 -133.40309143]
[-49.81510925 -139.12934875]
[-62.08373642 -147.75956726]
[-72.15839386 -158.87268066]
[-79.54751587 -171.92645264]
[-83.89056396 -186.28395081]
[-84.97564697 -201.24465942]
[-82.74980927 -216.07859802]
[-77.32164764 -230.06198120]
[-68.95603180 -242.51254272]
[-58.06113052 -252.82278442]
[-45.16852951 -260.48965454]
[-30.90728569 -265.13903809]
[-15.97323990 -266.54412842]
[-1.09505606 -264.63635254]
[13.00132561 -259.50878906]
[25.62811279 -251.41160583]
[36.16921616 -240.73989868]
[44.11030960 -228.01437378]
[49.06393051 -213.85592651]
[50.78835297 -198.96200562]
[55.82526779 -213.09103394]
[60.86218643 -227.22006226]
[65.89910126 -241.34909058]
[70.93601990 -255.47811890]
[75.97293091 -269.60714722]
[81.00984955 -283.73617554]
[67.90168762 -291.10394287]
[56.22734070 -300.58117676]
[46.32270432 -311.89514160]
[38.47275543 -324.72036743]
[32.90335083 -338.68783569]
[29.77473259 -353.39562988]
[29.17691994 -368.42062378]
[31.12711143 -383.33053589]
[35.56919861 -397.69631958]
[42.37537003 -411.10467529]
[51.34980011 -423.16979980]
[62.23427582 -433.54458618]
[74.71562958 -441.93051147]
[88.43475342 -448.08630371]
[102.99691010 -451.83483887]
[117.98313141 -453.06826782]
[132.96221924 -451.75112915]
[147.50320435 -447.92126465]
[161.18769836 -441.68890381]
[173.62199402 -433.23333740]
[184.44833374 -422.79791260]
[193.35519409 -410.68280029]
[200.08631897 -397.23660278]
[204.44805908 -382.84622192]
[206.31489563 -367.92565918]
[205.63311768 -352.90423584]
[202.42236328 -338.21414185]
[196.77497864 -324.27804565]
[188.85348511 -311.49688721]
[178.88577271 -300.23843384]
[167.15864563 -290.82659912]
[154.00950623 -283.53219604]
[139.81669617 -278.56509399]
[124.98857117 -276.06820679]
[109.95175171 -276.11334229]
[95.13887787 -278.69924927]
[90.10196686 -264.57022095]
[85.06504822 -250.44120789]
[80.02812958 -236.31217957]
[74.99121857 -222.18313599]
[69.95429993 -208.05410767]
[64.91738129 -193.92507935]
[62.69226456 -179.09103394]
[63.36204910 -164.10600281]
[64.03183746 -149.12095642]
[72.32971954 -136.75187683]
[65.21634674 -122.61997986]
[65.88613129 -107.63494110]
[68.11125183 -92.80089569]
[71.86755371 -78.27883911]
[75.62385559 -63.75677490]
[79.38014984 -49.23471832]
[81.72431946 -47.69750977]
[83.60082245 -45.13912201]
[84.61766052 -41.73303223]
[84.45281219 -37.79128647]
[82.90024567 -33.73622894]
[85.78551483 -19.01633835]
[88.67079163 -4.29644632]
[93.04219055 1.66280162]
[91.48772430 10.66399384]
[94.15351868 25.42521095]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[113.96697998 91.67519379]
[115.95141602 103.15139771]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[114.64334106 142.60929871]
[117.08906555 157.40856934]
[119.53479004 172.20783997]
[121.98052216 187.00711060]
[124.86579132 201.72700500]
[128.18804932 216.35446167]
[131.51031494 230.98191833]
[136.46269226 238.65731812]
[134.77142334 245.85186768]
[137.87553406 260.52716064]
[140.97964478 275.20245361]
[146.69088745 261.33230591]
[158.13427734 251.63441467]
[172.75332642 248.27536011]
[187.28211975 252.00555420]
[198.47486877 261.99166870]
[203.83110046 276.00274658]
[202.15420532 290.90872192]
[193.81881714 303.37954712]
[180.68707275 310.62918091]
[165.69264221 311.03808594]
[152.18533325 304.51486206]
[143.18267822 292.51681519]
[143.85246277 307.50186157]
[144.52224731 322.48690796]
[155.44227600 330.37155151]
[159.76429749 342.92266846]
[156.12229919 355.48522949]
[146.06111145 363.53518677]
[146.50772095 378.52853394]
[146.95431519 393.52188110]
[147.40092468 408.51522827]
[147.95913696 423.50485229]
[148.62892151 438.48989868]
[149.29870605 453.47491455]
[149.96849060 468.45996094]
[150.63827515 483.44500732]
[162.46911621 493.92385864]
[163.34170532 509.70404053]
[152.73834229 521.42346191]
[136.94981384 522.12915039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[8 201]
[9 200]
[10 199]
[11 198]
[14 194]
[15 193]
[16 192]
[17 180]
[18 179]
[19 178]
[20 176]
[21 175]
[22 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 158]
[41 157]
[42 156]
[43 151]
[44 150]
[45 149]
[46 148]
[61 147]
[62 146]
[64 144]
[65 143]
[66 142]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
