%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-31.36335564 315.31494141]
[-24.34008408 328.59097290]
[-19.00155830 342.62948608]
[-15.42870998 357.21765137]
[-13.67570210 372.13430786]
[-13.76910973 387.15332031]
[-15.70751762 402.04702759]
[-19.46154022 416.58959961]
[-24.97426605 430.56063843]
[-32.16212463 443.74829102]
[-40.91614914 455.95266724]
[-51.10363007 466.98873901]
[-62.57012939 476.68917847]
[-75.14181519 484.90698242]
[-88.62811279 491.51754761]
[-102.82456207 496.42065430]
[-117.51595306 499.54196167]
[-132.47956848 500.83419800]
[-147.48857117 500.27770996]
[-162.31541443 497.88095093]
[-176.73532104 493.68029785]
[-190.52972412 487.73937988]
[-203.48947144 480.14831543]
[-215.41809082 471.02212524]
[-226.13478088 460.49917603]
[-235.47706604 448.73901367]
[-243.30329895 435.91989136]
[-249.49485779 422.23617554]
[-253.95787048 407.89529419]
[-256.62469482 393.11462402]
[-257.45489502 378.11828613]
[-256.43585205 363.13357544]
[-253.58305359 348.38769531]
[-248.93974304 334.10415649]
[-242.57630920 320.49954224]
[-234.58921814 307.78002930]
[-225.09953308 296.13845825]
[-214.25114441 285.75137329]
[-202.20849609 276.77615356]
[-189.15415955 269.34893799]
[-175.28602600 263.58224487]
[-160.81434631 259.56356812]
[-145.95848083 257.35379028]
[-130.94366455 256.98641968]
[-115.99752045 258.46701050]
[-101.34661102 261.77313232]
[-87.21305084 266.85467529]
[-73.81109619 273.63461304]
[-61.34392166 282.01013184]
[-51.51334000 270.68051147]
[-49.01627350 255.99671936]
[-34.12799454 250.64418030]
[-24.29741478 239.31459045]
[-26.68778419 221.16516113]
[-14.84973907 206.78553772]
[4.05849409 205.60527039]
[13.54739285 193.98800659]
[23.03629112 182.37074280]
[32.52518845 170.75349426]
[42.01408768 159.13623047]
[51.50298691 147.51896667]
[53.56175613 132.76731873]
[68.28406525 126.97386932]
[70.34283447 112.22223663]
[85.06514740 106.42878723]
[84.59699249 94.79168701]
[92.03144836 85.82674408]
[103.55420685 84.13347626]
[113.21501923 72.65877533]
[113.82340240 68.35948944]
[115.59050751 64.83218384]
[118.13136292 62.34633636]
[121.01303101 61.01870728]
[123.80855560 60.81093979]
[134.13522339 49.93160629]
[144.46189880 39.05227280]
[154.78855896 28.17293739]
[165.11523438 17.29360390]
[169.00410461 1.95778871]
[183.37791443 -1.94645870]
[193.70457458 -12.82579327]
[204.03125000 -23.70512772]
[214.35791016 -34.58446121]
[218.24215698 -52.58429718]
[235.25065613 -56.90613174]
[245.41419983 -67.93801117]
[255.57774353 -78.96988678]
[265.74130249 -90.00176239]
[264.70529175 -107.46446991]
[276.38934326 -120.02622223]
[293.20571899 -120.24639893]
[303.20388794 -131.42837524]
[313.20205688 -142.61035156]
[323.20022583 -153.79232788]
[333.11486816 -165.04841614]
[342.94546509 -176.37800598]
[352.77603149 -187.70759583]
[362.60662842 -199.03720093]
[372.43719482 -210.36679077]
[362.15087891 -221.30218506]
[353.02368164 -233.22212219]
[345.14923096 -246.00431824]
[338.60836792 -259.51757812]
[333.46820068 -273.62322998]
[329.78146362 -288.17654419]
[327.58599854 -303.02816772]
[326.90435791 -318.02572632]
[327.74346924 -333.01528931]
[330.09478760 -347.84304810]
[333.93417358 -362.35684204]
[339.22219849 -376.40771484]
[345.90463257 -389.85153198]
[353.91287231 -402.55032349]
[363.16476440 -414.37374878]
[373.56536865 -425.20050049]
[385.00793457 -434.91949463]
[397.37506104 -443.43096924]
[410.53982544 -450.64758301]
[424.36715698 -456.49530029]
[438.71517944 -460.91412354]
[453.43661499 -463.85867310]
[468.38040161 -465.29876709]
[483.39321899 -465.21960449]
[498.32101440 -463.62197876]
[513.01055908 -460.52233887]
[527.31115723 -455.95245361]
[541.07604980 -449.95922852]
[554.16400146 -442.60415649]
[566.44067383 -433.96273804]
[577.78009033 -424.12362671]
[588.06591797 -413.18777466]
[597.19262695 -401.26742554]
[605.06646729 -388.48489380]
[611.60675049 -374.97134399]
[616.74633789 -360.86547852]
[620.43237305 -346.31198120]
[622.62719727 -331.46026611]
[623.30822754 -316.46267700]
[622.46844482 -301.47317505]
[620.11645508 -286.64550781]
[616.27642822 -272.13189697]
[610.98779297 -258.08123779]
[604.30474854 -244.63769531]
[596.29595947 -231.93927002]
[587.04357910 -220.11624146]
[576.64245605 -209.28994751]
[565.19946289 -199.57147217]
[552.83197021 -191.06053162]
[539.66687012 -183.84449768]
[525.83929443 -177.99737549]
[511.49111938 -173.57920837]
[496.76953125 -170.63529968]
[481.82568359 -169.19587708]
[466.81286621 -169.27571106]
[451.88516235 -170.87396240]
[437.19573975 -173.97425842]
[422.89532471 -178.54476929]
[409.13070679 -184.53860474]
[396.04309082 -191.89424133]
[383.76678467 -200.53620911]
[373.93621826 -189.20661926]
[364.10562134 -177.87701416]
[354.27505493 -166.54742432]
[344.44445801 -155.21783447]
[342.43511963 -148.10557556]
[334.38220215 -143.79414368]
[324.38403320 -132.61216736]
[314.38586426 -121.43019867]
[304.38769531 -110.24822235]
[306.89965820 -97.61021423]
[301.59475708 -85.65445709]
[290.20489502 -78.83671570]
[276.77316284 -79.83821869]
[266.60961914 -68.80634308]
[256.44607544 -57.77446365]
[246.28253174 -46.74258423]
[246.46421814 -34.64739990]
[238.08708191 -25.37338066]
[225.23724365 -24.25779343]
[214.91058350 -13.37845898]
[204.58390808 -2.49912453]
[194.25724792 8.38020992]
[191.10699463 22.93786240]
[175.99456787 27.62027168]
[165.66789246 38.49960709]
[155.34123230 49.37894058]
[145.01455688 60.25827408]
[134.68789673 71.13761139]
[124.68972015 82.31958771]
[115.02890778 93.79428101]
[112.51599121 110.37926483]
[96.68241119 115.91768646]
[93.94493103 131.50025940]
[79.90132904 136.46276855]
[77.16384888 152.04534912]
[63.12025070 157.00785828]
[53.63135147 168.62512207]
[44.14245224 180.24238586]
[34.65355301 191.85964966]
[25.16465569 203.47691345]
[15.67575741 215.09417725]
[19.14808846 226.46429443]
[16.72548485 237.98088074]
[9.12298107 246.80674744]
[-1.68309033 250.82476807]
[-12.96782112 249.14517212]
[-22.79840279 260.47476196]
[-25.99861908 275.96893311]
[-40.18374634 280.51110840]
[-50.01432800 291.84069824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 210]
[50 209]
[52 207]
[53 206]
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
[61 196]
[63 194]
[65 192]
[68 190]
[69 189]
[74 188]
[75 187]
[76 186]
[77 185]
[78 184]
[80 182]
[81 181]
[82 180]
[83 179]
[85 176]
[86 175]
[87 174]
[88 173]
[91 169]
[92 168]
[93 167]
[94 166]
[95 164]
[96 163]
[97 162]
[98 161]
[99 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
