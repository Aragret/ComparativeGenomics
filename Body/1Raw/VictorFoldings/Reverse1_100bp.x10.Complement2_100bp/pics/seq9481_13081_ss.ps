%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[116.26035309 708.00500488]
[112.22776794 693.28424072]
[114.99008942 678.27319336]
[123.99884033 665.95227051]
[137.46533203 658.76782227]
[136.79554749 643.78277588]
[136.12576294 628.79772949]
[123.61587524 620.75781250]
[118.17463684 606.72723389]
[122.08416748 592.01092529]
[134.04774475 582.30639648]
[133.37796021 567.32135010]
[132.70817566 552.33630371]
[118.43283081 547.92041016]
[106.50727844 538.86999512]
[98.38252258 526.26196289]
[95.05539703 511.60754395]
[96.94628143 496.67120361]
[103.84611511 483.25805664]
[114.93929291 472.99581909]
[128.90003967 467.13723755]
[128.23025513 452.15219116]
[127.56047058 437.16717529]
[126.89068604 422.18212891]
[125.55245209 407.24194336]
[123.54843903 392.37640381]
[121.54442596 377.51089478]
[119.54041290 362.64535522]
[117.53639984 347.77981567]
[115.53238678 332.91430664]
[103.24279785 327.69815063]
[95.06988525 317.00482178]
[93.23340607 303.56246948]
[98.31902313 290.86776733]
[109.09764862 282.27636719]
[107.31518555 267.38265991]
[105.53271484 252.48893738]
[96.33784485 240.77128601]
[102.38043213 226.14945984]
[100.59796906 211.25573730]
[98.81549835 196.36203003]
[96.69772339 194.52542114]
[95.17984009 191.73925781]
[94.62717438 188.22785950]
[95.31716919 184.34347534]
[97.39758301 180.53219604]
[96.50476074 165.55877686]
[95.61194611 150.58537292]
[94.71913147 135.61196899]
[93.82631683 120.63856506]
[92.93350220 105.66516113]
[90.44097137 102.72242737]
[89.25765991 98.69531250]
[89.83877563 94.19316864]
[92.35035706 90.00606537]
[92.12702942 75.00772858]
[82.14779663 68.54618073]
[76.58373260 58.17593384]
[76.71516418 46.52790070]
[82.39376831 36.49449921]
[92.10811615 30.51138496]
[92.33144379 15.51304722]
[89.33014679 6.88576174]
[92.67140961 0.29350957]
[93.11801147 -14.69984055]
[93.56462097 -29.69318962]
[90.69210815 -38.36420441]
[94.13114166 -44.90597916]
[94.80092621 -59.89101791]
[95.35913849 -74.88063049]
[95.80574036 -89.87397766]
[96.25234985 -104.86732483]
[86.04551697 -93.87548828]
[71.34985352 -90.86924744]
[57.64647675 -96.96986389]
[50.04640961 -109.90195465]
[51.38428879 -124.84217072]
[61.16111755 -136.21818542]
[75.73037720 -139.78701782]
[89.65810394 -134.21759033]
[97.74988556 -121.58602142]
[99.97500610 -136.42007446]
[102.20012665 -151.25410461]
[104.42523956 -166.08815002]
[106.65036011 -180.92219543]
[108.87547302 -195.75624084]
[103.27091217 -210.55149841]
[112.81058502 -221.99018860]
[115.03570557 -236.82423401]
[117.26081848 -251.65827942]
[119.48593903 -266.49234009]
[121.71105194 -281.32635498]
[123.93617249 -296.16040039]
[109.67588806 -300.93695068]
[96.46178436 -308.11740112]
[84.69541168 -317.48348999]
[74.73435211 -328.75061035]
[66.88129425 -341.57638550]
[61.37489700 -355.57107544]
[58.38248444 -370.30932617]
[57.99499893 -385.34332275]
[60.22421265 -400.21618652]
[65.00238037 -414.47592163]
[72.18430328 -427.68920898]
[81.55173492 -439.45452881]
[92.81999969 -449.41430664]
[105.64666748 -457.26589966]
[119.64196014 -462.77072144]
[134.38056946 -465.76144409]
[149.41461182 -466.14724731]
[164.28720093 -463.91635132]
[178.54640198 -459.13656616]
[191.75888062 -451.95312500]
[203.52313232 -442.58438110]
[213.48162842 -431.31497192]
[221.33178711 -418.48742676]
[226.83500671 -404.49148560]
[229.82406616 -389.75256348]
[230.20814514 -374.71847534]
[227.97555542 -359.84613037]
[223.19415283 -345.58746338]
[216.00923157 -332.37579346]
[206.63914490 -320.61260986]
[195.36862183 -310.65539551]
[182.54016113 -302.80670166]
[168.54362488 -297.30505371]
[153.80433655 -294.31765747]
[138.77021790 -293.93530273]
[136.54510498 -279.10125732]
[134.31997681 -264.26721191]
[132.09486389 -249.43316650]
[129.86975098 -234.59912109]
[127.64463043 -219.76507568]
[133.40835571 -206.03085327]
[123.70951843 -193.53112793]
[121.48439789 -178.69708252]
[119.25928497 -163.86303711]
[117.03416443 -149.02899170]
[114.80905151 -134.19494629]
[112.58393097 -119.36090851]
[111.24569702 -104.42072296]
[110.79909515 -89.42736816]
[110.35248566 -74.43402100]
[113.29544067 -67.65457916]
[109.78596497 -59.22123337]
[109.11618042 -44.23619461]
[108.55796814 -29.24658394]
[108.11136627 -14.25323486]
[107.66475677 0.74011552]
[107.32978058 15.73637486]
[107.10645294 30.73471260]
[120.62425232 43.07913589]
[120.82963562 61.70360184]
[107.12536621 74.78440094]
[107.34869385 89.78273773]
[107.90690613 104.77234650]
[108.79972076 119.74575043]
[109.69253540 134.71916199]
[110.58535004 149.69256592]
[111.47817230 164.66596985]
[112.37098694 179.63937378]
[113.70922089 194.57955933]
[115.49168396 209.47328186]
[117.27415466 224.36698914]
[126.59651947 237.14994812]
[120.42643738 250.70648193]
[122.20890045 265.60018921]
[123.99136353 280.49392700]
[138.87065125 288.53771973]
[145.95324707 303.71459961]
[142.62741089 319.95962524]
[130.39791870 330.91027832]
[132.40193176 345.77581787]
[134.40594482 360.64135742]
[136.40995789 375.50686646]
[138.41397095 390.37240601]
[140.41798401 405.23791504]
[150.35003662 393.99719238]
[165.31233215 392.93420410]
[176.73376465 402.65792847]
[178.07164001 417.59814453]
[168.55955505 429.19644165]
[153.64646912 430.80874634]
[141.87573242 421.51232910]
[142.54551697 436.49737549]
[143.21530151 451.48242188]
[143.88508606 466.46746826]
[158.31283569 471.05715942]
[170.27732849 480.28878784]
[178.34631348 493.03286743]
[181.56221008 507.74096680]
[179.55575562 522.63378906]
[172.58822632 535.91638184]
[161.51766968 545.99468994]
[147.69322205 551.66650391]
[148.36300659 566.65155029]
[149.03279114 581.63659668]
[161.81445312 590.23510742]
[167.02131653 604.54394531]
[162.85353088 619.00402832]
[151.11080933 628.12792969]
[151.78059387 643.11297607]
[152.45037842 658.09802246]
[166.50413513 664.05242920]
[176.57618713 675.52044678]
[180.66671753 690.22521973]
[177.96353149 705.24707031]
[169.00337219 717.60339355]
[155.56526184 724.84082031]
[140.31736755 725.52233887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[11 197]
[12 196]
[13 195]
[21 187]
[22 186]
[23 185]
[24 184]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[35 168]
[36 167]
[37 166]
[39 164]
[40 163]
[41 162]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[55 155]
[56 154]
[61 151]
[62 150]
[64 149]
[65 148]
[66 147]
[68 146]
[69 145]
[70 143]
[71 142]
[72 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
