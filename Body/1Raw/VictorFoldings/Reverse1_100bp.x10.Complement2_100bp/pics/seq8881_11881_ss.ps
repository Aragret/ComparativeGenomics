%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[59.03878784 572.65106201]
[43.53718948 571.95812988]
[31.42440796 562.25970459]
[27.35805511 547.28491211]
[32.90172577 532.79187012]
[45.92376709 524.35351562]
[46.59355164 509.36849976]
[47.26333618 494.38345337]
[47.93312073 479.39840698]
[48.60290527 464.41336060]
[48.93788147 449.41711426]
[48.93788147 434.41711426]
[48.93788147 419.41711426]
[48.93788147 404.41711426]
[48.93788147 389.41711426]
[45.79438019 382.72830200]
[49.05121231 374.19421387]
[49.27453995 359.19586182]
[40.95868301 371.67971802]
[28.09412003 379.39352417]
[13.16479206 380.84790039]
[-0.94667894 375.76199341]
[-11.51558971 365.11782837]
[-16.50124931 350.97064209]
[-14.94100571 336.05200195]
[-7.13611603 323.24249268]
[5.40641737 315.01541138]
[20.26482773 312.95928955]
[34.57018661 317.47113037]
[45.56035995 327.67974854]
[51.11351013 341.61532593]
[53.99878311 326.89541626]
[56.88405228 312.17553711]
[59.76932526 297.45562744]
[62.65459824 282.73574829]
[65.53987122 268.01586914]
[68.42514801 253.29595947]
[71.31041718 238.57608032]
[74.19568634 223.85618591]
[65.69889069 211.67669678]
[68.41527557 196.70751953]
[81.24786377 187.87788391]
[84.13313293 173.15798950]
[86.35825348 158.32394409]
[87.91877747 143.40534973]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[83.81634521 98.42885590]
[93.81699371 84.96173096]
[95.15522766 70.02154541]
[92.95739746 65.28692627]
[92.81018829 60.64670944]
[94.33422852 56.86618805]
[96.90142059 54.44919586]
[98.90544128 39.58366776]
[100.79872894 24.70363045]
[102.58119965 9.80991364]
[104.36366272 -5.08380365]
[92.18196869 -14.33332157]
[86.30440521 -28.34585381]
[88.21711731 -43.31942749]
[97.30709076 -55.24537659]
[111.05344391 -60.98152161]
[112.83591461 -75.87523651]
[114.61837769 -90.76895905]
[100.83191681 -99.40998077]
[92.22472382 -113.14897919]
[90.47697449 -129.20841980]
[95.88810730 -144.36767578]
[107.32701874 -155.60890198]
[122.46802521 -160.71775818]
[124.02854919 -175.63636780]
[125.58907318 -190.55497742]
[127.14959717 -205.47357178]
[128.59901428 -220.40338135]
[129.93725586 -235.34356689]
[131.27548218 -250.28375244]
[132.61372375 -265.22393799]
[119.19873810 -272.31716919]
[109.54749298 -283.97463989]
[105.10669708 -298.40005493]
[106.52329254 -313.38607788]
[113.55041504 -326.65200806]
[125.08971405 -336.19085693]
[139.36296082 -340.57308960]
[140.70118713 -355.51327515]
[142.03942871 -370.45346069]
[127.41604614 -373.90853882]
[113.43325043 -379.40966797]
[100.37570953 -386.84481812]
[88.50926208 -396.06262207]
[78.07549286 -406.87545776]
[69.28681946 -419.06314087]
[62.32216644 -432.37759399]
[57.32332611 -446.54769897]
[54.39206696 -461.28503418]
[53.58806610 -476.28952026]
[54.92769241 -491.25567627]
[58.38367462 -505.87884521]
[63.88565445 -519.86126709]
[71.32160950 -532.91839600]
[80.54016876 -544.78424072]
[91.35363770 -555.21734619]
[103.54187775 -564.00524902]
[116.85675049 -570.96911621]
[131.02719116 -575.96704102]
[145.76467896 -578.89739990]
[160.76921082 -579.70050049]
[175.73529053 -578.35992432]
[190.35824585 -574.90301514]
[204.34036255 -569.40020752]
[217.39697266 -561.96343994]
[229.26228333 -552.74414062]
[239.69471741 -541.92999268]
[248.48187256 -529.74121094]
[255.44488525 -516.42590332]
[260.44195557 -502.25518799]
[263.37139893 -487.51751709]
[264.17355347 -472.51293945]
[262.83206177 -457.54693604]
[259.37426758 -442.92419434]
[253.87055969 -428.94241333]
[246.43299866 -415.88626099]
[237.21296692 -404.02154541]
[226.39820862 -393.58978271]
[214.20887756 -384.80334473]
[200.89314270 -377.84118652]
[186.72209167 -372.84497070]
[171.98423767 -369.91644287]
[156.97961426 -369.11523438]
[155.64137268 -354.17504883]
[154.30313110 -339.23486328]
[167.57035828 -332.38574219]
[177.23071289 -320.94796753]
[181.78836060 -306.64437866]
[180.51910400 -291.64517212]
[173.58531189 -278.23858643]
[162.01594543 -268.48190308]
[147.55390930 -263.88571167]
[146.21566772 -248.94552612]
[144.87744141 -234.00534058]
[143.53919983 -219.06515503]
[146.07342529 -212.12255859]
[142.06820679 -203.91305542]
[140.50767517 -188.99444580]
[138.94715881 -174.07583618]
[137.38662720 -159.15724182]
[149.53611755 -152.45960999]
[158.24269104 -141.60293579]
[162.16609192 -128.20568848]
[160.68226624 -114.28128815]
[153.98242188 -101.93553162]
[143.04907227 -93.04812622]
[129.51210022 -88.98648834]
[127.72962952 -74.09277344]
[125.94716644 -59.19905472]
[137.95169067 -50.38106918]
[143.97068787 -36.64689255]
[142.29594421 -21.64483833]
[133.27772522 -9.41502094]
[119.25737762 -3.30133772]
[117.47491455 11.59237957]
[115.69244385 26.48609734]
[118.01883698 33.50106049]
[113.77096558 41.58768082]
[111.76695251 56.45320892]
[110.09541321 71.35977936]
[108.75717926 86.29996490]
[115.67284393 95.67092133]
[114.54747009 107.26293182]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[102.83737946 144.96586609]
[101.27685547 159.88447571]
[113.58098602 151.30493164]
[128.37155151 153.80274963]
[137.17584229 165.94706726]
[134.95037842 180.78105164]
[122.96998596 189.80714417]
[108.09758759 187.85476685]
[98.85302734 176.04325867]
[95.96775055 190.76315308]
[104.51738739 203.78396606]
[101.38162231 218.67092896]
[88.91558075 226.74145508]
[86.03031158 241.46134949]
[83.14503479 256.18124390]
[80.25976562 270.90112305]
[77.37448883 285.62103271]
[74.48921967 300.34091187]
[71.60394287 315.06079102]
[68.71867371 329.78070068]
[65.83339691 344.50057983]
[64.27288055 359.41918945]
[64.04955292 374.41754150]
[63.93788147 389.41711426]
[63.93788147 404.41711426]
[63.93788147 419.41711426]
[63.93788147 434.41711426]
[63.93788147 449.41711426]
[66.54934692 453.93676758]
[67.10995483 458.54534912]
[65.92926788 462.44677734]
[63.58794403 465.08316040]
[62.91815948 480.06820679]
[62.24837494 495.05322266]
[61.57859039 510.03826904]
[60.90880585 525.02331543]
[73.12608337 534.58978271]
[77.35464478 549.51959229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[17 195]
[18 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[42 182]
[43 181]
[44 174]
[45 173]
[46 172]
[47 171]
[49 168]
[50 167]
[54 166]
[55 165]
[56 163]
[57 162]
[58 161]
[63 156]
[64 155]
[65 154]
[71 147]
[72 146]
[73 145]
[74 144]
[75 142]
[76 141]
[77 140]
[78 139]
[85 132]
[86 131]
[87 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
