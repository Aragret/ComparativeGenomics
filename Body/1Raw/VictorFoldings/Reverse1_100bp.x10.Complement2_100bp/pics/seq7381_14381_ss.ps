%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[153.30747986 385.60009766]
[158.73213196 371.59820557]
[165.69041443 358.29171753]
[174.09483337 345.84802246]
[183.83967590 334.42358398]
[194.80239868 324.16204834]
[185.84170532 312.13269043]
[173.92176819 310.07312012]
[166.35801697 300.12460327]
[167.63943481 287.29022217]
[158.85884094 275.12878418]
[150.07823181 262.96731567]
[141.29762268 250.80586243]
[132.51702881 238.64440918]
[123.73641968 226.48295593]
[121.43249512 241.30496216]
[110.22335052 251.27267456]
[95.23367310 251.82897949]
[83.31652832 242.71954346]
[79.92028809 228.10908508]
[86.59764862 214.67730713]
[100.29582977 208.56503296]
[114.75370789 212.56777954]
[107.28597260 199.55882263]
[108.23166656 214.52899170]
[106.08678436 229.37484741]
[100.94253540 243.46514893]
[93.01763916 256.20077515]
[82.64907837 267.04019165]
[70.27772522 275.52249146]
[56.42961502 281.28701782]
[41.69357681 284.08868408]
[26.69619751 283.80831909]
[12.07517052 280.45785522]
[-1.54780960 274.17977905]
[-13.59348774 265.24099731]
[-23.54967499 254.02162170]
[-30.99302864 240.99870300]
[-35.60705566 226.72596741]
[-37.19556427 211.81031799]
[-35.69100952 196.88597107]
[-31.15736389 182.58750916]
[-23.78740501 169.52290344]
[-13.89450359 158.24768066]
[-1.89931321 149.24127197]
[11.68812561 142.88664246]
[26.29006958 139.45396423]
[41.28563309 139.08921814]
[56.03720093 141.80789185]
[69.91752625 147.49441528]
[82.33641052 155.90698242]
[92.76580048 166.68789673]
[100.76230621 179.37887573]
[91.74291229 167.52561951]
[98.00252533 152.99537659]
[96.44200897 138.07676697]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[91.20633698 93.38936615]
[88.54054260 78.62815094]
[85.87474060 63.86693192]
[83.20894623 49.10571671]
[73.14225769 36.90029526]
[78.49449921 23.00055695]
[64.67864227 16.18673325]
[57.60678101 2.70184517]
[59.80533218 -12.18541050]
[70.22381592 -22.79640198]
[67.55802155 -37.55762100]
[64.89222717 -52.31883621]
[62.22643280 -67.08005524]
[49.52672958 -76.09977722]
[47.03351593 -91.10772705]
[55.71070480 -103.15936279]
[53.04491043 -117.92057800]
[49.07281876 -123.20584869]
[48.45839310 -128.85557556]
[50.52635574 -133.16052246]
[48.30123901 -147.99456787]
[46.07612228 -162.82861328]
[43.85100555 -177.66265869]
[41.62588501 -192.49670410]
[39.40076828 -207.33074951]
[24.36664391 -207.71311951]
[9.62735748 -210.70051575]
[-4.36918211 -216.20214844]
[-17.19763374 -224.05084229]
[-28.46815681 -234.00807190]
[-37.83825302 -245.77125549]
[-45.02317047 -258.98291016]
[-49.80457687 -273.24157715]
[-52.03716278 -288.11392212]
[-51.65308762 -303.14801025]
[-48.66402054 -317.88696289]
[-43.16079330 -331.88287354]
[-35.31064987 -344.71041870]
[-25.35214043 -355.97982788]
[-13.58789730 -365.34857178]
[-0.37541914 -372.53201294]
[13.88377953 -377.31179810]
[28.75637817 -379.54269409]
[43.79041672 -379.15692139]
[58.52902603 -376.16616821]
[72.52431488 -370.66134644]
[85.35099030 -362.80975342]
[96.61925507 -352.84997559]
[105.98667908 -341.08465576]
[113.16860199 -327.87136841]
[117.94676971 -313.61163330]
[120.17598724 -298.73876953]
[119.78849792 -283.70477295]
[116.79608917 -268.96652222]
[111.28968811 -254.97184753]
[103.43663788 -242.14607239]
[93.47557068 -230.87893677]
[81.70920563 -221.51284790]
[68.49509430 -214.33241272]
[54.23481369 -209.55586243]
[56.45993042 -194.72181702]
[58.68504715 -179.88777161]
[60.91016388 -165.05372620]
[63.13528061 -150.21969604]
[65.36039734 -135.38565063]
[67.80612946 -120.58637238]
[70.47192383 -105.82515717]
[82.81642151 -97.56992340]
[85.73019409 -82.63792419]
[76.98764801 -69.74584961]
[79.65344238 -54.98463058]
[82.31923676 -40.22341537]
[84.98503113 -25.46219826]
[98.45692444 -19.16567802]
[105.72387695 -5.98784065]
[103.81549835 9.11882973]
[93.25571442 20.33476257]
[103.13173676 31.48435974]
[97.97016907 46.43991852]
[100.63596344 61.20113754]
[103.30175781 75.96235657]
[105.96755219 90.72357178]
[116.53439331 80.07735443]
[131.46202087 81.54910278]
[139.74633789 94.05390930]
[135.28045654 108.37368011]
[121.35646820 113.95242310]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[111.36061096 136.51625061]
[112.92113495 151.43486023]
[122.05214691 164.35519409]
[115.68091583 177.81835938]
[120.29492188 192.09107971]
[127.76266479 205.10003662]
[135.89787292 217.70234680]
[144.67848206 229.86380005]
[153.45909119 242.02526855]
[162.23968506 254.18672180]
[171.02029419 266.34817505]
[179.80088806 278.50964355]
[196.77114868 285.65750122]
[197.87107849 303.17199707]
[206.83177185 315.20135498]
[219.80216980 307.63507080]
[233.53817749 301.56860352]
[247.86706543 297.07824707]
[262.60861206 294.22048950]
[277.57745361 293.03128052]
[292.58529663 293.52554321]
[307.44345093 295.69708252]
[321.96502686 299.51855469]
[335.96740723 304.94195557]
[349.27450562 311.89904785]
[361.71896362 320.30233765]
[373.14428711 330.04617310]
[383.40676880 341.00796509]
[392.37738037 353.04989624]
[399.94329834 366.02053833]
[406.00933838 379.75671387]
[410.49926758 394.08572388]
[413.35659790 408.82736206]
[414.54534912 423.79623413]
[414.05065918 438.80407715]
[411.87866211 453.66213989]
[408.05673218 468.18362427]
[402.63293457 482.18585205]
[395.67544556 495.49273682]
[387.27175903 507.93695068]
[377.52761841 519.36199951]
[366.56549072 529.62414551]
[354.52328491 538.59436035]
[341.55245972 546.15991211]
[327.81607056 552.22552490]
[313.48690796 556.71502686]
[298.74520874 559.57189941]
[283.77630615 560.76025391]
[268.76849365 560.26507568]
[253.91046143 558.09265137]
[239.38911438 554.27032471]
[225.38705444 548.84606934]
[212.08036804 541.88818359]
[199.63641357 533.48413086]
[188.21166992 523.73962402]
[177.94982910 512.77722168]
[168.97994995 500.73474121]
[161.41481018 487.76367188]
[155.34957886 474.02709961]
[150.86051941 459.69784546]
[148.00408936 444.95602417]
[146.81620789 429.98709106]
[147.31181335 414.97927856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 162]
[7 161]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[23 153]
[24 152]
[53 151]
[55 149]
[56 148]
[57 147]
[58 146]
[59 140]
[60 139]
[61 138]
[62 137]
[64 135]
[68 131]
[69 130]
[70 129]
[71 128]
[74 125]
[75 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
