%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[184.62051392 589.12713623]
[185.29016113 574.11486816]
[188.13858032 559.36004639]
[193.10504150 545.17724609]
[200.08370972 531.86871338]
[208.92579651 519.71820068]
[219.44287109 508.98464966]
[231.41073608 499.89685059]
[244.57429504 492.64852905]
[239.32757568 478.59603882]
[234.08085632 464.54357910]
[228.83413696 450.49108887]
[223.58741760 436.43862915]
[218.34069824 422.38616943]
[213.09397888 408.33367920]
[207.43119812 394.44366455]
[201.35736084 380.72839355]
[195.28353882 367.01312256]
[189.20970154 353.29785156]
[185.15620422 350.77233887]
[182.64617920 345.67364502]
[183.16596985 339.08264160]
[177.50318909 325.19259644]
[166.47880554 320.21368408]
[161.64736938 308.68801880]
[166.10194397 296.58349609]
[160.64659119 282.61068726]
[155.19123840 268.63790894]
[144.24220276 263.49539185]
[139.58290100 251.89907837]
[144.21719360 239.86221313]
[138.97047424 225.80973816]
[133.72375488 211.75726318]
[128.47705078 197.70480347]
[112.52767944 193.81953430]
[101.93076324 181.06544495]
[101.01493073 164.34233093]
[110.33890533 150.22993469]
[104.88355255 136.25714111]
[101.81849670 134.51420593]
[99.44537354 131.20008850]
[98.49344635 126.65618134]
[99.51193237 121.53663635]
[94.68593597 107.33417511]
[91.50312805 105.15653229]
[89.29565430 101.58652496]
[88.66383362 97.09121704]
[89.97698212 92.38850403]
[85.78997040 77.98472595]
[80.38951874 70.61770630]
[81.64955902 63.33525467]
[77.67745972 48.87073135]
[73.70536804 34.40620804]
[69.73326874 19.94168472]
[65.76117706 5.47715998]
[61.78907776 -8.98736382]
[57.81698227 -23.45188713]
[46.70151520 -34.71052933]
[50.79234314 -49.03234482]
[47.59633636 -51.97164536]
[45.69329071 -55.42750168]
[45.08683777 -58.93001938]
[45.62761307 -62.05638504]
[47.04189301 -64.47670746]
[43.93778229 -79.15200806]
[40.83367157 -93.82730865]
[37.72956467 -108.50261688]
[34.62545395 -123.17791748]
[26.51709175 -110.55831146]
[12.23185635 -105.98315430]
[-1.69923627 -111.54415131]
[-8.90707779 -124.69888306]
[-6.09633970 -139.43318176]
[5.44794559 -149.01074219]
[20.44788742 -149.05281067]
[32.04666519 -139.53857422]
[30.48614120 -154.45716858]
[20.22380829 -143.51713562]
[5.23650455 -142.90011597]
[-5.89036369 -152.95957947]
[-6.78282070 -167.93299866]
[3.07037330 -179.24293518]
[18.02486229 -180.41053772]
[29.51359177 -170.76777649]
[29.29026413 -185.76611328]
[29.06693649 -200.76445007]
[28.84360886 -215.76278687]
[28.62028122 -230.76112366]
[28.39695358 -245.75946045]
[14.11224747 -250.77668762]
[2.42792130 -260.36044312]
[-5.25804281 -273.33914185]
[-8.03460693 -288.13644409]
[-5.58562565 -302.96292114]
[1.77427995 -316.03219604]
[13.13999939 -325.77639771]
[27.12719917 -331.03411865]
[26.90387154 -346.03247070]
[26.68054390 -361.03079224]
[12.99511433 -367.88409424]
[4.07157040 -380.31906128]
[1.96047699 -395.47830200]
[7.14694834 -409.87826538]
[18.43917084 -420.20996094]
[33.24227524 -424.09927368]
[48.15461731 -420.65243530]
[59.74944687 -410.66152954]
[65.36235809 -396.42236328]
[63.70354843 -381.20700073]
[55.15419769 -368.51184082]
[41.67888260 -361.25411987]
[41.90221024 -346.25579834]
[42.12553787 -331.25744629]
[56.26307678 -326.41851807]
[67.91387939 -317.01702881]
[75.65964508 -304.17266846]
[78.54898071 -289.42568970]
[76.21421814 -274.55227661]
[68.91808319 -261.35049438]
[57.52428055 -251.42309570]
[43.39529037 -245.98278809]
[43.61861801 -230.98445129]
[43.84194565 -215.98611450]
[44.06527328 -200.98777771]
[44.28860092 -185.98944092]
[44.51192856 -170.99110413]
[45.40474701 -156.01770020]
[46.96526718 -141.09909058]
[49.30075455 -126.28202820]
[52.40486526 -111.60671997]
[55.50897598 -96.93141937]
[58.61308670 -82.25611877]
[61.71719742 -67.58081818]
[65.25686646 -53.00444031]
[76.08821869 -42.78039932]
[72.28150177 -27.42398453]
[76.25360107 -12.95946026]
[80.22570038 1.50506377]
[84.19779205 15.96958733]
[88.16989136 30.43411064]
[92.14198303 44.89863586]
[96.11408234 59.36315918]
[100.19374847 73.79771423]
[104.38076019 88.20149231]
[108.88838959 102.50817871]
[113.71438599 116.71063995]
[118.85634613 130.80177307]
[124.31170654 144.77458191]
[137.86871338 147.26419067]
[148.34216309 156.05769348]
[153.06512451 168.77630615]
[150.90425110 182.06068420]
[142.52951050 192.45808411]
[147.77622986 206.51054382]
[153.02294922 220.56301880]
[158.26966858 234.61549377]
[172.74130249 246.00202942]
[169.16403198 263.18255615]
[174.61938477 277.15533447]
[180.07473755 291.12814331]
[194.71430969 302.29794312]
[191.39321899 319.52981567]
[197.05599976 333.41986084]
[202.92495728 347.22402954]
[208.99879456 360.93930054]
[215.07263184 374.65457153]
[221.14646912 388.36984253]
[224.74313354 390.80252075]
[227.13777161 393.93783569]
[228.25708008 397.31164551]
[228.18606567 400.48364258]
[227.14645386 403.08697510]
[232.39317322 417.13943481]
[237.63989258 431.19192505]
[242.88661194 445.24438477]
[248.13333130 459.29684448]
[253.38005066 473.34933472]
[258.62677002 487.40179443]
[273.31964111 484.24948120]
[288.31494141 483.27014160]
[303.29302979 484.48468018]
[317.93463135 487.86718750]
[331.92767334 493.34555054]
[344.97387695 500.80303955]
[356.79519653 510.08065796]
[367.13964844 520.98065186]
[375.78671265 533.27075195]
[382.55209351 546.68890381]
[387.29159546 560.94915771]
[389.90420532 575.74755859]
[390.33419800 590.76867676]
[388.57244873 605.69226074]
[384.65646362 620.20031738]
[378.66976929 633.98352051]
[370.73992920 646.74810791]
[361.03598022 658.22204590]
[349.76473999 668.16076660]
[337.16650391 676.35235596]
[323.50976562 682.62225342]
[309.08563232 686.83679199]
[294.20156860 688.90612793]
[279.17480469 688.78625488]
[264.32565308 686.47961426]
[249.97062683 682.03540039]
[236.41569519 675.54840088]
[223.94978333 667.15679932]
[212.83859253 657.03948975]
[203.31898499 645.41217041]
[195.59384155 632.52264404]
[189.82785034 618.64562988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 167]
[17 166]
[18 165]
[19 164]
[22 163]
[23 162]
[26 160]
[27 159]
[28 158]
[31 156]
[32 155]
[33 154]
[34 153]
[38 148]
[39 147]
[43 146]
[44 145]
[48 144]
[49 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[59 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[76 128]
[77 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
