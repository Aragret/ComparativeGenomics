%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[81.17819214 614.54516602]
[66.12843323 613.87249756]
[51.60582733 609.86730957]
[38.33882141 602.73046875]
[26.99288177 592.82000732]
[18.13711739 580.63299561]
[12.21573162 566.78076172]
[9.52573586 551.95806885]
[10.20206070 536.90844727]
[14.21078110 522.38684082]
[21.35082054 509.12155151]
[31.26403999 497.77801514]
[43.45319366 488.92520142]
[57.30688477 483.00717163]
[72.13021088 480.32077026]
[72.79999542 465.33575439]
[73.46977997 450.35070801]
[74.13956451 435.36566162]
[74.80934906 420.38061523]
[75.47913361 405.39559937]
[68.31785583 392.33551025]
[76.66364288 378.89459229]
[77.33343506 363.90957642]
[77.89163971 348.91995239]
[78.33824921 333.92660522]
[76.51634216 331.79614258]
[75.42855835 328.81567383]
[75.40289307 325.26113892]
[76.66146851 321.52206421]
[79.28423309 318.06155396]
[80.62246704 303.12139893]
[81.96070099 288.18121338]
[75.38972473 274.81439209]
[84.32736206 261.75955200]
[85.44300842 246.80108643]
[86.33582306 231.82768250]
[87.22863770 216.85427856]
[88.12145233 201.88085938]
[89.01427460 186.90745544]
[89.79559326 171.92782593]
[90.46537781 156.94277954]
[91.13516235 141.95774841]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[93.98320770 42.59357071]
[93.98320770 27.59357071]
[93.98320770 12.59357071]
[86.24591064 -1.20660174]
[93.98320770 -13.93387413]
[93.98320770 -28.93387413]
[93.98320770 -43.93387222]
[84.66684723 -32.17779541]
[70.50840759 -27.22414398]
[55.89504242 -30.60786438]
[45.35485840 -41.28047180]
[42.15385056 -55.93494415]
[47.28387833 -70.03043365]
[59.15535355 -79.19929504]
[74.08976746 -80.60046387]
[87.45953369 -73.79976654]
[95.12194061 -60.90423203]
[97.12595367 -75.76976013]
[99.12996674 -90.63528442]
[101.13397980 -105.50081635]
[95.30976105 -120.21098328]
[104.67807007 -131.79045105]
[106.68208313 -146.65597534]
[108.68609619 -161.52149963]
[110.69010925 -176.38703918]
[99.88664246 -165.98101807]
[85.19332123 -162.96336365]
[71.16303253 -168.26910400]
[62.14321136 -180.25421143]
[60.92874527 -195.20495605]
[67.89595795 -208.48870850]
[80.88597870 -215.98933411]
[95.87370300 -215.38269043]
[108.21502686 -206.85675049]
[114.08589172 -193.05311584]
[118.05799103 -207.51763916]
[122.03008270 -221.98216248]
[118.22336578 -237.33857727]
[129.05471802 -247.56262207]
[127.80805206 -251.72192383]
[127.93683624 -255.66500854]
[129.20419312 -258.98605347]
[131.26577759 -261.39776611]
[133.71778870 -262.75637817]
[138.54379272 -276.95883179]
[135.65785217 -292.51458740]
[147.07853699 -302.07580566]
[151.90454102 -316.27825928]
[156.73054504 -330.48074341]
[161.55653381 -344.68319702]
[166.38253784 -358.88565063]
[153.19815063 -366.12048340]
[141.47048950 -375.53500366]
[131.55596924 -386.84313965]
[123.75586700 -399.70117188]
[118.30722046 -413.71844482]
[115.37560272 -428.46890259]
[115.05010986 -443.50436401]
[117.34062958 -458.36791992]
[122.17755890 -472.60781860]
[129.41389465 -485.79141235]
[138.82975769 -497.51797485]
[150.13899231 -507.43121338]
[162.99792480 -515.22985840]
[177.01579285 -520.67694092]
[191.76661682 -523.60687256]
[206.80210876 -523.93066406]
[221.66539001 -521.63842773]
[235.90475464 -516.79992676]
[249.08750916 -509.56207275]
[260.81301880 -500.14489746]
[270.72497559 -488.83453369]
[278.52215576 -475.97470093]
[283.96762085 -461.95620728]
[286.89590454 -447.20507812]
[287.21798706 -432.16952515]
[284.92410278 -417.30651855]
[280.08395386 -403.06768799]
[272.84460449 -389.88577271]
[263.42608643 -378.16131592]
[252.11460876 -368.25064087]
[239.25390625 -360.45492554]
[225.23480225 -355.01104736]
[210.48332214 -352.08444214]
[195.44773865 -351.76406860]
[180.58499146 -354.05963135]
[175.75898743 -339.85717773]
[170.93299866 -325.65472412]
[166.10699463 -311.45227051]
[161.28100586 -297.24981689]
[164.51213074 -282.70989990]
[152.74624634 -272.13284302]
[147.92024231 -257.93038940]
[143.51924133 -243.59053040]
[147.61007690 -229.26870728]
[136.49461365 -218.01007080]
[132.52250671 -203.54554749]
[128.55041504 -189.08102417]
[125.55564117 -174.38302612]
[123.55162811 -159.51748657]
[121.54761505 -144.65196228]
[119.54360199 -129.78643799]
[125.51116180 -116.13954926]
[115.99951172 -103.49680328]
[113.99549866 -88.63127136]
[111.99148560 -73.76574707]
[109.98746490 -58.90021896]
[108.98320770 -43.93387222]
[108.98320770 -28.93387413]
[108.98320770 -13.93387413]
[116.72051239 -1.20660174]
[108.98320770 12.59357071]
[108.98320770 27.59357071]
[108.98320770 42.59357071]
[111.66689301 46.54412460]
[111.89735413 52.22249985]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[109.55924225 136.08575439]
[106.12020111 142.62753296]
[105.45041656 157.61256409]
[104.78063202 172.59761047]
[107.52372742 181.31042480]
[103.98767853 187.80027771]
[103.09486389 202.77368164]
[102.20204926 217.74708557]
[101.30922699 232.72048950]
[100.41641235 247.69389343]
[103.02912140 253.76722717]
[102.29297638 259.40240479]
[99.26754761 263.09777832]
[105.74279785 277.53320312]
[96.90087891 289.51943970]
[95.56264496 304.45962524]
[94.22441101 319.39981079]
[93.33159637 334.37319946]
[92.88499451 349.36654663]
[95.75750732 358.03756714]
[92.31847382 364.57934570]
[91.64868164 379.56439209]
[98.76205444 393.69628906]
[90.46417236 406.06536865]
[89.79438782 421.05041504]
[89.12460327 436.03546143]
[88.45481873 451.02047729]
[87.78503418 466.00552368]
[87.11524963 480.99057007]
[101.63979340 484.98873901]
[114.91025543 492.11914062]
[126.26099396 502.02410889]
[135.12266541 514.20678711]
[141.05076599 528.05621338]
[143.74794006 542.87756348]
[143.07890320 557.92749023]
[139.07722473 572.45104980]
[131.94361877 585.71978760]
[122.03589630 597.06811523]
[109.85102844 605.92687988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[22 192]
[23 191]
[24 189]
[25 188]
[30 187]
[31 186]
[32 185]
[34 183]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 174]
[41 173]
[42 172]
[43 170]
[44 169]
[46 167]
[47 166]
[48 165]
[49 162]
[50 161]
[51 160]
[53 158]
[54 157]
[55 156]
[65 155]
[66 154]
[67 153]
[68 152]
[70 150]
[71 149]
[72 148]
[73 147]
[83 146]
[84 145]
[85 144]
[87 142]
[92 141]
[93 140]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
