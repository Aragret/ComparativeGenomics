%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[238.22004700 452.61331177]
[236.70651245 437.68139648]
[236.41513062 422.67581177]
[237.34782410 407.69638062]
[239.49836731 392.84283447]
[242.85247803 378.21398926]
[247.38781738 363.90722656]
[253.07421875 350.01776123]
[259.87380981 336.63800049]
[267.74136353 323.85696411]
[276.62454224 311.75976562]
[286.46417236 300.42687988]
[275.97668457 289.70251465]
[265.48916626 278.97811890]
[255.00167847 268.25375366]
[244.51417542 257.52935791]
[234.02667236 246.80499268]
[220.44152832 253.02827454]
[205.51893616 254.23042297]
[191.05838013 250.24707031]
[178.81031799 241.54040527]
[170.26416016 229.14552307]
[166.46726990 214.54743958]
[167.89660645 199.50320435]
[174.39886475 185.83038330]
[163.91136169 175.10600281]
[153.42385864 164.38162231]
[142.93635559 153.65724182]
[132.44885254 142.93286133]
[121.88180542 132.28684998]
[111.23580170 121.71980286]
[100.58979034 111.15275574]
[89.86540985 100.66525269]
[78.98607635 90.33858490]
[60.95782089 86.58843994]
[56.50948715 69.61260223]
[45.40225601 59.53145981]
[34.29502106 49.45032120]
[23.18778610 39.36918259]
[12.08055305 29.28804398]
[1.11053467 39.53100586]
[-10.66787815 48.83307648]
[-23.17422676 57.13071442]
[-36.32307816 64.36723328]
[-50.02460861 70.49320984]
[-64.18522644 75.46678925]
[-78.70819092 79.25399780]
[-93.49430084 81.82896423]
[-108.44255066 83.17409515]
[-123.45082855 83.28021240]
[-138.41659546 82.14658356]
[-153.23764038 79.78095245]
[-167.81271362 76.19947815]
[-182.04223633 71.42662811]
[-195.82902527 65.49500275]
[-209.07888794 58.44513321]
[-221.70130920 50.32516479]
[-233.61007690 41.19057083]
[-244.72383118 31.10375214]
[-254.96665955 20.13361168]
[-264.26858521 8.35508823]
[-272.56607056 -4.15135908]
[-279.80245972 -17.30029488]
[-285.92825317 -31.00189972]
[-290.90167236 -45.16257477]
[-294.68872070 -59.68558884]
[-297.26348877 -74.47173309]
[-298.60845947 -89.41999817]
[-298.71438599 -104.42826843]
[-297.58056641 -119.39403534]
[-295.21478271 -134.21504211]
[-291.63311768 -148.79006958]
[-286.86010742 -163.01954651]
[-280.92831421 -176.80625916]
[-273.87829590 -190.05603027]
[-265.75817871 -202.67835999]
[-256.62344360 -214.58702087]
[-246.53648376 -225.70065308]
[-235.56622314 -235.94335938]
[-223.78758240 -245.24514771]
[-211.28103638 -253.54248047]
[-198.13201904 -260.77868652]
[-184.43034363 -266.90435791]
[-170.26960754 -271.87759399]
[-155.74655151 -275.66445923]
[-140.96037292 -278.23907471]
[-126.01209259 -279.58383179]
[-111.00381470 -279.68960571]
[-96.03807068 -278.55560303]
[-81.21708679 -276.18963623]
[-66.64210510 -272.60778809]
[-52.41268921 -267.83462524]
[-38.62604523 -261.90267944]
[-25.37635231 -254.85247803]
[-12.75411892 -246.73220825]
[-0.84556931 -237.59733582]
[10.26794815 -227.51023865]
[20.51051521 -216.53985596]
[29.81216621 -204.76110840]
[38.10935593 -192.25447083]
[45.34540939 -179.10536194]
[51.47089386 -165.40361023]
[56.44396591 -151.24281311]
[60.23065567 -136.71971130]
[62.80509186 -121.93350983]
[64.14969635 -106.98521423]
[64.25527191 -91.97693634]
[63.12110519 -77.01119995]
[60.75494385 -62.19024277]
[57.17295074 -47.61530304]
[52.39958954 -33.38594818]
[46.46747589 -19.59937668]
[39.41712952 -6.34976721]
[31.29671097 6.27236938]
[22.16169167 18.18081093]
[33.26892471 28.26194954]
[44.37615967 38.34308624]
[55.48339462 48.42422867]
[66.59062958 58.50536728]
[78.68412781 58.23364258]
[88.02024841 66.54150391]
[89.23146820 79.38267517]
[96.26403046 81.65531158]
[100.27278137 89.86309814]
[107.80117798 92.74334717]
[111.15683746 100.50674438]
[121.80284882 111.07379150]
[132.44885254 121.64083862]
[140.74411011 125.46530151]
[143.17323303 132.44535828]
[153.66073608 143.16973877]
[164.14823914 153.89411926]
[174.63574219 164.61849976]
[185.12324524 175.34288025]
[198.93785095 169.14758301]
[214.01025391 168.05456543]
[228.51991272 172.17651367]
[240.72085571 180.99732971]
[249.15184021 193.43678284]
[252.81126404 207.98268127]
[251.27616882 222.87471008]
[244.75105286 236.31748962]
[255.23855591 247.04187012]
[265.72604370 257.76623535]
[276.21356201 268.49063110]
[286.70104980 279.21499634]
[297.18856812 289.93939209]
[308.73834229 280.35528564]
[321.03091431 271.74447632]
[333.98443604 264.16430664]
[347.51272583 257.66519165]
[361.52572632 252.29040527]
[375.93020630 248.07568359]
[390.63027954 245.04910278]
[405.52816772 243.23078918]
[420.52465820 242.63285828]
[435.52001953 243.25927734]
[450.41439819 245.10586548]
[465.10870361 248.16036987]
[479.50515747 252.40243530]
[493.50793457 257.80383301]
[507.02383423 264.32861328]
[519.96295166 271.93338013]
[532.23913574 280.56750488]
[543.77069092 290.17352295]
[554.48089600 300.68753052]
[564.29852295 312.03952026]
[573.15814209 324.15399170]
[581.00079346 336.95028687]
[587.77435303 350.34323120]
[593.43371582 364.24377441]
[597.94122314 378.55932617]
[601.26690674 393.19464111]
[603.38854980 408.05233765]
[604.29211426 423.03353882]
[603.97155762 438.03854370]
[602.42895508 452.96749878]
[599.67468262 467.72103882]
[595.72698975 482.20095825]
[590.61218262 496.31094360]
[584.36431885 509.95706177]
[577.02490234 523.04852295]
[568.64288330 535.49816895]
[559.27392578 547.22320557]
[548.98046875 558.14556885]
[537.83099365 568.19250488]
[525.89971924 577.29724121]
[513.26593018 585.39923096]
[500.01385498 592.44439697]
[486.23159790 598.38598633]
[472.01092529 603.18444824]
[457.44644165 606.80773926]
[442.63507080 609.23187256]
[427.67541504 610.44067383]
[412.66699219 610.42608643]
[397.70971680 609.18817139]
[382.90307617 606.73529053]
[368.34567261 603.08361816]
[354.13433838 598.25750732]
[340.36367798 592.28918457]
[327.12530518 585.21820068]
[314.50735474 577.09167480]
[302.59378052 567.96374512]
[291.46383667 557.89514160]
[281.19165039 546.95275879]
[271.84555054 535.20953369]
[263.48773193 522.74359131]
[256.17382812 509.63790894]
[249.95248413 495.97967529]
[244.86514282 481.85977173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 128]
[31 127]
[32 126]
[33 124]
[34 122]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
