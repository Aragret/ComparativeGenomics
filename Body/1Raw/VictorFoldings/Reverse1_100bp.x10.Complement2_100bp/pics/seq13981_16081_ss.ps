%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[27.75452805 407.21917725]
[30.91094971 421.98196411]
[29.96622467 437.04882812]
[24.99045563 451.30169678]
[16.35287666 463.68292236]
[4.69445562 473.27374268]
[-9.11967659 479.36242676]
[-24.06441879 481.49719238]
[-39.03077316 479.51962280]
[-52.90813828 473.57644653]
[-64.66671753 464.10867310]
[-73.43394470 451.81893921]
[-78.55924225 437.61914062]
[-79.66226959 422.56304932]
[-76.66117859 407.76791382]
[-69.77867126 394.33163452]
[-59.52547455 383.25125122]
[-46.66244507 375.34906006]
[-32.14410019 371.21139526]
[-17.04780197 371.14529419]
[-13.07570553 356.68078613]
[-9.10361004 342.21624756]
[-5.13151360 327.75173950]
[-6.39922762 325.25152588]
[-6.75295925 322.09851074]
[-5.93910599 318.63830566]
[-3.83374071 315.30184937]
[-0.46844712 312.55798340]
[4.35755062 298.35552979]
[9.18354797 284.15307617]
[14.00954628 269.95062256]
[18.83554268 255.74816895]
[17.56557465 251.14422607]
[19.17428970 245.69361877]
[24.02244377 241.19841003]
[29.26916313 227.14593506]
[26.47237778 212.51626587]
[38.54796219 202.29420471]
[43.79468155 188.24172974]
[49.04140091 174.18925476]
[37.01639557 183.15582275]
[22.30854988 186.10188293]
[7.75772190 182.45861816]
[-3.82655430 172.92947388]
[-10.20753574 159.35438538]
[-10.15315437 144.35449219]
[-3.67391157 130.82601929]
[7.97915316 121.38112640]
[22.55601501 117.84346008]
[37.24211121 120.89608765]
[49.20178604 129.94961548]
[56.12581635 143.25592041]
[56.67704010 158.24702454]
[64.33763885 145.35070801]
[71.99823761 132.45437622]
[79.65883636 119.55805206]
[87.31942749 106.66172028]
[87.68491364 92.68466949]
[99.78424072 85.67768097]
[107.44483948 72.78135681]
[115.10543823 59.88502502]
[101.09174347 65.23445129]
[86.38909149 62.26256943]
[75.55326080 51.89025879]
[71.94185638 37.33148956]
[76.67390442 23.09745598]
[88.28313446 13.59872723]
[103.17229462 11.77858734]
[116.72781372 18.20102692]
[124.74938202 30.87598419]
[124.75134277 45.87623215]
[134.06622314 34.11898041]
[143.38110352 22.36172867]
[144.72174072 15.88760948]
[148.55522156 11.69219685]
[153.15255737 10.39853859]
[162.81336975 -1.07616174]
[172.47418213 -12.55086136]
[182.13499451 -24.02556229]
[191.79579163 -35.50026321]
[193.32859802 -41.93159485]
[197.28529358 -46.01101303]
[201.91909790 -47.16721725]
[211.91728210 -58.34918976]
[221.91545105 -69.53116608]
[231.91362000 -80.71314240]
[235.34416199 -96.15794373]
[249.59535217 -100.48841858]
[259.59353638 -111.67039490]
[249.19450378 -122.49064636]
[239.64360046 -134.06639099]
[230.99551392 -146.33129883]
[223.29978943 -159.21511841]
[216.60047913 -172.64407349]
[210.93598938 -186.54122925]
[206.33876038 -200.82698059]
[202.83509827 -215.41950989]
[200.44509888 -230.23521423]
[199.18244934 -245.18925476]
[199.05438232 -260.19595337]
[200.06161499 -275.16934204]
[202.19839478 -290.02371216]
[205.45246887 -304.67388916]
[209.80522156 -319.03604126]
[215.23168945 -333.02786255]
[221.70080566 -346.56918335]
[229.17552185 -359.58248901]
[237.61302185 -371.99322510]
[246.96496582 -383.73028564]
[257.17779541 -394.72644043]
[268.19299316 -404.91873169]
[279.94747925 -414.24874878]
[292.37393188 -422.66308594]
[305.40115356 -430.11349487]
[318.95452881 -436.55734253]
[332.95645142 -441.95770264]
[347.32669067 -446.28363037]
[361.98294067 -449.51037598]
[376.84124756 -451.61941528]
[391.81649780 -452.59872437]
[406.82293701 -452.44265747]
[421.77456665 -451.15209961]
[436.58581543 -448.73446655]
[451.17175293 -445.20358276]
[465.44891357 -440.57968140]
[479.33547974 -434.88928223]
[492.75189209 -428.16491699]
[505.62133789 -420.44515991]
[517.87011719 -411.77420044]
[529.42797852 -402.20172119]
[540.22882080 -391.78253174]
[550.21075439 -380.57632446]
[559.31652832 -368.64730835]
[567.49407959 -356.06378174]
[574.69653320 -342.89782715]
[580.88256836 -329.22485352]
[586.01684570 -315.12319946]
[590.06994629 -300.67364502]
[593.01861572 -285.95892334]
[594.84600830 -271.06335449]
[595.54156494 -256.07223511]
[595.10137939 -241.07145691]
[593.52801514 -226.14692688]
[590.83038330 -211.38412476]
[587.02392578 -196.86763000]
[582.13055420 -182.68058777]
[576.17828369 -168.90425110]
[569.20111084 -155.61753845]
[561.23907471 -142.89656067]
[552.33776855 -130.81417847]
[542.54815674 -119.43959808]
[531.92633057 -108.83797455]
[520.53314209 -99.07003021]
[508.43386841 -90.19171906]
[495.69775391 -82.25389862]
[482.39779663 -75.30202484]
[468.61016846 -69.37593079]
[454.41384888 -64.50955963]
[439.89013672 -60.73078156]
[425.12222290 -58.06124115]
[410.19473267 -56.51623154]
[395.19311523 -56.10459900]
[380.20336914 -56.82870865]
[365.31127930 -58.68440247]
[350.60220337 -61.66106033]
[336.16036987 -65.74163055]
[322.06851196 -70.90273285]
[308.40734863 -77.11481476]
[295.25512695 -84.34228516]
[282.68719482 -92.54374695]
[270.77548218 -101.67222595]
[260.77731323 -90.49024963]
[258.06192017 -75.84525299]
[243.09559631 -70.71496582]
[233.09742737 -59.53299332]
[223.09924316 -48.35102081]
[213.10107422 -37.16904449]
[203.27049255 -25.83945084]
[193.60968018 -14.36475182]
[183.94888306 -2.89005136]
[174.28807068 8.58464909]
[164.62725830 20.05934906]
[155.13835144 31.67661285]
[145.82347107 43.43386459]
[136.50859070 55.19111633]
[128.00177002 67.54562378]
[120.34116364 80.44194794]
[112.68057251 93.33827972]
[112.31508636 107.31533051]
[100.21575928 114.32231903]
[92.55516052 127.21864319]
[84.89456177 140.11497498]
[77.23396301 153.01130676]
[69.57336426 165.90762329]
[63.09387207 179.43597412]
[57.84715271 193.48844910]
[52.60043335 207.54090881]
[55.02193832 223.17572021]
[43.32163239 232.39265442]
[38.07491684 246.44512939]
[33.03799820 260.57415771]
[28.21200180 274.77661133]
[23.38600349 288.97906494]
[18.56000710 303.18151855]
[13.73400879 317.38397217]
[9.33301067 331.72381592]
[5.36091423 346.18835449]
[1.38881803 360.65286255]
[-2.58327818 375.11740112]
[10.36209583 382.88397217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 209]
[21 208]
[22 207]
[23 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[35 200]
[36 199]
[38 197]
[39 196]
[40 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[59 188]
[60 187]
[61 186]
[71 185]
[72 184]
[73 183]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[83 177]
[84 176]
[85 175]
[86 174]
[88 172]
[89 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
