%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[84.29576874 731.87866211]
[70.35827637 737.48754883]
[55.78683090 741.14636230]
[40.85289001 742.78686523]
[25.83466911 742.37847900]
[11.01194286 739.92889404]
[-3.33914757 735.48370361]
[-16.95125198 729.12567139]
[-29.57078362 720.97332764]
[-40.96265030 711.17846680]
[-50.91462326 699.92358398]
[-59.24131012 687.41839600]
[-65.78759003 673.89581299]
[-70.43150330 659.60778809]
[-73.08654022 644.82049561]
[-73.70323181 629.80932617]
[-72.27010345 614.85406494]
[-68.81385040 600.23327637]
[-63.39885330 586.21929932]
[-56.12599182 573.07324219]
[-47.13075638 561.03997803]
[-36.58072662 550.34368896]
[-24.67243576 541.18365479]
[-11.62773323 533.73046875]
[2.31036735 528.12304688]
[16.88220787 524.46588135]
[31.81632423 522.82696533]
[46.83450317 523.23693848]
[49.28022766 508.43768311]
[51.72595596 493.63839722]
[54.17168427 478.83914185]
[56.61741257 464.03985596]
[59.06314087 449.24060059]
[61.50886536 434.44131470]
[54.72169495 424.42828369]
[56.63815308 412.07876587]
[66.76981354 404.09677124]
[69.43561554 389.33554077]
[72.10140991 374.57434082]
[74.76720428 359.81311035]
[77.43299866 345.05191040]
[79.54762268 330.20169067]
[71.54853821 314.58178711]
[82.48833466 299.76956177]
[83.82656860 284.82937622]
[85.16480255 269.88919067]
[78.59382629 256.52236938]
[87.53146362 243.46751404]
[88.86969757 228.52734375]
[90.20793152 213.58715820]
[91.54616547 198.64697266]
[92.88439941 183.70678711]
[93.44261169 168.71717834]
[93.21928406 153.71884155]
[92.99595642 138.72048950]
[92.77262878 123.72216034]
[92.54930115 108.72382355]
[83.88124847 120.96575165]
[70.29512787 127.32321167]
[55.34231567 126.13437653]
[42.93143845 117.70999908]
[36.30667114 104.25219727]
[37.19971085 89.27880096]
[45.37712479 76.70383453]
[58.70135117 69.81434631]
[73.68946838 70.41123962]
[86.42362213 78.33849335]
[93.57492828 91.52307129]
[95.57894135 76.65754700]
[97.58295441 61.79201889]
[91.75872803 47.08185196]
[101.12704468 35.50238800]
[103.13105774 20.63685799]
[95.74363708 3.76950717]
[107.00361633 -9.69079781]
[108.78607941 -24.58451462]
[110.56855011 -39.47823334]
[103.22469330 -50.08156204]
[105.01593018 -62.44987869]
[114.44222260 -70.03088379]
[116.44623566 -84.89640808]
[105.15125275 -75.02608490]
[90.22257996 -73.56501770]
[77.22824097 -81.05815887]
[71.01480103 -94.71074677]
[73.89972687 -109.43070984]
[84.80700684 -119.72785950]
[99.66849518 -121.76161194]
[112.94122314 -114.77343750]
[119.67498016 -101.36859131]
[123.43127441 -115.89064789]
[127.18757629 -130.41270447]
[130.94387817 -144.93476868]
[133.93865967 -159.63276672]
[136.16377258 -174.46681213]
[138.38888550 -189.30085754]
[140.61399841 -204.13490295]
[135.00944519 -218.93014526]
[144.54911804 -230.36885071]
[130.71104431 -236.38301086]
[118.90167999 -245.77456665]
[109.92620087 -257.90316772]
[104.39656830 -271.94189453]
[102.68981171 -286.93353271]
[104.92229462 -301.85595703]
[110.94180298 -315.69171143]
[120.33791351 -327.49743652]
[132.46998596 -336.46823120]
[146.51084900 -341.99246216]
[161.50314331 -343.69342041]
[176.42469788 -341.45516968]
[190.25811768 -335.43032837]
[202.06022644 -326.02966309]
[211.02633667 -313.89410400]
[216.54512024 -299.85113525]
[218.24031067 -284.85818481]
[215.99630737 -269.93750000]
[209.96611023 -256.10638428]
[200.56088257 -244.30790710]
[188.42189026 -235.34649658]
[174.37677002 -229.83312988]
[159.38316345 -228.14373779]
[165.14688110 -214.40951538]
[155.44804382 -201.90979004]
[153.22293091 -187.07574463]
[150.99781799 -172.24169922]
[148.77268982 -157.40765381]
[160.78295898 -166.39395142]
[175.76612854 -165.68338013]
[186.87208557 -155.60084534]
[189.02333069 -140.75590515]
[181.23635864 -127.93548584]
[167.07125854 -123.00090790]
[153.00413513 -128.20819092]
[145.46594238 -141.17846680]
[141.70964050 -126.65641022]
[137.95333862 -112.13434601]
[134.19703674 -97.61228943]
[131.31176758 -82.89239502]
[129.30775452 -68.02687073]
[136.83822632 -52.17572021]
[125.46226501 -37.69576645]
[123.67980194 -22.80204964]
[121.89733124 -7.90833235]
[129.12484741 1.79165184]
[127.76173401 14.21444130]
[117.99658203 22.64087296]
[115.99256897 37.50640106]
[121.96013641 51.15328598]
[112.44847870 63.79603195]
[110.44446564 78.66156006]
[108.44045258 93.52709198]
[107.54763794 108.50049591]
[107.77096558 123.49883270]
[107.99429321 138.49716187]
[108.21762085 153.49551392]
[108.44094849 168.49385071]
[118.82529449 157.66955566]
[133.72380066 155.92761230]
[146.32508850 164.06443787]
[150.86799622 178.35995483]
[145.27557373 192.27845764]
[132.10461426 199.45660400]
[117.37669373 196.61262512]
[107.82458496 185.04501343]
[106.48635101 199.98519897]
[105.14811707 214.92538452]
[103.80988312 229.86557007]
[102.47164917 244.80575562]
[108.94690704 259.24118042]
[100.10498810 271.22741699]
[98.76675415 286.16760254]
[97.42852020 301.10778809]
[105.08481598 311.48776245]
[103.66262817 323.90393066]
[94.46622467 331.76223755]
[107.58477783 324.48873901]
[121.50824738 330.06878662]
[125.97276306 344.38900757]
[117.68726349 356.89300537]
[102.75949860 358.36334229]
[92.19421387 347.71768188]
[89.52841949 362.47891235]
[86.86262512 377.24014282]
[84.19683075 392.00134277]
[81.53103638 406.76257324]
[88.15792084 423.94296265]
[76.30813599 436.88705444]
[73.86241150 451.68630981]
[71.41667938 466.48559570]
[68.97095490 481.28485107]
[66.52523041 496.08413696]
[64.07949829 510.88339233]
[61.63377380 525.68267822]
[75.98534393 530.12634277]
[89.59813690 536.48291016]
[102.21855164 544.63391113]
[113.61147308 554.42749023]
[123.56466675 565.68127441]
[131.89271545 578.18560791]
[138.44044495 591.70745850]
[143.08590698 605.99499512]
[145.74255371 620.78204346]
[146.36087036 635.79302979]
[144.92936707 650.74847412]
[141.47468567 665.36962891]
[136.06120300 679.38421631]
[128.78976440 692.53106689]
[119.79583740 704.56530762]
[109.24696350 715.26275635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 176]
[44 173]
[45 172]
[46 171]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[68 152]
[69 151]
[70 150]
[72 148]
[73 147]
[75 144]
[76 143]
[77 142]
[80 140]
[81 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 127]
[95 126]
[96 125]
[97 124]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
