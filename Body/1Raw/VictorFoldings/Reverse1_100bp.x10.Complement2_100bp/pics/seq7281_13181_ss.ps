%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[41.36158371 529.33343506]
[43.01295853 544.31237793]
[41.16482925 559.26837158]
[35.91687012 573.39477539]
[27.55208969 585.92980957]
[16.52159309 596.19750977]
[3.42024183 603.64404297]
[-11.04542637 607.86791992]
[-26.09529495 608.64135742]
[-40.91774368 605.92260742]
[-54.71341705 599.85827637]
[-66.73833466 590.77539062]
[-76.34400177 579.16387939]
[-83.01239777 565.64984131]
[-86.38391113 550.96209717]
[-86.27671814 535.89276123]
[-82.69659424 521.25445557]
[-75.83660889 507.83663940]
[-66.06672668 496.36294556]
[-53.91381073 487.45208740]
[-40.03325653 481.58462524]
[-25.17362976 479.07699585]
[-10.13628674 480.06445312]
[-5.73528862 465.72460938]
[-1.33429039 451.38476562]
[3.06670761 437.04489136]
[7.46770573 422.70504761]
[11.86870384 408.36520386]
[16.26970100 394.02536011]
[12.60710144 379.58810425]
[24.05285072 368.66540527]
[28.45384789 354.32556152]
[31.99352074 339.74917603]
[34.65931702 324.98794556]
[37.32511139 310.22674561]
[39.99090576 295.46551514]
[42.65670395 280.70431519]
[30.93225288 290.06045532]
[15.95323086 290.85345459]
[3.30643845 282.78756714]
[-2.29118180 268.87112427]
[1.24814379 254.29467773]
[12.60433483 244.49484253]
[27.54181099 243.12670898]
[40.48926544 250.70057678]
[46.61774445 264.39273071]
[51.01874542 250.05288696]
[55.41974258 235.71302795]
[59.82073975 221.37318420]
[64.22174072 207.03334045]
[68.30140686 192.59878540]
[72.05770874 178.07672119]
[75.81400299 163.55467224]
[79.57030487 149.03260803]
[83.32660675 134.51054382]
[87.08290863 119.98848724]
[90.83921051 105.46643066]
[93.17469788 90.64936066]
[86.27251434 76.41312408]
[94.75363922 64.16895294]
[95.64645386 49.19554520]
[96.53926849 34.22213745]
[83.28054810 26.74097824]
[74.62010193 14.29575634]
[72.23169708 -0.61449981]
[76.53618622 -15.02395439]
[86.62847137 -26.08990479]
[100.46722412 -31.65356827]
[101.36003876 -46.62697601]
[94.45785522 -60.86321259]
[102.93898010 -73.10738373]
[103.83179474 -88.08079529]
[91.73554993 -91.93875885]
[80.81650543 -98.40076447]
[71.62625122 -107.13587189]
[64.62801361 -117.69844055]
[60.17334747 -129.55084229]
[58.48444748 -142.09083557]
[59.64309311 -154.68217468]
[63.58668137 -166.68688965]
[70.11159515 -177.49758911]
[78.88372803 -186.56823730]
[89.45557404 -193.44168091]
[101.28907013 -197.77270508]
[113.78297424 -199.34539795]
[115.56543732 -214.23912048]
[117.34790802 -229.13284302]
[119.13037109 -244.02655029]
[120.91284180 -258.92025757]
[122.69530487 -273.81399536]
[124.47776794 -288.70770264]
[111.23992157 -303.82189941]
[113.35278320 -323.49520874]
[129.00755310 -335.09014893]
[130.12321472 -350.04858398]
[131.23886108 -365.00704956]
[132.35450745 -379.96551514]
[118.15695953 -385.09698486]
[105.87102509 -393.86959839]
[96.40840149 -405.63229370]
[90.47127533 -419.51223755]
[88.50022888 -434.47946167]
[90.64151764 -449.42327881]
[96.73625183 -463.23474121]
[106.33216095 -474.88897705]
[118.71715546 -483.52114868]
[132.97219849 -488.49072266]
[148.03945923 -489.42886353]
[162.80085754 -486.26599121]
[176.16099548 -479.23681641]
[187.12846375 -468.86294556]
[194.88938904 -455.91418457]
[198.86788940 -441.35140991]
[198.76870728 -426.25531006]
[194.59921265 -411.74606323]
[186.66880798 -398.90039062]
[175.56597900 -388.67150879]
[162.11463928 -381.81848145]
[147.31295776 -378.84985352]
[146.19731140 -363.89138794]
[145.08166504 -348.93295288]
[143.96601868 -333.97448730]
[152.51214600 -328.28814697]
[157.96946716 -319.49877930]
[159.29629517 -309.15698242]
[156.18672180 -299.12036133]
[149.13783264 -291.21969604]
[139.37149048 -286.92523193]
[137.58901978 -272.03152466]
[135.80654907 -257.13781738]
[134.02409363 -242.24409485]
[132.24162292 -227.35037231]
[130.45915222 -212.45664978]
[128.67669678 -197.56294250]
[144.67391968 -190.66984558]
[157.78808594 -179.17860413]
[166.74038696 -164.19558716]
[170.65350342 -147.16831970]
[169.13754272 -129.74571228]
[162.32891846 -113.61825562]
[150.87808228 -100.35411835]
[135.88743591 -91.24657440]
[118.80520630 -87.18797302]
[117.91239166 -72.21456909]
[124.87843323 -59.04933167]
[116.33344269 -45.73415756]
[115.44062805 -30.76075363]
[128.52018738 -23.59203529]
[137.22599792 -11.40521717]
[139.78768921 3.41364574]
[135.64440918 17.93443871]
[125.56644440 29.26235008]
[111.51267242 35.11495590]
[110.61985779 50.08835983]
[109.72704315 65.06176758]
[116.69308472 78.22700500]
[108.14810181 91.54217529]
[116.74722290 79.25173187]
[129.55970764 71.45172119]
[144.42643738 69.45658875]
[158.84208679 73.60253906]
[170.37738037 83.19091797]
[177.08840942 96.60591125]
[177.84426880 111.58685303]
[172.51754761 125.60919952]
[162.00592041 136.30993652]
[148.08078003 141.88578796]
[133.08872986 141.39714050]
[119.55622864 134.92634583]
[109.76371765 123.56382751]
[105.36126709 109.22273254]
[101.60496521 123.74478912]
[97.84866333 138.26684570]
[94.09236908 152.78890991]
[90.33606720 167.31097412]
[86.57976532 181.83302307]
[82.82346344 196.35508728]
[84.21990204 201.38470459]
[83.60857391 205.98683167]
[81.48851013 209.46826172]
[78.56158447 211.43434143]
[74.16058350 225.77418518]
[69.75959015 240.11402893]
[65.35858917 254.45387268]
[60.95759201 268.79373169]
[57.41791916 283.37008667]
[54.75212479 298.13131714]
[52.08633041 312.89254761]
[49.42053223 327.65374756]
[46.75473785 342.41497803]
[58.47918701 333.05883789]
[73.45821381 332.26583862]
[86.10500336 340.33172607]
[91.70262146 354.24813843]
[88.16329956 368.82458496]
[76.80710602 378.62445068]
[61.86962891 379.99255371]
[48.92217636 372.41870117]
[42.79369736 358.72656250]
[38.39269638 373.06640625]
[41.74050903 388.52932739]
[30.60954857 398.42636108]
[26.20855141 412.76620483]
[21.80755234 427.10604858]
[17.40655518 441.44589233]
[13.00555706 455.78573608]
[8.60455894 470.12561035]
[4.20356083 484.46545410]
[17.20589828 492.08358765]
[28.10047531 502.49533081]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[31 200]
[32 199]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 181]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 157]
[60 155]
[61 154]
[62 153]
[68 147]
[69 146]
[71 144]
[72 143]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
