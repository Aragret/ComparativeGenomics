%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[191.48391724 167.98287964]
[178.88160706 159.84765625]
[163.99243164 159.44557190]
[156.59446716 145.46055603]
[143.99214172 137.32534790]
[131.38983154 129.19012451]
[118.78752136 121.05490875]
[106.18521118 112.91969299]
[92.23143768 112.03432465]
[85.67957306 99.68261719]
[69.88899231 98.69864655]
[63.39242935 85.29551697]
[50.79011917 77.16030121]
[38.18780518 69.02508545]
[45.11300659 82.33078003]
[46.83641434 97.23145294]
[43.13127518 111.76664734]
[34.48507309 124.02401733]
[22.03536415 132.39089966]
[7.42011595 135.76647949]
[-7.43777990 133.70664978]
[-20.58351326 126.48239899]
[-30.28753662 115.04421997]
[-35.27311707 100.89699554]
[-34.88431931 85.90203857]
[-29.17229271 72.03218842]
[-18.88855553 61.11226273]
[-5.38610792 54.57897186]
[9.55856991 53.29187393]
[23.98137856 57.42137527]
[13.49387836 46.69699478]
[3.00637698 35.97261810]
[-7.48112392 25.24823761]
[-17.96862602 14.52385712]
[-29.38805199 24.25902367]
[-41.44520950 33.19219971]
[-54.08388519 41.28174210]
[-67.24514771 48.48992538]
[-80.86763000 54.78314209]
[-94.88782501 60.13205719]
[-109.24036407 64.51172638]
[-123.85832214 67.90172577]
[-138.67353821 70.28625488]
[-153.61694336 71.65419769]
[-168.61886597 71.99916840]
[-183.60935974 71.31956482]
[-198.51853943 69.61855316]
[-213.27687073 66.90406799]
[-227.81555176 63.18875504]
[-242.06678772 58.48995209]
[-255.96415710 52.82955551]
[-269.44284058 46.23396301]
[-282.44000244 38.73392487]
[-294.89501953 30.36441040]
[-306.74987793 21.16444016]
[-317.94924927 11.17691231]
[-328.44094849 0.44839129]
[-338.17602539 -10.97109985]
[-347.10913086 -23.02831841]
[-355.19857788 -35.66704559]
[-362.40667725 -48.82835770]
[-368.69979858 -62.45088577]
[-374.04861450 -76.47111511]
[-378.42819214 -90.82368469]
[-381.81811523 -105.44165802]
[-384.20254517 -120.25689697]
[-385.57037354 -135.20031738]
[-385.91525269 -150.20223999]
[-385.23553467 -165.19273376]
[-383.53442383 -180.10188293]
[-380.81985474 -194.86019897]
[-377.10443115 -209.39884949]
[-372.40554810 -223.65007019]
[-366.74505615 -237.54739380]
[-360.14935303 -251.02603149]
[-352.64923096 -264.02313232]
[-344.27963257 -276.47811890]
[-335.07958984 -288.33291626]
[-325.09197998 -299.53222656]
[-314.36340332 -310.02383423]
[-302.94384766 -319.75885010]
[-290.88656616 -328.69186401]
[-278.24777222 -336.78121948]
[-265.08642578 -343.98922729]
[-251.46385193 -350.28228760]
[-237.44358826 -355.63101196]
[-223.09098816 -360.01046753]
[-208.47299194 -363.40026855]
[-193.65773010 -365.78460693]
[-178.71430969 -367.15234375]
[-163.71237183 -367.49713135]
[-148.72189331 -366.81732178]
[-133.81274414 -365.11611938]
[-119.05445099 -362.40142822]
[-104.51582336 -358.68591309]
[-90.26464081 -353.98690796]
[-76.36735535 -348.32632446]
[-62.88875961 -341.73056030]
[-49.89170074 -334.23034668]
[-37.43677521 -325.86065674]
[-25.58205605 -316.66055298]
[-14.38281345 -306.67285156]
[-3.89126635 -295.94421387]
[5.84366989 -284.52456665]
[14.77660561 -272.46725464]
[22.86589050 -259.82839966]
[30.07381058 -246.66699219]
[36.36675644 -233.04438782]
[41.71538544 -219.02407837]
[46.09476471 -204.67146301]
[49.48447037 -190.05343628]
[51.86870193 -175.23817444]
[53.23634338 -160.29472351]
[53.58101273 -145.29280090]
[52.90110779 -130.30232239]
[51.19979858 -115.39318848]
[48.48501205 -100.63491058]
[44.76941299 -86.09630585]
[40.07032013 -71.84515381]
[34.40964508 -57.94790649]
[27.81378174 -44.46935654]
[20.31348228 -31.47234535]
[11.94371605 -19.01747704]
[2.74350834 -7.16281891]
[-7.24424553 4.03635597]
[3.24325562 14.76073551]
[13.73075676 25.48511505]
[24.21825790 36.20949554]
[34.70575714 46.93387604]
[46.32302094 56.42277527]
[58.92533493 64.55799103]
[71.52764893 72.69320679]
[86.41682434 73.09528351]
[93.81478882 87.08030701]
[107.76856232 87.96567535]
[114.32042694 100.31738281]
[126.92273712 108.45259857]
[139.52505493 116.58781433]
[152.12736511 124.72303009]
[164.72967529 132.85824585]
[180.52024841 133.84220886]
[187.01681519 147.24534607]
[199.61912537 155.38056946]
[208.85719299 143.54989624]
[219.11856079 132.59497070]
[230.32061768 122.60397339]
[242.37318420 113.65734863]
[255.17919922 105.82714081]
[268.63555908 99.17638397]
[282.63391113 93.75863647]
[297.06158447 89.61751556]
[311.80236816 86.78636169]
[326.73760986 85.28797150]
[341.74700928 85.13440704]
[356.70977783 86.32691193]
[371.50540161 88.85588074]
[386.01477051 92.70095062]
[400.12106323 97.83116150]
[413.71066284 104.20521545]
[426.67419434 111.77177429]
[438.90728760 120.46993256]
[450.31143188 130.22964478]
[460.79476929 140.97235107]
[470.27294922 152.61152649]
[478.66964722 165.05346680]
[485.91720581 178.19799805]
[491.95733643 191.93930054]
[496.74139404 206.16670227]
[500.23080444 220.76568604]
[502.39752197 235.61868286]
[503.22412109 250.60610962]
[502.70388794 265.60729980]
[500.84106445 280.50146484]
[497.65060425 295.16867065]
[493.15820312 309.49084473]
[487.40008545 323.35266113]
[480.42254639 336.64251709]
[472.28179932 349.25341797]
[463.04336548 361.08380127]
[452.78164673 372.03842163]
[441.57928467 382.02905273]
[429.52645874 390.97531128]
[416.72021484 398.80514526]
[403.26364136 405.45547485]
[389.26510620 410.87280273]
[374.83731079 415.01348877]
[360.09643555 417.84417725]
[345.16116333 419.34213257]
[330.15176392 419.49523926]
[315.18902588 418.30227661]
[300.39346313 415.77282715]
[285.88421631 411.92733765]
[271.77810669 406.79669189]
[258.18869019 400.42221069]
[245.22537231 392.85525513]
[232.99255371 384.15673828]
[221.58872986 374.39666748]
[211.10569763 363.65365601]
[201.62786865 352.01419067]
[193.23156738 339.57199097]
[185.98439026 326.42724609]
[179.94468689 312.68576050]
[175.16108704 298.45819092]
[171.67210388 283.85910034]
[169.50582886 269.00604248]
[168.67970276 254.01860046]
[169.20039368 239.01742554]
[171.06369019 224.12332153]
[174.25459290 209.45619202]
[178.74740601 195.13415527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[4 140]
[5 139]
[6 138]
[7 137]
[8 136]
[10 134]
[12 132]
[13 131]
[14 130]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
