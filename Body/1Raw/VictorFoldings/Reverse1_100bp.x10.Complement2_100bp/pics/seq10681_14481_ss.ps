%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[66.86750793 499.28173828]
[51.81613541 502.05926514]
[37.20146179 497.51284790]
[26.38183784 486.68722534]
[21.84353065 472.07003784]
[24.62941360 457.02020264]
[34.09930801 444.99606323]
[48.07710266 438.76071167]
[48.96992111 423.78729248]
[49.86273575 408.81390381]
[50.75555038 393.84048462]
[51.64836884 378.86709595]
[49.59402466 376.00140381]
[48.82562637 371.99835205]
[49.86264801 367.47308350]
[52.93014526 363.24963379]
[54.49066544 348.33102417]
[56.05118942 333.41244507]
[57.61171341 318.49383545]
[59.17223358 303.57522583]
[57.24790192 300.62069702]
[56.65901566 296.58728027]
[57.89706421 292.11285400]
[61.15008926 288.03057861]
[63.37520599 273.19653320]
[57.61148834 259.46234131]
[67.31031799 246.96260071]
[69.53543091 232.12855530]
[67.41893768 225.04743958]
[71.90569305 217.09088135]
[74.35142517 202.29161072]
[76.79714966 187.49234009]
[70.00997925 177.47929382]
[71.92643738 165.12976074]
[82.05809784 157.14778137]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[88.58134460 46.50993729]
[80.19525909 33.91166306]
[77.27930450 19.10251617]
[80.24728394 4.34518909]
[88.61639404 -8.11767101]
[101.08544922 -16.40427971]
[115.73714447 -19.27782440]
[118.62241364 -33.99771500]
[121.50769043 -48.71760559]
[123.06821442 -63.63621140]
[123.29154205 -78.63455200]
[123.51486969 -93.63288879]
[123.73819733 -108.63122559]
[123.96152496 -123.62956238]
[124.18485260 -138.62789917]
[124.40818024 -153.62623596]
[124.63150787 -168.62457275]
[124.85483551 -183.62290955]
[125.07816315 -198.62124634]
[117.54718018 -212.53507996]
[125.47311401 -225.14575195]
[125.69644165 -240.14408875]
[125.91976929 -255.14242554]
[123.47404480 -269.94171143]
[118.43712616 -284.07073975]
[113.40020752 -298.19976807]
[108.36329651 -312.32879639]
[103.32637787 -326.45782471]
[91.40431976 -336.85855103]
[94.41860962 -351.44494629]
[89.38169098 -365.57397461]
[84.34477997 -379.70300293]
[69.55857086 -376.98928833]
[54.52852631 -376.68273926]
[39.64396286 -378.79125977]
[25.29042435 -383.26028442]
[11.83969975 -389.97399902]
[-0.35980222 -398.75857544]
[-10.99208641 -409.38638306]
[-19.78174973 -421.58221436]
[-26.50111961 -435.03012085]
[-30.97614861 -449.38177490]
[-33.09092331 -464.26547241]
[-32.79066467 -479.29562378]
[-30.08314896 -494.08297729]
[-25.03850937 -508.24447632]
[-17.78741264 -521.41326904]
[-8.51768112 -533.24835205]
[2.53057671 -543.44305420]
[15.07118511 -551.73333740]
[28.77931213 -557.90454102]
[43.29988480 -561.79669189]
[58.25678635 -563.30908203]
[73.26259613 -562.40252686]
[87.92861938 -559.10040283]
[101.87498474 -553.48840332]
[114.74044037 -545.71173096]
[126.19174194 -535.97192383]
[135.93226624 -524.52124023]
[143.70973206 -511.65628052]
[149.32266235 -497.71026611]
[152.62567139 -483.04443359]
[153.53320312 -468.03869629]
[152.02175903 -453.08169556]
[148.13047791 -438.56088257]
[141.96017456 -424.85235596]
[133.67063904 -412.31121826]
[123.47663116 -401.26232910]
[111.64216614 -391.99185181]
[98.47380829 -384.73992920]
[103.51072693 -370.61090088]
[108.54763794 -356.48187256]
[120.10942078 -347.09173584]
[117.45540619 -331.49472046]
[122.49232483 -317.36569214]
[127.52924347 -303.23666382]
[132.56616211 -289.10763550]
[137.60307312 -274.97860718]
[139.35832214 -289.87554932]
[144.58148193 -303.93679810]
[152.97715759 -316.36712646]
[164.07054138 -326.46350098]
[177.23423767 -333.65493774]
[191.72380066 -337.53475952]
[206.71974182 -337.88348389]
[221.37397766 -334.68145752]
[234.85775757 -328.10971069]
[246.40849304 -318.53994751]
[255.37294006 -306.51336670]
[261.24411011 -292.71011353]
[263.68997192 -277.91085815]
[262.57217407 -262.95257568]
[257.95397949 -248.68119812]
[250.09651184 -235.90386963]
[239.44418335 -225.34318542]
[226.59942627 -217.59642029]
[212.28869629 -213.10168457]
[197.32128906 -212.11317444]
[182.54373169 -214.68679810]
[168.79173279 -220.67701721]
[156.84304810 -229.74504089]
[147.37344360 -241.37802124]
[140.91810608 -254.91909790]
[140.69477844 -239.92076111]
[140.47145081 -224.92242432]
[148.01840210 -212.08135986]
[140.07649231 -198.39791870]
[139.85316467 -183.39958191]
[139.62983704 -168.40124512]
[139.40650940 -153.40290833]
[139.18318176 -138.40457153]
[138.95985413 -123.40623474]
[138.73652649 -108.40789795]
[138.51319885 -93.40956116]
[138.28987122 -78.41122437]
[138.06654358 -63.41288376]
[146.38240051 -75.89673615]
[159.24696350 -83.61054993]
[174.17630005 -85.06491852]
[188.28776550 -79.97901917]
[198.85667419 -69.33486176]
[203.84233093 -55.18766403]
[202.28208923 -40.26902771]
[194.47720337 -27.45951271]
[181.93467712 -19.23243141]
[167.07626343 -17.17630577]
[152.77090454 -21.68814087]
[141.78073120 -31.89677238]
[136.22758484 -45.83233261]
[133.34230042 -31.11244202]
[130.45703125 -16.39255142]
[142.93971252 -8.20035172]
[151.35772705 4.18037224]
[154.40257263 18.88050079]
[151.57975769 33.66628265]
[143.28883362 46.27875137]
[130.76721191 54.77886581]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.81932068 159.81356812]
[103.44620514 176.99397278]
[91.59642029 189.93806458]
[89.15069580 204.73733521]
[86.70496368 219.53660583]
[84.36947632 234.35366821]
[82.14436340 249.18771362]
[87.74892426 263.98297119]
[78.20925140 275.42166138]
[75.98413086 290.25570679]
[74.09084320 305.13574219]
[72.53031921 320.05435181]
[70.96979523 334.97296143]
[69.40927124 349.89157104]
[67.84874725 364.81015015]
[66.62177277 379.75988770]
[65.72895813 394.73330688]
[64.83614349 409.70669556]
[63.94332504 424.68011475]
[63.05051041 439.65353394]
[76.18830872 447.50570679]
[84.16226196 460.56994629]
[85.14002228 475.84420776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[24 197]
[25 196]
[27 194]
[28 193]
[30 192]
[31 191]
[32 190]
[35 188]
[36 187]
[37 186]
[38 185]
[41 183]
[42 182]
[43 181]
[50 174]
[51 173]
[52 172]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[64 148]
[65 147]
[66 146]
[67 121]
[68 120]
[69 119]
[70 118]
[71 117]
[73 115]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
