%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[85.83149719 555.59594727]
[73.88846588 564.69366455]
[61.07329178 572.51513672]
[47.52181625 578.97741699]
[33.37769699 584.01208496]
[18.79086876 587.56573486]
[3.91595888 589.60070801]
[-11.08935070 590.09539795]
[-26.06599426 589.04461670]
[-40.85520935 586.45947266]
[-55.30022430 582.36730957]
[-69.24791718 576.81158447]
[-82.55043030 569.85119629]
[-95.06674194 561.55987549]
[-106.66418457 552.02557373]
[-117.21981812 541.34930420]
[-126.62174225 529.64428711]
[-134.77029419 517.03454590]
[-141.57908630 503.65380859]
[-146.97595215 489.64385986]
[-150.90367126 475.15328979]
[-153.32063293 460.33566284]
[-154.20118713 445.34802246]
[-153.53599548 430.34930420]
[-151.33213806 415.49850464]
[-147.61296082 400.95297241]
[-142.41789246 386.86697388]
[-135.80200195 373.38983154]
[-127.83541870 360.66433716]
[-118.60260010 348.82546997]
[-108.20140839 337.99868774]
[-96.74211884 328.29876709]
[-84.34618378 319.82852173]
[-71.14502716 312.67776489]
[-57.27857971 306.92227173]
[-42.89383316 302.62307739]
[-28.14327621 299.82574463]
[-13.18327141 298.55990601]
[1.82759547 298.83901978]
[16.73020172 300.66012573]
[31.36656952 304.00387573]
[36.19256973 289.80142212]
[41.01856613 275.59896851]
[45.84456253 261.39651489]
[42.61343765 246.85659790]
[54.37932205 236.27952576]
[59.20531845 222.07707214]
[63.81932831 207.80433655]
[68.22032928 193.46447754]
[72.62132263 179.12463379]
[77.02232361 164.78479004]
[80.88662720 150.29109192]
[84.20888519 135.66363525]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[98.95325470 62.18790817]
[99.39986420 47.19456100]
[99.84646606 32.20121002]
[100.29307556 17.20785904]
[100.73967743 2.21450949]
[99.06813812 -12.69206429]
[95.31183624 -27.21412468]
[91.55554199 -41.73618317]
[87.79924011 -56.25824356]
[84.04293823 -70.78030396]
[80.68767548 -56.16037750]
[73.22420502 -43.14897156]
[62.29818726 -32.87171173]
[48.85483551 -26.21767235]
[34.05712509 -23.76250267]
[19.18521690 -25.71859550]
[5.52567387 -31.91673088]
[-5.73981619 -41.82070541]
[-13.63667488 -54.57373047]
[-17.48174477 -69.07254028]
[-16.94239044 -84.06283569]
[-12.06527042 -98.24781799]
[-3.27230334 -110.40033722]
[8.67582989 -119.46908569]
[22.74549675 -124.66950989]
[37.71952820 -125.55174255]
[52.30252457 -122.03944397]
[65.23291016 -114.43647766]
[75.39207458 -103.40055847]
[81.90010834 -89.88978577]
[82.34671021 -104.88313293]
[82.79331970 -119.87648010]
[83.23992157 -134.86982727]
[69.08424377 -143.41433716]
[61.21425629 -157.84898376]
[61.69482040 -174.18869019]
[70.30012512 -187.97653198]
[84.60112000 -195.49942017]
[84.82444763 -210.49775696]
[85.04777527 -225.49609375]
[85.27110291 -240.49443054]
[71.19048309 -246.16018677]
[60.11007690 -256.53268433]
[53.52840805 -270.20916748]
[52.33559799 -285.33999634]
[56.69296646 -299.87881470]
[66.01121521 -311.85943604]
[79.03012085 -319.66149902]
[93.98899078 -322.22988892]
[108.86475372 -319.21725464]
[121.64559174 -311.03100586]
[130.60299683 -298.77828979]
[134.52555847 -284.11614990]
[132.88278198 -269.02755737]
[125.89683533 -255.55311584]
[114.51250458 -245.51510620]
[100.26943970 -240.27110291]
[100.04611206 -225.27276611]
[99.82278442 -210.27442932]
[99.59945679 -195.27609253]
[111.76009369 -189.06030273]
[120.09625244 -178.15905762]
[122.93581390 -164.66513062]
[119.66886139 -151.20016479]
[110.87753296 -140.40531921]
[98.23327637 -134.42323303]
[97.78666687 -119.42987823]
[97.34006500 -104.43652344]
[96.89345551 -89.44317627]
[98.56499481 -74.53660583]
[102.32129669 -60.01454163]
[106.07759857 -45.49248505]
[109.83390045 -30.97042465]
[113.59020233 -16.44836617]
[116.94545746 -31.06829071]
[124.40892792 -44.07969284]
[135.33494568 -54.35695648]
[148.77830505 -61.01099396]
[163.57600403 -63.46616364]
[178.44792175 -61.51007080]
[192.10746765 -55.31193542]
[203.37295532 -45.40795898]
[211.26980591 -32.65493774]
[215.11488342 -18.15612793]
[214.57553101 -3.16582870]
[209.69841003 11.01915264]
[200.90544128 23.17167282]
[188.95730591 32.24041748]
[174.88763428 37.44084549]
[159.91360474 38.32307434]
[145.33061218 34.81077957]
[132.40022278 27.20780754]
[122.24106598 16.17189407]
[115.73303223 2.66111541]
[115.28642273 17.65446472]
[114.83982086 32.64781570]
[114.39321136 47.64116669]
[113.94660950 62.63451385]
[122.44741058 50.27585983]
[135.42539978 42.75442886]
[150.37472534 41.52249908]
[164.40890503 46.81793594]
[174.81816101 57.61827087]
[179.59265137 71.83812714]
[177.81045532 86.73188019]
[169.81571960 99.42377472]
[157.15208435 107.46320343]
[142.26470947 109.29788208]
[128.02810669 104.57355499]
[117.19114685 94.20243073]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[98.83634949 138.98590088]
[95.51409149 153.61335754]
[109.40400696 147.95030212]
[122.56573486 155.14535522]
[125.29693604 169.89462280]
[115.58427429 181.32545471]
[100.58755493 181.01150513]
[91.36216736 169.18579102]
[86.96117401 183.52563477]
[82.56017303 197.86547852]
[78.15917969 212.20532227]
[79.26492310 218.72367859]
[77.21979523 224.02598572]
[73.40777588 226.90306091]
[68.58177948 241.10551453]
[71.46771240 256.66128540]
[60.04701996 266.22250366]
[55.22101974 280.42495728]
[50.39502335 294.62741089]
[45.56902695 308.82986450]
[59.21250534 315.09561157]
[72.13941193 322.73098755]
[84.21271515 331.65509033]
[95.30442810 341.77328491]
[105.29696655 352.97833252]
[114.08441925 365.15145874]
[121.57362366 378.16360474]
[127.68518829 391.87683105]
[132.35433960 406.14578247]
[135.53157043 420.81921387]
[137.18319702 435.74154663]
[137.29171753 450.75460815]
[135.85598755 465.69927979]
[132.89122009 480.41708374]
[128.42883301 494.75204468]
[122.51615143 508.55221558]
[115.21584320 521.67126465]
[106.60528564 533.97015381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 192]
[42 191]
[43 190]
[44 189]
[46 187]
[47 186]
[48 183]
[49 182]
[50 181]
[51 180]
[52 174]
[53 173]
[54 172]
[55 171]
[56 169]
[57 168]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[87 126]
[88 125]
[89 124]
[90 123]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
