%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[124.21691895 538.10815430]
[130.26325989 522.26898193]
[130.26325989 507.26898193]
[130.26325989 492.26898193]
[130.26325989 477.26898193]
[130.26325989 462.26898193]
[120.68256378 447.56604004]
[130.02200317 431.69604492]
[129.79867554 416.69769287]
[121.34004211 408.05029297]
[121.03123474 395.55676270]
[129.58305359 385.90121460]
[129.58305359 370.90121460]
[129.58305359 355.90121460]
[129.58305359 340.90121460]
[128.24482727 325.96102905]
[118.36880493 314.81143188]
[123.53037262 299.85589600]
[120.86457825 285.09466553]
[118.19878387 270.33343506]
[114.85572815 266.92272949]
[113.61978149 261.37570190]
[115.68022919 255.09350586]
[113.45510864 240.25946045]
[103.91543579 228.82075500]
[109.52000427 214.02549744]
[107.29488373 199.19146729]
[105.06976318 184.35742188]
[102.84465027 169.52337646]
[100.61952972 154.68933105]
[91.07985687 143.25062561]
[96.68441772 128.45538330]
[82.92932892 123.00638580]
[73.72725677 111.42122650]
[71.53253937 96.78984833]
[76.93054199 83.01466370]
[88.48153687 73.76973724]
[86.25641632 58.93569565]
[76.55758667 46.43596649]
[82.32130432 32.70174408]
[80.09619141 17.86770058]
[77.87107086 3.03365707]
[75.64595795 -11.80038643]
[65.94712830 -24.30011749]
[71.71084595 -38.03433609]
[69.48572540 -52.86838150]
[67.26061249 -67.70242310]
[57.56177902 -80.20215607]
[63.32549667 -93.93637848]
[61.10037994 -108.77042389]
[46.60519409 -109.95899963]
[32.74730682 -114.34801483]
[20.22371864 -121.71320343]
[9.66355038 -131.68067932]
[1.59641159 -143.74595642]
[-3.57414365 -157.29943848]
[-5.59080696 -171.65724182]
[-4.35531902 -186.09570312]
[0.06674863 -199.88783264]
[7.44946480 -212.33996582]
[17.41807938 -222.82659912]
[29.46804428 -230.82180786]
[42.99055099 -235.92568970]
[40.98653793 -250.79122925]
[38.98252487 -265.65673828]
[36.97851181 -280.52227783]
[34.64302444 -295.33935547]
[31.97722816 -310.10055542]
[29.31143379 -324.86178589]
[26.42616081 -339.58166504]
[23.32205009 -354.25698853]
[20.21793938 -368.93228149]
[9.79230881 -380.83255005]
[14.72833252 -394.88549805]
[4.30270100 -406.78576660]
[9.23872566 -420.83871460]
[6.13461542 -435.51400757]
[3.03050542 -450.18933105]
[-0.07360467 -464.86462402]
[-3.17771482 -479.53991699]
[-6.28182507 -494.21520996]
[-21.31205368 -493.70205688]
[-36.20302200 -495.80688477]
[-50.50220871 -500.46566772]
[-63.77507782 -507.53686523]
[-75.61828613 -516.80560303]
[-85.67192078 -527.99023438]
[-93.63047791 -540.75079346]
[-99.25209808 -554.69958496]
[-102.36594391 -569.41271973]
[-102.87739563 -584.44299316]
[-100.77090454 -599.33367920]
[-96.11048889 -613.63238525]
[-89.03776550 -626.90441895]
[-79.76768494 -638.74658203]
[-68.58193207 -648.79895020]
[-55.82044601 -656.75604248]
[-41.87102509 -662.37609863]
[-27.15758133 -665.48828125]
[-12.12723541 -665.99804688]
[2.76325512 -663.88983154]
[17.06138611 -659.22778320]
[30.33265114 -652.15356445]
[42.17375565 -642.88214111]
[52.22485733 -631.69525146]
[60.18051529 -618.93286133]
[65.79897308 -604.98284912]
[68.90947723 -590.26904297]
[69.41751862 -575.23864746]
[67.30764771 -560.34838867]
[62.64399338 -546.05078125]
[55.56826401 -532.78027344]
[46.29549026 -520.94024658]
[35.10746384 -510.89041138]
[22.34417152 -502.93621826]
[8.39347744 -497.31933594]
[11.49758720 -482.64404297]
[14.60169792 -467.96871948]
[17.70580864 -453.29342651]
[20.80991745 -438.61813354]
[23.91402817 -423.94281006]
[34.11763382 -413.09222412]
[29.40363503 -397.98959351]
[39.60723877 -387.13900757]
[34.89324188 -372.03637695]
[37.99735260 -357.36108398]
[41.10146332 -342.68579102]
[44.54458618 -339.37609863]
[45.94514084 -333.86834717]
[44.07265091 -327.52758789]
[46.73844528 -312.76635742]
[49.40423965 -298.00512695]
[52.07679749 -295.70520020]
[53.76813507 -291.99649048]
[53.82826233 -287.35433960]
[51.84403992 -282.52630615]
[53.84805298 -267.66076660]
[55.85206604 -252.79524231]
[57.85607910 -237.92970276]
[73.27117920 -236.36730957]
[87.87523651 -231.16552734]
[100.82156372 -222.62150574]
[111.35853577 -211.22630310]
[118.87319946 -197.63662720]
[122.92697144 -182.63703918]
[123.28118134 -167.09461975]
[119.91117096 -151.90888977]
[113.00792694 -137.95968628]
[102.96725464 -126.05625153]
[90.36714172 -116.89023590]
[75.93442535 -110.99553680]
[78.15954590 -96.16149139]
[87.69921875 -84.72279358]
[82.09465027 -69.92754364]
[84.31977081 -55.09349823]
[86.54489136 -40.25945663]
[96.08456421 -28.82075500]
[90.47999573 -14.02550411]
[92.70511627 0.80853987]
[94.93023682 15.64258385]
[97.15534973 30.47662735]
[106.69502258 41.91532898]
[101.09046173 56.71057892]
[103.31558228 71.54462433]
[117.07067108 76.99361420]
[126.27274323 88.57877350]
[128.46746826 103.21015167]
[123.06945801 116.98533630]
[111.51846313 126.23026276]
[121.21729279 138.72999573]
[115.45357513 152.46421814]
[117.67869568 167.29824829]
[119.90380859 182.13229370]
[122.12892914 196.96633911]
[124.35404205 211.80038452]
[134.05287170 224.30010986]
[128.28915405 238.03433228]
[130.51426697 252.86837769]
[132.96000671 267.66766357]
[135.62579346 282.42886353]
[138.29159546 297.19009399]
[148.35829163 309.39550781]
[143.00604248 323.29525757]
[148.76531982 309.44494629]
[159.90588379 299.40066528]
[174.27667236 295.10177612]
[189.10290527 297.37832642]
[201.52188110 305.79077148]
[209.13566589 318.71478271]
[210.47418213 333.65496826]
[205.27897644 347.72656250]
[194.55314636 358.21258545]
[180.36770630 363.08834839]
[165.46162415 361.41241455]
[152.71302795 353.50839233]
[144.58305359 340.90121460]
[144.58305359 355.90121460]
[144.58305359 370.90121460]
[144.58305359 385.90121460]
[154.15774536 401.63040161]
[144.79701233 416.47436523]
[145.02033997 431.47271729]
[153.71498108 440.99984741]
[153.59222412 453.49658203]
[145.26325989 462.26898193]
[145.26325989 477.26898193]
[145.26325989 492.26898193]
[145.26325989 507.26898193]
[145.26325989 522.26898193]
[151.30960083 538.10815430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[8 202]
[9 201]
[12 199]
[13 198]
[14 197]
[15 196]
[16 183]
[18 181]
[19 180]
[20 179]
[23 178]
[24 177]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[32 169]
[37 164]
[38 163]
[40 161]
[41 160]
[42 159]
[43 158]
[45 156]
[46 155]
[47 154]
[49 152]
[50 151]
[63 139]
[64 138]
[65 137]
[66 136]
[67 132]
[68 131]
[69 130]
[70 127]
[71 126]
[72 125]
[74 123]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
