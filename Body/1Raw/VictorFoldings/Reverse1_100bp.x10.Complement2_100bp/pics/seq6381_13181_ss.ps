%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[227.55157471 329.61224365]
[231.72479248 315.19351196]
[237.19190979 301.21405029]
[243.90760803 287.78964233]
[251.81623840 275.03155518]
[260.85226440 263.04550171]
[249.74504089 252.96435547]
[238.63780212 242.88322449]
[227.53056335 232.80207825]
[214.87420654 235.21992493]
[202.95826721 229.82615662]
[196.22550964 218.38586426]
[197.32698059 204.96194458]
[186.37106323 194.71655273]
[175.41516113 184.47116089]
[164.45924377 174.22576904]
[153.50334167 163.98037720]
[142.54743958 153.73498535]
[139.03021240 153.48706055]
[135.45832825 151.52320862]
[132.63697815 147.83630371]
[131.34407043 142.77908325]
[120.85655975 132.05470276]
[110.36906433 121.33032227]
[99.88156128 110.60594177]
[88.92565155 100.36054993]
[77.52318573 90.61458588]
[66.12072754 80.86861420]
[54.57442474 71.29349518]
[42.88684464 61.89134598]
[31.19926262 52.48919678]
[19.51168060 43.08704376]
[3.90915442 40.46564484]
[-1.15776265 26.45937538]
[-12.84534359 17.05722427]
[-24.53292465 7.65507317]
[-36.22050476 -1.74707818]
[-46.53803635 9.15222740]
[-57.69914627 19.18596840]
[-69.63145447 28.28906822]
[-82.25756073 36.40249252]
[-95.49559784 43.47361755]
[-109.25968933 49.45658875]
[-123.46058655 54.31259918]
[-138.00617981 58.01016235]
[-152.80213928 60.52528763]
[-167.75251770 61.84167099]
[-182.76033020 61.95077133]
[-197.72825623 60.85188293]
[-212.55921936 58.55213165]
[-227.15702820 55.06643295]
[-241.42701721 50.41739273]
[-255.27664185 44.63516235]
[-268.61608887 37.75724411]
[-281.35882568 29.82824135]
[-293.42221069 20.89958000]
[-304.72799683 11.02916527]
[-315.20291138 0.28101203]
[-324.77896118 -11.27517319]
[-333.39407349 -23.56444168]
[-340.99237061 -36.50709534]
[-347.52456665 -50.01918793]
[-352.94830322 -64.01309204]
[-357.22842407 -78.39805603]
[-360.33712769 -93.08077240]
[-362.25427246 -107.96603394]
[-362.96740723 -122.95729065]
[-362.47195435 -137.95732117]
[-360.77108765 -152.86883545]
[-357.87585449 -167.59513855]
[-353.80502319 -182.04071045]
[-348.58499146 -196.11187744]
[-342.24963379 -209.71737671]
[-334.84002686 -222.76896667]
[-326.40420532 -235.18199158]
[-316.99691772 -246.87597656]
[-306.67913818 -257.77505493]
[-295.51782227 -267.80853271]
[-283.58529663 -276.91137695]
[-270.95901489 -285.02453613]
[-257.72082520 -292.09536743]
[-243.95660400 -298.07803345]
[-229.75559998 -302.93371582]
[-215.20991516 -306.63098145]
[-200.41390991 -309.14575195]
[-185.46351624 -310.46182251]
[-170.45570374 -310.57058716]
[-155.48779297 -309.47137451]
[-140.65689087 -307.17129517]
[-126.05914307 -303.68527222]
[-111.78925323 -299.03591919]
[-97.93975067 -293.25338745]
[-84.60047150 -286.37518311]
[-71.85791016 -278.44589233]
[-59.79471970 -269.51696777]
[-48.48913193 -259.64630127]
[-38.01446915 -248.89791870]
[-28.43866539 -237.34152222]
[-19.82382202 -225.05206299]
[-12.22581291 -212.10923767]
[-5.69391298 -198.59700012]
[-0.27048558 -184.60296631]
[4.00929594 -170.21792603]
[7.11767530 -155.53512573]
[9.03449249 -140.64982605]
[9.74731731 -125.65856171]
[9.25152588 -110.65853882]
[7.55033350 -95.74706268]
[4.65477371 -81.02082062]
[0.58362567 -66.57534027]
[-4.63670778 -52.50428772]
[-10.97237015 -38.89893341]
[-18.38227081 -25.84750748]
[-26.81835556 -13.43465900]
[-15.13077354 -4.03250837]
[-3.44319272 5.36964273]
[8.24438858 14.77179432]
[23.01094055 16.72068787]
[28.91383171 31.39946365]
[40.60141373 40.80161285]
[52.28899384 50.20376587]
[63.97657776 59.60591507]
[68.73690033 59.99111176]
[73.30577850 63.37080765]
[75.86669159 69.46615601]
[87.26915741 79.21212006]
[98.67161560 88.95808411]
[98.58316040 73.95835114]
[109.02850342 63.19290161]
[124.02407837 62.82868958]
[134.97975159 73.07434082]
[135.61959839 88.06069183]
[125.57709503 99.20286560]
[110.60594177 100.11843872]
[121.09344482 110.84281921]
[131.58094788 121.56719971]
[142.06845093 132.29158020]
[152.79281616 142.77908325]
[163.74873352 153.02447510]
[174.70463562 163.26986694]
[185.66055298 173.51525879]
[196.61645508 183.76065063]
[207.57237244 194.00604248]
[225.04229736 193.10005188]
[237.51672363 204.87730408]
[237.61170959 221.69483948]
[248.71894836 231.77598572]
[259.82617188 241.85711670]
[270.93341064 251.93826294]
[281.99023438 241.78633118]
[293.92443848 232.68191528]
[306.63708496 224.70046997]
[320.02288818 217.90814209]
[333.97088623 212.36119080]
[348.36550903 208.10559082]
[363.08746338 205.17662048]
[378.01480103 203.59852600]
[393.02377319 203.38439941]
[407.99002075 204.53602600]
[422.78955078 207.04383850]
[437.29971313 210.88706970]
[451.40026855 216.03387451]
[464.97439575 222.44158936]
[477.90954590 230.05714417]
[490.09860229 238.81739807]
[501.44055176 248.64979553]
[511.84136963 259.47283936]
[521.21490479 271.19683838]
[529.48345947 283.72463989]
[536.57855225 296.95245361]
[542.44134521 310.77066040]
[547.02325439 325.06475830]
[550.28637695 339.71630859]
[552.20361328 354.60385132]
[552.75909424 369.60406494]
[551.94818115 384.59265137]
[549.77770996 399.44540405]
[546.26550293 414.03924561]
[541.44079590 428.25323486]
[535.34350586 441.96957397]
[528.02416992 455.07464600]
[519.54345703 467.45980835]
[509.97161865 479.02246094]
[499.38796997 489.66680908]
[487.88021851 499.30459595]
[475.54376221 507.85598755]
[462.48074341 515.25012207]
[448.79946899 521.42572021]
[434.61331177 526.33166504]
[420.03979492 529.92718506]
[405.19970703 532.18261719]
[390.21600342 533.07916260]
[375.21286011 532.60943604]
[360.31457520 530.77734375]
[345.64462280 527.59808350]
[331.32455444 523.09790039]
[317.47305298 517.31420898]
[304.20489502 510.29489136]
[291.63000488 502.09808350]
[279.85260010 492.79174805]
[268.97027588 482.45297241]
[259.07321167 471.16744995]
[250.24340820 459.02868652]
[242.55403137 446.13723755]
[236.06880188 432.60000610]
[230.84147644 418.52911377]
[226.91534424 404.04113770]
[224.32295227 389.25619507]
[223.08578491 374.29675293]
[223.21409607 359.28680420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 149]
[7 148]
[8 147]
[9 146]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 127]
[27 126]
[28 125]
[29 122]
[30 121]
[31 120]
[32 119]
[34 117]
[35 116]
[36 115]
[37 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
