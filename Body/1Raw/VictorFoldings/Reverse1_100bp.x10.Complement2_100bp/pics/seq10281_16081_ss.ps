%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-61.17833710 516.15502930]
[-57.09225464 530.62609863]
[-55.51074219 545.57958984]
[-56.47929382 560.58520508]
[-59.97005463 575.21130371]
[-65.88257599 589.03704834]
[-74.04675293 601.66455078]
[-84.22767639 612.73052979]
[-96.13243103 621.91668701]
[-109.41848755 628.95861816]
[-123.70358276 633.65374756]
[-138.57670593 635.86694336]
[-153.60990906 635.53460693]
[-168.37069702 632.66625977]
[-182.43432617 627.34436035]
[-195.39619446 619.72216797]
[-206.88334656 610.01892090]
[-216.56527710 598.51379395]
[-224.16342163 585.53778076]
[-229.45915222 571.46429443]
[-232.30010986 556.69824219]
[-232.60456848 541.66442871]
[-230.36373901 526.79541016]
[-225.64212036 512.51904297]
[-218.57554626 499.24609375]
[-209.36734009 487.35842896]
[-198.28244019 477.19805908]
[-185.63980103 469.05731201]
[-171.80314636 463.17047119]
[-157.17059326 459.70687866]
[-142.16316223 458.76617432]
[-127.21263885 460.37542725]
[-112.74916840 464.48837280]
[-106.26967621 450.96002197]
[-99.79017639 437.43167114]
[-93.31068420 423.90332031]
[-98.48676300 409.98413086]
[-92.10834503 396.17218018]
[-77.47352600 390.83740234]
[-70.99402618 377.30905151]
[-64.51453400 363.78070068]
[-58.03503799 350.25234985]
[-72.15331268 355.31936646]
[-86.26857758 350.24401855]
[-93.92754364 337.34671021]
[-91.62861633 322.52392578]
[-80.42284393 312.55242920]
[-65.43334961 311.99105835]
[-53.51313400 321.09646606]
[-50.11216736 335.70761108]
[-42.26041412 322.92678833]
[-34.40865707 310.14593506]
[-44.69246292 298.33197021]
[-50.82976913 283.90045166]
[-52.20874405 268.25936890]
[-48.68243790 252.93873596]
[-40.58433533 239.44102478]
[-28.69685745 229.09368896]
[-14.17577934 222.91867065]
[1.56213677 221.53149414]
[16.97736549 225.07994080]
[24.63796425 212.18360901]
[32.29856110 199.28727722]
[39.95915985 186.39096069]
[36.04553223 172.06547546]
[43.63075256 158.87763977]
[58.68315887 154.86979675]
[66.34375763 141.97348022]
[74.00435638 129.07714844]
[81.66495514 116.18082428]
[89.32554626 103.28449249]
[96.88993073 90.33149719]
[104.35766602 77.32254791]
[104.19229889 72.98358154]
[105.30440521 69.19837952]
[107.36302948 66.30053711]
[109.96287537 64.48191833]
[112.67697906 63.78063583]
[120.90578461 51.23923492]
[129.13459778 38.69783401]
[127.28136444 25.93349648]
[134.39335632 15.65714169]
[146.20942688 13.06739044]
[154.62405396 0.64989465]
[163.03866577 -11.76760101]
[158.56579590 -22.78259087]
[159.95127869 -34.46939087]
[166.73605347 -43.93832397]
[177.14056396 -48.90439606]
[188.53015137 -48.23826599]
[197.31074524 -60.39971924]
[206.09135437 -72.56118011]
[213.75195312 -85.45750427]
[220.23144531 -98.98584747]
[226.71093750 -112.51419067]
[233.19042969 -126.04254150]
[239.66993713 -139.57089233]
[246.14942932 -153.09922791]
[252.62892151 -166.62757874]
[240.13780212 -174.97938538]
[228.96246338 -185.02391052]
[219.33042908 -196.55668640]
[211.43778992 -209.34288025]
[205.44523621 -223.12222290]
[201.47476196 -237.61415100]
[199.60719299 -252.52363586]
[199.88055420 -267.54714966]
[202.28930664 -282.37884521]
[206.78437805 -296.71673584]
[213.27426147 -310.26892090]
[221.62684631 -322.75952148]
[231.67207336 -333.93423462]
[243.20542908 -343.56555176]
[255.99212646 -351.45739746]
[269.77182007 -357.44912720]
[284.26400757 -361.41870117]
[299.17361450 -363.28533936]
[314.19711304 -363.01104736]
[329.02862549 -360.60137939]
[343.36624146 -356.10543823]
[356.91806030 -349.61468506]
[369.40814209 -341.26135254]
[380.58221436 -331.21542358]
[390.21282959 -319.68145752]
[398.10388184 -306.89428711]
[404.09475708 -293.11422729]
[408.06341553 -278.62179565]
[409.92913818 -263.71206665]
[409.65393066 -248.68858337]
[407.24334717 -233.85720825]
[402.74649048 -219.51986694]
[396.25491333 -205.96847534]
[387.90078735 -193.47891235]
[377.85418701 -182.30543518]
[366.31964111 -172.67555237]
[353.53198242 -164.78527832]
[339.75152588 -158.79527283]
[325.25885010 -154.82748413]
[310.34902954 -152.96269226]
[295.32556152 -153.23884583]
[280.49432373 -155.65034485]
[266.15725708 -160.14808655]
[259.67776489 -146.61973572]
[253.19827271 -133.09138489]
[246.71878052 -119.56304169]
[240.23928833 -106.03469849]
[233.75979614 -92.50635529]
[227.28028870 -78.97800446]
[240.05731201 -86.83599854]
[254.96932983 -88.45814514]
[269.13711548 -83.53125000]
[279.82504272 -73.00660706]
[284.96945190 -58.91636658]
[283.57708740 -43.98113251]
[275.91671753 -31.08466148]
[263.46749878 -22.71706390]
[248.63313293 -20.49398804]
[234.27795410 -24.84467888]
[223.17367554 -34.92908478]
[217.46438599 -48.80006027]
[218.25280762 -63.78057480]
[209.47219849 -51.61911774]
[200.69160461 -39.45766068]
[204.69165039 -21.59386253]
[194.18370056 -6.21544170]
[175.45616150 -3.35298228]
[167.04154968 9.06451321]
[158.62692261 21.48200798]
[158.31015015 39.02813721]
[141.67599487 46.92664337]
[133.44718933 59.46804428]
[125.21837616 72.00944519]
[117.36662292 84.79028320]
[109.89888000 97.79924011]
[108.93606567 105.80208588]
[102.22187805 110.94509125]
[94.56127930 123.84142303]
[86.90068054 136.73774719]
[79.24008179 149.63407898]
[71.57949066 162.53039551]
[75.26037598 177.66607666]
[67.30772400 190.63566589]
[52.85548401 194.05154419]
[45.19488907 206.94787598]
[37.53429031 219.84420776]
[29.87369347 232.74052429]
[39.57423019 243.37962341]
[45.87585068 256.30718994]
[48.27564621 270.47109985]
[46.58788681 284.72134399]
[40.95832825 297.90350342]
[31.85169792 308.95223999]
[20.01332664 316.97735596]
[6.40816736 321.33557129]
[-7.85787296 321.68206787]
[-21.62781525 317.99771118]
[-29.47957039 330.77853394]
[-37.33132553 343.55938721]
[-44.50669098 356.73184204]
[-50.98618698 370.26019287]
[-57.46568298 383.78854370]
[-63.94517899 397.31689453]
[-58.92863083 412.06381226]
[-65.69247437 425.69119263]
[-79.78234100 430.38281250]
[-86.26183319 443.91116333]
[-92.74133301 457.43951416]
[-99.22082520 470.96786499]
[-86.95029449 479.65936279]
[-76.32526398 490.29968262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 208]
[34 207]
[35 206]
[36 205]
[39 202]
[40 201]
[41 200]
[42 199]
[50 198]
[51 197]
[52 196]
[61 186]
[62 185]
[63 184]
[64 183]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 174]
[73 173]
[78 172]
[79 171]
[80 170]
[83 168]
[84 167]
[85 166]
[90 163]
[91 162]
[92 161]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
