%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[247.14143372 524.80212402]
[260.13519287 516.99591064]
[257.24993896 502.27600098]
[252.87852478 496.31674194]
[254.43298340 487.31555176]
[251.76719666 472.55432129]
[249.10139465 457.79312134]
[245.23709106 443.29940796]
[233.67530823 433.90930176]
[236.32933044 418.31228638]
[231.29240417 404.18325806]
[226.25549316 390.05422974]
[214.69371033 380.66409302]
[217.34773254 365.06707764]
[212.31080627 350.93804932]
[207.27389526 336.80902100]
[202.23698425 322.67999268]
[196.26541138 308.91989136]
[189.38600159 295.59048462]
[182.50659180 282.26104736]
[172.53211975 280.04229736]
[165.27299500 272.54205322]
[163.29960632 262.06896973]
[167.50074768 252.03605652]
[161.02125549 238.50772095]
[154.54176331 224.97937012]
[138.45526123 220.07392883]
[130.74203491 204.75006104]
[136.61131287 188.27064514]
[129.93110657 174.84027100]
[123.25091553 161.40989685]
[116.47092438 148.02961731]
[109.59151459 134.70019531]
[102.71209717 121.37075806]
[95.83268738 108.04132843]
[92.36206818 106.35991669]
[89.64943695 103.15686798]
[88.35775757 98.80502319]
[88.95877075 93.95954132]
[82.68141174 80.33622742]
[76.24787903 73.85182953]
[76.41369629 66.46302795]
[70.33985901 52.74776459]
[64.26602936 39.03249741]
[58.19219208 25.31723022]
[46.46308517 19.95151711]
[41.68653107 8.40299702]
[45.91916656 -2.92887688]
[40.05020523 -16.73305321]
[34.18124390 -30.53723145]
[27.58036804 -17.06769371]
[13.43369007 -12.08055782]
[-0.15492773 -18.43268013]
[-5.40130901 -32.48527527]
[0.69991153 -46.18838120]
[14.65367794 -51.69223404]
[28.46596909 -45.84465408]
[22.84856987 -53.04761505]
[23.89122772 -60.36434937]
[19.49022865 -74.70420074]
[15.08923149 -89.04404449]
[3.64348221 -99.96674347]
[7.30608273 -114.40401459]
[2.90508461 -128.74386597]
[-1.49591351 -143.08370972]
[-5.89691162 -157.42355347]
[-19.66515160 -169.65127563]
[-15.07161522 -186.58839417]
[-19.68562317 -200.86112976]
[-24.29963303 -215.13386536]
[-28.91364288 -229.40660095]
[-40.52074432 -240.15768433]
[-37.07350159 -254.64787292]
[-41.68751144 -268.92062378]
[-46.30152130 -283.19332886]
[-49.84185410 -268.61712646]
[-58.94015121 -256.69149780]
[-72.06318665 -249.42608643]
[-86.99949646 -248.04528809]
[-101.23205566 -252.78178406]
[-112.36241913 -262.83737183]
[-118.51493835 -276.51751709]
[-118.65279388 -291.51690674]
[-112.75275421 -305.30783081]
[-101.80908966 -315.56628418]
[-87.66599274 -320.56356812]
[-72.70682526 -319.45751953]
[-59.45246887 -312.43457031]
[-50.13577652 -300.67666626]
[-51.91824341 -315.57040405]
[-53.70071030 -330.46411133]
[-68.59964752 -332.95376587]
[-82.19304657 -339.54135132]
[-93.37895966 -349.69277954]
[-101.25059509 -362.58520508]
[-105.16983032 -377.17343140]
[-104.81895447 -392.27487183]
[-100.22640991 -406.66531372]
[-91.76448822 -419.17822266]
[-80.11917114 -428.79919434]
[-66.23448181 -434.74832153]
[-51.23599243 -436.54333496]
[-36.33956528 -434.03869629]
[-22.75278664 -427.43746948]
[-11.57707596 -417.27478027]
[-3.71839738 -404.37448120]
[0.18618125 -389.78231812]
[-0.17986687 -374.68124390]
[-4.78686762 -360.29541016]
[-13.26135254 -347.79101562]
[-24.91633224 -338.18176270]
[-38.80699158 -332.24658203]
[-37.02452469 -317.35284424]
[-35.24206161 -302.45913696]
[-32.02878571 -287.80734253]
[-27.41477585 -273.53460693]
[-22.80076790 -259.26187134]
[-11.52368927 -249.53169250]
[-14.64090919 -234.02061462]
[-10.02690029 -219.74787903]
[-5.41289091 -205.47514343]
[-0.79888141 -191.20240784]
[9.82464695 -185.41732788]
[13.78546333 -173.56423950]
[8.44293594 -161.82455444]
[12.84393406 -147.48471069]
[17.24493217 -133.14485168]
[21.64592934 -118.80500793]
[32.77688980 -108.90798950]
[29.42907906 -93.44504547]
[33.83007812 -79.10519409]
[38.23107529 -64.76535034]
[42.73870468 -50.45866394]
[47.98542023 -36.40619278]
[53.85438156 -22.60201454]
[59.72334290 -8.79783726]
[74.29299164 0.98440552]
[71.90745544 19.24339676]
[77.98129272 32.95866394]
[84.05513000 46.67393112]
[90.12895966 60.38919830]
[96.30472565 74.05886841]
[102.58209229 87.68218231]
[109.16211700 101.16191864]
[116.04152679 114.49134827]
[122.92094421 127.82077789]
[129.80035400 141.15020752]
[136.51701355 147.34086609]
[136.68128967 154.72969055]
[143.36148071 168.16006470]
[150.04168701 181.59045410]
[163.21908569 184.37800598]
[172.25315857 194.10406494]
[174.00994873 207.06538391]
[168.07009888 218.49987793]
[174.54960632 232.02821350]
[181.02909851 245.55656433]
[198.15776062 256.18536377]
[195.83601379 275.38162231]
[202.71543884 288.71105957]
[209.59484863 302.04049683]
[212.48196411 287.32095337]
[222.79168701 276.42556763]
[237.32940674 272.73034668]
[251.59046936 277.38031006]
[261.15591431 288.93460083]
[263.06179810 303.81304932]
[256.71755981 317.40533447]
[244.08903503 325.49978638]
[229.08929443 325.58822632]
[216.36601257 317.64309692]
[221.40292358 331.77212524]
[226.43983459 345.90115356]
[231.47676086 360.03018188]
[243.39881897 370.43090820]
[240.38452148 385.01730347]
[245.42144775 399.14633179]
[250.45835876 413.27536011]
[262.38040161 423.67608643]
[259.36611938 438.26251221]
[263.17309570 423.75366211]
[273.21826172 412.61386108]
[287.25747681 407.33178711]
[302.15435791 409.08749390]
[314.58093262 417.48870850]
[321.76104736 430.65859985]
[322.09063721 445.65499878]
[315.49609375 459.12762451]
[303.45062256 468.06668091]
[288.64523315 470.47518921]
[274.38751221 465.81503296]
[263.86260986 455.12731934]
[266.52841187 469.88854980]
[269.19421387 484.64974976]
[271.96981812 499.39071655]
[274.85510254 514.11059570]
[289.83435059 516.43383789]
[303.11416626 523.74285889]
[313.09094238 535.15515137]
[318.55993652 549.29254150]
[318.86071777 564.44793701]
[313.95697021 578.79119873]
[304.44088745 590.59033203]
[291.46151733 598.42053223]
[276.58621216 601.33624268]
[261.61126709 598.98541260]
[248.34492493 591.65191650]
[238.38920593 580.22125244]
[232.94628906 566.07385254]
[232.67343140 550.91790771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[5 194]
[6 193]
[7 192]
[8 180]
[10 178]
[11 177]
[12 176]
[14 174]
[15 173]
[16 172]
[17 171]
[18 161]
[19 160]
[20 159]
[24 157]
[25 156]
[26 155]
[29 151]
[30 150]
[31 149]
[32 147]
[33 146]
[34 145]
[35 144]
[39 143]
[40 142]
[42 141]
[43 140]
[44 139]
[45 138]
[48 136]
[49 135]
[50 134]
[57 133]
[59 132]
[60 131]
[61 130]
[63 128]
[64 127]
[65 126]
[66 125]
[68 122]
[69 121]
[70 120]
[71 119]
[73 117]
[74 116]
[75 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
