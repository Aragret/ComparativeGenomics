%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[186.66523743 400.45031738]
[192.31994629 386.53695679]
[199.61053467 373.40664673]
[208.43067932 361.25091553]
[218.65174866 350.24694824]
[230.12472534 340.55529785]
[221.89591980 328.01388550]
[213.66709900 315.47250366]
[205.43829346 302.93109131]
[197.20948792 290.38967896]
[182.43777466 292.45413208]
[168.17593384 287.88146973]
[157.26907349 277.52767944]
[151.91737366 263.40750122]
[153.23242188 248.30261230]
[161.00672913 235.21362305]
[152.77792358 222.67222595]
[144.54911804 210.13082886]
[144.27343750 225.12829590]
[137.14071655 238.32391357]
[124.74443817 246.76974487]
[109.85395050 248.57897949]
[95.79582214 243.34741211]
[85.71069336 232.24380493]
[81.85159302 217.74873352]
[85.08065033 203.10041809]
[94.67650604 191.57133484]
[108.49539948 185.73712158]
[123.45016479 186.90113831]
[136.19989014 194.80337524]
[130.12605286 181.08810425]
[124.05221558 167.37283325]
[111.82405090 158.86865234]
[113.31066895 143.11744690]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[85.60704803 107.56452179]
[86.58062744 90.81852722]
[79.50352478 77.59299469]
[72.42641449 64.36746979]
[65.34931183 51.14194107]
[58.27220535 37.91641235]
[44.93919754 29.39928818]
[45.75637054 14.52711678]
[38.48314285 1.40842307]
[30.91876221 -11.54457569]
[23.25816536 -24.44090271]
[15.59756851 -37.33723068]
[7.93697071 -50.23355484]
[-0.00971367 -62.95559311]
[-8.23852158 -75.49699402]
[-16.46732903 -88.03839111]
[-28.91434860 -91.41989136]
[-35.50995255 -102.03505707]
[-33.18160248 -113.90541077]
[-41.22277451 -126.56793976]
[-49.26395035 -139.23046875]
[-57.30512238 -151.89299011]
[-65.34629822 -164.55551147]
[-73.38746643 -177.21803284]
[-81.42864227 -189.88056946]
[-94.98439026 -183.41535950]
[-109.22061920 -178.63128662]
[-123.92970276 -175.59812927]
[-138.89715576 -174.36012268]
[-153.90470886 -174.93530273]
[-168.73350525 -177.31529236]
[-183.16728210 -181.46539307]
[-196.99557495 -187.32505798]
[-210.01670837 -194.80886841]
[-222.04080200 -203.80767822]
[-232.89251709 -214.19023132]
[-242.41360474 -225.80516052]
[-250.46519470 -238.48304749]
[-256.92990112 -252.03904724]
[-261.71343994 -266.27545166]
[-264.74603271 -280.98464966]
[-265.98348999 -295.95214844]
[-265.40774536 -310.95968628]
[-263.02719116 -325.78839111]
[-258.87655640 -340.22201538]
[-253.01637268 -354.05007935]
[-245.53208923 -367.07092285]
[-236.53283691 -379.09469604]
[-226.14987183 -389.94601440]
[-214.53459167 -399.46667480]
[-201.85638428 -407.51779175]
[-188.30015564 -413.98199463]
[-174.06356812 -418.76498413]
[-159.35426331 -421.79705811]
[-144.38670349 -423.03393555]
[-129.37921143 -422.45764160]
[-114.55059052 -420.07653809]
[-100.11711884 -415.92535400]
[-86.28926849 -410.06466675]
[-73.26869202 -402.57986450]
[-61.24526596 -393.58016968]
[-50.39432907 -383.19680786]
[-40.87411880 -371.58117676]
[-32.82346344 -358.90267944]
[-26.35977364 -345.34619141]
[-21.57730484 -331.10943604]
[-18.54579926 -316.39999390]
[-17.30946541 -301.43240356]
[-17.88633347 -286.42492676]
[-20.26799011 -271.59640503]
[-24.41970253 -257.16308594]
[-30.28093147 -243.33544922]
[-37.76619720 -230.31515503]
[-46.76634598 -218.29206848]
[-57.15012741 -207.44151306]
[-68.76611328 -197.92173767]
[-60.72494125 -185.25921631]
[-52.68376923 -172.59667969]
[-44.64259720 -159.93415833]
[-36.60142517 -147.27163696]
[-28.56025124 -134.60911560]
[-20.51907921 -121.94658661]
[-4.54942036 -114.67080688]
[-3.92592907 -96.26720428]
[4.30287886 -83.72579956]
[12.53168678 -71.18440247]
[15.89107227 -70.11347961]
[18.89865112 -67.36220551]
[20.77029610 -63.11364746]
[20.83329773 -57.89415359]
[28.49389458 -44.99782562]
[36.15449142 -32.10150146]
[43.81509018 -19.20517349]
[49.93375015 -15.05983925]
[51.49209595 -6.05931807]
[55.78633499 -3.96921587]
[58.81317902 0.84069484]
[58.98189926 7.45001173]
[71.80870819 15.02115822]
[71.49773407 30.83930779]
[78.57483673 44.06483459]
[85.65194702 57.29036331]
[92.72904968 70.51589203]
[99.80615234 83.74141693]
[110.72908783 87.78256226]
[116.14739227 98.09193420]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[123.89568329 124.92397308]
[126.47269440 127.91120911]
[127.79083252 131.21240234]
[127.90873718 134.38301086]
[127.02593231 137.04360962]
[139.68853760 146.52880859]
[137.76748657 161.29901123]
[143.84132385 175.01426697]
[149.91514587 188.72953796]
[157.09051514 201.90200806]
[165.31932068 214.44342041]
[173.54814148 226.98481750]
[188.65017700 225.06390381]
[203.03001404 229.87088013]
[213.85249329 240.40150452]
[219.00839233 254.52870178]
[217.52537537 269.43206787]
[209.75088501 282.16088867]
[217.97969055 294.70227051]
[226.20851135 307.24368286]
[234.43731689 319.78509521]
[242.66612244 332.32647705]
[256.12411499 325.66015625]
[270.28753662 320.66467285]
[284.94982910 317.41284180]
[299.89718628 315.95214844]
[314.91165161 316.30380249]
[329.77423096 318.46276855]
[344.26818848 322.39749146]
[358.18218994 328.05065918]
[371.31332397 335.33975220]
[383.47006226 344.15853882]
[394.47515869 354.37838745]
[404.16809082 365.85025024]
[412.40756226 378.40689087]
[419.07339478 391.86511230]
[424.06832886 406.02871704]
[427.31961060 420.69116211]
[428.77978516 435.63858032]
[428.42752075 450.65301514]
[426.26803589 465.51550293]
[422.33273315 480.00933838]
[416.67907715 493.92312622]
[409.38946533 507.05395508]
[400.57025146 519.21038818]
[390.34997559 530.21508789]
[378.87774658 539.90759277]
[366.32083130 548.14660645]
[352.86233521 554.81188965]
[338.69854736 559.80633545]
[324.03598022 563.05706787]
[309.08853149 564.51666260]
[294.07409668 564.16387939]
[279.21166992 562.00378418]
[264.71798706 558.06799316]
[250.80442810 552.41381836]
[237.67385864 545.12371826]
[225.51777649 536.30401611]
[214.51344299 526.08337402]
[204.82135010 514.61071777]
[196.58282471 502.05349731]
[189.91801453 488.59475708]
[184.92410278 474.43078613]
[181.67393494 459.76812744]
[180.21488953 444.82058716]
[180.56825256 429.80618286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[16 156]
[17 155]
[18 154]
[30 153]
[31 152]
[32 151]
[34 149]
[35 144]
[36 143]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[44 134]
[45 131]
[46 129]
[47 128]
[48 127]
[49 126]
[50 122]
[51 121]
[52 120]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
