%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[159.08833313 713.43798828]
[146.53559875 705.21759033]
[134.51820374 696.23266602]
[123.08266449 686.51800537]
[112.27319336 676.11114502]
[102.13162231 665.05249023]
[92.69718933 653.38464355]
[84.00640106 641.15283203]
[76.09286499 628.40441895]
[68.98720551 615.18865967]
[62.71691132 601.55670166]
[57.30624390 587.56134033]
[52.77613449 573.25659180]
[49.14410782 558.69793701]
[46.42422104 543.94165039]
[44.62698746 529.04479980]
[43.75937271 514.06500244]
[43.82472229 499.06024170]
[44.82278824 484.08859253]
[46.74971008 469.20797729]
[49.59803009 454.47589111]
[53.35673141 439.94943237]
[58.01126862 425.68472290]
[63.54364014 411.73696899]
[69.93243408 398.16015625]
[77.15293884 385.00680542]
[85.17722321 372.32778931]
[93.97422791 360.17218018]
[103.50993347 348.58697510]
[113.74744415 337.61700439]
[124.64715576 327.30474854]
[136.16688538 317.69006348]
[148.26208496 308.81015015]
[160.88594055 300.69937134]
[173.98962402 293.38909912]
[167.51013184 279.86077881]
[161.03063965 266.33242798]
[154.55113220 252.80407715]
[148.07164001 239.27572632]
[144.88545227 237.76559448]
[142.27239990 234.63716125]
[140.98515320 230.17663574]
[141.62004089 224.99552917]
[129.51985168 216.31021118]
[131.24081421 200.58288574]
[125.37184906 186.77871704]
[119.50288391 172.97453308]
[113.63392639 159.17036438]
[111.08766174 157.99789429]
[108.85240173 155.74617004]
[107.34155273 152.52861023]
[106.91986084 148.60601807]
[107.85371399 144.36550903]
[102.81680298 130.23648071]
[97.77988434 116.10745239]
[84.72544861 105.57379150]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[77.43414307 61.00305176]
[70.23841095 74.16440582]
[55.88315201 78.51488495]
[42.59172440 71.56233978]
[37.97805786 57.28949356]
[44.68507004 43.87248993]
[58.87067795 38.99719238]
[72.40808868 45.45569611]
[68.43598938 30.99117088]
[57.63260651 23.94491386]
[54.62202072 11.81560516]
[60.48880768 1.23697734]
[56.73250961 -13.28508186]
[45.78590012 -24.70796776]
[50.08950424 -38.96728897]
[46.33320236 -53.48934937]
[42.57690430 -68.01140594]
[34.05096817 -55.67007828]
[19.32101059 -52.83665085]
[6.82501459 -61.13424683]
[3.72125626 -75.80962372]
[11.78770924 -88.45606232]
[26.40354156 -91.82910156]
[39.19557953 -83.99728394]
[36.74985504 -98.79655457]
[34.30412674 -113.59582520]
[31.85839844 -128.39509583]
[29.41267204 -143.19436646]
[26.96694374 -157.99363708]
[11.93248463 -159.02404785]
[-2.45890856 -163.49446106]
[-15.43112659 -171.16377258]
[-26.28459549 -181.61837769]
[-34.43399811 -194.29449463]
[-39.43984985 -208.50851440]
[-41.03219223 -223.49388123]
[-39.12514877 -238.44244385]
[-33.82156754 -252.54808044]
[-25.40746117 -265.05004883]
[-14.33659363 -275.27416992]
[-1.20600224 -282.66906738]
[13.27619648 -286.83590698]
[28.32899666 -287.55001831]
[43.14061737 -284.77285767]
[56.91228867 -278.65423584]
[68.90132141 -269.52404785]
[78.46116638 -257.87475586]
[85.07626343 -244.33456421]
[88.38987732 -229.63365173]
[88.22330475 -214.56483459]
[84.58552551 -199.94078064]
[77.67272949 -186.55010986]
[67.85771179 -175.11499023]
[55.66977692 -166.25207520]
[41.76621628 -160.43936157]
[44.21194077 -145.64009094]
[46.65766907 -130.84082031]
[49.10339737 -116.04154968]
[51.54912567 -101.24227905]
[53.99485016 -86.44300842]
[57.09896088 -71.76770782]
[60.85526276 -57.24565125]
[64.61156464 -42.72359085]
[75.28949738 -32.33942032]
[71.25457001 -17.04138184]
[75.01086426 -2.51932335]
[87.96820831 9.31596947]
[82.90051270 27.01907539]
[86.87261200 41.48360062]
[91.48661804 55.75633240]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[112.26515961 89.32550812]
[116.25755310 100.26634979]
[111.90891266 111.07054138]
[116.94583130 125.19956970]
[121.98274231 139.32859802]
[127.43810272 153.30139160]
[133.30706787 167.10557556]
[139.17602539 180.90974426]
[145.04498291 194.71392822]
[157.56497192 204.38659668]
[155.42422485 219.12655640]
[161.59999084 232.79623413]
[168.07948303 246.32458496]
[174.55897522 259.85293579]
[181.03848267 273.38125610]
[187.51797485 286.90960693]
[201.42744446 281.28173828]
[215.65989685 276.52947998]
[230.16026306 272.67126465]
[244.87245178 269.72201538]
[259.73953247 267.69308472]
[274.70397949 266.59237671]
[289.70791626 266.42413330]
[304.69329834 267.18902588]
[319.60214233 268.88406372]
[334.37673950 271.50271606]
[348.95999146 275.03482056]
[363.29541016 279.46673584]
[377.32757568 284.78131104]
[391.00219727 290.95797729]
[404.26638794 297.97283936]
[417.06875610 305.79879761]
[429.35986328 314.40548706]
[441.09210205 323.75970459]
[452.22009277 333.82519531]
[462.70077515 344.56304932]
[472.49365234 355.93173218]
[481.56076050 367.88720703]
[489.86706543 380.38330078]
[497.38043213 393.37158203]
[504.07177734 406.80187988]
[509.91522217 420.62216187]
[514.88818359 434.77902222]
[518.97137451 449.21765137]
[522.14898682 463.88220215]
[524.40881348 478.71594238]
[525.74200439 493.66146851]
[526.14349365 508.66098022]
[525.61169434 523.65643311]
[524.14862061 538.58984375]
[521.76000977 553.40338135]
[518.45501709 568.03973389]
[514.24652100 582.44238281]
[509.15075684 596.55548096]
[503.18743896 610.32446289]
[496.37963867 623.69604492]
[488.75366211 636.61859131]
[480.33908081 649.04199219]
[471.16839600 660.91827393]
[461.27713013 672.20135498]
[450.70352173 682.84777832]
[439.48846436 692.81616211]
[427.67538452 702.06805420]
[415.30996704 710.56762695]
[402.44003296 718.28204346]
[389.11541748 725.18133545]
[375.38763428 731.23895264]
[361.30981445 736.43139648]
[346.93640137 740.73858643]
[332.32302856 744.14379883]
[317.52621460 746.63397217]
[302.60321045 748.19934082]
[287.61175537 748.83398438]
[272.60983276 748.53540039]
[257.65551758 747.30468750]
[242.80662537 745.14660645]
[228.12063599 742.06964111]
[213.65434265 738.08551025]
[199.46372986 733.20977783]
[185.60368347 727.46124268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[43 141]
[45 139]
[46 138]
[47 137]
[48 136]
[53 135]
[54 134]
[55 133]
[57 130]
[58 129]
[59 128]
[66 127]
[67 126]
[70 124]
[71 123]
[73 121]
[74 120]
[75 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
