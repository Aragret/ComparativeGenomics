%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[136.65425110 646.15539551]
[145.45649719 633.72796631]
[158.55575562 625.96075439]
[156.77328491 611.06701660]
[154.99081421 596.17333984]
[143.15956116 587.19793701]
[141.13972473 572.11901855]
[150.63412476 559.77014160]
[148.85165405 544.87640381]
[137.59167480 531.41613770]
[144.97909546 514.54876709]
[142.97508240 499.68325806]
[133.60676575 488.10379028]
[139.43098450 473.39361572]
[137.42697144 458.52807617]
[135.42295837 443.66256714]
[133.30833435 428.81237793]
[131.08322144 413.97833252]
[121.54354858 402.53961182]
[127.14810944 387.74435425]
[124.92299652 372.91033936]
[122.69787598 358.07629395]
[120.47276306 343.24224854]
[105.03746796 339.65365601]
[92.12973785 330.39410400]
[83.74330139 316.85739136]
[81.18748474 301.10073853]
[84.88282776 285.53219604]
[94.29227448 272.54248047]
[107.99895477 264.13800049]
[105.55322266 249.33871460]
[103.10749817 234.53944397]
[100.66176605 219.74017334]
[98.21604156 204.94090271]
[95.77031708 190.14163208]
[89.01414490 203.53395081]
[76.52141571 211.83645630]
[61.55767822 212.87889099]
[48.03443146 206.38876343]
[39.48661423 194.06257629]
[38.14860535 179.12237549]
[44.37015915 165.47348022]
[56.52497482 156.68368530]
[71.43581390 155.05062866]
[85.20501709 161.00117493]
[94.23301697 172.97904968]
[94.00968933 157.98071289]
[84.21115112 143.42201233]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[90.35356140 28.05181313]
[89.90695190 13.05846405]
[89.46034241 -1.93488598]
[88.56752777 -16.90829086]
[87.22929382 -31.84847641]
[78.29165649 -44.90333176]
[84.86263275 -58.27013779]
[83.52439880 -73.21032715]
[82.18616486 -88.15050507]
[80.84793091 -103.09069061]
[79.50969696 -118.03087616]
[75.62715149 -126.29911041]
[78.26445007 -133.20320129]
[77.14880371 -148.16165161]
[76.03315735 -163.12010193]
[67.29087830 -176.30657959]
[74.06013489 -189.57406616]
[65.31785583 -202.76054382]
[72.08711243 -216.02804565]
[70.97146606 -230.98649597]
[69.85581970 -245.94494629]
[56.19866943 -248.43867493]
[43.54820251 -254.13316345]
[32.64193344 -262.69119263]
[24.11444473 -273.60879517]
[18.46044731 -286.24487305]
[16.00610161 -299.85882568]
[16.89019012 -313.65402222]
[21.05629349 -326.82443237]
[28.25634766 -338.60156250]
[38.06542969 -348.29953003]
[49.90681839 -355.35482788]
[63.08589935 -359.35910034]
[62.41611481 -374.34414673]
[61.74633026 -389.32916260]
[52.77189255 -398.59320068]
[52.52252579 -411.08807373]
[60.58660126 -420.10458374]
[52.44184875 -433.66824341]
[59.79677963 -446.62023926]
[59.35017395 -461.61361694]
[58.90356827 -476.60696411]
[58.45696259 -491.60031128]
[44.49341202 -497.76324463]
[34.59321976 -509.38000488]
[30.72208405 -524.14404297]
[33.64861679 -539.12396240]
[42.79175568 -551.34552002]
[56.33612442 -558.38201904]
[71.59247589 -558.83648682]
[85.53164673 -552.61859131]
[95.38601685 -540.96295166]
[99.19898224 -526.18377686]
[96.21347809 -511.21548462]
[87.02228546 -499.03005981]
[73.45030975 -492.04690552]
[73.89691925 -477.05355835]
[74.34352875 -462.06021118]
[74.79013062 -447.06686401]
[82.90293884 -434.57559204]
[75.57995605 -420.55117798]
[85.59416199 -406.13998413]
[76.73136902 -389.99896240]
[77.40115356 -375.01391602]
[78.07093811 -360.02890015]
[93.83286285 -356.39083862]
[107.94921875 -348.46276855]
[119.27822876 -336.87692261]
[126.90105438 -322.56179810]
[130.19627380 -306.66760254]
[128.89057922 -290.47402954]
[123.08140564 -275.28704834]
[113.22969818 -262.33370972]
[100.12337494 -252.66291809]
[84.81427002 -247.06059265]
[85.92991638 -232.10214233]
[87.04557037 -217.14369202]
[95.70804596 -205.02714539]
[89.01858521 -190.68972778]
[97.68106842 -178.57318115]
[90.99160767 -164.23574829]
[92.10725403 -149.27729797]
[93.22290802 -134.31884766]
[94.44988251 -119.36911011]
[95.78811646 -104.42892456]
[97.12635040 -89.48873901]
[98.46458435 -74.54856110]
[99.80281830 -59.60837173]
[108.64473724 -47.62213898]
[102.16947937 -33.18671036]
[103.50771332 -18.24652672]
[105.56987762 -16.34767532]
[107.00412750 -13.51756287]
[107.45199585 -9.99125957]
[106.64665985 -6.12914228]
[104.45369720 -2.38149190]
[104.90029907 12.61185837]
[105.34690857 27.60520744]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[117.14213562 136.36476135]
[117.20545197 148.86195374]
[109.00802612 157.75738525]
[109.23135376 172.75572205]
[110.56958771 187.69590759]
[113.01531219 202.49517822]
[115.46103668 217.29444885]
[117.90676880 232.09371948]
[120.35249329 246.89299011]
[122.79822540 261.69226074]
[136.75779724 264.51739502]
[148.88911438 271.92227173]
[157.74559021 283.00000000]
[162.27929688 296.40719604]
[161.96495056 310.52679443]
[156.86070251 323.66323853]
[147.59869385 334.24594116]
[135.30680847 341.01712036]
[137.53192139 355.85116577]
[139.75703430 370.68521118]
[141.98216248 385.51925659]
[151.68098450 398.01898193]
[145.91726685 411.75320435]
[148.14237976 426.58724976]
[152.51017761 434.60971069]
[150.28849792 441.65853882]
[152.29251099 456.52407837]
[154.29652405 471.38961792]
[163.80816650 484.03234863]
[157.84060669 497.67922974]
[159.84461975 512.54473877]
[169.60977173 520.97119141]
[170.97288513 533.39398193]
[163.74537659 543.09399414]
[165.52783203 557.98767090]
[177.66815186 567.74731445]
[179.26367188 582.87707520]
[169.88453674 594.39086914]
[171.66699219 609.28454590]
[173.44946289 624.17828369]
[188.01165771 628.63500977]
[199.49790955 638.63427734]
[205.91816711 652.44372559]
[206.16006470 667.67071533]
[200.18170166 681.67712402]
[189.01885986 692.03619385]
[174.60557556 696.95324707]
[159.43904114 695.57629395]
[146.14694214 688.14392090]
[137.03221130 675.94384766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[8 195]
[9 194]
[11 191]
[12 190]
[14 188]
[15 187]
[16 186]
[17 184]
[18 183]
[20 181]
[21 180]
[22 179]
[23 178]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[46 164]
[47 163]
[49 160]
[50 159]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[59 146]
[60 145]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[68 138]
[69 137]
[70 136]
[72 134]
[74 132]
[75 131]
[76 130]
[88 120]
[89 119]
[90 118]
[93 116]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
