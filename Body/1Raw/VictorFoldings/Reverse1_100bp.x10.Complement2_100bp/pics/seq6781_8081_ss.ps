%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[118.99645233 696.93731689]
[106.05430603 704.59710693]
[91.97860718 709.89288330]
[77.19710541 712.66387939]
[62.15899277 712.82580566]
[47.32125473 710.37371826]
[33.13479996 705.38214111]
[20.03073883 698.00280762]
[8.40728474 688.45996094]
[-1.38233566 677.04351807]
[-9.04062748 664.10052490]
[-14.33486366 650.02423096]
[-17.10416031 635.24237061]
[-17.26435852 620.20428467]
[-14.81059074 605.36682129]
[-9.81742573 591.18090820]
[-2.43659973 578.07769775]
[7.10759306 566.45532227]
[18.52511406 556.66699219]
[31.46899986 549.01019287]
[45.54589844 543.71752930]
[60.32802963 540.94989014]
[75.36618042 540.79138184]
[77.81191254 525.99212646]
[80.25763702 511.19287109]
[82.70336151 496.39358521]
[85.14909363 481.59432983]
[87.48458099 466.77725220]
[88.60022736 451.81881714]
[88.60022736 436.81881714]
[88.60022736 421.81881714]
[88.60022736 406.81881714]
[88.60022736 391.81881714]
[76.34839630 385.78475952]
[67.85086060 375.00881958]
[64.81069946 361.55868530]
[67.87682343 348.04656982]
[76.50645447 337.12203979]
[89.06024933 330.95233154]
[89.28357697 315.95401001]
[89.50690460 300.95565796]
[89.73023224 285.95733643]
[89.95355988 270.95898438]
[90.17688751 255.96064758]
[90.40021515 240.96231079]
[90.62354279 225.96397400]
[90.84687042 210.96563721]
[80.32080078 200.49008179]
[80.33362579 185.27645874]
[91.39273071 174.30676270]
[91.61605835 159.30842590]
[91.83938599 144.31008911]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[84.69254303 105.48278046]
[84.95262909 93.83917236]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[93.82607269 55.36971283]
[93.93773651 40.37012863]
[93.71440887 25.37179184]
[87.14545441 38.85692596]
[77.22322083 50.10633850]
[64.66400146 58.30792236]
[50.37445450 62.86959839]
[35.38616180 63.46205521]
[20.78113365 60.04252625]
[7.61372375 52.85786819]
[-3.16550159 42.42674637]
[-10.77838135 29.50219345]
[-14.67533493 15.01724529]
[-14.57503891 0.01758051]
[-10.48473167 -14.41396141]
[-2.69969773 -27.23555374]
[8.21805477 -37.52159500]
[21.48036575 -44.52952957]
[36.12981415 -47.75344849]
[51.10884476 -46.96060944]
[65.33611298 -42.20825195]
[77.78453064 -33.83945084]
[87.55545044 -22.45835876]
[93.94348145 -8.88658810]
[96.48752594 5.89726925]
[100.88852692 -8.44257832]
[105.28952026 -22.78242493]
[109.69052124 -37.12227249]
[114.09152222 -51.46212006]
[116.42700195 -66.27919006]
[116.65032959 -81.27752686]
[105.92274475 -92.57161713]
[106.36288452 -107.77888489]
[117.19618988 -117.93640137]
[117.41951752 -132.93473816]
[117.64284515 -147.93307495]
[117.86617279 -162.93141174]
[110.33519745 -176.84524536]
[118.26112366 -189.45591736]
[118.48445892 -204.45425415]
[118.70778656 -219.45259094]
[118.93111420 -234.45092773]
[105.45579529 -241.70864868]
[96.90644073 -254.40380859]
[95.24763489 -269.61917114]
[100.86054230 -283.85833740]
[112.45537567 -293.84924316]
[127.36771393 -297.29608154]
[142.17082214 -293.40676880]
[153.46304321 -283.07507324]
[158.64952087 -268.67510986]
[156.53842163 -253.51588440]
[147.61488342 -241.08088684]
[133.92944336 -234.22760010]
[133.70611572 -219.22926331]
[133.48278809 -204.23092651]
[133.25946045 -189.23258972]
[140.80641174 -176.39152527]
[132.86451721 -162.70808411]
[132.64118958 -147.70974731]
[132.41786194 -132.71141052]
[132.19453430 -117.71307373]
[142.72059631 -107.23751068]
[142.70777893 -92.02388763]
[131.64866638 -81.05419922]
[131.42533875 -66.05586243]
[138.53227234 -79.26538086]
[149.17481995 -89.83592224]
[162.43228149 -96.85302734]
[177.15776062 -99.70964050]
[192.07736206 -98.15863800]
[205.90037537 -92.33419037]
[217.43098450 -82.74018860]
[225.67167664 -70.20659637]
[229.90954590 -55.81769562]
[229.77798462 -40.81827164]
[225.28836060 -26.50592613]
[216.82907104 -14.11881828]
[205.13192749 -4.72855854]
[191.20886230 0.85250324]
[176.26435852 2.14154863]
[161.59124756 -0.97293735]
[148.45892334 -8.22152042]
[138.00344849 -18.97712708]
[131.12933350 -32.30928802]
[128.43136597 -47.06112289]
[124.03036499 -32.72127533]
[119.62937164 -18.38142776]
[115.22837067 -4.04157972]
[110.82737732 10.29826736]
[108.71275330 25.14846420]
[108.93608093 40.14680099]
[111.19786835 42.85173035]
[112.26187134 46.78656769]
[111.56429291 51.37641525]
[108.81941986 55.81631851]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[116.25568390 100.36310577]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[106.83772278 144.53341675]
[106.61439514 159.53175354]
[106.39106750 174.53009033]
[117.11865234 185.82418823]
[116.67851257 201.03144836]
[105.84520721 211.18896484]
[105.62187958 226.18730164]
[105.39855194 241.18563843]
[105.17522430 256.18399048]
[104.95189667 271.18231201]
[104.72856903 286.18066406]
[104.50524139 301.17898560]
[104.28191376 316.17733765]
[104.05858612 331.17565918]
[118.33991241 339.50848389]
[126.42394257 353.82434082]
[126.18669891 370.16940308]
[117.78763580 384.08383179]
[103.60022736 391.81881714]
[103.60022736 406.81881714]
[103.60022736 421.81881714]
[103.60022736 436.81881714]
[103.60022736 451.81881714]
[112.44957733 439.70727539]
[126.12885284 433.55279541]
[141.06230164 434.96414185]
[153.34637451 443.57235718]
[159.77005005 457.12731934]
[158.65417480 472.08575439]
[150.29045105 484.53756714]
[136.86512756 491.22790527]
[121.88755035 490.40792847]
[109.27283478 482.29196167]
[102.31861877 469.00238037]
[104.14039612 477.95330811]
[99.94836426 484.04006958]
[97.50263214 498.83932495]
[95.05690765 513.63861084]
[92.61118317 528.43786621]
[90.16545105 543.23712158]
[104.35304260 548.22546387]
[117.45877838 555.60186768]
[129.08439636 565.14208984]
[138.87660217 576.55627441]
[146.53782654 589.49755859]
[151.83526611 603.57263184]
[154.60791016 618.35382080]
[154.77151489 633.39190674]
[152.32112122 648.22998047]
[147.33116150 662.41699219]
[139.95330811 675.52185059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 193]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[57 156]
[58 155]
[59 154]
[60 150]
[61 149]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[88 124]
[89 123]
[92 120]
[93 119]
[94 118]
[95 117]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
