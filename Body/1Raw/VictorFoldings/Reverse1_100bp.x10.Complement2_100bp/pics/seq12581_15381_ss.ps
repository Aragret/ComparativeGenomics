%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[-50.28355789 635.47283936]
[-63.46057892 642.64660645]
[-76.98403931 649.14379883]
[-90.81921387 654.94763184]
[-104.93059540 660.04333496]
[-119.28195190 664.41772461]
[-133.83645630 668.05969238]
[-148.55673218 670.95971680]
[-163.40501404 673.11047363]
[-178.34315491 674.50646973]
[-193.33283997 675.14398193]
[-208.33557129 675.02154541]
[-223.31285095 674.13934326]
[-238.22622681 672.49969482]
[-253.03739929 670.10675049]
[-267.70837402 666.96679688]
[-282.20147705 663.08770752]
[-296.47949219 658.47961426]
[-310.50579834 653.15417480]
[-324.24438477 647.12524414]
[-337.65997314 640.40814209]
[-350.71810913 633.02014160]
[-363.38531494 624.98028564]
[-375.62902832 616.30920410]
[-387.41784668 607.02905273]
[-398.72149658 597.16375732]
[-409.51095581 586.73858643]
[-419.75857544 575.78027344]
[-429.43798828 564.31707764]
[-438.52438354 552.37829590]
[-446.99441528 539.99456787]
[-454.82635498 527.19781494]
[-462.00009155 514.02075195]
[-468.49722290 500.49728394]
[-474.30105591 486.66210938]
[-479.39672852 472.55072021]
[-483.77108765 458.19934082]
[-487.41296387 443.64483643]
[-490.31298828 428.92453003]
[-492.46371460 414.07626343]
[-493.85961914 399.13809204]
[-494.49713135 384.14840698]
[-494.37460327 369.14569092]
[-493.49237061 354.16839600]
[-491.85269165 339.25503540]
[-489.45974731 324.44387817]
[-486.31970215 309.77291870]
[-482.44061279 295.27981567]
[-477.83242798 281.00180054]
[-472.50701904 266.97549438]
[-466.47799683 253.23695374]
[-459.76086426 239.82139587]
[-452.37286377 226.76325989]
[-444.33297729 214.09609985]
[-435.66180420 201.85240173]
[-426.38165283 190.06361389]
[-416.51632690 178.75997925]
[-406.09109497 167.97053528]
[-395.13281250 157.72296143]
[-383.66955566 148.04357910]
[-371.73074341 138.95721436]
[-359.34704590 130.48721313]
[-346.55023193 122.65530396]
[-333.37316895 115.48159790]
[-319.84967041 108.98450470]
[-306.01446533 103.18070221]
[-291.90304565 98.08509827]
[-277.55166626 93.71076965]
[-262.99716187 90.06893158]
[-248.27685547 87.16895294]
[-233.42857361 85.01826477]
[-218.49041748 83.62239075]
[-203.50073242 82.98491669]
[-188.49798584 83.10748291]
[-173.52072144 83.98976135]
[-158.60736084 85.62949371]
[-143.79618835 88.02247620]
[-129.12524414 91.16255951]
[-114.63215637 95.04168701]
[-100.35415649 99.64990234]
[-86.32788086 104.97537231]
[-72.58933258 111.00442505]
[-59.17379379 117.72158813]
[-46.11568832 125.10961151]
[-33.44854355 133.14953613]
[-21.20487213 141.82073975]
[-9.41610432 151.10092163]
[1.88749671 160.96630859]
[12.67691612 171.39154053]
[23.63282585 161.14614868]
[34.58873367 150.90075684]
[45.54464340 140.65536499]
[56.50055313 130.40997314]
[67.45646667 120.16457367]
[78.41236877 109.91918945]
[89.36827850 99.67379761]
[99.53182983 88.64191437]
[108.84671021 76.88466644]
[118.16159058 65.12741089]
[127.47647858 53.37016296]
[116.80374908 42.80814743]
[107.35773468 31.13613319]
[99.25308990 18.49580383]
[92.58820343 5.04060078]
[87.44397736 -9.06614017]
[83.88286591 -23.65317726]
[81.94808197 -38.54343796]
[81.66313171 -53.55616379]
[83.03145599 -68.50911713]
[86.03646088 -83.22078705]
[90.64165497 -97.51258087]
[96.79113770 -111.21101379]
[104.41026306 -124.14979553]
[113.40654755 -136.17185974]
[123.67077637 -147.13127136]
[135.07835388 -156.89500427]
[147.49079895 -165.34452820]
[160.75744629 -172.37725830]
[174.71723938 -177.90783691]
[189.20072937 -181.86914062]
[204.03208923 -184.21305847]
[219.03128052 -184.91114807]
[234.01623535 -183.95495605]
[248.80503845 -181.35604858]
[263.21817017 -177.14599609]
[277.08068848 -171.37591553]
[290.22430420 -164.11582947]
[302.48944092 -155.45388794]
[313.72726440 -145.49522400]
[323.80130005 -134.36073303]
[332.58929443 -122.18556976]
[339.98452759 -109.11753845]
[345.89727783 -95.31527710]
[350.25576782 -80.94631958]
[353.00704956 -66.18509674]
[354.11776733 -51.21080399]
[353.57440186 -36.20520782]
[351.38357544 -21.35046196]
[347.57186890 -6.82689190]
[342.18554688 7.18919992]
[335.29000854 20.52766991]
[326.96896362 33.02660370]
[317.32339478 44.53427505]
[306.47042847 54.91098785]
[294.54180908 64.03078461]
[281.68228149 71.78295135]
[268.04800415 78.07339478]
[253.80447388 82.82574463]
[239.12457275 85.98231506]
[224.18652344 87.50479126]
[209.17166138 87.37468719]
[194.26223755 85.59358978]
[179.63925171 82.18310547]
[165.48019409 77.18464661]
[151.95697021 70.65888977]
[139.23373413 62.68504715]
[129.91883850 74.44229889]
[120.60396576 86.19954681]
[111.28907776 97.95680237]
[125.74651337 93.95896912]
[140.29043579 97.62969971]
[151.11909485 108.00949097]
[155.40193176 122.38507080]
[152.01939392 136.99870300]
[141.85568237 148.03044128]
[127.56755829 152.59657288]
[112.88991547 149.50355530]
[101.65944672 139.55989075]
[96.81176758 125.36481476]
[99.61367035 110.62969971]
[88.65776062 120.87509155]
[77.70185089 131.12048340]
[66.74594879 141.36587524]
[55.79003525 151.61126709]
[44.83412552 161.85665894]
[33.87821579 172.10205078]
[22.92230797 182.34744263]
[32.60179138 193.81063843]
[41.68824768 205.74935913]
[50.15835190 218.13299561]
[57.99036789 230.92973328]
[65.16418457 244.10673523]
[71.66138458 257.63018799]
[77.46529388 271.46533203]
[82.56101990 285.57672119]
[86.93547058 299.92807007]
[90.57741547 314.48254395]
[93.47752380 329.20281982]
[95.62832642 344.05108643]
[97.02432251 358.98922729]
[97.66191864 373.97891235]
[97.53948212 388.98165894]
[96.65732574 403.95892334]
[95.01771545 418.87231445]
[92.62485504 433.68350220]
[89.48488617 448.35446167]
[85.60588074 462.84759521]
[80.99777985 477.12561035]
[75.67243195 491.15194702]
[69.64348602 504.89053345]
[62.92643738 518.30615234]
[55.53851700 531.36431885]
[47.49869156 544.03149414]
[38.82760239 556.27526855]
[29.54750252 568.06408691]
[19.68222046 579.36779785]
[9.25707626 590.15728760]
[-1.70116735 600.40490723]
[-13.16438103 610.08435059]
[-25.10313797 619.17077637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 177]
[90 176]
[91 175]
[92 174]
[93 173]
[94 172]
[95 171]
[96 170]
[97 159]
[98 158]
[99 157]
[100 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
