%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[114.52503967 695.21472168]
[109.24358368 681.10607910]
[107.23453522 666.17584229]
[108.59866333 651.17297363]
[113.26753998 636.84991455]
[121.00698090 623.92517090]
[131.42878723 613.04705811]
[144.01017761 604.76116943]
[158.12011719 599.48309326]
[156.11610413 584.61761475]
[154.11209106 569.75207520]
[152.10806274 554.88653564]
[150.10404968 540.02099609]
[148.10003662 525.15545654]
[136.13647461 516.35723877]
[133.89234924 501.31005859]
[143.20184326 488.82119751]
[141.19783020 473.95568848]
[139.19381714 459.09014893]
[137.18980408 444.22463989]
[125.95071411 437.92285156]
[120.30914307 426.12222290]
[122.52688599 413.03436279]
[132.01521301 403.47473145]
[130.23274231 388.58102417]
[128.45027161 373.68731689]
[126.66780853 358.79357910]
[124.88534546 343.89987183]
[123.10287476 329.00616455]
[107.73959351 327.69451904]
[92.97674561 323.22424316]
[79.45665741 315.78741455]
[67.76808929 305.70520020]
[58.42061234 293.41403198]
[51.82236862 279.44671631]
[48.26225662 264.40933228]
[47.89729691 248.95492554]
[50.74569702 233.75514221]
[56.68595123 219.47106934]
[65.46203613 206.72444153]
[76.69444275 196.07061768]
[89.89657593 187.97433472]
[104.49583435 182.78950500]
[102.49182129 167.92398071]
[100.37719727 153.07377625]
[98.15208435 138.23973083]
[95.92696381 123.40568542]
[93.70184326 108.57164764]
[90.37958527 93.94418335]
[85.97859192 79.60433960]
[81.57759094 65.26448822]
[77.17658997 50.92464447]
[72.77559662 36.58479691]
[67.94960022 22.38234138]
[62.70287704 8.32987022]
[57.45616150 -5.72260141]
[52.20944214 -19.77507210]
[46.96272278 -33.82754517]
[41.71600723 -47.88001633]
[37.66203690 -33.43822479]
[26.99958801 -22.88776398]
[12.51579952 -18.98650169]
[-2.00330305 -22.75421715]
[-12.76245975 -33.20603561]
[-16.94925308 -47.60988235]
[-13.46926594 -62.20062256]
[-3.23215747 -73.16426849]
[11.08611584 -77.63495636]
[25.74279213 -74.44406128]
[36.90616226 -64.42640686]
[33.80205536 -79.10170746]
[23.37642288 -91.00199127]
[28.31244659 -105.05492401]
[25.20833588 -119.73022461]
[22.10422707 -134.40553284]
[17.26666641 -142.15380859]
[19.06486320 -149.32237244]
[16.17959023 -164.04226685]
[13.29431725 -178.76216125]
[10.40904522 -193.48204041]
[7.52377224 -208.20193481]
[4.63849974 -222.92182922]
[1.75322723 -237.64172363]
[-3.79920244 -223.70721436]
[-14.78899097 -213.49816895]
[-29.09418297 -208.98579407]
[-43.95267105 -211.04136658]
[-56.49551010 -219.26799011]
[-64.30088043 -232.07720947]
[-65.86167908 -246.99578857]
[-60.87654877 -261.14315796]
[-50.30803680 -271.78771973]
[-36.19675446 -276.87414551]
[-21.26737213 -275.42034912]
[-8.40252018 -267.70700073]
[-0.08574180 -255.22227478]
[-0.30906951 -270.22061157]
[-0.53239721 -285.21893311]
[-0.75572497 -300.21728516]
[-14.44115448 -307.07058716]
[-23.36469841 -319.50555420]
[-25.47579193 -334.66476440]
[-20.28931999 -349.06475830]
[-8.99709797 -359.39645386]
[5.80600643 -363.28576660]
[20.71834755 -359.83892822]
[32.31317520 -349.84802246]
[37.92609024 -335.60885620]
[36.26728058 -320.39349365]
[27.71792793 -307.69833374]
[14.24261284 -300.44061279]
[14.46594048 -285.44226074]
[14.68926811 -270.44393921]
[14.91259575 -255.44560242]
[16.47311783 -240.52699280]
[19.35839081 -225.80709839]
[22.24366379 -211.08720398]
[25.12893677 -196.36732483]
[28.01420975 -181.64743042]
[30.89948082 -166.92753601]
[33.78475571 -152.20764160]
[36.77952957 -137.50964355]
[39.88364029 -122.83433533]
[42.98774719 -108.15903473]
[53.19135284 -97.30842590]
[48.47735596 -82.20581818]
[51.58146667 -67.53051758]
[55.76847839 -53.12673187]
[61.01519394 -39.07426071]
[66.26191711 -25.02179146]
[71.50862885 -10.96931934]
[76.75534821 3.08315158]
[82.00206757 17.13562202]
[84.49343872 18.42061424]
[86.62592316 20.76989746]
[87.99159241 24.05171776]
[88.23771667 27.98922348]
[87.11544037 32.18379974]
[91.51644135 46.52364731]
[95.91743469 60.86349106]
[100.31843567 75.20333862]
[104.71943665 89.54319000]
[109.62580872 75.36829376]
[120.89732361 65.47118378]
[135.58764648 62.43892670]
[149.85675049 67.06415558]
[159.97471619 78.13784027]
[163.29676819 92.76535034]
[158.95448303 107.12309265]
[148.08296204 117.45797729]
[133.52397156 121.06850433]
[119.08320618 117.01087952]
[108.53588867 106.34652710]
[110.76100922 121.18057251]
[112.98612213 136.01461792]
[115.21124268 150.84866333]
[119.57904053 158.87113953]
[117.35735321 165.91996765]
[119.36136627 180.78549194]
[133.93849182 181.76742554]
[148.03697205 185.58111572]
[161.11236572 192.07727051]
[172.66017151 201.00303650]
[182.23519897 212.01188660]
[189.46881104 224.67701721]
[194.08311462 238.50791931]
[195.90161133 252.96939087]
[194.85591125 267.50219727]
[190.98838806 281.54473877]
[184.45042419 294.55477905]
[175.49644470 306.03030396]
[164.47407532 315.52896118]
[151.81065369 322.68505859]
[137.99659729 327.22369385]
[139.77906799 342.11740112]
[141.56152344 357.01110840]
[143.34399414 371.90484619]
[145.12646484 386.79855347]
[146.90892029 401.69226074]
[160.85658264 412.25079346]
[162.81407166 429.29434204]
[152.05532837 442.22061157]
[154.05934143 457.08615112]
[156.06335449 471.95166016]
[158.06736755 486.81719971]
[170.35165405 496.39498901]
[172.17224121 511.49929810]
[162.96557617 523.15148926]
[164.96958923 538.01696777]
[166.97360229 552.88250732]
[168.97761536 567.74804688]
[170.98162842 582.61358643]
[172.98564148 597.47912598]
[187.98951721 598.83233643]
[202.31594849 603.49078369]
[215.24630737 611.22082520]
[226.13201904 621.63470459]
[234.42704773 634.21008301]
[239.71534729 648.31616211]
[241.73162842 663.24542236]
[240.37477112 678.24896240]
[235.71284485 692.57427979]
[227.97966003 705.50274658]
[217.56314087 716.38592529]
[204.98574829 724.67791748]
[190.87838745 729.96282959]
[175.94865417 731.97546387]
[160.94541931 730.61499023]
[146.62126160 725.94958496]
[133.69464111 718.21325684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 193]
[10 192]
[11 191]
[12 190]
[13 189]
[14 188]
[17 185]
[18 184]
[19 183]
[20 182]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[43 159]
[44 158]
[45 156]
[46 155]
[47 154]
[48 153]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[70 127]
[71 126]
[73 124]
[74 123]
[75 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
