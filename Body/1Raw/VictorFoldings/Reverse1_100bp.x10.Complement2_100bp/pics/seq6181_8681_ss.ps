%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[24.78651047 345.84167480]
[32.53186417 358.72061157]
[38.27111053 372.61013794]
[41.87602615 387.19992065]
[43.26608276 402.16406250]
[42.41022110 417.16824341]
[39.32756424 431.87725830]
[34.08697891 445.96249390]
[26.80554199 459.10928345]
[17.64592171 471.02395630]
[6.81274939 481.44027710]
[-5.45195818 490.12557983]
[-18.87420273 496.88583374]
[-33.15412903 501.57000732]
[-47.97271347 504.07342529]
[-62.99890518 504.34020996]
[-77.89701843 502.36437988]
[-92.33421326 498.19006348]
[-105.98796844 491.91052246]
[-118.55325317 483.66604614]
[-129.74934387 473.64080811]
[-139.32612610 462.05880737]
[-147.06964111 449.17874146]
[-152.80691528 435.28842163]
[-156.40974426 420.69812012]
[-157.79766846 405.73376465]
[-156.93968201 390.72973633]
[-153.85491943 376.02114868]
[-148.61233521 361.93667603]
[-141.32902527 348.79089355]
[-132.16770935 336.87756348]
[-121.33305359 326.46276855]
[-109.06710815 317.77920532]
[-95.64389801 311.02084351]
[-81.36330414 306.33871460]
[-66.54436493 303.83740234]
[-51.51813507 303.57275391]
[-36.62030411 305.55072021]
[-22.18370056 309.72711182]
[-8.53084087 316.00860596]
[-0.30203262 303.46719360]
[7.92677546 290.92578125]
[8.43968868 276.04000854]
[22.47939110 268.74636841]
[30.70819855 256.20495605]
[38.93700790 243.66357422]
[46.97817993 231.00103760]
[54.82993698 218.22019958]
[62.68169022 205.43936157]
[68.55065155 191.63517761]
[72.30695343 177.11312866]
[76.06325531 162.59106445]
[79.81955719 148.06900024]
[68.05532837 141.19972229]
[58.47237015 131.51722717]
[51.72502899 119.68264771]
[48.27402496 106.50408936]
[48.35500717 92.88140869]
[51.96244431 79.74481201]
[58.85000992 67.99128723]
[68.54740143 58.42339706]
[80.39246368 51.69446945]
[93.57637787 48.26396942]
[107.19891357 48.36614227]
[111.38592529 33.96236038]
[115.57293701 19.55857658]
[119.75994110 5.15479517]
[123.94695282 -9.24898720]
[128.13397217 -23.65276909]
[132.21363831 -38.08732224]
[136.18572998 -52.55184555]
[140.15782166 -67.01637268]
[144.12992859 -81.48089600]
[148.10202026 -95.94541931]
[150.98728943 -110.66530609]
[152.76976013 -125.55902863]
[150.91989136 -129.48738098]
[150.46232605 -133.40594482]
[151.22300720 -136.87823486]
[152.90403748 -139.56909180]
[155.12738037 -141.27639771]
[157.79316711 -156.03761292]
[160.45896912 -170.79882812]
[163.12475586 -185.56005859]
[165.79055786 -200.32127380]
[168.45634460 -215.08248901]
[163.29478455 -230.03804016]
[173.17080688 -241.18763733]
[175.83659363 -255.94886780]
[178.50239563 -270.71008301]
[181.16818237 -285.47128296]
[166.94146729 -290.31463623]
[153.59555054 -297.22436523]
[141.42860413 -306.04608154]
[130.71243286 -316.58276367]
[121.68643951 -328.59896851]
[114.55226898 -341.82626343]
[109.46930695 -355.96914673]
[106.55110168 -370.71166992]
[105.86285400 -385.72445679]
[107.41993713 -400.67211914]
[111.18756104 -415.22076416]
[117.08155823 -429.04531860]
[124.97025299 -441.83697510]
[134.67741394 -453.30990601]
[145.98617554 -463.20788574]
[158.64389038 -471.30972290]
[172.36779785 -477.43441772]
[186.85128784 -481.44519043]
[201.77078247 -483.25241089]
[216.79299927 -482.81570435]
[231.58233643 -480.14483643]
[245.80836487 -475.29946899]
[259.15328979 -468.38784790]
[271.31900024 -459.56439209]
[282.03366089 -449.02618408]
[291.05792236 -437.00869751]
[298.19021606 -423.78039551]
[303.27117920 -409.63677979]
[306.18725586 -394.89385986]
[306.87338257 -379.88098145]
[305.31417847 -364.93350220]
[301.54446411 -350.38540649]
[295.64849854 -336.56170654]
[287.75799561 -323.77117920]
[278.04919434 -312.29959106]
[266.73901367 -302.40325928]
[254.08015442 -294.30322266]
[240.35537720 -288.18045044]
[225.87132263 -284.17175293]
[210.95155334 -282.36666870]
[195.92939758 -282.80551147]
[193.26361084 -268.04428101]
[190.59780884 -253.28306580]
[187.93202209 -238.52185059]
[193.28425598 -224.62211609]
[183.21757507 -212.41668701]
[180.55177307 -197.65547180]
[177.88597107 -182.89425659]
[175.22018433 -168.13304138]
[172.55438232 -153.37182617]
[169.88859558 -138.61061096]
[167.66346741 -123.77655792]
[165.88101196 -108.88284302]
[176.10688782 -119.85697174]
[190.42057800 -124.34231567]
[205.08050537 -121.16642761]
[216.25462341 -111.15946960]
[221.02201843 -96.93724060]
[218.13652039 -82.21739197]
[208.35240173 -70.84765625]
[194.22717285 -65.80006409]
[179.45317078 -68.39403534]
[167.89225769 -77.95151520]
[162.56654358 -91.97332001]
[158.59445190 -77.50879669]
[154.62234497 -63.04427338]
[150.65025330 -48.57975006]
[146.67816162 -34.11522675]
[147.93820190 -26.83277512]
[142.53775024 -19.46575737]
[138.35073853 -5.06197548]
[134.16372681 9.34180641]
[129.97671509 23.74558830]
[125.78970337 38.14937210]
[121.60269165 52.55315399]
[135.18870544 61.53397369]
[145.34068298 74.26865387]
[151.06791687 89.51441956]
[151.81149292 105.78346252]
[147.49885559 121.48810577]
[138.55085754 135.09574890]
[125.84071350 145.27844238]
[110.60881805 151.04246521]
[94.34161377 151.82530212]
[90.58531189 166.34736633]
[86.82901001 180.86943054]
[83.07270813 195.39147949]
[93.03071594 184.17372131]
[105.71509552 176.16706848]
[120.12552643 172.00299072]
[135.12551880 172.00984192]
[149.53213501 176.18711853]
[162.20918274 184.20536804]
[172.15692139 195.43223572]
[178.59082031 208.98233032]
[181.00346375 223.78701782]
[179.20460510 238.67877197]
[173.33609009 252.48313904]
[163.86074829 264.11145020]
[151.52583313 272.64666748]
[137.30413818 277.41564941]
[122.31723022 278.04229736]
[107.74704742 274.47720337]
[94.74266052 267.00152588]
[84.32965088 256.20480347]
[77.32921600 242.93852234]
[74.29345703 228.24893188]
[75.46253204 213.29112244]
[67.61077881 226.07196045]
[59.75902176 238.85279846]
[59.19720840 245.44035339]
[55.88944244 250.06158447]
[51.47840881 251.89237976]
[43.24959946 264.43377686]
[35.02079010 276.97518921]
[33.91930008 292.75799561]
[20.46817589 299.15460205]
[12.23936749 311.69598389]
[4.01056004 324.23739624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 210]
[41 209]
[42 208]
[44 206]
[45 205]
[46 204]
[47 201]
[48 200]
[49 199]
[50 178]
[51 177]
[52 176]
[53 175]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 144]
[76 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[88 135]
[89 134]
[90 133]
[91 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
