%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[41.45066833 315.41128540]
[39.49742508 330.29254150]
[36.30579376 344.95812988]
[31.89815903 359.30523682]
[26.30543900 373.23318481]
[19.56686211 386.64431763]
[11.72969723 399.44451904]
[2.84891629 411.54403687]
[-7.01318741 422.85800171]
[-17.78743744 433.30700684]
[-29.39825821 442.81781006]
[-41.76420593 451.32369995]
[-54.79854584 458.76495361]
[-68.40984344 465.08944702]
[-82.50262451 470.25277710]
[-96.97804260 474.21875000]
[-111.73455811 476.95950317]
[-126.66866302 478.45584106]
[-141.67561340 478.69729614]
[-156.65011597 477.68212891]
[-171.48716736 475.41748047]
[-186.08267212 471.91921997]
[-200.33425903 467.21191406]
[-214.14196777 461.32855225]
[-227.40893555 454.31045532]
[-240.04209900 446.20675659]
[-251.95286560 437.07440186]
[-263.05767822 426.97735596]
[-273.27862549 415.98654175]
[-282.54403687 404.17895508]
[-290.78890991 391.63748169]
[-297.95541382 378.45007324]
[-303.99328613 364.70922852]
[-308.86016846 350.51135254]
[-312.52191162 335.95599365]
[-314.95285034 321.14529419]
[-316.13595581 306.18310547]
[-316.06286621 291.17440796]
[-314.73413086 276.22445679]
[-312.15905762 261.43814087]
[-308.35574341 246.91912842]
[-303.35083008 232.76931763]
[-297.17941284 219.08792114]
[-289.88482666 205.97093201]
[-281.51818848 193.51034546]
[-272.13824463 181.79357910]
[-261.81072998 170.90278625]
[-250.60812378 160.91439819]
[-238.60899353 151.89843750]
[-225.89750671 143.91818237]
[-212.56282043 137.02958679]
[-198.69847107 131.28099060]
[-184.40171814 126.71269226]
[-169.77282715 123.35675049]
[-154.91442871 121.23669434]
[-139.93074036 120.36740875]
[-124.92687225 120.75498962]
[-110.00804901 122.39670563]
[-95.27892303 125.28105164]
[-80.84281158 129.38778687]
[-66.80097961 134.68811035]
[-53.25191879 141.14485168]
[-40.29066467 148.71270752]
[-28.00813866 157.33860779]
[-16.49048996 166.96203613]
[-5.81851101 177.51548767]
[5.58395147 167.76951599]
[16.98641396 158.02355957]
[28.38887596 148.27758789]
[29.64827538 143.67074585]
[33.81503296 139.80615234]
[40.27899170 138.41735840]
[51.96657562 129.01519775]
[63.65415573 119.61305237]
[75.34173584 110.21089935]
[87.02931976 100.80874634]
[98.43177795 91.06278229]
[109.53901672 80.98164368]
[120.64624786 70.90050507]
[122.04851532 58.07878876]
[131.50729370 49.91085052]
[143.59541321 50.36259842]
[154.85150146 40.44794464]
[166.10760498 30.53329468]
[177.06350708 20.28790283]
[187.70951843 9.72085571]
[198.35552979 -0.84619218]
[209.00154114 -11.41323948]
[219.64755249 -21.98028755]
[209.87176514 -33.36588669]
[200.94303894 -45.42721176]
[192.90789795 -58.10137177]
[185.80825806 -71.32229614]
[179.68110657 -85.02104950]
[174.55842590 -99.12622070]
[170.46688843 -113.56426239]
[167.42784119 -128.25990295]
[165.45712280 -143.13653564]
[164.56501770 -158.11657715]
[164.75616455 -173.12194824]
[166.02957153 -188.07441711]
[168.37860107 -202.89601135]
[171.79101562 -217.50947571]
[176.24899292 -231.83860779]
[181.72933960 -245.80871582]
[188.20343018 -259.34695435]
[195.63755798 -272.38272095]
[203.99293518 -284.84808350]
[213.22601318 -296.67807007]
[223.28865051 -307.81094360]
[234.12837219 -318.18872070]
[245.68869019 -327.75723267]
[257.90933228 -336.46667480]
[270.72653198 -344.27157593]
[284.07354736 -351.13125610]
[297.88073730 -357.00997925]
[312.07614136 -361.87704468]
[326.58572388 -365.70715332]
[341.33386230 -368.48025513]
[356.24365234 -370.18194580]
[371.23736572 -370.80334473]
[386.23684692 -370.34118652]
[401.16387939 -368.79791260]
[415.94061279 -366.18154907]
[430.49005127 -362.50576782]
[444.73632812 -357.78967285]
[458.60516357 -352.05792236]
[472.02426147 -345.34033203]
[484.92364502 -337.67196655]
[497.23605347 -329.09280396]
[508.89733887 -319.64755249]
[519.84661865 -309.38546753]
[530.02691650 -298.36007690]
[539.38507080 -286.62881470]
[547.87237549 -274.25286865]
[555.44445801 -261.29675293]
[562.06195068 -247.82803345]
[567.69036865 -233.91691589]
[572.30023193 -219.63592529]
[575.86761475 -205.05952454]
[578.37390137 -190.26370239]
[579.80603027 -175.32560730]
[580.15649414 -160.32310486]
[579.42346191 -145.33442688]
[577.61083984 -130.43771362]
[574.72802734 -115.71063232]
[570.79003906 -101.22995758]
[565.81738281 -87.07118988]
[559.83605957 -73.30814362]
[552.87719727 -60.01257706]
[544.97711182 -47.25381088]
[536.17694092 -35.09835815]
[526.52258301 -23.60959816]
[516.06445312 -12.84742355]
[504.85693359 -2.86794591]
[492.95858765 6.27680588]
[480.43136597 14.53915501]
[467.34057617 21.87602615]
[453.75454712 28.24916458]
[439.74401855 33.62534714]
[425.38211060 37.97654343]
[410.74365234 41.28006744]
[395.90496826 43.51869202]
[380.94342041 44.68075562]
[365.93704224 44.76019287]
[350.96405029 43.75658798]
[336.10250854 41.67517853]
[321.42990112 38.52681351]
[307.02273560 34.32790756]
[292.95608521 29.10035133]
[279.30331421 22.87140083]
[266.13562012 15.67352867]
[253.52162170 7.54426432]
[241.52709961 -1.47401071]
[230.21459961 -11.33427906]
[219.56858826 -0.76723117]
[208.92257690 9.79981613]
[198.27656555 20.36686516]
[187.63055420 30.93391228]
[187.48527527 33.73338318]
[186.22232056 36.64397812]
[183.79383850 39.23971558]
[180.30688477 41.08515167]
[176.02224731 41.78939056]
[164.76615906 51.70404053]
[153.51005554 61.61869431]
[148.80947876 78.52642822]
[130.72738647 82.00773621]
[119.62015533 92.08887482]
[108.51291656 102.17001343]
[108.10799408 105.19087219]
[106.59496307 108.13114929]
[104.00153351 110.58014679]
[100.50679016 112.14315796]
[96.43146515 112.49633026]
[84.74388885 121.89848328]
[73.05630493 131.30062866]
[61.36872482 140.70278931]
[49.68114471 150.10493469]
[38.13484192 159.68005371]
[26.73237991 169.42602539]
[15.32991695 179.17198181]
[3.92745471 188.91795349]
[12.69058609 201.10295105]
[20.40336227 213.97848511]
[27.01168060 227.45426941]
[32.46919250 241.43576050]
[36.73760986 255.82489014]
[39.78699493 270.52075195]
[41.59596252 285.42019653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 203]
[67 202]
[68 201]
[69 200]
[72 199]
[73 198]
[74 197]
[75 196]
[76 195]
[77 190]
[78 189]
[79 188]
[82 186]
[83 185]
[84 184]
[85 179]
[86 178]
[87 177]
[88 176]
[89 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
