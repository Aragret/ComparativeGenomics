%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[74.79387665 810.75128174]
[59.81402969 809.90887451]
[44.89952469 808.27703857]
[30.09191895 805.86041260]
[15.43249226 802.66558838]
[0.96210021 798.70166016]
[-13.27892494 793.97949219]
[-27.25089073 788.51232910]
[-40.91485596 782.31549072]
[-54.23273468 775.40606689]
[-67.16740417 767.80346680]
[-79.68282318 759.52880859]
[-91.74410248 750.60522461]
[-103.31761932 741.05749512]
[-114.37112427 730.91229248]
[-124.87380981 720.19787598]
[-134.79640198 708.94409180]
[-144.11123657 697.18231201]
[-152.79235840 684.94531250]
[-160.81556702 672.26727295]
[-168.15850830 659.18341064]
[-174.80072021 645.73028564]
[-180.72366333 631.94537354]
[-185.91085815 617.86706543]
[-190.34783936 603.53466797]
[-194.02223206 588.98803711]
[-196.92379761 574.26776123]
[-199.04444885 559.41485596]
[-200.37828064 544.47076416]
[-200.92156982 529.47711182]
[-200.67280579 514.47564697]
[-199.63267517 499.50823975]
[-197.80409241 484.61654663]
[-195.19213867 469.84216309]
[-191.80409241 455.22619629]
[-187.64941406 440.80938721]
[-182.73965454 426.63195801]
[-177.08853149 412.73336792]
[-170.71177673 399.15243530]
[-163.62716675 385.92694092]
[-155.85446167 373.09375000]
[-147.41529846 360.68869019]
[-138.33320618 348.74627686]
[-128.63351440 337.29980469]
[-118.34325409 326.38122559]
[-107.49108887 316.02090454]
[-96.10728455 306.24777222]
[-84.22355652 297.08901978]
[-71.87303925 288.57022095]
[-59.09014511 280.71508789]
[-45.91050720 273.54553223]
[-32.37086105 267.08151245]
[-18.50894356 261.34109497]
[-4.36338997 256.34020996]
[10.02637386 252.09284973]
[24.62024117 248.61083984]
[39.37753677 245.90386963]
[54.25712585 243.97950745]
[69.21753693 242.84309387]
[84.21707916 242.49780273]
[84.66368103 227.50445557]
[85.11029053 212.51110840]
[85.55689240 197.51776123]
[83.41814423 194.71453857]
[82.53089905 190.73611450]
[83.43272400 186.18199158]
[86.37311554 181.86907959]
[87.48876190 166.91062927]
[88.60441589 151.95216370]
[89.72006226 136.99371338]
[90.83570862 122.03526306]
[91.95135498 107.07681274]
[90.94709778 92.11046600]
[87.84298706 77.43516541]
[84.73887634 62.75986099]
[81.63476562 48.08456039]
[78.53065491 33.40925598]
[75.42654419 18.73395348]
[72.32244110 4.05865145]
[61.89680481 -7.84163284]
[66.83283234 -21.89456558]
[62.70513916 -27.05922508]
[61.92277145 -32.68815994]
[63.86164093 -37.05277252]
[61.19584656 -51.81398773]
[58.53005219 -66.57520294]
[55.86425781 -81.33642578]
[53.19845963 -96.09764099]
[38.16119766 -97.33986664]
[23.95815659 -102.43260956]
[11.55772400 -111.02864075]
[1.80538237 -122.54186249]
[-4.63393736 -136.18728638]
[-7.32119131 -151.03454590]
[-6.07315874 -166.07131958]
[-0.97493207 -180.27239990]
[7.62588263 -192.66950989]
[19.14286804 -202.41740417]
[32.79077530 -208.85145569]
[47.63907242 -211.53297424]
[62.67536926 -210.27914429]
[76.87447357 -205.17543030]
[89.26826477 -196.56982422]
[99.01171112 -185.04907227]
[105.44049072 -171.39868164]
[108.11627960 -156.54936218]
[106.85663605 -141.51354980]
[101.74744415 -127.31641388]
[93.13706207 -114.92594147]
[81.61254883 -105.18694305]
[67.95967865 -98.76343536]
[70.62547302 -84.00222015]
[73.29126740 -69.24100494]
[75.95706177 -54.47978592]
[78.62285614 -39.71856689]
[81.50813293 -24.99867630]
[91.71173859 -14.14806747]
[86.99774170 0.95454156]
[90.10185242 15.62984371]
[93.20596313 30.30514717]
[96.31007385 44.98044968]
[99.41417694 59.65575027]
[102.51828766 74.33105469]
[105.62239838 89.00635529]
[109.62712860 74.55083466]
[117.66414642 61.88566971]
[129.03816223 52.10652924]
[142.76522827 46.05940628]
[157.65780640 44.26743698]
[172.42753601 46.88564301]
[185.79670715 53.68752670]
[196.60871887 64.08465576]
[203.92825317 77.17757416]
[207.12207031 91.83361053]
[205.91390991 106.78487396]
[200.40826416 120.73793030]
[191.08142090 132.48570251]
[178.74026489 141.01188660]
[164.45242310 145.57888794]
[149.45393372 145.79161072]
[135.04231262 141.63165283]
[122.46431732 133.45889282]
[112.80806732 121.98036194]
[106.90981293 108.19245911]
[105.79416656 123.15090942]
[104.67851257 138.10935974]
[103.56286621 153.06782532]
[102.44721985 168.02627563]
[101.33156586 182.98472595]
[100.55024719 197.96437073]
[100.10363770 212.95771790]
[99.65703583 227.95106506]
[99.21042633 242.94441223]
[114.16281891 244.18186951]
[129.02906799 246.20672607]
[143.76774597 249.01333618]
[158.33775330 252.59387207]
[172.69848633 256.93835449]
[186.80993652 262.03469849]
[200.63275146 267.86865234]
[214.12841797 274.42398071]
[227.25930786 281.68243408]
[239.98884583 289.62374878]
[252.28152466 298.22579956]
[264.10308838 307.46459961]
[275.42062378 317.31445312]
[286.20254517 327.74783325]
[296.41879272 338.73571777]
[306.04092407 350.24743652]
[315.04211426 362.25094604]
[323.39727783 374.71273804]
[331.08312988 387.59814453]
[338.07821655 400.87118530]
[344.36306763 414.49493408]
[349.92016602 428.43136597]
[354.73400879 442.64163208]
[358.79119873 457.08618164]
[362.08041382 471.72470093]
[364.59249878 486.51641846]
[366.32043457 501.42010498]
[367.25939941 516.39422607]
[367.40679932 531.39697266]
[366.76223755 546.38665771]
[365.32745361 561.32141113]
[363.10650635 576.15960693]
[360.10556030 590.85992432]
[356.33297729 605.38140869]
[351.79925537 619.68353271]
[346.51705933 633.72650146]
[340.50112915 647.47106934]
[333.76818848 660.87902832]
[326.33700562 673.91290283]
[318.22833252 686.53649902]
[309.46472168 698.71453857]
[300.07061768 710.41308594]
[290.07223511 721.59960938]
[279.49740601 732.24279785]
[268.37561035 742.31311035]
[256.73782349 751.78247070]
[244.61654663 760.62438965]
[232.04551697 768.81427002]
[219.05976868 776.32928467]
[205.69551086 783.14855957]
[191.98999023 789.25299072]
[177.98139954 794.62561035]
[163.70880127 799.25140381]
[149.21195984 803.11755371]
[134.53128052 806.21319580]
[119.70768738 808.52978516]
[104.78249359 810.06079102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 153]
[61 152]
[62 151]
[63 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[81 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
