%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-33.47827911 582.08984375]
[-25.72709846 594.99768066]
[-20.82936478 609.23516846]
[-18.99919128 624.17987061]
[-20.31658363 639.17846680]
[-24.72394943 653.57531738]
[-32.02862167 666.74102783]
[-41.91126633 678.10003662]
[-53.93985748 687.15576172]
[-67.58856201 693.51239014]
[-82.26071167 696.89202881]
[-97.31490326 697.14685059]
[-112.09304047 694.26580811]
[-125.94907379 688.37475586]
[-138.27728271 679.73132324]
[-148.53872681 668.71331787]
[-156.28483582 655.80242920]
[-161.17697144 641.56304932]
[-163.00126648 626.61761475]
[-161.67796326 611.61950684]
[-157.26493835 597.22442627]
[-149.95509338 584.06158447]
[-140.06797791 572.70648193]
[-128.03582764 563.65545654]
[-114.38462067 557.30419922]
[-99.71114349 553.93041992]
[-84.65685272 553.68145752]
[-69.87985229 556.56835938]
[-64.01089478 542.76416016]
[-58.14192963 528.95996094]
[-52.27296829 515.15582275]
[-46.40401077 501.35162354]
[-40.53504944 487.54745483]
[-34.66608810 473.74328613]
[-28.79712677 459.93911743]
[-23.55040932 445.88662720]
[-18.93639946 431.61389160]
[-14.32238960 417.34115601]
[-9.70838070 403.06842041]
[-5.09437132 388.79568481]
[-9.68790817 371.85858154]
[4.08033180 359.63085938]
[8.48132992 345.29101562]
[12.88232803 330.95117188]
[17.28332520 316.61129761]
[15.96323586 313.34179688]
[16.16117859 309.27044678]
[18.23677063 305.11770630]
[22.21427727 301.73739624]
[19.19998932 287.15100098]
[31.12204552 276.75027466]
[36.15896225 262.62124634]
[33.14467239 248.03483582]
[45.06673050 237.63410950]
[50.10364532 223.50506592]
[55.14056015 209.37603760]
[60.17747879 195.24700928]
[65.21439362 181.11798096]
[70.04039001 166.91552734]
[74.65440369 152.64279175]
[79.26840973 138.37005615]
[74.04167175 127.46099091]
[77.76887512 115.53237915]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[93.93910217 70.47658539]
[105.35980225 60.91536713]
[110.18579865 46.71290970]
[115.01179504 32.51045609]
[119.83779144 18.30800056]
[116.95185852 2.75223160]
[128.37255859 -6.80899000]
[123.38192749 -18.70253754]
[127.69390106 -30.43244171]
[138.48495483 -35.89865875]
[143.52188110 -50.02769089]
[148.24201965 -64.26567841]
[152.64300537 -78.60552979]
[157.04400635 -92.94537354]
[161.44500732 -107.28521729]
[158.09719849 -122.74816895]
[169.22814941 -132.64518738]
[173.62915039 -146.98503113]
[177.70881653 -161.41958618]
[181.46511841 -175.94165039]
[185.22142029 -190.46369934]
[179.89071655 -208.08940125]
[192.67041016 -220.11630249]
[196.21008301 -234.69267273]
[199.74975586 -249.26904297]
[202.85386658 -263.94433594]
[205.51965332 -278.70556641]
[208.18545532 -293.46679688]
[210.85125732 -308.22799683]
[213.51704407 -322.98922729]
[216.18284607 -337.75042725]
[218.84863281 -352.51165771]
[221.51443481 -367.27285767]
[207.74797058 -373.41680908]
[195.85229492 -382.67727661]
[186.51902771 -394.51593018]
[180.29078674 -408.24444580]
[177.52966309 -423.06469727]
[178.39619446 -438.11502075]
[182.83999634 -452.52044678]
[190.60270691 -465.44345093]
[201.23303223 -476.13265991]
[214.11291504 -483.96670532]
[228.49354553 -488.49005127]
[243.53886414 -489.43975830]
[258.37414551 -486.76058960]
[272.13687134 -480.60830688]
[284.02694702 -471.34060669]
[293.35302734 -459.49630737]
[299.57293701 -445.76400757]
[302.32507324 -430.94207764]
[301.44943237 -415.89227295]
[296.99688721 -401.48956299]
[289.22634888 -388.57128906]
[278.58953857 -377.88848877]
[265.70492554 -370.06228638]
[251.32153320 -365.54763794]
[236.27565002 -364.60708618]
[233.60984802 -349.84585571]
[230.94406128 -335.08462524]
[228.27825928 -320.32342529]
[225.61247253 -305.56219482]
[222.94667053 -290.80099487]
[220.28088379 -276.03976440]
[217.61508179 -261.27856445]
[219.10079956 -258.90142822]
[219.73442078 -255.79252625]
[219.23251343 -252.27351379]
[217.43321228 -248.76252747]
[214.32612610 -245.72937012]
[210.78645325 -231.15299988]
[207.24678040 -216.57662964]
[213.27041626 -206.08651733]
[210.44075012 -193.91372681]
[199.74348450 -186.70739746]
[195.98718262 -172.18534851]
[192.23088074 -157.66328430]
[193.69564819 -154.45597839]
[193.67968750 -150.37985229]
[191.79159546 -146.13858032]
[187.96899414 -142.58403015]
[183.56800842 -128.24418640]
[187.23060608 -113.80692291]
[175.78485107 -102.88422394]
[171.38385010 -88.54437256]
[166.98286438 -74.20452881]
[162.58186340 -59.86468124]
[163.90194702 -56.59516907]
[163.70401001 -52.52382278]
[161.62841797 -48.37108612]
[157.65090942 -44.99077225]
[152.61399841 -30.86174393]
[156.70121765 -13.79535675]
[142.57501221 -1.98299217]
[145.80613708 12.55692196]
[134.04025269 23.13399696]
[129.21424866 37.33645248]
[124.38825226 51.53890991]
[119.56225586 65.74136353]
[122.79338074 80.28128052]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[107.17996216 131.94099426]
[93.54114532 142.98406982]
[88.92713165 157.25680542]
[84.31312561 171.52954102]
[85.32170105 178.06362915]
[83.19785309 183.33489990]
[79.34342194 186.15490723]
[74.30651093 200.28393555]
[69.26959229 214.41296387]
[64.23267365 228.54199219]
[59.19575882 242.67102051]
[61.84977341 258.26803589]
[50.28799057 267.65814209]
[45.25107574 281.78717041]
[47.90509033 297.38418579]
[36.34330750 306.77432251]
[31.62317276 321.01229858]
[27.22217560 335.35214233]
[22.82117653 349.69201660]
[18.42017937 364.03186035]
[23.76270676 375.77154541]
[19.80188942 387.62463379]
[9.17836189 393.40969849]
[4.56435299 407.68243408]
[-0.04965651 421.95516968]
[-4.66366577 436.22790527]
[-9.27767467 450.50064087]
[4.53556633 444.65304565]
[18.48906898 450.15756226]
[24.58963394 463.86096191]
[19.34257889 477.91329956]
[5.75365591 484.26477051]
[-8.39278221 479.27697754]
[-14.99294949 465.80807495]
[-20.86190987 479.61224365]
[-26.73087120 493.41641235]
[-32.59983063 507.22058105]
[-38.46879196 521.02478027]
[-44.33775330 534.82897949]
[-50.20671463 548.63311768]
[-56.07567596 562.43731689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[42 189]
[43 188]
[44 187]
[45 186]
[49 185]
[51 183]
[52 182]
[54 180]
[55 179]
[56 178]
[57 177]
[58 176]
[59 173]
[60 172]
[61 171]
[64 169]
[66 167]
[68 165]
[69 164]
[70 163]
[71 162]
[73 160]
[76 158]
[77 157]
[78 153]
[79 152]
[80 151]
[81 150]
[83 148]
[84 147]
[85 143]
[86 142]
[87 141]
[89 138]
[90 137]
[91 136]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
