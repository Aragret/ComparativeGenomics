%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[137.37559509 918.09149170]
[122.45544434 916.52807617]
[107.60611725 914.39428711]
[92.84941864 911.69335938]
[78.20700836 908.42913818]
[63.70036316 904.60644531]
[49.35078430 900.23095703]
[35.17932892 895.30908203]
[21.20679665 889.84796143]
[7.45369339 883.85565186]
[-6.05979681 877.34100342]
[-19.31384087 870.31347656]
[-32.28898621 862.78350830]
[-44.96619034 854.76202393]
[-57.32684708 846.26086426]
[-69.35281372 837.29254150]
[-81.02644348 827.87011719]
[-92.33060455 818.00750732]
[-103.24871063 807.71911621]
[-113.76472473 797.02014160]
[-123.86322021 785.92614746]
[-133.52937317 774.45355225]
[-142.74900818 762.61914062]
[-151.50857544 750.44024658]
[-159.79524231 737.93475342]
[-167.59683228 725.12109375]
[-174.90188599 712.01800537]
[-181.69970703 698.64471436]
[-187.98030090 685.02081299]
[-193.73445129 671.16638184]
[-198.95372009 657.10174561]
[-203.63044739 642.84747314]
[-207.75776672 628.42456055]
[-211.32960510 613.85412598]
[-214.34074402 599.15759277]
[-216.78675842 584.35650635]
[-218.66404724 569.47259521]
[-219.96986389 554.52770996]
[-220.70230103 539.54370117]
[-220.86026001 524.54272461]
[-220.44354248 509.54666138]
[-219.45272827 494.57757568]
[-217.88928223 479.65740967]
[-215.75549316 464.80810547]
[-213.05451965 450.05139160]
[-209.79028320 435.40899658]
[-205.96762085 420.90234375]
[-201.59210205 406.55276489]
[-196.67016602 392.38131714]
[-191.20904541 378.40878296]
[-185.21673584 364.65570068]
[-178.70205688 351.14221191]
[-171.67454529 337.88818359]
[-164.14451599 324.91305542]
[-156.12304688 312.23583984]
[-147.62187195 299.87521362]
[-138.65350342 287.84924316]
[-129.23109436 276.17562866]
[-119.36845398 264.87149048]
[-109.08007050 253.95338440]
[-98.38105011 243.43739319]
[-87.28708649 233.33889771]
[-75.81446838 223.67276001]
[-63.98002625 214.45314026]
[-51.80113220 205.69358826]
[-39.29565811 197.40693665]
[-26.48196030 189.60536194]
[-13.37884331 182.30032349]
[-0.00553840 175.50251770]
[13.61832714 169.22193909]
[27.47275925 163.46780396]
[41.53742218 158.24855042]
[55.79167938 153.57185364]
[70.21460724 149.44454956]
[84.78503418 145.87272644]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[75.60087585 65.17559814]
[73.33137512 50.13219452]
[82.18703461 38.21108246]
[79.74131012 23.41181183]
[77.29558563 8.61254025]
[74.84985352 -6.18673038]
[72.40412903 -20.98600197]
[57.37958908 -22.29522896]
[43.15294266 -27.30055237]
[30.61847878 -35.68733215]
[20.56413078 -46.92836761]
[13.62192345 -60.31704330]
[10.22824669 -75.01172638]
[10.59643269 -90.08870697]
[14.70333481 -104.60022736]
[22.29079056 -117.63407898]
[32.88184738 -128.37094116]
[45.81074142 -136.13589478]
[60.26474762 -140.44082642]
[75.33528137 -141.01512146]
[90.07499695 -137.82267761]
[103.55733490 -131.06417847]
[114.93479156 -121.16447449]
[123.49217224 -108.74585724]
[128.69154358 -94.58897400]
[130.20606995 -79.58374023]
[127.94055939 -64.67340088]
[122.03741455 -50.79522705]
[112.86771393 -38.82161331]
[101.00786591 -29.50523758]
[87.20339966 -23.43172836]
[89.64912415 -8.63245773]
[92.09485626 6.16681290]
[94.54058075 20.96608353]
[96.98630524 35.76535416]
[109.20653534 44.20346451]
[111.89766693 59.17718887]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[129.16476440 138.53852844]
[144.10966492 137.23265076]
[159.09362793 136.50016785]
[174.09463501 136.34214783]
[189.09069824 136.75881958]
[204.05978394 137.74958801]
[218.97994995 139.31297302]
[233.82926941 141.44670105]
[248.58598328 144.14764404]
[263.22839355 147.41181946]
[277.73504639 151.23443604]
[292.08465576 155.60989380]
[306.25610352 160.53178406]
[320.22866821 165.99285889]
[333.98178101 171.98510742]
[347.49526978 178.49975586]
[360.74932861 185.52722168]
[373.72448730 193.05718994]
[386.40173340 201.07862854]
[398.76239014 209.57974243]
[410.78839111 218.54806519]
[422.46203613 227.97044373]
[433.76623535 237.83303833]
[444.68435669 248.12138367]
[455.20037842 258.82037354]
[465.29891968 269.91430664]
[474.96508789 281.38687134]
[484.18475342 293.22128296]
[492.94436646 305.40014648]
[501.23104858 317.90560913]
[509.03268433 330.71926880]
[516.33776855 343.82235718]
[523.13562012 357.19564819]
[529.41625977 370.81948853]
[535.17041016 384.67388916]
[540.38970947 398.73855591]
[545.06646729 412.99279785]
[549.19384766 427.41567993]
[552.76568604 441.98611450]
[555.77685547 456.68264771]
[558.22290039 471.48373413]
[560.10028076 486.36764526]
[561.40612793 501.31256104]
[562.13854980 516.29650879]
[562.29656982 531.29754639]
[561.87988281 546.29357910]
[560.88909912 561.26269531]
[559.32568359 576.18286133]
[557.19195557 591.03216553]
[554.49102783 605.78887939]
[551.22680664 620.43127441]
[547.40417480 634.93792725]
[543.02868652 649.28753662]
[538.10681152 663.45898438]
[532.64569092 677.43151855]
[526.65344238 691.18463135]
[520.13879395 704.69812012]
[513.11126709 717.95214844]
[505.58129883 730.92730713]
[497.55984497 743.60455322]
[489.05871582 755.96520996]
[480.09039307 767.99121094]
[470.66799927 779.66485596]
[460.80538940 790.96899414]
[450.51702881 801.88708496]
[439.81802368 812.40313721]
[428.72409058 822.50164795]
[417.25149536 832.16784668]
[405.41708374 841.38745117]
[393.23818970 850.14703369]
[380.73272705 858.43371582]
[367.91906738 866.23535156]
[354.81594849 873.54040527]
[341.44268799 880.33825684]
[327.81881714 886.61883545]
[313.96441650 892.37304688]
[299.89974976 897.59228516]
[285.64550781 902.26904297]
[271.22259521 906.39636230]
[256.65216064 909.96826172]
[241.95562744 912.97937012]
[227.15454102 915.42541504]
[212.27061462 917.30273438]
[197.32571411 918.60858154]
[182.34176636 919.34100342]
[167.34074402 919.49902344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 124]
[77 123]
[78 122]
[80 120]
[81 119]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
