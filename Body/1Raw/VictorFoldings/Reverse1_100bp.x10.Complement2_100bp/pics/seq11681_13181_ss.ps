%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[76.50938416 614.52770996]
[62.19368744 609.63726807]
[50.09108734 600.56079102]
[41.38727188 588.18750000]
[36.93495178 573.72955322]
[37.17032242 558.60345459]
[42.07032013 544.29101562]
[51.15489578 532.19451904]
[63.53403473 523.49896240]
[77.99495697 519.05633545]
[78.21828461 504.05801392]
[78.44161224 489.05969238]
[78.66493988 474.06134033]
[78.88826752 459.06298828]
[66.47093201 467.47787476]
[52.10516357 463.16226196]
[46.38085938 449.29745483]
[53.51776886 436.10409546]
[68.25482941 433.30783081]
[79.72773743 442.96844482]
[73.15676117 429.60165405]
[82.09439850 416.54678345]
[83.43263245 401.60659790]
[84.77086639 386.66641235]
[86.10910034 371.72625732]
[87.44734192 356.78607178]
[88.34015656 341.81265259]
[88.78675842 326.81930542]
[89.23336792 311.82595825]
[89.56834412 296.82968140]
[89.79167175 281.83135986]
[76.40505219 275.25381470]
[67.16377258 263.46789551]
[63.94292831 248.77819824]
[67.43368530 234.08688354]
[76.99578857 222.32026672]
[90.77420044 215.84596252]
[90.99752808 200.84762573]
[91.22085571 185.84928894]
[91.44418335 170.85095215]
[77.71593475 167.79733276]
[64.85308838 162.11082458]
[53.35517883 154.01222229]
[43.66872025 143.81604004]
[36.16989517 131.91827393]
[31.14991379 118.78096008]
[28.80373192 104.91428375]
[29.22246170 90.85675812]
[32.38984299 77.15431213]
[38.18287277 64.33908081]
[46.37657166 52.90874100]
[56.65274429 43.30719757]
[68.61230469 35.90732193]
[81.79081726 30.99649048]
[95.67647552 28.76541519]
[96.34626007 13.78037739]
[97.01605225 -1.20466161]
[97.68583679 -16.18970108]
[98.35562134 -31.17473984]
[84.98698425 -38.45766830]
[76.14220428 -50.77256775]
[73.53207397 -65.64561462]
[77.62155151 -80.11756134]
[87.54796600 -91.33254242]
[101.30234528 -97.10162354]
[101.97212982 -112.08666229]
[102.64192200 -127.07170105]
[102.86524963 -142.07003784]
[102.64192200 -157.06837463]
[102.41859436 -172.06671143]
[102.19526672 -187.06504822]
[101.97193909 -202.06338501]
[101.63696289 -217.05964661]
[93.15213776 -204.69001770]
[79.66217041 -198.13098145]
[64.69331360 -199.09707642]
[52.15838623 -207.33573914]
[45.33398819 -220.69340515]
[46.00399780 -235.67843628]
[53.99328232 -248.37376404]
[67.21345520 -255.46086121]
[82.20880127 -255.08718872]
[95.05957031 -247.35040283]
[102.40637970 -234.27375793]
[104.18884277 -249.16748047]
[105.97130585 -264.06118774]
[107.75377655 -278.95492554]
[109.53623962 -293.84863281]
[111.31871033 -308.74234009]
[112.99024963 -323.64892578]
[114.55077362 -338.56753540]
[115.22055817 -353.55255127]
[114.99723053 -368.55090332]
[114.77390289 -383.54922485]
[114.55057526 -398.54757690]
[114.32724762 -413.54592896]
[114.10391998 -428.54425049]
[99.86085510 -433.78823853]
[88.47652435 -443.82626343]
[81.49057770 -457.30072021]
[79.84779358 -472.38931274]
[83.77035522 -487.05142212]
[92.72776031 -499.30416870]
[105.50859833 -507.49041748]
[120.38436890 -510.50305176]
[135.34323120 -507.93466187]
[148.36215210 -500.13256836]
[157.68038940 -488.15197754]
[162.03776550 -473.61312866]
[160.84495544 -458.48229980]
[154.26327515 -444.80584717]
[143.18287659 -434.43331909]
[129.10224915 -428.76757812]
[129.32557678 -413.76925659]
[129.54890442 -398.77090454]
[129.77223206 -383.77255249]
[129.99555969 -368.77423096]
[130.21888733 -353.77587891]
[139.92472839 -365.21252441]
[154.47149658 -368.87197876]
[168.43362427 -363.38931274]
[176.60354614 -350.80947876]
[175.93412781 -335.82443237]
[166.67501831 -324.02322388]
[152.27963257 -319.80737305]
[138.11712646 -324.74935913]
[129.46937561 -337.00698853]
[127.90885162 -322.08840942]
[130.33943176 -315.10885620]
[126.21242523 -306.95986938]
[124.42995453 -292.06616211]
[122.64749146 -277.17245483]
[120.86502838 -262.27871704]
[119.08255768 -247.38500977]
[117.30009460 -232.49130249]
[116.63031006 -217.50625610]
[119.97156525 -210.91400146]
[116.97027588 -202.28671265]
[117.19360352 -187.28837585]
[117.41693115 -172.29003906]
[117.64025879 -157.29170227]
[117.86358643 -142.29336548]
[119.77880096 -140.24639893]
[120.99858856 -137.31745911]
[121.18294525 -133.76760864]
[120.09258270 -129.97608948]
[117.62696075 -126.40191650]
[116.95716858 -111.41687775]
[116.28738403 -96.43183899]
[129.47222900 -89.45865631]
[138.35850525 -77.40280151]
[141.14054871 -62.62372208]
[137.21392822 -48.04285049]
[127.30573273 -36.56615067]
[113.34066010 -30.50495338]
[112.67087555 -15.51991558]
[112.00109100 -0.53487641]
[111.33130646 14.45016193]
[110.66151428 29.43520164]
[126.01482391 33.54484558]
[140.07781982 40.95063400]
[152.15295410 51.28524399]
[161.64134216 64.03607941]
[168.07234192 78.57070923]
[171.12699890 94.16822052]
[170.65377808 110.05499268]
[166.67616272 125.44303131]
[159.39144897 139.56912231]
[149.16093445 151.73258972]
[136.49208069 161.33015442]
[122.01322174 167.88575745]
[106.44252014 171.07427979]
[106.21919250 186.07261658]
[105.99586487 201.07095337]
[105.77253723 216.06929016]
[119.35208893 222.95095825]
[128.55960083 234.99705505]
[131.61140442 249.78579712]
[127.95462799 264.37307739]
[118.36653137 275.87863159]
[104.79000854 282.05468750]
[104.56668091 297.05300903]
[107.56797028 305.68029785]
[104.22671509 312.27255249]
[103.78011322 327.26589966]
[103.33350372 342.25924683]
[105.52646637 346.00689697]
[106.33181000 349.86901855]
[105.88393402 353.39532471]
[104.44968414 356.22543335]
[102.38751984 358.12429810]
[101.04928589 373.06448364]
[99.71105194 388.00466919]
[98.37281799 402.94485474]
[97.03458405 417.88504028]
[103.50984192 432.32046509]
[94.66792297 444.30670166]
[93.88660431 459.28631592]
[93.66327667 474.28466797]
[93.43994904 489.28302002]
[93.21662140 504.28134155]
[92.99329376 519.27966309]
[107.31552887 524.15087891]
[119.43028259 533.21112061]
[128.15066528 545.57275391]
[132.62236023 560.02471924]
[132.40725708 575.15118408]
[127.52645111 589.47015381]
[118.45809174 601.57879639]
[106.09062195 610.29089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[20 197]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 186]
[28 185]
[29 184]
[30 182]
[31 181]
[37 175]
[38 174]
[39 173]
[40 172]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[65 149]
[66 148]
[67 147]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 128]
[91 127]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
