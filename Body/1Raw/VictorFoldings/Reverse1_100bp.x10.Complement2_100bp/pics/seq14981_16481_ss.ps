%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCAUCUCUUUACUAGGCAUUAUAUCCGGAGCGGGCUACACAUCCUUCUCCGUCUAUUUCUUAUAACUCCGCGGUAACCGCACUUCCAUCGCCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[175.78773499 553.01635742]
[163.93595886 562.32397461]
[150.25691223 568.64697266]
[135.48828125 571.64434814]
[120.42651367 571.15441895]
[105.88388824 567.20367432]
[92.64465332 560.00512695]
[81.42279053 549.94696045]
[72.82347870 537.57159424]
[67.31047058 523.54650879]
[65.18107605 508.62799072]
[66.55013275 493.62057495]
[71.34380341 479.33361816]
[79.30357361 466.53756714]
[90.00019073 455.92251587]
[102.85678101 448.06094360]
[117.18002319 443.37677002]
[132.19747925 442.12261963]
[134.42259216 427.28857422]
[136.64770508 412.45452881]
[138.87283325 397.62048340]
[141.09794617 382.78643799]
[142.99124146 367.90640259]
[144.55175781 352.98779297]
[146.11228943 338.06918335]
[147.67280579 323.15057373]
[149.23332214 308.23199463]
[150.79385376 293.31338501]
[152.35437012 278.39477539]
[150.68283081 263.48818970]
[145.85684204 249.28573608]
[141.03083801 235.08328247]
[136.20484924 220.88082886]
[131.37884521 206.67837524]
[126.55284882 192.47592163]
[121.72685242 178.27346802]
[116.68993378 164.14443970]
[111.44321442 150.09196472]
[106.09202576 136.07894897]
[100.63667297 122.10614014]
[95.18131256 108.13334656]
[90.97885132 104.99435425]
[88.83425903 99.72425079]
[89.77836609 93.66243744]
[84.74144745 79.53340149]
[70.44094086 67.93266296]
[74.27362061 50.80731964]
[69.02690125 36.75484848]
[63.78018188 22.70237541]
[58.53346252 8.64990520]
[53.28674316 -5.40256643]
[48.04002762 -19.45503807]
[42.79330826 -33.50750732]
[33.77038193 -36.24501419]
[27.11733437 -42.73105240]
[24.23802948 -51.42035294]
[25.65822220 -60.32416153]
[30.93445015 -67.46520233]
[26.32044220 -81.73793030]
[21.70643234 -96.01066589]
[17.09242249 -110.28340149]
[12.47841358 -124.55613708]
[10.27463913 -109.71890259]
[5.25666189 -95.58313751]
[-2.38791776 -82.67730713]
[-12.37330151 -71.48391724]
[-24.32617950 -62.42142487]
[-37.79968262 -55.82864761]
[-52.29009628 -51.95206070]
[-67.25568390 -50.93659210]
[-82.13694763 -52.82020569]
[-96.37754059 -57.53248215]
[-109.44506073 -64.89724731]
[-120.85098267 -74.63916779]
[-130.16888428 -86.39403534]
[-137.05039978 -99.72237396]
[-141.23826599 -114.12590790]
[-142.57591248 -129.06614685]
[-141.01332092 -143.98454285]
[-136.60893250 -158.32334900]
[-129.52740479 -171.54649353]
[-120.03347015 -183.15965271]
[-108.48207855 -192.72862244]
[-95.30507660 -199.89569092]
[-80.99510956 -204.39288330]
[-66.08715820 -206.05209351]
[-51.13856888 -204.81126404]
[-36.70820236 -200.71681213]
[-23.33555222 -193.92179871]
[-11.52056408 -184.68025208]
[-1.70494962 -173.33769226]
[5.74432755 -160.31816101]
[10.54738426 -146.11433411]
[12.55139828 -160.97987366]
[10.39764404 -167.23069763]
[11.55086994 -172.79550171]
[14.84277248 -176.25563049]
[17.28849983 -191.05490112]
[19.73422813 -205.85417175]
[22.17995453 -220.65344238]
[8.49683094 -227.03111267]
[-2.95745945 -236.86482239]
[-11.33293152 -249.42483521]
[-16.00806999 -263.77911377]
[-16.63595009 -278.86251831]
[-13.16997528 -293.55569458]
[-5.86734676 -306.76834106]
[4.73003244 -317.51998901]
[17.83576775 -325.01281738]
[32.47732544 -328.69076538]
[47.56820297 -328.28094482]
[61.98855972 -323.81375122]
[74.66831207 -315.62066650]
[84.66652679 -304.30969238]
[91.24128723 -290.72018433]
[93.90468597 -275.86053467]
[92.45909119 -260.83346558]
[87.01177216 -246.75407410]
[77.96695709 -234.66714478]
[65.99583435 -225.46960449]
[51.98673248 -219.84396362]
[36.97922516 -218.20771790]
[34.53349686 -203.40844727]
[32.08777237 -188.60917664]
[29.64204407 -173.80990601]
[27.41692734 -158.97586060]
[25.41291237 -144.11032104]
[26.75114632 -129.17013550]
[31.36515617 -114.89740753]
[35.97916412 -100.62467957]
[40.59317398 -86.35194397]
[45.20718384 -72.07920837]
[61.67109299 -59.63314438]
[56.84577942 -38.75422668]
[62.09249878 -24.70175552]
[67.33921814 -10.64928436]
[72.58593750 3.40318656]
[77.83264923 17.45565796]
[83.07936859 31.50812912]
[88.32608795 45.56060028]
[99.19734192 50.86555099]
[103.68347168 62.52995682]
[98.87047577 74.49649048]
[103.90739441 88.62551880]
[109.15411377 102.67798615]
[114.60946655 116.65078735]
[120.06482697 130.62358093]
[126.10099792 137.47941589]
[125.49568176 144.84524536]
[130.74240112 158.89772034]
[135.59056091 163.39292908]
[137.19927979 168.84353638]
[135.92930603 173.44746399]
[140.75529480 187.64991760]
[145.58129883 201.85237122]
[150.40730286 216.05484009]
[155.23329163 230.25729370]
[160.05929565 244.45974731]
[164.88528442 258.66220093]
[166.84930420 243.79133606]
[171.72723389 229.60662842]
[179.32476807 216.67304993]
[189.33932495 205.50575256]
[201.37200928 196.54949951]
[214.94358826 190.16104126]
[229.51348877 186.59481812]
[244.50140381 185.99285889]
[259.31036377 188.37916565]
[273.35055542 193.65866089]
[286.06274414 201.62109375]
[296.94061279 211.94929504]
[305.55090332 224.23193359]
[311.55065918 237.97976685]
[314.70092773 252.64521790]
[314.87625122 267.64419556]
[312.06958008 282.37927246]
[306.39279175 296.26358032]
[298.07192993 308.74411011]
[287.43841553 319.32373047]
[274.91580200 327.58108521]
[261.00283813 333.18728638]
[246.25367737 335.91906738]
[231.25578308 335.66757202]
[216.60652161 332.44284058]
[202.88934326 326.37332153]
[190.65061951 317.70074463]
[180.37779236 306.77053833]
[172.48004150 294.01806641]
[167.27297974 279.95529175]
[165.71246338 294.87390137]
[164.15193176 309.79251099]
[162.59141541 324.71112061]
[161.03088379 339.62973022]
[159.47036743 354.54830933]
[157.90983582 369.46691895]
[160.03692627 374.23373413]
[160.11505127 378.87564087]
[158.53488159 382.63305664]
[155.93199158 385.01156616]
[153.70687866 399.84561157]
[151.48175049 414.67962646]
[149.25663757 429.51367188]
[147.03152466 444.34771729]
[161.02008057 449.95278931]
[173.33862305 458.63327026]
[183.32279968 469.92098999]
[190.43420410 483.20724487]
[194.28930664 497.77554321]
[194.68020630 512.84020996]
[191.58584595 527.58880615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 159]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 150]
[38 149]
[39 147]
[40 146]
[41 145]
[44 144]
[45 143]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[93 127]
[94 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
