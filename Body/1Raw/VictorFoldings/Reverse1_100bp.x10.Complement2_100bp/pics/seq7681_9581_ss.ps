%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[174.55519104 541.52789307]
[165.05960083 529.68737793]
[160.48625183 515.21502686]
[161.45365906 500.06814575]
[167.83097839 486.29516602]
[178.75572205 475.75885010]
[192.75042725 469.88409424]
[192.30381775 454.89074707]
[191.85720825 439.89739990]
[191.41061401 424.90405273]
[190.96400452 409.91070557]
[190.07118225 394.93728638]
[188.73295593 379.99710083]
[187.39471436 365.05691528]
[186.05648804 350.11672974]
[184.71824646 335.17654419]
[183.38002014 320.23635864]
[178.87239075 305.92968750]
[171.40464783 292.92071533]
[163.93690491 279.91177368]
[156.46916199 266.90283203]
[149.00141907 253.89387512]
[141.53367615 240.88491821]
[133.96929932 227.93191528]
[126.30870819 215.03558350]
[118.64810944 202.13926697]
[119.66465759 217.10478210]
[116.65998077 231.80076599]
[109.85097504 245.16629028]
[99.72920227 256.23651123]
[87.02536011 264.21224976]
[72.65653992 268.51773071]
[57.66004944 268.84210205]
[43.11849213 265.16201782]
[30.08164024 257.74307251]
[19.49063110 247.12091064]
[12.11004066 234.06231689]
[8.47268009 219.51000977]
[8.84113312 204.51454163]
[13.18880177 190.15843201]
[21.20182228 177.47807312]
[32.30173111 167.38887024]
[45.68721390 160.61917114]
[60.39196014 157.65768433]
[75.35442352 158.71820068]
[89.49444580 163.72415161]
[101.79125977 172.31417847]
[111.35774994 183.86912537]
[108.03549194 169.24166870]
[104.71322632 154.61421204]
[90.40668488 153.97123718]
[76.75489807 149.64465332]
[64.68962097 141.92974854]
[55.03433228 131.35307312]
[48.44801712 118.63649750]
[45.38019943 104.64796448]
[46.04026413 90.34219360]
[50.38316345 76.69558716]
[58.11248016 64.63954163]
[68.70068359 54.99689865]
[81.42511749 48.42578125]
[78.32100677 33.75048065]
[75.21689606 19.07517815]
[72.11278534 4.39987612]
[69.00867462 -10.27542686]
[65.79540253 -24.92721367]
[62.47314072 -39.55467224]
[59.15088272 -54.18213272]
[55.82862091 -68.80959320]
[52.50636292 -83.43705750]
[42.02838898 -90.95867920]
[39.56240845 -103.21031952]
[45.89570236 -113.51643372]
[42.79159546 -128.19172668]
[39.68748474 -142.86703491]
[36.19724655 -146.74844360]
[34.69507217 -151.14125061]
[35.04283905 -155.20254517]
[36.78790283 -158.26638794]
[34.34217834 -173.06565857]
[23.51483917 -177.97537231]
[16.47400093 -187.40551758]
[14.87609386 -198.94416809]
[19.00350380 -209.70893860]
[27.72283363 -217.06689453]
[25.71882057 -231.93241882]
[23.71480560 -246.79794312]
[21.71079254 -261.66348267]
[19.70677948 -276.52899170]
[17.70276642 -291.39453125]
[2.75063038 -293.47689819]
[-11.08476353 -299.51712036]
[-22.77673721 -309.06701660]
[-31.45766830 -321.41787720]
[-36.48337555 -335.65322876]
[-37.48091888 -350.71667480]
[-34.37627029 -365.49041748]
[-27.39981842 -378.87817383]
[-17.06926155 -389.88644409]
[-4.15119505 -397.69836426]
[10.39577389 -401.73425293]
[25.49216461 -401.69458008]
[40.01772308 -397.58230591]
[52.89455795 -389.70260620]
[63.16712189 -378.64019775]
[70.07312775 -365.21597290]
[73.10009003 -350.42611694]
[72.02339935 -335.36810303]
[66.92295837 -321.15939331]
[58.17723846 -308.85430908]
[46.43523788 -299.36599731]
[32.56829453 -293.39855957]
[34.57230759 -278.53302002]
[36.57632065 -263.66748047]
[38.58033371 -248.80195618]
[40.58434677 -233.93643188]
[42.58836365 -219.07090759]
[57.78778839 -208.86830139]
[60.75367737 -190.48036194]
[49.14144897 -175.51138306]
[51.58717346 -160.71211243]
[54.36278534 -145.97114563]
[57.46689606 -131.29583740]
[60.57100677 -116.62054443]
[72.98695374 -104.21847534]
[67.13381958 -86.75931549]
[70.45608521 -72.13185120]
[73.77834320 -57.50439453]
[77.10060120 -42.87693405]
[80.42285919 -28.24947357]
[84.96975708 -22.42301941]
[83.68397522 -13.37953663]
[86.78808594 1.29576576]
[89.89219666 15.97106838]
[92.99630737 30.64636993]
[96.10041809 45.32167435]
[111.64275360 46.43347549]
[126.24435425 51.87349701]
[138.72538757 61.20217896]
[148.07737732 73.66574860]
[153.54467773 88.25715637]
[154.68551636 103.79738617]
[151.40773010 119.03078461]
[143.97616577 132.72648621]
[132.99128723 143.77786255]
[119.34069061 151.29194641]
[122.66294861 165.91940308]
[125.98520660 180.54687500]
[131.54443359 194.47866821]
[139.20503235 207.37500000]
[146.86563110 220.27131653]
[153.93885803 226.05122375]
[154.54263306 233.41717529]
[162.01037598 246.42613220]
[169.47811890 259.43508911]
[176.94586182 272.44403076]
[184.41360474 285.45297241]
[191.88133240 298.46194458]
[190.94824219 283.49099731]
[193.00662231 268.63290405]
[197.97450256 254.47943115]
[205.65399170 241.59436035]
[215.73924255 230.49084473]
[227.82855225 221.61117554]
[241.44039917 215.30900574]
[256.03265381 211.83534241]
[271.02407837 211.32855225]
[285.81759644 213.80880737]
[299.82400513 219.17733765]
[312.48538208 227.22030640]
[323.29745483 237.61737061]
[331.82962036 249.95440674]
[337.74197388 263.74005127]
[340.79907227 278.42523193]
[340.87915039 293.42501831]
[337.97900391 308.14196777]
[332.21417236 321.98995972]
[323.81423950 334.41738892]
[313.11380005 344.92929077]
[300.53900146 353.10699463]
[286.59072876 358.62475586]
[271.82452393 361.26284790]
[256.82855225 360.91613770]
[242.20004272 357.59848022]
[228.52166748 351.44201660]
[216.33824158 342.69189453]
[206.13502502 331.69671631]
[198.32020569 318.89813232]
[199.65843201 333.83831787]
[200.99667358 348.77850342]
[202.33489990 363.71868896]
[203.67314148 378.65887451]
[205.01136780 393.59906006]
[207.63414001 397.05957031]
[208.89270020 400.79861450]
[208.86703491 404.35314941]
[207.77925110 407.33364868]
[205.95735168 409.46408081]
[206.40396118 424.45742798]
[206.85057068 439.45077515]
[207.29716492 454.44415283]
[207.74377441 469.43750000]
[222.06333923 474.46884155]
[233.59585571 484.33624268]
[240.78164673 497.70520020]
[242.64889526 512.76763916]
[238.94505310 527.48657227]
[230.17106628 539.87127686]
[217.51353455 548.24694824]
[202.68426514 551.48071289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 151]
[25 150]
[26 149]
[48 148]
[49 147]
[50 146]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[73 124]
[74 123]
[75 122]
[79 121]
[80 120]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
