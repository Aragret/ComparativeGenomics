%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-92.36108398 528.24755859]
[-86.36184692 542.02044678]
[-82.25193787 556.47003174]
[-80.10471344 571.33856201]
[-79.95849609 586.36065674]
[-81.81589508 601.26812744]
[-85.64375305 615.79504395]
[-91.37376404 629.68206787]
[-98.90367126 642.68145752]
[-108.09909058 654.56121826]
[-118.79592133 665.10925293]
[-130.80326843 674.13739014]
[-143.90682983 681.48449707]
[-157.87278748 687.01940918]
[-172.45187378 690.64343262]
[-187.38392639 692.29187012]
[-202.40246582 691.93524170]
[-217.23944092 689.58001709]
[-231.63011169 685.26812744]
[-245.31762695 679.07653809]
[-258.05770874 671.11584473]
[-269.62304688 661.52795410]
[-279.80718994 650.48413086]
[-288.42840576 638.18139648]
[-295.33285522 624.83923340]
[-300.39730835 610.69586182]
[-303.53140259 596.00366211]
[-304.67916870 581.02484131]
[-303.82012939 566.02667236]
[-300.96966553 551.27679443]
[-296.17858887 537.03851318]
[-289.53240967 523.56585693]
[-281.14978027 511.09930420]
[-271.18023682 499.86135864]
[-259.80175781 490.05249023]
[-247.21736145 481.84783936]
[-233.65164185 475.39376831]
[-219.34671021 470.80548096]
[-204.55784607 468.16488647]
[-189.54896545 467.51904297]
[-174.58793640 468.87951660]
[-159.94174194 472.22204590]
[-145.87176514 477.48693848]
[-132.62910461 484.58026123]
[-123.84850311 472.41882324]
[-115.06789398 460.25735474]
[-106.28729248 448.09591675]
[-97.50669098 435.93444824]
[-88.81686401 423.70797729]
[-80.21829987 411.41711426]
[-71.61973572 399.12628174]
[-63.02117157 386.83544922]
[-72.06745148 374.93057251]
[-76.99781799 360.79333496]
[-77.31753540 345.80407715]
[-72.98272705 331.43048096]
[-64.40585327 319.08383179]
[-52.41654587 309.98043823]
[-38.18134689 305.02188110]
[-23.09020615 304.70562744]
[-8.62078857 309.07522583]
[-0.02222485 296.78439331]
[8.57633877 284.49353027]
[17.08316612 272.13903809]
[25.49778557 259.72152710]
[33.91240311 247.30404663]
[42.14121246 234.76264954]
[50.18238449 222.10011292]
[58.22355652 209.43759155]
[66.26473236 196.77507019]
[72.13368988 182.97088623]
[75.67336273 168.39451599]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[106.21058655 42.64218521]
[109.75025940 28.06580925]
[111.64355469 13.18577480]
[111.86688232 -1.81256270]
[108.86558533 -10.43984795]
[112.20684814 -17.03210068]
[112.65345001 -32.02545166]
[102.09519958 -43.47801208]
[102.76171112 -58.67703629]
[113.74504089 -68.67213440]
[114.19165039 -83.66548920]
[114.63825226 -98.65883636]
[111.84588623 -104.65167999]
[112.41391754 -110.30626678]
[115.32798767 -114.09008789]
[116.22080231 -129.06349182]
[109.31861877 -143.29972839]
[117.79974365 -155.54389954]
[118.69255829 -170.51730347]
[119.58537292 -185.49070740]
[105.89742279 -192.10195923]
[95.78515625 -203.45143127]
[90.79061127 -217.80841064]
[91.67543030 -232.98356628]
[98.30467224 -246.66281128]
[109.66743469 -256.76013184]
[124.03097534 -261.73580933]
[139.20495605 -260.83102417]
[152.87547302 -254.18379211]
[162.95783997 -242.80775452]
[167.91459656 -228.43768311]
[166.98985291 -213.26489258]
[160.32464600 -199.60314941]
[148.93536377 -189.53575134]
[134.55877686 -184.59790039]
[133.66596985 -169.62449646]
[132.77314758 -154.65109253]
[139.73919678 -141.48583984]
[131.19419861 -128.17066956]
[130.30139160 -113.19726562]
[129.63160706 -98.21222687]
[129.18499756 -83.21887970]
[128.73838806 -68.22553253]
[139.10733032 -57.59441376]
[138.86799622 -42.38265991]
[127.64679718 -31.57884407]
[127.20019531 -16.58549500]
[126.86521912 -1.58923495]
[126.64189148 13.40910244]
[134.25810242 0.48651281]
[145.98286438 -8.86922836]
[160.27359009 -13.42721176]
[175.25007629 -12.58775711]
[188.94192505 -6.46130896]
[199.54772949 4.14609337]
[205.67210388 17.83886337]
[206.50930786 32.81548309]
[201.94915771 47.10551834]
[192.59164429 58.82886887]
[179.66790771 66.44313049]
[164.87828064 68.94651031]
[150.16859436 66.00965118]
[137.47416687 58.01894379]
[128.46516418 46.02570724]
[124.32663727 31.60548210]
[120.78696442 46.18185806]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.24974060 171.93418884]
[86.71006775 186.51055908]
[96.40467072 175.06440735]
[108.70106506 166.47378540]
[122.78366852 161.30850220]
[137.71844482 159.91113281]
[152.51480103 162.37437439]
[166.19137573 168.53485107]
[177.84103394 177.98394775]
[186.69110107 190.09494019]
[192.15458679 204.06457520]
[193.86909485 218.96626282]
[191.72094727 233.81164551]
[185.85260010 247.61607361]
[176.65327454 259.46395874]
[164.73313904 268.56948853]
[150.88281250 274.32867432]
[136.02093506 276.35958862]
[121.13323212 274.52749634]
[107.20716858 268.95391846]
[95.16640472 260.00851440]
[85.80956268 248.28463745]
[79.75724030 234.55986023]
[77.41087341 219.74452209]
[78.92725372 204.81623840]
[70.88608551 217.47877502]
[62.84490967 230.14129639]
[54.80373764 242.80381775]
[54.14390564 249.38227844]
[50.76770020 253.95373535]
[46.32989883 255.71865845]
[37.91527939 268.13616943]
[29.50066185 280.55364990]
[27.27720642 289.41333008]
[20.86717796 293.09210205]
[12.26861286 305.38293457]
[3.67004919 317.67379761]
[12.73497009 329.76861572]
[17.61107445 344.05377197]
[17.83273888 359.12625122]
[13.39083862 373.50973511]
[4.73240519 385.79931641]
[-7.28432703 394.79870605]
[-21.47497749 399.63662720]
[-36.44575119 399.85122681]
[-50.73033524 395.43402100]
[-59.32889938 407.72485352]
[-67.92745972 420.01568604]
[-76.52602386 432.30651855]
[-78.88114166 441.13214111]
[-85.34523773 444.71505737]
[-94.12583923 456.87649536]
[-102.90644073 469.03796387]
[-111.68704224 481.19943237]
[-120.46764374 493.36087036]
[-109.56752014 503.69869995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 209]
[45 208]
[46 207]
[47 206]
[48 205]
[49 203]
[50 202]
[51 201]
[52 200]
[61 191]
[62 190]
[63 189]
[64 187]
[65 186]
[66 185]
[67 182]
[68 181]
[69 180]
[70 179]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 129]
[84 128]
[86 127]
[87 126]
[90 123]
[91 122]
[92 121]
[95 120]
[96 119]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
