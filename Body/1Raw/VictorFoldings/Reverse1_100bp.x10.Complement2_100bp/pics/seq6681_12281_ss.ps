%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[48.39235687 442.49624634]
[50.41839218 457.39599609]
[49.89704132 472.42385864]
[46.84330368 487.14739990]
[41.34504318 501.14300537]
[33.56045532 514.00799561]
[23.71352005 525.37225342]
[12.08754921 534.90875244]
[-0.98295236 542.34313965]
[-15.12192059 547.46148682]
[-29.92255020 550.11657715]
[-44.95899582 550.23193359]
[-59.79862976 547.80432129]
[-74.01448822 542.90356445]
[-87.19754791 535.67065430]
[-98.96850586 526.31372070]
[-108.98869324 515.10192871]
[-116.96981049 502.35794067]
[-122.68221283 488.44836426]
[-125.96155548 473.77340698]
[-126.71348572 458.75534058]
[-124.91635895 443.82623291]
[-120.62188721 429.41561890]
[-113.95363617 415.93814087]
[-105.10345459 403.78155518]
[-94.32598877 393.29565430]
[-81.93132782 384.78213501]
[-68.27607727 378.48590088]
[-53.75314331 374.58816528]
[-38.78037262 373.20108032]
[-23.78855896 374.36447144]
[-9.20904922 378.04495239]
[-3.13521504 364.32971191]
[2.93861890 350.61444092]
[9.01245308 336.89916992]
[15.08628654 323.18389893]
[21.16012001 309.46862793]
[27.23395538 295.75335693]
[33.30778885 282.03808594]
[39.38162231 268.32284546]
[44.62834167 254.27035522]
[40.96574020 239.83309937]
[52.41149139 228.91038513]
[48.74888992 214.47312927]
[60.19463730 203.55043030]
[64.59563446 189.21058655]
[68.99663544 174.87072754]
[65.33403778 160.43347168]
[76.77978516 149.51077271]
[81.18077850 135.17091370]
[85.58177948 120.83106995]
[89.98278046 106.49122620]
[79.06215668 116.77422333]
[65.19192505 122.48531342]
[50.19693375 122.87310028]
[36.05004883 117.88655853]
[24.61252403 108.18176270]
[17.38916779 95.03554535]
[15.33033752 80.17750549]
[18.70690536 65.56249237]
[27.07462692 53.11334229]
[39.33258438 44.46796799]
[53.86803055 40.76381683]
[68.76858521 42.48822784]
[82.07381439 49.41432953]
[92.03318787 60.63087082]
[97.33638763 74.66212463]
[97.28523254 89.66437531]
[104.75297546 76.65542603]
[112.22071838 63.64647293]
[119.68846130 50.63751984]
[120.05388641 44.03615570]
[123.22259521 39.31850052]
[127.57716370 37.35718155]
[135.42892456 24.57633781]
[135.99073792 17.98878098]
[139.29850769 13.36755848]
[143.70953369 11.53675938]
[151.93833923 -1.00464046]
[160.16714478 -13.54604053]
[168.39596558 -26.08744049]
[176.62477112 -38.62884140]
[184.47651672 -51.40968323]
[191.94425964 -64.41863251]
[199.41200256 -77.42758942]
[206.87974548 -90.43653870]
[214.34748840 -103.44549561]
[221.71817017 -116.50968170]
[228.99140930 -129.62837219]
[236.26463318 -142.74707031]
[236.53173828 -149.35313416]
[239.62985229 -154.11744690]
[243.95474243 -156.14338684]
[251.61534119 -169.03971863]
[259.27593994 -181.93603516]
[266.93652344 -194.83236694]
[274.59713745 -207.72869873]
[262.66308594 -216.84434509]
[251.86802673 -227.28384399]
[242.35794067 -238.90600586]
[234.26142883 -251.55366516]
[227.68800354 -265.05575562]
[222.72656250 -279.22970581]
[219.44419861 -293.88378906]
[217.88529968 -308.81988525]
[218.07095337 -323.83593750]
[219.99865723 -338.72891235]
[223.64231873 -353.29736328]
[228.95266724 -367.34429932]
[235.85791016 -380.67977905]
[244.26463318 -393.12338257]
[254.05915833 -404.50686646]
[265.10900879 -414.67626953]
[277.26480103 -423.49407959]
[290.36206055 -430.84106445]
[304.22372437 -436.61779785]
[318.66232300 -440.74621582]
[333.48257446 -443.17044067]
[348.48403931 -443.85772705]
[363.46386719 -442.79876709]
[378.21945190 -440.00787354]
[392.55126953 -435.52279663]
[406.26544189 -429.40417480]
[419.17657471 -421.73480225]
[431.11001587 -412.61834717]
[441.90438843 -402.17813110]
[451.41369629 -390.55532837]
[459.50933838 -377.90713501]
[466.08187866 -364.40460205]
[471.04235840 -350.23034668]
[474.32376099 -335.57601929]
[475.88165283 -320.63983154]
[475.69500732 -305.62377930]
[473.76632690 -290.73095703]
[470.12167358 -276.16271973]
[464.81039429 -262.11614990]
[457.90426636 -248.78114319]
[449.49670410 -236.33808899]
[439.70141602 -224.95526123]
[428.65087891 -214.78659058]
[416.49450684 -205.96958923]
[403.39675903 -198.62350464]
[389.53469849 -192.84768677]
[375.09582520 -188.72023010]
[360.27542114 -186.29698181]
[345.27392578 -185.61070251]
[330.29415894 -186.67066956]
[315.53875732 -189.46253967]
[301.20724487 -193.94857788]
[287.49346924 -200.06809998]
[279.83285522 -187.17176819]
[272.17227173 -174.27543640]
[264.51165771 -161.37911987]
[256.85107422 -148.48278809]
[249.38333130 -135.47383118]
[242.11010742 -122.35514069]
[234.83686829 -109.23645020]
[234.34283447 -101.86232758]
[227.35644531 -95.97775269]
[219.88870239 -82.96880341]
[212.42095947 -69.95984650]
[204.95321655 -56.95089340]
[197.48547363 -43.94194412]
[198.08670044 -41.20393753]
[197.63957214 -38.06280518]
[195.98515320 -34.91665268]
[193.11135864 -32.21372986]
[189.16616821 -30.40003395]
[180.93736267 -17.85863304]
[172.70855713 -5.31723309]
[164.47975159 7.22416735]
[156.25093079 19.76556778]
[148.20976257 32.42809296]
[140.35800171 45.20893478]
[132.69741821 58.10526276]
[125.22966766 71.11421204]
[117.76192474 84.12316895]
[110.29418945 97.13211823]
[104.32262421 110.89221954]
[99.92162323 125.23207092]
[95.52062988 139.57191467]
[91.11962891 153.91175842]
[94.46744537 169.37471008]
[83.33647919 179.27172852]
[78.93548584 193.61157227]
[74.53448486 207.95143127]
[77.88229370 223.41436768]
[66.75133514 233.31138611]
[70.09915161 248.77433777]
[58.96818924 258.67135620]
[71.72136688 250.77474976]
[86.68848419 251.76733398]
[98.28719330 261.27890015]
[102.19144440 275.76187134]
[96.94506073 289.81448364]
[84.50481415 298.19540405]
[69.51059723 297.77880859]
[57.55489349 288.72006226]
[53.09688950 274.39666748]
[47.02305603 288.11193848]
[40.94922256 301.82720947]
[34.87538910 315.54244995]
[28.80155373 329.25772095]
[22.72772026 342.97299194]
[16.65388489 356.68826294]
[10.58005142 370.40353394]
[4.50621748 384.11880493]
[17.03008270 392.44110107]
[27.96721077 402.76037598]
[37.00291824 414.77969360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 207]
[33 206]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[40 199]
[41 190]
[43 188]
[45 186]
[46 185]
[47 184]
[49 182]
[50 181]
[51 180]
[52 179]
[68 178]
[69 177]
[70 176]
[71 175]
[74 174]
[75 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 157]
[89 156]
[90 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
