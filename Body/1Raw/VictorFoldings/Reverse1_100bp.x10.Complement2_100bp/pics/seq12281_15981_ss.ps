%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[115.00064850 550.34887695]
[122.58209991 537.05303955]
[135.48028564 528.81317139]
[134.14204407 513.87298584]
[132.80381775 498.93276978]
[121.94959259 485.14318848]
[129.83593750 468.50326538]
[128.27542114 453.58465576]
[126.71489716 438.66604614]
[125.15437317 423.74743652]
[123.59384918 408.82885742]
[109.25695038 404.65960693]
[97.57690430 395.29360962]
[90.35305023 382.13378906]
[88.71349335 367.17050171]
[92.93902588 352.68057251]
[102.41563416 340.88070679]
[115.72352600 333.58853149]
[114.16300201 318.66992188]
[112.60247803 303.75131226]
[111.04195404 288.83270264]
[109.48143768 273.91412354]
[107.92091370 258.99551392]
[106.36038971 244.07690430]
[92.21203613 241.78099060]
[79.13080597 235.89231873]
[68.01289368 226.80741882]
[59.62177658 215.14204407]
[54.53578186 201.68940735]
[53.10823441 187.36627197]
[55.44290924 173.15048218]
[61.38652039 160.01416016]
[70.53877258 148.85729980]
[82.27931213 140.44604492]
[95.80977631 135.36009216]
[94.47154236 120.41989899]
[93.13330841 105.47971344]
[90.96851349 103.33421326]
[89.53653717 100.35361481]
[89.14818573 96.80782318]
[90.01020050 93.07778931]
[92.18732452 89.61468506]
[91.74072266 74.62133026]
[76.49586487 72.08897400]
[62.03907013 66.64138794]
[48.92192078 58.48834991]
[37.64450836 47.94282150]
[28.63636780 35.40894318]
[22.24012184 21.36652756]
[18.69844627 6.35271311]
[18.14486885 -9.05859375]
[20.59872818 -24.27865219]
[25.96450806 -38.72637939]
[34.03555679 -51.85053635]
[44.50204086 -63.15075684]
[56.96283722 -72.19662476]
[70.94091034 -78.64407349]
[85.90158081 -82.24846649]
[85.23179626 -97.23350525]
[84.56201172 -112.21854401]
[70.00493622 -116.28660583]
[57.43501663 -124.64360809]
[48.07628632 -136.46066284]
[42.83541870 -150.57264709]
[42.21386719 -165.59318542]
[46.25992966 -180.05072021]
[54.56524658 -192.53277588]
[66.30596924 -201.82392883]
[80.32449341 -207.02412415]
[79.65470886 -222.00917053]
[78.98491669 -236.99420166]
[78.31513214 -251.97924805]
[77.64534760 -266.96429443]
[75.75205994 -281.84432983]
[72.64794922 -296.51962280]
[69.54383850 -311.19491577]
[66.43972778 -325.87020874]
[63.33561707 -340.54553223]
[60.23150635 -355.22082520]
[47.26888657 -363.85842896]
[44.32993317 -378.78549194]
[52.64445496 -391.09014893]
[49.54034424 -405.76544189]
[46.43623352 -420.44073486]
[43.33212280 -435.11605835]
[28.26914787 -435.34957886]
[13.63592434 -438.92959595]
[0.16644678 -445.67651367]
[-11.46366119 -455.25192261]
[-20.67103767 -467.17550659]
[-26.99384308 -480.84921265]
[-30.11493111 -495.58712769]
[-29.87774849 -510.65005493]
[-26.29418945 -525.28240967]
[-19.54400826 -538.75024414]
[-9.96578789 -550.37805176]
[1.96003163 -559.58251953]
[15.63525581 -565.90203857]
[30.37393951 -569.01953125]
[45.43679810 -568.77868652]
[60.06828690 -565.19158936]
[73.53449249 -558.43817139]
[85.15995789 -548.85711670]
[94.36155701 -536.92907715]
[100.67773438 -523.25231934]
[103.79167938 -508.51287842]
[103.54719543 -493.45007324]
[99.95655060 -478.81945801]
[93.19984436 -465.35488892]
[83.61598969 -453.73171997]
[71.68570709 -444.53302002]
[58.00742722 -438.22015381]
[61.11153412 -423.54486084]
[64.21564484 -408.86956787]
[67.31975555 -394.19424438]
[79.90457153 -386.31021118]
[83.26163483 -371.47158813]
[74.90680695 -358.32495117]
[78.01091766 -343.64962769]
[81.11502838 -328.97433472]
[84.21913910 -314.29904175]
[87.32324982 -299.62371826]
[90.42736053 -284.94842529]
[96.13859558 -298.81860352]
[107.58198547 -308.51647949]
[122.20104218 -311.87554932]
[136.72982788 -308.14535522]
[147.92257690 -298.15924072]
[153.27880859 -284.14813232]
[151.60191345 -269.24215698]
[143.26652527 -256.77136230]
[130.13478088 -249.52169800]
[115.14035797 -249.11280823]
[101.63304138 -255.63603210]
[92.63038635 -267.63406372]
[93.30017090 -252.64903259]
[93.96995544 -237.66398621]
[94.63974762 -222.67895508]
[95.30953217 -207.69390869]
[109.73608398 -203.76512146]
[122.25891113 -195.55847168]
[131.64469910 -183.86715698]
[136.96446228 -169.82823181]
[137.68545532 -154.81214905]
[133.72450256 -140.28886414]
[125.45735931 -127.68399811]
[113.68313599 -118.23888397]
[99.54705048 -112.88832855]
[100.21683502 -97.90328979]
[100.88661957 -82.91825104]
[115.31560516 -80.85673523]
[129.12129211 -76.16964722]
[141.83010864 -69.01616669]
[153.00578308 -59.64010239]
[162.26438904 -48.36158371]
[169.28747559 -35.56614304]
[173.83303833 -21.69151306]
[175.74388123 -7.21267843]
[174.95300293 7.37440205]
[171.48597717 21.56977844]
[165.46015930 34.88664627]
[157.08064270 46.86803818]
[146.63333130 57.10250854]
[134.47517395 65.23825073]
[121.02194977 70.99521637]
[106.73406982 74.17472839]
[107.18067932 89.16807556]
[108.07349396 104.14147949]
[109.41172791 119.08166504]
[110.74996185 134.02185059]
[126.18640137 137.03106689]
[140.13867188 144.25720215]
[151.48213196 155.10856628]
[159.30505371 168.70167542]
[162.98185730 183.93310547]
[162.22312927 199.56910706]
[157.09837341 214.34553528]
[148.02981567 227.07003784]
[135.75749207 236.71827698]
[121.27899170 242.51637268]
[122.83951569 257.43496704]
[124.40003967 272.35357666]
[125.96056366 287.27218628]
[127.52108765 302.19079590]
[129.08160400 317.10940552]
[130.64213562 332.02801514]
[145.17100525 336.40838623]
[156.88435364 345.99172974]
[164.01696777 359.29357910]
[165.50941467 374.27224731]
[161.16523743 388.64212036]
[151.67622375 400.22244263]
[138.51245117 407.26831055]
[140.07298279 422.18692017]
[141.63349915 437.10552979]
[143.19403076 452.02413940]
[144.75454712 466.94274902]
[154.26448059 475.65618896]
[155.25711060 488.11404419]
[147.74400330 497.59454346]
[149.08222961 512.53472900]
[150.42047119 527.47491455]
[164.57771301 533.29132080]
[174.40141296 545.02819824]
[177.63415527 559.98840332]
[173.53306580 574.73425293]
[163.04055786 585.87719727]
[148.56773376 590.85675049]
[133.44032288 588.52856445]
[121.13452148 579.42773438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[35 170]
[36 169]
[37 168]
[42 167]
[43 166]
[58 150]
[59 149]
[60 148]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
