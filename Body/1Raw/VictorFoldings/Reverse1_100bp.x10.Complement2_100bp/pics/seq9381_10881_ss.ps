%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[120.33622742 670.35833740]
[107.15929413 663.00775146]
[96.33448029 652.49652100]
[88.59986115 639.54132080]
[84.48278809 625.02539062]
[84.26396942 609.93847656]
[87.95832062 595.30926514]
[95.31396484 582.13519287]
[105.82937622 571.31439209]
[118.78759003 563.58477783]
[133.30509949 559.47332764]
[133.08177185 544.47497559]
[132.85844421 529.47668457]
[132.63511658 514.47833252]
[132.41178894 499.47998047]
[132.18846130 484.48165894]
[131.51867676 469.49661255]
[130.40303040 454.53814697]
[121.44468689 446.40951538]
[120.39279938 433.95651245]
[128.35475159 423.80911255]
[127.46193695 408.83569336]
[126.56912231 393.86230469]
[125.67630768 378.88888550]
[124.78349304 363.91549683]
[109.72990417 358.96414185]
[97.69974518 348.58993530]
[90.55443573 334.35900879]
[89.41454315 318.43719482]
[94.48411560 303.26037598]
[105.01492310 291.16192627]
[119.41675568 284.01382446]
[118.30110931 269.05535889]
[117.18545532 254.09690857]
[115.40299225 239.20318604]
[112.95726776 224.40391541]
[110.51153564 209.60464478]
[108.06581116 194.80537415]
[105.62008667 180.00610352]
[103.17435455 165.20683289]
[100.72863007 150.40756226]
[98.28289795 135.60829163]
[82.95098114 131.30862427]
[71.02047729 120.76262665]
[64.87163544 106.07430267]
[65.73119354 90.17411041]
[73.42766571 76.23426819]
[86.42553711 67.03588104]
[83.75974274 52.27466202]
[81.09394836 37.51344681]
[78.42815399 22.75222778]
[75.76235199 7.99101162]
[71.89804840 -6.50268173]
[66.86112976 -20.63171196]
[61.82421494 -34.76074219]
[56.78730011 -48.88977051]
[51.75038528 -63.01879883]
[46.96969604 -67.58569336]
[45.44231033 -73.05964661]
[46.78068161 -77.64416504]
[42.16667175 -91.91689301]
[37.55266571 -106.18962860]
[31.93526459 -113.39258575]
[32.97792053 -120.70932770]
[28.57692337 -135.04917908]
[17.13117409 -145.97187805]
[20.79377556 -160.40913391]
[16.39277649 -174.74899292]
[5.38439178 -181.47045898]
[2.01400518 -193.50476074]
[7.56322718 -204.25337219]
[3.37621593 -218.65715027]
[-0.81079531 -233.06094360]
[-4.99780655 -247.46472168]
[-9.18481731 -261.86849976]
[-13.37182903 -276.27227783]
[-28.27539825 -274.32702637]
[-43.30124664 -274.67968750]
[-58.09714127 -277.32202148]
[-72.31624603 -282.19207764]
[-85.62525177 -289.17568970]
[-97.71217346 -298.10916138]
[-108.29367065 -308.78305054]
[-117.12169647 -320.94720459]
[-123.98931885 -334.31643677]
[-128.73554993 -348.57733154]
[-131.24913025 -363.39566040]
[-131.47113037 -378.42401123]
[-129.39634705 -393.31008911]
[-125.07342529 -407.70498657]
[-118.60369110 -421.27120972]
[-110.13881683 -433.69082642]
[-99.87722015 -444.67260742]
[-88.05944824 -453.95919800]
[-74.96253204 -461.33288574]
[-60.89347839 -466.62081909]
[-46.18208694 -469.69903564]
[-31.17321205 -470.49536133]
[-16.21868706 -468.99118042]
[-1.66906488 -465.22171021]
[12.13459015 -459.27532959]
[24.86870003 -451.29141235]
[36.23476028 -441.45712280]
[45.96633148 -430.00299072]
[53.83529282 -417.19754028]
[59.65718842 -403.34091187]
[63.29553986 -388.75793457]
[64.66506195 -373.79049683]
[63.73364639 -358.78939819]
[60.52313232 -344.10629272]
[55.10877609 -330.08541870]
[47.61749649 -317.05541992]
[38.22490692 -305.32171631]
[27.15117455 -295.15939331]
[14.65588760 -286.80664062]
[1.03195310 -280.45928955]
[5.21896410 -266.05551147]
[9.40597534 -251.65173340]
[13.59298706 -237.24795532]
[17.77999878 -222.84416199]
[21.96700859 -208.44038391]
[35.27098846 -196.99612427]
[30.73262405 -179.14997864]
[35.13362122 -164.81013489]
[46.26458359 -154.91311646]
[42.91677094 -139.45016479]
[47.31776810 -125.11032867]
[51.82539749 -110.80364227]
[56.43940735 -96.53090668]
[61.05341721 -82.25817108]
[65.87941742 -68.05571747]
[70.91632843 -53.92668533]
[75.95324707 -39.79765701]
[80.99016571 -25.66862679]
[86.02707672 -11.53959751]
[89.83405304 -26.04845619]
[99.87920380 -37.18824387]
[113.91842651 -42.47030258]
[128.81532288 -40.71461105]
[141.24189758 -32.31338882]
[148.42199707 -19.14349556]
[148.75158691 -4.14711666]
[142.15702820 9.32551765]
[130.11157227 18.26458549]
[115.30619812 20.67307854]
[101.04846191 16.01293182]
[90.52357483 5.32521582]
[93.18936920 20.08643341]
[95.85516357 34.84764862]
[98.52095795 49.60886765]
[101.18675232 64.37008667]
[114.65557098 67.50210571]
[125.91932678 75.52373505]
[133.28327942 87.22804260]
[135.63945007 100.85401917]
[132.63331604 114.35149384]
[124.71721649 125.68965912]
[113.08216858 133.16256714]
[115.52790070 147.96183777]
[117.97362518 162.76110840]
[120.41935730 177.56037903]
[122.86508179 192.35964966]
[125.31080627 207.15892029]
[127.75653839 221.95819092]
[130.20227051 236.75746155]
[139.79524231 225.22599792]
[154.71923828 223.71800232]
[166.42514038 233.09735107]
[168.20724487 247.99111938]
[159.04469299 259.86746216]
[144.18621826 261.92309570]
[132.14390564 252.98126221]
[133.25956726 267.93972778]
[134.37521362 282.89816284]
[148.02706909 286.95745850]
[159.44938660 295.41513062]
[167.28224182 307.23880005]
[170.60173035 320.99697876]
[169.02894592 335.03225708]
[162.77308655 347.66091919]
[152.60386658 357.37512207]
[139.75689697 363.02267456]
[140.64970398 377.99606323]
[141.54252625 392.96948242]
[142.43534851 407.94287109]
[143.32815552 422.91629028]
[153.82208252 438.04766846]
[145.36148071 453.42251587]
[146.47714233 468.38095093]
[149.04808044 471.88012695]
[150.25085449 475.63751221]
[150.17227173 479.19125366]
[149.04022217 482.15524292]
[147.18679810 484.25833130]
[147.41012573 499.25665283]
[147.63345337 514.25500488]
[147.85678101 529.25335693]
[148.08010864 544.25164795]
[148.30343628 559.25000000]
[162.93693542 562.92742920]
[176.11955261 570.26776123]
[186.95246887 580.77062988]
[194.69709778 593.71990967]
[198.82537842 608.23266602]
[199.05584717 623.31939697]
[195.37278748 637.95147705]
[188.02732849 651.13122559]
[177.52027893 661.96008301]
[164.56802368 669.69970703]
[150.05369568 673.82238770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 189]
[18 188]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[32 174]
[33 173]
[34 172]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[60 130]
[61 129]
[62 128]
[64 127]
[65 126]
[67 124]
[68 123]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
