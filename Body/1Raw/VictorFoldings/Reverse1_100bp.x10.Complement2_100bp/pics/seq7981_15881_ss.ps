%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[176.63162231 515.96350098]
[171.40328979 501.89587402]
[167.29481506 487.46139526]
[164.33152771 472.74905396]
[162.53169250 457.84954834]
[161.90643311 442.85479736]
[162.45956421 427.85717773]
[164.18771362 412.94921875]
[167.08020020 398.22277832]
[171.11920166 383.76870728]
[176.27981567 369.67608643]
[182.53021240 356.03179932]
[189.83187866 342.91998291]
[198.13978577 330.42144775]
[207.40269470 318.61331177]
[217.56352234 307.56832886]
[228.55961609 297.35458374]
[219.24473572 285.59735107]
[209.92985535 273.84008789]
[200.61495972 262.08285522]
[191.30007935 250.32559204]
[181.98519897 238.56834412]
[179.18678284 253.30499268]
[166.86575317 261.86022949]
[152.08013916 259.33322144]
[143.29981995 247.17155457]
[145.55456543 232.34197998]
[157.55274963 223.33955383]
[172.42045593 225.32081604]
[164.19163513 212.77940369]
[155.96282959 200.23800659]
[147.73402405 187.69660950]
[139.50521851 175.15521240]
[131.27641296 162.61381531]
[123.04759979 150.07240295]
[116.74994659 146.20442200]
[114.79125977 137.28245544]
[106.75009155 124.61993408]
[98.70891571 111.95741272]
[90.48011017 99.41600800]
[82.06549072 86.99851227]
[73.65087128 74.58101654]
[75.70135498 89.44020844]
[74.31713867 104.37620544]
[69.57083893 118.60549164]
[61.71143341 131.38163757]
[51.15121460 142.03440857]
[38.44414902 150.00502014]
[24.25682259 154.87532043]
[9.33347607 156.38981628]
[-5.54304266 154.46908569]
[-19.59234047 149.21388245]
[-32.07741928 140.89987183]
[-42.34333801 129.96319580]
[-49.85156631 116.97756195]
[-54.20823669 102.62419128]
[-55.18481064 87.65601349]
[-52.73005295 72.85823822]
[-46.97274017 59.00712204]
[-38.21488953 46.82927322]
[-26.91591454 36.96351242]
[-13.66854382 29.92738152]
[0.83229542 26.08997917]
[15.82591724 25.65260696]
[30.52578735 28.63821220]
[44.16077805 34.89017105]
[56.01562881 44.08052444]
[65.46934509 55.72855759]
[62.14708328 41.10109711]
[58.82482529 26.47363663]
[55.50256348 11.84617710]
[52.18030548 -2.78128314]
[48.85804367 -17.40874290]
[44.50637817 -3.05384922]
[35.32048798 8.80445862]
[22.50894356 16.60601616]
[7.75731945 19.32439423]
[-6.99355364 16.60194397]
[-19.80294418 8.79684925]
[-28.98555756 -3.06399488]
[-33.33326340 -17.42008972]
[-32.27404404 -32.38264465]
[-25.94725990 -45.98307800]
[-15.18530655 -56.43201828]
[-1.40410578 -62.35473251]
[13.58318901 -62.97197723]
[27.80474091 -58.20254898]
[39.38946152 -48.67395020]
[46.81396484 -35.63757706]
[46.81396484 -50.63757706]
[46.81396484 -65.63757324]
[46.81396484 -80.63757324]
[46.81396484 -95.63757324]
[34.42898941 -104.79827881]
[29.86623764 -119.32531738]
[34.67554855 -133.58485413]
[46.81396484 -142.17536926]
[46.81396484 -157.17536926]
[32.75677872 -162.96015930]
[21.98690414 -173.68762207]
[16.14667320 -187.72186279]
[16.12667656 -202.92279053]
[21.92996597 -216.97235107]
[32.67157745 -227.72810364]
[46.71349716 -233.54986572]
[61.91443253 -233.54986572]
[75.95635223 -227.72810364]
[86.69796753 -216.97235107]
[92.50125122 -202.92279053]
[92.48125458 -187.72186279]
[86.64102173 -173.68762207]
[75.87115479 -162.96015930]
[61.81396484 -157.17536926]
[61.81396484 -142.17536926]
[73.95238495 -133.58485413]
[78.76169586 -119.32531738]
[74.19894409 -104.79827881]
[61.81396484 -95.63757324]
[61.81396484 -80.63757324]
[61.81396484 -65.63757324]
[61.81396484 -50.63757706]
[61.81396484 -35.63757706]
[63.48550415 -20.73100281]
[66.80776215 -6.10354280]
[70.13002777 8.52391720]
[73.45228577 23.15137863]
[76.77454376 37.77883911]
[80.09680176 52.40629959]
[86.06836700 66.16640472]
[94.48298645 78.58390045]
[102.89760590 91.00138855]
[107.69093323 93.13164520]
[110.94950867 97.79586792]
[111.37143707 103.91623688]
[119.41261292 116.57876587]
[127.45378876 129.24128723]
[135.58900452 141.84359741]
[143.81781006 154.38499451]
[152.04661560 166.92640686]
[160.27542114 179.46780396]
[168.50422668 192.00920105]
[176.73304749 204.55059814]
[184.96185303 217.09199524]
[193.74244690 229.25346375]
[203.05734253 241.01071167]
[212.37222290 252.76795959]
[221.68710327 264.52520752]
[231.00198364 276.28247070]
[240.31686401 288.03970337]
[252.77502441 279.67141724]
[265.85134888 272.30636597]
[279.46520996 265.98999023]
[293.53268433 260.76123047]
[307.96707153 256.65231323]
[322.67932129 253.68856812]
[337.57873535 251.88829041]
[352.57348633 251.26255798]
[367.57110596 251.81524658]
[382.47915649 253.54292297]
[397.20565796 256.43496704]
[411.65985107 260.47351074]
[425.75265503 265.63369751]
[439.39712524 271.88369751]
[452.50918579 279.18493652]
[465.00793457 287.49246216]
[476.81637573 296.75503540]
[487.86166382 306.91549683]
[498.07574463 317.91128540]
[507.39556885 329.67456055]
[515.76373291 342.13281250]
[523.12866211 355.20919800]
[529.44488525 368.82312012]
[534.67352295 382.89065552]
[538.78228760 397.32507324]
[541.74591064 412.03735352]
[543.54602051 426.93679810]
[544.17156982 441.93157959]
[543.61877441 456.92916870]
[541.89093018 471.83718872]
[538.99871826 486.56365967]
[534.96002197 501.01785278]
[529.79968262 515.11059570]
[523.54956055 528.75500488]
[516.24816895 541.86694336]
[507.94052124 554.36566162]
[498.67785645 566.17395020]
[488.51724243 577.21917725]
[477.52136230 587.43310547]
[465.75799561 596.75286865]
[453.29968262 605.12091064]
[440.22320557 612.48565674]
[426.60922241 618.80175781]
[412.54162598 624.03027344]
[398.10717773 628.13885498]
[383.39486694 631.10229492]
[368.49539185 632.90228271]
[353.50061035 633.52770996]
[338.50302124 632.97473145]
[323.59503174 631.24670410]
[308.86856079 628.35437012]
[294.41445923 624.31555176]
[280.32177734 619.15509033]
[266.67739868 612.90478516]
[253.56552124 605.60327148]
[241.06692505 597.29553223]
[229.25868225 588.03271484]
[218.21359253 577.87200928]
[207.99975586 566.87597656]
[198.68014526 555.11254883]
[190.31222534 542.65411377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[37 136]
[38 135]
[39 134]
[40 131]
[41 130]
[42 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
