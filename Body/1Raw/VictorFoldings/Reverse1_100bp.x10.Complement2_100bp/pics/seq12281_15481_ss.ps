%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[152.42335510 565.70513916]
[149.86058044 550.90606689]
[149.13591003 535.90429688]
[150.26031494 520.92712402]
[153.21676636 506.20166016]
[157.96044922 491.95114136]
[164.41943359 478.39160156]
[172.49580383 465.72860718]
[182.06713867 454.15408325]
[192.98832703 443.84356689]
[205.09381104 434.95327759]
[218.20007324 427.61807251]
[212.53729248 413.72802734]
[206.87451172 399.83801270]
[195.85012817 394.85910034]
[191.01869202 383.33343506]
[195.47326660 371.22891235]
[190.01789856 357.25610352]
[184.56254578 343.28329468]
[179.10719299 329.31051636]
[173.65184021 315.33770752]
[168.19647217 301.36489868]
[156.36024475 292.32318115]
[158.54869080 276.65408325]
[153.09333801 262.68127441]
[147.63798523 248.70848083]
[142.27709961 243.62097168]
[142.20712280 234.48681641]
[136.96040344 220.43434143]
[125.26010132 211.21739197]
[127.68160248 195.58259583]
[122.43488312 181.53012085]
[117.18817139 167.47766113]
[103.57305908 161.54769897]
[98.05195618 147.37123108]
[104.36415863 133.13066101]
[99.11743927 119.07819366]
[85.97918701 112.96815491]
[80.91102600 99.39392090]
[86.83008575 86.16852570]
[81.58336639 72.11605835]
[69.50778198 61.89398193]
[72.30456543 47.26431274]
[67.05784607 33.21184158]
[61.81113052 19.15937042]
[60.27787399 34.08080292]
[55.26464462 48.21825409]
[47.05496597 60.77218246]
[36.11313248 71.03260803]
[23.05795670 78.41924286]
[8.62777519 82.51435089]
[-6.36131573 83.08631897]
[-21.06161118 80.10281372]
[-34.64173889 73.73255920]
[-46.33367157 64.33582306]
[-55.47618103 52.44403458]
[-61.55221176 38.72974014]
[-64.21813202 23.96854782]
[-63.32317352 8.99526978]
[-58.91794968 -5.34328032]
[-51.25159836 -18.23618698]
[-40.75769043 -28.95429420]
[-28.02970123 -36.89144135]
[-13.78746414 -41.59874725]
[1.16355217 -42.80998611]
[15.97779655 -40.45665741]
[29.81745148 -34.67185593]
[41.89981842 -25.78273582]
[51.54158020 -14.29202557]
[58.19780731 -0.84856468]
[58.19780731 -15.84856510]
[58.19780731 -30.84856415]
[58.19780731 -45.84856415]
[50.46050644 -59.64873886]
[58.19780731 -72.37600708]
[58.08613968 -87.37559509]
[57.86281204 -102.37393188]
[57.63948441 -117.37226868]
[57.41615677 -132.37060547]
[56.96955109 -147.36395264]
[56.29976273 -162.34899902]
[55.62997818 -177.33403015]
[54.96019363 -192.31907654]
[54.29040909 -207.30410767]
[53.62062454 -222.28915405]
[52.95084000 -237.27418518]
[52.28105545 -252.25923157]
[38.75425339 -259.39877319]
[30.67062187 -272.26544189]
[30.11631966 -287.35052490]
[37.14014816 -300.59896851]
[49.76727676 -308.49969482]
[49.09749222 -323.48471069]
[48.42770767 -338.46975708]
[33.79481888 -342.26052856]
[20.93025208 -350.19741821]
[10.97791576 -361.57470703]
[4.82276487 -375.38070679]
[3.01211214 -390.38778687]
[5.70695877 -405.26156616]
[12.66768169 -418.67947388]
[23.27533722 -429.44836426]
[36.58670044 -436.61068726]
[51.41813278 -439.52960205]
[66.45083618 -437.94552612]
[80.34810638 -431.99932861]
[91.87421417 -422.21975708]
[100.00426483 -409.47637939]
[104.01534271 -394.90234375]
[103.55077362 -379.79354858]
[98.65187836 -365.49346924]
[89.75426483 -353.27365112]
[77.64908600 -344.22067261]
[63.41274643 -339.13955688]
[64.08253479 -324.15451050]
[64.75231934 -309.16946411]
[78.03395844 -302.42681885]
[86.21174622 -289.85781860]
[87.00548553 -274.78344727]
[80.10198975 -261.24688721]
[67.26609039 -252.92901611]
[67.93587494 -237.94396973]
[68.60565948 -222.95893860]
[69.27545166 -207.97389221]
[69.94523621 -192.98886108]
[70.61502075 -178.00381470]
[71.28480530 -163.01878357]
[71.95458984 -148.03373718]
[74.81199646 -144.20695496]
[75.29577637 -138.54454041]
[72.41448975 -132.59393311]
[72.63781738 -117.59559631]
[72.86114502 -102.59725952]
[73.08447266 -87.59892273]
[76.32721710 -80.95765686]
[73.19780731 -72.37600708]
[80.93510437 -59.64873886]
[73.19780731 -45.84856415]
[73.19780731 -30.84856415]
[73.19780731 -15.84856510]
[73.19780731 -0.84856468]
[75.86360168 13.91265297]
[81.11032104 27.96512413]
[86.35704041 42.01759338]
[98.05734253 51.23454285]
[95.63584137 66.86933899]
[100.88256073 80.92180634]
[114.02081299 87.03184509]
[119.08897400 100.60607910]
[113.16991425 113.83147430]
[118.41663361 127.88394165]
[132.51715088 134.50309753]
[137.63787842 148.82904053]
[131.24064636 162.23094177]
[136.48735046 176.28340149]
[141.73406982 190.33587646]
[153.80966187 200.55795288]
[151.01287842 215.18762207]
[156.25959778 229.24009705]
[161.61077881 243.25311279]
[167.06613159 257.22592163]
[172.52149963 271.19869995]
[184.74794006 281.23986816]
[182.16928101 295.90954590]
[187.62463379 309.88235474]
[193.07998657 323.85516357]
[198.53533936 337.82794189]
[203.99070740 351.80075073]
[209.44606018 365.77352905]
[224.08561707 376.94335938]
[220.76452637 394.17523193]
[226.42732239 408.06524658]
[232.09010315 421.95529175]
[246.58908081 418.03619385]
[261.45977783 415.92861938]
[276.47677612 415.66448975]
[291.41238403 417.24783325]
[306.04022217 420.65463257]
[320.13848877 425.83322144]
[333.49353027 432.70513916]
[345.90280151 441.16616821]
[357.17825317 451.08807373]
[367.14889526 462.32040405]
[375.66363525 474.69293213]
[382.59332275 488.01803589]
[387.83297729 502.09378052]
[391.30310059 516.70672607]
[392.95114136 531.63531494]
[392.75210571 546.65332031]
[390.70895386 561.53302002]
[386.85272217 576.04882812]
[381.24185181 589.98071289]
[373.96142578 603.11749268]
[365.12176514 615.25994873]
[354.85690308 626.22412109]
[343.32244873 635.84368896]
[330.69323730 643.97283936]
[317.16079712 650.48834229]
[302.93020630 655.29144287]
[288.21722412 658.30938721]
[273.24487305 659.49627686]
[258.24017334 658.83422852]
[243.43054199 656.33325195]
[229.04054260 652.03125000]
[215.28828430 645.99346924]
[202.38224792 638.31140137]
[190.51811218 629.10150146]
[179.87571716 618.50341797]
[170.61639404 606.67785645]
[162.88052368 593.80401611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 173]
[13 172]
[14 171]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[24 162]
[25 161]
[26 160]
[28 159]
[29 158]
[31 156]
[32 155]
[33 154]
[36 151]
[37 150]
[40 147]
[41 146]
[43 144]
[44 143]
[45 142]
[70 141]
[71 140]
[72 139]
[73 138]
[75 136]
[76 134]
[77 133]
[78 132]
[79 131]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
