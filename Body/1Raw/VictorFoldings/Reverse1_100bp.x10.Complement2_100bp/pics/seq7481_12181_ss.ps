%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[-27.94904327 346.97604370]
[-27.75803566 361.98565674]
[-28.95277023 376.94885254]
[-31.52305222 391.73797607]
[-35.44695282 406.22683716]
[-40.69099045 420.29187012]
[-47.21043015 433.81301880]
[-54.94964600 446.67495728]
[-63.84260941 458.76791382]
[-73.81344604 469.98873901]
[-84.77708435 480.24169922]
[-96.63998413 489.43933105]
[-109.30094147 497.50311279]
[-122.65193176 504.36431885]
[-136.57904053 509.96432495]
[-150.96343994 514.25543213]
[-165.68243408 517.20098877]
[-180.61039734 518.77581787]
[-195.62001038 518.96661377]
[-210.58319092 517.77160645]
[-225.37226868 515.20111084]
[-239.86108398 511.27694702]
[-253.92601013 506.03265381]
[-267.44705200 499.51300049]
[-280.30886841 491.77355957]
[-292.40167236 482.88040161]
[-303.62234497 472.90939331]
[-313.87512207 461.94558716]
[-323.07254028 450.08251953]
[-331.13613892 437.42141724]
[-337.99710083 424.07034302]
[-343.59689331 410.14312744]
[-347.88772583 395.75863647]
[-350.83303833 381.03961182]
[-352.40765381 366.11160278]
[-352.59817505 351.10202026]
[-351.40292358 336.13885498]
[-348.83215332 321.34982300]
[-344.90777588 306.86105347]
[-339.66326904 292.79620361]
[-333.14337158 279.27526855]
[-325.40371704 266.41360474]
[-316.51037598 254.32093811]
[-306.53915405 243.10044861]
[-295.57516479 232.84783936]
[-283.71197510 223.65061951]
[-271.05075073 215.58724976]
[-257.69952393 208.72651672]
[-243.77223206 203.12695312]
[-229.38768005 198.83633423]
[-214.66859436 195.89128113]
[-199.74057007 194.31690979]
[-184.73095703 194.12664795]
[-169.76782227 195.32212830]
[-154.97882080 197.89315796]
[-140.49014282 201.81777954]
[-126.42538452 207.06251526]
[-112.90455627 213.58264160]
[-100.04301453 221.32249451]
[-87.95049286 230.21606445]
[-76.73015594 240.18745422]
[-65.77424622 229.94206238]
[-54.81834030 219.69667053]
[-43.86243057 209.45127869]
[-32.90652084 199.20588684]
[-32.67795181 196.41198730]
[-31.32890511 193.54028320]
[-28.82420731 191.01800537]
[-25.28384781 189.27720642]
[-20.98015404 188.70085144]
[-9.43385220 179.12573242]
[2.11244917 169.55061340]
[13.65875053 159.97549438]
[25.20505333 150.40037537]
[36.75135422 140.82524109]
[38.07920074 136.23767090]
[42.30303574 132.43553162]
[48.78695679 131.14312744]
[60.61322784 121.91603088]
[72.37047577 112.60115051]
[84.05805969 103.19899750]
[89.71420288 87.40708923]
[106.31742859 85.01770782]
[117.86372375 75.44258118]
[129.41003418 65.86746216]
[140.95632935 56.29234314]
[152.50263977 46.71722412]
[164.04893494 37.14210510]
[174.77331543 26.65460396]
[184.60389709 15.32501125]
[194.43447876 3.99541807]
[196.06286621 -2.41238141]
[200.07984924 -6.43243599]
[204.73036194 -7.51952267]
[214.89390564 -18.55139923]
[225.05746460 -29.58327675]
[228.71757507 -44.97529221]
[243.03164673 -49.09310913]
[253.19520569 -60.12498856]
[263.35873413 -71.15686798]
[253.40258789 -82.39366913]
[244.63432312 -94.58008575]
[237.14395142 -107.59105682]
[231.00833130 -121.29306793]
[226.29040527 -135.54551697]
[223.03862000 -150.20214844]
[221.28631592 -165.11256409]
[221.05149841 -180.12374878]
[222.33654785 -195.08168030]
[225.12829590 -209.83285522]
[229.39810181 -224.22590637]
[235.10214233 -238.11312866]
[242.18186951 -251.35202026]
[250.56465149 -263.80673218]
[260.16445923 -275.34945679]
[270.88281250 -285.86175537]
[282.60968018 -295.23574829]
[295.22473145 -303.37521362]
[308.59854126 -310.19668579]
[322.59384155 -315.63012695]
[337.06704712 -319.61978149]
[351.86962891 -322.12472534]
[366.84970093 -323.11923218]
[381.85348511 -322.59310913]
[396.72708130 -320.55175781]
[411.31784058 -317.01611328]
[425.47604370 -312.02249146]
[439.05639648 -305.62207031]
[451.91955566 -297.88061523]
[463.93350220 -288.87747192]
[474.97494507 -278.70510864]
[484.93063354 -267.46786499]
[493.69833374 -255.28106689]
[501.18814087 -242.26976013]
[507.32315063 -228.56748962]
[512.04046631 -214.31483459]
[515.29162598 -199.65805054]
[517.04321289 -184.74755859]
[517.27740479 -169.73635864]
[515.99169922 -154.77848816]
[513.19927979 -140.02743530]
[508.92886353 -125.63457489]
[503.22421265 -111.74760437]
[496.14389038 -98.50901794]
[487.76055908 -86.05467224]
[478.16024780 -74.51236725]
[467.44143677 -64.00054932]
[455.71417236 -54.62707901]
[443.09875488 -46.48814774]
[429.72463989 -39.66727829]
[415.72909546 -34.23445892]
[401.25570679 -30.24543762]
[386.45300293 -27.74115372]
[371.47293091 -26.74730301]
[356.46914673 -27.27408218]
[341.59564209 -29.31608963]
[327.00503540 -32.85236740]
[312.84704590 -37.84663010]
[299.26696777 -44.24762344]
[286.40417480 -51.98966980]
[274.39062500 -60.99331665]
[264.22708130 -49.96144104]
[254.06352234 -38.92956543]
[251.13037109 -24.32662392]
[236.08934021 -19.41972923]
[225.92578125 -8.38785267]
[215.76223755 2.64402437]
[205.76406860 13.82599926]
[195.93348694 25.15559196]
[186.10290527 36.48518372]
[200.61000061 32.67149734]
[215.24813843 35.94641876]
[226.74710083 45.57832718]
[232.53800964 59.41542816]
[231.32716370 74.36647797]
[223.38505554 87.09136963]
[210.48597717 94.74733734]
[195.51162720 95.62401581]
[181.80729675 89.52555084]
[172.43457031 77.81435394]
[169.48735046 63.10673904]
[173.62405396 48.68840790]
[162.07775879 58.26352692]
[150.53144836 67.83864594]
[138.98515320 77.41376495]
[127.43885040 86.98888397]
[115.89254761 96.56400299]
[114.11354065 108.07384491]
[105.09350586 115.44135284]
[93.46021271 114.88658142]
[81.77262878 124.28872681]
[77.04759979 132.10614014]
[69.84032440 133.74229431]
[58.01405334 142.96940613]
[46.32647324 152.37155151]
[34.78017044 161.94667053]
[23.23387146 171.52178955]
[11.68756866 181.09690857]
[0.14126728 190.67202759]
[-11.40503407 200.24714661]
[-22.66113091 210.16180420]
[-33.61703873 220.40719604]
[-44.57294846 230.65258789]
[-55.52885818 240.89797974]
[-66.48476410 251.14337158]
[-57.28695297 263.00610352]
[-49.22294235 275.66693115]
[-42.36154175 289.01782227]
[-36.76128387 302.94482422]
[-32.46995163 317.32916260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 205]
[62 204]
[63 203]
[64 202]
[65 201]
[70 200]
[71 199]
[72 198]
[73 197]
[74 196]
[75 195]
[78 194]
[79 193]
[80 191]
[81 190]
[83 187]
[84 186]
[85 185]
[86 184]
[87 183]
[88 182]
[89 170]
[90 169]
[91 168]
[94 167]
[95 166]
[96 165]
[98 163]
[99 162]
[100 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
