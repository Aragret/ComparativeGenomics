%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[125.75319672 702.36004639]
[117.67492676 689.68731689]
[111.57575226 675.95202637]
[107.59194183 661.46112061]
[105.81248474 646.53826904]
[106.27713776 631.51690674]
[108.97551727 616.73254395]
[113.84735107 602.51556396]
[120.78379822 589.18353271]
[129.62988281 577.03424072]
[140.18798828 566.33923340]
[152.22224426 557.33734131]
[165.46380615 550.22967529]
[179.61685181 545.17504883]
[176.73156738 530.45513916]
[173.84629822 515.73522949]
[170.96102905 501.01535034]
[156.50302124 497.35043335]
[145.02279663 487.73202515]
[138.83178711 474.02682495]
[139.20674133 458.93115234]
[146.12686157 445.44046021]
[158.26722717 436.25500488]
[155.38195801 421.53509521]
[152.49668884 406.81521606]
[142.45576477 395.81387329]
[147.39408875 380.78314209]
[144.50881958 366.06323242]
[141.62355042 351.34335327]
[138.73828125 336.62347412]
[135.85299683 321.90356445]
[123.38696289 313.83303833]
[120.25119781 298.94607544]
[128.80082703 285.92526245]
[125.91555786 271.20538330]
[123.03028107 256.48547363]
[112.98935699 245.48416138]
[117.92768860 230.45341492]
[115.04241943 215.73352051]
[112.15714264 201.01362610]
[102.11621857 190.01231384]
[107.05455017 174.98155212]
[104.16928101 160.26167297]
[91.70323944 152.19113159]
[88.56747437 137.30418396]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[77.70732117 68.28988647]
[82.64334106 54.23694992]
[79.53923035 39.56164932]
[76.43511963 24.88634682]
[60.60157776 21.14031982]
[48.03173447 10.90104294]
[41.21005630 -3.74221349]
[41.45624924 -19.83640480]
[48.67028046 -34.16021347]
[61.36255646 -43.86880112]
[58.04029846 -58.49626160]
[54.39221191 -73.04588318]
[50.42011261 -87.51040649]
[46.44801712 -101.97492981]
[42.47592163 -116.43945312]
[31.67254066 -123.48571014]
[28.66195297 -135.61502075]
[34.52873993 -146.19364929]
[30.77244186 -160.71569824]
[27.01613998 -175.23776245]
[23.25984001 -189.75982666]
[14.73390675 -177.41848755]
[0.00394724 -174.58506775]
[-12.49204826 -182.88265991]
[-15.59580708 -197.55804443]
[-7.52935410 -210.20446777]
[7.08647919 -213.57751465]
[19.87851715 -205.74569702]
[17.43279076 -220.54496765]
[14.98706341 -235.34423828]
[5.10320568 -247.69818115]
[10.66180325 -261.51669312]
[8.21607590 -276.31597900]
[5.77034855 -291.11523438]
[3.32462096 -305.91452026]
[-6.55923653 -318.26846313]
[-1.00063884 -332.08697510]
[-3.44636631 -346.88623047]
[-18.48082542 -347.91665649]
[-32.87221909 -352.38705444]
[-45.84443665 -360.05636597]
[-56.69790649 -370.51098633]
[-64.84730530 -383.18710327]
[-69.85315704 -397.40109253]
[-71.44550323 -412.38647461]
[-69.53845978 -427.33505249]
[-64.23487854 -441.44067383]
[-55.82077026 -453.94265747]
[-44.74990463 -464.16677856]
[-31.61931229 -471.56164551]
[-17.13711357 -475.72851562]
[-2.08431411 -476.44262695]
[12.72730732 -473.66546631]
[26.49897957 -467.54681396]
[38.48801422 -458.41665649]
[48.04785538 -446.76736450]
[54.66295242 -433.22714233]
[57.97656631 -418.52624512]
[57.80998993 -403.45742798]
[54.17221451 -388.83337402]
[47.25941849 -375.44271851]
[37.44440079 -364.00756836]
[25.25646782 -355.14468384]
[11.35290432 -349.33197021]
[13.79863167 -334.53268433]
[23.50755501 -323.23730469]
[18.12389183 -308.36022949]
[20.56962013 -293.56097412]
[23.01534653 -278.76168823]
[25.46107483 -263.96243286]
[35.16999817 -252.66702271]
[29.78633308 -237.78996277]
[32.23205948 -222.99069214]
[34.67778778 -208.19142151]
[37.78189850 -193.51612854]
[41.53820038 -178.99406433]
[45.29449844 -164.47200012]
[49.05080032 -149.94995117]
[62.00814438 -138.11465454]
[56.94044495 -120.41155243]
[60.91254044 -105.94702148]
[64.88463593 -91.48249817]
[68.85673523 -77.01797485]
[71.72382355 -74.96562958]
[73.73928833 -71.42261505]
[74.21333313 -66.80432892]
[72.66775513 -61.81851959]
[75.99002075 -47.19105911]
[89.64836884 -44.75843811]
[101.38497162 -37.28020096]
[109.41010284 -25.85756302]
[112.48511505 -12.19612598]
[110.11354065 1.64876986]
[102.62088776 13.58126163]
[91.11042786 21.78223610]
[94.21453857 36.45753860]
[97.31864929 51.13284302]
[107.52224731 61.98345184]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[124.66957855 130.22773743]
[127.38597107 145.19689941]
[118.88916779 157.37638855]
[121.77444458 172.09628296]
[132.02174377 184.15046692]
[126.87703705 198.12835693]
[129.76231384 212.84825134]
[132.64758301 227.56814575]
[142.89488220 239.62232971]
[137.75018311 253.60021973]
[140.63545227 268.32009888]
[143.52072144 283.04000854]
[156.35330200 291.86962891]
[159.06968689 306.83880615]
[150.57289124 319.01831055]
[153.45816040 333.73818970]
[156.34344482 348.45806885]
[159.22871399 363.17797852]
[162.11398315 377.89785767]
[172.36128235 389.95205688]
[167.21658325 403.92993164]
[170.10185242 418.64984131]
[172.98712158 433.36972046]
[187.69680786 437.29226685]
[199.19786072 447.17218018]
[205.24397278 461.00927734]
[204.68505859 476.03753662]
[197.68548584 489.27819824]
[185.68092346 498.13009644]
[188.56619263 512.84997559]
[191.45146179 527.56988525]
[194.33673096 542.28973389]
[209.35069275 541.62731934]
[224.29566956 543.21008301]
[238.83781433 547.00268555]
[252.65222168 552.92041016]
[265.43029785 560.83111572]
[276.88653564 570.55792236]
[286.76507568 581.88372803]
[294.84515381 594.55529785]
[300.94625854 608.28973389]
[304.93215942 622.78009033]
[306.71371460 637.70269775]
[306.25122070 652.72412109]
[303.55493164 667.50885010]
[298.68511963 681.72650146]
[291.75057983 695.05957031]
[282.90621948 707.21008301]
[272.34963989 717.90661621]
[260.31665039 726.91021729]
[247.07611084 734.01977539]
[232.92379761 739.07641602]
[218.17587280 741.96716309]
[203.16183472 742.62750244]
[188.21707153 741.04260254]
[173.67547607 737.24792480]
[159.86190796 731.32818604]
[147.08496094 723.41571045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 184]
[15 183]
[16 182]
[17 181]
[23 175]
[24 174]
[25 173]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[34 164]
[35 163]
[36 162]
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[46 152]
[47 151]
[48 149]
[49 148]
[51 146]
[52 145]
[53 144]
[59 137]
[60 136]
[61 132]
[62 131]
[63 130]
[64 129]
[67 127]
[68 126]
[69 125]
[70 124]
[77 123]
[78 122]
[79 121]
[81 119]
[82 118]
[83 117]
[84 116]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
