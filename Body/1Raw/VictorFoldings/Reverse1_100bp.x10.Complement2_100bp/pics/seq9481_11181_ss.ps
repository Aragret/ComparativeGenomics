%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[70.13030243 674.66534424]
[61.01557159 686.86535645]
[47.72347260 694.29772949]
[32.55693054 695.67468262]
[18.14365005 690.75762939]
[6.98081255 680.39855957]
[1.00244987 666.39215088]
[1.24434888 651.16516113]
[7.66459894 637.35571289]
[19.15085411 627.35644531]
[33.71304703 622.89971924]
[35.49551392 608.00598145]
[37.27798080 593.11230469]
[39.06044769 578.21856689]
[36.73405838 571.20361328]
[40.98192978 563.11700439]
[42.98594284 548.25146484]
[44.98995590 533.38592529]
[46.43937302 518.45611572]
[47.33219147 503.48272705]
[48.22500610 488.50930786]
[49.11782074 473.53591919]
[50.01063919 458.56250000]
[48.25297165 456.37875366]
[47.25440979 453.36718750]
[47.33458710 449.81347656]
[48.70392990 446.11355591]
[51.42855835 442.73266602]
[45.25847626 429.17614746]
[54.58084488 416.39318848]
[56.36331177 401.49948120]
[58.14577484 386.60574341]
[59.92824173 371.71203613]
[61.71070862 356.81832886]
[47.41011047 352.35366821]
[34.16991806 345.33532715]
[22.44174385 336.00103760]
[12.62592220 324.66751099]
[5.05785704 311.71981812]
[-0.00343970 297.59814453]
[-2.38421679 282.78295898]
[-2.00194502 267.77859497]
[1.13182175 253.09606934]
[6.91179037 239.23573303]
[15.14246559 226.67019653]
[25.54476357 215.82820129]
[37.76546860 207.08001709]
[51.38923645 200.72476196]
[65.95270538 196.98020935]
[80.96024323 195.97529602]
[82.74271393 181.08158875]
[84.52517700 166.18786621]
[86.30764771 151.29415894]
[88.09011078 136.40043640]
[89.87257385 121.50671387]
[91.65504456 106.61299896]
[92.21324921 91.62339020]
[91.54346466 76.63835144]
[90.87368011 61.65331268]
[90.20389557 46.66827393]
[89.53411102 31.68323517]
[81.18831635 18.24231529]
[88.34960175 5.18224907]
[87.67981720 -9.80278969]
[79.33402252 -23.24370956]
[86.49530029 -36.30377579]
[85.82551575 -51.28881454]
[83.35989380 -54.86297989]
[82.26953125 -58.65449905]
[82.45388794 -62.20434952]
[83.67367554 -65.13329315]
[85.58889008 -67.18026733]
[85.81221771 -82.17860413]
[78.28124237 -96.09243774]
[86.20717621 -108.70310211]
[86.43050385 -123.70144653]
[86.65383148 -138.69978333]
[73.27362061 -142.40199280]
[61.18163681 -149.20239258]
[51.08237076 -158.69931030]
[43.56290436 -170.33416748]
[39.05878830 -183.42425537]
[37.82880402 -197.20289612]
[39.94011688 -210.86421204]
[45.26461029 -223.61041260]
[53.48666000 -234.69824219]
[64.12184143 -243.48240662]
[76.54544830 -249.45312500]
[90.02922058 -252.26565552]
[90.69900513 -267.25070190]
[91.36878967 -282.23571777]
[92.03857422 -297.22076416]
[92.70835876 -312.20581055]
[93.37814331 -327.19085693]
[78.88236237 -331.31021118]
[65.72760010 -338.66198730]
[54.62327957 -348.84976196]
[46.16823578 -361.32409668]
[40.81844330 -375.41226196]
[38.86240768 -390.35452271]
[40.40561676 -405.34503174]
[45.36484528 -419.57537842]
[53.47265244 -432.27813721]
[64.29179382 -442.76828003]
[77.23880005 -450.48007202]
[91.61546326 -454.99761963]
[106.64646149 -456.07730103]
[121.52119446 -453.66091919]
[135.43750000 -447.87875366]
[147.64486694 -439.04263306]
[157.48497009 -427.62908936]
[164.42716980 -414.25366211]
[168.09704590 -399.63760376]
[168.29672241 -384.56921387]
[165.01539612 -369.86105347]
[158.43005371 -356.30633545]
[148.89582825 -344.63607788]
[136.92686462 -335.47961426]
[123.16867065 -329.33074951]
[108.36318207 -326.52105713]
[107.69339752 -311.53601074]
[107.02361298 -296.55099487]
[106.35382843 -281.56594849]
[105.68404388 -266.58090210]
[105.01425934 -251.59587097]
[120.38876343 -246.56611633]
[133.74151611 -237.41026306]
[143.99171448 -224.85990906]
[150.30700684 -209.92176819]
[152.17106628 -193.79698181]
[149.42587280 -177.78445435]
[142.28494263 -163.17631531]
[131.31687927 -151.15354919]
[117.40003204 -142.69062805]
[101.65216827 -138.47645569]
[101.42884064 -123.47811890]
[101.20551300 -108.47977448]
[108.75246429 -95.63871765]
[100.81055450 -81.95527649]
[100.58722687 -66.95693970]
[100.81055450 -51.95859909]
[101.48033905 -36.97356033]
[109.77822876 -24.60447121]
[102.66485596 -10.47257519]
[103.33464050 4.51246405]
[111.63252258 16.88155365]
[104.51914978 31.01344872]
[105.18893433 45.99848938]
[105.85871887 60.98352814]
[106.52850342 75.96856689]
[107.19828796 90.95360565]
[115.09461212 78.20024872]
[127.96609497 70.49797058]
[142.93721008 69.56748199]
[156.66336060 75.61665344]
[166.07810974 87.29409027]
[169.07818604 101.99102020]
[164.99333191 116.42410278]
[154.73612976 127.36896515]
[140.59808350 132.38049316]
[125.73764038 130.33908081]
[113.47467804 121.70081329]
[106.54875946 108.39546204]
[104.76629639 123.28918457]
[102.98382568 138.18290710]
[101.20136261 153.07661438]
[99.41889191 167.97033691]
[97.63642883 182.86405945]
[95.85396576 197.75776672]
[110.20053101 202.27574158]
[123.46907043 209.35121155]
[135.20837402 218.74188232]
[145.01957703 230.12683105]
[152.56962585 243.11734009]
[157.60266113 257.27026367]
[159.94865417 272.10311890]
[159.52915955 287.11047363]
[156.35992432 301.78131104]
[150.55032349 315.61627197]
[142.29956055 328.14477539]
[131.88986206 338.94091797]
[119.67679596 347.63803101]
[106.07714844 353.94110107]
[91.55471039 357.63684082]
[76.60442352 358.60076904]
[74.82196045 373.49450684]
[73.03948975 388.38821411]
[71.25702667 403.28192139]
[69.47456360 418.17565918]
[75.51715088 432.79748535]
[66.32228088 444.51513672]
[64.98404694 459.45532227]
[64.09122467 474.42871094]
[63.19841003 489.40213013]
[62.30559540 504.37554932]
[61.41278076 519.34893799]
[74.19346619 511.49694824]
[88.35221100 516.44970703]
[93.45170593 530.55627441]
[85.73280334 543.41778564]
[70.88558197 545.55322266]
[59.85548401 535.38995361]
[57.85147095 550.25549316]
[55.84745789 565.12103271]
[53.95416260 580.00103760]
[52.17169952 594.89477539]
[50.38923264 609.78845215]
[48.60676575 624.68218994]
[61.70601273 632.44940186]
[70.50826263 644.87683105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[16 204]
[17 203]
[18 202]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[28 191]
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[63 145]
[64 144]
[66 142]
[67 141]
[72 140]
[73 139]
[75 137]
[76 136]
[77 135]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
