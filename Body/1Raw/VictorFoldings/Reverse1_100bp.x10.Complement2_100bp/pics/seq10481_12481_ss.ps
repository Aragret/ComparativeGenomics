%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[78.31251526 661.60058594]
[63.40345383 659.40594482]
[49.40261078 653.83160400]
[37.06504059 645.17822266]
[27.05608940 633.91247559]
[19.91552734 620.64184570]
[16.02843857 606.08209229]
[15.60444546 591.01831055]
[18.66641617 576.26293945]
[25.04922104 562.61169434]
[34.40864563 550.80078125]
[46.23994446 541.46710205]
[59.90507126 535.11407471]
[74.66708374 532.08428955]
[75.11369324 517.09094238]
[75.56029510 502.09756470]
[76.00690460 487.10421753]
[68.65196991 474.15222168]
[76.79672241 460.58853149]
[69.44179535 447.63653564]
[77.58654785 434.07287598]
[78.03314972 419.07949829]
[67.66420746 408.44839478]
[67.90354156 393.23663330]
[79.12474060 382.43283081]
[79.57135010 367.43948364]
[80.01795197 352.44613647]
[67.40396881 346.67068481]
[57.91402817 336.49163818]
[53.00505829 323.42330933]
[53.44911957 309.42712402]
[59.21217346 296.61724854]
[69.45422363 286.94128418]
[82.65161896 281.88406372]
[83.32140350 266.89901733]
[80.47971344 260.07650757]
[84.11435699 251.69635010]
[85.00717926 236.72294617]
[85.89999390 221.74954224]
[86.68131256 206.76989746]
[87.35109711 191.78485107]
[88.02088165 176.79981995]
[85.17919159 169.97731018]
[88.81384277 161.59715271]
[89.70665741 146.62374878]
[75.80889130 141.16450500]
[64.27695465 131.67950439]
[56.23863220 119.09632111]
[52.48005295 104.64556885]
[53.36879349 89.74050140]
[58.81793976 75.83877563]
[68.29457855 64.29995728]
[80.87192535 56.25250626]
[95.31993866 52.48343658]
[96.21275330 37.51003265]
[97.10556793 22.53662682]
[94.49286652 16.46329880]
[95.22900391 10.82813072]
[98.25444031 7.13275480]
[99.59267426 -7.80743027]
[88.74969482 2.55740118]
[73.90114594 4.68360901]
[60.58518219 -2.22182989]
[53.76832199 -15.58335686]
[55.99308777 -30.41745377]
[66.42969513 -41.19136810]
[81.18554688 -43.88669586]
[94.75708008 -37.49814987]
[102.08267212 -24.40735054]
[105.18678284 -39.08265305]
[108.29089355 -53.75795364]
[111.39500427 -68.43325806]
[113.28829956 -83.31329346]
[113.95808411 -98.29833221]
[114.62786865 -113.28337097]
[115.29765320 -128.26840210]
[104.91108704 -139.87689209]
[105.80381012 -155.06431580]
[116.93473816 -164.89477539]
[109.82136536 -179.02667236]
[118.11924744 -191.39576721]
[118.78903198 -206.38079834]
[106.09545135 -212.59527588]
[96.75749207 -223.14642334]
[92.16025543 -236.41935730]
[92.96664429 -250.39935303]
[99.02194214 -262.97763062]
[109.38217163 -272.26940918]
[122.46111298 -276.89645386]
[123.35392761 -291.86987305]
[124.24674225 -306.84326172]
[125.13955688 -321.81668091]
[126.03237152 -336.79010010]
[126.92518616 -351.76348877]
[116.71260834 -363.52532959]
[117.83135223 -378.69778442]
[129.10740662 -388.36141968]
[130.00022888 -403.33483887]
[130.89303589 -418.30822754]
[131.78585815 -433.28164673]
[118.09790802 -439.89288330]
[107.98564148 -451.24237061]
[102.99109650 -465.59933472]
[103.87590790 -480.77450562]
[110.50514984 -494.45373535]
[121.86791229 -504.55108643]
[136.23146057 -509.52673340]
[151.40544128 -508.62194824]
[165.07594299 -501.97473145]
[175.15832520 -490.59869385]
[180.11508179 -476.22860718]
[179.19033813 -461.05581665]
[172.52513123 -447.39407349]
[161.13584900 -437.32669067]
[146.75926208 -432.38882446]
[145.86643982 -417.41543579]
[144.97363281 -402.44201660]
[144.08081055 -387.46862793]
[154.12863159 -376.53347778]
[153.43649292 -361.33560181]
[141.89859009 -350.87066650]
[141.00578308 -335.89727783]
[140.11296082 -320.92385864]
[139.22015381 -305.95046997]
[138.32733154 -290.97705078]
[137.43450928 -276.00366211]
[151.53991699 -268.49444580]
[160.99288940 -255.53854370]
[163.85992432 -239.69987488]
[159.51708984 -224.14030457]
[148.78495789 -211.98855591]
[133.77407837 -205.71101379]
[133.10429382 -190.72598267]
[140.26556396 -177.66590881]
[131.91976929 -164.22499084]
[142.12928772 -153.44067383]
[141.66349792 -138.23417664]
[130.28268433 -127.59862518]
[129.61289978 -112.61358643]
[128.94311523 -97.62854767]
[128.27333069 -82.64350891]
[137.27597046 -94.64153290]
[150.78327942 -101.16475677]
[165.77770996 -100.75587463]
[178.90945435 -93.50624084]
[187.24485779 -81.03543091]
[188.92175293 -66.12945557]
[183.56553650 -52.11835480]
[172.37278748 -42.13224411]
[157.84400940 -38.40203857]
[143.22496033 -41.76108170]
[131.78155518 -51.45895386]
[126.07030487 -65.32914734]
[122.96619415 -50.65384293]
[119.86208344 -35.97854233]
[116.75797272 -21.30323982]
[114.53285980 -6.46919584]
[113.19462585 8.47098923]
[112.07897949 23.42944336]
[111.18615723 38.40284729]
[110.29334259 53.37625504]
[124.19110870 58.83548737]
[135.72303772 68.32050323]
[143.76136780 80.90367889]
[147.51994324 95.35443115]
[146.63121033 110.25949860]
[141.18205261 124.16122437]
[131.70541382 135.70004272]
[119.12807465 143.74749756]
[104.68006134 147.51655579]
[103.78724670 162.48997498]
[103.00592041 177.46960449]
[102.33613586 192.45465088]
[101.66635132 207.43968201]
[104.40944672 216.15249634]
[100.87339783 222.64234924]
[99.98058319 237.61575317]
[99.08776855 252.58915710]
[98.30644226 267.56878662]
[97.63665771 282.55383301]
[112.02762604 290.14553833]
[121.63283539 303.20629883]
[124.57019806 319.09127808]
[120.30153656 334.61102295]
[109.73040009 346.67187500]
[95.01130676 352.89273071]
[94.56469727 367.88607788]
[94.11809540 382.87942505]
[104.67633820 394.33200073]
[104.00983429 409.53100586]
[93.02649689 419.52612305]
[92.57989502 434.51947021]
[99.90288544 448.54388428]
[91.79006958 461.03515625]
[99.11306000 475.05957031]
[91.00025177 487.55084229]
[90.55364990 502.54418945]
[90.10704041 517.53753662]
[89.66043091 532.53088379]
[104.21594238 536.43395996]
[117.47869873 543.58911133]
[128.73347473 553.61041260]
[137.37330627 565.95745850]
[142.93225098 579.96441650]
[145.11054993 594.87591553]
[143.79069519 609.88769531]
[139.04388428 624.19030762]
[131.12609863 637.01239014]
[120.46434021 647.66241455]
[107.63358307 655.56616211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[16 197]
[17 196]
[19 194]
[21 192]
[22 191]
[25 188]
[26 187]
[27 186]
[34 180]
[35 179]
[37 178]
[38 177]
[39 176]
[40 174]
[41 173]
[42 172]
[44 171]
[45 170]
[54 161]
[55 160]
[56 159]
[59 158]
[60 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 141]
[74 140]
[75 139]
[76 138]
[79 135]
[81 133]
[82 132]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
