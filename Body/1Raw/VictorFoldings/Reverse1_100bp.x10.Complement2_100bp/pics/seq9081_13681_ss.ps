%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[156.73536682 442.26611328]
[156.09735107 427.26370239]
[157.14312744 412.28417969]
[159.85952759 397.51593018]
[164.21238708 383.14468384]
[170.14698792 369.35116577]
[177.58868408 356.30889893]
[186.44387817 344.18182373]
[196.60122681 333.12252808]
[207.93296814 323.27005005]
[220.29661560 314.74829102]
[213.21951294 301.52276611]
[200.39270020 293.95159912]
[200.70367432 278.13345337]
[193.62657166 264.90792847]
[186.54946899 251.68240356]
[179.47236633 238.45687866]
[172.00462341 225.44792175]
[164.15286255 212.66708374]
[156.30110168 199.88623047]
[148.25993347 187.22370911]
[140.03112793 174.68231201]
[131.80232239 162.14091492]
[123.57350922 149.59950256]
[115.34470367 137.05810547]
[107.11589813 124.51670837]
[98.88708496 111.97531128]
[90.47246552 99.55781555]
[81.87390137 87.26697540]
[65.41732025 88.87094879]
[50.48295593 81.99633789]
[41.10734177 68.60549164]
[39.77185822 52.40758133]
[46.74663544 37.83140564]
[37.96603394 25.66995049]
[29.18543053 13.50849438]
[20.40482712 1.34703827]
[11.62422371 -10.81441784]
[-7.50072813 -10.05829906]
[-23.09405327 -20.89609146]
[-28.95803452 -38.79978943]
[-22.89512634 -56.47842407]
[-37.52955246 -62.49042511]
[-39.36846161 -77.27108002]
[-48.68334579 -89.02832794]
[-57.99822617 -100.78558350]
[-67.31311035 -112.54283142]
[-76.62799072 -124.30008698]
[-93.90048981 -130.68307495]
[-95.78138733 -148.13096619]
[-105.27028656 -159.74822998]
[-114.75918579 -171.36549377]
[-124.24808502 -182.98275757]
[-136.80482483 -174.75195312]
[-150.15313721 -167.87879944]
[-164.14677429 -162.43859863]
[-178.63241577 -158.49095154]
[-193.45133972 -156.07913208]
[-208.44120789 -155.22953796]
[-223.43775940 -155.95149231]
[-238.27668762 -158.23707581]
[-252.79541016 -162.06124878]
[-266.83483887 -167.38212585]
[-280.24118042 -174.14140320]
[-292.86755371 -182.26499939]
[-304.57556152 -191.66394043]
[-315.23696899 -202.23522949]
[-324.73495483 -213.86303711]
[-332.96545410 -226.41996765]
[-339.83828735 -239.76844788]
[-345.27813721 -253.76222229]
[-349.22543335 -268.24795532]
[-351.63690186 -283.06695557]
[-352.48614502 -298.05682373]
[-351.76382446 -313.05337524]
[-349.47787476 -327.89224243]
[-345.65335083 -342.41085815]
[-340.33212280 -356.45019531]
[-333.57254028 -369.85635376]
[-325.44860840 -382.48251343]
[-316.04940796 -394.19030762]
[-305.47784424 -404.85147095]
[-293.84982300 -414.34915161]
[-281.29266357 -422.57934570]
[-267.94403076 -429.45184326]
[-253.95011902 -434.89138794]
[-239.46429443 -438.83831787]
[-224.64523315 -441.24942017]
[-209.65533447 -442.09829712]
[-194.65882874 -441.37561035]
[-179.82000732 -439.08929443]
[-165.30146790 -435.26440430]
[-151.26228333 -429.94287109]
[-137.85626221 -423.18295288]
[-125.23030853 -415.05871582]
[-113.52275085 -405.65921021]
[-102.86185455 -395.08740234]
[-93.36443329 -383.45913696]
[-85.13455200 -370.90179443]
[-78.26236725 -357.55297852]
[-72.82318878 -343.55895996]
[-68.87660217 -329.07302856]
[-66.46585083 -314.25390625]
[-65.61734772 -299.26400757]
[-66.34039307 -284.26748657]
[-68.62705994 -269.42874146]
[-72.45230103 -254.91029358]
[-77.77419281 -240.87123108]
[-84.53443909 -227.46539307]
[-92.65896606 -214.83963013]
[-102.05875397 -203.13229370]
[-112.63082123 -192.47164917]
[-103.14192200 -180.85438538]
[-93.65302277 -169.23712158]
[-84.16412354 -157.61985779]
[-72.16411591 -156.09461975]
[-64.16368103 -146.49374390]
[-64.87074280 -133.61495972]
[-55.55585861 -121.85771179]
[-46.24097443 -110.10046387]
[-36.92609406 -98.34321594]
[-27.61120987 -86.58596039]
[-13.64304829 -81.41491699]
[-11.13787460 -65.79330444]
[-0.28027934 -68.35520172]
[10.79975510 -66.67266083]
[20.49574661 -60.95089340]
[27.38745689 -51.98355865]
[30.44888687 -41.04282379]
[29.20088196 -29.69897270]
[23.78567886 -19.59502029]
[32.56628418 -7.43356514]
[41.34688568 4.72789097]
[50.12749100 16.88934708]
[58.90809250 29.05080223]
[72.37360382 26.77109337]
[85.57104492 30.53359032]
[95.90925598 39.65885544]
[101.33298492 52.40881348]
[100.73133087 66.31758881]
[94.16474152 78.66841125]
[102.76330566 90.95925140]
[107.58782196 93.01789856]
[110.91547394 97.63309479]
[111.42848969 103.74649811]
[119.65729523 116.28790283]
[127.88610077 128.82929993]
[136.11491394 141.37069702]
[144.34371948 153.91209412]
[152.57252502 166.45350647]
[160.80133057 178.99490356]
[166.52470398 182.30468750]
[169.30067444 187.26361084]
[169.08195496 192.03448486]
[176.93370056 204.81532288]
[184.78546143 217.59616089]
[188.67489624 219.52651978]
[191.46694946 222.31381226]
[193.02696228 225.50782776]
[193.38035583 228.66087341]
[192.69789124 231.37976074]
[199.77499390 244.60530090]
[206.85209656 257.83081055]
[213.92919922 271.05633545]
[227.26220703 279.57348633]
[226.44503784 294.44564819]
[233.52214050 307.67117310]
[247.47143555 302.11264038]
[261.95538330 298.15090942]
[276.79183960 295.83578491]
[291.79418945 295.19644165]
[306.77383423 296.24087524]
[321.54232788 298.95593262]
[335.91394043 303.30752563]
[349.70797729 309.24087524]
[362.75094604 316.68139648]
[374.87878418 325.53552246]
[385.93899536 335.69186401]
[395.79251099 347.02273560]
[404.31536865 359.38558960]
[411.40042114 372.62503052]
[416.95855713 386.57446289]
[420.91986084 401.05853271]
[423.23449707 415.89505005]
[423.87341309 430.89746094]
[422.82855225 445.87704468]
[420.11303711 460.64544678]
[415.76101685 475.01696777]
[409.82723999 488.81082153]
[402.38632202 501.85354614]
[393.53186035 513.98114014]
[383.37518311 525.04101562]
[372.04400635 534.89422607]
[359.68087769 543.41668701]
[346.44125366 550.50134277]
[332.49163818 556.05908203]
[318.00744629 560.01995850]
[303.17086792 562.33416748]
[288.16845703 562.97259521]
[273.18890381 561.92730713]
[258.42056274 559.21130371]
[244.04919434 554.85888672]
[230.25552368 548.92468262]
[217.21301270 541.48339844]
[205.08569336 532.62854004]
[194.02607727 522.47155762]
[184.17324829 511.14010620]
[175.65112305 498.77670288]
[168.56686401 485.53686523]
[163.00956726 471.58709717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 167]
[12 166]
[14 164]
[15 163]
[16 162]
[17 161]
[18 156]
[19 155]
[20 154]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[28 142]
[29 141]
[34 135]
[35 134]
[36 133]
[37 132]
[38 131]
[42 124]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[50 115]
[51 114]
[52 113]
[53 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
