%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[75.23975372 640.49139404]
[71.44081116 655.23883057]
[61.96688080 667.16210938]
[48.45938110 674.19543457]
[33.25857162 675.12017822]
[18.99807739 669.77624512]
[8.14861774 659.08935547]
[2.58992791 644.91119385]
[3.28508401 629.69812012]
[10.11364651 616.08599854]
[21.89252472 606.43310547]
[36.58095551 602.41192627]
[38.80607605 587.57788086]
[41.03119278 572.74383545]
[43.25630951 557.90979004]
[45.48142624 543.07574463]
[31.62663460 537.40716553]
[19.52392197 528.58190918]
[9.87935638 517.10961914]
[3.25688863 503.65423584]
[0.04536751 488.99606323]
[0.43571553 473.98620605]
[4.40958261 459.49728394]
[11.74016190 446.37265015]
[22.00512695 435.37734985]
[34.61096573 427.15347290]
[48.82728958 422.18270874]
[63.82915878 420.75811768]
[66.05427551 405.92407227]
[60.29055786 392.18984985]
[69.98938751 379.69012451]
[62.69574738 363.72860718]
[74.28603363 349.41961670]
[76.29004669 334.55410767]
[70.32248688 320.90722656]
[79.83413696 308.26446533]
[81.83815002 293.39895630]
[83.84216309 278.53341675]
[85.18039703 263.59323120]
[85.85018158 248.60818481]
[86.51996613 233.62315369]
[87.18975067 218.63810730]
[87.85953522 203.65307617]
[88.52931976 188.66802979]
[81.36804199 175.60797119]
[89.71383667 162.16705322]
[90.38362122 147.18200684]
[91.05340576 132.19697571]
[91.72319031 117.21193695]
[82.02297211 106.44847870]
[82.66996765 91.97340393]
[93.29177094 82.11827850]
[93.96155548 67.13323975]
[94.63134003 52.14820099]
[95.30112457 37.16316223]
[95.97090912 22.17812538]
[88.85753632 8.04622841]
[97.15542603 -4.32286072]
[97.82521057 -19.30789948]
[96.26468658 -34.22650528]
[83.05617523 -47.05680847]
[88.40141296 -63.77193451]
[84.42931366 -78.23645782]
[80.45722198 -92.70098114]
[76.48512268 -107.16550446]
[72.51302338 -121.63002777]
[68.54093170 -136.09455872]
[63.21469498 -122.07202911]
[51.65349579 -112.51490021]
[36.87940979 -109.92137146]
[22.75434494 -114.96939087]
[12.97055817 -126.33941650]
[10.08550835 -141.05935669]
[14.85334015 -155.28144836]
[26.02775574 -165.28805542]
[40.68778610 -168.46351624]
[55.00133896 -163.97772217]
[65.22646332 -153.00407410]
[63.44400024 -167.89779663]
[61.66153336 -182.79150391]
[57.53453064 -190.94047546]
[59.96510315 -197.92002869]
[58.40458298 -212.83863831]
[56.84405899 -227.75723267]
[55.28353500 -242.67584229]
[42.01272964 -250.49836731]
[35.96342087 -264.47189331]
[39.26314545 -279.15438843]
[50.44198227 -288.96109009]
[48.88145828 -303.87969971]
[47.32093811 -318.79830933]
[32.43743134 -321.32492065]
[18.78801155 -327.77441406]
[7.38555622 -337.66818237]
[-0.92379582 -350.27203369]
[-5.52343607 -364.65069580]
[-6.07204056 -379.73718262]
[-2.52889967 -394.41192627]
[4.84306240 -407.58602905]
[15.49679661 -418.28186035]
[28.64172554 -425.70568848]
[43.30241013 -429.30667114]
[58.39092636 -428.81753540]
[72.78760529 -424.27459717]
[85.42412567 -416.01501465]
[95.36277008 -404.65164185]
[101.86602020 -391.02777100]
[104.45129395 -376.15432739]
[102.92675018 -361.13507080]
[97.40551758 -347.08450317]
[88.29730988 -335.04525757]
[76.27801514 -325.91076660]
[62.23954010 -320.35882568]
[63.80006409 -305.44021606]
[65.36058807 -290.52160645]
[78.32685089 -283.24053955]
[84.59355164 -269.55871582]
[81.56687927 -254.63583374]
[70.20214081 -244.23635864]
[71.76266479 -229.31776428]
[73.32318878 -214.39915466]
[74.88371277 -199.48054504]
[76.55525208 -184.57397461]
[78.33771515 -169.68025208]
[80.12017822 -154.78654480]
[83.00545502 -140.06665039]
[86.97754669 -125.60212708]
[90.94964600 -111.13760376]
[94.92174530 -96.67308044]
[98.89383698 -82.20855713]
[102.86593628 -67.74402618]
[113.22055054 -61.49034882]
[116.64814758 -49.47222519]
[110.78674316 -37.98280334]
[114.05651855 -52.62208557]
[121.26774597 -65.77496338]
[131.85171509 -76.40415192]
[144.97373962 -83.67137909]
[159.59895325 -87.00352478]
[174.57394409 -86.13780975]
[188.71774292 -81.14249420]
[200.91488647 -72.41154480]
[210.20347595 -60.63350677]
[215.85096741 -46.73725128]
[217.41197205 -31.81869888]
[214.76338196 -17.05438232]
[208.11408997 -3.60868120]
[197.98847961 7.45802164]
[185.18508911 15.27296066]
[170.71365356 19.21981621]
[155.71545410 18.98732185]
[141.37332153 14.59381485]
[128.81831360 6.38578558]
[119.04057312 -4.98944807]
[112.81024933 -18.63811493]
[112.14046478 -3.65307546]
[119.30174255 9.40699100]
[110.95594788 22.84790993]
[110.28616333 37.83295059]
[109.61637878 52.81798935]
[108.94659424 67.80302429]
[108.27680969 82.78806305]
[117.97702789 93.55152130]
[117.33003235 108.02659607]
[106.70822906 117.88172150]
[106.03844452 132.86676025]
[105.36865997 147.85179138]
[104.69887543 162.83683777]
[111.81224823 176.96873474]
[103.51435852 189.33781433]
[102.84457397 204.32286072]
[102.17478943 219.30789185]
[101.50500488 234.29293823]
[100.83522034 249.27798462]
[100.16543579 264.26303101]
[111.93708801 254.96633911]
[126.85010529 256.57937622]
[136.36163330 268.17813110]
[135.02304077 283.11828613]
[123.60113525 292.84143066]
[108.63889313 291.77774048]
[98.70769501 280.53741455]
[96.70368195 295.40295410]
[94.69966125 310.26849365]
[100.52388763 324.97863770]
[91.15557098 336.55810547]
[89.15155792 351.42364502]
[96.33673096 362.13513184]
[94.36154938 374.47540283]
[84.82343292 381.91522217]
[90.42799377 396.71047974]
[80.88832092 408.14920044]
[78.66320038 422.98321533]
[92.58686066 428.74667358]
[104.71910095 437.66973877]
[114.35727692 449.23022461]
[120.94445801 462.75335693]
[124.10164642 477.45117188]
[123.64957428 492.46838379]
[119.61885071 506.93218994]
[112.24796295 520.00299072]
[101.96914673 530.92315674]
[89.38306427 539.06085205]
[75.22367859 543.94671631]
[60.31546783 545.30090332]
[58.09035110 560.13488770]
[55.86523438 574.96893311]
[53.64011765 589.80297852]
[51.41500092 604.63702393]
[64.27718353 612.79083252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[28 193]
[29 192]
[31 190]
[33 187]
[34 186]
[36 184]
[37 183]
[38 182]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[46 168]
[47 167]
[48 166]
[49 165]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[58 156]
[59 155]
[60 134]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[78 125]
[79 124]
[80 123]
[82 122]
[83 121]
[84 120]
[85 119]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
