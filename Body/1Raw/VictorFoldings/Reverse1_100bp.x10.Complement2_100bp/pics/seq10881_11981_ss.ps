%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[130.34545898 737.86602783]
[116.74597168 731.51007080]
[103.81224060 723.89013672]
[91.66139984 715.07525635]
[80.40350342 705.14526367]
[70.14049530 694.19012451]
[60.96532822 682.30902100]
[52.96109390 669.60949707]
[46.20027924 656.20666504]
[40.74411392 642.22186279]
[36.64201355 627.78173828]
[33.93112564 613.01702881]
[32.63600159 598.06152344]
[32.76837158 583.05065918]
[34.32703400 568.12030029]
[37.29787445 553.40570068]
[41.65399170 539.04016113]
[47.35593033 525.15374756]
[54.35205078 511.87219238]
[62.57899857 499.31585693]
[71.96226501 487.59838867]
[82.41687012 476.82589722]
[93.84812927 467.09600830]
[106.15252686 458.49679565]
[119.21862793 451.10614014]
[132.92810059 444.99096680]
[147.15676880 440.20666504]
[161.77580261 436.79656982]
[159.77178955 421.93106079]
[157.76777649 407.06552124]
[155.76376343 392.20001221]
[153.75975037 377.33447266]
[136.52125549 366.35150146]
[132.94432068 345.92846680]
[145.78291321 329.27487183]
[142.89762878 314.55496216]
[140.01235962 299.83508301]
[137.12709045 285.11520386]
[134.24182129 270.39529419]
[131.35653687 255.67541504]
[128.47126770 240.95552063]
[125.14900970 226.32806396]
[121.39270782 211.80599976]
[117.52840424 197.31230164]
[113.55631256 182.84777832]
[109.58421326 168.38325500]
[105.61211395 153.91873169]
[101.97810364 150.81987000]
[100.25220490 145.40522766]
[101.74396515 138.96424866]
[98.20429230 124.38787842]
[94.66461945 109.81150055]
[91.01653290 95.26187897]
[87.26023102 80.73982239]
[71.27520752 77.70453644]
[58.26069641 68.03674316]
[50.79196548 53.71269608]
[50.31927109 37.62356567]
[56.88651276 22.99192047]
[69.13262177 12.72627544]
[65.16052246 -1.73824859]
[61.18842697 -16.20277214]
[58.20572662 -1.50231385]
[51.41671753 11.87338734]
[41.31150818 22.95872688]
[28.61960411 30.95344543]
[14.25723934 35.28039551]
[-0.73875058 35.62721252]
[-15.28579330 31.96886063]
[-28.33372498 24.56943703]
[-38.94060516 13.96311378]
[-46.34071350 0.91556960]
[-49.99982834 -13.63128090]
[-49.65379715 -28.62728882]
[-45.32759857 -42.98987961]
[-37.33354568 -55.68220520]
[-26.24873734 -65.78799438]
[-12.87339306 -72.57770538]
[1.82690918 -75.56118011]
[16.79094124 -74.52303314]
[30.93843651 -69.53822327]
[43.24807739 -60.96659851]
[52.83121872 -49.42695236]
[58.99637222 -35.75122833]
[59.66615677 -50.73626709]
[60.33594513 -65.72130585]
[61.00572968 -80.70634460]
[61.67551422 -95.69138336]
[59.26846695 -100.32314301]
[58.91420364 -104.95216370]
[60.26791763 -108.79696655]
[62.72462845 -111.32617950]
[64.06285858 -126.26636505]
[65.40109253 -141.20654297]
[66.73932648 -156.14672852]
[64.38801575 -164.97334290]
[68.21032715 -171.29882812]
[69.77085114 -186.21743774]
[71.33137512 -201.13603210]
[57.42270660 -207.05552673]
[45.87783813 -216.81295776]
[37.72333145 -229.54069519]
[33.68427658 -244.10700989]
[34.11982727 -259.21667480]
[38.99125290 -273.52612305]
[47.86538696 -285.76300049]
[59.95315170 -294.83920288]
[74.17971039 -299.94766235]
[89.28004456 -300.63418579]
[103.91144562 -296.83764648]
[116.77289581 -288.89572144]
[126.72077179 -277.51452637]
[132.87051392 -263.70611572]
[134.67527771 -248.69831848]
[131.97459412 -233.82560730]
[125.00860596 -220.41044617]
[114.39672852 -209.64572144]
[101.08255768 -202.48860168]
[86.24997711 -199.57551575]
[84.68945312 -184.65690613]
[83.12893677 -169.73831177]
[81.67951202 -154.80850220]
[80.34127808 -139.86831665]
[79.00304413 -124.92813110]
[77.66481018 -109.98794556]
[76.66055298 -95.02159882]
[75.99076843 -80.03656006]
[75.32098389 -65.05152130]
[74.65119934 -50.06648254]
[73.98141479 -35.08144379]
[75.65295410 -20.17486954]
[79.62504578 -5.71034479]
[83.59714508 8.75417900]
[97.35049438 10.57449818]
[109.40931702 17.52120972]
[117.93649292 28.57411194]
[121.61845398 42.08461761]
[119.86744690 56.02159882]
[112.91507721 68.27675629]
[101.78228760 76.98352051]
[105.53858948 91.50557709]
[110.44554138 97.90045166]
[109.24099731 106.27182770]
[112.78067017 120.84820557]
[116.32034302 135.42457581]
[120.07663727 149.94664001]
[124.04873657 164.41116333]
[128.02082825 178.87568665]
[131.99293518 193.34020996]
[137.28309631 200.78681946]
[135.91476440 208.04969788]
[139.67106628 222.57176208]
[142.82296753 225.55831909]
[144.67434692 229.04212952]
[145.22859192 232.55328369]
[144.64132690 235.67124939]
[143.19116211 238.07025146]
[146.07643127 252.79013062]
[148.96170044 267.51004028]
[151.84698486 282.22991943]
[154.73225403 296.94979858]
[157.61752319 311.66970825]
[160.50279236 326.38958740]
[169.77648926 329.24075317]
[177.32943726 335.23767090]
[182.15032959 343.52355957]
[183.61334229 352.93896484]
[181.55918884 362.18399048]
[176.31118774 369.99780273]
[168.62527466 375.33044434]
[170.62928772 390.19598389]
[172.63330078 405.06152344]
[174.63731384 419.92703247]
[176.64132690 434.79257202]
[191.64149475 434.20971680]
[206.62915039 435.05535889]
[221.46855164 437.32186890]
[236.02529907 440.98870850]
[250.16757202 446.02267456]
[263.76730347 452.37814331]
[276.70132446 459.99761963]
[288.85247803 468.81204224]
[300.11071777 478.74160767]
[310.37414551 489.69638062]
[319.54974365 501.57717896]
[327.55444336 514.27636719]
[334.31573486 527.67895508]
[339.77239990 541.66357422]
[343.87503052 556.10357666]
[346.58645630 570.86816406]
[347.88214111 585.82360840]
[347.75030518 600.83453369]
[346.19219971 615.76495361]
[343.22189331 630.47961426]
[338.86630249 644.84533691]
[333.16485596 658.73193359]
[326.16921997 672.01373291]
[317.94274902 684.57037354]
[308.55990601 696.28820801]
[298.10568237 707.06103516]
[286.67477417 716.79138184]
[274.37069702 725.39105225]
[261.30487061 732.78216553]
[247.59562683 738.89782715]
[233.36711121 743.68267822]
[218.74821472 747.09326172]
[203.87130737 749.09881592]
[188.87110901 749.68115234]
[173.88349915 748.83496094]
[159.04417419 746.56787109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[42 152]
[43 151]
[44 149]
[45 148]
[46 147]
[47 146]
[50 145]
[51 144]
[52 143]
[53 141]
[54 140]
[60 133]
[61 132]
[62 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
