%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[98.89178467 583.32318115]
[91.26348877 596.47149658]
[79.18119812 605.69573975]
[64.48736572 609.58929443]
[49.42270279 607.55841064]
[36.28445816 599.91284180]
[27.07612038 587.81842041]
[23.20189285 573.11950684]
[25.25256729 558.05749512]
[32.91543198 544.92932129]
[45.02194977 535.73693848]
[59.72597504 531.88201904]
[61.72998810 517.01647949]
[63.73400116 502.15097046]
[54.52733231 490.49880981]
[56.34792328 475.39450073]
[68.63220215 465.81671143]
[70.63621521 450.95117188]
[72.64022827 436.08563232]
[66.67266846 422.43875122]
[76.18431854 409.79602051]
[66.97765350 398.14385986]
[68.79824066 383.03955078]
[81.08251953 373.46176147]
[83.08654022 358.59622192]
[85.09055328 343.73068237]
[87.09456635 328.86517334]
[89.09857941 313.99963379]
[91.10259247 299.13409424]
[93.10660553 284.26858521]
[94.99990082 269.38854980]
[95.66968536 254.40350342]
[95.22307587 239.41015625]
[94.77647400 224.41680908]
[81.84109497 219.40240479]
[71.76210785 209.80625916]
[66.08399963 197.05328369]
[65.69420624 183.05548096]
[70.68458557 169.92529297]
[80.33255005 159.65686035]
[93.20553589 153.82307434]
[92.98220825 138.82473755]
[92.75888062 123.82640076]
[92.53555298 108.82806396]
[84.26301575 121.34066010]
[71.16792297 128.65629578]
[56.17574310 129.14062500]
[42.63577271 122.68545532]
[33.57287598 110.73288727]
[31.01172638 95.95314789]
[35.52449036 81.64808655]
[46.10300827 71.01347351]
[60.38400650 66.42510986]
[75.17707825 68.90805817]
[87.17741394 77.90761566]
[93.70410919 91.41327667]
[95.92922211 76.57923126]
[98.15434265 61.74518967]
[100.26896667 46.89498901]
[102.27297974 32.02946091]
[104.27699280 17.16393471]
[105.94853210 2.25735998]
[107.28676605 -12.68282509]
[100.81151581 -27.11825562]
[109.65343475 -39.10448837]
[110.99166870 -54.04467010]
[99.14785767 -61.48691177]
[91.70158386 -73.24995422]
[90.05783081 -87.00772858]
[94.48077393 -100.06861115]
[104.05327606 -109.90202332]
[116.86637115 -114.62871552]
[118.42689514 -129.54731750]
[119.98741913 -144.46592712]
[121.54794312 -159.38452148]
[123.10846710 -174.30313110]
[124.22411346 -189.26158142]
[124.89389801 -204.24662781]
[125.56368256 -219.23165894]
[126.23346710 -234.21670532]
[126.90325165 -249.20173645]
[127.57303619 -264.18676758]
[128.24282837 -279.17181396]
[125.49972534 -287.88464355]
[129.03578186 -294.37448120]
[129.92858887 -309.34790039]
[130.82141113 -324.32128906]
[118.91265106 -315.20089722]
[104.02530670 -317.03579712]
[94.68751526 -328.77487183]
[96.24839783 -343.69345093]
[107.81380463 -353.24548340]
[122.75854492 -351.95913696]
[132.52130127 -340.57220459]
[134.74641418 -355.40625000]
[136.97152710 -370.24029541]
[122.86956787 -375.51553345]
[110.17276001 -383.60781860]
[99.43616486 -394.16333008]
[91.12913513 -406.72067261]
[85.61482239 -420.73089600]
[83.13428497 -435.58151245]
[83.79596710 -450.62332153]
[87.57093811 -465.19876099]
[94.29417419 -478.67062378]
[103.67176056 -490.45004272]
[115.29375458 -500.02203369]
[128.65208435 -506.96817017]
[143.16279602 -510.98474121]
[158.19152832 -511.89624023]
[173.08129883 -509.66275024]
[187.18119812 -504.38195801]
[199.87481689 -496.28469849]
[210.60725403 -485.72494507]
[218.90934753 -473.16433716]
[224.41813660 -459.15194702]
[226.89283752 -444.30035400]
[226.22523499 -429.25881958]
[222.44453430 -414.68487549]
[215.71600342 -401.21563721]
[206.33378601 -389.43991089]
[194.70802307 -379.87249756]
[181.34695435 -372.93164062]
[166.83467102 -368.92074585]
[151.80557251 -368.01516724]
[149.58045959 -353.18112183]
[147.35534668 -338.34707642]
[145.79481506 -323.42849731]
[144.90200806 -308.45507812]
[144.00918579 -293.48165894]
[143.22785950 -278.50204468]
[142.55807495 -263.51699829]
[141.88829041 -248.53195190]
[141.21850586 -233.54692078]
[140.54872131 -218.56187439]
[139.87893677 -203.57684326]
[139.20915222 -188.59179688]
[140.99914551 -186.43446350]
[142.04241943 -183.43811035]
[142.01516724 -179.88357544]
[140.70106506 -176.16368103]
[138.02706909 -172.74261475]
[136.46655273 -157.82400513]
[134.90602112 -142.90539551]
[133.34550476 -127.98679352]
[131.78497314 -113.06819153]
[145.09068298 -103.89919281]
[151.99659729 -89.18647003]
[150.53208923 -72.90543365]
[141.00257874 -59.50827026]
[125.93184662 -52.70643616]
[124.59361267 -37.76625443]
[131.16459656 -24.39944458]
[122.22695160 -11.34459114]
[120.88871765 3.59559417]
[122.85682678 6.52115107]
[123.50569916 10.54533005]
[122.33440399 15.03769779]
[119.14252472 19.16794777]
[117.13851166 34.03347778]
[115.13449860 48.89900589]
[117.35618591 55.94782639]
[112.98838806 63.97030640]
[110.76326752 78.80435181]
[108.53815460 93.63838959]
[107.53388977 108.60473633]
[107.75721741 123.60307312]
[107.98054504 138.60140991]
[108.20387268 153.59974670]
[123.02119446 160.32142639]
[133.38676453 172.78732300]
[137.26440430 188.46929932]
[133.92706299 204.21559143]
[124.09254456 216.88429260]
[109.76982117 223.97019958]
[110.21642303 238.96354675]
[110.66303253 253.95689392]
[119.14785767 241.58726501]
[132.63781738 235.02824402]
[147.60667419 235.99432373]
[160.14160156 244.23298645]
[166.96600342 257.59066772]
[166.29598999 272.57568359]
[158.30671692 285.27102661]
[145.08653259 292.35812378]
[130.09118652 291.98443604]
[117.24042511 284.24765015]
[109.89361572 271.17102051]
[111.98108673 280.06372070]
[107.97212982 286.27258301]
[105.96811676 301.13812256]
[103.96410370 316.00366211]
[101.96009064 330.86917114]
[99.95607758 345.73471069]
[97.95206451 360.60021973]
[95.94805145 375.46575928]
[105.25753784 387.95458984]
[103.01342010 403.00180054]
[91.04985046 411.80001831]
[96.87406921 426.51019287]
[87.50576019 438.08966064]
[85.50174713 452.95520020]
[83.49773407 467.82070923]
[92.80722046 480.30957031]
[90.56310272 495.35678101]
[78.59952545 504.15496826]
[76.59551239 519.02050781]
[74.59149933 533.88604736]
[87.74981689 541.49700928]
[96.98993683 553.56719971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[17 203]
[18 202]
[19 201]
[21 199]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 188]
[32 177]
[33 176]
[34 175]
[41 169]
[42 168]
[43 167]
[44 166]
[56 165]
[57 164]
[58 163]
[59 161]
[60 160]
[61 159]
[62 155]
[63 154]
[65 152]
[66 151]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[85 130]
[86 129]
[87 128]
[94 127]
[95 126]
[96 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
