%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[234.07118225 368.40750122]
[240.63020325 354.89974976]
[248.66040039 342.21133423]
[258.06076050 330.50180054]
[268.71310425 319.91845703]
[259.39822388 308.16119385]
[245.43006897 302.99014282]
[242.92489624 287.36853027]
[233.61001587 275.61129761]
[224.20785522 263.92370605]
[214.71896362 252.30644226]
[199.91990662 251.07221985]
[190.13131714 239.42582703]
[191.52622986 223.91157532]
[182.03733826 212.29431152]
[167.23828125 211.06007385]
[157.44969177 199.41369629]
[158.84460449 183.89944458]
[149.35571289 172.28218079]
[139.86680603 160.66491699]
[130.37791443 149.04765320]
[120.88901520 137.43038940]
[111.40011597 125.81313324]
[101.91121674 114.19586945]
[88.90633392 109.06123352]
[86.47151947 95.29302979]
[82.35905457 93.89961243]
[79.21965027 91.51033020]
[77.24689484 88.55336761]
[76.47541046 85.47579956]
[76.78852081 82.69010162]
[68.00791931 70.52864838]
[59.22731781 58.36719131]
[44.00099182 59.81850433]
[30.18381882 53.49532700]
[21.44490051 41.18688965]
[20.04953575 26.25675392]
[26.27277184 12.72394466]
[17.49216843 0.56248927]
[8.71156502 -11.59896660]
[-0.06903848 -23.76042175]
[-8.93993378 -35.85617447]
[-17.90062904 -47.88555145]
[-34.97542191 -54.77997208]
[-36.33599854 -72.27613831]
[-45.47480011 -84.17076874]
[-54.61360550 -96.06539917]
[-63.84070206 -107.89167023]
[-73.15558624 -119.64892578]
[-82.47046661 -131.40617371]
[-95.05738831 -123.22669220]
[-108.35494232 -116.26181793]
[-122.24627686 -110.57276917]
[-136.60931396 -106.20953369]
[-151.31781006 -103.21046448]
[-166.24252319 -101.60191345]
[-181.25228882 -101.39801788]
[-196.21517944 -102.60057068]
[-210.99972534 -105.19900513]
[-225.47596741 -109.17048645]
[-239.51670837 -114.48010254]
[-252.99855042 -121.08119965]
[-265.80300903 -128.91577148]
[-277.81756592 -137.91494751]
[-288.93658447 -147.99964905]
[-299.06240845 -159.08126831]
[-308.10604858 -171.06239319]
[-315.98797607 -183.83773804]
[-322.63897705 -197.29502869]
[-328.00057983 -211.31600952]
[-332.02563477 -225.77745056]
[-334.67880249 -240.55226135]
[-335.93679810 -255.51060486]
[-335.78848267 -270.52102661]
[-334.23522949 -285.45159912]
[-331.29067993 -300.17111206]
[-326.98068237 -314.55020142]
[-321.34310913 -328.46249390]
[-314.42755127 -341.78576660]
[-306.29473877 -354.40289307]
[-297.01617432 -366.20300293]
[-286.67337036 -377.08239746]
[-275.35726929 -386.94546509]
[-263.16726685 -395.70553589]
[-250.21052551 -403.28558350]
[-236.60090637 -409.61901855]
[-222.45800781 -414.65020752]
[-207.90611267 -418.33489990]
[-193.07312012 -420.64071655]
[-178.08938599 -421.54742432]
[-163.08657837 -421.04702759]
[-148.19656372 -419.14392090]
[-133.55018616 -415.85485840]
[-119.27616119 -411.20867920]
[-105.49993896 -405.24630737]
[-92.34258270 -398.02008057]
[-79.91972351 -389.59350586]
[-68.34053040 -380.04064941]
[-57.70677948 -369.44546509]
[-48.11191177 -357.90109253]
[-39.64024734 -345.50894165]
[-32.36624527 -332.37792969]
[-26.35382271 -318.62347412]
[-21.65582466 -304.36642456]
[-18.31353378 -289.73208618]
[-16.35632706 -274.84909058]
[-15.80140114 -259.84820557]
[-16.65363503 -244.86126709]
[-18.90553856 -230.02000427]
[-22.53731918 -215.45481873]
[-27.51706505 -201.29371643]
[-33.80100632 -187.66116333]
[-41.33392715 -174.67695618]
[-50.04961777 -162.45520020]
[-59.87148666 -151.10331726]
[-70.71321869 -140.72105408]
[-61.39833450 -128.96380615]
[-52.08345032 -117.20655823]
[-45.46582413 -113.91584015]
[-42.71897125 -105.20420837]
[-33.58016968 -93.30957031]
[-24.44136620 -81.41493988]
[-12.49209118 -79.53308105]
[-4.78105736 -69.69826508]
[-5.87125206 -56.84624863]
[3.08944368 -44.81687164]
[9.60616112 -41.33058548]
[12.09241772 -32.54102707]
[20.87302017 -20.37957001]
[29.65362358 -8.21811390]
[38.43422699 3.94334173]
[53.23786163 2.29469681]
[66.97044373 8.31732464]
[75.90367889 20.48546600]
[77.55770874 35.59046555]
[71.38877106 49.58658981]
[80.16937256 61.74804306]
[88.94998169 73.90950012]
[98.08878326 85.80413055]
[111.09366608 90.93876648]
[113.52848053 104.70697021]
[123.01737976 116.32423401]
[132.50628662 127.94149780]
[141.99517822 139.55876160]
[151.48406982 151.17602539]
[160.97297668 162.79328918]
[170.46186829 174.41055298]
[185.94227600 176.14115906]
[195.39987183 188.05789185]
[193.65460205 202.80541992]
[203.14349365 214.42268372]
[218.62390137 216.15328979]
[228.08149719 228.07002258]
[226.33622742 242.81755066]
[235.82511902 254.43481445]
[243.67749023 259.10153198]
[245.36726379 266.29641724]
[254.68214417 278.05364990]
[269.31655884 284.06567383]
[271.15548706 298.84631348]
[280.47036743 310.60357666]
[293.20974731 302.65444946]
[306.75903320 296.18170166]
[320.94787598 291.26672363]
[335.59777832 287.97131348]
[350.52456665 286.33694458]
[365.54049683 286.38415527]
[380.45669556 288.11233521]
[395.08563232 291.49978638]
[409.24328613 296.50387573]
[422.75161743 303.06167603]
[435.44076538 311.09072876]
[447.15112305 320.49005127]
[457.73544312 331.14144897]
[467.06060791 342.91094971]
[475.00933838 355.65054321]
[481.48168945 369.20004272]
[486.39624023 383.38903809]
[489.69119263 398.03906250]
[491.32513428 412.96588135]
[491.27749634 427.98181152]
[489.54885864 442.89794922]
[486.16098022 457.52676392]
[481.15646362 471.68429565]
[474.59826660 485.19241333]
[466.56881714 497.88131714]
[457.16912842 509.59140015]
[446.51742554 520.17541504]
[434.74765015 529.50024414]
[422.00781250 537.44860840]
[408.45812988 543.92053223]
[394.26898193 548.83465576]
[379.61886597 552.12915039]
[364.69198608 553.76263428]
[349.67605591 553.71453857]
[334.75994873 551.98547363]
[320.13125610 548.59716797]
[305.97387695 543.59222412]
[292.46594238 537.03363037]
[279.77728271 529.00378418]
[268.06747437 519.60375977]
[257.48379517 508.95175171]
[248.15933228 497.18167114]
[240.21136475 484.44158936]
[233.73982239 470.89172363]
[228.82612610 456.70245361]
[225.53202820 442.05221558]
[223.89900208 427.12530518]
[223.94755554 412.10937500]
[225.67707825 397.19332886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 161]
[6 160]
[8 158]
[9 157]
[10 155]
[11 154]
[14 151]
[15 150]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[26 139]
[31 138]
[32 137]
[33 136]
[38 131]
[39 130]
[40 129]
[41 128]
[42 126]
[43 125]
[45 122]
[46 121]
[47 120]
[48 118]
[49 117]
[50 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
