%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[50.40774918 361.38555908]
[49.66607285 376.38320923]
[47.24982834 391.20352173]
[43.18939209 405.66012573]
[37.53583527 419.57116699]
[30.36025429 432.76171875]
[21.75289154 445.06591797]
[11.82199192 456.32901001]
[0.69244844 466.40936279]
[-11.49577332 475.18017578]
[-24.58939362 482.53115845]
[-38.42374802 488.36990356]
[-52.82485199 492.62292480]
[-67.61160278 495.23675537]
[-82.59803009 496.17852783]
[-97.59567261 495.43640137]
[-112.41591644 493.01971436]
[-126.87237549 488.95886230]
[-140.78326416 483.30487061]
[-153.97361755 476.12890625]
[-166.27755737 467.52117920]
[-177.54034424 457.58993530]
[-187.62036133 446.46008301]
[-196.39080811 434.27160645]
[-203.74140930 421.17776489]
[-209.57972717 407.34323120]
[-213.83230591 392.94201660]
[-216.44570923 378.15518188]
[-217.38703918 363.16873169]
[-216.64447021 348.17111206]
[-214.22732544 333.35092163]
[-210.16603088 318.89459229]
[-204.51164246 304.98388672]
[-197.33528137 291.79373169]
[-188.72717285 279.49005127]
[-178.79560852 268.22756958]
[-167.66545105 258.14788818]
[-155.47671509 249.37779236]
[-142.38264465 242.02758789]
[-128.54794312 236.18968201]
[-114.14658356 231.93753052]
[-99.35968781 229.32456970]
[-84.37319946 228.38369751]
[-69.37560272 229.12670898]
[-54.55550385 231.54429626]
[-40.09928131 235.60601807]
[-26.18873787 241.26083374]
[-12.99881458 248.43759155]
[-4.40025091 236.14675903]
[4.19831276 223.85591125]
[12.79687691 211.56507874]
[21.39544106 199.27424622]
[14.97141266 185.83558655]
[16.14433289 170.88632202]
[24.69902992 158.44914246]
[38.42052841 151.92095947]
[53.66677475 153.14540100]
[62.26533508 140.85456848]
[70.86389923 128.56373596]
[79.46246338 116.27289581]
[88.06102753 103.98205566]
[96.38297272 91.50225830]
[104.42414856 78.83973694]
[112.46531677 66.17721558]
[120.50649261 53.51468658]
[120.85591125 35.10383606]
[136.71546936 27.59110069]
[144.56723022 14.81025696]
[152.41899109 2.02941489]
[160.27073669 -10.75142765]
[147.95997620 -19.32876968]
[136.16381836 -28.60111427]
[124.92145538 -38.53765869]
[114.27022552 -49.10539627]
[104.24552155 -60.26922226]
[94.88063812 -71.99205017]
[86.20668793 -84.23493958]
[78.25247955 -96.95721436]
[71.04444122 -110.11661530]
[64.60652161 -123.66943359]
[58.96009445 -137.57064819]
[54.12392807 -151.77406311]
[50.11408615 -166.23251343]
[46.94388199 -180.89797974]
[44.62385559 -195.72171021]
[43.16170883 -210.65449524]
[42.56229782 -225.64669800]
[42.82761765 -240.64854431]
[43.95678329 -255.61018372]
[45.94604492 -270.48193359]
[48.78879929 -285.21435547]
[52.47559357 -299.75854492]
[56.99418640 -314.06616211]
[62.32957077 -328.08969116]
[68.46401215 -341.78253174]
[75.37714386 -355.09924316]
[83.04599762 -367.99554443]
[91.44509125 -380.42858887]
[100.54653168 -392.35711670]
[110.32008362 -403.74145508]
[120.73327637 -414.54382324]
[131.75152588 -424.72830200]
[143.33822632 -434.26110840]
[155.45487976 -443.11053467]
[168.06123352 -451.24719238]
[181.11543274 -458.64407349]
[194.57409668 -465.27658081]
[208.39251709 -471.12268066]
[222.52479553 -476.16296387]
[236.92398071 -480.38067627]
[251.54223633 -483.76184082]
[266.33102417 -486.29519653]
[281.24118042 -487.97232056]
[296.22320557 -488.78762817]
[311.22732544 -488.73846436]
[326.20367432 -487.82498169]
[341.10250854 -486.05017090]
[355.87435913 -483.41995239]
[370.47015381 -479.94305420]
[384.84140015 -475.63107300]
[398.94033813 -470.49826050]
[412.72015381 -464.56173706]
[426.13504028 -457.84115601]
[439.14047241 -450.35888672]
[451.69326782 -442.13977051]
[463.75164795 -433.21115112]
[475.27563477 -423.60260010]
[486.22689819 -413.34613037]
[496.56906128 -402.47573853]
[506.26779175 -391.02758789]
[515.29083252 -379.03967285]
[523.60827637 -366.55184937]
[531.19244385 -353.60556030]
[538.01818848 -340.24383545]
[544.06274414 -326.51107788]
[549.30609131 -312.45288086]
[553.73083496 -298.11596680]
[557.32220459 -283.54791260]
[560.06835938 -268.79718018]
[561.96008301 -253.91271973]
[562.99121094 -238.94400024]
[563.15820312 -223.94073486]
[562.46051025 -208.95277405]
[560.90057373 -194.02990723]
[558.48339844 -179.22169495]
[555.21716309 -164.57733154]
[551.11267090 -150.14546204]
[546.18353271 -135.97404480]
[540.44610596 -122.11013794]
[533.91949463 -108.59980774]
[526.62536621 -95.48792267]
[518.58795166 -82.81805420]
[509.83395386 -70.63227081]
[500.39245605 -58.97107315]
[490.29479980 -47.87318802]
[479.57452393 -37.37548447]
[468.26727295 -27.51283264]
[456.41061401 -18.31799698]
[444.04388428 -9.82152176]
[431.20822144 -2.05163145]
[417.94622803 4.96586275]
[404.30197144 11.20764923]
[390.32077026 16.65299416]
[376.04907227 21.28380775]
[361.53430176 25.08470535]
[346.82464600 28.04306412]
[331.96899414 30.14905548]
[317.01666260 31.39568138]
[302.01736450 31.77880287]
[287.02093506 31.29714584]
[272.07711792 29.95231056]
[257.23562622 27.74876595]
[242.54573059 24.69383049]
[228.05622864 20.79765320]
[213.81526184 16.07317543]
[199.87014771 10.53609371]
[186.26718140 4.20480061]
[173.05158997 -2.89967227]
[165.19982910 9.88117027]
[157.34806824 22.66201210]
[149.49632263 35.44285583]
[152.00114441 47.27722931]
[145.56431580 57.98942184]
[133.16902161 61.55585861]
[125.12784576 74.21838379]
[117.08666992 86.88091278]
[109.04549408 99.54343414]
[109.34375000 103.38835907]
[107.94577026 107.34606934]
[104.83917999 110.65608215]
[100.35186768 112.58061981]
[91.75330353 124.87145996]
[83.15473938 137.16229248]
[74.55617523 149.45314026]
[65.95761108 161.74397278]
[72.33424377 175.64669800]
[70.90529633 190.77464294]
[62.15421295 203.07444763]
[48.51281738 209.30085754]
[33.68627930 207.87280273]
[25.08771515 220.16363525]
[16.48915100 232.45448303]
[7.89058685 244.74531555]
[-0.70797706 257.03616333]
[10.55541229 266.96670532]
[20.63608551 278.09594727]
[29.40726852 290.28390503]
[36.75865555 303.37731934]
[42.59778976 317.21148682]
[46.85124207 331.61248779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 204]
[49 203]
[50 202]
[51 201]
[52 200]
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[62 187]
[63 186]
[64 185]
[65 184]
[67 181]
[68 180]
[69 179]
[70 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
