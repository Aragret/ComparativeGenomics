%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[69.81295013 820.18975830]
[54.80818558 820.24951172]
[39.82873535 819.37628174]
[24.93254852 817.57348633]
[10.17725658 814.84802246]
[-4.38005209 811.21057129]
[-18.68305969 806.67510986]
[-32.67642975 801.25915527]
[-46.30602646 794.98376465]
[-59.51911545 787.87316895]
[-72.26457977 779.95483398]
[-84.49310303 771.25946045]
[-96.15738678 761.82067871]
[-107.21230316 751.67498779]
[-117.61506653 740.86157227]
[-127.32544708 729.42242432]
[-136.30587769 717.40167236]
[-144.52159119 704.84582520]
[-151.94084167 691.80352783]
[-158.53488159 678.32525635]
[-164.27822876 664.46301270]
[-169.14866638 650.27056885]
[-173.12731934 635.80279541]
[-176.19883728 621.11566162]
[-178.35130310 606.26599121]
[-179.57640076 591.31115723]
[-179.86940002 576.30914307]
[-179.22915649 561.31793213]
[-177.65815735 546.39550781]
[-175.16246033 531.59967041]
[-171.75173950 516.98754883]
[-167.43917847 502.61575317]
[-162.24148560 488.53988647]
[-156.17872620 474.81436157]
[-149.27439880 461.49234009]
[-141.55519104 448.62530518]
[-133.05097961 436.26306152]
[-123.79466248 424.45346069]
[-113.82204437 413.24215698]
[-103.17171478 402.67251587]
[-91.88487244 392.78546143]
[-80.00519562 383.61923218]
[-67.57862854 375.20932007]
[-54.65325546 367.58819580]
[-41.27908325 360.78540039]
[-27.50785446 354.82723999]
[-13.39284515 349.73675537]
[1.01133335 345.53363037]
[15.64895535 342.23416138]
[30.46339035 339.85110474]
[45.39732361 338.39364624]
[60.39297485 337.86743164]
[75.39233398 338.27453613]
[76.73056793 323.33435059]
[70.15959167 309.96755981]
[79.09722900 296.91268921]
[72.52626038 283.54589844]
[81.46389771 270.49102783]
[82.80213165 255.55085754]
[84.14036560 240.61067200]
[77.56938934 227.24385071]
[86.50702667 214.18901062]
[79.93605042 200.82218933]
[88.87368774 187.76734924]
[90.21192169 172.82716370]
[91.55015564 157.88697815]
[92.88838959 142.94679260]
[94.22662354 128.00660706]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[77.94456482 59.40053177]
[85.47503662 43.54938126]
[83.47102356 28.68385506]
[81.46701050 13.81832600]
[71.70186615 5.39189529]
[70.33875275 -7.03089428]
[77.56626129 -16.73087883]
[75.78379822 -31.62459564]
[71.65679169 -39.77356339]
[74.08736420 -46.75311279]
[72.52684021 -61.67171860]
[63.39582825 -74.59205627]
[69.76706696 -88.05521393]
[68.20654297 -102.97381592]
[59.07552719 -115.89415741]
[65.44676208 -129.35731506]
[63.88623810 -144.27592468]
[62.32571793 -159.19451904]
[58.32049942 -167.40403748]
[60.85471725 -174.34661865]
[59.51648331 -189.28680420]
[44.76519012 -192.64158630]
[31.77359390 -200.39230347]
[21.81448364 -211.77963257]
[15.86354923 -225.68795776]
[14.50380325 -240.75468445]
[17.86845970 -255.50372314]
[25.62788200 -268.49011230]
[37.02188492 -278.44161987]
[50.93419647 -284.38320923]
[66.00183105 -285.73287964]
[80.74861908 -282.35833740]
[93.72981262 -274.59020996]
[103.67365265 -263.18954468]
[109.60594177 -249.27325439]
[110.94549561 -234.20471191]
[107.56108093 -219.46018982]
[99.78425598 -206.48420715]
[88.37693024 -196.54800415]
[74.45666504 -190.62504578]
[75.79489899 -175.68486023]
[77.24432373 -160.75505066]
[78.80484772 -145.83644104]
[80.36536407 -130.91784668]
[89.38476562 -119.06457520]
[83.12514496 -104.53433990]
[84.68566895 -89.61573792]
[93.70506287 -77.76247406]
[87.44544983 -63.23223877]
[89.00597382 -48.31363678]
[90.67751312 -33.40706253]
[92.45997620 -18.51334381]
[103.71995544 -5.05303907]
[96.33253479 11.81431293]
[98.33654785 26.67984009]
[100.34056091 41.54536819]
[109.76685333 49.12637329]
[111.55809021 61.49468994]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[114.92697144 97.49118805]
[125.70060730 87.05429077]
[139.61972046 81.46336365]
[154.61947632 81.54779053]
[168.47477722 87.29504395]
[179.13024902 97.85254669]
[185.00521851 111.65416718]
[185.22817993 126.65251160]
[179.76605225 140.62266541]
[169.42910767 151.49223328]
[155.75076294 157.64878845]
[140.76014709 158.17904663]
[126.68099976 153.00433350]
[115.60189056 142.89228821]
[109.16680908 129.34483337]
[107.82857513 144.28501892]
[106.49034119 159.22520447]
[105.15210724 174.16539001]
[103.81387329 189.10557556]
[110.28913116 203.54100037]
[101.44721222 215.52723694]
[107.92246246 229.96266174]
[99.08055115 241.94889832]
[97.74231720 256.88909912]
[96.40408325 271.82928467]
[102.87933350 286.26470947]
[94.03741455 298.25094604]
[100.51267242 312.68637085]
[91.67075348 324.67260742]
[90.33251953 339.61279297]
[105.16545868 341.87783813]
[119.82888031 345.06066895]
[134.26606750 349.14898682]
[148.42115784 354.12695312]
[162.23937988 359.97528076]
[175.66728210 366.67138672]
[188.65292358 374.18936157]
[201.14604187 382.50009155]
[213.09832764 391.57147217]
[224.46351624 401.36834717]
[235.19764709 411.85284424]
[245.25920105 422.98440552]
[254.60925293 434.71997070]
[263.21160889 447.01409912]
[271.03298950 459.81927490]
[278.04318237 473.08590698]
[284.21499634 486.76272583]
[289.52459717 500.79678345]
[293.95141602 515.13378906]
[297.47836304 529.71826172]
[300.09176636 544.49383545]
[301.78152466 559.40325928]
[302.54110718 574.38891602]
[302.36755371 589.39276123]
[301.26153564 604.35681152]
[299.22735596 619.22320557]
[296.27285767 633.93432617]
[292.40948486 648.43334961]
[287.65222168 662.66412354]
[282.01940918 676.57159424]
[275.53286743 690.10198975]
[268.21768188 703.20288086]
[260.10217285 715.82373047]
[251.21774292 727.91558838]
[241.59873962 739.43170166]
[231.28237915 750.32757568]
[220.30859375 760.56097412]
[208.71981812 770.09234619]
[196.56089783 778.88476562]
[183.87887573 786.90429688]
[170.72282410 794.11987305]
[157.14361572 800.50360107]
[143.19380188 806.03076172]
[128.92735291 810.67993164]
[114.39946747 814.43316650]
[99.66633606 817.27600098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 164]
[54 163]
[56 161]
[58 159]
[59 158]
[60 157]
[62 155]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 134]
[71 132]
[72 131]
[74 128]
[75 127]
[76 126]
[79 124]
[80 123]
[82 122]
[83 121]
[85 119]
[86 118]
[88 116]
[89 115]
[90 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
