%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[113.94579315 560.03314209]
[111.35286713 544.82519531]
[117.41458893 530.63861084]
[130.19668579 522.00024414]
[129.75007629 507.00692749]
[121.63727570 494.51565552]
[128.96026611 480.49124146]
[125.61900330 473.89898682]
[128.62030029 465.27169800]
[128.39697266 450.27334595]
[127.72718811 435.28833008]
[126.61153412 420.32986450]
[125.49588776 405.37139893]
[114.84817505 391.42175293]
[122.98139191 374.90109253]
[121.64315796 359.96090698]
[120.30492401 345.02072144]
[118.96669006 330.08053589]
[117.62845612 315.14035034]
[116.29022217 300.20016479]
[114.95198822 285.25997925]
[112.88982391 283.36111450]
[111.45557404 280.53100586]
[111.00770569 277.00469971]
[111.81304169 273.14257812]
[114.00600433 269.39492798]
[105.89319611 256.90368652]
[113.21618652 242.87925720]
[112.76957703 227.88591003]
[112.32297516 212.89256287]
[103.73651886 204.37202454]
[103.24173737 191.88447571]
[111.64885712 182.10270691]
[109.64484406 167.23716736]
[105.88854980 152.71511841]
[102.13224792 138.19305420]
[98.37594604 123.67099762]
[94.61964417 109.14893341]
[90.00563812 94.87620544]
[84.55027771 80.90340424]
[79.09491730 66.93060303]
[73.43213654 53.04058075]
[67.56317139 39.23640442]
[61.69421387 25.43222618]
[55.82525253 11.62804890]
[49.95629120 -2.17612791]
[47.99980927 12.69573021]
[40.56769180 25.72506905]
[28.76245880 34.97906494]
[14.33533859 39.08493805]
[-0.57348859 37.43361282]
[-13.75238705 30.27005005]
[-23.24634552 18.65692139]
[-27.64699173 4.31696653]
[-26.30151558 -10.62256813]
[-19.40951157 -23.94549179]
[-7.99336672 -33.67542648]
[6.25340176 -38.36899567]
[21.21737099 -37.32993317]
[34.67872238 -30.71238327]
[44.63957977 -19.49966240]
[41.75430679 -34.21955490]
[38.65019608 -48.89485550]
[35.32793427 -63.52231598]
[32.00567627 -78.14978027]
[28.68341637 -92.77723694]
[25.36115837 -107.40470123]
[22.29958153 -110.48377991]
[20.55274963 -114.02116394]
[20.10329437 -117.54726410]
[20.78313065 -120.64636993]
[22.30407524 -123.00112152]
[19.85834694 -137.80038452]
[15.37159157 -145.75695801]
[17.48808670 -152.83807373]
[15.26296997 -167.67211914]
[13.03785229 -182.50616455]
[8.67005634 -190.52864075]
[10.89174461 -197.57745361]
[8.88773060 -212.44299316]
[6.88371706 -227.30851746]
[4.87970304 -242.17404175]
[2.87568951 -257.03958130]
[0.87167585 -271.90509033]
[-9.06037998 -260.66436768]
[-24.02266884 -259.60137939]
[-35.44411087 -269.32510376]
[-36.78199005 -284.26531982]
[-27.26990128 -295.86361694]
[-12.35680676 -297.47592163]
[-0.58606887 -288.17950439]
[-1.25585401 -303.16455078]
[-1.92563915 -318.14959717]
[-5.43511724 -326.58294678]
[-2.49216127 -333.36236572]
[-2.93876719 -348.35574341]
[-17.33878517 -353.09020996]
[-29.24916840 -362.46670532]
[-37.23167801 -375.35293579]
[-40.32239151 -390.19287109]
[-38.14809036 -405.19448853]
[-30.97132683 -418.54626465]
[-19.65873337 -428.63589478]
[-5.57636070 -434.24505615]
[9.57527637 -434.69638062]
[23.96654510 -429.93536377]
[35.85962677 -420.53692627]
[43.81837845 -407.63601685]
[46.88173676 -392.79040527]
[44.67979431 -377.79284668]
[37.47843552 -364.45431519]
[26.14726830 -354.38552856]
[12.05458260 -348.80233765]
[12.50118828 -333.80899048]
[13.05939960 -318.81936646]
[13.72918510 -303.83435059]
[14.39896965 -288.84930420]
[15.73720455 -273.90911865]
[17.74121857 -259.04357910]
[19.74523163 -244.17805481]
[21.74924469 -229.31253052]
[23.75325966 -214.44700623]
[25.75727272 -199.58146667]
[27.87189674 -184.73127747]
[30.09701347 -169.89723206]
[32.32213211 -155.06318665]
[34.65761948 -140.24612427]
[37.10334396 -125.44684601]
[39.98861694 -110.72695923]
[43.31087875 -96.09949493]
[46.63313675 -81.47203827]
[49.95539474 -66.84457397]
[53.27765656 -52.21711731]
[56.76967239 -48.95906830]
[58.25207520 -43.47277069]
[56.47419739 -37.10482788]
[59.35947037 -22.38493538]
[63.76046753 -8.04508877]
[69.62942505 5.75908804]
[75.49839020 19.56326485]
[81.36734772 33.36744308]
[87.23631287 47.17161942]
[91.25175476 49.75720215]
[93.68558502 54.89271545]
[93.06771851 61.47525024]
[98.52307892 75.44804382]
[103.97843170 89.42084503]
[109.07084656 75.31172180]
[121.41871643 66.79526520]
[136.41659546 67.04788971]
[148.47062683 75.97537994]
[153.08497620 90.24800110]
[148.53860474 104.54242706]
[136.52717590 113.52717590]
[121.53067780 113.85116577]
[109.14170074 105.39263153]
[112.89800262 119.91469574]
[116.65430450 134.43675232]
[120.41060638 148.95881653]
[124.16690826 163.48086548]
[127.90635681 148.95446777]
[136.33145142 136.54406738]
[148.45240784 127.70765686]
[162.84529114 123.48330688]
[177.81921387 124.36730194]
[191.61506653 130.25578308]
[202.61213684 140.45698547]
[209.51849365 153.77247620]
[211.52276611 168.63796997]
[208.38951111 183.30708313]
[200.48683167 196.05650330]
[188.74310303 205.38842773]
[174.53797913 210.20655823]
[159.54026794 209.94488525]
[145.51187134 204.63412476]
[134.10084534 194.89819336]
[126.64720154 181.87937927]
[136.45500183 197.46424866]
[127.31632233 212.44595337]
[127.76293182 227.43930054]
[128.20953369 242.43264771]
[136.35429382 255.99633789]
[128.99935913 268.94833374]
[129.89216614 283.92175293]
[131.23040771 298.86193848]
[132.56863403 313.80212402]
[133.90687561 328.74230957]
[135.24510193 343.68249512]
[136.58334351 358.62268066]
[137.92156982 373.56286621]
[147.30072021 382.41690063]
[148.10777283 394.88818359]
[140.45434570 404.25576782]
[141.56999207 419.21420288]
[142.68563843 434.17266846]
[145.25659180 437.67184448]
[146.45935059 441.42922974]
[146.38076782 444.98297119]
[145.24873352 447.94696045]
[143.39530945 450.05001831]
[143.61863708 465.04837036]
[143.95361328 480.04461670]
[152.09835815 493.60830688]
[144.74343872 506.56030273]
[145.19003296 521.55364990]
[158.46363831 529.41589355]
[165.35900879 543.21655273]
[163.67587280 558.55181885]
[153.95130920 570.52832031]
[139.28837585 575.32434082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[7 202]
[9 201]
[10 200]
[11 195]
[12 194]
[13 193]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[26 183]
[28 181]
[29 180]
[30 179]
[33 177]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 147]
[40 146]
[41 145]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[61 137]
[62 136]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[72 128]
[73 127]
[75 126]
[76 125]
[77 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[91 117]
[92 116]
[93 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
