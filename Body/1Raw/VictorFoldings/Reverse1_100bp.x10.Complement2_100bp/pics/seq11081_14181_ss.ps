%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[69.18523407 610.57025146]
[54.39075089 606.95867920]
[42.34823608 597.63677979]
[35.14412308 584.21960449]
[34.02656937 569.03173828]
[39.18920135 554.70458984]
[49.73756027 543.72045898]
[63.84407806 537.98229980]
[64.29068756 522.98895264]
[64.73728943 507.99563599]
[65.18389893 493.00225830]
[65.63050079 478.00891113]
[58.27556992 465.05691528]
[66.42032623 451.49322510]
[64.28157043 448.69000244]
[63.39432907 444.71157837]
[64.29615021 440.15747070]
[67.23654175 435.84457397]
[68.35218811 420.88610840]
[69.46784210 405.92764282]
[70.58348846 390.96920776]
[71.69913483 376.01074219]
[63.23853683 360.63592529]
[73.73246765 345.50451660]
[74.62528229 330.53112793]
[75.51809692 315.55770874]
[62.73740768 323.40972900]
[48.57866669 318.45693970]
[43.47916794 304.35037231]
[51.19807434 291.48886108]
[66.04529572 289.35342407]
[77.07539368 299.51672363]
[79.07940674 284.65118408]
[67.12429047 270.78790283]
[69.13352203 252.27098083]
[84.29509735 240.91136169]
[85.85562134 225.99276733]
[87.41614532 211.07415771]
[88.97666931 196.15554810]
[90.42608643 181.22573853]
[91.76432037 166.28555298]
[93.10255432 151.34536743]
[94.44078827 136.40518188]
[94.44078827 121.40518951]
[93.10255432 106.46500397]
[89.94332886 102.27773285]
[89.35504150 96.61846924]
[91.95368195 91.06113434]
[91.06086731 76.08772278]
[82.51588440 62.77255249]
[89.48192596 49.60731506]
[88.47766876 34.64096832]
[87.36201477 19.68251610]
[81.54260254 33.50765228]
[72.10865021 45.16957474]
[59.80414581 53.74857712]
[45.59948349 58.56807709]
[30.61490059 59.24799347]
[16.03214455 55.73470306]
[3.00127053 48.30528259]
[-7.45005131 37.54563904]
[-14.49758720 24.30433273]
[-17.58553696 9.62562084]
[-16.47037506 -5.33286858]
[-11.24004459 -19.39144707]
[-2.30703378 -31.44139862]
[9.62416458 -40.53240967]
[23.61260605 -45.94752884]
[38.55510330 -47.25969696]
[53.27322769 -44.36542892]
[66.60624695 -37.49298096]
[77.50267029 -27.18434143]
[85.10314941 -14.25249290]
[88.80866241 0.28615409]
[92.13092041 -14.34130573]
[95.45317841 -28.96876717]
[98.77543640 -43.59622574]
[102.09769440 -58.22368622]
[105.41996002 -72.85115051]
[108.74221802 -87.47860718]
[112.06447601 -102.10606384]
[100.75021362 -114.67919159]
[99.17518616 -131.35314941]
[107.76290131 -145.53810120]
[122.95946503 -151.74630737]
[126.06357574 -166.42161560]
[117.70874786 -179.56826782]
[121.06581116 -194.40690613]
[133.65061951 -202.29092407]
[136.75473022 -216.96623230]
[139.85884094 -231.64154053]
[142.74412537 -246.36143494]
[145.40991211 -261.12265015]
[148.07571411 -275.88385010]
[150.74150085 -290.64508057]
[153.07699585 -305.46215820]
[155.08100891 -320.32766724]
[157.08502197 -335.19320679]
[159.08903503 -350.05874634]
[145.22209167 -356.02618408]
[133.48008728 -365.51449585]
[124.73437500 -377.81958008]
[119.63392639 -392.02828979]
[118.55723572 -407.08630371]
[121.58420563 -421.87615967]
[128.49020386 -435.30038452]
[138.76277161 -446.36279297]
[151.63960266 -454.24249268]
[166.16516113 -458.35476685]
[181.26155090 -458.39443970]
[195.80851746 -454.35855103]
[208.72659302 -446.54663086]
[219.05714417 -435.53836060]
[226.03359985 -422.15060425]
[229.13824463 -407.37686157]
[228.14070129 -392.31341553]
[223.11499023 -378.07806396]
[214.43406677 -365.72720337]
[202.74209595 -356.17730713]
[188.90669250 -350.13708496]
[173.95455933 -348.05471802]
[171.95054626 -333.18917847]
[169.94653320 -318.32366943]
[167.94252014 -303.45812988]
[169.77803040 -300.44760132]
[170.24656677 -296.39846802]
[168.87585449 -291.96289062]
[165.50271606 -287.97927856]
[162.83692932 -273.21807861]
[160.17112732 -258.45684814]
[157.50534058 -243.69563293]
[159.44421387 -239.33102417]
[158.66183472 -233.70208740]
[154.53414917 -228.53742981]
[151.43003845 -213.86212158]
[148.32592773 -199.18682861]
[156.64044189 -186.88217163]
[153.70149231 -171.95510864]
[140.73887634 -163.31750488]
[137.63476562 -148.64219666]
[147.45921326 -139.60215759]
[151.56680298 -126.78530121]
[148.78277588 -113.50679779]
[139.72964478 -103.25694275]
[126.69193268 -98.78380585]
[123.36967468 -84.15634918]
[120.04741669 -69.52888489]
[116.72515869 -54.90142822]
[113.40290070 -40.27396774]
[110.08063507 -25.64650726]
[106.75837708 -11.01904678]
[103.43611908 3.60841370]
[102.32047272 18.56686783]
[103.43611908 33.52532196]
[107.06840515 39.96180344]
[104.45532990 48.71449661]
[112.93645477 60.95867157]
[106.03427124 75.19490814]
[106.92708588 90.16831207]
[108.04273987 105.12677002]
[109.38097382 120.06695557]
[116.35294342 106.78570557]
[128.34519958 97.77538300]
[143.04220581 94.77573395]
[157.60621643 98.36595154]
[169.22514343 107.85282135]
[175.65554810 121.40456390]
[175.65582275 136.40457153]
[169.22592163 149.95655823]
[157.60736084 159.44384766]
[143.04348755 163.03460693]
[128.34635925 160.03552246]
[116.35377502 151.02565002]
[109.38097382 137.74342346]
[108.04273987 152.68360901]
[106.70450592 167.62379456]
[105.36627197 182.56398010]
[107.71758270 191.39059448]
[103.89527130 197.71607971]
[102.33474731 212.63467407]
[100.77422333 227.55328369]
[99.21369934 242.47189331]
[108.35439301 250.07348633]
[112.64672852 261.03143311]
[111.13208008 272.58132935]
[104.30142975 281.86883545]
[93.94493103 286.65521240]
[91.94091797 301.52072144]
[90.49150085 316.45053101]
[89.59868622 331.42395020]
[88.70587158 346.39733887]
[96.66782379 356.54476929]
[95.61593628 368.99777222]
[86.65759277 377.12640381]
[85.54193878 392.08483887]
[84.42629242 407.04330444]
[83.31064606 422.00173950]
[82.19499207 436.96020508]
[81.41367340 451.93984985]
[88.73666382 465.96426392]
[80.62385559 478.45553589]
[80.17724609 493.44888306]
[79.73063660 508.44223022]
[79.28403473 523.43560791]
[78.83742523 538.42895508]
[92.57740021 544.99652100]
[102.45326233 556.58905029]
[106.75397491 571.19812012]
[104.73440552 586.29248047]
[96.74446106 599.25708008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[14 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[24 191]
[25 190]
[26 189]
[32 188]
[33 187]
[36 182]
[37 181]
[38 180]
[39 179]
[40 177]
[41 176]
[42 175]
[43 174]
[44 161]
[45 160]
[48 159]
[49 158]
[51 156]
[52 154]
[53 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[85 140]
[86 139]
[89 136]
[90 135]
[91 134]
[92 131]
[93 130]
[94 129]
[95 128]
[96 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
