%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[279.68319702 352.58712769]
[284.45458984 338.35577393]
[290.46511841 324.60180664]
[297.66769409 311.43289185]
[306.00595093 298.95208740]
[294.31838989 289.54992676]
[282.63079834 280.14776611]
[270.94320679 270.74560547]
[259.25564575 261.34347534]
[258.25167847 276.30984497]
[246.01220703 284.98135376]
[231.55970764 280.96572876]
[225.54803467 267.22308350]
[232.40875244 253.88403320]
[247.08280945 250.78121948]
[236.12689209 240.53582764]
[225.17098999 230.29043579]
[214.21507263 220.04504395]
[201.52412415 222.27416992]
[189.68981934 216.70359802]
[183.12812805 205.16433716]
[184.42933655 191.75830078]
[173.62718201 181.35093689]
[162.82502747 170.94355774]
[152.02285767 160.53619385]
[141.22070312 150.12881470]
[130.41854858 139.72143555]
[117.99771881 146.68150330]
[104.11928558 149.86093140]
[89.90723419 149.00221252]
[76.51258087 144.17491150]
[65.02012634 135.76995850]
[56.36062622 124.46806335]
[51.23539352 111.18455505]
[50.05950928 96.99522400]
[52.92821121 83.04924774]
[59.60916519 70.47608185]
[48.96315765 59.90903473]
[38.31714630 49.34198761]
[27.59276772 38.85448456]
[16.79061127 28.44711304]
[5.98845482 18.03973961]
[10.78239059 32.25304794]
[11.23391819 47.24625397]
[7.30397367 61.72228622]
[-0.66746151 74.42882538]
[-11.99077892 84.26663971]
[-25.68639946 90.38464355]
[-40.56951523 92.25357819]
[-55.35258484 89.71175385]
[-68.75672913 82.97908020]
[-79.62234497 72.63798523]
[-87.00946808 59.58308029]
[-90.27902222 44.94374847]
[-89.14815521 29.98643684]
[-83.71471405 16.00510406]
[-74.44873810 4.20927238]
[-62.15182114 -4.38059902]
[-47.88777542 -9.02140045]
[-32.89058304 -9.31165600]
[-18.45765305 -5.22625685]
[-5.84022236 2.87905478]
[-13.30796337 -10.12989807]
[-20.77570534 -23.13884926]
[-28.24344635 -36.14780426]
[-42.15220261 -30.47066498]
[-56.69356537 -26.69809914]
[-71.60802460 -24.89743423]
[-86.62940979 -25.10080147]
[-101.48965454 -27.30457497]
[-115.92355347 -31.46942329]
[-129.67352295 -37.52101898]
[-142.49417114 -45.35136795]
[-154.15670776 -54.82072830]
[-164.45298767 -65.76010132]
[-173.19927979 -77.97426605]
[-180.23948669 -91.24525452]
[-185.44796753 -105.33621216]
[-188.73176575 -119.99568939]
[-190.03227234 -134.96205139]
[-189.32630920 -149.96821594]
[-186.62644958 -164.74638367]
[-181.98088074 -179.03282166]
[-175.47250366 -192.57255554]
[-167.21746826 -205.12396240]
[-157.36311340 -216.46305847]
[-146.08528137 -226.38746643]
[-133.58525085 -234.72009277]
[-120.08608246 -241.31221008]
[-105.82870483 -246.04618835]
[-91.06755066 -248.83755493]
[-76.06604004 -249.63645935]
[-61.09190750 -248.42868042]
[-46.41237640 -245.23574829]
[-32.28941727 -240.11466980]
[-18.97507858 -233.15679932]
[-6.70696640 -224.48634338]
[4.29598045 -214.25802612]
[13.83740139 -202.65437317]
[21.74701881 -189.88247681]
[27.88367653 -176.17025757]
[32.13785553 -161.76243591]
[34.43363953 -146.91612244]
[34.73005676 -131.89628601]
[33.02181244 -116.97096252]
[29.33939934 -102.40650940]
[23.74852943 -88.46285248]
[16.34897995 -75.38882446]
[7.27280474 -63.41775894]
[-3.31802201 -52.76328278]
[-15.23449326 -43.61554337]
[-7.76675224 -30.60659027]
[-0.29901120 -17.59763908]
[7.16872978 -4.58868647]
[16.39582825 7.23758316]
[27.19798470 17.64495659]
[38.00014114 28.05233002]
[44.99808502 30.42942047]
[48.88419342 38.69598007]
[59.53020477 49.26302719]
[70.17621613 59.83007431]
[84.04023743 52.58304977]
[99.46466827 49.97206116]
[114.94144440 52.25238800]
[128.95736694 59.20107651]
[140.14207458 70.13874054]
[147.40203857 83.99599457]
[150.02742004 99.41799164]
[147.76153564 114.89688110]
[140.82592773 128.91928101]
[151.62808228 139.32666016]
[162.43023682 149.73403931]
[173.23239136 160.14140320]
[184.03454590 170.54878235]
[194.83670044 180.95614624]
[212.31819153 180.31036377]
[224.61589050 192.27203369]
[224.46046448 209.08912659]
[235.41638184 219.33451843]
[246.37228394 229.57991028]
[257.32818604 239.82530212]
[268.65777588 249.65588379]
[280.34536743 259.05804443]
[292.03295898 268.46020508]
[303.72052002 277.86233521]
[315.40811157 287.26449585]
[325.81298828 276.44616699]
[337.13327026 266.58975220]
[349.28039551 257.77243042]
[362.15924072 250.06318665]
[375.66906738 243.52233887]
[389.70410156 238.20111084]
[404.15451050 234.14112854]
[418.90719604 231.37417603]
[433.84667969 229.92190552]
[448.85607910 229.79568481]
[463.81787109 230.99650574]
[478.61499023 233.51496887]
[493.13165283 237.33134460]
[507.25418091 242.41578674]
[520.87207031 248.72850037]
[533.87878418 256.22006226]
[546.17242432 264.83187866]
[557.65692139 274.49649048]
[568.24224854 285.13830566]
[577.84564209 296.67401123]
[586.39190674 309.01333618]
[593.81414795 322.05969238]
[600.05432129 335.71099854]
[605.06359863 349.86038208]
[608.80267334 364.39712524]
[611.24237061 379.20742798]
[612.36358643 394.17541504]
[612.15753174 409.18392944]
[610.62579346 424.11547852]
[607.78039551 438.85324097]
[603.64355469 453.28182983]
[598.24774170 467.28836060]
[591.63513184 480.76318359]
[583.85748291 493.60083008]
[574.97564697 505.70086670]
[565.05914307 516.96856689]
[554.18560791 527.31573486]
[542.44012451 536.66137695]
[529.91467285 544.93243408]
[516.70715332 552.06408691]
[502.92108154 558.00048828]
[488.66427612 562.69531250]
[474.04833984 566.11169434]
[459.18762207 568.22290039]
[444.19848633 569.01251221]
[429.19824219 568.47424316]
[414.30422974 566.61236572]
[399.63308716 563.44140625]
[385.29959106 558.98620605]
[371.41595459 553.28161621]
[358.09082031 546.37231445]
[345.42846680 538.31237793]
[333.52804565 529.16485596]
[322.48260498 519.00140381]
[312.37869263 507.90148926]
[303.29531860 495.95199585]
[295.30358887 483.24649048]
[288.46609497 469.88436890]
[282.83627319 455.97024536]
[278.45825195 441.61300659]
[275.36624146 426.92501831]
[273.58450317 412.02120972]
[273.12692261 397.01828003]
[273.99710083 382.03359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[15 141]
[16 140]
[17 139]
[18 138]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[37 121]
[38 120]
[39 119]
[40 117]
[41 116]
[42 115]
[62 114]
[63 113]
[64 112]
[65 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
