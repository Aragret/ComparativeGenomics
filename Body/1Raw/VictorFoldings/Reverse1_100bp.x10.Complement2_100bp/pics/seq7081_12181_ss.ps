%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[83.88628387 594.24267578]
[84.96666718 579.12286377]
[91.15599823 565.28570557]
[101.70690155 554.40203857]
[115.34529877 547.78613281]
[113.78477478 532.86749268]
[112.22425079 517.94891357]
[110.66372681 503.03030396]
[109.10320282 488.11169434]
[107.54267883 473.19308472]
[105.87113953 458.28652954]
[104.08867645 443.39282227]
[102.30620575 428.49908447]
[99.77528381 426.04415894]
[98.30769348 422.24136353]
[98.52397919 417.60385132]
[100.79205322 412.90246582]
[92.12957001 400.78591919]
[98.81903076 386.44848633]
[97.70338440 371.49005127]
[96.58773804 356.53158569]
[92.95545197 350.09509277]
[95.56852722 341.34240723]
[94.67570496 326.36901855]
[93.78289032 311.39559937]
[90.86882782 307.61178589]
[90.30078888 301.95718384]
[93.09316254 295.96435547]
[89.75190735 289.37210083]
[92.75319672 280.74481201]
[92.52986908 265.74649048]
[84.60393524 253.13581848]
[92.13491821 239.22196960]
[91.91159058 224.22363281]
[91.68826294 209.22529602]
[81.97391510 203.24218750]
[76.29531097 193.20878601]
[76.16387939 181.56074524]
[81.72794342 171.19050598]
[91.70717621 164.72895813]
[91.93050385 149.73062134]
[92.15383148 134.73228455]
[92.37715912 119.73394012]
[92.60048676 104.73560333]
[90.67064667 102.37653351]
[89.55652618 99.26313019]
[89.53916931 95.69618225]
[90.78456116 92.07606506]
[93.31015778 88.85824585]
[94.42580414 73.89979553]
[95.54145050 58.94134140]
[82.95890045 50.24498749]
[76.46150208 36.50888062]
[77.70370483 21.46483421]
[86.25209045 9.14489079]
[99.72859955 2.80066133]
[100.84425354 -12.15779209]
[101.95989990 -27.11624527]
[87.22067261 -32.60208511]
[74.63333130 -42.00640869]
[65.21096039 -54.56209946]
[59.70905685 -69.24881744]
[58.56491852 -84.87591553]
[61.86293030 -100.17897797]
[69.32836914 -113.92208862]
[80.35028839 -124.99769592]
[94.03150940 -132.51583862]
[109.26163483 -135.87564087]
[110.15444946 -150.84904480]
[111.04726410 -165.82246399]
[108.43419647 -174.57514954]
[112.06648254 -181.01162720]
[113.18212891 -195.97009277]
[114.29777527 -210.92854309]
[114.85598755 -225.91815186]
[107.11869049 -239.71832275]
[114.85598755 -252.44558716]
[103.96143341 -263.57870483]
[104.17511749 -278.79086304]
[114.85598755 -289.10852051]
[114.85598755 -304.10852051]
[114.85598755 -319.10852051]
[114.85598755 -334.10852051]
[114.74432373 -349.10812378]
[114.52099609 -364.10644531]
[114.29766846 -379.10479736]
[114.07434082 -394.10311890]
[111.39587402 -398.58340454]
[110.76670837 -403.18313599]
[111.88918304 -407.10168457]
[114.19099426 -409.77264404]
[114.63759613 -424.76599121]
[111.76508331 -433.43701172]
[115.20411682 -439.97879028]
[115.87390900 -454.96383667]
[101.44552612 -459.35391235]
[88.56264496 -467.19494629]
[78.03507233 -477.99407959]
[70.52459717 -491.07244873]
[66.50331879 -505.60791016]
[66.22403717 -520.68682861]
[69.70429230 -535.36120605]
[76.72531891 -548.70874023]
[86.84576416 -559.89031982]
[99.42945862 -568.20300293]
[113.68537140 -573.12438965]
[128.71736145 -574.34503174]
[143.58052063 -571.78814697]
[157.34053040 -565.61456299]
[169.13241577 -556.21234131]
[178.21493530 -544.17248535]
[184.01715088 -530.25177002]
[186.17434692 -515.32537842]
[184.55090332 -500.33154297]
[179.24887085 -486.21279907]
[170.60154724 -473.85662842]
[159.15251160 -464.03979492]
[145.62144470 -457.37936401]
[130.85894775 -454.29403687]
[130.18916321 -439.30899048]
[129.63095093 -424.31939697]
[129.18434143 -409.32604980]
[129.07267761 -394.32644653]
[129.29600525 -379.32812500]
[129.51933289 -364.32977295]
[129.74266052 -349.33145142]
[132.98539734 -342.69018555]
[129.85598755 -334.10852051]
[129.85598755 -319.10852051]
[129.85598755 -304.10852051]
[129.85598755 -289.10852051]
[140.53686523 -278.79086304]
[140.75053406 -263.57870483]
[129.85598755 -252.44558716]
[137.59329224 -239.71832275]
[129.85598755 -225.91815186]
[142.14665222 -234.51695251]
[156.57508850 -230.41569519]
[162.50518799 -216.63768005]
[155.56549072 -203.33952332]
[140.87170410 -200.32415771]
[129.25622559 -209.81289673]
[128.14057922 -194.85443115]
[127.02493286 -179.89598083]
[126.02067566 -164.92964172]
[125.12785339 -149.95623779]
[124.23503876 -134.98283386]
[137.81971741 -130.41078186]
[149.76576233 -122.46803284]
[159.25361633 -111.69194794]
[165.63041687 -98.81451416]
[168.45491028 -84.71263123]
[167.52799988 -70.34841156]
[162.90670776 -56.70352173]
[154.90077209 -44.71209335]
[144.05187988 -35.19679642]
[131.09700012 -28.81237030]
[116.91835022 -26.00059700]
[115.80270386 -11.04214287]
[114.68705750 3.91631007]
[127.07335663 12.18946934]
[133.69961548 25.64118576]
[132.69641113 40.70305634]
[124.23327637 53.32336044]
[110.49990845 60.05698776]
[109.38425446 75.01544189]
[108.26860809 89.97389221]
[107.59882355 104.95893097]
[107.37549591 119.95727539]
[107.15216827 134.95561218]
[106.92884064 149.95394897]
[106.70551300 164.95228577]
[120.40978241 178.03308105]
[120.20439911 196.65754700]
[106.68659973 209.00196838]
[106.90992737 224.00030518]
[107.13325500 238.99864197]
[115.07516479 252.68208313]
[107.52820587 265.52316284]
[107.75153351 280.52148438]
[108.08650970 295.51773071]
[108.75629425 310.50277710]
[109.64911652 325.47619629]
[110.54193115 340.44958496]
[111.54618835 355.41595459]
[112.66184235 370.37438965]
[113.77748871 385.33285522]
[122.51976776 398.51931763]
[115.75051117 411.78680420]
[117.19992828 426.71661377]
[118.98239136 441.61035156]
[120.76486206 456.50405884]
[124.89186096 464.65301514]
[122.46128845 471.63256836]
[124.02181244 486.55117798]
[125.58232880 501.46978760]
[127.14285278 516.38836670]
[128.70338440 531.30700684]
[130.26390076 546.22558594]
[144.97616577 549.87591553]
[157.55094910 558.34063721]
[166.46978760 570.59747314]
[170.65568542 585.16638184]
[169.60317993 600.28814697]
[163.43934631 614.13671875]
[152.90852356 625.03985596]
[139.28234863 631.68084717]
[124.20623779 633.25787354]
[109.50072479 629.58038330]
[96.94155884 621.09259033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 192]
[12 191]
[13 190]
[17 189]
[19 187]
[20 186]
[21 185]
[23 184]
[24 183]
[25 182]
[28 181]
[30 180]
[31 179]
[33 177]
[34 176]
[35 175]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[49 167]
[50 166]
[51 165]
[56 160]
[57 159]
[58 158]
[68 147]
[69 146]
[70 145]
[72 144]
[73 143]
[74 142]
[75 136]
[77 134]
[80 131]
[81 130]
[82 129]
[83 128]
[84 126]
[85 125]
[86 124]
[87 123]
[91 122]
[92 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
