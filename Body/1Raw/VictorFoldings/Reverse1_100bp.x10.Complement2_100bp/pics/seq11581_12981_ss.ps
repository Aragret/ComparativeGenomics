%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[53.21725845 742.57055664]
[45.71872330 755.67303467]
[34.96244049 766.26574707]
[21.74660301 773.56256104]
[7.05190849 777.02215576]
[-8.03119564 776.38769531]
[-22.38344383 771.70629883]
[-34.93980408 763.32531738]
[-44.76851273 751.86676025]
[-51.14021301 738.18084717]
[-53.58208084 723.28320312]
[-51.91291428 708.27929688]
[-46.25658035 694.28259277]
[-37.03281021 682.33166504]
[-24.92607498 673.31335449]
[-10.83476925 667.89691162]
[4.19543457 666.48431396]
[6.86122990 651.72308350]
[9.52702522 636.96185303]
[4.17478085 623.06213379]
[14.24147511 610.85668945]
[8.88923073 596.95697021]
[18.95592499 584.75152588]
[21.62171936 569.99035645]
[24.28751564 555.22912598]
[26.95331001 540.46789551]
[29.61910629 525.70666504]
[20.94191551 513.65502930]
[23.43513298 498.64709473]
[36.13483429 489.62738037]
[38.80062866 474.86614990]
[41.46642303 460.10494995]
[44.13221741 445.34371948]
[38.77997589 431.44400024]
[48.84666824 419.23855591]
[51.51246262 404.47735596]
[53.95819092 389.67807007]
[56.18330765 374.84402466]
[58.40842438 360.00997925]
[60.63354111 345.17593384]
[62.41600800 330.28222656]
[63.75424194 315.34204102]
[61.43371201 311.16781616]
[61.71076965 305.49151611]
[65.36123657 299.97921753]
[67.14369965 285.08547974]
[68.92616272 270.19177246]
[70.70863342 255.29804993]
[72.49109650 240.40434265]
[74.27355957 225.51062012]
[76.05603027 210.61691284]
[73.86080933 206.37544250]
[74.30674744 200.70991516]
[78.11971283 195.30873108]
[80.34483337 180.47468567]
[82.56995392 165.64064026]
[84.79506683 150.80659485]
[87.02018738 135.97254944]
[89.24530029 121.13850403]
[91.47042084 106.30446625]
[93.14196014 91.39788818]
[94.25760651 76.43943787]
[95.37326050 61.48098373]
[88.68379974 47.14355850]
[97.34627533 35.02701187]
[98.46192932 20.06855965]
[98.79690552 5.07230091]
[98.35029602 -9.92104912]
[97.90369415 -24.91439819]
[97.45708466 -39.90774918]
[97.01048279 -54.90110016]
[96.45227051 -69.89070892]
[95.78248596 -84.87574768]
[95.11270142 -99.86078644]
[94.44290924 -114.84582520]
[93.77312469 -129.83085632]
[79.80805206 -135.89205933]
[69.89986420 -147.36875916]
[65.97323608 -161.94963074]
[68.75527954 -176.72871399]
[77.64155579 -188.78456116]
[90.82640076 -195.75775146]
[90.15661621 -210.74278259]
[89.48683167 -225.72782898]
[80.51239014 -234.99186707]
[80.26302338 -247.48672485]
[88.32710266 -256.50323486]
[87.88049316 -271.49658203]
[84.49696350 -279.98123169]
[87.54053497 -286.71609497]
[84.28369904 -295.25021362]
[87.42720032 -301.93902588]
[87.42720032 -316.93902588]
[87.42720032 -331.93902588]
[87.42720032 -346.93902588]
[79.68990326 -360.73919678]
[87.42720032 -373.46646118]
[87.42720032 -388.46646118]
[87.42720032 -403.46646118]
[73.65333557 -410.04241943]
[64.10340881 -421.94879150]
[60.67356873 -436.82156372]
[64.04481506 -451.70770264]
[73.54777527 -463.65158081]
[87.29564667 -470.28173828]
[102.55876160 -470.28173828]
[116.30662537 -463.65158081]
[125.80959320 -451.70770264]
[129.18083191 -436.82156372]
[125.75099945 -421.94879150]
[116.20107269 -410.04241943]
[102.42720032 -403.46646118]
[102.42720032 -388.46646118]
[102.42720032 -373.46646118]
[110.16450500 -360.73919678]
[102.42720032 -346.93902588]
[102.42720032 -331.93902588]
[102.42720032 -316.93902588]
[102.42720032 -301.93902588]
[102.53887177 -286.93942261]
[102.87384796 -271.94317627]
[103.32044983 -256.94982910]
[113.33465576 -242.53863525]
[104.47187042 -226.39761353]
[105.14165497 -211.41258240]
[105.81143951 -196.42753601]
[119.56582642 -190.65844727]
[129.49223328 -179.44346619]
[133.58171082 -164.97152710]
[130.97158813 -150.09848022]
[122.12680054 -137.78358459]
[108.75816345 -130.50065613]
[109.42794800 -115.51560974]
[110.09774017 -100.53057098]
[110.76752472 -85.54553223]
[111.43730927 -70.56049347]
[114.87634277 -64.01871490]
[112.00382996 -55.34770584]
[112.45043182 -40.35435486]
[112.89704132 -25.36100578]
[113.34364319 -10.36765480]
[113.79025269 4.62569475]
[124.01229095 -6.35200644]
[138.88322449 -8.31556320]
[151.60424805 -0.36726281]
[156.35949707 13.85903835]
[150.97491455 27.85926628]
[137.91229248 35.23270798]
[123.14365387 32.60832214]
[113.42037964 21.18420792]
[112.30473328 36.14266205]
[119.07398987 49.41015625]
[110.33171082 62.59663010]
[109.21606445 77.55508423]
[108.10041046 92.51353455]
[120.99658966 84.85268402]
[135.08001709 90.01572418]
[139.96893311 104.19664001]
[132.05938721 116.94181061]
[117.18202209 118.85594940]
[106.30446625 108.52957916]
[104.07934570 123.36362457]
[101.85422516 138.19766235]
[99.62911224 153.03170776]
[97.40399170 167.86575317]
[95.17887878 182.69979858]
[92.95375824 197.53384399]
[90.94974518 212.39936829]
[89.16728210 227.29309082]
[87.38481140 242.18681335]
[85.60234833 257.08053589]
[83.81988525 271.97424316]
[82.03741455 286.86795044]
[80.25495148 301.76168823]
[78.69442749 316.68026733]
[77.35619354 331.62045288]
[79.32220459 335.49200439]
[79.89624023 339.39520264]
[79.23927307 342.88861084]
[77.63911438 345.62832642]
[75.46759033 347.40106201]
[73.24246979 362.23510742]
[71.01734924 377.06915283]
[68.79223633 391.90319824]
[70.85268402 398.18539429]
[69.61673737 403.73242188]
[66.27368164 407.14315796]
[63.60788727 421.90435791]
[68.76945496 436.85992432]
[58.89343643 448.00952148]
[56.22764206 462.77075195]
[53.56184387 477.53195190]
[50.89604950 492.29318237]
[59.63859940 505.18524170]
[56.72482300 520.11724854]
[44.38032150 528.37249756]
[41.71452713 543.13366699]
[39.04873276 557.89489746]
[36.38293839 572.65612793]
[33.71714020 587.41735840]
[38.87871170 602.37292480]
[29.00269127 613.52252197]
[34.16426086 628.47808838]
[24.28824234 639.62768555]
[21.62244797 654.38885498]
[18.95665169 669.15008545]
[32.54330444 675.73077393]
[43.84991455 685.73394775]
[52.03746033 698.41723633]
[56.49836731 712.83959961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 206]
[18 205]
[19 204]
[21 202]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[30 193]
[31 192]
[32 191]
[33 190]
[35 188]
[36 187]
[37 184]
[38 183]
[39 182]
[40 181]
[41 176]
[42 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 155]
[62 154]
[63 153]
[65 151]
[66 150]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[82 126]
[83 125]
[84 124]
[87 122]
[88 121]
[90 120]
[92 119]
[93 118]
[94 117]
[95 116]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
