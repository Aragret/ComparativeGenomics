%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[97.99110413 594.27923584]
[83.40073395 597.92510986]
[68.39891815 598.98181152]
[53.44153976 597.41723633]
[38.98313522 593.27893066]
[25.46307755 586.69262695]
[13.29222965 577.85852051]
[2.84044909 567.04504395]
[-5.57464695 554.58074951]
[-11.69733334 540.84454346]
[-15.34154797 526.25378418]
[-16.39654922 511.25183105]
[-14.83027267 496.29464722]
[-10.69032001 481.83670044]
[-4.10249710 468.31738281]
[4.73299789 456.14755249]
[15.54766560 445.69699097]
[28.01285934 437.28329468]
[41.74977875 431.16217041]
[56.34096909 427.51962280]
[71.34302521 426.46630859]
[72.90354919 411.54772949]
[74.46407318 396.62911987]
[75.69104767 381.67938232]
[76.58386230 366.70596313]
[77.47667694 351.73257446]
[78.36949158 336.75915527]
[65.86138916 328.67132568]
[59.03559494 315.31976318]
[59.81442642 300.24462891]
[68.08872986 287.49972534]
[81.72032928 280.56237793]
[82.61314392 265.58895874]
[83.50595856 250.61555481]
[76.53991699 237.45031738]
[85.08489990 224.13514709]
[85.97771454 209.16172791]
[86.87053680 194.18832397]
[87.76335144 179.21492004]
[88.65616608 164.24151611]
[81.69012451 151.07627869]
[90.23510742 137.76110840]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[90.24623108 78.05400085]
[84.58344269 64.16397858]
[78.92065430 50.27394867]
[73.25786591 36.38392258]
[67.59508514 22.49389458]
[61.93229675 8.60386753]
[56.26950836 -5.28615904]
[55.17538071 9.67388344]
[51.22267151 24.14371872]
[44.55915833 37.58237839]
[35.43395615 49.48744965]
[24.18822289 59.41385269]
[11.24238586 66.99047852]
[-2.91956449 71.93407440]
[-17.76817322 74.05982208]
[-32.74831772 73.28824615]
[-47.29994965 69.64818573]
[-60.87904358 63.27573395]
[-72.97794342 54.40913391]
[-83.14431763 43.37985992]
[-90.99809265 30.60025597]
[-96.24563599 16.54809570]
[-98.69078827 1.74872839]
[-98.24211121 -13.24456024]
[-94.91639709 -27.87123489]
[-88.83796692 -41.58446503]
[-80.23407745 -53.87157440]
[-69.42638397 -64.27320099]
[-56.81894684 -72.40046692]
[-42.88309860 -77.94953918]
[-28.13984489 -80.71295166]
[-13.14037037 -80.58738708]
[1.55455720 -77.57756042]
[15.39555836 -71.79597473]
[27.86517525 -63.45878983]
[38.49722290 -52.87769699]
[46.89421844 -40.44827652]
[52.74040222 -26.64103317]
[53.63321686 -41.61443710]
[45.01172256 -57.88562012]
[55.23938370 -72.14611816]
[55.90916824 -87.13115692]
[56.57895279 -102.11619568]
[57.24873734 -117.10123444]
[57.69534302 -132.09458923]
[57.91867065 -147.09292603]
[58.14199829 -162.09126282]
[58.25366592 -177.09085083]
[58.25366592 -192.09085083]
[58.25366592 -207.09085083]
[58.25366592 -222.09085083]
[43.86049271 -226.74829102]
[31.61219025 -235.62715149]
[22.70872116 -247.85758972]
[18.02235794 -262.24136353]
[18.01222038 -277.36932373]
[22.67930412 -291.75936890]
[31.56637573 -304.00170898]
[43.80276871 -312.89700317]
[58.18968582 -317.57373047]
[73.31764984 -317.57373047]
[87.70456696 -312.89700317]
[99.94095612 -304.00170898]
[108.82803345 -291.75936890]
[113.49511719 -277.36932373]
[113.48497772 -262.24136353]
[108.79861450 -247.85758972]
[99.89514160 -235.62715149]
[87.64684296 -226.74829102]
[73.25366974 -222.09085083]
[73.25366974 -207.09085083]
[73.25366974 -192.09085083]
[73.25366974 -177.09085083]
[76.39717102 -170.40203857]
[73.14033508 -161.86793518]
[72.91700745 -146.86959839]
[72.69367981 -131.87126160]
[75.31825256 -127.88118744]
[75.46414185 -122.20001221]
[72.23377991 -116.43144989]
[71.56399536 -101.44641113]
[70.89421082 -86.46137238]
[70.22441864 -71.47633362]
[78.15336609 -62.34077835]
[77.71799469 -49.85101318]
[68.60662079 -40.72162247]
[67.71380615 -25.74821663]
[70.15953827 -10.94894600]
[75.82231903 2.94108129]
[81.48510742 16.83110809]
[87.14789581 30.72113419]
[92.81068420 44.61116028]
[98.47346497 58.50119019]
[104.13625336 72.39121246]
[105.21166229 57.42981720]
[109.23664093 42.97991943]
[116.05089569 29.61706161]
[125.38300323 17.87347794]
[136.86128235 8.21691418]
[150.02853394 1.03198481]
[164.36033630 -3.39513636]
[179.28585815 -4.88811874]
[194.21060181 -3.38749743]
[208.54014587 1.04695833]
[221.70372009 8.23862553]
[233.17706299 17.90106392]
[242.50315857 29.64942169]
[249.31056213 43.01576614]
[253.32815552 57.46772003]
[254.39590454 72.42967224]
[252.47126770 87.30568695]
[247.63093567 101.50325775]
[240.06767273 114.45690918]
[230.08273315 125.65069580]
[218.07380676 134.63877869]
[204.51919556 141.06315613]
[189.95878601 144.66796875]
[174.97251892 145.30961609]
[160.15728760 142.96253967]
[146.10316467 137.72024536]
[133.36993408 129.79150391]
[122.46474457 119.49214172]
[113.82196045 107.23236084]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.20851135 138.65391541]
[112.11069489 152.89015198]
[103.62957001 165.13433838]
[102.73675537 180.10774231]
[101.84394073 195.08114624]
[100.95112610 210.05455017]
[100.05830383 225.02795410]
[106.96048737 239.26419067]
[98.47936249 251.50836182]
[97.58654785 266.48178101]
[96.69373322 281.45516968]
[109.40437317 289.96322632]
[116.10555267 303.60107422]
[115.08747864 318.66195679]
[106.72346497 331.10781860]
[93.34290314 337.65197754]
[92.45008087 352.62539673]
[91.55726624 367.59878540]
[90.66445160 382.57220459]
[93.00227356 387.23928833]
[93.28758240 391.87304688]
[91.87677002 395.69726562]
[89.38267517 398.18963623]
[87.82215118 413.10824585]
[86.26162720 428.02685547]
[100.72097015 432.16186523]
[114.24252319 438.74508667]
[126.41537476 447.57644653]
[136.86961365 458.38757324]
[145.28753662 470.84988403]
[151.41333008 484.58471680]
[155.06085205 499.17468262]
[156.11926270 514.17639160]
[154.55638123 529.13391113]
[150.41970825 543.59283447]
[143.83494568 557.11358643]
[135.00221252 569.28546143]
[124.18991852 579.73846436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[24 191]
[25 190]
[26 189]
[27 188]
[32 183]
[33 182]
[34 181]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[42 173]
[43 172]
[44 171]
[45 169]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[83 132]
[84 131]
[86 128]
[87 127]
[88 126]
[89 125]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
