%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[41.47540665 411.13720703]
[37.07006454 425.48669434]
[31.37808990 439.37612915]
[24.44665337 452.69042969]
[16.33318710 465.31924438]
[7.10492706 477.15792847]
[-3.16165829 488.10839844]
[-14.38149548 498.07986450]
[-26.46161079 506.98974609]
[-39.30190277 514.76422119]
[-52.79596710 521.33880615]
[-66.83199310 526.65905762]
[-81.29366302 530.68090820]
[-96.06114960 533.37103271]
[-111.01207733 534.70709229]
[-126.02255249 534.67803955]
[-140.96820068 533.28411865]
[-155.72515869 530.53692627]
[-170.17115784 526.45910645]
[-184.18649292 521.08453369]
[-197.65501404 514.45776367]
[-210.46511841 506.63369751]
[-222.51065063 497.67712402]
[-233.69181824 487.66229248]
[-243.91593933 476.67218018]
[-253.09831238 464.79785156]
[-261.16284180 452.13775635]
[-268.04269409 438.79672241]
[-273.68087769 424.88534546]
[-278.03063965 410.51892090]
[-281.05596924 395.81643677]
[-282.73178101 380.89978027]
[-283.04418945 365.89251709]
[-281.99063110 350.91903687]
[-279.57977295 336.10339355]
[-275.83166504 321.56838989]
[-270.77731323 307.43441772]
[-264.45861816 293.81863403]
[-256.92794800 280.83386230]
[-248.24771118 268.58770752]
[-238.48980713 257.18164062]
[-227.73512268 246.71014404]
[-216.07275391 237.26004028]
[-203.59936523 228.90962219]
[-190.41828918 221.72805786]
[-176.63877869 215.77490234]
[-162.37500000 211.09944153]
[-147.74514771 207.74046326]
[-132.87046814 205.72576904]
[-117.87419891 205.07205200]
[-102.88062286 205.78475952]
[-88.01398468 207.85795593]
[-73.39746094 211.27447510]
[-59.15218735 216.00599670]
[-45.39619446 222.01332092]
[-32.24348068 229.24667358]
[-19.80303383 237.64610291]
[-10.31413460 226.02883911]
[-0.82523620 214.41157532]
[1.23353279 199.65994263]
[15.95584488 193.86648560]
[25.44474411 182.24922180]
[34.93364334 170.63197327]
[36.99241257 155.88032532]
[51.71472168 150.08688354]
[61.20362091 138.46961975]
[63.26239014 123.71797943]
[77.98470306 117.92453003]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[117.46633911 60.85523987]
[125.88095856 48.43774414]
[111.16724396 51.35435486]
[97.96102905 44.24129105]
[92.30000305 30.35054398]
[96.77232361 16.03277969]
[109.33329773 7.83388710]
[124.24022675 9.50228882]
[134.67785645 20.27521515]
[135.87374878 35.22921753]
[145.53456116 23.75451660]
[144.37078857 8.22121716]
[154.33168030 -3.27813864]
[169.14747620 -4.29190016]
[178.80828857 -15.76659966]
[188.38340759 -27.31290245]
[197.87231445 -38.93016434]
[207.36120605 -50.54742813]
[216.85011292 -62.16469193]
[219.38482666 -80.40357208]
[236.02476501 -85.97846985]
[245.33964539 -97.73571777]
[254.65452576 -109.49296570]
[263.88162231 -121.31923676]
[273.02044678 -133.21386719]
[282.15924072 -145.10850525]
[291.29803467 -157.00314331]
[280.44989014 -167.38414001]
[270.78778076 -178.87719727]
[262.42492676 -191.34756470]
[255.45939636 -204.64901733]
[249.97286987 -218.62562561]
[246.02967834 -233.11349487]
[243.67604065 -247.94277954]
[242.93954468 -262.93960571]
[243.82884216 -277.92813110]
[246.33351135 -292.73266602]
[250.42416382 -307.17959595]
[256.05285645 -321.09954834]
[263.15356445 -334.32931519]
[271.64309692 -346.71380615]
[281.42187500 -358.10778809]
[292.37524414 -368.37768555]
[304.37478638 -377.40310669]
[317.27984619 -385.07818604]
[330.93905640 -391.31298828]
[345.19232178 -396.03439331]
[359.87252808 -399.18704224]
[374.80752563 -400.73397827]
[389.82223511 -400.65704346]
[404.74060059 -398.95718384]
[419.38769531 -395.65429688]
[433.59185791 -390.78707886]
[447.18649292 -384.41265869]
[460.01220703 -376.60574341]
[471.91867065 -367.45788574]
[482.76623535 -357.07629395]
[492.42773438 -345.58270264]
[500.78991699 -333.11187744]
[507.75473022 -319.81005859]
[513.24047852 -305.83316040]
[517.18292236 -291.34509277]
[519.53576660 -276.51568604]
[520.27142334 -261.51879883]
[519.38134766 -246.53031921]
[516.87591553 -231.72592163]
[512.78448486 -217.27922058]
[507.15502930 -203.35955811]
[500.05358887 -190.13017273]
[491.56338501 -177.74615479]
[481.78399658 -166.35269165]
[470.83007812 -156.08338928]
[458.83004761 -147.05862427]
[445.92459106 -139.38421631]
[432.26501465 -133.15014648]
[418.01150513 -128.42951965]
[403.33114624 -125.27765656]
[388.39605713 -123.73152924]
[373.38137817 -123.80925751]
[358.46307373 -125.50993347]
[343.81613159 -128.81361389]
[329.61227417 -133.68157959]
[316.01797485 -140.05673218]
[303.19265747 -147.86433411]
[294.05386353 -135.96969604]
[284.91506958 -124.07507324]
[275.77627563 -112.18043518]
[274.19378662 -104.96118164]
[266.41177368 -100.17808533]
[257.09689331 -88.42083740]
[247.78201294 -76.66358185]
[248.86279297 -64.61540985]
[241.19863892 -54.74401855]
[228.46737671 -52.67579269]
[218.97846985 -41.05852890]
[209.48957825 -29.44126701]
[200.00067139 -17.82400322]
[198.20396423 -10.65506744]
[190.28298950 -6.10578966]
[180.62217712 5.36891031]
[182.14768982 20.14078903]
[172.51371765 31.91539001]
[157.00926208 33.41532516]
[147.34844971 44.89002609]
[138.29846191 56.85236359]
[129.88383484 69.26985931]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[114.25935364 112.55035400]
[126.12173462 121.73097992]
[128.15472412 136.59257507]
[119.19374084 148.62173462]
[104.37203979 150.92761230]
[92.18016052 142.18930054]
[89.60196686 127.41342926]
[86.86448669 142.99600220]
[72.82088470 147.95851135]
[63.33198547 159.57577515]
[60.59450912 175.15835571]
[46.55090714 180.12086487]
[37.06200790 191.73812866]
[27.57310867 203.35539246]
[24.83563042 218.93797302]
[10.79202747 223.90048218]
[1.30312872 235.51774597]
[-8.18577003 247.13500977]
[2.52831292 257.64804077]
[12.24199390 269.09179688]
[20.87478256 281.37145996]
[28.35514259 294.38528442]
[34.62108612 308.02539062]
[39.62069321 322.17883301]
[43.31253433 336.72824097]
[45.66601562 351.55310059]
[46.66163635 366.53054810]
[46.29114532 381.53646851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 200]
[58 199]
[59 198]
[61 196]
[62 195]
[63 194]
[65 192]
[66 191]
[68 189]
[69 182]
[71 180]
[72 179]
[73 178]
[74 177]
[82 176]
[83 175]
[86 172]
[87 171]
[88 169]
[89 168]
[90 167]
[91 166]
[93 163]
[94 162]
[95 161]
[96 159]
[97 158]
[98 157]
[99 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
