%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[120.24184418 445.75372314]
[119.42717743 430.75863647]
[120.35887909 415.77035522]
[123.02435303 400.99160767]
[127.38755035 386.62222290]
[133.38946533 372.85656738]
[140.94891357 359.88076782]
[149.96368408 347.87033081]
[160.31184387 336.98767090]
[171.85346985 327.38000488]
[184.43244934 319.17721558]
[177.75225830 305.74682617]
[171.07205200 292.31646729]
[158.47636414 284.36676025]
[159.25816345 268.56488037]
[152.57795715 255.13452148]
[145.89776611 241.70413208]
[139.21757507 228.27375793]
[132.53738403 214.84338379]
[125.85718536 201.41300964]
[120.06378937 196.82406616]
[119.17919159 187.73257446]
[116.90230560 202.55876160]
[108.07057953 214.68315125]
[94.65705872 221.39710999]
[79.65834045 221.20074463]
[66.42519379 214.13790894]
[57.91392136 201.78645325]
[56.02597046 186.90574646]
[61.18311310 172.82015991]
[72.23323822 162.67645264]
[86.70770264 158.74075317]
[101.37289429 161.89230347]
[112.95256805 171.42706299]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[65.93940735 61.85244370]
[51.31256866 58.22740936]
[38.13276291 50.94533157]
[27.29551315 40.50786591]
[19.53539085 27.63082314]
[15.37623501 13.19509029]
[15.09578896 -1.81363666]
[18.70716286 -16.37215042]
[25.95835495 -29.48949432]
[36.34981918 -40.27440643]
[49.16887665 -47.99588394]
[44.98186493 -62.39966583]
[40.79485321 -76.80345154]
[37.96239471 -62.07330322]
[31.14597511 -48.71155167]
[20.88316727 -37.77195358]
[7.98333788 -30.11725807]
[-6.53617859 -26.35113907]
[-21.53031158 -26.77061272]
[-35.81656265 -31.34259605]
[-48.26825714 -39.70652390]
[-57.90340424 -51.20278168]
[-63.96213531 -64.92472839]
[-65.96662903 -79.79019165]
[-63.75881195 -94.62682343]
[-57.51279449 -108.26453400]
[-47.72116470 -119.62780762]
[-35.15613174 -127.82048798]
[-20.80862808 -132.19645691]
[-5.81015778 -132.41062927]
[8.65643883 -128.44609070]
[21.45026588 -120.61550140]
[31.56234741 -109.53643036]
[38.19628525 -96.07931519]
[38.41961288 -111.07765198]
[38.64294052 -126.07598877]
[38.86626816 -141.07432556]
[38.75460052 -156.07391357]
[38.30799484 -171.06726074]
[37.86138916 -186.06060791]
[37.41478348 -201.05395508]
[36.96817780 -216.04731750]
[28.82342339 -229.61099243]
[36.17835617 -242.56300354]
[35.73175049 -257.55633545]
[20.84958649 -259.72253418]
[6.56973076 -264.44024658]
[-6.67387009 -271.56613159]
[-18.47875786 -280.88360596]
[-28.48619461 -292.10958862]
[-36.39206696 -304.90286255]
[-41.95612335 -318.87472534]
[-45.00927734 -333.60052490]
[-45.45874786 -348.63278198]
[-43.29087830 -363.51470947]
[-38.57154465 -377.79403687]
[-31.44416237 -391.03683472]
[-22.12532806 -402.84066772]
[-10.89822578 -412.84683228]
[1.89596260 -420.75125122]
[15.86843681 -426.31372070]
[30.59458923 -429.36520386]
[45.62690735 -429.81295776]
[60.50857925 -427.64340210]
[74.78736877 -422.92245483]
[88.02935028 -415.79357910]
[99.83212280 -406.47338867]
[109.83701324 -395.24514771]
[117.73998260 -382.45007324]
[123.30087280 -368.47695923]
[126.35068512 -353.75045776]
[126.79674530 -338.71810913]
[124.62550354 -323.83666992]
[119.90293121 -309.55844116]
[112.77254486 -296.31726074]
[103.45103455 -284.51553345]
[92.22165680 -274.51190186]
[79.42568207 -266.61041260]
[65.45194244 -261.05108643]
[50.72510147 -258.00296021]
[51.17170715 -243.00959778]
[59.28451538 -230.51834106]
[51.96152878 -216.49391174]
[52.40813446 -201.50056458]
[52.85474014 -186.50721741]
[53.30134583 -171.51387024]
[53.74795151 -156.52052307]
[56.04976273 -153.84956360]
[57.17223358 -149.93099976]
[56.54307175 -145.33128357]
[53.86460495 -140.85099792]
[53.64127731 -125.85266113]
[53.41794968 -110.85432434]
[53.19462204 -95.85598755]
[55.19863510 -80.99046326]
[59.38564682 -66.58667755]
[63.57265854 -52.18289566]
[78.53341675 -52.53668594]
[93.08712006 -49.00304031]
[106.24026489 -41.81700134]
[117.09337616 -31.46314430]
[124.90248108 -18.64291000]
[129.13014221 -4.22708845]
[129.48239136 10.80333424]
[125.92922211 25.42392540]
[118.70701599 38.63663101]
[108.30279541 49.53790283]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.35634613 167.24005127]
[132.70753479 181.25308228]
[139.28756714 194.73281860]
[145.96775818 208.16319275]
[152.64794922 221.59356689]
[159.32814026 235.02394104]
[166.00834656 248.45431519]
[172.68853760 261.88470459]
[185.76205444 270.79501343]
[184.50244141 285.63626099]
[191.18263245 299.06665039]
[197.86282349 312.49700928]
[211.99377441 307.41442871]
[226.61924744 304.00674438]
[241.54142761 302.32006836]
[256.55853271 302.37716675]
[271.46743774 304.17733765]
[286.06655884 307.69616699]
[300.15844727 312.88607788]
[313.55252075 319.67691040]
[326.06765747 327.97680664]
[337.53454590 337.67355347]
[347.79818726 348.63595581]
[356.71972656 360.71578979]
[364.17849731 373.74972534]
[370.07369995 387.56143188]
[374.32553101 401.96414185]
[376.87655640 416.76309204]
[377.69219971 431.75814819]
[376.76150513 446.74645996]
[374.09701538 461.52542114]
[369.73480225 475.89508057]
[363.73379517 489.66116333]
[356.17520142 502.63745117]
[347.16125488 514.64849854]
[336.81381226 525.53179932]
[325.27282715 535.14025879]
[312.69439697 543.34387207]
[299.24859619 550.03173828]
[285.11730957 555.11340332]
[270.49163818 558.52008057]
[255.56932068 560.20581055]
[240.55223083 560.14764404]
[225.64343262 558.34655762]
[211.04454041 554.82672119]
[196.95300293 549.63586426]
[183.55938721 542.84411621]
[171.04483032 534.54339600]
[159.57856750 524.84588623]
[149.31567383 513.88281250]
[140.39494324 501.80236816]
[132.93701172 488.76794434]
[127.04274750 474.95584106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 169]
[12 168]
[13 167]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 160]
[22 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[40 152]
[41 151]
[42 150]
[53 139]
[54 138]
[55 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[86 123]
[87 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
