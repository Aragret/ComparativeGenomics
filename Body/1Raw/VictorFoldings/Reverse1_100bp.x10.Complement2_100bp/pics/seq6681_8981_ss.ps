%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[51.38459015 472.30126953]
[38.20744705 464.41085815]
[30.75493431 450.98120117]
[31.03174019 435.62481689]
[38.96340942 422.47247314]
[52.41635895 415.06207275]
[52.63968658 400.06375122]
[52.86301422 385.06539917]
[53.08634186 370.06707764]
[53.30966949 355.06872559]
[43.81930542 366.68481445]
[29.58868599 371.42709351]
[15.02731895 367.82620239]
[4.64720392 356.99783325]
[1.66473138 342.29733276]
[7.00405359 328.27978516]
[19.01072311 319.28869629]
[33.96434402 318.11001587]
[47.23137283 325.10900879]
[54.70093536 338.11721802]
[56.92605591 323.28317261]
[59.15117264 308.44912720]
[61.37628937 293.61508179]
[63.60140610 278.78103638]
[56.66590500 268.87017822]
[58.39828491 256.49346924]
[68.40998840 248.36151123]
[62.85139084 234.54299927]
[72.73524475 222.18905640]
[75.18097687 207.38978577]
[77.62670135 192.59051514]
[80.07243347 177.79124451]
[82.51815796 162.99197388]
[72.14904022 149.75112915]
[74.61312103 132.77339172]
[88.86895752 122.63483429]
[91.09407806 107.80078888]
[81.64236450 119.44832611]
[68.48957062 126.65971375]
[53.58684158 128.36517334]
[39.14490128 124.31173706]
[27.30613327 115.10068512]
[19.82674026 102.09842682]
[17.81625175 87.23377228]
[21.57290840 72.71180725]
[30.53943443 60.68677139]
[43.38569641 52.94251633]
[58.20603180 50.62784958]
[72.80193329 54.08613968]
[85.00817871 62.80437469]
[93.01404572 75.48925018]
[95.63195038 90.25712585]
[100.87866974 76.20465851]
[106.12538910 62.15218735]
[94.83731079 72.03041077]
[80.97846222 77.76908112]
[66.01139832 78.76258087]
[51.51563263 74.90605927]
[39.02093124 66.60651398]
[29.84589767 54.73980713]
[24.95878983 40.55826187]
[24.87535667 25.55849457]
[29.60440254 11.32346344]
[38.64686203 -0.64457428]
[51.04846191 -9.08260345]
[65.50043488 -13.10013771]
[80.47762299 -12.27319717]
[94.39945221 -6.68905210]
[105.79671478 3.06299067]
[113.46663666 15.95377445]
[116.59979248 30.62290382]
[114.86547089 45.52249527]
[123.46403503 33.23165512]
[132.06260681 20.94081879]
[140.66116333 8.64998055]
[149.25973511 -3.64085722]
[145.89996338 -20.80859756]
[155.80102539 -34.81873703]
[172.43722534 -37.28362274]
[180.85183716 -49.70111847]
[189.26644897 -62.11861420]
[190.60281372 -77.88328552]
[204.14767456 -84.07891083]
[205.48402405 -99.84357452]
[219.02890015 -106.03920746]
[204.52012634 -102.23190308]
[190.50292969 -107.57215118]
[182.20538330 -120.06818390]
[182.72225952 -135.05928040]
[191.86077881 -146.95411682]
[206.21250916 -151.31625366]
[220.42459106 -146.51867676]
[229.19627380 -134.35079956]
[229.25559998 -119.34980011]
[239.08618164 -130.67939758]
[248.91676331 -142.00898743]
[258.74734497 -153.33857727]
[268.57794189 -164.66816711]
[278.40850830 -175.99777222]
[268.12219238 -186.93315125]
[258.99499512 -198.85310364]
[251.12055969 -211.63528442]
[244.57968140 -225.14854431]
[239.43951416 -239.25421143]
[235.75277710 -253.80752563]
[233.55732727 -268.65914917]
[232.87565613 -283.65670776]
[233.71479797 -298.64627075]
[236.06611633 -313.47399902]
[239.90548706 -327.98779297]
[245.19351196 -342.03869629]
[251.87594604 -355.48251343]
[259.88418579 -368.18130493]
[269.13607788 -380.00473022]
[279.53668213 -390.83148193]
[290.97924805 -400.55047607]
[303.34637451 -409.06195068]
[316.51113892 -416.27856445]
[330.33847046 -422.12628174]
[344.68649292 -426.54510498]
[359.40789795 -429.48965454]
[374.35171509 -430.92974854]
[389.36453247 -430.85055542]
[404.29232788 -429.25296021]
[418.98187256 -426.15332031]
[433.28247070 -421.58343506]
[447.04736328 -415.59020996]
[460.13531494 -408.23513794]
[472.41198730 -399.59371948]
[483.75140381 -389.75460815]
[494.03723145 -378.81875610]
[503.16390991 -366.89840698]
[511.03781128 -354.11587524]
[517.57806396 -340.60232544]
[522.71759033 -326.49642944]
[526.40368652 -311.94296265]
[528.59851074 -297.09124756]
[529.27954102 -282.09365845]
[528.43975830 -267.10412598]
[526.08776855 -252.27648926]
[522.24774170 -237.76286316]
[516.95910645 -223.71220398]
[510.27609253 -210.26867676]
[502.26727295 -197.57025146]
[493.01486206 -185.74722290]
[482.61380005 -174.92092896]
[471.17080688 -165.20243835]
[458.80328369 -156.69151306]
[445.63821411 -149.47546387]
[431.81060791 -143.62835693]
[417.46240234 -139.21017456]
[402.74084473 -136.26628113]
[387.79699707 -134.82685852]
[372.78417969 -134.90667725]
[357.85644531 -136.50494385]
[343.16702271 -139.60523987]
[328.86663818 -144.17575073]
[315.10202026 -150.16957092]
[302.01440430 -157.52522278]
[289.73809814 -166.16719055]
[279.90753174 -154.83758545]
[270.07693481 -143.50799561]
[260.24636841 -132.17840576]
[250.41577148 -120.84880829]
[240.58518982 -109.51921844]
[231.44639587 -97.62458801]
[230.71191406 -82.74810028]
[216.56517029 -75.66429138]
[215.83068848 -60.78780746]
[201.68394470 -53.70399475]
[193.26933289 -41.28650284]
[184.85472107 -28.86900520]
[189.03263855 -16.67989349]
[185.37258911 -4.12257957]
[174.99569702 4.15573788]
[161.55056763 4.95770693]
[152.95199585 17.24854469]
[144.35343933 29.53938293]
[135.75486755 41.83021927]
[127.15631104 54.12105942]
[120.17785645 67.39890289]
[114.93113708 81.45137787]
[109.68441772 95.50384521]
[105.92812347 110.02590942]
[103.70300293 124.85994720]
[112.90249634 134.69783020]
[114.72957611 147.84591675]
[108.73915863 159.47334290]
[97.31742859 165.43771362]
[94.87170410 180.23698425]
[92.42597198 195.03625488]
[89.98024750 209.83552551]
[87.53451538 224.63479614]
[92.91818237 239.51184082]
[83.20925903 250.80725098]
[90.09120178 267.88708496]
[78.43544769 281.00616455]
[76.21033478 295.84020996]
[73.98521423 310.67425537]
[71.76010132 325.50830078]
[69.53498077 340.34231567]
[68.30800629 355.29205322]
[68.08467865 370.29040527]
[67.86135101 385.28872681]
[67.63802338 400.28707886]
[67.41469574 415.28540039]
[80.64104462 423.09304810]
[88.17760468 436.47573853]
[87.99707031 451.83355713]
[80.14801025 465.03536987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[27 195]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[36 185]
[37 184]
[52 183]
[53 182]
[54 181]
[72 180]
[73 179]
[74 178]
[75 177]
[76 176]
[79 172]
[80 171]
[81 170]
[83 168]
[85 166]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
[99 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
