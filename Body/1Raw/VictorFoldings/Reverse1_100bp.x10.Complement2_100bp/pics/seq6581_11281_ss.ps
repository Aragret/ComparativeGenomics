%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[86.96963501 819.10180664]
[72.00540161 818.00646973]
[57.13017273 816.04290771]
[42.39428329 813.21771240]
[27.84759521 809.54052734]
[13.53932953 805.02368164]
[-0.48209852 799.68255615]
[-14.16924477 793.53521729]
[-27.47579575 786.60241699]
[-40.35672760 778.90759277]
[-52.76845169 770.47686768]
[-64.66897583 761.33874512]
[-76.01802826 751.52410889]
[-86.77720642 741.06616211]
[-96.91010284 730.00036621]
[-106.38243866 718.36407471]
[-115.16215515 706.19671631]
[-123.21955109 693.53942871]
[-130.52734375 680.43511963]
[-137.06083679 666.92797852]
[-142.79789734 653.06390381]
[-147.71913147 638.88958740]
[-151.80787659 624.45318604]
[-155.05029297 609.80346680]
[-157.43540955 594.98999023]
[-158.95516968 580.06286621]
[-159.60441589 565.07263184]
[-159.38096619 550.07006836]
[-158.28556824 535.10583496]
[-156.32192993 520.23059082]
[-153.49668884 505.49472046]
[-149.81941223 490.94805908]
[-145.30253601 476.63980103]
[-139.96134949 462.61840820]
[-133.81393433 448.93127441]
[-126.88107300 435.62475586]
[-119.18623352 422.74386597]
[-110.75545502 410.33218384]
[-101.61726379 398.43167114]
[-91.80258179 387.08267212]
[-81.34461212 376.32354736]
[-70.27875519 366.19067383]
[-58.64243698 356.71841431]
[-46.47504044 347.93872070]
[-33.81773758 339.88137817]
[-20.71335411 332.57363892]
[-7.20623207 326.04022217]
[6.65792370 320.30319214]
[20.83220100 315.38204956]
[35.26863861 311.29336548]
[49.91838837 308.05099487]
[64.73188019 305.66592407]
[79.65898895 304.14624023]
[94.64920807 303.49703979]
[94.87253571 288.49871826]
[95.09586334 273.50036621]
[95.31919098 258.50204468]
[95.54251862 243.50370789]
[95.65419006 228.50411987]
[95.65419006 213.50411987]
[95.43086243 198.50578308]
[94.98425293 183.51243591]
[94.53764343 168.51907349]
[86.42483521 156.02781677]
[93.74782562 142.00340271]
[78.10899353 136.38899231]
[65.82164764 125.20347595]
[58.76696777 110.15933228]
[58.02502060 93.55980682]
[63.70939636 77.94627380]
[74.94982147 65.70913696]
[90.02539825 58.72189331]
[89.13258362 43.74848557]
[88.23976898 28.77507973]
[77.20355225 21.05390167]
[72.69514465 8.56852150]
[76.14971161 -4.04687023]
[86.08992767 -12.24574375]
[85.42014313 -27.23078346]
[76.44570923 -36.49481583]
[76.19634247 -48.98967743]
[84.26041412 -58.00617599]
[83.81381226 -72.99952698]
[72.59261322 -83.80334473]
[72.35327911 -99.01509094]
[82.72222137 -109.64620972]
[82.27561188 -124.63955688]
[81.82900238 -139.63290405]
[81.27079773 -154.62251282]
[80.60101318 -169.60755920]
[79.93122101 -184.59259033]
[79.26143646 -199.57763672]
[78.59165192 -214.56266785]
[77.92186737 -229.54771423]
[77.25208282 -244.53276062]
[62.71934509 -248.78459167]
[50.35604095 -257.52688599]
[41.50325012 -269.81127930]
[37.12126160 -284.30532837]
[37.68539429 -299.43676758]
[43.13446045 -313.56427002]
[52.87738419 -325.15539551]
[65.85732269 -332.95281982]
[80.66632080 -336.11074829]
[95.69799042 -334.28659058]
[109.32183075 -327.67828369]
[120.06000519 -317.00259399]
[126.74774170 -303.41757202]
[128.65959167 -288.39678955]
[125.58816528 -273.56964111]
[117.86663818 -260.54440308]
[106.33258057 -250.73397827]
[92.23712158 -245.20254517]
[92.90690613 -230.21749878]
[93.57669067 -215.23246765]
[94.24647522 -200.24742126]
[94.91625977 -185.26239014]
[95.58605194 -170.27734375]
[96.25583649 -155.29231262]
[99.69487000 -148.75053406]
[96.82235718 -140.07951355]
[97.26895905 -125.08616638]
[97.71556854 -110.09281921]
[108.69889832 -100.09771729]
[109.36540985 -84.89868927]
[98.80715942 -73.44612885]
[99.25376892 -58.45278168]
[109.26797485 -44.04158401]
[100.40518188 -27.90056801]
[101.07496643 -12.91552925]
[113.95969391 -2.10708380]
[115.06233978 15.01305199]
[103.21317291 27.88226509]
[104.10598755 42.85567093]
[104.99880219 57.82907486]
[117.73789978 61.41578293]
[128.75424194 68.74990082]
[136.97789001 79.11912537]
[141.61012268 91.51635742]
[142.20108032 104.73754120]
[138.69332886 117.49860382]
[131.42756653 128.56015015]
[121.10948181 136.84785461]
[108.74117279 141.55679321]
[116.88592529 155.12046814]
[109.53099823 168.07247925]
[109.97760010 183.06582642]
[110.42420959 198.05917358]
[113.56832886 203.87518311]
[113.33786774 209.55355835]
[110.65419006 213.50411987]
[110.65419006 228.50411987]
[113.78359222 237.08575439]
[110.54085541 243.72703552]
[110.31752777 258.72537231]
[110.09420013 273.72369385]
[109.87087250 288.72204590]
[109.64754486 303.72036743]
[124.61178589 304.81558228]
[139.48703003 306.77905273]
[154.22294617 309.60409546]
[168.76966858 313.28121948]
[183.07797241 317.79791260]
[197.09944153 323.13891602]
[210.78663635 329.28616333]
[224.09324646 336.21884155]
[236.97424316 343.91354370]
[249.38603210 352.34414673]
[261.28662109 361.48220825]
[272.63577271 371.29675293]
[283.39501953 381.75457764]
[293.52801514 392.82031250]
[303.00045776 404.45651245]
[311.78027344 416.62380981]
[319.83776855 429.28100586]
[327.14569092 442.38528442]
[333.67929077 455.89233398]
[339.41644287 469.75640869]
[344.33779907 483.93063354]
[348.42666626 498.36703491]
[351.66918945 513.01672363]
[354.05444336 527.83020020]
[355.57434082 542.75726318]
[356.22369385 557.74749756]
[356.00036621 572.75012207]
[354.90509033 587.71435547]
[352.94158936 602.58959961]
[350.11645508 617.32550049]
[346.43930054 631.87219238]
[341.92254639 646.18048096]
[336.58148193 660.20190430]
[330.43417358 673.88909912]
[323.50143433 687.19567871]
[315.80670166 700.07659912]
[307.37600708 712.48840332]
[298.23791504 724.38897705]
[288.42333984 735.73803711]
[277.96545410 746.49725342]
[266.89968872 756.63018799]
[255.26344299 766.10260010]
[243.09611511 774.88238525]
[230.43888855 782.93981934]
[217.33456421 790.24768066]
[203.82749939 796.78118896]
[189.96337891 802.51831055]
[175.78915405 807.43963623]
[161.35273743 811.52844238]
[146.70301819 814.77087402]
[131.88954163 817.15606689]
[116.96244812 818.67590332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 152]
[60 151]
[61 148]
[62 147]
[63 146]
[65 144]
[72 135]
[73 134]
[74 133]
[78 130]
[79 129]
[82 127]
[83 126]
[86 123]
[87 122]
[88 121]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
