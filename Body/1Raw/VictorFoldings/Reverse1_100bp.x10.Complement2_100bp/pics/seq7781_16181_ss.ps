%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[127.48545074 510.21044922]
[116.40660858 520.94647217]
[101.27765656 523.96612549]
[86.92618561 518.30584717]
[77.93170929 505.77178955]
[77.16432953 490.36349487]
[84.86890411 476.99777222]
[98.58694458 469.93951416]
[99.92517853 454.99932861]
[101.26341248 440.05914307]
[102.60164642 425.11895752]
[103.93988037 410.17877197]
[104.49809265 395.18917847]
[104.27476501 380.19082642]
[104.05143738 365.19247437]
[103.71646118 350.19622803]
[103.26985168 335.20288086]
[102.82324982 320.20953369]
[102.37664032 305.21618652]
[101.93003845 290.22283936]
[101.48342896 275.22949219]
[101.03682709 260.23614502]
[92.92401123 247.74487305]
[100.24700165 233.72044373]
[99.57721710 218.73541260]
[98.68440247 203.76200867]
[97.79158783 188.78858948]
[96.89877319 173.81518555]
[85.62271118 164.15153503]
[84.50396729 148.97909546]
[94.71655273 137.21725464]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[83.79217529 78.62685394]
[90.95345306 65.56678772]
[90.28366852 50.58174896]
[89.61388397 35.59671021]
[80.25285339 47.31725693]
[65.82148743 51.40818024]
[51.70232773 46.34367371]
[43.16146469 34.01266861]
[43.38443756 19.01432419]
[52.28807831 6.94265604]
[66.55155182 2.30009484]
[80.85492706 6.81820202]
[89.86379242 18.81293869]
[90.97944641 3.85448575]
[92.09509277 -11.10396767]
[93.21073914 -26.06242180]
[94.32639313 -41.02087402]
[95.44203949 -55.97932816]
[96.55768585 -70.93778229]
[96.78101349 -85.93611908]
[96.11122894 -100.92115784]
[95.44144440 -115.90619659]
[94.77165985 -130.89123535]
[86.42586517 -144.33215332]
[93.58715057 -157.39222717]
[90.04747772 -171.96859741]
[83.77011108 -185.59191895]
[77.49275208 -199.21522522]
[71.21539307 -212.83854675]
[64.93803406 -226.46185303]
[58.66067123 -240.08517456]
[52.38331223 -253.70849609]
[39.58088684 -263.00411987]
[41.28182220 -277.80126953]
[26.89412880 -273.47225952]
[12.04395962 -271.18783569]
[-2.97961998 -270.99246216]
[-17.88417435 -272.88992310]
[-32.37957764 -276.84332275]
[-46.18367767 -282.77569580]
[-59.02777100 -290.57153320]
[-70.66184235 -300.07916260]
[-80.85943604 -311.11343384]
[-89.42205048 -323.45959473]
[-96.18300629 -336.87731934]
[-101.01070404 -351.10543823]
[-103.81117249 -365.86700439]
[-104.52989960 -380.87466431]
[-103.15289307 -395.83627319]
[-99.70696259 -410.46063232]
[-94.25917053 -424.46304321]
[-86.91557312 -437.57095337]
[-77.81911469 -449.52923584]
[-67.14685059 -460.10510254]
[-55.10652924 -469.09271240]
[-41.93251419 -476.31707764]
[-27.88124466 -481.63757324]
[-13.22622967 -484.95068359]
[1.74726522 -486.19189453]
[16.74777603 -485.33703613]
[31.48331451 -482.40274048]
[45.66704941 -477.44616699]
[59.02288818 -470.56372070]
[71.29085541 -461.88946533]
[82.23215485 -451.59216309]
[91.63381195 -439.87231445]
[99.31281281 -426.95800781]
[105.11968994 -413.10064697]
[108.94140625 -398.56997681]
[110.70357513 -383.64883423]
[110.37189484 -368.62762451]
[107.95281982 -353.79879761]
[103.49343872 -339.45098877]
[97.08055878 -325.86346436]
[88.83899689 -313.30068970]
[78.92919159 -302.00726318]
[67.54403687 -292.20294189]
[54.90513992 -284.07864380]
[67.25856018 -275.75744629]
[66.00662994 -259.98583984]
[72.28398895 -246.36253357]
[78.56134796 -232.73922729]
[84.83870697 -219.11590576]
[91.11607361 -205.49258423]
[97.39343262 -191.86927795]
[103.67079163 -178.24595642]
[104.06047058 -193.24089050]
[107.73259735 -207.78446960]
[114.50801849 -221.16705322]
[124.05612946 -232.73570251]
[135.91107178 -241.92593384]
[149.49440002 -248.28935242]
[164.14335632 -251.51547241]
[179.14320374 -251.44688416]
[193.76205444 -248.08691406]
[207.28660583 -241.59953308]
[219.05699158 -232.30125427]
[228.49890137 -220.64576721]
[235.15164185 -207.20176697]
[238.69059753 -192.62521362]
[238.94311523 -177.62733459]
[235.89686584 -162.93992615]
[229.70048523 -149.27958679]
[220.65629578 -137.31285095]
[209.20559692 -127.62360382]
[195.90708923 -120.68460083]
[181.40963745 -116.83441925]
[166.42060852 -116.26090240]
[151.67134094 -118.99205017]
[137.88148499 -124.89459991]
[125.72389221 -133.68054199]
[115.79174805 -144.92120361]
[108.57218933 -158.06201172]
[116.87007141 -145.69291687]
[109.75669861 -131.56101990]
[110.42648315 -116.57598114]
[111.09626770 -101.59094238]
[111.76605225 -86.60590363]
[121.12708282 -98.32644653]
[135.55844116 -102.41737366]
[149.67761230 -97.35286713]
[158.21847534 -85.02185822]
[157.99549866 -70.02352142]
[149.09185791 -57.95185089]
[134.82838440 -53.30928802]
[120.52500916 -57.82739639]
[111.51614380 -69.82213593]
[110.40048981 -54.86367798]
[109.28484344 -39.90522766]
[108.16919708 -24.94677162]
[107.05354309 -9.98831940]
[105.93789673 4.97013426]
[104.82225037 19.92858696]
[104.59892273 34.92692566]
[105.26870728 49.91196442]
[105.93849182 64.89700317]
[114.23637390 77.26609039]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.68995667 136.32443237]
[121.22785187 146.78936768]
[121.91999054 161.98724365]
[111.87217712 172.92237854]
[112.76499176 187.89578247]
[113.65780640 202.86918640]
[114.55062103 217.84259033]
[117.86651611 223.56242371]
[117.80522156 229.24513245]
[115.24034882 233.27383423]
[123.38510132 246.83752441]
[116.03017426 259.78952026]
[116.47677612 274.78286743]
[116.92338562 289.77621460]
[117.36998749 304.76956177]
[117.81659698 319.76293945]
[118.26320648 334.75628662]
[118.70980835 349.74963379]
[122.09333801 358.23428345]
[119.04977417 364.96914673]
[119.27310181 379.96749878]
[119.49642944 394.96585083]
[129.88076782 384.14154053]
[144.77928162 382.39959717]
[157.38056946 390.53643799]
[161.92347717 404.83193970]
[156.33105469 418.75045776]
[143.16009521 425.92858887]
[128.43217468 423.08462524]
[118.88006592 411.51699829]
[117.54183197 426.45718384]
[116.20359802 441.39736938]
[114.86536407 456.33755493]
[113.52713013 471.27774048]
[125.77239990 480.66162109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[13 197]
[14 196]
[15 195]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[24 185]
[25 182]
[26 181]
[27 180]
[28 179]
[31 176]
[32 175]
[33 174]
[35 173]
[37 171]
[38 170]
[39 169]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
