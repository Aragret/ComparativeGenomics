%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[51.91362762 729.41571045]
[47.30225372 715.07873535]
[45.88116837 700.08557129]
[47.71684265 685.13751221]
[52.72341919 670.93371582]
[60.66672897 658.13848877]
[71.17524719 647.35028076]
[83.75747681 639.07366943]
[97.82491302 633.69586182]
[95.59980011 618.86181641]
[93.37467957 604.02777100]
[91.14956665 589.19372559]
[88.92444611 574.35968018]
[86.69932556 559.52563477]
[78.60844421 572.15643311]
[64.68098450 577.72656250]
[50.11155319 574.15838623]
[40.33418274 562.78283691]
[38.99559402 547.84271240]
[46.59504700 534.91027832]
[60.29813004 528.80895996]
[74.99393463 531.81451416]
[85.20178986 542.80694580]
[84.75518036 527.81359863]
[84.30857849 512.82025146]
[83.86196899 497.82690430]
[83.41536713 482.83352661]
[82.96875763 467.84017944]
[82.52215576 452.84683228]
[82.07554626 437.85348511]
[81.51733398 422.86389160]
[80.84754944 407.87884521]
[80.17776489 392.89379883]
[79.50798035 377.90875244]
[67.73400879 373.32708740]
[58.53351212 364.60058594]
[53.29762268 353.00003052]
[52.83637619 340.23419189]
[57.25360107 328.19827271]
[65.92626190 318.69247437]
[77.59207153 313.15277100]
[77.36874390 298.15444946]
[77.14541626 283.15609741]
[76.92208862 268.15777588]
[67.78179169 280.05123901]
[53.69867706 285.21514893]
[39.03655243 282.04937744]
[28.33863831 271.53488159]
[24.91979790 256.92968750]
[29.83939934 242.75938416]
[41.57304764 233.41479492]
[56.48494339 231.79142761]
[69.95447540 238.39231873]
[77.80803680 251.17233276]
[79.59049988 236.27862549]
[81.37296295 221.38490295]
[82.93348694 206.46629333]
[84.27172089 191.52610779]
[85.60995483 176.58592224]
[86.94818878 161.64573669]
[88.28642273 146.70555115]
[89.62465668 131.76538086]
[90.96289062 116.82518768]
[81.75296783 105.63932800]
[83.04565430 91.20758820]
[94.09692383 81.83657837]
[95.43515778 66.89639282]
[96.77339172 51.95620728]
[97.33160400 36.96659851]
[97.10827637 21.96825981]
[96.88494873 6.96992254]
[85.82584381 -3.99976444]
[85.81301117 -19.21339226]
[96.33908844 -29.68895340]
[93.08226013 -38.22305298]
[96.22576141 -44.91186523]
[96.22576141 -59.91186523]
[96.22576141 -74.91186523]
[96.22576141 -89.91186523]
[96.22576141 -104.91186523]
[87.37640381 -92.80034637]
[73.69713593 -86.64586639]
[58.76367950 -88.05719757]
[46.47960281 -96.66542053]
[40.05593872 -110.22036743]
[41.17181396 -125.17880249]
[49.53554153 -137.63063049]
[62.96086502 -144.32096863]
[77.93843842 -143.50099182]
[90.55315399 -135.38502502]
[97.50736237 -122.09543610]
[99.73248291 -136.92947388]
[101.95759583 -151.76351929]
[104.18271637 -166.59756470]
[106.40782928 -181.43161011]
[108.63294983 -196.26565552]
[110.41541290 -211.15937805]
[111.75364685 -226.09956360]
[113.09188080 -241.03974915]
[114.43011475 -255.97991943]
[100.69473267 -262.39202881]
[89.98296356 -273.11740112]
[83.58829498 -286.86093140]
[82.28292847 -301.96295166]
[86.22447968 -316.59991455]
[94.93699646 -329.00424194]
[107.36840057 -337.67813110]
[122.01753235 -341.57409668]
[137.11544800 -340.22174072]
[150.83898926 -333.78433228]
[161.53097534 -323.03924561]
[167.90029907 -309.28396606]
[169.17784119 -294.17953491]
[165.20932007 -279.54989624]
[156.47395325 -267.16162109]
[144.02659607 -258.51068115]
[129.37030029 -254.64169312]
[128.03207397 -239.70150757]
[126.69383240 -224.76132202]
[125.35559845 -209.82113647]
[127.04747009 -207.58602905]
[127.95592499 -204.54606628]
[127.76997375 -200.99630737]
[126.29107666 -197.33879089]
[123.46699524 -194.04054260]
[121.24187469 -179.20649719]
[119.01676178 -164.37245178]
[116.79164124 -149.53840637]
[114.56652832 -134.70436096]
[112.34140778 -119.87031555]
[111.22576141 -104.91186523]
[111.22576141 -89.91186523]
[111.22576141 -74.91186523]
[111.22576141 -59.91186523]
[111.22576141 -44.91186523]
[111.33742523 -29.91228104]
[122.17073059 -19.75476456]
[122.61087036 -4.54749966]
[111.88328552 6.74659491]
[112.10661316 21.74493217]
[112.32994080 36.74327087]
[122.71428680 25.91897583]
[137.61279297 24.17704391]
[150.21408081 32.31385803]
[154.75698853 46.60938263]
[149.16456604 60.52788925]
[135.99360657 67.70603180]
[121.26567841 64.86205292]
[111.71357727 53.29444122]
[110.37534332 68.23462677]
[109.03710938 83.17481232]
[118.24703217 94.36067200]
[116.95434570 108.79241180]
[105.90307617 118.16342163]
[104.56484222 133.10360718]
[103.22660828 148.04379272]
[101.88837433 162.98397827]
[100.55014038 177.92416382]
[99.21190643 192.86434937]
[97.87367249 207.80453491]
[100.30438995 213.95295715]
[99.40080261 219.56370544]
[96.26668549 223.16737366]
[94.48421478 238.06108093]
[92.70175171 252.95480347]
[91.92042542 267.93444824]
[92.14375305 282.93276978]
[92.36708069 297.93112183]
[92.59040833 312.92944336]
[108.13510132 321.12677002]
[117.33998108 335.99218750]
[117.74592590 353.38296509]
[109.33127594 368.50601196]
[94.49301910 377.23898315]
[95.16280365 392.22402954]
[95.83258820 407.20904541]
[96.50237274 422.19409180]
[100.01185608 430.62744141]
[97.06889343 437.40689087]
[97.51550293 452.40023804]
[97.96211243 467.39358521]
[98.40871429 482.38693237]
[98.85532379 497.38027954]
[99.30192566 512.37365723]
[99.74853516 527.36700439]
[100.19513702 542.36035156]
[101.53337097 557.30053711]
[103.75849152 572.13458252]
[105.98360443 586.96862793]
[108.20872498 601.80267334]
[110.43383789 616.63671875]
[112.65895844 631.47076416]
[127.68515015 632.48449707]
[142.14196777 636.70520020]
[155.35325623 643.93542480]
[166.70111084 653.83697510]
[175.65473938 665.94671631]
[181.79537964 679.69830322]
[184.83583069 694.44854736]
[184.63386536 709.50756836]
[181.19895935 724.17095947]
[174.69174194 737.75292969]
[165.41658020 749.61828613]
[153.80729675 759.21191406]
[140.40686035 766.08526611]
[125.84204865 769.91674805]
[110.79408264 770.52716064]
[95.96677399 767.88806152]
[82.05362701 762.12274170]
[69.70539093 753.50097656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[31 177]
[32 176]
[33 175]
[34 174]
[41 169]
[42 168]
[43 167]
[44 166]
[54 165]
[55 164]
[56 163]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[66 151]
[67 150]
[68 149]
[69 141]
[70 140]
[71 139]
[74 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
