%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[111.36723328 854.95867920]
[96.43424988 853.50091553]
[81.60649872 851.20819092]
[66.93062592 848.08764648]
[52.45281219 844.14910889]
[38.21860886 839.40496826]
[24.27280807 833.87023926]
[10.65928078 827.56225586]
[-2.57913566 820.50085449]
[-15.40078831 812.70825195]
[-27.76533699 804.20898438]
[-39.63387680 795.02984619]
[-50.96906281 785.19964600]
[-61.73523331 774.74938965]
[-71.89851379 763.71185303]
[-81.42691803 752.12182617]
[-90.29048157 740.01580811]
[-98.46130371 727.43182373]
[-105.91368866 714.40948486]
[-112.62416840 700.98980713]
[-118.57164764 687.21490479]
[-123.73740387 673.12829590]
[-128.10519409 658.77410889]
[-131.66125488 644.19763184]
[-134.39440918 629.44470215]
[-136.29606628 614.56176758]
[-137.36024475 599.59558105]
[-137.58357239 584.59326172]
[-136.96536255 569.60205078]
[-135.50755310 554.66906738]
[-133.21475220 539.84130859]
[-130.09414673 525.16546631]
[-126.15557098 510.68765259]
[-121.41140747 496.45349121]
[-115.87659454 482.50769043]
[-109.56853485 468.89419556]
[-102.50708771 455.65579224]
[-94.71446228 442.83416748]
[-86.21517944 430.46966553]
[-77.03598785 418.60116577]
[-67.20575714 407.26602173]
[-56.75542450 396.49987793]
[-45.71786880 386.33663940]
[-34.12781906 376.80828857]
[-22.02173996 367.94476318]
[-9.43772507 359.77398682]
[3.58463335 352.32165527]
[17.00436211 345.61120605]
[30.77923584 339.66378784]
[44.86591339 334.49807739]
[59.22007751 330.13034058]
[73.79656219 326.57434082]
[88.54949951 323.84124756]
[103.43247223 321.93963623]
[118.39865875 320.87551880]
[118.17533112 305.87719727]
[117.95200348 290.87884521]
[117.72867584 275.88052368]
[116.50170135 260.93078613]
[114.27658081 246.09672546]
[112.05146790 231.26269531]
[99.95822906 222.64356995]
[97.49032593 207.63143921]
[106.61283875 195.00537109]
[104.38772583 180.17134094]
[102.16260529 165.33729553]
[99.93749237 150.50325012]
[97.71237183 135.66920471]
[88.17269897 124.23049927]
[93.77725983 109.43524933]
[85.68637848 122.06607056]
[71.75891876 127.63616180]
[57.18948746 124.06802368]
[47.41211700 112.69247437]
[46.07352829 97.75231934]
[53.67297745 84.81987000]
[67.37606049 78.71860504]
[82.07186890 81.72414398]
[92.27972412 92.71655273]
[84.13497162 79.15287018]
[91.48989868 66.20087433]
[91.04329681 51.20752335]
[90.59668732 36.21417236]
[90.03847504 21.22456169]
[89.36869049 6.23952341]
[88.69890594 -8.74551487]
[88.02912140 -23.73055458]
[87.35933685 -38.71559143]
[83.84986115 -47.14894104]
[86.79281616 -53.92838287]
[86.34620667 -68.92173004]
[85.89960480 -83.91508484]
[85.45299530 -98.90843201]
[70.76637268 -102.36756134]
[57.47593689 -109.51085663]
[46.48784637 -119.85127258]
[38.55128479 -132.68379211]
[34.20738602 -147.13345337]
[33.75232315 -162.21507263]
[37.21712112 -176.90036011]
[44.36554718 -190.18804932]
[54.71020508 -201.17213440]
[67.54578400 -209.10374451]
[81.99713135 -213.44206238]
[97.07892609 -213.89131165]
[111.76287079 -210.42083740]
[125.04779053 -203.26728821]
[136.02789307 -192.91838074]
[143.95454407 -180.07974243]
[148.28727722 -165.62672424]
[148.73069763 -150.54475403]
[145.25456238 -135.86215210]
[138.09587097 -122.57999420]
[127.74273682 -111.60388947]
[114.90103912 -103.68219757]
[100.44635010 -99.35503387]
[100.89295197 -84.36168671]
[101.33956146 -69.36833954]
[101.78616333 -54.37498856]
[102.34437561 -39.38537979]
[103.01416016 -24.40033913]
[103.68394470 -9.41530037]
[104.35372925 5.56973839]
[105.02351379 20.55477715]
[108.46255493 27.09655190]
[105.59004211 35.76756668]
[106.03664398 50.76091766]
[106.48325348 65.75426483]
[114.59606171 78.24552917]
[107.27307129 92.26995087]
[108.61130524 107.21013641]
[118.31013489 119.70986176]
[112.54641724 133.44409180]
[114.77153778 148.27813721]
[116.99665070 163.11216736]
[119.22177124 177.94621277]
[121.44688416 192.78025818]
[133.87240601 202.17410278]
[135.91767883 217.24963379]
[126.88550568 229.03756714]
[129.11062622 243.87161255]
[131.33573914 258.70565796]
[138.80511475 245.69764709]
[152.07208252 238.69851685]
[167.02571106 239.87704468]
[179.03247070 248.86802673]
[184.37193298 262.88552856]
[181.38960266 277.58605957]
[171.00958252 288.41452026]
[156.44825745 292.01556396]
[142.21759033 287.27340698]
[132.72700500 275.65719604]
[132.95033264 290.65551758]
[133.17366028 305.65386963]
[133.39698792 320.65219116]
[148.38822937 321.27023315]
[163.32122803 322.72787476]
[178.14900208 325.02050781]
[192.82489014 328.14096069]
[207.30273438 332.07937622]
[221.53697205 336.82336426]
[235.48281860 342.35803223]
[249.09638977 348.66592407]
[262.33486938 355.72723389]
[275.15655518 363.51971436]
[287.52117920 372.01885986]
[299.38977051 381.19793701]
[310.72503662 391.02804565]
[321.49130249 401.47824097]
[331.65466309 412.51568604]
[341.18313599 424.10562134]
[350.04681396 436.21160889]
[358.21771240 448.79553223]
[365.67019653 461.81781006]
[372.38076782 475.23745728]
[378.32836914 489.01226807]
[383.49423218 503.09890747]
[387.86212158 517.45300293]
[391.41827393 532.02947998]
[394.15155029 546.78234863]
[396.05331421 561.66528320]
[397.11758423 576.63146973]
[397.34103394 591.63378906]
[396.72293091 606.62500000]
[395.26525879 621.55798340]
[392.97256470 636.38580322]
[389.85205078 651.06164551]
[385.91357422 665.53948975]
[381.16952515 679.77368164]
[375.63482666 693.71954346]
[369.32687378 707.33306885]
[362.26550293 720.57153320]
[354.47299194 733.39318848]
[345.97378540 745.75781250]
[336.79467773 757.62634277]
[326.96453857 768.96154785]
[316.51428223 779.72778320]
[305.47680664 789.89111328]
[293.88684082 799.41955566]
[281.78082275 808.28314209]
[269.19686890 816.45404053]
[256.17456055 823.90649414]
[242.75488281 830.61700439]
[228.98005676 836.56451416]
[214.89341736 841.73034668]
[200.53927612 846.09814453]
[185.96282959 849.65429688]
[171.20991516 852.38751221]
[156.32695007 854.28924561]
[141.36076355 855.35345459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 155]
[56 154]
[57 153]
[58 152]
[59 142]
[60 141]
[61 140]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[70 131]
[79 130]
[81 128]
[82 127]
[83 126]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[90 119]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
