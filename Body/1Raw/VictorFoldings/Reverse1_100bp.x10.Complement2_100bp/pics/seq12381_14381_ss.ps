%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[115.22045135 461.75189209]
[102.87220764 470.37365723]
[88.95906830 476.13894653]
[74.13175964 478.77807617]
[59.08378983 478.16763306]
[44.51897430 474.33615112]
[31.11854172 467.46282959]
[19.50925255 457.86917114]
[10.23409271 446.00387573]
[3.72687912 432.42187500]
[0.29196608 417.75848389]
[0.09001068 402.69949341]
[3.13045859 387.94924927]
[9.27110291 374.19763184]
[18.22473335 362.08786011]
[29.57257462 352.18630981]
[42.78386688 344.95611572]
[57.24069214 340.73541260]
[72.26688385 339.72164917]
[74.49199677 324.88760376]
[76.71711731 310.05355835]
[78.94223022 295.21951294]
[81.16735077 280.38546753]
[82.50558472 265.44528198]
[82.95218658 250.45193481]
[83.39879608 235.45858765]
[83.84539795 220.46524048]
[81.70664978 217.66200256]
[80.81940460 213.68357849]
[81.72122955 209.12947083]
[84.66162109 204.81655884]
[85.77726746 189.85809326]
[86.89291382 174.89964294]
[80.12365723 161.63215637]
[88.86593628 148.44567871]
[82.09667969 135.17817688]
[90.83895874 121.99170685]
[91.95460510 107.03325653]
[91.39639282 92.04364777]
[89.17127991 77.20960236]
[86.94615936 62.37555695]
[83.69313812 58.29328918]
[82.45509338 53.81885910]
[83.04397583 49.78546524]
[84.96830750 46.83092880]
[83.40778351 31.91232300]
[81.84725952 16.99371910]
[80.28673553 2.07511425]
[78.72621918 -12.84349060]
[77.16569519 -27.76209450]
[75.60517120 -42.68069839]
[72.17411041 -57.28302383]
[66.92739105 -71.33549500]
[61.68067169 -85.38796234]
[56.43395615 -99.44043732]
[51.18723679 -113.49290466]
[45.94051743 -127.54537964]
[33.86492920 -137.76745605]
[36.66171646 -152.39712524]
[31.41499901 -166.44960022]
[26.16827965 -180.50205994]
[20.92156219 -194.55453491]
[9.53262424 -200.60887146]
[5.45191956 -212.42121887]
[10.35153389 -223.48106384]
[5.31461763 -237.61009216]
[-5.98291779 -243.83331299]
[-9.88730145 -255.70510864]
[-4.82356548 -266.69079590]
[-9.64956284 -280.89324951]
[-14.47556114 -295.09570312]
[-19.30155754 -309.29815674]
[-24.12755585 -323.50061035]
[-28.95355415 -337.70306396]
[-33.77955246 -351.90551758]
[-38.60554886 -366.10797119]
[-43.43154526 -380.31042480]
[-48.25754547 -394.51290894]
[-63.14772034 -392.36877441]
[-78.17833710 -392.99743652]
[-92.83745575 -396.37750244]
[-106.62579346 -402.39385986]
[-119.07372284 -410.84155273]
[-129.75727844 -421.43289185]
[-138.31257629 -433.80709839]
[-144.44822693 -447.54278564]
[-147.95524597 -462.17202759]
[-148.71420288 -477.19665527]
[-146.69923401 -492.10485840]
[-141.97895813 -506.38888550]
[-134.71417236 -519.56225586]
[-125.15230560 -531.17626953]
[-113.61901855 -540.83532715]
[-100.50714111 -548.21051025]
[-86.26325226 -553.05059814]
[-71.37250519 -555.19073486]
[-56.34205627 -554.55798340]
[-41.68384933 -551.17395020]
[-27.89713287 -545.15393066]
[-15.45147991 -536.70288086]
[-4.77078295 -526.10864258]
[3.78117704 -513.73211670]
[9.91312408 -499.99481201]
[13.41620541 -485.36459351]
[14.17110729 -470.33978271]
[12.15211868 -455.43212891]
[7.42800570 -441.14935303]
[0.15966915 -427.97793579]
[-9.40533352 -416.36651611]
[-20.94122314 -406.71054077]
[-34.05508804 -399.33889771]
[-29.22909164 -385.13644409]
[-24.40309334 -370.93399048]
[-19.57709503 -356.73153687]
[-14.75109768 -342.52908325]
[-9.92510033 -328.32662964]
[-5.09910297 -314.12414551]
[-0.27310514 -299.92169189]
[4.55289268 -285.71923828]
[9.37889004 -271.51678467]
[23.18061447 -260.67800903]
[19.44364738 -242.64701843]
[24.48056412 -228.51799011]
[38.44213104 -217.88587952]
[34.97403336 -199.80125427]
[40.22075272 -185.74877930]
[45.46746826 -171.69630432]
[50.71418762 -157.64384460]
[62.41449356 -148.42689514]
[59.99298859 -132.79209900]
[65.23970795 -118.73962402]
[70.48642731 -104.68715668]
[75.73314667 -90.63468170]
[80.97985840 -76.58221436]
[86.22657776 -62.52973938]
[88.27862549 -77.38871765]
[94.98532867 -90.80587006]
[105.63893890 -101.36525726]
[119.11513519 -107.95252991]
[133.99174500 -109.87250519]
[148.69882202 -106.92256927]
[161.68426514 -99.41403198]
[171.57771301 -88.13929749]
[177.33508301 -74.28820038]
[178.34877014 -59.32249451]
[174.51181030 -44.82153702]
[166.22912598 -32.31565094]
[154.37481689 -23.12461472]
[140.19987488 -18.21837616]
[125.20023346 -18.11470604]
[110.95883942 -22.82454300]
[98.97860718 -31.85084534]
[90.52377319 -44.24122238]
[92.08429718 -29.32261848]
[93.64482117 -14.40401363]
[95.20534515 0.51459134]
[96.76586914 15.43319607]
[98.32639313 30.35180092]
[99.88690948 45.27040482]
[101.78020477 60.15044022]
[104.00532532 74.98448181]
[106.23043823 89.81852722]
[111.63772583 75.82705688]
[121.68014526 64.68480682]
[135.03646851 57.85773849]
[149.94941711 56.24406433]
[164.45693970 60.05609512]
[176.65032959 68.79228973]
[184.92535400 81.30325317]
[188.19325256 95.94295502]
[186.02410889 110.78528595]
[178.70329285 123.87747955]
[167.19398499 133.49703979]
[153.01045227 138.37835693]
[138.01875305 137.87918091]
[124.19132996 132.06521606]
[113.34739685 121.70137787]
[106.91306305 108.14890289]
[105.79740906 123.10736084]
[112.48686981 137.44477844]
[103.82439423 149.56132507]
[110.51384735 163.89874268]
[101.85137177 176.01528931]
[100.73571777 190.97375488]
[99.62007141 205.93220520]
[98.83875275 220.91183472]
[98.39214325 235.90519714]
[97.94554138 250.89854431]
[97.49893188 265.89187622]
[107.70576477 254.90005493]
[122.40142822 251.89381409]
[136.10479736 257.99441528]
[143.70486450 270.92651367]
[142.36698914 285.86672974]
[132.59016418 297.24273682]
[118.02090454 300.81158447]
[104.09317780 295.24215698]
[96.00139618 282.61059570]
[93.77627563 297.44464111]
[91.55115509 312.27868652]
[89.32604218 327.11273193]
[87.10092163 341.94674683]
[101.16836548 347.32461548]
[113.75059509 355.60116577]
[124.25910950 366.38937378]
[132.20242310 379.18460083]
[137.20899963 393.38839722]
[139.04466248 408.33645630]
[137.62358093 423.32962036]
[133.01220703 437.66659546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 189]
[25 188]
[26 187]
[27 186]
[31 185]
[32 184]
[33 183]
[35 181]
[37 179]
[38 178]
[39 162]
[40 161]
[41 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[59 128]
[60 127]
[61 126]
[62 125]
[65 123]
[66 122]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
