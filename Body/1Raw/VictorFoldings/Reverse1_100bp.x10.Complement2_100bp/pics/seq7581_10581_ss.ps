%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[155.00787354 523.27844238]
[152.69128418 508.44638062]
[151.81701660 493.46002197]
[152.39324951 478.45922852]
[154.41458130 463.58410645]
[157.86216736 448.97351074]
[162.70379639 434.76385498]
[168.89427185 421.08782959]
[176.37577820 408.07312012]
[185.07847595 395.84127808]
[194.92111206 384.50643921]
[205.81176758 374.17449951]
[217.64878845 364.94192505]
[209.60760498 352.27938843]
[201.56643677 339.61685181]
[193.52526855 326.95434570]
[185.48408508 314.29180908]
[172.12969971 307.69564819]
[171.26330566 291.89819336]
[163.22213745 279.23565674]
[155.18095398 266.57315063]
[153.61856079 281.49154663]
[144.32200623 293.26327515]
[130.17192078 298.24075317]
[115.55287933 294.88165283]
[104.99474335 284.22680664]
[101.76907349 269.57772827]
[106.87536621 255.47363281]
[118.73139191 246.28480530]
[133.66342163 244.85848999]
[147.04479980 251.63685608]
[140.76744080 238.01353455]
[134.49008179 224.39021301]
[128.21272278 210.76690674]
[115.85929871 202.44570923]
[117.11122894 186.67411804]
[110.83386993 173.05079651]
[109.32104492 187.97431946]
[102.28015900 201.21916199]
[90.75568390 210.82054138]
[76.45720673 215.35414124]
[61.50582504 214.14744568]
[48.11948013 207.37944031]
[38.28396606 196.05412292]
[33.45831680 181.85156250]
[34.35839081 166.87858582]
[40.85066605 153.35636902]
[51.97205353 143.29084778]
[66.07276154 138.17517090]
[81.06103516 138.76824951]
[94.71344757 144.98207092]
[105.00373077 155.89324951]
[101.68147278 141.26577759]
[98.35920715 126.63832092]
[95.03694916 112.01086426]
[91.28064728 97.48880005]
[87.09364319 83.08502197]
[82.79951477 68.71280670]
[78.39852142 54.37296295]
[73.99752045 40.03311539]
[69.59651947 25.69326782]
[65.19552612 11.35342026]
[60.79452515 -2.98642707]
[47.36380386 -3.51057029]
[34.76947784 -8.13984585]
[24.23233032 -16.41057777]
[16.76912689 -27.50685310]
[13.09450245 -40.34099197]
[13.55256271 -53.66017151]
[18.08470154 -66.16870117]
[26.23667336 -76.65409851]
[37.20407867 -84.10457611]
[33.23197937 -98.56909943]
[29.51690674 -102.23588562]
[27.75592995 -106.53149414]
[27.86134720 -110.60628510]
[29.42095757 -113.76855469]
[26.09869766 -128.39601135]
[15.62072277 -135.91764832]
[13.15474129 -148.16928101]
[19.48803902 -158.47538757]
[16.38392830 -173.15069580]
[13.27981853 -187.82600403]
[-1.76848388 -187.63937378]
[-16.56398964 -190.39242554]
[-30.53799820 -195.97930908]
[-43.15338898 -204.18528748]
[-53.92525482 -214.69496155]
[-62.43955994 -227.10433960]
[-68.36903381 -240.93646240]
[-71.48576355 -255.65965271]
[-71.66994476 -270.70797729]
[-68.91450500 -285.50305176]
[-63.32535934 -299.47613525]
[-55.11733627 -312.09020996]
[-44.60592270 -322.86038208]
[-32.19515991 -331.37268066]
[-18.36207962 -337.29989624]
[-3.63838768 -340.41424561]
[11.40997410 -340.59600830]
[26.20458794 -337.83816528]
[40.17678833 -332.24676514]
[52.78952026 -324.03668213]
[63.55798340 -313.52352905]
[72.06826782 -301.11138916]
[77.99326324 -287.27734375]
[81.10522461 -272.55316162]
[81.28453827 -257.50476074]
[78.52431488 -242.71060181]
[72.93064880 -228.73930359]
[64.71853638 -216.12789917]
[54.20363998 -205.36114502]
[41.79011917 -196.85285950]
[27.95512009 -190.93011475]
[31.05923080 -176.25480652]
[34.16334152 -161.57949829]
[46.57928848 -149.17744446]
[40.72615814 -131.71827698]
[44.04841614 -117.09081268]
[47.69650650 -102.54119873]
[51.66860199 -88.07666779]
[68.23455048 -86.39588165]
[82.91661072 -78.46372986]
[93.44899750 -65.47222900]
[98.19401550 -49.39657974]
[96.39665985 -32.69492722]
[88.30457306 -17.93245506]
[75.13436890 -7.38742495]
[79.53536987 6.95242214]
[83.93637085 21.29226875]
[88.33736420 35.63211441]
[92.73836517 49.97196198]
[97.13936615 64.31181335]
[102.10700989 69.78394318]
[101.49742126 78.89801025]
[105.68443298 93.30179596]
[108.22148895 94.99082947]
[110.20005035 97.64032745]
[111.26319122 101.04520416]
[111.13474274 104.87139130]
[109.66441345 108.68860626]
[112.98667145 123.31606293]
[116.30892944 137.94352722]
[119.63118744 152.57098389]
[124.45719147 166.77343750]
[130.73454285 180.39675903]
[143.53697205 189.69236755]
[141.83604431 204.48953247]
[148.11340332 218.11285400]
[154.39076233 231.73617554]
[160.66812134 245.35948181]
[167.84349060 258.53195190]
[175.88465881 271.19448853]
[183.92582703 283.85702515]
[197.85539246 291.35888672]
[198.14662170 306.25064087]
[206.18778992 318.91317749]
[214.22895813 331.57568359]
[222.27014160 344.23822021]
[230.31130981 356.90075684]
[243.70112610 350.11337280]
[257.68350220 344.64999390]
[272.12789917 340.56164551]
[286.89947510 337.88647461]
[301.86026001 336.64947510]
[316.87060547 336.86221313]
[331.79034424 338.52267456]
[346.48016357 341.61535645]
[360.80291748 346.11138916]
[374.62487793 351.96878052]
[387.81695557 359.13287354]
[400.25601196 367.53674316]
[411.82592773 377.10192871]
[422.41860962 387.73916626]
[431.93521118 399.34906006]
[440.28683472 411.82327271]
[447.39553833 425.04528809]
[453.19491577 438.89169312]
[457.63082886 453.23318481]
[460.66186523 467.93585205]
[462.25973511 482.86239624]
[462.40948486 497.87350464]
[461.10977173 512.82897949]
[458.37268066 527.58917236]
[454.22375488 542.01629639]
[448.70181274 555.97564697]
[441.85833740 569.33691406]
[433.75723267 581.97528076]
[424.47418213 593.77270508]
[414.09582520 604.61914062]
[402.71908569 614.41333008]
[390.45016479 623.06365967]
[377.40362549 630.48956299]
[363.70129395 636.62158203]
[349.47109985 641.40246582]
[334.84591675 644.78759766]
[319.96228027 646.74542236]
[304.95916748 647.25756836]
[289.97668457 646.31933594]
[275.15466309 643.93939209]
[260.63156128 640.14007568]
[246.54296875 634.95678711]
[233.02040100 628.43786621]
[220.19013977 620.64428711]
[208.17196655 611.64880371]
[197.07809448 601.53533936]
[187.01213074 590.39843750]
[178.06802368 578.34191895]
[170.32931519 565.47851562]
[163.86825562 551.92822266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[19 154]
[20 153]
[21 152]
[31 151]
[32 150]
[33 149]
[34 148]
[36 146]
[37 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 136]
[57 135]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[72 121]
[73 120]
[77 119]
[78 118]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
