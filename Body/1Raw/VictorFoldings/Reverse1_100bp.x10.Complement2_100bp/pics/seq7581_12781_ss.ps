%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[156.64050293 420.94482422]
[152.78776550 406.44015503]
[150.07060242 391.68057251]
[148.50538635 376.75482178]
[148.10150146 361.75265503]
[148.86140442 346.76428223]
[150.78051758 331.87988281]
[153.84727478 317.18896484]
[158.04327393 302.77987671]
[163.34324646 288.73925781]
[169.71533203 275.15161133]
[177.12120056 262.09857178]
[185.51632690 249.65870667]
[194.85020447 237.90681458]
[205.06669617 226.91355896]
[194.90315247 215.88168335]
[184.73960876 204.84980774]
[174.57606506 193.81793213]
[164.41250610 182.78605652]
[154.24896240 171.75418091]
[147.40490723 168.96476746]
[144.01773071 160.48156738]
[134.01956177 149.29959106]
[124.02138519 138.11761475]
[114.02321625 126.93564606]
[104.02503967 115.75366974]
[92.45697021 114.40422821]
[84.75889587 105.66461182]
[84.88036346 94.01873016]
[75.04978180 82.68914032]
[62.26257706 81.00088501]
[54.30790329 71.36206055]
[55.02948761 59.28705215]
[45.36867905 47.81235123]
[35.70786667 36.33765030]
[26.04705811 24.86295128]
[16.38624763 13.38825035]
[6.72543669 1.91355026]
[-2.93537354 -9.56114960]
[-12.59618378 -21.03585052]
[-24.75847435 -12.24460983]
[-37.53681183 -4.37559748]
[-50.86140060 2.52820754]
[-64.65946960 8.42910004]
[-78.85565186 13.29484940]
[-93.37242126 17.09888268]
[-108.13048553 19.82041931]
[-123.04924011 21.44459915]
[-138.04721069 21.96255112]
[-153.04246521 21.37144279]
[-167.95312500 19.67450523]
[-182.69773865 16.88100815]
[-197.19577026 13.00620461]
[-211.36805725 8.07126141]
[-225.13717651 2.10313010]
[-238.42793274 -4.86559296]
[-251.16772461 -12.79684639]
[-263.28698730 -21.64731216]
[-274.71951294 -31.36865044]
[-285.40289307 -41.90776825]
[-295.27871704 -53.20710373]
[-304.29309082 -65.20494080]
[-312.39678955 -77.83575439]
[-319.54553223 -91.03055573]
[-325.70028687 -104.71727753]
[-330.82742310 -118.82116699]
[-334.89892578 -133.26519775]
[-337.89257812 -147.97047424]
[-339.79205322 -162.85668945]
[-340.58691406 -177.84252930]
[-340.27288818 -192.84614563]
[-338.85165405 -207.78559875]
[-336.33096313 -222.57928467]
[-332.72460938 -237.14642334]
[-328.05227661 -251.40744019]
[-322.33947754 -265.28445435]
[-315.61743164 -278.70166016]
[-307.92285156 -291.58575439]
[-299.29776001 -303.86642456]
[-289.78924561 -315.47656250]
[-279.44924927 -326.35278320]
[-268.33422852 -336.43563843]
[-256.50494385 -345.67007446]
[-244.02597046 -354.00570679]
[-230.96546936 -361.39694214]
[-217.39476013 -367.80343628]
[-203.38796997 -373.19018555]
[-189.02160645 -377.52780151]
[-174.37414551 -380.79257202]
[-159.52555847 -382.96664429]
[-144.55694580 -384.03817749]
[-129.55009460 -384.00134277]
[-114.58692932 -382.85626221]
[-99.74920654 -380.60928345]
[-85.11794281 -377.27258301]
[-70.77306366 -372.86447144]
[-56.79290771 -367.40896606]
[-43.25383377 -360.93588257]
[-30.22978973 -353.48059082]
[-17.79191017 -345.08377075]
[-6.00812387 -335.79132080]
[5.05720806 -325.65399170]
[15.34364986 -314.72711182]
[24.79501915 -303.07040405]
[33.35969543 -290.74752808]
[40.99090576 -277.82577515]
[47.64696121 -264.37570190]
[53.29151917 -250.47080994]
[57.89374161 -236.18702698]
[61.42849731 -221.60234070]
[63.87647629 -206.79644775]
[65.22431183 -191.85018921]
[65.46464539 -176.84521484]
[64.59616089 -161.86344910]
[62.62360001 -146.98675537]
[59.55773544 -132.29635620]
[55.41531754 -117.87250519]
[50.21896744 -103.79396820]
[43.99706650 -90.13764954]
[36.78359985 -76.97811890]
[28.61795998 -64.38726807]
[19.54474831 -52.43385696]
[9.61351967 -41.18317032]
[-1.12148392 -30.69666100]
[8.53932667 -19.22196007]
[18.20013618 -7.74726009]
[27.86094666 3.72743988]
[37.52175903 15.20213985]
[47.18256760 26.67683983]
[56.84337997 38.15153885]
[66.50418854 49.62623978]
[83.30273438 54.70323181]
[86.37937164 72.85855865]
[96.20995331 84.18814850]
[112.20140839 89.25269318]
[115.20701599 105.75550079]
[125.20518494 116.93746948]
[135.20335388 128.11944580]
[145.20153809 139.30142212]
[155.19970703 150.48339844]
[165.28083801 161.59063721]
[175.44438171 172.62251282]
[185.60794067 183.65438843]
[195.77148438 194.68626404]
[205.93502808 205.71813965]
[216.09857178 216.75001526]
[227.89067078 207.46697998]
[240.36668396 199.12567139]
[253.45156860 191.77624512]
[267.06665039 185.46290588]
[281.13000488 180.22363281]
[295.55709839 176.08990479]
[310.26110840 173.08662415]
[325.15368652 171.23182678]
[340.14517212 170.53666687]
[355.14544678 171.00532532]
[370.06433105 172.63500977]
[384.81204224 175.41589355]
[399.29989624 179.33125305]
[413.44079590 184.35754395]
[427.14965820 190.46453857]
[440.34402466 197.61552429]
[452.94461060 205.76745605]
[464.87554932 214.87133789]
[476.06515503 224.87240601]
[486.44607544 235.71052551]
[495.95590210 247.32048035]
[504.53744507 259.63247681]
[512.13909912 272.57247925]
[518.71514893 286.06262207]
[524.22601318 300.02178955]
[528.63854980 314.36605835]
[531.92626953 329.00912476]
[534.06939697 343.86291504]
[535.05499268 358.83813477]
[534.87713623 373.84466553]
[533.53692627 388.79232788]
[531.04235840 403.59115601]
[527.40856934 418.15219116]
[522.65728760 432.38784790]
[516.81713867 446.21249390]
[509.92321777 459.54299927]
[502.01702881 472.29919434]
[493.14608765 484.40435791]
[483.36376953 495.78567505]
[472.72891235 506.37472534]
[461.30541992 516.10778809]
[449.16207886 524.92633057]
[436.37185669 532.77740479]
[423.01168823 539.61364746]
[409.16195679 545.39404297]
[394.90591431 550.08374023]
[380.32931519 553.65466309]
[365.51983643 556.08526611]
[350.56655884 557.36090088]
[335.55935669 557.47393799]
[320.58856201 556.42364502]
[305.74414062 554.21643066]
[291.11541748 550.86553955]
[276.79034424 546.39105225]
[262.85510254 540.81994629]
[249.39349365 534.18566895]
[236.48645020 526.52819824]
[224.21163940 517.89355469]
[212.64285278 508.33367920]
[201.84968567 497.90603638]
[191.89703369 486.67333984]
[182.84477234 474.70318604]
[174.74732971 462.06753540]
[167.65341187 448.84237671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[29 134]
[30 133]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[40 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
