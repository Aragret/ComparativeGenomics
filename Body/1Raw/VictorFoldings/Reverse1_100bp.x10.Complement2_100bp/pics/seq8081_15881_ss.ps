%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-38.20452118 327.78710938]
[-31.39304543 341.17141724]
[-26.21242332 355.26742554]
[-22.73538017 369.87722778]
[-21.01073265 384.79574585]
[-21.06268692 399.81353760]
[-22.89051819 414.71975708]
[-26.46856499 429.30514526]
[-31.74659729 443.36499023]
[-38.65052032 456.70184326]
[-47.08341217 469.12854004]
[-56.92688751 480.47061157]
[-68.04276276 490.56881714]
[-80.27498627 499.28140259]
[-93.45183563 506.48605347]
[-107.38832855 512.08160400]
[-121.88881683 515.98956299]
[-136.74974060 518.15502930]
[-151.76248169 518.54760742]
[-166.71627808 517.16180420]
[-181.40118408 514.01702881]
[-195.61108398 509.15744019]
[-209.14645386 502.65130615]
[-221.81730652 494.58990479]
[-233.44575500 485.08645630]
[-243.86854553 474.27435303]
[-252.93937683 462.30535889]
[-260.53088379 449.34753418]
[-266.53649902 435.58276367]
[-270.87194824 421.20431519]
[-273.47631836 406.41400146]
[-274.31307983 391.41946411]
[-273.37048340 376.43118286]
[-270.66174316 361.65963745]
[-266.22488403 347.31213379]
[-260.12222290 333.59011841]
[-252.43942261 320.68618774]
[-243.28431702 308.78155518]
[-232.78544617 298.04330444]
[-221.09019470 288.62219238]
[-208.36274719 280.65048218]
[-194.78176880 274.24005127]
[-180.53791809 269.48092651]
[-165.83116150 266.43994141]
[-150.86796570 265.15972900]
[-135.85836792 265.65826416]
[-121.01310730 267.92861938]
[-106.54056549 271.93884277]
[-92.64392853 277.63265991]
[-79.51827240 284.93017578]
[-67.34786987 293.72891235]
[-57.18432236 282.69702148]
[-47.02077484 271.66516113]
[-47.20246124 259.56997681]
[-38.82532883 250.29594421]
[-25.97549438 249.18035889]
[-15.73010254 238.22445679]
[-5.56655598 227.19258118]
[4.59699106 216.16070557]
[7.51307535 198.85568237]
[25.13486671 193.51210022]
[35.13303757 182.33012390]
[45.13121033 171.14814758]
[55.12938309 159.96617126]
[63.90998840 147.80471802]
[71.37773132 134.79576111]
[78.84546661 121.78681183]
[86.31320953 108.77786255]
[85.83865356 92.01029968]
[100.43589020 83.74610901]
[107.70912170 70.62741089]
[114.98234558 57.50871658]
[122.25557709 44.39002609]
[128.93577576 30.95964813]
[135.00961304 17.24438095]
[133.52299500 1.49317336]
[145.75115967 -7.01101685]
[151.82499695 -20.72628403]
[157.89883423 -34.44155121]
[163.97265625 -48.15681839]
[170.04649353 -61.87208176]
[175.81253052 -75.71956635]
[181.26788330 -89.69236755]
[186.72323608 -103.66516113]
[192.17860413 -117.63796234]
[186.07911682 -131.97093201]
[191.81066895 -146.06362915]
[205.51255798 -151.79022217]
[210.96791077 -165.76301575]
[216.42327881 -179.73580933]
[214.23481750 -195.40493774]
[226.07106018 -204.44665527]
[231.52641296 -218.41944885]
[236.98176575 -232.39225769]
[242.43711853 -246.36505127]
[247.89248657 -260.33786011]
[253.34783936 -274.31063843]
[258.80319214 -288.28344727]
[245.79986572 -295.82095337]
[234.09960938 -305.25515747]
[223.97666931 -316.36489868]
[215.66836548 -328.88977051]
[209.36944580 -342.53616333]
[205.22755432 -356.98419189]
[203.33979797 -371.89514160]
[203.75044250 -386.91952515]
[206.44982910 -401.70510864]
[211.37469482 -415.90533447]
[218.40960693 -429.18728638]
[227.38963318 -441.23965454]
[238.10429382 -451.77990723]
[250.30239868 -460.56094360]
[263.69802856 -467.37692261]
[277.97714233 -472.06811523]
[292.80502319 -474.52450562]
[307.83413696 -474.68850708]
[322.71209717 -472.55633545]
[337.09020996 -468.17791748]
[350.63137817 -461.65588379]
[363.01821899 -453.14315796]
[373.96035767 -442.83926392]
[383.20129395 -430.98574829]
[390.52438354 -417.86050415]
[395.75799561 -403.77114868]
[398.77944946 -389.04797363]
[399.51788330 -374.03616333]
[397.95599365 -359.08755493]
[394.13043213 -344.55258179]
[388.13082886 -330.77197266]
[380.09783936 -318.06875610]
[370.21978760 -306.74072266]
[358.72821045 -297.05340576]
[345.89248657 -289.23388672]
[332.01348877 -283.46551514]
[317.41659546 -279.88342285]
[302.44396973 -278.57165527]
[287.44659424 -279.56094360]
[272.77600098 -282.82809448]
[267.32064819 -268.85528564]
[261.86529541 -254.88249207]
[256.40991211 -240.90969849]
[250.95455933 -226.93688965]
[245.49920654 -212.96409607]
[240.04385376 -198.99130249]
[242.62251282 -184.32160950]
[230.39607239 -174.28045654]
[224.94071960 -160.30766296]
[219.48535156 -146.33485413]
[225.68235779 -132.83920288]
[220.34890747 -118.59108734]
[206.15139771 -112.18260193]
[200.69604492 -98.20980835]
[195.24067688 -84.23700714]
[189.78532410 -70.26421356]
[190.85858154 -66.90557098]
[190.35838318 -62.86022568]
[187.97967529 -58.87336731]
[183.76176453 -55.79824829]
[177.68792725 -42.08298111]
[171.61408997 -28.36771584]
[165.54025269 -14.65244961]
[159.46643066 -0.93718272]
[161.38748169 13.83301735]
[148.72486877 23.31821632]
[142.65103149 37.03348160]
[156.99768066 32.65467834]
[170.30279541 39.58098221]
[174.94462585 53.84469223]
[168.26411438 67.27490997]
[154.08815002 72.17819214]
[140.53738403 65.74571991]
[135.37426758 51.66325378]
[128.10104370 64.78194427]
[120.82781219 77.90064240]
[113.55458069 91.01933289]
[116.08342743 102.38798523]
[110.36057281 112.53146362]
[99.32216644 116.24560547]
[91.85442352 129.25456238]
[84.38668060 142.26350403]
[76.91893768 155.27246094]
[89.95949554 147.86004639]
[104.83429718 145.92604065]
[119.33674622 149.75733948]
[131.31550598 158.78559875]
[138.99357605 171.67152405]
[141.23197937 186.50357056]
[137.69865417 201.08149719]
[128.91775513 213.24273682]
[116.19187164 221.18324280]
[101.40880585 223.72511292]
[86.76155090 220.49125671]
[74.42292786 211.96139526]
[66.22331238 199.40089417]
[63.37905121 184.67303467]
[66.31135559 169.96434021]
[56.31318665 181.14631653]
[46.31501389 192.32829285]
[36.31684113 203.51026917]
[36.25608826 216.40829468]
[27.69838524 225.51596069]
[15.62886810 226.32424927]
[5.46532154 237.35612488]
[-4.69822550 248.38800049]
[-8.21133804 256.81982422]
[-15.09615993 259.50701904]
[-18.98040962 277.50686646]
[-35.98889923 281.82870483]
[-46.15244675 292.86056519]
[-56.31599045 303.89245605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 210]
[52 209]
[53 208]
[56 206]
[57 204]
[58 203]
[59 202]
[61 199]
[62 198]
[63 197]
[64 196]
[65 181]
[66 180]
[67 179]
[68 178]
[70 175]
[71 174]
[72 173]
[73 172]
[74 165]
[75 164]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 154]
[83 153]
[84 152]
[85 151]
[88 148]
[89 147]
[90 146]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
