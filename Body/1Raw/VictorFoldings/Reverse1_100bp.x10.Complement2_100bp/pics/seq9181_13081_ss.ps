%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[115.45923615 453.89770508]
[118.49089813 468.79327393]
[115.58660126 483.71417236]
[107.18922424 496.38510132]
[94.57931519 504.87384033]
[79.67978668 507.88589478]
[64.76271057 504.96197510]
[52.10283661 496.54794312]
[43.63069916 483.92687988]
[40.63823318 469.02340698]
[43.58177948 454.11019897]
[52.01245880 441.46139526]
[64.64465332 433.00585938]
[79.55205536 430.03302002]
[82.43733215 415.31311035]
[77.29262543 401.33523560]
[87.53992462 389.28103638]
[90.42519379 374.56115723]
[92.31848907 359.68112183]
[93.21130371 344.70770264]
[94.10411835 329.73431396]
[94.99693298 314.76089478]
[95.88975525 299.78750610]
[96.78256989 284.81408691]
[97.11754608 269.81784058]
[96.89421844 254.81948853]
[87.09568024 240.26078796]
[96.19780731 224.25352478]
[88.08499908 211.76225281]
[95.40798187 197.73783875]
[94.96138000 182.74449158]
[94.51477051 167.75112915]
[94.06816864 152.75778198]
[93.62155914 137.76443481]
[93.17495728 122.77108765]
[92.72834778 107.77773285]
[91.05680847 92.87116241]
[88.17153168 78.15126801]
[85.28626251 63.43137741]
[81.36911774 77.91088104]
[74.36872101 91.17716980]
[64.62665558 102.58296967]
[52.61825180 111.57174683]
[38.92942429 117.70493317]
[24.22807884 120.68327332]
[9.23153210 120.36144257]
[-5.32850361 116.75514984]
[-18.74161148 110.04035187]
[-30.35333633 100.54467010]
[-39.59711838 88.73143768]
[-46.02192688 75.17704010]
[-49.31428909 60.54281616]
[-49.31355667 45.54281616]
[-46.01977158 30.90892029]
[-39.59363937 17.35514450]
[-30.34870911 5.54280996]
[-18.73605728 -3.95173311]
[-5.32229567 -10.66522598]
[9.23809147 -14.27010059]
[24.23467064 -14.59046936]
[38.93572235 -11.61069870]
[52.62395477 -5.47617960]
[64.63148499 3.51377130]
[74.37243652 14.92051506]
[81.37153625 28.18749046]
[85.28626251 42.66083527]
[88.17153168 27.94094276]
[91.05680847 13.22105122]
[93.94207764 -1.49884057]
[96.82735443 -16.21873283]
[84.22310638 -24.66909790]
[75.83701324 -37.26737213]
[72.92106628 -52.07651901]
[75.88904572 -66.83384705]
[84.25814819 -79.29670715]
[96.72721100 -87.58332062]
[111.37890625 -90.45686340]
[114.26417542 -105.17675018]
[117.14944458 -119.89664459]
[112.21112061 -134.92739868]
[122.25204468 -145.92871094]
[125.13731384 -160.64860535]
[118.76695251 -177.92576599]
[130.80813599 -190.69200134]
[131.36634827 -205.68161011]
[122.23533630 -218.60194397]
[128.60656738 -232.06510925]
[127.04605103 -246.98370361]
[125.48552704 -261.90231323]
[123.92500305 -276.82092285]
[109.00502777 -279.02209473]
[95.10152435 -284.86532593]
[83.08847809 -293.98330688]
[73.72103119 -305.80285645]
[67.58804321 -319.58099365]
[65.07502747 -334.45162964]
[66.33995819 -349.47994995]
[71.30332184 -363.72131348]
[79.65311432 -376.28042603]
[90.86445618 -386.36788940]
[104.23261261 -393.34951782]
[118.91722870 -396.78649902]
[133.99522400 -396.46276855]
[148.51878357 -392.39868164]
[161.57495117 -384.84967041]
[172.34298706 -374.29031372]
[180.14602661 -361.38436890]
[184.49354553 -346.94311523]
[185.11227417 -331.87432861]
[181.96330261 -317.12527466]
[175.24456787 -303.62307739]
[165.37844849 -292.21646118]
[152.98510742 -283.62252808]
[138.84361267 -278.38143921]
[140.40412903 -263.46282959]
[141.96466064 -248.54423523]
[143.52517700 -233.62562561]
[152.54457092 -221.77236938]
[146.28495789 -207.24212646]
[151.77183533 -221.20257568]
[161.08285522 -232.96289062]
[173.41253662 -241.50566101]
[187.69421387 -246.09188843]
[202.69241333 -246.32478333]
[217.10961914 -242.18421936]
[229.69859314 -234.02838135]
[239.37026978 -222.56285095]
[245.28796387 -208.77949524]
[246.93972778 -193.87071228]
[244.18266296 -179.12626648]
[237.25527954 -165.82170105]
[226.75688171 -155.10800171]
[213.59567261 -147.91198730]
[198.91023254 -144.85620117]
[183.97099304 -146.20500183]
[170.07035828 -151.84169006]
[158.41087341 -161.27865601]
[150.00119019 -173.69949341]
[145.56936646 -188.02619934]
[152.20669556 -177.91322327]
[150.10658264 -165.59359741]
[139.85720825 -157.76333618]
[136.97193909 -143.04344177]
[142.11663818 -129.06555176]
[131.86933899 -117.01136780]
[128.98406982 -102.29148102]
[126.09879303 -87.57158661]
[138.58146667 -79.37938690]
[146.99949646 -66.99866486]
[150.04432678 -52.29853439]
[147.22151184 -37.51275635]
[138.93060303 -24.90028381]
[126.40897369 -16.40016937]
[111.54724121 -13.33345890]
[108.66197205 1.38643205]
[105.77669525 16.10632324]
[102.89142609 30.82621574]
[100.00615692 45.54610443]
[100.00615692 60.54610443]
[102.89142609 75.26599884]
[105.77669525 89.98588562]
[111.69380951 76.20228577]
[123.28031921 66.67584991]
[137.94776917 63.53482819]
[152.41940308 67.48091888]
[163.46223450 77.63256073]
[168.60926819 91.72185516]
[166.71063232 106.60120392]
[158.19049072 118.94654083]
[144.95227051 125.99987030]
[129.95341492 126.18547058]
[116.54471588 119.46187592]
[107.72169495 107.33113098]
[108.16830444 122.32447815]
[108.61491394 137.31782532]
[109.06151581 152.31117249]
[109.50812531 167.30453491]
[109.95472717 182.29788208]
[110.40133667 197.29122925]
[118.54608917 210.85491943]
[111.19115448 223.80691528]
[120.02666473 233.20353699]
[120.08998108 245.70072937]
[111.89255524 254.59616089]
[112.11588287 269.59451294]
[124.27716064 260.81365967]
[138.76506042 264.69964600]
[144.89962769 278.38784790]
[138.15870667 291.78784180]
[123.51142883 295.02163696]
[111.75597382 285.70690918]
[110.86315918 300.68029785]
[109.97034454 315.65371704]
[109.07752228 330.62710571]
[108.18470764 345.60052490]
[107.29189301 360.57394409]
[117.29147339 349.39321899]
[131.71965027 345.29107666]
[146.10571289 349.53860474]
[155.99195862 360.81964111]
[158.31504822 375.63867188]
[152.35513306 389.40380859]
[139.95896912 397.84982300]
[124.96762848 398.35958862]
[112.02635956 390.77517700]
[105.14508820 377.44641113]
[102.25981140 392.16632080]
[107.19814301 407.19705200]
[97.15721893 418.19839478]
[94.27194977 432.91827393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[17 207]
[18 206]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 185]
[26 184]
[28 181]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 161]
[38 160]
[39 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[77 147]
[78 146]
[79 145]
[81 143]
[82 142]
[84 139]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
