%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[66.12037659 640.68518066]
[59.60126877 654.26635742]
[50.22310257 666.05609131]
[38.45627594 675.46295166]
[24.89101410 682.01519775]
[10.20774174 685.38403320]
[-4.85703373 685.40057373]
[-19.54767036 682.06396484]
[-33.12728882 675.54156494]
[-44.91474533 666.16058350]
[-54.31878281 654.39147949]
[-60.86770248 640.82458496]
[-64.23300934 626.14050293]
[-64.24590302 611.07574463]
[-60.90573502 596.38592529]
[-54.38004684 582.80786133]
[-44.99616623 571.02270508]
[-33.22478485 561.62152100]
[-19.65634918 555.07586670]
[-4.97144508 551.71411133]
[10.09333706 551.70489502]
[13.41559601 537.07739258]
[16.73785591 522.44995117]
[20.06011581 507.82250977]
[23.38237572 493.19503784]
[26.70463371 478.56756592]
[30.02689362 463.94012451]
[33.34915543 449.31265259]
[20.00784492 440.95211792]
[10.31940365 428.50747681]
[5.46973181 413.47210693]
[6.06267881 397.65820312]
[12.04491806 382.97848511]
[22.71017647 371.21478271]
[36.78256607 363.80175781]
[52.56920242 361.65191650]
[55.67331314 346.97659302]
[47.35879135 334.67196655]
[50.29774857 319.74490356]
[63.26036835 311.10729980]
[66.36447906 296.43197632]
[69.46858978 281.75668335]
[59.37065125 270.84020996]
[57.61632156 255.89408875]
[65.08654022 242.62573242]
[79.09915161 236.22628784]
[82.20326233 221.55097961]
[85.30736542 206.87567139]
[88.41147614 192.20037842]
[90.19394684 177.30665588]
[90.64054871 162.31330872]
[91.08715820 147.31996155]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[85.21233368 57.32092667]
[85.89298248 44.84212494]
[94.60533905 36.45037842]
[95.27512360 21.46534157]
[95.94490814 6.48030233]
[96.27988434 -8.51595688]
[96.27988434 -23.51595688]
[96.27988434 -38.51595688]
[93.15047455 -47.09760284]
[96.39321899 -53.73886871]
[96.61654663 -68.73720551]
[96.83987427 -83.73554230]
[96.72820282 -98.73513031]
[96.28160095 -113.72847748]
[95.83499146 -128.72183228]
[95.38838959 -143.71517944]
[94.94178009 -158.70852661]
[79.96995544 -159.83193970]
[65.19757080 -162.51420593]
[50.78649902 -166.72593689]
[36.89462662 -172.42097473]
[23.67415810 -179.53694153]
[11.26994801 -187.99584961]
[-0.18209741 -197.70504761]
[-10.55650234 -208.55813599]
[-19.73960114 -220.43620300]
[-27.63077545 -233.20910645]
[-34.14356613 -246.73689270]
[-39.20661926 -260.87136841]
[-42.76445770 -275.45764160]
[-44.77810287 -290.33590698]
[-45.22548676 -305.34317017]
[-44.10171127 -320.31497192]
[-41.41909027 -335.08728027]
[-37.20701218 -349.49826050]
[-31.51162910 -363.38998413]
[-24.39534378 -376.61029053]
[-15.93612576 -389.01428223]
[-6.22665691 -400.46609497]
[4.62667894 -410.84024048]
[16.50496674 -420.02304077]
[29.27806282 -427.91390991]
[42.80601501 -434.42636108]
[56.94060898 -439.48907471]
[71.52696991 -443.04656982]
[86.40528870 -445.05984497]
[101.41255188 -445.50686646]
[116.38432312 -444.38272095]
[131.15657043 -441.69973755]
[145.56744385 -437.48733521]
[159.45904541 -431.79159546]
[172.67916870 -424.67498779]
[185.08296204 -416.21548462]
[196.53453064 -406.50573730]
[206.90841675 -395.65213013]
[216.09094238 -383.77362061]
[223.98149109 -371.00033569]
[230.49362183 -357.47222900]
[235.55598450 -343.33752441]
[239.11311340 -328.75106812]
[241.12603760 -313.87271118]
[241.57269287 -298.86541748]
[240.44819641 -283.89367676]
[237.76484680 -269.12149048]
[233.55207825 -254.71072388]
[227.85601807 -240.81927490]
[220.73908997 -227.59931946]
[212.27926636 -215.19572449]
[202.56924438 -203.74438477]
[191.71540833 -193.37077332]
[179.83666992 -184.18853760]
[167.06318665 -176.29829407]
[153.53492737 -169.78648376]
[139.40008545 -164.72447205]
[124.81355286 -161.16769409]
[109.93513489 -159.15513611]
[110.38173676 -144.16178894]
[110.82834625 -129.16842651]
[111.27494812 -114.17508698]
[111.72155762 -99.18173218]
[114.02336884 -96.51078033]
[115.14583588 -92.59221649]
[114.51667786 -87.99249268]
[111.83821106 -83.51221466]
[111.61488342 -68.51387787]
[111.39155579 -53.51554108]
[111.27988434 -38.51595688]
[111.27988434 -23.51595688]
[111.27988434 -8.51595688]
[113.50115204 -5.77765226]
[114.50645447 -1.82740963]
[113.74062347 2.75154185]
[110.92994690 7.15008736]
[110.26016235 22.13512611]
[109.59037781 37.12016678]
[118.50499725 52.23626709]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[106.08050537 147.76655579]
[105.63390350 162.75991821]
[105.18729401 177.75326538]
[113.68809509 165.39460754]
[126.66608429 157.87318420]
[141.61540222 156.64125061]
[155.64959717 161.93667603]
[166.05885315 172.73701477]
[170.83332825 186.95687866]
[169.05114746 201.85063171]
[161.05641174 214.54251099]
[148.39277649 222.58195496]
[133.50540161 224.41662598]
[119.26879883 219.69230652]
[108.43183899 209.32118225]
[103.08678436 195.30448914]
[99.98267365 209.97978210]
[96.87856293 224.65509033]
[93.77445221 239.33038330]
[103.99561310 250.85575867]
[105.45336151 266.01254272]
[97.79727936 278.96817017]
[84.14389038 284.86080933]
[81.03977966 299.53610229]
[77.93566895 314.21139526]
[86.29049683 327.35806274]
[82.93343353 342.19668579]
[70.34861755 350.08071899]
[67.24450684 364.75601196]
[79.57482910 372.05429077]
[89.03424072 382.78775024]
[94.70784760 395.89819336]
[96.05309296 410.09863281]
[92.95164490 423.99938965]
[85.71967316 436.24432373]
[75.07564545 445.64297485]
[62.06898117 451.28634644]
[47.97661209 452.63491821]
[44.65435410 467.26239014]
[41.33209610 481.88983154]
[38.00983429 496.51730347]
[34.68757629 511.14474487]
[31.36531639 525.77221680]
[28.04305649 540.39965820]
[24.72079659 555.02716064]
[38.30357742 561.54296875]
[50.09557724 570.91827393]
[59.50531769 582.68280029]
[66.06080627 596.24645996]
[69.43323517 610.92895508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[36 189]
[37 188]
[40 185]
[41 184]
[42 183]
[46 179]
[47 178]
[48 177]
[49 176]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[57 156]
[58 155]
[61 153]
[62 152]
[63 151]
[64 147]
[65 146]
[66 145]
[68 144]
[69 143]
[70 142]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
