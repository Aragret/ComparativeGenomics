%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[27.68439865 420.62808228]
[32.18559265 435.10269165]
[31.46161461 450.24377441]
[25.59988594 464.22290039]
[15.30824280 475.35205078]
[1.82944882 482.28729248]
[-13.20886517 484.19122314]
[-27.99074936 480.83389282]
[-40.73122025 472.62072754]
[-49.89180374 460.54348755]
[-54.36631393 446.06057739]
[-53.61443329 430.92086792]
[-47.72695541 416.95257568]
[-37.41481781 405.84240723]
[-23.92326736 398.93200684]
[-8.88147068 397.05581665]
[-5.55921078 382.42834473]
[-2.23695135 367.80087280]
[1.08530807 353.17343140]
[4.40756750 338.54595947]
[7.72982693 323.91848755]
[11.05208683 309.29104614]
[14.37434578 294.66357422]
[17.58761978 280.01177979]
[20.69173050 265.33648682]
[23.79584122 250.66119385]
[9.99177933 256.53042603]
[-3.27561259 249.53211975]
[-6.22610760 234.82516479]
[3.31528926 223.25097656]
[18.31501579 223.34161377]
[27.71544838 235.02867126]
[31.90246010 220.62489319]
[36.08946991 206.22109985]
[25.32316208 216.66555786]
[11.53949165 222.58251953]
[-3.44805932 223.19351196]
[-17.66762161 218.41815186]
[-29.24836731 208.88471985]
[-36.66664886 195.84750366]
[-38.94646835 181.02177429]
[-35.78786850 166.35809326]
[-27.60642433 153.78575134]
[-15.47854233 144.95883179]
[-0.99985528 141.03868103]
[13.92471790 142.54104614]
[27.33159065 149.26828003]
[37.45686340 160.33531189]
[42.96837616 174.28604126]
[43.14059067 189.28739929]
[42.54493332 174.40470886]
[56.00327301 166.08703613]
[63.17863846 152.91456604]
[70.25574493 139.68904114]
[69.43856812 124.81686401]
[82.77157593 116.29973602]
[89.84868622 103.07421112]
[96.32817841 89.54586792]
[90.65814972 75.03764343]
[96.80675507 61.12185287]
[110.67307281 55.80575180]
[116.54203033 42.00157547]
[122.41098785 28.19739914]
[128.27995300 14.39322186]
[134.14891052 0.58904493]
[131.49179077 -17.63240433]
[145.91418457 -27.63048363]
[151.57696533 -41.52051163]
[157.23976135 -55.41053772]
[155.28483582 -71.11050415]
[167.25437927 -79.97499847]
[172.91716003 -93.86502838]
[178.57995605 -107.75505066]
[184.24273682 -121.64508057]
[189.59391785 -135.65809631]
[194.63084412 -149.78713989]
[199.66775513 -163.91616821]
[204.70466614 -178.04519653]
[198.18115234 -192.19020081]
[203.49057007 -206.44729614]
[217.01588440 -212.57931519]
[222.05279541 -226.70834351]
[227.08970642 -240.83737183]
[226.27613831 -247.39859009]
[228.55598450 -252.60429382]
[232.49266052 -255.30827332]
[237.94801331 -269.28106689]
[243.40338135 -283.25387573]
[248.85873413 -297.22668457]
[254.31408691 -311.19946289]
[259.03421021 -325.43746948]
[263.00631714 -339.90197754]
[266.97842407 -354.36651611]
[270.95050049 -368.83102417]
[274.92260742 -383.29556274]
[261.22784424 -389.49234009]
[248.67117310 -397.75527954]
[237.56176758 -407.88088989]
[228.17323303 -419.61978149]
[220.73675537 -432.68292236]
[215.43548584 -446.74856567]
[212.39994812 -461.47039795]
[211.70491028 -476.48583984]
[213.36749268 -491.42514038]
[217.34674072 -505.92037964]
[223.54466248 -519.61462402]
[231.80862427 -532.17059326]
[241.93513489 -543.27917480]
[253.67481995 -552.66674805]
[266.73855591 -560.10217285]
[280.80465698 -565.40228271]
[295.52673340 -568.43658447]
[310.54223633 -569.13037109]
[325.48138428 -567.46655273]
[339.97628784 -563.48614502]
[353.67004395 -557.28704834]
[366.22534180 -549.02209473]
[377.33309937 -538.89465332]
[386.71969604 -527.15417480]
[394.15399170 -514.08984375]
[399.45294189 -500.02328491]
[402.48605347 -485.30096436]
[403.17861938 -470.28540039]
[401.51358032 -455.34640503]
[397.53195190 -440.85180664]
[391.33175659 -427.15859985]
[383.06570435 -414.60394287]
[372.93737793 -403.49707031]
[361.19613647 -394.11141968]
[348.13116455 -386.67819214]
[334.06417847 -381.38040161]
[319.34161377 -378.34851074]
[304.32601929 -377.65719604]
[289.38714600 -379.32345581]
[285.41503906 -364.85894775]
[281.44293213 -350.39440918]
[277.47085571 -335.92990112]
[273.49874878 -321.46536255]
[286.49176025 -328.96078491]
[301.28433228 -326.47479248]
[311.11346436 -315.14395142]
[311.48544312 -300.14855957]
[302.23019409 -288.34432983]
[287.57907104 -285.12796021]
[274.23040771 -291.96997070]
[268.28689575 -305.74411011]
[262.83154297 -291.77130127]
[257.37615967 -277.79852295]
[251.92082214 -263.82571411]
[246.46545410 -249.85292053]
[241.21873474 -235.80044556]
[236.18182373 -221.67141724]
[231.14491272 -207.54238892]
[237.74098206 -194.23722839]
[232.83410645 -179.83662415]
[218.83369446 -173.00827026]
[213.79678345 -158.87924194]
[208.75987244 -144.75021362]
[203.72294617 -130.62118530]
[204.89573669 -127.29598999]
[204.51618958 -123.23754120]
[202.25724792 -119.18163300]
[198.13276672 -115.98229218]
[192.46997070 -102.09226990]
[186.80718994 -88.20223999]
[181.14440918 -74.31221008]
[183.50436401 -59.60575867]
[171.12979126 -49.74775314]
[165.46699524 -35.85772324]
[159.80421448 -21.96769714]
[164.20509338 -10.70009708]
[159.60101318 0.91825783]
[147.95309448 6.45800591]
[142.08412170 20.26218224]
[136.21516418 34.06636047]
[130.34620667 47.87053680]
[124.47724915 61.67471313]
[130.26968384 75.34889221]
[124.51437378 89.43190002]
[110.13235474 95.41482544]
[124.41220856 90.82290649]
[137.81898499 97.55034637]
[142.67266846 111.74337006]
[136.19284058 125.27156067]
[122.09146118 130.38536072]
[108.44641876 124.15534973]
[103.07421112 110.15131378]
[95.99710846 123.37684631]
[96.30808258 139.19499207]
[83.48126984 146.76614380]
[76.40416718 159.99166870]
[75.11449432 169.03459167]
[69.12196350 173.36027527]
[69.19739532 189.18128967]
[56.25928497 196.56062317]
[50.49325180 210.40811157]
[46.30624008 224.81190491]
[42.11923218 239.21568298]
[38.47114182 253.76530457]
[35.36703110 268.44061279]
[32.26292419 283.11590576]
[33.54869843 292.15939331]
[29.00180626 297.98583984]
[25.67954636 312.61331177]
[22.35728645 327.24075317]
[19.03502846 341.86822510]
[15.71276855 356.49569702]
[12.39050865 371.12313843]
[9.06824970 385.75061035]
[5.74598980 400.37805176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 201]
[25 200]
[26 199]
[32 198]
[33 197]
[34 196]
[50 195]
[52 193]
[53 191]
[54 190]
[56 188]
[57 187]
[58 180]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[67 170]
[68 169]
[69 168]
[71 166]
[72 165]
[73 164]
[74 163]
[75 159]
[76 158]
[77 157]
[78 156]
[81 153]
[82 152]
[83 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
