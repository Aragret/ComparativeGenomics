%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[151.67553711 679.57019043]
[141.59997559 668.42279053]
[133.21347046 655.95495605]
[126.68676758 642.42047119]
[122.15273285 628.09484863]
[119.70368195 613.26977539]
[119.38947296 598.24707031]
[121.21649933 583.33251953]
[125.14757538 568.82983398]
[131.10266113 555.03430176]
[138.96051025 542.22668457]
[148.56115723 530.66778564]
[159.70915222 520.59289551]
[172.17752075 512.20715332]
[185.71243286 505.68130493]
[200.03833008 501.14816284]
[197.59260559 486.34887695]
[187.88368225 475.05346680]
[193.26733398 460.17642212]
[190.82160950 445.37716675]
[188.37588501 430.57788086]
[185.93016052 415.77862549]
[182.17385864 401.25656128]
[177.13693237 387.12753296]
[172.10002136 372.99850464]
[167.06311035 358.86947632]
[162.02618408 344.74044800]
[152.43756104 341.20898438]
[146.24554443 332.80615234]
[145.68907166 322.16329956]
[151.19296265 312.78161621]
[146.57894897 298.50888062]
[135.30187988 288.77868652]
[138.41909790 273.26760864]
[133.80508423 258.99487305]
[129.19107056 244.72213745]
[124.57706451 230.44941711]
[115.52730560 242.41192627]
[100.53687286 242.94770813]
[90.65616608 231.66180420]
[93.16886902 216.87376404]
[106.22271729 209.48477173]
[120.19375610 214.94052124]
[116.65408325 200.36415100]
[103.84011078 192.85830688]
[100.04273224 178.12620544]
[108.00243378 164.73663330]
[104.46276093 150.16024780]
[100.92308807 135.58387756]
[97.38341522 121.00749969]
[83.09686279 112.74541473]
[79.08309937 96.73736572]
[87.78146362 82.71217346]
[84.02516174 68.19010925]
[80.26886749 53.66805267]
[76.51256561 39.14599228]
[72.75626373 24.62393379]
[68.99996185 10.10187435]
[65.24365997 -4.42018557]
[61.48736191 -18.94224548]
[58.28612137 -4.28782320]
[51.29872131 8.98531628]
[41.02958679 19.91897583]
[28.22005844 27.72384453]
[13.79486561 31.83648109]
[-1.20462632 31.95999336]
[-15.69558907 28.08546257]
[-28.63190842 20.49259377]
[-39.07970047 9.72952557]
[-46.28472900 -3.42674899]
[-49.72686005 -18.02646637]
[-49.15759659 -33.01565933]
[-44.61804199 -47.31224823]
[-36.43590546 -59.88414764]
[-25.20186424 -69.82378387]
[-11.72691345 -76.41359711]
[3.01617908 -79.17787933]
[17.96309662 -77.91706085]
[32.03480911 -72.72216034]
[44.21546555 -63.96821213]
[53.62573242 -52.28716660]
[59.58659363 -38.52117157]
[60.47941208 -53.49457550]
[53.57722855 -67.73081207]
[62.05835342 -79.97499084]
[62.95116806 -94.94839478]
[56.04898834 -109.18463135]
[64.53011322 -121.42880249]
[65.42292786 -136.40220642]
[66.09271240 -151.38725281]
[66.53931427 -166.38059998]
[66.98592377 -181.37394714]
[67.20925140 -196.37228394]
[59.47195053 -210.17245483]
[67.20925140 -222.89973450]
[67.20925140 -237.89973450]
[67.20925140 -252.89973450]
[67.20925140 -267.89971924]
[67.20925140 -282.89971924]
[53.43538284 -289.47570801]
[43.88545609 -301.38208008]
[40.45561600 -316.25482178]
[43.82685852 -331.14096069]
[53.32982635 -343.08486938]
[67.07769012 -349.71502686]
[82.34081268 -349.71502686]
[96.08867645 -343.08486938]
[105.59164429 -331.14096069]
[108.96288300 -316.25482178]
[105.53304291 -301.38208008]
[95.98311615 -289.47570801]
[82.20925140 -282.89971924]
[82.20925140 -267.89971924]
[82.20925140 -252.89973450]
[82.20925140 -237.89973450]
[82.20925140 -222.89973450]
[89.94654846 -210.17245483]
[82.20925140 -196.37228394]
[84.89293671 -192.42173767]
[85.12339020 -186.74336243]
[81.97927094 -180.92733765]
[81.53266907 -165.93399048]
[81.08605957 -150.94064331]
[83.65093231 -146.91194153]
[83.71222687 -141.22921753]
[80.39633179 -135.50939941]
[79.50351715 -120.53598785]
[86.46955872 -107.37075043]
[77.92457581 -94.05558014]
[77.03176117 -79.08216858]
[83.99780273 -65.91693115]
[75.45281982 -52.60176086]
[74.55999756 -37.62835312]
[76.00942230 -22.69854546]
[79.76572418 -8.17648602]
[83.52201843 6.34557343]
[87.27832031 20.86763191]
[91.03462219 35.38969040]
[94.79092407 49.91175079]
[98.54722595 64.43380737]
[102.30352783 78.95587158]
[113.91248322 84.04367065]
[120.53419495 94.85137177]
[119.79496765 107.50472260]
[111.95979309 117.46782684]
[115.49946594 132.04420471]
[119.03913879 146.62057495]
[122.57880402 161.19696045]
[135.79286194 169.44477844]
[139.17494202 184.27772522]
[131.23045349 196.82447815]
[134.77012634 211.40084839]
[138.84979248 225.83540344]
[143.46380615 240.10813904]
[148.07781982 254.38087463]
[152.69183350 268.65359497]
[164.29893494 279.40469360]
[160.85168457 293.89486694]
[165.46569824 308.16760254]
[181.02078247 320.98953247]
[176.15522766 339.70352173]
[181.19213867 353.83255005]
[186.22904968 367.96157837]
[191.26597595 382.09060669]
[196.30288696 396.21963501]
[199.72682190 381.61563110]
[209.08059692 369.88931274]
[222.55815125 363.30480957]
[237.55717468 363.13351440]
[251.18159485 369.40850830]
[260.80075073 380.91815186]
[264.55731201 395.44012451]
[261.72598267 410.17050171]
[252.85340881 422.26501465]
[239.65278625 429.38845825]
[224.67291260 430.16537476]
[210.80618286 424.44577026]
[200.72943115 413.33288574]
[203.17515564 428.13214111]
[205.62088013 442.93142700]
[208.06660461 457.73068237]
[217.95046997 470.08462524]
[212.39187622 483.90313721]
[214.83760071 498.70242310]
[229.86026001 498.38543701]
[244.77510071 500.20968628]
[259.27850342 504.13806152]
[273.07519531 510.09057617]
[285.88424683 517.94604492]
[297.44494629 527.54455566]
[307.52188110 538.69067383]
[315.90994263 551.15747070]
[322.43832397 564.69116211]
[326.97412109 579.01623535]
[329.42498779 593.84100342]
[329.74105835 608.86370850]
[327.91589355 623.77844238]
[323.98660278 638.28161621]
[318.03323364 652.07788086]
[310.17697144 664.88647461]
[300.57775879 676.44659424]
[289.43099976 686.52282715]
[276.96368408 694.91009521]
[263.42956543 701.43768311]
[249.10423279 705.97259521]
[234.27931213 708.42254639]
[219.25660706 708.73767090]
[204.34197998 706.91156006]
[189.83908081 702.98138428]
[176.04313660 697.02716064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[19 181]
[20 180]
[21 179]
[22 178]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[31 159]
[32 158]
[34 156]
[35 155]
[36 154]
[37 153]
[43 152]
[44 151]
[47 148]
[48 147]
[49 146]
[50 145]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[82 133]
[83 132]
[85 130]
[86 129]
[88 127]
[89 126]
[90 123]
[91 122]
[92 121]
[93 118]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
