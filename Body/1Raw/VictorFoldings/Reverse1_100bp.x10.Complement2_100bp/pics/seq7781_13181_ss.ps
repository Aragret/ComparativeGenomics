%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[148.37066650 451.99713135]
[156.41920471 439.23452759]
[167.49734497 428.99066162]
[180.84977722 421.96392822]
[177.52752686 407.33645630]
[174.20526123 392.70901489]
[170.88299561 378.08154297]
[167.34332275 363.50515747]
[163.58703613 348.98312378]
[159.99955750 345.83047485]
[158.35446167 340.39074707]
[159.94195557 333.97268677]
[156.61968994 319.34524536]
[153.29743958 304.71777344]
[149.86637878 290.11544800]
[146.32670593 275.53906250]
[142.78703308 260.96270752]
[139.24736023 246.38632202]
[135.49105835 231.86427307]
[131.51896667 217.39973450]
[116.56034088 209.71350098]
[111.69324493 193.26277161]
[120.39780426 178.08877563]
[116.21079254 163.68499756]
[111.38479614 149.48254395]
[105.92943573 135.50975037]
[100.47408295 121.53694916]
[95.01872253 107.56414795]
[91.74185944 105.53079224]
[89.37717438 102.06291962]
[88.54524994 97.60030365]
[89.64710236 92.84365082]
[84.82110596 78.64118958]
[79.99510956 64.43873596]
[75.16911316 50.23628235]
[59.33839035 42.79265594]
[53.89625931 26.52310944]
[61.74714661 11.65023804]
[56.71023178 -2.47879124]
[51.67331696 -16.60782051]
[46.63639832 -30.73685074]
[41.59948349 -44.86587906]
[36.56256485 -58.99491119]
[31.52565002 -73.12393951]
[29.48809624 -58.26296997]
[23.21520805 -44.63759613]
[13.24965096 -33.42654419]
[0.45354742 -25.59968376]
[-14.06611156 -21.83411598]
[-29.05323219 -22.45560265]
[-43.21127701 -27.41037750]
[-55.31543350 -36.26980209]
[-64.31857300 -48.26744843]
[-69.44182587 -62.36539841]
[-70.24198914 -77.34403992]
[-66.64984131 -91.90756989]
[-58.97613144 -104.79610443]
[-47.88471985 -114.89464569]
[-34.33511734 -121.32956696]
[-19.49950218 -123.54419708]
[-4.66130686 -121.34693909]
[8.89581871 -114.92787933]
[19.99904823 -104.84233093]
[27.68650055 -91.96604156]
[26.79368401 -106.93944550]
[25.90086746 -121.91285706]
[25.00805283 -136.88626099]
[24.11523628 -151.85966492]
[23.22241974 -166.83306885]
[11.68452740 -177.29800415]
[10.99238682 -192.49588013]
[21.04020309 -203.43101501]
[20.14738846 -218.40441895]
[8.60949516 -228.86935425]
[7.91735411 -244.06723022]
[17.96516991 -255.00234985]
[17.07235527 -269.97576904]
[16.17953873 -284.94915771]
[7.57942724 -272.65942383]
[-6.25906134 -266.87182617]
[-21.04792023 -269.37973022]
[-32.20466232 -279.40606689]
[-36.27224731 -293.84402466]
[-31.99028969 -308.21984863]
[-20.68560219 -318.07907104]
[-5.86106539 -320.36666870]
[7.88977766 -314.37380981]
[16.30615807 -301.95721436]
[17.42180634 -316.91567993]
[18.53745651 -331.87411499]
[8.50112152 -343.78671265]
[9.84563732 -358.94082642]
[21.26432037 -368.43551636]
[22.37996864 -383.39395142]
[23.49561691 -398.35241699]
[23.94222260 -413.34576416]
[23.71889496 -428.34411621]
[23.49556732 -443.34243774]
[23.27223969 -458.34078979]
[9.58681011 -465.19406128]
[0.66326588 -477.62905884]
[-1.44782734 -492.78826904]
[3.73864412 -507.18823242]
[15.03086662 -517.51995850]
[29.83397102 -521.40924072]
[44.74631119 -517.96240234]
[56.34114075 -507.97149658]
[61.95405579 -493.73233032]
[60.29524231 -478.51699829]
[51.74589157 -465.82183838]
[38.27057648 -458.56411743]
[38.49390411 -443.56576538]
[38.71723175 -428.56744385]
[38.94055939 -413.56909180]
[50.13799286 -423.54995728]
[65.12058258 -422.82742310]
[75.30561829 -411.81536865]
[74.85865021 -396.82202148]
[64.03572845 -386.43624878]
[49.03670502 -386.60748291]
[38.45407104 -397.23675537]
[37.33842087 -382.27832031]
[36.22277451 -367.31985474]
[46.10666656 -356.23635864]
[45.18833160 -341.05047607]
[33.49591064 -330.75848389]
[32.38026047 -315.80001831]
[31.26461220 -300.84155273]
[31.15294456 -285.84197998]
[32.04576111 -270.86856079]
[32.93857574 -255.89517212]
[44.21463013 -246.23152161]
[45.33337402 -231.05906677]
[35.12079239 -219.29722595]
[36.01361084 -204.32382202]
[47.28966522 -194.66017151]
[48.40840912 -179.48773193]
[38.19582748 -167.72589111]
[39.08864212 -152.75248718]
[39.98145676 -137.77908325]
[40.87427521 -122.80567169]
[41.76708984 -107.83226776]
[42.65990448 -92.85885620]
[45.65467834 -78.16085815]
[50.69159698 -64.03182220]
[55.72851181 -49.90279770]
[60.76543045 -35.77376556]
[65.80234528 -21.64473724]
[70.83926392 -7.51570749]
[75.87617493 6.61332226]
[88.17607117 10.45287132]
[96.13755035 20.83058357]
[96.67622375 34.09407806]
[89.37156677 45.41028595]
[94.19756317 59.61273956]
[99.02355957 73.81519318]
[103.84956360 88.01765442]
[108.99152374 102.10879517]
[114.44687653 116.08158875]
[119.90223694 130.05438232]
[125.35758972 144.02719116]
[132.35658264 130.76014709]
[146.64547729 126.19642639]
[160.03894043 132.95031738]
[164.86459351 147.15289307]
[158.35809326 160.66825867]
[144.24664307 165.75422668]
[130.61457825 159.49798584]
[134.80158997 173.90176392]
[147.27381897 178.98684692]
[154.43556213 190.16358948]
[153.86091614 203.23080444]
[145.98348999 213.42764282]
[149.95558167 227.89216614]
[154.38336182 232.80198669]
[155.49937439 238.37437439]
[153.82373047 242.84664917]
[157.36340332 257.42303467]
[160.90307617 271.99938965]
[164.44274902 286.57577515]
[169.50886536 294.17660522]
[167.92489624 301.39550781]
[171.24716187 316.02297974]
[174.56941223 330.65042114]
[178.10908508 345.22680664]
[181.86538696 359.74887085]
[186.21957397 364.72406006]
[187.25250244 370.31243896]
[185.51046753 374.75927734]
[188.83271790 389.38674927]
[192.15498352 404.01422119]
[195.47723389 418.64166260]
[210.55497742 419.21121216]
[224.97125244 423.66467285]
[237.74314880 431.69842529]
[247.99984741 442.76467896]
[255.04205322 456.10897827]
[258.38958740 470.82144165]
[257.81423950 485.89892578]
[253.35519409 500.31350708]
[245.31652832 513.08227539]
[234.24629211 523.33471680]
[220.89929199 530.37176514]
[206.18554688 533.71362305]
[191.10826111 533.13244629]
[176.69541931 528.66784668]
[163.92973328 520.62426758]
[153.68157959 509.55004883]
[146.64968872 496.20034790]
[143.31350708 481.48529053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 186]
[9 185]
[12 184]
[13 183]
[14 182]
[15 180]
[16 179]
[17 178]
[18 177]
[19 174]
[20 173]
[23 169]
[24 168]
[25 161]
[26 160]
[27 159]
[28 158]
[32 157]
[33 156]
[34 155]
[35 154]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[72 135]
[73 134]
[76 131]
[77 130]
[78 129]
[88 128]
[89 127]
[90 126]
[93 123]
[94 122]
[95 121]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
