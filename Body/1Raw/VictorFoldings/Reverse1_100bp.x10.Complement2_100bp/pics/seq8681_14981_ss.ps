%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[63.72358704 422.07843018]
[61.07697678 436.86349487]
[56.59812546 451.20028687]
[50.35767365 464.86264038]
[42.45403671 477.63510132]
[33.01186752 489.31622314]
[22.18008804 499.72180176]
[10.12952423 508.68768311]
[-2.94976449 516.07250977]
[-16.85150146 521.75976562]
[-31.35643387 525.65979004]
[-46.23580170 527.71105957]
[-61.25493240 527.88122559]
[-76.17694855 526.16760254]
[-90.76652527 522.59716797]
[-104.79354095 517.22631836]
[-118.03678894 510.13977051]
[-130.28739929 501.44918823]
[-141.35214233 491.29171753]
[-151.05653381 479.82751465]
[-159.24752808 467.23739624]
[-165.79591370 453.71994019]
[-170.59843445 439.48831177]
[-173.57934570 424.76696777]
[-174.69161987 409.78811646]
[-173.91773987 394.78799438]
[-171.26988220 380.00311279]
[-166.78982544 365.66671753]
[-160.54821777 352.00488281]
[-152.64350891 339.23309326]
[-143.20036316 327.55276489]
[-132.36770630 317.14810181]
[-120.31638336 308.18322754]
[-107.23647308 300.79953003]
[-93.33425903 295.11343384]
[-78.82899475 291.21463013]
[-63.94945526 289.16461182]
[-48.93031311 288.99572754]
[-34.00843430 290.71060181]
[-19.41916466 294.28222656]
[-5.39259624 299.65423584]
[1.68450916 286.42871094]
[8.76161480 273.20318604]
[15.83872032 259.97766113]
[12.63394451 248.31335449]
[18.42175865 237.23703003]
[30.58279800 232.93913269]
[37.85602951 219.82044983]
[45.12925720 206.70175171]
[52.10771179 193.42390442]
[58.78790283 179.99353027]
[65.46810150 166.56315613]
[72.14829254 153.13278198]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[106.99028778 46.39027786]
[112.19732666 41.14542007]
[117.23424530 27.01638985]
[107.40371704 15.29854202]
[104.77568054 0.33223912]
[109.95729065 -13.84581566]
[121.46292114 -23.46228981]
[136.13833618 -26.01137352]
[141.17524719 -40.14040375]
[146.21215820 -54.26943207]
[151.24908447 -68.39846039]
[139.62164307 -78.09527588]
[132.02761841 -91.16060638]
[129.36686707 -106.00784302]
[131.94152832 -120.84163666]
[139.42182922 -133.87492371]
[150.88821411 -143.54428101]
[164.94430542 -148.69744873]
[179.88700867 -148.73057556]
[184.92391968 -162.85960388]
[171.79594421 -171.17053223]
[160.84530640 -182.18338013]
[152.61628723 -195.34642029]
[147.51687622 -210.00119019]
[145.79861450 -225.41540527]
[147.54417419 -240.81953430]
[152.66336060 -255.44526672]
[160.89782715 -268.56378174]
[171.83404541 -279.52215576]
[184.92411804 -287.77569580]
[199.51318359 -292.91522217]
[214.87222290 -294.68713379]
[230.23446655 -293.00610352]
[235.06045532 -307.20858765]
[239.88645935 -321.41104126]
[244.71246338 -335.61349487]
[249.53845215 -349.81594849]
[254.36445618 -364.01840210]
[241.11793518 -371.13034058]
[229.22277832 -380.32571411]
[219.00346375 -391.35366821]
[210.73880005 -403.91333008]
[204.65425110 -417.66207886]
[200.91580200 -432.22482300]
[199.62544250 -447.20431519]
[200.81837463 -462.19186401]
[204.46205139 -476.77862549]
[210.45707703 -490.56665039]
[218.63990784 -503.17977905]
[228.78729248 -514.27392578]
[240.62240601 -523.54644775]
[253.82240295 -530.74438477]
[268.02716064 -535.67138672]
[282.84915161 -538.19293213]
[297.88403320 -538.24041748]
[312.72161865 -535.81237793]
[326.95718384 -530.97509766]
[340.20233154 -523.86059570]
[352.09570312 -514.66296387]
[362.31289673 -503.63305664]
[370.57513428 -491.07177734]
[376.65704346 -477.32186890]
[380.39270020 -462.75839233]
[381.68017578 -447.77865601]
[380.48434448 -432.79135132]
[376.83786011 -418.20529175]
[370.84017944 -404.41842651]
[362.65490723 -391.80685425]
[352.50540161 -380.71466064]
[340.66848755 -371.44439697]
[327.46710205 -364.24902344]
[313.26141357 -359.32479858]
[298.43893433 -356.80606079]
[283.40405273 -356.76150513]
[268.56689453 -359.19241333]
[263.74090576 -344.98992920]
[258.91491699 -330.78747559]
[254.08891296 -316.58502197]
[249.26292419 -302.38256836]
[244.43692017 -288.18011475]
[256.87982178 -280.73474121]
[267.50189209 -270.85507202]
[275.83468628 -258.97329712]
[281.51010132 -245.60998535]
[284.27642822 -231.35124207]
[284.00967407 -216.82299805]
[280.71902466 -202.66358948]
[274.54656982 -189.49563599]
[265.76119995 -177.89874268]
[254.74690247 -168.38392639]
[241.98585510 -161.37109375]
[228.03750610 -157.17059326]
[213.51391602 -155.96934509]
[199.05294800 -157.82269287]
[194.01603699 -143.69366455]
[205.56796265 -134.21534729]
[213.19433594 -121.33251190]
[215.95809937 -106.59018707]
[213.50669861 -91.76412964]
[206.11697388 -78.64688110]
[194.66400146 -68.83110046]
[180.51751709 -63.51613998]
[165.37811279 -63.36154556]
[160.34118652 -49.23251724]
[155.30427551 -35.10348511]
[150.26736450 -20.97445679]
[160.02070618 -9.71666431]
[162.84831238 5.00952291]
[157.89245605 19.26805687]
[146.38949585 29.19674301]
[131.36328125 32.05330658]
[126.32635498 46.18233490]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[105.23934174 137.04623413]
[120.14721680 138.70614624]
[131.30963135 148.72615051]
[134.56329346 163.36901855]
[128.69467163 177.17333984]
[115.89259338 184.99043274]
[100.93193817 183.90470886]
[89.39265442 174.32113647]
[85.57866669 159.81297302]
[78.89847565 173.24334717]
[72.21827698 186.67372131]
[65.53808594 200.10409546]
[65.86346436 205.31382751]
[64.31299591 209.68981934]
[61.51837921 212.65716553]
[58.24795151 213.97497559]
[50.97472382 227.09367371]
[43.70149231 240.21237183]
[44.44852448 258.61138916]
[29.06424713 267.05477905]
[21.98714256 280.28030396]
[14.91003704 293.50582886]
[7.83293152 306.73135376]
[20.08426666 315.42089844]
[31.14987564 325.57745361]
[40.85523605 337.04083252]
[49.04727936 349.63024902]
[55.59680939 363.14715576]
[60.40052795 377.37838745]
[63.38267517 392.09945679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 203]
[42 202]
[43 201]
[44 200]
[47 198]
[48 197]
[49 196]
[50 192]
[51 191]
[52 190]
[53 189]
[54 180]
[55 179]
[56 178]
[58 175]
[59 174]
[60 173]
[62 172]
[63 171]
[68 166]
[69 165]
[70 164]
[71 163]
[79 155]
[80 154]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
