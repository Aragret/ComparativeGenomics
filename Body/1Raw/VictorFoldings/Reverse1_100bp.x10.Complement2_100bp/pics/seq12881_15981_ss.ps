%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-12.05500984 296.89117432]
[-4.74566936 310.01477051]
[0.78811103 323.98016357]
[4.45164156 338.54840088]
[6.18223429 353.47021484]
[5.95027637 368.49023438]
[3.75973725 383.35147095]
[-0.35190055 397.79965210]
[-6.31428099 411.58749390]
[-14.02538109 424.47912598]
[-23.35325241 436.25393677]
[-34.13828278 446.71041870]
[-46.19592667 455.66967773]
[-59.31986237 462.97839355]
[-73.28552246 468.51150513]
[-87.85393524 472.17431641]
[-102.77581787 473.90420532]
[-117.79582977 473.67153931]
[-132.65696716 471.48028564]
[-147.10493469 467.36798096]
[-160.89251709 461.40493774]
[-173.78376770 453.69320679]
[-185.55812073 444.36477661]
[-196.01409912 433.57925415]
[-204.97277832 421.52117920]
[-212.28086853 408.39691162]
[-217.81332397 394.43096924]
[-221.47546387 379.86239624]
[-223.20463562 364.94042969]
[-222.97125244 349.92044067]
[-220.77929688 335.05938721]
[-216.66627502 320.61163330]
[-210.70259094 306.82434082]
[-202.99026489 293.93344116]
[-193.66127014 282.15954590]
[-182.87524414 271.70407104]
[-170.81674194 262.74597168]
[-157.69210815 255.43849182]
[-143.72592163 249.90670776]
[-129.15716553 246.24525452]
[-114.23512268 244.51679993]
[-99.21512604 244.75090027]
[-84.35419464 246.94355774]
[-69.90661621 251.05726624]
[-56.11961365 257.02160645]
[-43.22908783 264.73455811]
[-33.91420746 252.97731018]
[-24.59932327 241.22004700]
[-15.28444099 229.46279907]
[-5.96955824 217.70555115]
[3.34532452 205.94830322]
[12.57242298 194.12202454]
[21.71122551 182.22740173]
[30.85002708 170.33276367]
[39.98883057 158.43812561]
[49.12763214 146.54350281]
[34.14258194 145.87400818]
[25.19989014 133.83123779]
[28.89178085 119.29267120]
[42.49672699 112.97559357]
[55.98566818 119.53672791]
[59.41540909 134.13783264]
[69.41358185 122.95584869]
[79.41175079 111.77387238]
[89.40992737 100.59190369]
[98.81208038 88.90431976]
[107.59268188 76.74286652]
[116.37328339 64.58140564]
[118.85954285 55.79185104]
[125.37625885 52.30556488]
[134.33695984 40.27618790]
[143.29765320 28.24680901]
[135.58029175 15.18089962]
[133.45898438 0.19613723]
[137.22618103 -14.41967487]
[146.27763367 -26.44708824]
[159.20918274 -34.07204056]
[174.03443909 -36.15943146]
[188.48991394 -32.42201233]
[197.45062256 -44.45139313]
[206.41131592 -56.48077011]
[215.37200928 -68.51014709]
[224.33270264 -80.53952789]
[226.94955444 -89.29109192]
[233.51744080 -92.67996979]
[242.65625000 -104.57460022]
[251.79505920 -116.46923065]
[260.93386841 -128.36386108]
[249.78691101 -138.41273499]
[239.46276855 -149.30522156]
[230.02507019 -160.97415161]
[221.53201294 -173.34759521]
[214.03593445 -186.34924316]
[207.58308411 -199.89895630]
[202.21322632 -213.91319275]
[197.95947266 -228.30554199]
[194.84805298 -242.98727417]
[192.89814758 -257.86785889]
[192.12178040 -272.85556030]
[192.52372742 -287.85797119]
[194.10151672 -302.78262329]
[196.84542847 -317.53744507]
[200.73854065 -332.03149414]
[205.75685120 -346.17544556]
[211.86941528 -359.88201904]
[219.03855896 -373.06677246]
[227.22006226 -385.64837646]
[236.36349487 -397.54928589]
[246.41249084 -408.69613647]
[257.30508423 -419.02017212]
[268.97409058 -428.45773315]
[281.34762573 -436.95068359]
[294.34936523 -444.44662476]
[307.89913940 -450.89932251]
[321.91342163 -456.26904297]
[336.30581665 -460.52264404]
[350.98757935 -463.63394165]
[365.86819458 -465.58367920]
[380.85589600 -466.35989380]
[395.85830688 -465.95779419]
[410.78292847 -464.37985229]
[425.53771973 -461.63577271]
[440.03173828 -457.74252319]
[454.17562866 -452.72406006]
[467.88214111 -446.61135864]
[481.06683350 -439.44210815]
[493.64834595 -431.26046753]
[505.54916382 -422.11691284]
[516.69592285 -412.06781006]
[527.01983643 -401.17510986]
[536.45727539 -389.50598145]
[544.95013428 -377.13238525]
[552.44592285 -364.13058472]
[558.89849854 -350.58071899]
[564.26806641 -336.56637573]
[568.52154541 -322.17395020]
[571.63262939 -307.49215698]
[573.58221436 -292.61151123]
[574.35833740 -277.62380981]
[573.95605469 -262.62139893]
[572.37792969 -247.69679260]
[569.63372803 -232.94201660]
[565.74035645 -218.44804382]
[560.72174072 -204.30421448]
[554.60888672 -190.59774780]
[547.43945312 -177.41314697]
[539.25769043 -164.83169556]
[530.11401367 -152.93096924]
[520.06481934 -141.78434753]
[509.17202759 -131.46054077]
[497.50280762 -122.02319336]
[485.12911987 -113.53050995]
[472.12722778 -106.03483582]
[458.57730103 -99.58239746]
[444.56292725 -94.21296692]
[430.17044067 -89.95965576]
[415.48861694 -86.84868622]
[400.60797119 -84.89923096]
[385.62023926 -84.12332153]
[370.61782837 -84.52572632]
[355.69323730 -86.10398102]
[340.93850708 -88.84835052]
[326.44454956 -92.74190521]
[312.30078125 -97.76064301]
[298.59439087 -103.87363434]
[285.40985107 -111.04317474]
[272.82849121 -119.22506714]
[263.68969727 -107.33042908]
[254.55088806 -95.43579865]
[245.41207886 -83.54116821]
[236.36207581 -71.57882690]
[227.40138245 -59.54944992]
[218.44068909 -47.52007294]
[209.47999573 -35.49069595]
[200.51930237 -23.46131897]
[208.23854065 -10.68076229]
[210.48260498 4.12158728]
[206.87875366 18.69475174]
[197.94592285 30.81053162]
[185.02026367 38.60419083]
[170.05538940 40.86143875]
[155.32702637 37.20750427]
[146.36633301 49.23688126]
[137.40563965 61.26625824]
[128.53474426 73.36201477]
[119.75413513 85.52346802]
[110.97353363 97.68492126]
[125.76756287 95.20768738]
[138.75614929 102.71080017]
[144.00108337 116.76393890]
[139.10444641 130.94219971]
[126.30493164 138.76345825]
[111.45428467 136.65196228]
[101.34203339 125.57305145]
[100.59190369 110.59007263]
[90.59372711 121.77204895]
[80.59555817 132.95402527]
[70.59738159 144.13600159]
[61.02226639 155.68229675]
[51.88346100 167.57693481]
[42.74465942 179.47155762]
[33.60585785 191.36619568]
[24.46705627 203.26083374]
[21.72020340 211.97247314]
[15.10257626 215.26318359]
[5.78769302 227.02043152]
[-3.52718973 238.77767944]
[-12.84207249 250.53492737]
[-22.15695572 262.29217529]
[-31.47183800 274.04943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[52 203]
[53 202]
[54 201]
[55 200]
[56 199]
[62 198]
[63 197]
[64 196]
[65 195]
[66 187]
[67 186]
[68 185]
[70 184]
[71 183]
[72 182]
[79 175]
[80 174]
[81 173]
[82 172]
[83 171]
[85 170]
[86 169]
[87 168]
[88 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
