%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[173.51081848 327.55496216]
[184.77415466 317.60919189]
[176.54534912 305.06777954]
[168.31654358 292.52639771]
[160.08772278 279.98498535]
[151.85891724 267.44360352]
[143.63011169 254.90219116]
[141.56768799 269.75973511]
[131.24949646 280.64712524]
[116.52400208 283.50363159]
[102.88343048 277.26385498]
[95.41538239 264.25506592]
[96.90525055 249.32925415]
[106.79735565 238.05334473]
[121.40219116 234.63298035]
[135.27339172 240.34461975]
[128.59320068 226.91424561]
[121.91300964 213.48387146]
[115.23281097 200.05349731]
[114.97563934 215.05130005]
[110.36631775 229.32554626]
[101.80358887 241.64137268]
[90.02822876 250.93334961]
[76.05891418 256.39761353]
[61.10413742 257.56146240]
[46.45762634 254.32421875]
[33.38645935 246.96592712]
[23.02142143 236.12313843]
[16.25919151 222.73388672]
[13.68476772 207.95645142]
[15.52086639 193.06925964]
[21.60864449 179.36016846]
[31.42145157 168.01518250]
[44.11037827 160.01573181]
[58.57770538 156.05386353]
[73.57186890 156.47232056]
[87.79572296 161.23489380]
[100.01875305 169.92956543]
[109.18183899 181.80111694]
[106.51604462 167.03988647]
[103.85025024 152.27867126]
[100.85547638 137.58067322]
[97.53321075 122.95320892]
[94.21095276 108.32575226]
[89.49658203 101.78761292]
[90.94983673 93.45581818]
[87.84572601 78.78050995]
[84.74161530 64.10520935]
[81.63750458 49.42990875]
[77.92662811 63.96364212]
[71.00621796 77.27182770]
[61.23930740 88.65635681]
[49.13824844 97.52001190]
[35.33783722 103.39781952]
[20.56201935 105.98145294]
[5.58589983 105.13536835]
[-8.80490112 100.90396118]
[-21.85547256 93.50919342]
[-32.88120651 83.33898163]
[-41.30371094 70.92683411]
[-46.68116760 56.92387009]
[-48.73147583 42.06465530]
[-47.34708786 27.12867737]
[-42.60062408 12.89944363]
[-34.74107361 0.12339406]
[-24.18072891 -10.52926636]
[-11.47357178 -18.49971962]
[2.71381021 -23.36985397]
[17.63717461 -24.88418770]
[32.51367188 -22.96328735]
[46.56290817 -17.70791435]
[59.04788971 -9.39375782]
[69.31368256 1.54303801]
[76.82176208 14.52875233]
[81.17856598 28.88381004]
[83.62429047 14.08454037]
[86.07001495 -0.71473092]
[88.51574707 -15.51400185]
[90.96147156 -30.31327248]
[93.40719604 -45.11254501]
[95.85292816 -59.91181564]
[98.29865265 -74.71108246]
[100.74438477 -89.51035309]
[95.36071777 -104.38741302]
[105.06964111 -115.68280792]
[103.38133240 -124.65985870]
[107.66352844 -130.68353271]
[110.32932281 -145.44474792]
[112.99511719 -160.20596313]
[107.83354950 -175.16152954]
[117.70956421 -186.31112671]
[120.37536621 -201.07234192]
[123.04116058 -215.83355713]
[125.70695496 -230.59477234]
[111.59520721 -235.79379272]
[98.60074615 -243.36447144]
[87.11846161 -253.07673645]
[77.49727631 -264.63546753]
[70.02957153 -277.68936157]
[64.94229126 -291.84176636]
[62.39001846 -306.66259766]
[62.45032120 -321.70147705]
[65.12136841 -336.50134277]
[70.32198334 -350.61251831]
[77.89413452 -363.60610962]
[87.60770416 -375.08731079]
[99.16751099 -384.70718384]
[112.22226715 -392.17340088]
[126.37525177 -397.25906372]
[141.19638062 -399.80966187]
[156.23522949 -399.74765015]
[171.03482056 -397.07492065]
[185.14538574 -391.87271118]
[198.13812256 -384.29910278]
[209.61820984 -374.58422852]
[219.23677063 -363.02331543]
[226.70150757 -349.96771240]
[231.78558350 -335.81414795]
[234.33450317 -320.99273682]
[234.27078247 -305.95388794]
[231.59637451 -291.15460205]
[226.39256287 -277.04464722]
[218.81747437 -264.05276489]
[209.10128784 -252.57377625]
[197.53930664 -242.95651245]
[184.48284912 -235.49325562]
[170.32872009 -230.41078186]
[155.50701904 -227.86355591]
[140.46817017 -227.92898560]
[137.80238342 -213.16777039]
[135.13658142 -198.40653992]
[132.47077942 -183.64532471]
[137.82302856 -169.74559021]
[127.75633240 -157.54017639]
[125.09053802 -142.77896118]
[122.42474365 -128.01773071]
[119.86891174 -113.23708344]
[125.42751312 -99.41857147]
[115.54365540 -87.06462860]
[113.09792328 -72.26535797]
[110.65219879 -57.46608734]
[108.20646667 -42.66681671]
[105.76074219 -27.86754608]
[103.31501770 -13.06827450]
[100.86928558 1.73099649]
[98.42356110 16.53026772]
[95.97783661 31.32953835]
[96.31281281 46.32579803]
[99.41691589 61.00109863]
[102.52102661 75.67639923]
[105.62513733 90.35170746]
[108.83841705 105.00349426]
[112.16067505 119.63095093]
[115.48293304 134.25840759]
[119.03057098 138.08743286]
[120.59798431 142.45738220]
[120.31072235 146.52340698]
[118.61146545 149.61288452]
[121.27725983 164.37409973]
[123.94305420 179.13531494]
[128.66319275 193.37330627]
[135.34338379 206.80368042]
[142.02357483 220.23405457]
[148.70376587 233.66442871]
[156.17150879 246.67338562]
[164.40032959 259.21478271]
[172.62913513 271.75619507]
[180.85794067 284.29757690]
[189.08674622 296.83898926]
[197.31555176 309.38037109]
[210.92317200 303.00753784]
[225.29927063 298.63619995]
[240.15116882 296.35534668]
[255.17648315 296.21145630]
[270.06930542 298.20745850]
[284.52648926 302.30267334]
[298.25366211 308.41375732]
[310.97137451 316.41629028]
[322.42071533 326.14736938]
[332.36856079 337.40884399]
[340.61242676 349.97146606]
[346.98443604 363.57949829]
[351.35488892 377.95587158]
[353.63479614 392.80789185]
[353.77774048 407.83322144]
[351.78085327 422.72592163]
[347.68472290 437.18286133]
[341.57278442 450.90966797]
[333.56945801 463.62686157]
[323.83770752 475.07559204]
[312.57559204 485.02276611]
[300.01245117 493.26583862]
[286.40405273 499.63699341]
[272.02740479 504.00656128]
[257.17523193 506.28555298]
[242.14990234 506.42758179]
[227.25730896 504.42974854]
[212.80062866 500.33273315]
[199.07421875 494.21997070]
[186.35749817 486.21585083]
[174.90937805 476.48336792]
[164.96292114 465.22064209]
[156.72061157 452.65698242]
[150.35029602 439.04818726]
[145.98161316 424.67129517]
[143.70353699 409.81896973]
[143.56243896 394.79364014]
[145.56118774 379.90115356]
[149.65910339 365.44473267]
[155.77273560 351.71868896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[16 164]
[17 163]
[18 162]
[19 161]
[39 160]
[40 159]
[41 158]
[42 154]
[43 153]
[44 152]
[46 151]
[47 150]
[48 149]
[49 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[85 137]
[87 136]
[88 135]
[89 134]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
