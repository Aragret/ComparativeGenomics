%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[69.26170349 617.20379639]
[56.47677231 625.06500244]
[43.09362030 631.85791016]
[29.20131111 637.53741455]
[14.89229202 642.06561279]
[0.26179147 645.41241455]
[-14.59282589 647.55560303]
[-29.57270432 648.48083496]
[-44.57815170 648.18200684]
[-59.50931168 646.66101074]
[-74.26681519 643.92810059]
[-88.75244904 640.00140381]
[-102.86981964 634.90698242]
[-116.52497864 628.67889404]
[-129.62704468 621.35845947]
[-142.08882141 612.99438477]
[-153.82737732 603.64245605]
[-164.76460266 593.36480713]
[-174.82769775 582.22991943]
[-183.94972229 570.31176758]
[-192.06993103 557.68975830]
[-199.13430786 544.44787598]
[-205.09582520 530.67425537]
[-209.91482544 516.46051025]
[-213.55923462 501.90130615]
[-216.00479126 487.09344482]
[-217.23522949 472.13555908]
[-217.24235535 457.12713623]
[-216.02612305 442.16806030]
[-213.59463501 427.35791016]
[-209.96405029 412.79522705]
[-205.15855408 398.57693481]
[-199.21009827 384.79763794]
[-192.15830994 371.54907227]
[-184.05007935 358.91937256]
[-174.93939209 346.99258423]
[-164.88687134 335.84808350]
[-153.95941162 325.56005859]
[-142.22973633 316.19699097]
[-129.77589417 307.82113647]
[-116.68079376 300.48825073]
[-103.03156281 294.24716187]
[-88.91903687 289.13937378]
[-74.43713379 285.19891357]
[-59.68223190 282.45196533]
[-44.75252151 280.91683960]
[-29.74736595 280.60372925]
[-14.76661587 281.51473999]
[0.09003048 283.64379883]
[14.72370243 286.97671509]
[29.03701401 291.49136353]
[34.69980240 277.60131836]
[40.36258698 263.71130371]
[38.00262070 249.00485229]
[50.37720490 239.14683533]
[56.03999329 225.25682068]
[61.70277786 211.36679077]
[67.36556244 197.47676086]
[66.97983551 190.09617615]
[73.21744537 183.42309570]
[79.08641052 169.61892700]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[89.20646667 71.85988617]
[98.91539001 60.56448746]
[101.36111450 45.76521683]
[103.80683899 30.96594620]
[91.49843597 23.79975319]
[82.39453125 12.88554001]
[77.57302094 -0.45260683]
[77.59390259 -14.60556889]
[82.43428040 -27.87331200]
[91.49356842 -38.66909027]
[103.66793060 -45.70921326]
[117.48477936 -48.16566849]
[120.15057373 -62.92688370]
[122.81636810 -77.68810272]
[125.48216248 -92.44931793]
[118.85527802 -109.62971497]
[130.70506287 -122.57380676]
[133.15078735 -137.37307739]
[135.59651184 -152.17234802]
[121.19112396 -156.42256165]
[107.41723633 -162.41085815]
[94.48366547 -170.04646301]
[82.58647919 -179.21360779]
[71.90603638 -189.77333069]
[62.60424805 -201.56553650]
[54.82212448 -214.41148376]
[48.67764664 -228.11640930]
[44.26395798 -242.47256470]
[41.64797592 -257.26229858]
[40.86935043 -272.26141357]
[41.93988800 -287.24252319]
[44.84336090 -301.97851562]
[49.53575134 -316.24597168]
[55.94592285 -329.82867432]
[63.97670364 -342.52062988]
[73.50634766 -354.12948608]
[84.39038086 -364.47924805]
[96.46381378 -373.41299438]
[109.54361725 -380.79531860]
[123.43148804 -386.51428223]
[137.91691589 -390.48318481]
[152.78027344 -392.64187622]
[167.79626465 -392.95761108]
[182.73724365 -391.42562866]
[197.37669373 -388.06915283]
[211.49270630 -382.93905640]
[224.87126160 -376.11309814]
[237.30957031 -367.69476318]
[248.61904907 -357.81170654]
[258.62826538 -346.61370850]
[267.18548584 -334.27053833]
[274.16094971 -320.96932983]
[279.44894409 -306.91171265]
[282.96932983 -292.31079102]
[284.66867065 -277.38790894]
[284.52124023 -262.36932373]
[282.52926636 -247.48271179]
[278.72296143 -232.95372009]
[273.16003418 -219.00260925]
[265.92480469 -205.84089661]
[257.12692261 -193.66807556]
[246.89982605 -182.66871643]
[235.39851379 -173.00956726]
[222.79734802 -164.83703613]
[209.28736877 -158.27502441]
[195.07336426 -153.42300415]
[180.37084961 -150.35455322]
[165.40267944 -149.11616516]
[150.39578247 -149.72662354]
[147.95005798 -134.92735291]
[145.50433350 -120.12808228]
[152.29150391 -110.11504364]
[150.37504578 -97.76551056]
[140.24337769 -89.78352356]
[137.57759094 -75.02230835]
[134.91178894 -60.26108932]
[132.24598694 -45.49987030]
[145.70603943 -37.13605881]
[154.94834900 -24.21597672]
[158.53367615 -8.70081043]
[155.88417053 7.04034424]
[147.37638855 20.59221458]
[134.28800964 29.86394691]
[118.60610962 33.41167450]
[116.16038513 48.21094513]
[113.71466064 63.01021576]
[119.27325439 76.82872772]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[107.37392426 145.89282227]
[120.10266113 137.95686340]
[134.76353455 134.78532410]
[149.63421631 136.75079346]
[162.96769714 143.62234497]
[173.19757080 154.59274292]
[179.12205505 168.37318420]
[180.04515076 183.34474182]
[175.85839844 197.74861145]
[167.05364990 209.89259338]
[154.66529846 218.35006714]
[140.14871216 222.12742615]
[125.20926666 220.78092957]
[111.60204315 214.46875000]
[100.92561340 203.93243408]
[94.43422699 190.40980530]
[92.89058685 175.48788452]
[87.02162170 189.29206848]
[81.25559235 203.13954163]
[75.59280396 217.02957153]
[69.93001556 230.91960144]
[64.26723480 244.80963135]
[66.22216034 260.50958252]
[54.25261307 269.37408447]
[48.58982849 283.26412964]
[42.92704010 297.15414429]
[56.31694794 303.93374634]
[69.10969543 311.78222656]
[81.22014618 320.64730835]
[92.56770325 330.47003174]
[103.07685852 341.18499756]
[112.67767334 352.72088623]
[121.30624390 365.00097656]
[128.90516663 377.94351196]
[135.42384338 391.46237183]
[140.81892395 405.46759033]
[145.05447388 419.86596680]
[148.10234070 434.56164551]
[149.94219971 449.45687866]
[150.56184387 464.45251465]
[149.95713806 479.44873047]
[148.13209534 494.34579468]
[145.09886169 509.04449463]
[140.87763977 523.44708252]
[135.49650574 537.45764160]
[128.99128723 550.98297119]
[121.40525818 563.93310547]
[112.78890991 576.22174072]
[103.19958496 587.76721191]
[92.70110321 598.49261475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 186]
[52 185]
[53 184]
[55 182]
[56 181]
[57 180]
[58 179]
[60 178]
[61 177]
[62 160]
[63 159]
[64 158]
[65 157]
[67 155]
[69 153]
[70 152]
[71 151]
[79 144]
[80 143]
[81 142]
[82 141]
[84 138]
[85 137]
[86 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
