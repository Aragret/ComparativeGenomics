%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[15.39039993 502.86010742]
[5.09606409 513.77691650]
[-5.86343050 524.02575684]
[-17.44483185 533.56622314]
[-29.60243225 542.36065674]
[-42.28825378 550.37438965]
[-55.45222473 557.57568359]
[-69.04240417 563.93627930]
[-83.00514221 569.43090820]
[-97.28534698 574.03802490]
[-111.82665253 577.73937988]
[-126.57167053 580.52032471]
[-141.46221924 582.36993408]
[-156.43951416 583.28094482]
[-171.44447327 583.24969482]
[-186.41784668 582.27636719]
[-201.30056763 580.36474609]
[-216.03387451 577.52239990]
[-230.55964661 573.76055908]
[-244.82054138 569.09405518]
[-258.76028442 563.54132080]
[-272.32385254 557.12420654]
[-285.45773315 549.86816406]
[-298.11007690 541.80169678]
[-310.23095703 532.95672607]
[-321.77255249 523.36810303]
[-332.68927002 513.07373047]
[-342.93807983 502.11416626]
[-352.47848511 490.53271484]
[-361.27285767 478.37506104]
[-369.28649902 465.68920898]
[-376.48776245 452.52520752]
[-382.84823608 438.93499756]
[-388.34283447 424.97222900]
[-392.94985962 410.69198608]
[-396.65112305 396.15066528]
[-399.43200684 381.40563965]
[-401.28155518 366.51507568]
[-402.19247437 351.53778076]
[-402.16116333 336.53280640]
[-401.18774414 321.55944824]
[-399.27606201 306.67672729]
[-396.43362427 291.94345093]
[-392.67172241 277.41769409]
[-388.00512695 263.15682983]
[-382.45230103 249.21710205]
[-376.03515625 235.65356445]
[-368.77899170 222.51971436]
[-360.71249390 209.86741638]
[-351.86743164 197.74658203]
[-342.27877808 186.20506287]
[-331.98431396 175.28837585]
[-321.02471924 165.03964233]
[-309.44320679 155.49929810]
[-297.28552246 146.70497131]
[-284.59960938 138.69140625]
[-271.43557739 131.49020386]
[-257.84533691 125.12979126]
[-243.88253784 119.63527679]
[-229.60227966 115.02833557]
[-215.06094360 111.32714844]
[-200.31588745 108.54632568]
[-185.42532349 106.69684601]
[-170.44801331 105.78601074]
[-155.44306946 105.81740570]
[-140.46969604 106.79090881]
[-125.58699799 108.70267487]
[-110.85371399 111.54516602]
[-96.32798767 115.30716705]
[-82.06713867 119.97382355]
[-68.12744904 125.52671814]
[-54.56394196 131.94393921]
[-41.43014145 139.20016479]
[-28.77788162 147.26673889]
[-16.65709305 156.11186218]
[-5.11561441 165.70059204]
[5.80100679 175.99508667]
[16.75691605 165.74969482]
[27.71282578 155.50430298]
[38.66873550 145.25891113]
[49.62464523 135.01351929]
[49.04691315 124.81160736]
[54.29009247 115.78623199]
[63.83168411 111.03878021]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[109.44181824 71.37801361]
[124.10662079 68.77169800]
[135.36271667 58.85704803]
[146.61882019 48.94239807]
[157.87490845 39.02774429]
[169.13101196 29.11309433]
[180.38710022 19.19844246]
[191.64320374 9.28379154]
[202.89929199 -0.63085926]
[214.15538025 -10.54551029]
[205.23918152 -22.61956024]
[197.39393616 -35.41540146]
[190.67771912 -48.83829117]
[185.14028931 -62.78885651]
[180.82261658 -77.16380310]
[177.75668335 -91.85671234]
[175.96517944 -106.75878906]
[175.46138000 -121.75971222]
[176.24899292 -136.74841309]
[178.32220459 -151.61390686]
[181.66567993 -166.24615479]
[186.25462341 -180.53681946]
[192.05509949 -194.38008118]
[199.02413940 -207.67346191]
[207.11015320 -220.31852722]
[216.25328064 -232.22167969]
[226.38581848 -243.29475403]
[237.43273926 -253.45579529]
[249.31228638 -262.62957764]
[261.93646240 -270.74813843]
[275.21182251 -277.75143433]
[289.04010010 -283.58755493]
[303.31887817 -288.21334839]
[317.94247437 -291.59451294]
[332.80258179 -293.70602417]
[347.78921509 -294.53228760]
[362.79138184 -294.06713867]
[377.69802856 -292.31405640]
[392.39877319 -289.28601074]
[406.78482056 -285.00540161]
[420.74960327 -279.50393677]
[434.18975830 -272.82235718]
[447.00576782 -265.01010132]
[459.10275269 -256.12506104]
[470.39117432 -246.23297119]
[480.78741455 -235.40708923]
[490.21450806 -223.72755432]
[498.60266113 -211.28086853]
[505.88977051 -198.15914917]
[512.02191162 -184.45957947]
[516.95367432 -170.28355408]
[520.64849854 -155.73606873]
[523.07904053 -140.92478943]
[524.22735596 -125.95940399]
[524.08489990 -110.95069885]
[522.65277100 -96.00980377]
[519.94152832 -81.24732971]
[515.97125244 -66.77258301]
[510.77136230 -52.69272614]
[504.38031006 -39.11199951]
[496.84545898 -26.13096046]
[488.22256470 -13.84571266]
[478.57550049 -2.34721398]
[467.97567749 8.27940273]
[456.50155640 17.95546150]
[444.23809814 26.60932159]
[431.27612305 34.17691422]
[417.71157837 40.60220337]
[403.64486694 45.83762741]
[389.18020630 49.84441757]
[374.42462158 52.59291458]
[359.48736572 54.06276321]
[344.47909546 54.24308014]
[329.51083374 53.13253784]
[314.69348145 50.73935318]
[300.13671875 47.08124542]
[285.94830322 42.18529892]
[272.23327637 36.08776093]
[259.09323120 28.83377647]
[246.62541199 20.47705460]
[234.92211914 11.07946491]
[224.07003784 0.71058530]
[212.81394958 10.62523651]
[201.55784607 20.53988838]
[190.30175781 30.45453835]
[179.04565430 40.36919022]
[167.78956604 50.28384018]
[156.53346252 60.19849396]
[145.27737427 70.11314392]
[134.02127075 80.02779388]
[129.58482361 94.24634552]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[78.97412872 142.98269653]
[59.87003708 145.96943665]
[48.91412735 156.21482849]
[37.95821762 166.46022034]
[27.00230789 176.70561218]
[16.04639816 186.95100403]
[25.58693123 198.53234863]
[34.38143539 210.68991089]
[42.39520645 223.37568665]
[49.59661484 236.53962708]
[55.95723724 250.12976074]
[61.45197678 264.09246826]
[66.05914307 278.37265015]
[69.76055145 292.91394043]
[72.54160309 307.65893555]
[74.39131165 322.54949951]
[75.30239105 337.52679443]
[75.27123260 352.53173828]
[74.29796600 367.50512695]
[72.38642120 382.38784790]
[69.54415894 397.12115479]
[65.78239441 411.64697266]
[61.11595917 425.90786743]
[55.56328201 439.84765625]
[49.14627075 453.41125488]
[41.89025497 466.54516602]
[33.82386780 479.19757080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 189]
[78 188]
[79 187]
[80 186]
[81 185]
[85 183]
[86 182]
[88 180]
[90 178]
[91 177]
[92 176]
[93 175]
[94 174]
[95 173]
[96 172]
[97 171]
[98 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
