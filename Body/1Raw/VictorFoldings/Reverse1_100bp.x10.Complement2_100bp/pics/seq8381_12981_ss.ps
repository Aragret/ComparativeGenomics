%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[62.48039627 480.12374878]
[47.13682175 479.43792725]
[34.20044708 471.15869141]
[27.15108871 457.51309204]
[27.88499069 442.17175293]
[36.20473480 429.26138306]
[49.87235641 422.25485229]
[50.54214096 407.26980591]
[51.21192551 392.28475952]
[51.88171005 377.29971313]
[49.04001617 370.47723389]
[52.67466736 362.09704590]
[53.56748199 347.12365723]
[54.46029663 332.15023804]
[55.35311508 317.17684937]
[42.84501266 309.08901978]
[36.01921463 295.73742676]
[36.79804611 280.66229248]
[45.07234955 267.91738892]
[58.70394897 260.98004150]
[59.59676361 246.00663757]
[49.54894638 235.07151794]
[50.24108887 219.87362671]
[61.77898026 209.40869141]
[62.67179489 194.43528748]
[54.89010620 207.25891113]
[43.56769562 217.09776306]
[29.78374100 223.01406860]
[14.85204601 224.44392395]
[0.19580232 221.25103760]
[-12.78805065 213.73974609]
[-22.86197281 202.62596130]
[-29.06578445 188.96899414]
[-30.80817795 174.07054138]
[-27.92307663 159.35061646]
[-20.68547249 146.21223450]
[-9.78520679 135.90765381]
[3.73877597 129.41906738]
[18.59745598 127.36489105]
[33.37459946 129.94094849]
[46.66174316 136.90167236]
[57.19244003 147.58364868]
[63.96297073 160.96870422]
[66.32801819 175.78222656]
[71.15401459 161.57975769]
[75.98001099 147.37730408]
[80.80601501 133.17485046]
[85.63201141 118.97239685]
[90.45800781 104.76994324]
[93.88906860 90.16761780]
[95.89308167 75.30209351]
[97.89709473 60.43656158]
[99.90110779 45.57103348]
[101.90512085 30.70550537]
[91.51699066 41.52616882]
[77.13810730 45.79790878]
[62.52708435 42.40410614]
[51.50320053 32.23189163]
[46.94807434 17.94025612]
[50.05240631 3.26500106]
[60.00473022 -7.95779848]
[74.20353699 -12.79452896]
[88.93728638 -9.98088074]
[100.35461426 -0.25233513]
[105.47097778 13.84720612]
[109.65798950 -0.55657589]
[113.84500122 -14.96035767]
[118.03201294 -29.36413956]
[122.21902466 -43.76792145]
[114.86514282 -57.49956894]
[119.31655121 -72.04740906]
[132.45289612 -78.97358704]
[136.63990784 -93.37737274]
[140.82691956 -107.78115082]
[145.01393127 -122.18493652]
[131.91075134 -114.88378906]
[117.15684509 -117.58973694]
[107.49749756 -129.06565857]
[107.34882355 -144.06492615]
[116.77880859 -155.73007202]
[131.47618103 -158.72793579]
[144.72149658 -151.68794250]
[150.45928955 -137.82684326]
[156.12207031 -151.71687317]
[161.78485107 -165.60690308]
[166.50498962 -179.84489441]
[170.26129150 -194.36694336]
[174.01759338 -208.88900757]
[177.77389526 -223.41107178]
[181.53019714 -237.93312073]
[167.58779907 -243.52221680]
[154.47460938 -250.84838867]
[142.40597534 -259.79132080]
[131.58004761 -270.20419312]
[122.17462158 -281.91598511]
[114.34412384 -294.73440552]
[108.21715546 -308.44894409]
[103.89431000 -322.83441162]
[101.44657898 -337.65454102]
[100.91416168 -352.66604614]
[102.30580139 -367.62237549]
[105.59863281 -382.27792358]
[110.73860168 -396.39208984]
[117.64129639 -409.73303223]
[126.19336700 -422.08172607]
[136.25437927 -433.23541260]
[147.65913391 -443.01089478]
[160.22033691 -451.24765015]
[173.73173523 -457.81045532]
[187.97145081 -462.59152222]
[202.70567322 -465.51235962]
[217.69242859 -466.52499390]
[232.68563843 -465.61279297]
[247.43908691 -462.79074097]
[261.71051025 -458.10516357]
[275.26556396 -451.63302612]
[287.88168335 -443.48059082]
[299.35165405 -433.78173828]
[309.48718262 -422.69573975]
[318.12179565 -410.40460205]
[325.11370850 -397.11016846]
[330.34811401 -383.03079224]
[333.73904419 -368.39761353]
[335.23086548 -353.45095825]
[334.79901123 -338.43621826]
[332.45062256 -323.60000610]
[328.22427368 -309.18591309]
[322.18930054 -295.43063354]
[314.44485474 -282.56005859]
[305.11810303 -270.78549194]
[294.36218262 -260.30035400]
[282.35372925 -251.27674866]
[269.28991699 -243.86289978]
[255.38528442 -238.18052673]
[240.86814880 -234.32293701]
[225.97688293 -232.35348511]
[210.95603943 -232.30451965]
[196.05224609 -234.17681885]
[192.29594421 -219.65476990]
[188.53965759 -205.13270569]
[184.78335571 -190.61064148]
[181.02705383 -176.08859253]
[192.99052429 -185.13708496]
[207.93832397 -186.38734436]
[221.23872375 -179.45195007]
[228.77043152 -166.47993469]
[228.19967651 -151.49079895]
[219.70330811 -139.12908936]
[205.91403198 -133.22521973]
[191.10458374 -135.60858154]
[179.86384583 -145.54063416]
[175.67488098 -159.94410706]
[170.01210022 -146.05409241]
[164.34930420 -132.16406250]
[159.41770935 -117.99792480]
[155.23069763 -103.59413910]
[151.04370117 -89.19036102]
[146.85668945 -74.78657532]
[154.23300171 -61.89760590]
[150.19195557 -47.23047638]
[136.62280273 -39.58090973]
[132.43579102 -25.17712784]
[128.24877930 -10.77334690]
[124.06177521 3.63043547]
[119.87476349 18.03421783]
[116.77065277 32.70951843]
[114.76663971 47.57504654]
[112.76262665 62.44057465]
[110.75861359 77.30610657]
[108.75460052 92.17163086]
[118.24402618 80.55480194]
[131.60116577 73.72934723]
[146.57510376 72.84546661]
[160.64245605 78.05212402]
[171.43264771 88.47190094]
[177.12733459 102.34888458]
[176.76686096 117.34455109]
[170.41197205 130.93186951]
[159.13357544 140.82115173]
[144.83227539 145.34585571]
[129.91810608 143.74351501]
[116.90435791 136.28413391]
[107.98407745 124.22475433]
[104.66046143 109.59593964]
[99.83446503 123.79839325]
[95.00846863 138.00085449]
[90.18247223 152.20330811]
[85.35647583 166.40576172]
[80.53047180 180.60821533]
[77.64520264 195.32810974]
[76.75238800 210.30151367]
[86.96496582 222.06335449]
[85.84622192 237.23579407]
[74.57016754 246.89945984]
[73.67735291 261.87286377]
[86.38799286 270.38092041]
[93.08917236 284.01876831]
[92.07109833 299.07962036]
[83.70707703 311.52548218]
[70.32652283 318.06964111]
[69.43370056 333.04306030]
[68.54088593 348.01647949]
[67.64807129 362.98986816]
[66.86675262 377.96951294]
[66.19696808 392.95455933]
[65.52718353 407.93957520]
[64.85739136 422.92462158]
[77.84542084 431.12258911]
[84.98017883 444.72372437]
[84.34246826 460.06936646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[12 203]
[13 202]
[14 201]
[15 200]
[20 195]
[21 194]
[24 191]
[25 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[72 158]
[73 157]
[74 156]
[75 155]
[83 154]
[84 153]
[85 152]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
