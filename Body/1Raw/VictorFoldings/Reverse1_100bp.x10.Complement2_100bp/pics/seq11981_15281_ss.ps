%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[120.93335724 641.51568604]
[105.88795471 642.37145996]
[91.05084229 639.73388672]
[77.22217560 633.74517822]
[65.14771271 624.72827148]
[55.47862625 613.16949463]
[48.73634720 599.69213867]
[45.28448105 585.02313232]
[45.30917740 569.95336914]
[48.80911636 555.29571533]
[55.59553909 541.84057617]
[65.30246735 530.31353760]
[77.40641785 521.33630371]
[91.25463867 515.39294434]
[106.10031891 512.80401611]
[106.99313354 497.83059692]
[107.88594818 482.85720825]
[108.77877045 467.88378906]
[109.67158508 452.91040039]
[110.56439972 437.93698120]
[111.34571838 422.95733643]
[112.01550293 407.97232056]
[112.68528748 392.98727417]
[113.35507965 378.00222778]
[113.80168152 363.00888062]
[114.02500916 348.01055908]
[113.69003296 333.01428223]
[112.79721832 318.04089355]
[111.90440369 303.06747437]
[111.01158905 288.09405518]
[110.11876678 273.12066650]
[98.31898499 257.80230713]
[107.61724091 239.91642761]
[106.27900696 224.97624207]
[104.94077301 210.03605652]
[103.60253906 195.09587097]
[102.04201508 180.17726135]
[100.25955200 165.28353882]
[98.47708893 150.38983154]
[96.69461823 135.49610901]
[83.43609619 131.56796265]
[72.66976929 122.89012909]
[66.01553345 110.76825714]
[64.47457886 97.02619934]
[68.27874756 83.73158264]
[76.85568237 72.88469696]
[88.91489410 66.11756134]
[87.35437012 51.19895554]
[85.79384613 36.28035355]
[84.23332214 21.36174774]
[82.67279816 6.44314241]
[73.54178619 -6.47719622]
[79.91302490 -19.94035530]
[78.35250092 -34.85895920]
[68.97525787 -23.15138245]
[54.29156113 -20.08721733]
[41.01460266 -27.06735611]
[35.21442413 -40.90057373]
[39.54279327 -55.26251221]
[52.02083206 -63.58708191]
[66.94375610 -62.06840515]
[77.48978424 -51.39912033]
[77.48978424 -66.39911652]
[77.48978424 -81.39911652]
[76.48551941 -96.36546326]
[74.48150635 -111.23099518]
[72.47749329 -126.09651947]
[62.71234894 -134.52294922]
[61.34923935 -146.94573975]
[68.57674408 -156.64572144]
[66.79428101 -171.53944397]
[65.01181793 -186.43316650]
[63.22934723 -201.32687378]
[46.91724396 -205.63583374]
[33.54058075 -215.85723877]
[25.13429451 -230.40063477]
[22.96352386 -247.02078247]
[27.33327293 -263.16436768]
[37.54592133 -276.36224365]
[52.01243210 -284.60699463]
[49.78731537 -299.44104004]
[47.56219482 -314.27508545]
[34.89329529 -319.70553589]
[26.62759399 -330.60034180]
[24.83888626 -344.04913330]
[29.88837242 -356.52496338]
[40.35797501 -364.80926514]
[38.35396194 -379.67480469]
[36.34994507 -394.54031372]
[34.34593201 -409.40585327]
[32.34191895 -424.27139282]
[17.42918396 -426.74154663]
[3.90782237 -433.49908447]
[-7.01985788 -443.94308472]
[-14.38217449 -457.14489746]
[-17.52447319 -471.93060303]
[-16.16734695 -486.98550415]
[-10.43146610 -500.97088623]
[-0.82686406 -512.64318848]
[11.79242516 -520.96453857]
[26.30430412 -525.19500732]
[41.41838455 -524.95843506]
[55.79073334 -520.27581787]
[68.14337158 -511.56350708]
[77.37790680 -499.59628296]
[82.67321777 -485.43820190]
[83.55844879 -470.34820557]
[79.95487976 -455.66809082]
[72.18293762 -442.70321655]
[60.93370438 -432.60638428]
[47.20744705 -426.27539062]
[49.21146011 -411.40988159]
[51.21547318 -396.54434204]
[53.21949005 -381.67880249]
[55.22350311 -366.81329346]
[69.91622925 -359.49200439]
[77.42512512 -344.70761108]
[74.61431122 -328.19699097]
[62.39624023 -316.50018311]
[64.62136078 -301.66616821]
[66.84647369 -286.83212280]
[79.89139557 -284.46069336]
[91.59092712 -278.17428589]
[100.79988098 -268.57226562]
[106.61193848 -256.57934570]
[108.44887543 -243.35649109]
[106.11801147 -230.18858337]
[99.83236694 -218.35949707]
[90.19122314 -209.02699280]
[78.12306976 -203.10934448]
[79.90553284 -188.21562195]
[81.68799591 -173.32191467]
[83.47046661 -158.42819214]
[94.73044586 -144.96788025]
[87.34302521 -128.10054016]
[89.34703827 -113.23500824]
[91.35105133 -98.36947632]
[99.01326752 -111.26483917]
[112.38296509 -118.06565857]
[127.31739807 -116.66463470]
[139.18896484 -107.49588776]
[144.31912231 -93.40044403]
[141.11825562 -78.74594116]
[130.57817078 -68.07323456]
[115.96483612 -64.68937683]
[101.80635834 -69.64289093]
[92.48978424 -81.39911652]
[92.48978424 -66.39911652]
[92.48978424 -51.39912033]
[93.27110291 -36.41948318]
[94.83162689 -21.50087738]
[103.85102081 -9.64761734]
[97.59140778 4.88261938]
[99.15193176 19.80122375]
[100.71245575 34.71982956]
[102.27297211 49.63843536]
[103.83349609 64.55703735]
[118.88231659 69.76165771]
[130.16395569 80.99907684]
[135.42762756 96.02734375]
[133.62319946 111.84818268]
[125.11066437 125.30521393]
[111.58834076 133.71363831]
[113.37080383 148.60736084]
[115.15326691 163.50108337]
[116.93573761 178.39479065]
[120.58619690 183.90711975]
[120.86325836 189.58340454]
[118.54272461 193.75762939]
[119.88095856 208.69781494]
[121.21919250 223.63800049]
[122.55742645 238.57818604]
[131.29324341 245.05847168]
[134.94531250 255.07060242]
[132.53465271 265.22622681]
[125.09217834 272.22784424]
[125.98499298 287.20126343]
[126.87780762 302.17465210]
[127.77062225 317.14807129]
[128.66343689 332.12145996]
[140.42050171 322.80636597]
[155.06747437 326.04153442]
[161.80712891 339.44216919]
[155.67126465 353.12979126]
[141.18299866 357.01440430]
[129.02334595 348.23388672]
[128.80001831 363.23220825]
[131.68130493 369.18283081]
[131.19752502 374.84524536]
[128.34011841 378.67202759]
[127.67032623 393.65704346]
[127.00054169 408.64208984]
[126.33075714 423.62713623]
[129.07385254 432.33996582]
[125.53780365 438.82980347]
[124.64498901 453.80319214]
[123.75217438 468.77661133]
[122.85935974 483.75003052]
[121.96653748 498.72341919]
[121.07372284 513.69683838]
[135.50656128 518.03155518]
[148.55041504 525.57836914]
[159.50183105 535.93035889]
[167.77020264 548.52917480]
[172.90965271 562.69543457]
[174.64300537 577.66516113]
[172.87678528 592.63104248]
[167.70623779 606.78594971]
[159.41020203 619.36657715]
[148.43608093 629.69451904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 195]
[21 193]
[22 192]
[23 191]
[24 190]
[25 187]
[26 186]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[33 172]
[34 171]
[35 170]
[36 169]
[37 166]
[38 165]
[39 164]
[40 163]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[53 151]
[54 150]
[62 149]
[63 148]
[64 147]
[65 137]
[66 136]
[67 135]
[70 133]
[71 132]
[72 131]
[73 130]
[80 121]
[81 120]
[82 119]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
