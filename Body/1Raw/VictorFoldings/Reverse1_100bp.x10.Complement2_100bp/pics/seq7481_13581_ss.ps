%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[30.53771782 374.14566040]
[33.58645248 388.85079956]
[34.87452316 403.81332397]
[34.38385010 418.82318115]
[32.12131882 433.66964722]
[28.11868858 448.14428711]
[22.43215370 462.04391479]
[15.14154625 475.17340088]
[6.34921074 487.34841919]
[-3.82141948 498.39807129]
[-15.22756577 508.16720581]
[-27.70910263 516.51873779]
[-41.09081268 523.33532715]
[-55.18482971 528.52136230]
[-69.79330444 532.00402832]
[-84.71115112 533.73437500]
[-99.72895050 533.68823242]
[-114.63586426 531.86608887]
[-129.22264099 528.29364014]
[-143.28450012 523.02105713]
[-156.62402344 516.12225342]
[-169.05395508 507.69412231]
[-180.39979553 497.85498047]
[-190.50225830 486.74301147]
[-199.21954346 474.51412964]
[-206.42926025 461.34005737]
[-212.03018188 447.40570068]
[-215.94371033 432.90670776]
[-218.11486816 418.04660034]
[-218.51321411 403.03402710]
[-217.13313293 388.07971191]
[-213.99400330 373.39358521]
[-209.13989258 359.18182373]
[-202.63894653 345.64395142]
[-194.58242798 332.97000122]
[-185.08345032 321.33792114]
[-174.27534485 310.91098022]
[-162.30984497 301.83554077]
[-149.35493469 294.23907471]
[-135.59246826 288.22814941]
[-121.21567535 283.88717651]
[-106.42635345 281.27713013]
[-91.43213654 280.43460083]
[-76.44351959 281.37145996]
[-61.67091370 284.07452393]
[-47.32171249 288.50585938]
[-33.59734726 294.60324097]
[-20.69049072 302.28109741]
[-11.55168819 290.38647461]
[-2.41288638 278.49185181]
[6.72591591 266.59719849]
[15.68661213 254.56782532]
[24.46721458 242.40637207]
[33.24781799 230.24491882]
[42.02842331 218.08346558]
[50.62698746 205.79261780]
[59.04160309 193.37512207]
[67.45622253 180.95762634]
[75.87084198 168.54013062]
[81.63687134 154.69265747]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.31841278 57.06258774]
[102.32242584 42.19705963]
[104.32644653 27.33153343]
[106.33045959 12.46600437]
[108.33447266 -2.39952374]
[110.33848572 -17.26505280]
[112.34249878 -32.13058090]
[111.56117249 -47.11021805]
[108.02149963 -61.68659210]
[104.48183441 -76.26296997]
[100.94216156 -90.83934021]
[90.16683197 -102.42394257]
[94.68225861 -116.61760712]
[91.14258575 -131.19398499]
[87.60291290 -145.77035522]
[84.06324005 -160.34674072]
[80.52357483 -174.92311096]
[76.98390198 -189.49948120]
[61.92065048 -189.28443909]
[47.18732071 -192.42716980]
[33.52293396 -198.77006531]
[21.61288834 -207.99494934]
[12.05458355 -219.63911438]
[5.32746363 -233.11849976]
[1.76895630 -247.75695801]
[1.55755544 -262.82025146]
[4.70386457 -277.55282593]
[11.05006599 -291.21566772]
[20.27783775 -303.12347412]
[31.92431831 -312.67898560]
[45.40532303 -319.40283203]
[60.04465485 -322.95779419]
[75.10800934 -323.16552734]
[89.83980560 -320.01565552]
[103.50112152 -313.66613770]
[115.40669250 -304.43548584]
[124.95935822 -292.78668213]
[131.67994690 -279.30404663]
[135.23135376 -264.66387939]
[135.43545532 -249.60046387]
[132.28201294 -234.86943054]
[125.92918396 -221.20965576]
[116.69564819 -209.30632019]
[105.04454041 -199.75648499]
[91.56027222 -193.03915405]
[95.09994507 -178.46278381]
[98.63961792 -163.88641357]
[102.17929077 -149.31002808]
[105.71896362 -134.73365784]
[109.25863647 -120.15727997]
[119.78077698 -109.61528015]
[115.51853180 -94.37901306]
[119.05820465 -79.80264282]
[122.59787750 -65.22626495]
[126.13755035 -50.64989090]
[129.41406250 -65.28766632]
[135.93516541 -78.79600525]
[145.35879517 -90.46627808]
[157.19058228 -99.68629456]
[170.80986023 -105.97238922]
[185.50221252 -108.99481201]
[200.49688721 -108.59499359]
[215.00729370 -104.79393005]
[228.27224731 -97.79100037]
[239.59588623 -87.95357513]
[248.38421631 -75.79770660]
[254.17620850 -61.96105576]
[256.66802979 -47.16947556]
[255.72895813 -32.19889832]
[251.40824890 -17.83465385]
[243.93257141 -4.83026028]
[233.69407654 6.13209820]
[221.22987366 14.47735786]
[207.19377136 19.76774406]
[192.32211304 21.72573090]
[177.39501953 20.24860954]
[163.19554138 15.41386604]
[150.46855164 7.47512007]
[139.88168335 -3.15117669]
[131.99029541 -15.90758991]
[127.20802307 -30.12656593]
[125.20401001 -15.26103783]
[123.19999695 -0.39551008]
[121.19598389 14.47001839]
[119.19197083 29.33554649]
[117.18795776 44.20107269]
[115.18394470 59.06660461]
[116.77432251 61.37503052]
[117.54612732 64.45251465]
[117.20185852 67.99044037]
[115.56111908 71.57826233]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.35676575 157.57792664]
[105.44886780 145.64755249]
[116.86428833 135.91677856]
[130.08370972 128.82826233]
[144.50572205 124.70450592]
[159.47424316 123.73310089]
[174.30827332 125.95824432]
[188.33299255 131.27870178]
[200.91035461 139.45243835]
[211.46818542 150.10760498]
[219.52615356 162.75944519]
[224.71769714 176.83238220]
[226.80662537 191.68621826]
[225.69789124 206.64518738]
[221.44197083 221.02876282]
[214.23243713 234.18257141]
[204.39730835 245.50822449]
[192.38401794 254.49046326]
[178.73905945 260.72067261]
[164.08322144 263.91537476]
[149.08323669 263.92929077]
[134.42147827 260.76177979]
[120.76499939 254.55690002]
[108.73505402 245.59696960]
[98.87892914 234.28958130]
[91.64501190 221.14916992]
[87.36240387 206.77352905]
[86.22592926 191.81663513]
[88.28833771 176.95475769]
[79.87371826 189.37225342]
[71.45909882 201.78974915]
[63.04447937 214.20724487]
[62.18907928 220.76313782]
[58.67826080 225.23205566]
[54.18987656 226.86405945]
[45.40927505 239.02551270]
[36.62866974 251.18698120]
[27.84806824 263.34841919]
[26.79785156 269.87594604]
[23.15553474 274.23834229]
[18.62054825 275.73599243]
[9.48174667 287.63064575]
[0.34294426 299.52526855]
[-8.79585838 311.41989136]
[1.94790721 321.91314697]
[11.37516403 333.60342407]
[19.35356903 346.32669067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 207]
[49 206]
[50 205]
[51 204]
[52 201]
[53 200]
[54 199]
[55 198]
[56 195]
[57 194]
[58 193]
[59 192]
[60 164]
[61 163]
[62 162]
[63 161]
[65 159]
[66 158]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 121]
[75 120]
[76 119]
[77 118]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
