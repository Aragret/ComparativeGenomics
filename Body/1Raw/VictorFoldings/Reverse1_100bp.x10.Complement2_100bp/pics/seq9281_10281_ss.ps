%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[41.40379715 822.60870361]
[26.87578201 826.39739990]
[12.03131866 828.64678955]
[-2.96694875 829.33209229]
[-17.95469093 828.44592285]
[-32.76769257 825.99792480]
[-47.24365616 822.01495361]
[-61.22397232 816.54058838]
[-74.55546570 809.63488770]
[-87.09207153 801.37347412]
[-98.69643402 791.84680176]
[-109.24140930 781.15936279]
[-118.61145020 769.42822266]
[-126.70390320 756.78192139]
[-133.43009949 743.35894775]
[-138.71633911 729.30639648]
[-142.50471497 714.77832031]
[-144.75372314 699.93377686]
[-145.43869019 684.93548584]
[-144.55215454 669.94775391]
[-142.10379028 655.13482666]
[-138.12045288 640.65899658]
[-132.64576721 626.67877197]
[-125.73973083 613.34747314]
[-117.47799683 600.81103516]
[-107.95109558 589.20690918]
[-97.26339722 578.66223145]
[-85.53202057 569.29248047]
[-72.88548279 561.20031738]
[-59.46235275 554.47442627]
[-45.40970612 549.18853760]
[-30.88150406 545.40051270]
[-16.03693199 543.15185547]
[-1.03863132 542.46728516]
[13.94906712 543.35418701]
[16.39479446 528.55487061]
[18.84052086 513.75561523]
[21.28624916 498.95635986]
[15.72765160 485.13784790]
[25.61150932 472.78390503]
[28.05723572 457.98461914]
[30.50296402 443.18536377]
[32.94869232 428.38607788]
[27.39009285 414.56756592]
[37.27395248 402.21362305]
[39.71967697 387.41436768]
[42.16540527 372.61508179]
[44.61113358 357.81582642]
[31.55861855 350.54141235]
[21.76411247 339.21899414]
[16.42434883 325.20254517]
[16.20183754 310.17681885]
[21.14273453 295.95507812]
[30.66893578 284.26013184]
[43.64565659 276.51568604]
[58.51657867 273.67297363]
[60.96230698 258.87371826]
[54.17513275 248.86067200]
[56.09159088 236.51113892]
[66.22325897 228.52914429]
[68.88905334 213.76792908]
[71.55484772 199.00671387]
[69.65012360 191.86572266]
[74.37178802 184.04627991]
[77.25705719 169.32638550]
[80.14232635 154.60649109]
[78.26865387 150.21350098]
[79.13474274 144.59683228]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[94.22278595 56.63987732]
[104.58681488 45.94238663]
[107.90907288 31.31492805]
[110.68468475 16.57396507]
[112.90979767 1.73992097]
[115.13491821 -13.09412289]
[117.36003113 -27.92816734]
[119.58515167 -42.76221085]
[117.76337433 -51.71313095]
[121.95541382 -57.79988861]
[124.40113831 -72.59915924]
[126.84686279 -87.39842987]
[129.29258728 -102.19770050]
[130.85311890 -117.11630249]
[131.52290344 -132.10134888]
[124.40953064 -146.23324585]
[132.70741272 -158.60232544]
[133.37719727 -173.58737183]
[134.04698181 -188.57240295]
[134.49359131 -203.56575012]
[134.71691895 -218.56410217]
[134.94024658 -233.56243896]
[135.16357422 -248.56077576]
[120.90967560 -253.67007446]
[109.08863831 -263.13275146]
[100.98272705 -275.92230225]
[97.47120667 -290.65145874]
[98.93498230 -305.72247314]
[105.21527100 -319.50061035]
[115.63083649 -330.49127197]
[129.05187988 -337.50228882]
[144.02256775 -339.77316284]
[158.91902161 -337.05755615]
[172.12536621 -329.65005493]
[182.20909119 -318.35415649]
[188.07635498 -304.39514160]
[189.09075928 -289.28723145]
[185.14225769 -274.66915894]
[176.65914917 -262.12658691]
[164.56161499 -253.02009583]
[150.16191101 -248.33744812]
[149.93858337 -233.33911133]
[149.71525574 -218.34077454]
[149.49192810 -203.34242249]
[152.11650085 -199.35235596]
[152.26239014 -193.67118835]
[149.03202820 -187.90261841]
[148.36224365 -172.91758728]
[147.69245911 -157.93254089]
[154.85372925 -144.87248230]
[146.50793457 -131.43156433]
[145.83815002 -116.44651794]
[156.20750427 -127.28517914]
[170.94630432 -130.07228088]
[184.55732727 -123.76832581]
[191.96401978 -110.72451019]
[190.40383911 -95.80587006]
[180.45872498 -84.57668304]
[165.83795166 -81.22515869]
[151.99468994 -87.00133514]
[144.09185791 -99.75197601]
[141.64613342 -84.95270538]
[139.20040894 -70.15343475]
[136.75468445 -55.35416031]
[134.41918945 -40.53709412]
[132.19407654 -25.70304871]
[129.96896362 -10.86900520]
[127.74384308 3.96503806]
[125.51873016 18.79908180]
[138.94897461 12.11862183]
[152.60939026 18.31483269]
[156.43002319 32.82009888]
[147.59445190 44.94167709]
[132.61592102 45.74399185]
[122.53652954 34.63718796]
[119.21427155 49.26464844]
[123.94052124 63.38951111]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.86222076 157.49176025]
[91.97695160 172.21165466]
[89.09167480 186.93154907]
[86.31606293 201.67251587]
[83.65026855 216.43373108]
[80.98447418 231.19494629]
[87.61135864 248.37533569]
[75.76157379 261.31942749]
[73.31584930 276.11871338]
[86.48149872 283.59472656]
[96.27660370 295.10247803]
[101.53364563 309.24047852]
[101.63623810 324.29571533]
[96.59128571 338.45092773]
[87.02587128 350.00415039]
[74.10934448 357.57333374]
[59.41040421 360.26153564]
[56.96467590 375.06082153]
[54.51894760 389.86007690]
[52.07322311 404.65936279]
[57.45688629 419.53640747]
[47.74796295 430.83181763]
[45.30223465 445.63107300]
[42.85650635 460.43035889]
[40.41077805 475.22961426]
[45.79444122 490.10668945]
[36.08552170 501.40206909]
[33.63979340 516.20135498]
[31.19406509 531.00061035]
[28.74833870 545.79986572]
[43.22449493 549.78216553]
[57.20507812 555.25585938]
[70.53691101 562.16088867]
[83.07391357 570.42175293]
[94.67874146 579.94781494]
[105.22422791 590.63470459]
[114.59484100 602.36541748]
[122.68791199 615.01135254]
[129.41476440 628.43402100]
[134.70169067 642.48626709]
[138.49076843 657.01416016]
[140.74049377 671.85858154]
[141.42619324 686.85687256]
[140.54037476 701.84460449]
[138.09274292 716.65765381]
[134.11010742 731.13372803]
[128.63609314 745.11419678]
[121.73070526 758.44586182]
[113.46958160 770.98266602]
[103.94324493 782.58721924]
[93.25605774 793.13244629]
[81.52513123 802.50280762]
[68.87899017 810.59558105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 187]
[36 186]
[37 185]
[38 184]
[40 182]
[41 181]
[42 180]
[43 179]
[45 177]
[46 176]
[47 175]
[48 174]
[56 166]
[57 165]
[60 163]
[61 162]
[62 161]
[64 160]
[65 159]
[66 158]
[69 157]
[70 156]
[71 155]
[73 153]
[74 152]
[76 150]
[77 149]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
