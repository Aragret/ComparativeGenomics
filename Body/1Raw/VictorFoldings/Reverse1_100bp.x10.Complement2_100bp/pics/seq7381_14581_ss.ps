%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[51.68739700 601.34576416]
[53.73066711 586.40332031]
[59.42653275 572.43884277]
[68.41695404 560.33001709]
[80.13677216 550.83807373]
[93.84928894 544.55975342]
[91.18349457 529.79852295]
[88.51769257 515.03729248]
[85.85189819 500.27609253]
[83.18610382 485.51486206]
[80.52030945 470.75366211]
[75.31854248 484.82281494]
[65.18521881 495.88247681]
[51.62356567 502.29196167]
[36.64537430 503.10049438]
[22.47256470 498.18811035]
[11.20759106 488.28353882]
[4.52154684 474.85607910]
[3.40626502 459.89761353]
[8.02719212 445.62710571]
[17.69884109 434.16152954]
[30.98647881 427.20175171]
[45.91896439 425.78018188]
[60.28115463 430.10772705]
[71.94249725 439.54238892]
[79.17253113 452.68280029]
[79.61913300 437.68945312]
[80.06574249 422.69610596]
[80.51234436 407.70275879]
[80.95895386 392.70938110]
[73.60401917 379.75738525]
[81.74877167 366.19372559]
[82.19538116 351.20034790]
[71.82643890 340.56924438]
[72.06577301 325.35748291]
[83.28697205 314.55368042]
[83.73357391 299.56033325]
[76.37864685 286.60833740]
[84.52339935 273.04464722]
[84.97000122 258.05130005]
[85.41661072 243.05793762]
[77.35253143 234.04144287]
[77.60189819 221.54658508]
[86.57633972 212.28254700]
[87.24612427 197.29751587]
[87.91590881 182.31246948]
[88.58569336 167.32743835]
[85.74399567 160.50492859]
[89.37864685 152.12477112]
[90.27146149 137.15136719]
[91.16427612 122.17795563]
[79.85044861 112.80340576]
[76.16908264 98.57904053]
[81.51465607 84.89292145]
[93.86231232 76.92922974]
[94.75512695 61.95582199]
[95.64794922 46.98241806]
[96.54076385 32.00901031]
[97.43357849 17.03560638]
[86.27291870 27.05756760]
[71.28611755 27.68657494]
[59.32492828 18.63505554]
[55.85785294 4.04124165]
[62.46998978 -9.42277145]
[76.13835907 -15.60141754]
[90.61396790 -11.66990376]
[99.27925110 0.57612026]
[101.72498322 -14.22315025]
[104.17070770 -29.02242088]
[106.61643982 -43.82169342]
[101.23277283 -58.69874573]
[110.94169617 -69.99414825]
[113.38742065 -84.79341888]
[115.83315277 -99.59268951]
[115.60982513 -114.59102631]
[112.17776489 -118.52397156]
[110.74115753 -122.93865967]
[111.14935303 -126.99432373]
[112.93984222 -130.03182983]
[110.71472168 -144.86587524]
[108.48960114 -159.69992065]
[106.26448822 -174.53396606]
[104.03936768 -189.36801147]
[101.81425476 -204.20205688]
[92.96913147 -192.08743286]
[78.43690491 -188.37066650]
[64.86151123 -194.75099182]
[58.44943237 -208.31143188]
[62.13219070 -222.85231018]
[74.22607422 -231.72575378]
[89.20192719 -230.87493896]
[100.21383667 -220.68719482]
[91.86804962 -234.12811279]
[99.02932739 -247.18818665]
[98.35954285 -262.17321777]
[97.68975830 -277.15826416]
[97.01997375 -292.14331055]
[82.82958221 -297.67074585]
[72.11885834 -308.49667358]
[66.74349213 -322.74536133]
[67.63478851 -337.94818115]
[74.63834381 -351.47113037]
[86.54073334 -360.97128296]
[101.27980804 -364.80267334]
[116.30192566 -362.30151367]
[129.00442505 -353.90112305]
[137.18650818 -341.05691528]
[139.43057251 -325.99426270]
[135.34785461 -311.32281494]
[125.64567566 -299.58450317]
[112.00501251 -292.81307983]
[112.67479706 -277.82803345]
[113.34458160 -262.84301758]
[114.01436615 -247.85797119]
[122.31224823 -235.48887634]
[115.19887543 -221.35697937]
[116.64830017 -206.42716980]
[118.87341309 -191.59312439]
[121.09853363 -176.75907898]
[123.32364655 -161.92503357]
[125.54876709 -147.09100342]
[127.77388000 -132.25695801]
[130.32971191 -117.47630310]
[134.27537537 -131.94805908]
[141.52659607 -145.07891846]
[151.67332458 -156.12628174]
[164.14167786 -164.46534729]
[178.22653198 -169.62451172]
[193.13130188 -171.31199646]
[208.01307678 -169.43237305]
[222.03019714 -164.09191895]
[234.38992310 -155.59269714]
[244.39328003 -144.41535950]
[251.47450256 -131.19203186]
[255.23313904 -116.67057037]
[255.45658875 -101.67224121]
[252.13223267 -87.04525757]
[245.44808960 -73.61684418]
[235.78215027 -62.14645767]
[223.68110657 -53.28279495]
[209.82929993 -47.52714157]
[195.01013184 -45.20500565]
[180.06170654 -46.44771957]
[165.82940674 -51.18499374]
[153.11814880 -59.14891815]
[142.64683533 -69.88909912]
[135.00764465 -82.79811096]
[130.63241577 -97.14696503]
[128.18669128 -82.34769440]
[125.74096680 -67.54842377]
[131.29956055 -53.72990799]
[121.41571045 -41.37596512]
[118.96997833 -26.57669449]
[116.52425385 -11.77742290]
[114.07852173 3.02184772]
[112.40698242 17.92842102]
[111.51416779 32.90182877]
[110.62135315 47.87523270]
[109.72853851 62.84864044]
[108.83572388 77.82204437]
[120.14955139 87.19659424]
[123.83091736 101.42095947]
[118.48534393 115.10707855]
[106.13768768 123.07077026]
[105.24487305 138.04417419]
[104.35205078 153.01757812]
[103.57073212 167.99722290]
[102.90094757 182.98225403]
[102.23116302 197.96730042]
[101.56137848 212.95233154]
[110.42417145 229.09335327]
[100.40995789 243.50454712]
[99.96335602 258.49789429]
[99.51674652 273.49124146]
[106.83973694 287.51568604]
[98.72692871 300.00692749]
[98.28031921 315.00027466]
[108.83856964 326.45285034]
[108.17205811 341.65185547]
[97.18872833 351.64697266]
[96.74212646 366.64031982]
[104.06510925 380.66473389]
[95.95230103 393.15600586]
[95.50569916 408.14935303]
[95.05908966 423.14270020]
[94.61248779 438.13604736]
[94.16587830 453.12939453]
[95.28152466 468.08786011]
[97.94731903 482.84906006]
[100.61312103 497.61029053]
[103.27891541 512.37152100]
[105.94470978 527.13275146]
[108.61050415 541.89392090]
[123.65287018 542.97930908]
[137.95246887 547.77227783]
[150.61039734 555.97149658]
[160.83099365 567.06158447]
[167.97177124 580.34545898]
[171.58386230 594.98797607]
[171.44018555 610.06878662]
[167.54978943 624.63983154]
[160.15722656 637.78521729]
[149.72720337 648.67852783]
[136.91535950 656.63513184]
[122.52704620 661.15478516]
[107.46672821 661.95343018]
[92.68112183 658.98077393]
[79.09964752 652.42376709]
[67.57606506 642.69451904]
[58.83473969 630.40466309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[32 181]
[33 180]
[36 177]
[37 176]
[39 174]
[40 173]
[41 172]
[44 170]
[45 169]
[46 168]
[47 167]
[49 166]
[50 165]
[51 164]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[67 155]
[68 154]
[69 153]
[70 152]
[72 150]
[73 149]
[74 148]
[75 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[92 116]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
