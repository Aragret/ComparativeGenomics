%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[30.55756950 692.34265137]
[19.74527168 681.88964844]
[10.91253662 669.71777344]
[4.32778072 656.19696045]
[0.19110717 641.73809814]
[-1.37177551 626.78051758]
[-0.31337288 611.77886963]
[3.33415127 597.18890381]
[9.45995331 583.45404053]
[17.87787628 570.99169922]
[28.33210945 560.18060303]
[40.50495911 551.34924316]
[54.02650833 544.76605225]
[68.48585510 540.63098145]
[66.92533112 525.71240234]
[65.36480713 510.79379272]
[63.80428314 495.87518311]
[54.60788727 488.01687622]
[53.18569565 475.60073853]
[60.84199524 465.22073364]
[59.50376129 450.28054810]
[58.16552734 435.34036255]
[49.32360840 423.35415649]
[55.79886246 408.91870117]
[54.46062851 393.97851562]
[47.48865509 407.25976562]
[35.49640274 416.27011108]
[20.79939270 419.26974487]
[6.23538446 415.67953491]
[-5.38353968 406.19265747]
[-11.81394672 392.64093018]
[-11.81422710 377.64093018]
[-5.38432598 364.08892822]
[6.23424339 354.60162354]
[20.79811859 351.01086426]
[35.49523926 354.00997925]
[47.48782730 363.01983643]
[54.46062851 376.30206299]
[55.79886246 361.36187744]
[57.13709641 346.42169189]
[58.47533035 331.48150635]
[59.81356812 316.54132080]
[61.15180206 301.60113525]
[62.37877655 286.65139771]
[63.49442291 271.69296265]
[51.45119476 280.63500977]
[36.59281540 278.57867432]
[27.43083954 266.70187378]
[29.21366310 251.80821228]
[40.92000198 242.42942810]
[55.84393692 243.93812561]
[65.43607330 255.46914673]
[67.88179779 240.66987610]
[70.32752991 225.87060547]
[72.77325439 211.07133484]
[61.66921997 203.12039185]
[55.04239655 191.10316467]
[54.23594666 177.33731079]
[59.46416855 164.50593567]
[69.75955200 155.13464355]
[83.15130615 151.09439087]
[85.81710052 136.33317566]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[88.32086182 77.15303040]
[98.02978516 65.85763550]
[100.47551727 51.05836105]
[102.92124176 36.25909042]
[105.36696625 21.45981979]
[107.81269836 6.66054869]
[102.42903137 -8.21650600]
[112.13795471 -19.51190758]
[114.58368683 -34.31117630]
[117.02941132 -49.11044693]
[115.18981934 -53.99542236]
[115.38813019 -58.63373947]
[117.18914032 -62.29043579]
[119.92899323 -64.50979614]
[123.03310394 -79.18509674]
[126.13720703 -93.86039734]
[129.24131775 -108.53569794]
[122.87273407 -119.75193787]
[125.76027679 -131.91111755]
[135.82531738 -138.62092590]
[139.14758301 -153.24838257]
[142.46983337 -167.87583923]
[145.68312073 -182.52763367]
[148.78723145 -197.20294189]
[144.07322693 -212.30554199]
[154.27682495 -223.15615845]
[157.38093567 -237.83145142]
[160.48504639 -252.50675964]
[163.47982788 -267.20477295]
[166.36509705 -281.92465210]
[169.25036621 -296.64453125]
[172.13565063 -311.36444092]
[175.02091980 -326.08432007]
[177.90618896 -340.80422974]
[164.18185425 -347.02832031]
[152.26321411 -356.25018311]
[142.79301453 -367.97244263]
[136.28196716 -381.56301880]
[133.08122253 -396.28890991]
[133.36337280 -411.35598755]
[137.11322021 -425.95172119]
[144.12852478 -439.28897095]
[154.03097534 -450.64846802]
[166.28652954 -459.41763306]
[180.23426819 -465.12350464]
[195.12200928 -467.45843506]
[210.14686584 -466.29647827]
[224.49859619 -461.70028687]
[237.40318298 -453.91772461]
[248.16473389 -443.36853027]
[256.20288086 -430.62155151]
[261.08413696 -416.36428833]
[262.54525757 -401.36557007]
[260.50744629 -386.43423462]
[255.08061218 -372.37557983]
[246.55740356 -359.94772339]
[235.39747620 -349.82089233]
[222.20266724 -342.54119873]
[207.68455505 -338.50128174]
[192.62608337 -337.91894531]
[189.74081421 -323.19906616]
[186.85552979 -308.47915649]
[183.97026062 -293.75927734]
[181.08499146 -279.03936768]
[178.19972229 -264.31948853]
[179.99790955 -257.15093994]
[175.16035461 -249.40264893]
[172.05624390 -234.72734070]
[168.95213318 -220.05204773]
[173.88815308 -205.99911499]
[163.46252441 -194.09883118]
[160.35841370 -179.42352295]
[162.04968262 -172.22898865]
[157.09730530 -164.55358887]
[153.77503967 -149.92613220]
[150.45277405 -135.29866028]
[156.53906250 -118.83889008]
[143.91662598 -105.43159485]
[140.81251526 -90.75628662]
[137.70840454 -76.08098602]
[134.60429382 -61.40568542]
[131.82867432 -46.66472244]
[129.38294983 -31.86544991]
[126.93722534 -17.06617928]
[132.49581909 -3.24766803]
[122.61196899 9.10627556]
[120.16623688 23.90554619]
[117.72051239 38.70481873]
[115.27478790 53.50408936]
[112.82905579 68.30335999]
[118.38765717 82.12187195]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[100.57832336 138.99897766]
[97.91252899 153.76019287]
[110.64408875 164.31002808]
[116.28575134 179.75241089]
[113.38665771 195.84005737]
[102.83125305 208.19883728]
[87.57252502 213.51707458]
[85.12680054 228.31634521]
[82.68106842 243.11561584]
[80.23534393 257.91488647]
[78.45288086 272.80859375]
[77.33722687 287.76705933]
[79.81969452 296.55767822]
[76.09198761 302.93936157]
[74.75375366 317.87954712]
[73.41551971 332.81973267]
[72.07728577 347.75991821]
[70.73905182 362.70010376]
[69.40081787 377.64028931]
[69.40081787 392.64028931]
[70.73905182 407.58047485]
[79.67668915 420.63534546]
[73.10571289 434.00213623]
[74.44394684 448.94232178]
[75.78218079 463.88250732]
[86.72196960 478.69476318]
[78.72289276 494.31466675]
[80.28340912 509.23327637]
[81.84393311 524.15185547]
[83.40445709 539.07049561]
[98.40651703 540.12377930]
[112.99770355 543.76635742]
[126.73462677 549.88745117]
[139.19981384 558.30114746]
[150.01448059 568.75170898]
[158.84997559 580.92156982]
[165.43780518 594.44085693]
[169.57775879 608.89880371]
[171.14402771 623.85601807]
[170.08903503 638.85791016]
[166.44482422 653.44873047]
[160.32212830 667.18493652]
[151.90702820 679.64916992]
[141.45526123 690.46264648]
[129.28440857 699.29675293]
[115.76435089 705.88305664]
[101.30594635 710.02136230]
[86.34856415 711.58593750]
[71.34674835 710.52923584]
[56.75638199 706.88336182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 190]
[15 189]
[16 188]
[17 187]
[20 185]
[21 184]
[22 183]
[24 181]
[25 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 172]
[45 171]
[52 170]
[53 169]
[54 168]
[55 167]
[61 162]
[62 161]
[63 160]
[64 159]
[65 157]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[73 149]
[74 148]
[75 147]
[79 146]
[80 145]
[81 144]
[82 143]
[85 141]
[86 140]
[87 139]
[88 137]
[89 136]
[91 134]
[92 133]
[93 132]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
