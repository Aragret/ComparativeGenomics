%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[145.87316895 276.46826172]
[146.49128723 261.47299194]
[148.29884338 246.57423401]
[151.28437805 231.86619568]
[155.42906189 217.44184875]
[160.70666504 203.39239502]
[167.08381653 189.80667114]
[174.52020264 176.77055359]
[182.96881104 164.36648560]
[171.28123474 154.96432495]
[159.59364319 145.56217957]
[147.90606689 136.16003418]
[135.42626953 127.83808136]
[122.25379944 120.66271973]
[109.08132172 113.48735046]
[92.32854462 114.33624268]
[83.74042511 99.92720032]
[70.46257782 92.94874573]
[57.18473434 85.97029114]
[60.59319687 100.57790375]
[52.79164505 113.38945770]
[38.24916458 117.06590271]
[25.29634857 109.50121307]
[21.35315514 95.02878571]
[28.67842865 81.93907928]
[43.07497025 77.73037720]
[30.47266006 69.59516144]
[14.68208027 68.61119843]
[8.18551731 55.20806503]
[-4.41679430 47.07284927]
[-17.01910591 38.93763351]
[-29.62141800 30.80241585]
[-42.22372818 22.66720009]
[-51.33909607 34.58987427]
[-61.37291336 45.75063705]
[-72.26174164 56.07892227]
[-83.93673706 65.50943756]
[-96.32408905 73.98254395]
[-109.34547424 81.44469452]
[-122.91857147 87.84868622]
[-136.95756531 93.15404510]
[-151.37368774 97.32723236]
[-166.07580566 100.34185028]
[-180.97094727 102.17884064]
[-195.96496582 102.82659912]
[-210.96304321 102.28102112]
[-225.87037659 100.54556274]
[-240.59268188 97.63119507]
[-255.03691101 93.55634308]
[-269.11172485 88.34676361]
[-282.72814941 82.03540039]
[-295.80007935 74.66215515]
[-308.24487305 66.27364349]
[-319.98385620 56.92290115]
[-330.94281006 46.66904831]
[-341.05242920 35.57691574]
[-350.24884033 23.71662903]
[-358.47384644 11.16317558]
[-365.67547607 -2.00407791]
[-371.80819702 -15.70188141]
[-376.83322144 -29.84363365]
[-380.71881104 -44.33992004]
[-383.44036865 -59.09909439]
[-384.98068237 -74.02783966]
[-385.33004761 -89.03177643]
[-384.48620605 -104.01603699]
[-382.45455933 -118.88588715]
[-379.24789429 -133.54731750]
[-374.88650513 -147.90762329]
[-369.39797974 -161.87600708]
[-362.81698608 -175.36418152]
[-355.18515015 -188.28684998]
[-346.55075073 -200.56231689]
[-336.96832275 -212.11296082]
[-326.49850464 -222.86576843]
[-315.20745850 -232.75274658]
[-303.16656494 -241.71138000]
[-290.45196533 -249.68504333]
[-277.14407349 -256.62332153]
[-263.32696533 -262.48233032]
[-249.08805847 -267.22506714]
[-234.51734924 -270.82150269]
[-219.70695496 -273.24890137]
[-204.75051880 -274.49194336]
[-189.74259949 -274.54275513]
[-174.77809143 -273.40103149]
[-159.95159912 -271.07394409]
[-145.35687256 -267.57626343]
[-131.08616638 -262.93008423]
[-117.22972107 -257.16473389]
[-103.87512970 -250.31674194]
[-91.10684204 -242.42936707]
[-79.00556946 -233.55245972]
[-67.64783478 -223.74217224]
[-57.10543442 -213.06050110]
[-47.44502640 -201.57501221]
[-38.72768784 -189.35829163]
[-31.00853157 -176.48760986]
[-24.33636475 -163.04431152]
[-18.75336838 -149.11338806]
[-14.29484177 -134.78294373]
[-10.98897362 -120.14357758]
[-8.85666466 -105.28782654]
[-7.91139555 -90.30962372]
[-8.15914440 -75.30366516]
[-9.59834290 -60.36483002]
[-12.21989346 -45.58756638]
[-16.00722122 -31.06529808]
[-20.93637848 -16.88984489]
[-26.97620583 -3.15082741]
[-34.08851242 10.06488895]
[-21.48620224 18.20010567]
[-8.88389015 26.33532143]
[3.71842146 34.47053528]
[16.32073402 42.60575104]
[31.20991135 43.00783539]
[38.60787582 56.99285126]
[51.21018600 65.12806702]
[64.16318512 72.69244385]
[77.44103241 79.67089844]
[90.71887970 86.64935303]
[102.02822113 83.86725616]
[112.29697418 89.36216736]
[116.25669098 100.31487274]
[129.42916870 107.49024200]
[142.60163879 114.66561127]
[135.41984558 101.49663544]
[134.57664490 86.52035522]
[140.23481750 72.62844849]
[151.30189514 62.50323486]
[165.64096069 58.09972763]
[180.48339844 60.26817322]
[192.96334839 68.58988190]
[200.67112732 81.45806885]
[202.11849976 96.38807678]
[197.02597046 110.49716187]
[186.37686157 121.06107330]
[172.22732544 126.04010010]
[157.30821228 124.47245026]
[168.99580383 133.87460327]
[180.68338013 143.27674866]
[192.37095642 152.67889404]
[202.67724609 141.76924133]
[213.81771851 131.71290588]
[225.72196960 122.57348633]
[238.31471252 114.40875244]
[251.51634216 107.27033234]
[265.24337769 101.20336151]
[279.40908813 96.24618530]
[293.92382812 92.43016052]
[308.69589233 89.77940369]
[323.63183594 88.31067657]
[338.63726807 88.03326416]
[353.61730957 88.94892120]
[368.47726440 91.05186462]
[383.12313843 94.32878876]
[397.46237183 98.75897217]
[411.40429688 104.31442261]
[424.86074829 110.95999908]
[437.74667358 118.65370178]
[449.98059082 127.34687042]
[461.48516846 136.98455811]
[472.18765259 147.50581360]
[482.02038574 158.84414673]
[490.92117310 170.92784119]
[498.83380127 183.68051147]
[505.70816040 197.02154541]
[511.50088501 210.86656189]
[516.17529297 225.12805176]
[519.70178223 239.71585083]
[522.05816650 254.53770447]
[523.22949219 269.49993896]
[523.20837402 284.50790405]
[521.99487305 299.46676636]
[519.59674072 314.28195190]
[516.02911377 328.85974121]
[511.31454468 343.10800171]
[505.48284912 356.93664551]
[498.57092285 370.25823975]
[490.62240601 382.98858643]
[481.68756104 395.04714966]
[471.82293701 406.35772705]
[461.09085083 416.84878540]
[449.55917358 426.45401001]
[437.30081177 435.11267090]
[424.39324951 442.77001953]
[410.91812134 449.37765503]
[396.96060181 454.89379883]
[382.60894775 459.28356934]
[367.95388794 462.51919556]
[353.08807373 464.58026123]
[338.10549927 465.45370483]
[323.10092163 465.13400269]
[308.16915894 463.62319946]
[293.40463257 460.93081665]
[278.90069580 457.07391357]
[264.74902344 452.07684326]
[251.03912354 445.97122192]
[237.85766602 438.79562378]
[225.28797913 430.59542847]
[213.40953064 421.42251587]
[202.29743958 411.33480835]
[192.02194214 400.39614868]
[182.64801025 388.67568970]
[174.23490906 376.24749756]
[166.83584595 363.19015503]
[160.49757385 349.58624268]
[155.26019287 335.52175903]
[151.15678406 321.08563232]
[148.21331787 306.36907959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 142]
[10 141]
[11 140]
[12 139]
[13 126]
[14 125]
[15 124]
[17 121]
[18 120]
[19 119]
[26 118]
[27 117]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
