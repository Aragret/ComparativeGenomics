%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[92.65499878 469.43881226]
[105.47721100 461.51074219]
[100.86320496 447.23800659]
[96.24919891 432.96527100]
[91.63518524 418.69253540]
[87.02117920 404.41979980]
[75.74410248 394.68960571]
[78.86132050 379.17852783]
[74.24730682 364.90579224]
[69.63330078 350.63305664]
[67.44809723 365.47305298]
[62.35952759 379.58355713]
[54.57026672 392.40258789]
[44.39055634 403.41955566]
[32.22585297 412.19564819]
[18.56067085 418.38134766]
[3.93928957 421.73025513]
[-11.05592823 422.10897827]
[-25.82772827 419.50247192]
[-39.78775406 414.01452637]
[-52.37998581 405.86370850]
[-63.10287857 395.37469482]
[-71.52934265 382.96520996]
[-77.32375336 369.12957764]
[-80.25532532 354.41885376]
[-80.20729828 339.41891479]
[-77.18157959 324.72726440]
[-71.29868317 310.92901611]
[-62.79291916 298.57376099]
[-52.00307465 288.15362549]
[-39.35890579 280.08364868]
[-25.36401939 274.68518066]
[-10.57583141 272.17333984]
[4.41665411 272.64807129]
[19.01629066 276.09057617]
[32.64157867 282.36364746]
[44.74983215 291.21746826]
[54.85877991 302.29940796]
[62.56578827 315.16802979]
[67.56289673 329.30679321]
[69.34536743 314.41305542]
[71.12783051 299.51934814]
[72.91029358 284.62564087]
[74.69276428 269.73190308]
[76.47522736 254.83819580]
[77.36804199 239.86479187]
[77.36804199 224.86479187]
[77.36804199 209.86479187]
[77.36804199 194.86479187]
[77.36804199 179.86479187]
[69.74871063 192.78553772]
[57.81118393 201.86824036]
[43.32632446 205.76553345]
[28.44287491 203.89926147]
[15.36870766 196.54629517]
[6.04329634 184.79739380]
[1.85001063 170.39544678]
[3.41089964 155.47686768]
[10.49441528 142.25477600]
[22.04975891 132.69056702]
[36.36276627 128.20304871]
[51.31018448 129.45791626]
[64.67465210 136.26899719]
[74.47364044 147.62593079]
[79.25326538 161.84208679]
[82.35737610 147.16677856]
[85.46148682 132.49147034]
[88.56559753 117.81616974]
[80.43724823 108.09075928]
[79.32160950 95.46503448]
[85.61860657 84.46497345]
[97.07093811 79.03378296]
[100.39319611 64.40632629]
[103.71545410 49.77886200]
[95.55728912 36.50927353]
[99.13490295 21.72227478]
[111.83570862 14.02648449]
[115.15796661 -0.60097611]
[113.57047272 -7.01902866]
[115.21556854 -12.45876122]
[118.80303955 -15.61139297]
[122.55934143 -30.13345146]
[126.31564331 -44.65550995]
[130.07194519 -59.17757034]
[133.28521729 -73.82936096]
[135.95100403 -88.59057617]
[137.40043640 -103.52038574]
[137.62376404 -118.51872253]
[137.84709167 -133.51705933]
[138.07041931 -148.51539612]
[138.29374695 -163.51373291]
[138.51707458 -178.51206970]
[135.51577759 -187.13935852]
[138.85702515 -193.73161316]
[139.30363464 -208.72496033]
[139.75024414 -223.71830750]
[125.38546753 -228.39054871]
[112.91966248 -236.92169189]
[103.36338806 -248.62016296]
[97.49131775 -262.53762817]
[95.77947235 -277.54583740]
[98.36663818 -292.42813110]
[105.04306793 -305.97811890]
[115.26754761 -317.09732056]
[128.21121216 -324.88436890]
[142.82478333 -328.70800781]
[157.92359924 -328.25827026]
[172.28367615 -323.57159424]
[184.74090576 -315.02792358]
[194.28543091 -303.31985474]
[200.14350891 -289.39651489]
[201.84027100 -274.38659668]
[199.23815918 -259.50689697]
[192.54812622 -245.96362305]
[182.31248474 -234.85470581]
[169.36100769 -227.08065796]
[154.74359131 -223.27169800]
[154.29698181 -208.27835083]
[153.85038757 -193.28500366]
[153.51541138 -178.28874207]
[153.29208374 -163.29040527]
[153.06875610 -148.29206848]
[152.84542847 -133.29373169]
[152.62210083 -118.29539490]
[152.39877319 -103.29705811]
[161.04017639 -115.55780029]
[174.34729004 -122.48030090]
[189.34724426 -122.51804352]
[202.68901062 -115.66259766]
[211.39201355 -103.44549561]
[213.51197815 -88.59605408]
[208.57530212 -74.43169403]
[197.68484497 -64.11676025]
[183.27355957 -59.95563126]
[168.56097412 -62.87792206]
[156.83392334 -72.23078156]
[150.71223450 -85.92478180]
[148.04643250 -71.16355896]
[161.66963196 -77.44119263]
[175.13949585 -70.84100342]
[178.52656555 -56.22841644]
[169.33401489 -44.37528229]
[154.33822632 -44.01928711]
[144.59399414 -55.42126846]
[140.83770752 -40.89921188]
[137.08140564 -26.37715149]
[133.32510376 -11.85509205]
[129.78543091 2.72128344]
[126.46316528 17.34874344]
[134.59356689 29.77581787]
[131.43269348 44.65747070]
[118.34291077 53.10112381]
[115.02065277 67.72858429]
[111.69839478 82.35604095]
[120.81049347 96.11604309]
[117.27512360 112.23648834]
[103.24089813 120.92028046]
[100.13678741 135.59558105]
[97.03267670 150.27088928]
[93.92856598 164.94619751]
[92.36804199 179.86479187]
[92.36804199 194.86479187]
[92.36804199 209.86479187]
[92.36804199 224.86479187]
[92.36804199 239.86479187]
[102.24308014 228.57392883]
[116.84272766 225.13148499]
[130.72166443 230.82139587]
[138.70339966 243.52146912]
[137.81094360 258.49490356]
[128.37715149 270.15695190]
[113.92060089 274.15798950]
[99.83322906 269.00570679]
[91.36894226 256.62066650]
[89.58647919 271.51437378]
[87.80401611 286.40811157]
[86.02154541 301.30181885]
[84.23908234 316.19552612]
[82.45661163 331.08926392]
[83.90603638 346.01907349]
[88.52004242 360.29180908]
[93.13405609 374.56451416]
[104.74115753 385.31561279]
[101.29390717 399.80581665]
[105.90792084 414.07855225]
[110.52192688 428.35125732]
[115.13594055 442.62399292]
[119.74994659 456.89672852]
[134.78662109 455.81872559]
[149.64421082 458.37127686]
[163.45892334 464.40591431]
[175.42759705 473.57183838]
[184.85437012 485.33618164]
[191.19120789 499.01492310]
[194.06968689 513.81280518]
[193.32243347 528.86956787]
[188.99291992 543.30969238]
[181.33285522 556.29382324]
[170.78756714 567.06695557]
[157.97015381 575.00280762]
[143.62580872 579.63995361]
[128.58850098 580.70880127]
[113.73245239 578.14727783]
[99.92139435 572.10424805]
[87.95828247 562.93109131]
[78.53863525 551.16107178]
[72.21009827 537.47845459]
[69.34059906 522.67883301]
[70.09696960 507.62255859]
[74.43524170 493.18499756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[8 182]
[9 181]
[10 180]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[65 160]
[66 159]
[67 158]
[68 157]
[72 154]
[73 153]
[74 152]
[77 149]
[78 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 138]
[86 137]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
