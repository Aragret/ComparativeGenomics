%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[96.13115692 600.80285645]
[84.45455933 591.33691406]
[74.40261078 580.16088867]
[66.22284698 567.54980469]
[60.11670303 553.81445312]
[56.23454666 539.29290771]
[54.67197800 524.34277344]
[55.46747971 509.33233643]
[58.60145950 494.63116455]
[63.99674225 480.60128784]
[71.52046204 467.58822632]
[80.98734283 455.91241455]
[92.16425323 445.86138916]
[104.77595520 437.68264771]
[118.51187134 431.57763672]
[133.03373718 427.69668579]
[131.47320557 412.77807617]
[129.91268921 397.85946655]
[114.56018829 394.75674438]
[100.90099335 387.05206299]
[90.27810669 375.48919678]
[83.74024200 361.19192505]
[81.93831635 345.55474854]
[85.06063843 330.10708618]
[92.81334686 316.36343384]
[104.44799042 305.67504883]
[118.83378601 299.09710693]
[117.05132294 284.20336914]
[115.26885223 269.30966187]
[113.48638916 254.41593933]
[102.22640991 240.95564270]
[109.61383057 224.08828735]
[107.60981750 209.22276306]
[105.60580444 194.35722351]
[103.60179138 179.49169922]
[94.23347473 167.91223145]
[100.05770111 153.20207214]
[98.05368805 138.33654785]
[95.93906403 123.48634338]
[93.71394348 108.65229797]
[89.74185181 94.18777466]
[84.07906342 80.29775238]
[78.41627502 66.40772247]
[72.75348663 52.51769638]
[67.09070587 38.62766647]
[61.42791367 24.73764038]
[55.76512909 10.84761429]
[50.10234070 -3.04241252]
[35.29810333 -13.99302864]
[38.36226654 -31.27243233]
[32.49330521 -45.07661057]
[26.31753540 -58.74628067]
[19.83803940 -72.27462769]
[13.30867672 -78.66252136]
[13.36446476 -86.05297089]
[7.08710384 -99.67628479]
[-9.43211079 -105.43257141]
[-16.53731155 -121.04766083]
[-10.27632236 -136.65660095]
[-16.75581741 -150.18493652]
[-29.69522095 -159.28892517]
[-28.21478271 -174.10977173]
[-34.69427872 -187.63810730]
[-41.17377472 -201.16645813]
[-55.37883377 -196.29483032]
[-70.05341339 -193.10527039]
[-84.99905396 -191.64094543]
[-100.01364136 -191.92163086]
[-114.89411163 -193.94355774]
[-129.43922424 -197.67935181]
[-143.45227051 -203.07850647]
[-156.74375916 -210.06800842]
[-169.13391113 -218.55331421]
[-180.45518494 -228.41969299]
[-190.55445862 -239.53370667]
[-199.29515076 -251.74504089]
[-206.55906677 -264.88854980]
[-212.24795532 -278.78649902]
[-216.28489685 -293.25094604]
[-218.61529541 -308.08621216]
[-219.20761108 -323.09173584]
[-218.05386353 -338.06457520]
[-215.16963196 -352.80218506]
[-210.59393311 -367.10531616]
[-204.38865662 -380.78051758]
[-196.63771057 -393.64285278]
[-187.44590759 -405.51834106]
[-176.93757629 -416.24642944]
[-165.25482178 -425.68197632]
[-152.55564880 -433.69741821]
[-139.01177979 -440.18435669]
[-124.80639648 -445.05502319]
[-110.13160706 -448.24362183]
[-95.18586731 -449.70693970]
[-80.17129517 -449.42526245]
[-65.29096222 -447.40234375]
[-50.74609756 -443.66555786]
[-36.73340607 -438.26547241]
[-23.44239426 -431.27508545]
[-11.05280590 -422.78894043]
[0.26780409 -412.92181396]
[10.36633587 -401.80712891]
[19.10621834 -389.59521484]
[26.36925697 -376.45120239]
[32.05722427 -362.55288696]
[36.09319687 -348.08819580]
[38.42259598 -333.25274658]
[39.01391983 -318.24719238]
[37.85916519 -303.27444458]
[34.97395325 -288.53698730]
[30.39730453 -274.23416138]
[24.19110870 -260.55938721]
[16.43930054 -247.69758606]
[7.24671459 -235.82270813]
[-3.26233125 -225.09533691]
[-14.94571400 -215.66055298]
[-27.64542770 -207.64595032]
[-21.16593170 -194.11761475]
[-14.68643665 -180.58926392]
[-2.21049166 -172.45292664]
[-3.22747254 -156.66442871]
[3.25202346 -143.13609314]
[15.88461971 -140.59700012]
[24.88254356 -131.10386658]
[26.79816246 -117.96838379]
[20.71042061 -105.95364380]
[26.98777962 -92.33032990]
[33.36638641 -78.75411987]
[39.84588242 -65.22577667]
[43.03207397 -63.71564102]
[45.64511871 -60.58721161]
[46.93237305 -56.12668991]
[46.29748154 -50.94557190]
[52.16644287 -37.14139557]
[63.26372528 -32.32716370]
[68.26622772 -20.87470627]
[63.99237061 -8.70519924]
[69.65515900 5.18482780]
[75.31793976 19.07485390]
[80.98072815 32.96488190]
[86.64351654 46.85490799]
[92.30630493 60.74493408]
[97.96908569 74.63496399]
[103.63187408 88.52498627]
[105.39705658 73.62921143]
[112.08857727 60.20447922]
[122.92032623 49.82790756]
[136.61979675 43.71852875]
[151.57759094 42.59406662]
[166.03648376 46.58662415]
[178.29785156 55.22715759]
[186.92124939 67.50058746]
[190.89360046 81.96503448]
[189.74824524 96.92124939]
[183.61973572 110.61216736]
[173.22804260 121.42941284]
[159.79397583 128.10217285]
[144.89575195 129.84654236]
[130.28359985 126.45760345]
[117.67413330 118.33347321]
[108.54798889 106.42718506]
[110.77310181 121.26122284]
[115.14089966 129.28370667]
[112.91921234 136.33253479]
[114.92322540 151.19805908]
[124.43488312 163.84080505]
[118.46731567 177.48768616]
[120.47132874 192.35321045]
[122.47534943 207.21875000]
[124.47936249 222.08427429]
[134.24450684 230.51069641]
[135.60762024 242.93348694]
[128.38011169 252.63346863]
[130.16256714 267.52719116]
[131.94503784 282.42089844]
[133.72750854 297.31463623]
[147.90170288 299.84109497]
[160.77490234 306.25305176]
[171.30728149 316.02258301]
[178.65093994 328.35095215]
[182.21810913 342.23391724]
[181.72825623 356.54351807]
[177.23005676 370.11981201]
[169.09675598 381.86477661]
[157.99523926 390.83117676]
[144.83129883 396.29895020]
[146.39181519 411.21755981]
[147.95234680 426.13616943]
[162.96298218 426.92794800]
[177.66494751 430.05828857]
[191.69615173 435.45010376]
[204.71109009 442.97058105]
[216.38925171 452.43457031]
[226.44303894 463.60900879]
[234.62489319 476.21868896]
[240.73329163 489.95309448]
[244.61785889 504.47399902]
[246.18289185 519.42382812]
[245.38986206 534.43438721]
[242.25831604 549.13610840]
[236.86534119 563.16687012]
[229.34376526 576.18115234]
[219.87881470 587.85852051]
[208.70356750 597.91143799]
[196.09321594 606.09222412]
[182.35830688 612.19952393]
[167.83708191 616.08288574]
[152.88713074 617.64666748]
[137.87661743 616.85241699]
[123.17517853 613.71960449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 188]
[17 187]
[18 186]
[27 176]
[28 175]
[29 174]
[30 173]
[32 170]
[33 169]
[34 168]
[35 167]
[37 165]
[38 164]
[39 162]
[40 161]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[50 134]
[51 133]
[52 129]
[53 128]
[55 127]
[56 126]
[59 122]
[60 121]
[62 119]
[63 118]
[64 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
