%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[84.16405487 626.04418945]
[74.63556671 614.38134766]
[67.83741760 600.94262695]
[64.08757019 586.35656738]
[63.56141281 571.30541992]
[66.28356171 556.49316406]
[72.12668610 542.61254883]
[80.81749725 530.31274414]
[91.94950867 520.16918945]
[105.00205994 512.65618896]
[119.36465454 508.12518311]
[118.02642059 493.18499756]
[116.68818665 478.24481201]
[115.34995270 463.30462646]
[114.01171875 448.36444092]
[112.67347717 433.42425537]
[111.33524323 418.48406982]
[109.99700928 403.54388428]
[108.65877533 388.60369873]
[97.80455780 374.81411743]
[105.69090271 358.17419434]
[104.13037872 343.25558472]
[102.23709106 328.37554932]
[100.01197052 313.54150391]
[97.78685760 298.70745850]
[95.56173706 283.87344360]
[83.46849823 275.25430298]
[81.00059509 260.24218750]
[90.12311554 247.61611938]
[86.02217102 241.46762085]
[87.97700500 232.54481506]
[85.97299194 217.67929077]
[83.96897888 202.81376648]
[81.96496582 187.94822693]
[76.89617920 202.06585693]
[67.93943024 214.09817505]
[55.86957169 223.00427246]
[41.73076248 228.01367188]
[26.74615479 228.69302368]
[12.21206474 224.98353577]
[-0.61416304 217.20614624]
[-10.62293148 206.03366089]
[-16.94838142 192.43260193]
[-19.04329872 177.57960510]
[-16.72645187 162.75961304]
[-10.19827271 149.25469971]
[-0.02351151 138.23316956]
[12.91761112 130.64848328]
[27.50555992 127.15681458]
[42.47833252 128.06021118]
[56.54063034 133.28053284]
[68.47592926 142.36616516]
[77.25170135 154.53111267]
[82.10811615 168.71951294]
[84.33323669 153.88546753]
[86.55834961 139.05143738]
[88.78347015 124.21738434]
[91.00858307 109.38334656]
[92.79105377 94.48962402]
[94.12928772 79.54943848]
[95.46752167 64.60925293]
[96.80575562 49.66907120]
[97.02908325 34.67073441]
[96.13626862 19.69732857]
[87.59128571 6.38215494]
[94.55732727 -6.78308439]
[93.66450500 -21.75649071]
[92.77169037 -36.72989655]
[82.03109741 -26.25900078]
[67.03118896 -26.31181717]
[56.36459732 -36.85808563]
[56.14163208 -51.85643005]
[66.49001312 -62.71511459]
[81.48171997 -63.21379089]
[92.52841949 -53.06765366]
[92.97502899 -68.06100464]
[93.42163086 -83.05435181]
[81.19455719 -95.56507111]
[81.78697968 -112.71044159]
[94.34418488 -123.89772034]
[94.56751251 -138.89605713]
[94.79084015 -153.89439392]
[95.01416779 -168.89273071]
[84.31214905 -158.38241577]
[69.36837769 -157.08483887]
[57.01494980 -165.59324646]
[52.89968491 -180.01768494]
[58.90402603 -193.76351929]
[72.28287506 -200.54632568]
[86.91959381 -197.26510620]
[96.12305450 -185.41821289]
[97.90551758 -200.31193542]
[99.57705688 -215.21850586]
[101.13758087 -230.13711548]
[102.69810486 -245.05572510]
[88.40456390 -249.80004883]
[75.46531677 -257.50653076]
[64.48555756 -267.81475830]
[55.97883606 -280.24252319]
[50.34302139 -294.20861816]
[47.84171295 -309.05978394]
[48.59189987 -324.10144043]
[52.55849075 -338.63003540]
[59.55596924 -351.96606445]
[69.25704956 -363.48574829]
[81.20798492 -372.65029907]
[94.84981537 -379.03109741]
[109.54449463 -382.32968140]
[124.60471344 -382.39175415]
[139.32608032 -379.21444702]
[153.02006531 -372.94635010]
[165.04615784 -363.88061523]
[174.84187317 -352.44131470]
[181.94906616 -339.16345215]
[186.03530884 -324.66802979]
[186.90948486 -309.63308716]
[184.53070068 -294.76177979]
[179.01022339 -280.74969482]
[170.60624695 -268.25222778]
[159.71185303 -257.85385132]
[146.83657837 -250.04092407]
[132.58264160 -245.17890930]
[117.61670685 -243.49519348]
[116.05618286 -228.57659912]
[114.49565887 -213.65798950]
[116.92623901 -206.67843628]
[112.79923248 -198.52946472]
[111.01676941 -183.63575745]
[110.01250458 -168.66940308]
[109.78917694 -153.67106628]
[109.56584930 -138.67272949]
[109.34252167 -123.67439270]
[119.52244568 -115.77511597]
[123.35108948 -103.26817322]
[119.21641541 -90.65409088]
[108.41498566 -82.60774994]
[107.96837616 -67.61440277]
[107.52176666 -52.62104797]
[107.74509430 -37.62271118]
[108.63791656 -22.64930534]
[109.53073120 -7.67590046]
[118.01185608 4.56827450]
[111.10967255 18.80451202]
[112.00248718 33.77791977]
[120.11525726 21.16114616]
[133.40396118 14.20337582]
[148.39494324 14.72335052]
[161.16960144 22.58514977]
[168.38868713 35.73371887]
[168.16513062 50.73205185]
[160.55737305 63.65962219]
[147.55407715 71.13719177]
[132.55426025 71.21014404]
[119.47882843 63.85941315]
[111.74594116 51.00730515]
[110.40770721 65.94748688]
[109.06947327 80.88767242]
[107.73123932 95.82785797]
[109.48027039 98.32393646]
[110.35974121 101.51157379]
[110.11175537 105.06993866]
[108.60055542 108.58740234]
[105.84262848 111.60845947]
[103.61751556 126.44250488]
[101.39239502 141.27655029]
[99.16727448 156.11059570]
[96.94216156 170.94464111]
[96.83049011 185.94421387]
[98.83451080 200.80975342]
[100.83852386 215.67527771]
[102.84253693 230.54080200]
[104.95716095 245.39100647]
[117.38267517 254.78483582]
[119.42794800 269.86038208]
[110.39578247 281.64831543]
[112.62089539 296.48236084]
[114.84601593 311.31640625]
[117.07112885 326.15045166]
[120.32415771 330.23272705]
[121.56220245 334.70715332]
[120.97332001 338.74053955]
[119.04898834 341.69506836]
[120.60951233 356.61367798]
[130.11944580 365.32711792]
[131.11207581 377.78497314]
[123.59896088 387.26547241]
[124.93719482 402.20565796]
[126.27542877 417.14584351]
[127.61366272 432.08602905]
[128.95190430 447.02621460]
[130.29013062 461.96640015]
[131.62837219 476.90658569]
[132.96659851 491.84677124]
[134.30484009 506.78695679]
[149.24404907 508.69329834]
[163.42401123 513.76702881]
[176.18153381 521.77075195]
[186.91990662 532.33013916]
[195.13687134 544.95141602]
[200.44812012 559.04412842]
[202.60523987 573.94915771]
[201.50730896 588.96948242]
[197.20570374 603.40240479]
[189.90161133 616.57299805]
[179.93666077 627.86517334]
[167.77693176 636.75085449]
[153.99114990 642.81439209]
[139.22410583 645.77215576]
[124.16648102 645.48583984]
[109.52254486 641.96887207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[21 183]
[22 182]
[23 178]
[24 177]
[25 176]
[26 175]
[29 172]
[31 171]
[32 170]
[33 169]
[34 168]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[59 158]
[60 157]
[61 156]
[62 155]
[63 144]
[64 143]
[66 141]
[67 140]
[68 139]
[75 138]
[76 137]
[77 136]
[80 132]
[81 131]
[82 130]
[83 129]
[91 128]
[92 127]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
