%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-41.72920990 603.87225342]
[-34.06324387 616.83551025]
[-29.36366463 631.14385986]
[-27.85027313 646.12799072]
[-29.59385490 661.08703613]
[-34.51285934 675.32141113]
[-42.37722015 688.16534424]
[-52.81909943 699.01800537]
[-65.35011292 707.37194824]
[-79.38417053 712.83630371]
[-94.26486206 715.15557861]
[-109.29620361 714.22125244]
[-123.77513885 710.07702637]
[-137.02447510 702.91680908]
[-148.42449951 693.07537842]
[-157.44203186 681.01312256]
[-163.65528870 667.29418945]
[-166.77368164 652.56018066]
[-166.65133667 637.50036621]
[-163.29400635 622.81896973]
[-156.85868835 609.20281982]
[-147.64637756 597.28863525]
[-136.08798218 587.63372803]
[-122.72406769 580.68963623]
[-108.17971802 576.78118896]
[-93.13518524 576.09118652]
[-78.29412842 578.65191650]
[-72.63134003 564.76190186]
[-66.96855927 550.87188721]
[-61.30577087 536.98181152]
[-55.64298248 523.09179688]
[-49.98019791 509.20178223]
[-44.31740952 495.31176758]
[-58.46680832 485.46240234]
[-69.89563751 472.54492188]
[-77.95489502 457.28735352]
[-82.18561554 440.55087280]
[-82.34506226 423.28100586]
[-78.42057800 406.45434570]
[-70.63057709 391.02319336]
[-59.41234207 377.86187744]
[-45.39750671 367.71701050]
[-29.37648392 361.16516113]
[-12.25388241 358.58023071]
[5.00255919 360.11196899]
[9.61656857 345.83923340]
[14.23057747 331.56649780]
[9.00384235 320.65744019]
[12.73104000 308.72882080]
[23.93466949 302.33807373]
[28.76066589 288.13562012]
[33.58666611 273.93316650]
[38.41266251 259.73071289]
[34.07180405 242.72708130]
[48.02056885 230.70570374]
[52.63457870 216.43296814]
[51.70097351 209.10151672]
[57.42499161 201.98298645]
[62.25098801 187.78053284]
[59.01986313 173.24061584]
[70.78574371 162.66354370]
[75.61174774 148.46109009]
[72.38062286 133.92117310]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[104.76676178 19.16398621]
[98.13898468 5.55826330]
[97.22769165 -9.50769806]
[102.14065552 -23.73620415]
[112.09978485 -34.96921921]
[125.56416321 -41.51565933]
[140.46841431 -42.40596390]
[145.29441833 -56.60842133]
[150.12040710 -70.81087494]
[154.94641113 -85.01332855]
[159.34741211 -99.35317993]
[163.31950378 -113.81770325]
[157.62980652 -125.39311218]
[161.23596191 -137.35887146]
[171.68252563 -143.45770264]
[175.86953735 -157.86148071]
[175.25994873 -166.97555542]
[180.22760010 -172.44767761]
[184.62860107 -186.78752136]
[186.96408081 -201.60459900]
[187.18740845 -216.60293579]
[187.41073608 -231.60127258]
[187.63406372 -246.59960938]
[179.22694397 -256.38137817]
[179.72172546 -268.86892700]
[188.30818176 -277.38946533]
[188.75479126 -292.38281250]
[189.20140076 -307.37615967]
[175.32267761 -313.57693481]
[164.87696838 -324.62030029]
[159.45718384 -338.82220459]
[159.88978577 -354.01699829]
[166.10881042 -367.88754272]
[177.16589355 -378.31869507]
[191.37492371 -383.71981812]
[206.56912231 -383.26721191]
[220.43148804 -377.02996826]
[230.84809875 -365.95916748]
[236.23049927 -351.74304199]
[235.75791931 -336.54943848]
[229.50242615 -322.69531250]
[218.41793823 -312.29327393]
[204.19474792 -306.92956543]
[203.74813843 -291.93621826]
[203.30152893 -276.94287109]
[212.44021606 -261.96115112]
[202.63240051 -246.37628174]
[202.40907288 -231.37794495]
[202.18574524 -216.37960815]
[201.96241760 -201.38127136]
[209.06935120 -214.59078979]
[219.71189880 -225.16133118]
[232.96936035 -232.17843628]
[247.69483948 -235.03504944]
[262.61444092 -233.48403931]
[276.43746948 -227.65960693]
[287.96807861 -218.06559753]
[296.20877075 -205.53199768]
[300.44662476 -191.14309692]
[300.31506348 -176.14367676]
[295.82543945 -161.83132935]
[287.36614990 -149.44422913]
[275.66900635 -140.05397034]
[261.74594116 -134.47290039]
[246.80143738 -133.18385315]
[232.12832642 -136.29833984]
[218.99600220 -143.54693604]
[208.54052734 -154.30253601]
[201.66641235 -167.63468933]
[198.96844482 -182.38653564]
[194.56744385 -168.04667664]
[190.27333069 -153.67446899]
[186.08631897 -139.27069092]
[191.18209839 -122.47783661]
[177.78402710 -109.84560394]
[173.81193542 -95.38108063]
[175.07963562 -92.88087463]
[175.43338013 -89.72785950]
[174.61952209 -86.26765442]
[172.51416016 -82.93119049]
[169.14886475 -80.18733215]
[164.32286072 -65.98487854]
[159.49687195 -51.78242111]
[154.67086792 -37.57996750]
[165.94715881 -27.79351234]
[172.63563538 -14.39912319]
[173.68922424 0.57601565]
[168.91632080 14.85211277]
[159.01469421 26.24384308]
[145.46969604 32.99485397]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[101.23489380 143.72586060]
[89.81420135 153.28709412]
[84.98820496 167.48954773]
[87.87413788 183.04531860]
[76.45344543 192.60653687]
[71.62744904 206.80899048]
[66.90731049 221.04698181]
[62.29330444 235.31971741]
[67.46044922 247.13763428]
[63.32360077 258.93045044]
[52.61511612 264.55673218]
[47.78911972 278.75918579]
[42.96312332 292.96163940]
[38.13712311 307.16409302]
[42.14213181 325.13745117]
[28.50331116 336.18051147]
[23.88930130 350.45324707]
[19.27529335 364.72598267]
[30.54098511 370.96920776]
[40.52812195 379.09616089]
[48.92546844 388.85171509]
[55.47165680 399.93008423]
[59.96331787 411.98431396]
[62.26140213 424.63714600]
[62.29548264 437.49291992]
[60.06591415 450.14987183]
[55.64376450 462.21261597]
[49.16858292 473.30468750]
[40.84395218 483.08010864]
[30.93112373 491.23431396]
[19.74080849 497.51354980]
[7.62342644 501.72280884]
[-5.04184866 503.73187256]
[-17.85896683 503.47933960]
[-30.42738342 500.97454834]
[-36.09017181 514.86456299]
[-41.75295639 528.75457764]
[-47.41574478 542.64459229]
[-53.07852936 556.53466797]
[-58.74131775 570.42468262]
[-64.40410614 584.31469727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[45 187]
[46 186]
[47 185]
[50 183]
[51 182]
[52 181]
[53 180]
[55 177]
[56 176]
[58 175]
[59 174]
[61 172]
[62 171]
[64 169]
[65 168]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[78 155]
[79 154]
[80 153]
[81 152]
[82 147]
[83 146]
[86 144]
[87 143]
[89 142]
[90 141]
[91 121]
[92 120]
[93 119]
[94 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
