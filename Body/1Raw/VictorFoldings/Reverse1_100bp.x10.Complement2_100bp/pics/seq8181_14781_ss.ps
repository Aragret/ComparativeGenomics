%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[105.67700958 560.60540771]
[108.39967346 545.72448730]
[115.58933258 532.41418457]
[126.54160309 521.97857666]
[140.18350220 515.43994141]
[138.17948914 500.57440186]
[136.17547607 485.70886230]
[124.71634674 472.41769409]
[131.85182190 455.44223022]
[129.62669373 440.60818481]
[120.08702850 429.16949463]
[125.69158936 414.37423706]
[123.46646881 399.54019165]
[112.13481140 393.40643311]
[106.31816864 381.69110107]
[108.34080505 368.57168579]
[117.68574524 358.87185669]
[115.68173218 344.00631714]
[113.67771912 329.14080811]
[111.56309509 314.29061890]
[109.33798218 299.45657349]
[107.11286163 284.62252808]
[104.88774872 269.78848267]
[95.12414551 281.17584229]
[80.17934418 282.46145630]
[68.61439514 272.90887451]
[67.05422974 257.99023438]
[76.39257812 246.25161743]
[91.28001404 244.41743469]
[103.18785858 253.53756714]
[102.29504395 238.56416321]
[101.40222931 223.59075928]
[88.35800171 212.97534180]
[87.00059509 195.87351990]
[98.65683746 182.82931519]
[97.54119110 167.87086487]
[96.42554474 152.91241455]
[95.30989838 137.95396423]
[94.19424438 122.99550629]
[93.07859802 108.03704834]
[91.18530273 93.15701294]
[88.51950836 78.39579773]
[85.85371399 63.63458252]
[83.18791962 48.87336349]
[80.52212524 34.11214828]
[70.45542908 21.90672874]
[75.80767059 8.00698948]
[73.14187622 -6.75422764]
[63.07518387 -18.95964622]
[68.42742920 -32.85938644]
[64.99636841 -47.46170807]
[60.80935669 -61.86548996]
[56.62234497 -76.26927185]
[52.43533325 -90.67305756]
[48.24832153 -105.07683563]
[43.13145065 -90.97656250]
[31.71382904 -81.24836731]
[16.97999382 -78.43516541]
[2.78133559 -83.27232361]
[-7.17065001 -94.49542236]
[-10.27453804 -109.17077637]
[-5.71898031 -123.46227264]
[5.30521250 -133.63415527]
[19.91634178 -137.02751160]
[34.29509354 -132.75534058]
[44.68246841 -121.93513489]
[42.67845154 -136.80065918]
[33.16680145 -149.44340515]
[39.13436127 -163.09030151]
[37.13034821 -177.95582581]
[35.12633514 -192.82135010]
[33.12232208 -207.68687439]
[31.11830711 -222.55241394]
[22.10183907 -228.63615417]
[18.00635910 -238.47521973]
[19.96113205 -248.72837830]
[27.08355141 -256.05532837]
[25.52302933 -270.97393799]
[23.96250534 -285.89254761]
[22.40198326 -300.81112671]
[19.72799110 -304.23220825]
[18.41388702 -307.95211792]
[18.38662720 -311.50662231]
[19.42991447 -314.50299072]
[21.21990013 -316.66033936]
[20.55011559 -331.64535522]
[19.88033104 -346.63040161]
[19.21054459 -361.61544800]
[18.54076004 -376.60049438]
[17.87097549 -391.58551025]
[3.03179193 -394.15704346]
[-10.90748692 -399.85885620]
[-23.29489517 -408.42425537]
[-33.55105209 -419.45263672]
[-41.19626236 -432.42819214]
[-45.87293625 -446.74401855]
[-47.36234665 -461.73052979]
[-45.59482574 -476.68679810]
[-40.65304947 -490.91329956]
[-32.76814651 -503.74459839]
[-22.30891037 -514.58056641]
[-9.76453972 -522.91442871]
[4.27824211 -528.35632324]
[19.16263008 -530.65173340]
[34.19245148 -529.69335938]
[48.66474152 -525.52600098]
[61.90259552 -518.34454346]
[73.28686523 -508.48492432]
[82.28507233 -496.40823364]
[88.47637177 -482.67938232]
[91.57117462 -467.94042969]
[91.42473602 -452.88079834]
[88.04390717 -438.20483398]
[81.58680725 -424.59893799]
[72.35545349 -412.69952393]
[60.78160477 -403.06314087]
[47.40660095 -396.14047241]
[32.85601425 -392.25531006]
[33.52579880 -377.27026367]
[34.19558334 -362.28521729]
[34.86536789 -347.30020142]
[35.53515244 -332.31515503]
[36.20494080 -317.33010864]
[37.32058716 -302.37167358]
[38.88111115 -287.45306396]
[40.44163513 -272.53445435]
[42.00215530 -257.61584473]
[54.47417450 -242.83966064]
[45.98383713 -224.55642700]
[47.98785019 -209.69088745]
[49.99186325 -194.82536316]
[51.99587631 -179.95983887]
[53.99988937 -165.09431458]
[63.36820221 -153.51484680]
[57.54397964 -138.80467224]
[59.54799652 -123.93914795]
[62.65210342 -109.26384735]
[66.83911896 -94.86006165]
[71.02613068 -80.45628357]
[75.21314240 -66.05249786]
[79.40014648 -51.64871979]
[86.54744720 -64.83644104]
[100.45283508 -70.46141815]
[114.75894928 -65.95197296]
[122.92523193 -53.36976624]
[121.21816254 -38.46721649]
[110.41819763 -28.05756950]
[95.46293640 -26.89997292]
[83.18864441 -35.52518082]
[93.06466675 -24.37558365]
[87.90309906 -9.42002296]
[90.56889343 5.34119415]
[100.44490814 16.49079132]
[95.28334045 31.44635201]
[97.94913483 46.20756912]
[100.61492920 60.96878815]
[103.28072357 75.73000336]
[105.94652557 90.49121857]
[114.42702484 78.11862183]
[128.84214783 73.97082520]
[142.60148621 79.94412994]
[149.41447449 93.30764008]
[146.16627502 107.95172882]
[134.34194946 117.18131256]
[119.34741211 116.77676392]
[108.03704834 106.92140198]
[109.15270233 121.87985992]
[110.26834869 136.83830261]
[111.38399506 151.79676819]
[112.49964905 166.75521851]
[113.61529541 181.71366882]
[124.76524353 189.26968384]
[129.45903015 201.68655396]
[126.19268036 214.35197449]
[116.37563324 222.69793701]
[117.26844788 237.67134094]
[118.16126251 252.64474487]
[119.72178650 267.56335449]
[121.94690704 282.39739990]
[124.17201996 297.23144531]
[126.39714050 312.06549072]
[130.76493835 320.08795166]
[128.54324341 327.13677979]
[130.54725647 342.00231934]
[132.55126953 356.86785889]
[146.65458679 367.21752930]
[148.86561584 384.23007202]
[138.30052185 397.31506348]
[140.52563477 412.14910889]
[150.22445679 424.64883423]
[144.46073914 438.38305664]
[146.68586731 453.21710205]
[156.57537842 461.49722290]
[158.12329102 473.89834595]
[151.04101562 483.70486450]
[153.04502869 498.57037354]
[155.04904175 513.43591309]
[169.93540955 516.12866211]
[183.26014709 523.29156494]
[193.71778870 534.22283936]
[200.28382874 547.85156250]
[202.31498718 562.84252930]
[199.61225891 577.72711182]
[192.44044495 591.04699707]
[181.50216675 601.49731445]
[167.86904907 608.05426025]
[152.87669373 610.07537842]
[137.99394226 607.36267090]
[124.67883301 600.18194580]
[114.23583984 589.23663330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[9 192]
[10 191]
[12 189]
[13 188]
[17 185]
[18 184]
[19 183]
[20 181]
[21 180]
[22 179]
[23 178]
[30 177]
[31 176]
[32 175]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[47 152]
[48 151]
[50 149]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[66 136]
[67 135]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[77 127]
[78 126]
[79 125]
[80 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
