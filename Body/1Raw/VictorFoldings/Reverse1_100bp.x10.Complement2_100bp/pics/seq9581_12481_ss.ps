%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[106.54872131 493.23391724]
[113.62014771 479.95574951]
[123.01121521 468.20321655]
[134.40206909 458.37655640]
[147.40472412 450.81048584]
[142.36781311 436.68145752]
[137.33088684 422.55242920]
[132.29397583 408.42337036]
[120.73219299 399.03326416]
[123.38620758 383.43624878]
[118.34928894 369.30722046]
[113.31237793 355.17819214]
[108.27545929 341.04916382]
[103.23854065 326.92013550]
[98.20162201 312.79110718]
[96.16407013 327.65206909]
[89.89118195 341.27743530]
[79.92562866 352.48849487]
[67.12952423 360.31536865]
[52.60986328 364.08093262]
[37.62274170 363.45944214]
[23.46469879 358.50466919]
[11.36054325 349.64523315]
[2.35740542 337.64758301]
[-2.76585221 323.54965210]
[-3.56601691 308.57098389]
[0.02613363 294.00747681]
[7.69984245 281.11892700]
[18.79125786 271.02038574]
[32.34085846 264.58547974]
[47.17647171 262.37084961]
[62.01466751 264.56811523]
[75.57179260 270.98715210]
[86.67502594 281.07272339]
[94.36247253 293.94900513]
[93.46965790 278.97558594]
[92.57684326 264.00219727]
[91.68402863 249.02877808]
[90.79121399 234.05537415]
[89.89839935 219.08197021]
[89.00557709 204.10856628]
[85.46952820 197.61871338]
[88.21262360 188.90589905]
[87.54283905 173.92085266]
[78.18181610 185.64140320]
[63.75044632 189.73233032]
[49.63128281 184.66781616]
[41.09042358 172.33680725]
[41.31339264 157.33847046]
[50.21703339 145.26679993]
[64.48050690 140.62423706]
[78.78388977 145.14234924]
[87.79275513 157.13708496]
[88.90840149 142.17863464]
[81.25497437 132.81105042]
[82.06201935 120.33978271]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[91.26733398 78.34943390]
[95.08964539 72.02394867]
[96.65016937 57.10534668]
[98.21069336 42.18674088]
[99.77121735 27.26813507]
[101.22063446 12.33832645]
[102.55886841 -2.60185838]
[103.89710236 -17.54204369]
[105.23533630 -32.48222733]
[106.57357025 -47.42241287]
[107.24336243 -62.40745163]
[107.24336243 -77.40745544]
[107.24336243 -92.40745544]
[106.23909760 -107.37379456]
[104.23508453 -122.23932648]
[102.23107147 -137.10485840]
[99.67523956 -151.88551331]
[96.57112885 -166.56080627]
[93.46701813 -181.23611450]
[90.36290741 -195.91140747]
[80.11773682 -184.95530701]
[65.15290833 -185.98194885]
[56.49994659 -198.23455811]
[60.53748703 -212.68093872]
[74.28920746 -218.67178345]
[87.61685181 -211.79216003]
[85.61283875 -226.65769958]
[83.60882568 -241.52322388]
[81.60481262 -256.38876343]
[79.60079956 -271.25427246]
[77.59677887 -286.11981201]
[62.64464569 -288.20217896]
[48.80925369 -294.24240112]
[37.11727905 -303.79229736]
[28.43634796 -316.14315796]
[23.41064072 -330.37850952]
[22.41309929 -345.44195557]
[25.51774597 -360.21569824]
[32.49419785 -373.60345459]
[42.82475662 -384.61172485]
[55.74282074 -392.42364502]
[70.28978729 -396.45950317]
[85.38618469 -396.41986084]
[99.91174316 -392.30758667]
[112.78857422 -384.42788696]
[123.06114197 -373.36547852]
[129.96714783 -359.94125366]
[132.99411011 -345.15139771]
[131.91741943 -330.09338379]
[126.81697083 -315.88464355]
[118.07125092 -303.57958984]
[106.32925415 -294.09127808]
[92.46231079 -288.12380981]
[94.46632385 -273.25830078]
[96.47033691 -258.39276123]
[98.47434998 -243.52723694]
[100.47836304 -228.66171265]
[102.48237610 -213.79617310]
[105.03820801 -199.01551819]
[108.14231873 -184.34022522]
[111.24642944 -169.66491699]
[114.35054016 -154.98962402]
[124.59571838 -165.94572449]
[139.56054688 -164.91908264]
[148.21350098 -152.66647339]
[144.17596436 -138.22009277]
[130.42424011 -132.22924805]
[117.09659576 -139.10887146]
[119.10061646 -124.24333954]
[121.10462952 -109.37780762]
[128.76684570 -122.27317047]
[142.13655090 -129.07398987]
[157.07096863 -127.67296600]
[168.94253540 -118.50421906]
[174.07270813 -104.40877533]
[170.87182617 -89.75427246]
[160.33175659 -79.08156586]
[145.71841431 -75.69770813]
[131.55993652 -80.65122223]
[122.24336243 -92.40745544]
[122.24336243 -77.40745544]
[122.24336243 -62.40745163]
[133.58815002 -72.22048950]
[148.55831909 -71.27495575]
[158.57827759 -60.11249924]
[157.90812683 -45.12747574]
[146.93177795 -34.90399170]
[131.93696594 -35.29852295]
[121.51375580 -46.08417892]
[120.17552185 -31.14399338]
[118.83728790 -16.20380974]
[117.49905396 -1.26362419]
[116.16082001 13.67656040]
[118.69503784 20.61914825]
[114.68981934 28.82865906]
[113.12930298 43.74726486]
[111.56877899 58.66586685]
[110.00825500 73.58447266]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[114.51456451 129.34461975]
[103.86685181 143.29428101]
[102.75120544 158.25273132]
[102.52787781 173.25106812]
[103.19766235 188.23611450]
[103.97898865 203.21574402]
[104.87180328 218.18914795]
[105.76461792 233.16255188]
[106.65743256 248.13597107]
[107.55024719 263.10937500]
[108.44306183 278.08276367]
[109.33588409 293.05618286]
[112.33065796 307.75418091]
[117.36756897 321.88320923]
[122.40448761 336.01223755]
[127.44140625 350.14126587]
[132.47831726 364.27029419]
[137.51524353 378.39932251]
[149.43728638 388.80004883]
[146.42300415 403.38647461]
[151.45991516 417.51550293]
[156.49684143 431.64453125]
[161.53375244 445.77355957]
[176.39035034 443.40795898]
[191.42866516 443.81277466]
[206.13648987 446.97424316]
[220.01286316 452.78460693]
[232.58518982 461.04605103]
[243.42524719 471.47714233]
[252.16383362 483.72262573]
[258.50329590 497.36541748]
[262.22775269 511.94085693]
[263.21029663 526.95251465]
[261.41751099 541.88903809]
[256.91046143 556.24176025]
[249.84260559 569.52185059]
[240.45471191 581.27691650]
[229.06651306 591.10662842]
[216.06588745 598.67620850]
[201.89564514 603.72784424]
[187.03840637 606.08941650]
[172.00019836 605.68054199]
[157.29324341 602.51513672]
[143.41842651 596.70104980]
[130.84832764 588.43621826]
[120.01107788 578.00219727]
[111.27579498 565.75433350]
[104.94000244 552.10986328]
[101.21948242 537.53338623]
[100.24096680 522.52148438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[43 165]
[44 164]
[53 163]
[54 162]
[57 160]
[59 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[70 141]
[71 140]
[72 139]
[73 129]
[74 128]
[75 127]
[76 121]
[77 120]
[78 119]
[79 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
