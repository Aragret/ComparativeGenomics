%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[99.59468079 504.06161499]
[87.62129211 513.12554932]
[74.67659760 520.73809814]
[60.93564606 526.79638672]
[46.58427048 531.21844482]
[31.81655884 533.94445801]
[16.83222771 534.93762207]
[1.83392036 534.18438721]
[-12.97552681 531.69506836]
[-27.39583206 527.50323486]
[-41.23197937 521.66564941]
[-54.29684830 514.26123047]
[-66.41374969 505.39007568]
[-77.41882324 495.17221069]
[-87.16323090 483.74578857]
[-95.51519775 471.26535034]
[-102.36176300 457.89968872]
[-107.61034393 443.82952881]
[-111.18995667 429.24520874]
[-113.05218506 414.34390259]
[-113.17185211 399.32717896]
[-111.54734039 384.39810181]
[-108.20060730 369.75854492]
[-103.17693329 355.60656738]
[-96.54424286 342.13348389]
[-88.39223480 329.52151489]
[-78.83116913 317.94125366]
[-67.99033356 307.54928589]
[-56.01634979 298.48617554]
[-43.07114410 290.87445068]
[-29.32978821 284.81710815]
[-14.97811794 280.39599609]
[-0.21022443 277.67095947]
[14.77417374 276.67883301]
[29.77243042 277.43304443]
[44.58171082 279.92337036]
[48.76872253 265.51959229]
[52.95573425 251.11579895]
[47.85995102 234.32293701]
[61.25802231 221.69071960]
[65.23011780 207.22619629]
[69.09442902 192.73249817]
[72.85072327 178.21043396]
[76.60702515 163.68838501]
[71.01351929 147.05468750]
[84.02954102 134.02914429]
[87.56921387 119.45277405]
[91.10888672 104.87640381]
[89.79956818 96.92289734]
[94.81128693 90.11015320]
[98.56758881 75.58809662]
[102.32389069 61.06603241]
[106.08019257 46.54397583]
[95.84973145 30.59869194]
[100.44429016 12.54867935]
[116.49333191 3.74278712]
[119.81559753 -10.88467312]
[123.13785553 -25.51213264]
[126.46011353 -40.13959503]
[129.78237915 -54.76705551]
[133.10462952 -69.39451599]
[123.48503876 -57.88523865]
[111.04467010 -49.50447845]
[96.76461029 -44.91318130]
[81.77105713 -44.47343445]
[67.24645996 -48.21991730]
[54.33629608 -55.85716629]
[44.05870438 -66.78287506]
[37.22422409 -80.13539886]
[34.37184906 -94.86170197]
[35.72653198 -109.80039978]
[41.18143463 -123.77337646]
[50.30636215 -135.67864990]
[62.38168335 -144.57734680]
[76.45509338 -149.76763916]
[91.41669464 -150.84024048]
[106.08655548 -147.71052551]
[119.30775452 -140.62535095]
[130.03761292 -130.14344788]
[137.42993164 -117.09148407]
[140.90170288 -102.49878693]
[140.17849731 -87.51279449]
[147.64624023 -100.52174377]
[155.11398315 -113.53070068]
[162.58172607 -126.53964996]
[170.04946899 -139.54859924]
[177.51719666 -152.55755615]
[184.98493958 -165.56651306]
[184.81958008 -169.90547180]
[185.93167114 -173.69067383]
[187.99029541 -176.58851624]
[190.59014893 -178.40713501]
[193.30426025 -179.10841370]
[201.53306580 -191.64981079]
[209.66827393 -204.25213623]
[217.70944214 -216.91465759]
[225.75062561 -229.57717896]
[233.79179382 -242.23970032]
[222.13444519 -251.70663452]
[211.65499878 -262.46292114]
[202.49514771 -274.36306763]
[194.77880859 -287.24618530]
[188.61030579 -300.93801880]
[184.07307434 -315.25338745]
[181.22846985 -329.99871826]
[180.11497498 -344.97457886]
[180.74761963 -359.97845459]
[183.11788940 -374.80743408]
[187.19369507 -389.26095581]
[192.91992188 -403.14355469]
[200.21914673 -416.26751709]
[208.99263000 -428.45532227]
[219.12174988 -439.54211426]
[230.46949768 -449.37805176]
[242.88241577 -457.83001709]
[256.19262695 -464.78375244]
[270.22015381 -470.14523315]
[284.77523804 -473.84191895]
[299.66110229 -475.82382202]
[314.67639160 -476.06414795]
[329.61804199 -474.55966187]
[344.28399658 -471.33068848]
[358.47589111 -466.42086792]
[372.00183105 -459.89666748]
[384.67889404 -451.84625244]
[396.33560181 -442.37857056]
[406.81436157 -431.62158203]
[415.97338867 -419.72079468]
[423.68887329 -406.83718872]
[429.85647583 -393.14492798]
[434.39273071 -378.82925415]
[437.23635864 -364.08374023]
[438.34887695 -349.10778809]
[437.71520996 -334.10397339]
[435.34396362 -319.27514648]
[431.26718140 -304.82189941]
[425.54003906 -290.93966675]
[418.23992920 -277.81622314]
[409.46563721 -265.62899780]
[399.33578491 -254.54286194]
[387.98736572 -244.70770264]
[375.57388306 -236.25656128]
[362.26321411 -229.30369568]
[348.23535156 -223.94316101]
[333.67999268 -220.24745178]
[318.79400635 -218.26654053]
[303.77871704 -218.02720642]
[288.83715820 -219.53269958]
[274.17141724 -222.76266479]
[259.97982788 -227.67341614]
[246.45431519 -234.19853210]
[238.41314697 -221.53601074]
[230.37197876 -208.87347412]
[222.33079529 -196.21095276]
[221.39871216 -188.87931824]
[214.07446289 -183.42100525]
[205.84565735 -170.87960815]
[197.99389648 -158.09877014]
[190.52615356 -145.08981323]
[183.05841064 -132.08085632]
[175.59066772 -119.07190704]
[168.12294006 -106.06295776]
[160.65519714 -93.05400085]
[153.18745422 -80.04505157]
[147.73208618 -66.07225800]
[144.40983582 -51.44479370]
[141.08757019 -36.81733322]
[137.76531982 -22.18987465]
[134.44305420 -7.56241369]
[131.12078857 7.06504631]
[139.14891052 15.17156124]
[142.29948425 26.26163101]
[139.67851257 37.61171722]
[131.82443237 46.37609863]
[120.60224915 50.30027390]
[116.84594727 64.82233429]
[113.08965302 79.34439087]
[109.33335114 93.86645508]
[105.68526459 108.41607666]
[102.14559174 122.99244690]
[98.60591888 137.56881714]
[104.63773346 148.96969604]
[101.38944244 161.03752136]
[91.12908936 167.44468689]
[87.37278748 181.96673584]
[83.61648560 196.48880005]
[84.49716949 205.58067322]
[79.69464111 211.19828796]
[75.72254944 225.66281128]
[81.41223907 237.23822021]
[77.80609131 249.20397949]
[67.35951233 255.30281067]
[63.17250443 269.70660400]
[58.98549271 284.11038208]
[72.82202911 289.94705200]
[85.88739014 297.35061646]
[98.00489044 306.22094727]
[109.01064301 316.43807983]
[118.75581360 327.86386108]
[127.10861206 340.34371948]
[133.95606995 353.70895386]
[139.20558167 367.77874756]
[142.78617859 382.36282349]
[144.64939880 397.26400757]
[144.77006531 412.28073120]
[143.14654541 427.20993042]
[139.80079651 441.84967041]
[134.77806091 456.00201416]
[128.14627075 469.47552490]
[119.99510956 482.08804321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 194]
[37 193]
[38 192]
[40 189]
[41 188]
[42 186]
[43 185]
[44 184]
[46 181]
[47 180]
[48 179]
[50 178]
[51 177]
[52 176]
[53 175]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[93 157]
[94 156]
[95 154]
[96 153]
[97 152]
[98 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
