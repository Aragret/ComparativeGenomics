%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[66.59293365 475.28662109]
[58.38231277 487.85409546]
[48.99707031 499.57043457]
[38.52483749 510.32626343]
[27.06339455 520.02111816]
[14.71975613 528.56457520]
[1.60917485 535.87677002]
[-12.14593697 541.88946533]
[-26.41714859 546.54650879]
[-41.07120895 549.80438232]
[-55.97129822 551.63275146]
[-70.97828674 552.01452637]
[-85.95206451 550.94610596]
[-100.75281525 548.43743896]
[-115.24234772 544.51202393]
[-129.28536987 539.20642090]
[-142.75076294 532.57031250]
[-155.51281738 524.66552734]
[-167.45234680 515.56585693]
[-178.45790100 505.35641479]
[-188.42669678 494.13238525]
[-197.26567078 481.99862671]
[-204.89228821 469.06842041]
[-211.23533630 455.46249390]
[-216.23559570 441.30789185]
[-219.84637451 426.73675537]
[-222.03396606 411.88516235]
[-222.77795410 396.89175415]
[-222.07136536 381.89654541]
[-219.92082214 367.03955078]
[-216.34637451 352.45947266]
[-211.38143921 338.29241943]
[-205.07232666 324.67071533]
[-197.47798157 311.72152710]
[-188.66931152 299.56576538]
[-178.72853088 288.31692505]
[-167.74847412 278.08004761]
[-155.83168030 268.95068359]
[-143.08938599 261.01406860]
[-129.64057922 254.34436035]
[-115.61082458 249.00379944]
[-101.13112640 245.04225159]
[-86.33667755 242.49670410]
[-71.36561584 241.39091492]
[-56.35771561 241.73524475]
[-41.45311737 243.52644348]
[-26.79097557 246.74780273]
[-12.50819492 251.36923218]
[1.26186967 257.34759521]
[8.53509903 244.22891235]
[15.80832863 231.11021423]
[23.08155823 217.99151611]
[30.15866280 204.76599121]
[37.03807449 191.43656921]
[43.91748810 178.10713196]
[29.05200005 180.11143494]
[18.11142921 169.84967041]
[19.16075897 154.88641357]
[31.42646217 146.25202942]
[45.86671829 150.31147766]
[51.83676529 164.07060242]
[59.68851852 151.28976440]
[59.75799942 136.39532471]
[73.57431793 128.68688965]
[81.42607880 115.90604401]
[89.27783203 103.12520599]
[97.03422546 90.28626251]
[104.69481659 77.38993835]
[112.35541534 64.49361420]
[100.91021729 51.88310623]
[93.91667938 36.37514114]
[92.04573822 19.48443794]
[95.46859741 2.85702872]
[103.84111023 -11.89013672]
[116.33832550 -23.32643890]
[131.73580933 -30.34637070]
[148.52955627 -32.27639389]
[165.08291626 -28.93955421]
[172.16003418 -42.16508102]
[179.23713684 -55.39060974]
[174.88407898 -70.34683228]
[182.24966431 -83.65858459]
[196.53497314 -87.71639252]
[203.61207581 -100.94191742]
[203.30110168 -116.76007080]
[216.12789917 -124.33121490]
[223.20501709 -137.55674744]
[230.28211975 -150.78227234]
[229.98764038 -155.11439514]
[230.98654175 -158.93101501]
[232.95797729 -161.88887024]
[235.50251770 -163.78408813]
[238.19454956 -164.56587219]
[246.04629517 -177.34671021]
[253.89805603 -190.12756348]
[261.74981689 -202.90840149]
[269.60156250 -215.68923950]
[277.45330811 -228.47007751]
[265.67620850 -237.78865051]
[255.08389282 -248.43475342]
[245.82511902 -260.25894165]
[238.02984619 -273.09521484]
[231.80752563 -286.76339722]
[227.24548340 -301.07159424]
[224.40777588 -315.81890869]
[223.33422852 -330.79837036]
[224.03994751 -345.79965210]
[226.51498413 -360.61215210]
[230.72460938 -375.02795410]
[236.60974121 -388.84466553]
[244.08773804 -401.86834717]
[253.05363464 -413.91613770]
[263.38156128 -424.81890869]
[274.92651367 -434.42358398]
[287.52642822 -442.59539795]
[301.00445557 -449.21954346]
[315.17132568 -454.20309448]
[329.82821655 -457.47607422]
[344.76931763 -458.99249268]
[359.78491211 -458.73110962]
[374.66418457 -456.69558716]
[389.19827271 -452.91448975]
[403.18313599 -447.44091797]
[416.42242432 -440.35168457]
[428.73031616 -431.74630737]
[439.93402100 -421.74560547]
[449.87622070 -410.48999023]
[458.41735840 -398.13748169]
[465.43756104 -384.86141968]
[470.83825684 -370.84826660]
[474.54360962 -356.29467773]
[476.50161743 -341.40499878]
[476.68478394 -326.38824463]
[475.09057617 -311.45523071]
[471.74130249 -296.81561279]
[466.68405151 -282.67486572]
[459.98980713 -269.23153687]
[451.75250244 -256.67431641]
[442.08779907 -245.17955017]
[431.13140869 -234.90853882]
[419.03707886 -226.00550842]
[405.97463989 -218.59544373]
[392.12747192 -212.78234863]
[377.68994141 -208.64785767]
[362.86474609 -206.24998474]
[347.85998535 -205.62240601]
[332.88632202 -206.77394104]
[318.15399170 -209.68841553]
[303.86975098 -214.32490540]
[290.23416138 -220.61833191]
[282.38241577 -207.83749390]
[274.53063965 -195.05664062]
[266.67889404 -182.27580261]
[258.82714844 -169.49496460]
[250.97538757 -156.71411133]
[243.50764465 -143.70516968]
[236.43054199 -130.47962952]
[229.35343933 -117.25411224]
[230.17060852 -102.38193512]
[216.83760071 -93.86481476]
[209.76049805 -80.63928223]
[214.30989075 -66.50285339]
[207.32109070 -52.98947525]
[192.46266174 -48.31350327]
[185.38555908 -35.08797836]
[178.30845642 -21.86244965]
[187.89727783 -12.95794964]
[195.07359314 -2.00306702]
[199.41343689 10.36415005]
[200.65821838 23.42195702]
[198.73014832 36.40702820]
[193.73704529 48.55908203]
[185.96635437 59.16540146]
[175.86856079 67.60261536]
[164.03111267 73.37336731]
[151.14422607 76.13558960]
[137.96067810 75.72282410]
[125.25174713 72.15420532]
[117.59114838 85.05053711]
[109.93054962 97.94686127]
[108.84868622 105.93448639]
[102.05867767 110.97695923]
[94.20691681 123.75780487]
[86.35516357 136.53865051]
[85.72407532 152.34725952]
[72.46936035 159.14152527]
[64.61760712 171.92236328]
[57.24691772 184.98654175]
[50.36750412 198.31597900]
[43.48809433 211.64540100]
[43.41779709 218.25650024]
[40.46289825 223.11094666]
[36.20025253 225.26475525]
[28.92702293 238.38343811]
[21.65379333 251.50213623]
[14.38056374 264.62081909]
[26.74611855 273.13250732]
[38.23244095 282.79791260]
[48.73228455 293.52676392]
[58.14760971 305.21896362]
[66.39051056 317.76528931]
[73.38401031 331.04858398]
[79.06282806 344.94488525]
[83.37393951 359.32437134]
[86.27707672 374.05282593]
[87.74514771 388.99270630]
[87.76444244 404.00454712]
[86.33477020 418.94815063]
[83.46949768 433.68402100]
[79.19536591 448.07455444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 196]
[50 195]
[51 194]
[52 193]
[53 190]
[54 189]
[55 188]
[61 187]
[62 186]
[64 184]
[65 183]
[66 182]
[67 180]
[68 179]
[69 178]
[78 166]
[79 165]
[80 164]
[83 161]
[84 160]
[86 158]
[87 157]
[88 156]
[93 155]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
