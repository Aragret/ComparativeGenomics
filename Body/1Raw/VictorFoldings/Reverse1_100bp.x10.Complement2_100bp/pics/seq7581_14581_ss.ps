%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[144.93165588 414.84735107]
[144.52235413 399.83901978]
[145.68412781 384.87011719]
[148.40423584 370.10467529]
[152.65287781 355.70443726]
[158.38349915 341.82717896]
[165.53332520 328.62500000]
[174.02400208 316.24252319]
[183.76249695 304.81536865]
[194.64213562 294.46881104]
[206.54370117 285.31619263]
[198.69194031 272.53533936]
[190.84017944 259.75451660]
[184.66047668 255.70072937]
[182.96830750 246.72441101]
[175.30770874 233.82807922]
[167.64710999 220.93176270]
[159.79534912 208.15090942]
[151.75418091 195.48838806]
[143.71301270 182.82586670]
[135.67184448 170.16334534]
[127.63066101 157.50080872]
[114.99014282 162.00880432]
[101.68624878 163.77267456]
[88.30773163 162.71434021]
[75.44664764 158.88064575]
[63.67214203 152.44123840]
[53.50529480 143.68110657]
[45.39601898 132.98791504]
[39.70318985 120.83486938]
[36.67873383 107.75979614]
[36.45649719 94.34132385]
[39.04631805 81.17327118]
[44.33358002 68.83837891]
[52.08430481 57.88250732]
[61.95548630 48.79050446]
[54.48774719 35.78155518]
[47.02000427 22.77260208]
[39.55226517 9.76364899]
[32.08452225 -3.24530315]
[25.09813499 -9.12987518]
[24.60409164 -16.50399971]
[17.33086205 -29.62269402]
[10.05763340 -42.74138641]
[2.78440380 -55.86008072]
[-4.48882580 -68.97877502]
[-12.05320454 -81.93177795]
[-19.90496063 -94.71261597]
[-36.29657364 -103.10288239]
[-36.09079361 -120.65066528]
[-44.13196945 -133.31318665]
[-52.17314148 -145.97570801]
[-60.21431351 -158.63824463]
[-68.25548553 -171.30076599]
[-76.29666138 -183.96328735]
[-84.33782959 -196.62580872]
[-97.76026154 -189.90054321]
[-111.79421997 -184.56770325]
[-126.29569244 -180.68205261]
[-141.11587524 -178.28344727]
[-156.10267639 -177.39649963]
[-171.10232544 -178.03031921]
[-185.96087646 -180.17839050]
[-200.52587891 -183.81867981]
[-214.64787292 -188.91383362]
[-228.18191528 -195.41154480]
[-240.98916626 -203.24517822]
[-252.93817139 -212.33430481]
[-263.90631104 -222.58567810]
[-273.78106689 -233.89410400]
[-282.46105957 -246.14352417]
[-289.85726929 -259.20825195]
[-295.89376831 -272.95422363]
[-300.50860596 -287.24038696]
[-303.65444946 -301.92013550]
[-305.29901123 -316.84280396]
[-305.42541504 -331.85528564]
[-304.03234863 -346.80355835]
[-301.13412476 -361.53417969]
[-296.76049805 -375.89602661]
[-290.95629883 -389.74166870]
[-283.78112793 -402.92910767]
[-275.30859375 -415.32293701]
[-265.62567139 -426.79602051]
[-254.83168030 -437.23062134]
[-243.03741455 -446.51965332]
[-230.36389160 -454.56781006]
[-216.94116211 -461.29251099]
[-202.90696716 -466.62472534]
[-188.40533447 -470.50973511]
[-173.58503723 -472.90768433]
[-158.59820557 -473.79397583]
[-143.59858704 -473.15951538]
[-128.74012756 -471.01077271]
[-114.17527771 -467.36984253]
[-100.05351257 -462.27407837]
[-86.51974487 -455.77575684]
[-73.71285248 -447.94155884]
[-61.76425171 -438.85189819]
[-50.79655457 -428.60006714]
[-40.92230606 -417.29119873]
[-32.24283600 -405.04138184]
[-24.84720993 -391.97631836]
[-18.81131554 -378.23010254]
[-14.19709492 -363.94372559]
[-11.05189610 -349.26385498]
[-9.40799332 -334.34109497]
[-9.28225613 -319.32861328]
[-10.67597485 -304.38040161]
[-13.57484722 -289.64990234]
[-17.94912720 -275.28826904]
[-23.75392723 -261.44287109]
[-30.92967796 -248.25576782]
[-39.40274811 -235.86230469]
[-49.08618927 -224.38963318]
[-59.88063049 -213.95550537]
[-71.67530823 -204.66699219]
[-63.63413620 -192.00445557]
[-55.59296036 -179.34193420]
[-47.55178833 -166.67941284]
[-39.51061630 -154.01689148]
[-31.46944237 -141.35435486]
[-23.42827034 -128.69183350]
[-11.69453526 -125.75142670]
[-4.89166975 -115.26787567]
[-7.12411737 -102.56436920]
[0.72763789 -89.78353119]
[4.05364895 -88.61306763]
[6.97797871 -85.77346039]
[8.72229958 -81.47106171]
[8.62986851 -76.25200653]
[15.90309811 -63.13331223]
[23.17632675 -50.01461792]
[30.44955635 -36.89592361]
[37.72278595 -23.77722931]
[45.09347534 -10.71304417]
[52.56121826 2.29590797]
[60.02895737 15.30486012]
[67.49669647 28.31381226]
[74.96443939 41.32276535]
[90.89785004 36.85771561]
[107.44364166 36.64078903]
[123.48863220 40.68658447]
[137.95333862 48.72290039]
[149.86460876 60.20906448]
[158.42105103 74.37230682]
[163.04699707 90.25975037]
[163.43124390 106.80249786]
[159.54792786 122.88758087]
[151.65830994 137.43283081]
[140.29318237 149.45964050]
[148.33436584 162.12216187]
[156.37553406 174.78468323]
[164.41670227 187.44721985]
[172.45788574 200.10974121]
[178.13133240 203.50436401]
[180.83317566 208.50407410]
[180.54344177 213.27116394]
[188.20404053 226.16748047]
[195.86463928 239.06381226]
[203.62103271 251.90275574]
[211.47277832 264.68359375]
[219.32453918 277.46444702]
[232.86834717 270.98501587]
[247.01525879 265.95681763]
[261.61026001 262.43496704]
[276.49343872 260.45800781]
[291.50177002 260.04760742]
[306.47073364 261.20828247]
[321.23638916 263.92733765]
[335.63693237 268.17492676]
[349.51458740 273.90454102]
[362.71731567 281.05337524]
[375.10040283 289.54315186]
[386.52825928 299.28082275]
[396.87561035 310.15969849]
[406.02911377 322.06060791]
[413.88845825 334.85311890]
[420.36755371 348.39706421]
[425.39538574 362.54409790]
[428.91690063 377.13919067]
[430.89349365 392.02243042]
[431.30352783 407.03076172]
[430.14248657 421.99972534]
[427.42309570 436.76528931]
[423.17514038 451.16574097]
[417.44519043 465.04324341]
[410.29602051 478.24578857]
[401.80593872 490.62869263]
[392.06799316 502.05630493]
[381.18887329 512.40338135]
[369.28775024 521.55657959]
[356.49505615 529.41564941]
[342.95092773 535.89440918]
[328.80377197 540.92187500]
[314.20861816 544.44305420]
[299.32531738 546.41931152]
[284.31698608 546.82897949]
[269.34805298 545.66754150]
[254.58253479 542.94781494]
[240.18220520 538.69952393]
[226.30482483 532.96923828]
[213.10246277 525.81970215]
[200.71975708 517.32934570]
[189.29240417 507.59112549]
[178.94557190 496.71173096]
[169.79264832 484.81039429]
[161.93392944 472.01751709]
[155.45549011 458.47323608]
[150.42832947 444.32595825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 163]
[12 162]
[13 161]
[15 160]
[16 159]
[17 158]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 127]
[48 126]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
