%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[131.03372192 573.86901855]
[115.96028137 573.19531250]
[101.57513428 568.64233398]
[88.85906219 560.52050781]
[78.67909241 549.38360596]
[71.72929382 535.99096680]
[68.48352051 521.25567627]
[69.16307831 506.18252563]
[73.72162628 491.79913330]
[81.84836578 479.08621216]
[92.98918915 468.91052246]
[106.38451385 461.96591187]
[121.12100220 458.72583008]
[121.79079437 443.74078369]
[122.46057892 428.75573730]
[123.13036346 413.77069092]
[123.35369110 398.77236938]
[123.13036346 383.77401733]
[107.79861450 375.93975830]
[98.49874878 361.34436035]
[97.86885071 343.96023560]
[106.17260742 328.57327271]
[121.20182037 319.46527100]
[120.53203583 304.48022461]
[119.86225128 289.49520874]
[111.14989471 281.10345459]
[110.46924591 268.62463379]
[118.72979736 258.71878052]
[118.28319550 243.72543335]
[117.83658600 228.73208618]
[117.38998413 213.73873901]
[116.94337463 198.74539185]
[116.49677277 183.75204468]
[116.05016327 168.75868225]
[113.05538940 154.06068420]
[107.60003662 140.08789062]
[102.14467621 126.11508942]
[96.68931580 112.14228821]
[90.92328644 98.29480743]
[84.84944916 84.57953644]
[78.77561951 70.86427307]
[66.31410217 69.87508392]
[55.51827621 63.71728134]
[48.40647888 53.61273575]
[46.27815247 41.51433563]
[49.47675705 29.72867393]
[57.33606339 20.47628975]
[51.67327499 6.58626223]
[46.01049042 -7.30376434]
[40.34770203 -21.19379234]
[34.68491745 -35.08381653]
[19.51082802 -35.23458481]
[5.58802128 -41.16741562]
[-4.97409582 -51.94959259]
[-10.58826923 -65.91629028]
[-10.42787933 -80.92758942]
[-4.54850721 -94.69633484]
[6.12528467 -105.13661957]
[0.46249816 -119.02664185]
[-5.20028830 -132.91667175]
[-10.86307526 -146.80670166]
[-16.52586174 -160.69673157]
[-24.66082954 -148.09425354]
[-39.56988525 -146.44500732]
[-50.26263428 -156.96476746]
[-48.85677338 -171.89874268]
[-36.38865280 -180.23815918]
[-22.05052757 -175.83663940]
[-26.66453743 -190.10937500]
[-37.77177429 -196.66621399]
[-41.32096100 -208.64898682]
[-35.93238449 -219.47903442]
[-40.33338165 -233.81887817]
[-44.73438263 -248.15872192]
[-49.13537979 -262.49856567]
[-52.89234161 -247.97668457]
[-62.16718292 -236.18782043]
[-75.39693451 -229.11862183]
[-90.35214996 -227.96035767]
[-104.51261139 -232.90821838]
[-115.49202728 -243.12841797]
[-121.44018555 -256.89865112]
[-121.35470581 -271.89840698]
[-115.25000000 -285.59994507]
[-104.15480804 -295.69436646]
[-89.93888092 -300.48049927]
[-74.99784088 -299.15188599]
[-61.84951401 -291.93234253]
[-52.70891190 -280.03704834]
[-54.26943588 -294.95565796]
[-55.82995605 -309.87426758]
[-57.39048004 -324.79287720]
[-72.22305298 -327.70596313]
[-85.53723145 -334.86306763]
[-96.14910889 -345.62780762]
[-103.11508942 -359.04296875]
[-105.81577301 -373.91567993]
[-104.01100922 -388.92349243]
[-97.86127472 -402.73190308]
[-87.91339874 -414.11306763]
[-75.05194855 -422.05502319]
[-60.42054749 -425.85153198]
[-45.32020950 -425.16503906]
[-31.09365273 -420.05654907]
[-19.00588799 -410.98034668]
[-10.13175201 -398.74346924]
[-5.26032782 -384.43402100]
[-4.82477808 -369.32437134]
[-8.86383247 -354.75805664]
[-17.01833916 -342.03030396]
[-28.56320763 -332.27288818]
[-42.47187424 -326.35339355]
[-40.91135406 -311.43478394]
[-39.35083008 -296.51617432]
[-37.79030609 -281.59756470]
[-34.79553223 -266.89956665]
[-30.39453316 -252.55972290]
[-25.99353600 -238.21987915]
[-21.59253693 -223.88003540]
[-8.11964417 -212.63511658]
[-12.39180374 -194.72338867]
[-7.77779436 -180.45065308]
[-2.63583469 -166.35951233]
[3.02695179 -152.46948242]
[8.68973827 -138.57945251]
[14.35252476 -124.68943024]
[20.01531219 -110.79940796]
[34.94612885 -110.79779816]
[48.77628708 -105.06437683]
[59.38636017 -94.44405365]
[65.13751221 -80.53319550]
[65.12457275 -65.43970490]
[59.31837845 -51.46361542]
[48.57494354 -40.74660492]
[54.23773193 -26.85657883]
[59.90051651 -12.96655083]
[65.56330109 0.92347580]
[71.22608948 14.81350231]
[88.55233002 18.23007011]
[100.46409607 31.48000336]
[102.05149078 49.38418579]
[92.49088287 64.79043579]
[98.56472015 78.50570679]
[104.63854980 92.22097015]
[108.00294495 94.10597992]
[110.52011108 97.46480560]
[111.55047607 101.88581848]
[110.66211700 106.68693542]
[116.11747742 120.65972900]
[121.57283020 134.63252258]
[127.02819061 148.60533142]
[128.36895752 133.66537476]
[133.33483887 119.51121521]
[141.62214661 107.00839233]
[152.72412109 96.92146301]
[165.96186829 89.86724091]
[180.52589417 86.27709198]
[195.52560425 86.37055969]
[210.04376221 90.14192200]
[223.19256592 97.36056519]
[234.16798401 107.58506775]
[242.29884338 120.19018555]
[247.08793640 134.40512085]
[248.24243164 149.36062622]
[245.69171143 164.14216614]
[239.59176636 177.84584045]
[230.31559753 189.63366699]
[218.43046570 198.78480530]
[204.66313171 204.73966980]
[189.85546875 207.13412476]
[174.91299438 205.82173157]
[160.74943542 200.88276672]
[148.23089600 192.61921692]
[138.12287903 181.53642273]
[131.04351807 168.31208801]
[131.49012756 183.30543518]
[131.93672180 198.29878235]
[132.38333130 213.29212952]
[132.82994080 228.28547668]
[133.27655029 243.27882385]
[133.72314453 258.27218628]
[143.76190186 273.70932007]
[134.84729004 288.82540894]
[135.51707458 303.81045532]
[136.18685913 318.79550171]
[148.16172791 323.63101196]
[157.38479614 332.60372925]
[162.51058960 344.35537720]
[162.80998230 357.12603760]
[158.27386475 369.01770020]
[149.60908508 378.27633667]
[138.12869263 383.55068970]
[138.35202026 398.54904175]
[140.71014404 402.19503784]
[141.68713379 406.01733398]
[141.39717102 409.56011963]
[140.09071350 412.45144653]
[138.11540222 414.44049072]
[137.44561768 429.42553711]
[136.77583313 444.41055298]
[136.10604858 459.39559937]
[150.49470520 463.93750000]
[163.21704102 472.04949951]
[173.40560913 483.17852783]
[180.36575317 496.56579590]
[183.62290955 511.29852295]
[182.95498657 526.37225342]
[178.40754700 540.75915527]
[170.29063416 553.47833252]
[159.15766907 563.66259766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 201]
[14 200]
[15 199]
[16 198]
[17 193]
[18 192]
[23 185]
[24 184]
[25 183]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 151]
[36 150]
[37 149]
[38 148]
[39 144]
[40 143]
[41 142]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[68 122]
[69 121]
[72 119]
[73 118]
[74 117]
[75 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
