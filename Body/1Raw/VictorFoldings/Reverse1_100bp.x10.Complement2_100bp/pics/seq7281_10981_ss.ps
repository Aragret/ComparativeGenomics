%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[136.56652832 721.77050781]
[122.52051544 716.48638916]
[108.90866852 710.16741943]
[95.80709839 702.84887695]
[83.28908539 694.57171631]
[71.42462921 685.38220215]
[60.28008652 675.33172607]
[49.91778183 664.47656250]
[40.39566422 652.87738037]
[31.76698875 640.59899902]
[24.08000755 627.71014404]
[17.37771416 614.28289795]
[11.69758606 600.39227295]
[7.07139206 586.11608887]
[3.52500391 571.53405762]
[1.07825387 556.72778320]
[-0.25517431 541.78009033]
[-0.46782351 526.77453613]
[0.44149554 511.79501343]
[2.46769738 496.92535400]
[5.59945059 482.24868774]
[9.81924152 467.84710693]
[15.10346985 453.80114746]
[21.42258453 440.18936157]
[28.74124527 427.08782959]
[37.01852417 414.56991577]
[46.20812988 402.70553589]
[56.25867081 391.56106567]
[67.11393738 381.19885254]
[78.71322632 371.67684937]
[90.99166107 363.04827881]
[103.88058472 355.36141968]
[117.30790710 348.65924072]
[131.19854736 342.97924805]
[145.47480774 338.35317993]
[160.05685425 334.80691528]
[157.61112976 320.00762939]
[155.16540527 305.20837402]
[152.71968079 290.40908813]
[150.27395630 275.60983276]
[147.82821655 260.81054688]
[145.38249207 246.01127625]
[142.06024170 231.38381958]
[137.87322998 216.98004150]
[133.68621826 202.57626343]
[129.07220459 188.30352783]
[124.03528595 174.17449951]
[118.47606659 160.24269104]
[112.40222931 146.52743530]
[106.32839203 132.81216431]
[100.25456238 119.09689331]
[86.77592468 113.77970123]
[80.90879822 100.53118896]
[86.03017426 86.97693634]
[79.95633698 73.26167297]
[73.88250732 59.54640579]
[67.80867004 45.83113861]
[61.73483658 32.11587143]
[50.00572968 26.75015640]
[45.22917557 15.20163727]
[49.46181107 3.86976314]
[45.90176010 1.38380229]
[43.55406952 -1.78682590]
[42.48511124 -5.17691946]
[42.60335541 -8.34750748]
[43.68160248 -10.93507957]
[38.64468384 -25.06410789]
[33.60776901 -39.19313812]
[28.57085228 -53.32216644]
[23.53393555 -67.45119476]
[21.39003563 -52.60519791]
[14.81985378 -39.12066269]
[4.44961548 -28.28285027]
[-8.73225307 -21.12475395]
[-23.46933937 -18.32863617]
[-38.35699844 -20.16100502]
[-51.97623444 -26.44721222]
[-63.02894974 -36.58809662]
[-70.46166992 -49.61709213]
[-73.56594849 -64.29235840]
[-72.04591370 -79.21514130]
[-66.04644012 -92.96309662]
[-56.13936615 -104.22586060]
[-43.26896667 -111.92993927]
[-28.66196442 -115.34101868]
[-13.71060753 -114.13398743]
[0.16003607 -108.42388916]
[11.62790489 -98.75496674]
[19.60040092 -86.04776764]
[18.48475266 -101.00621796]
[17.36910439 -115.96467590]
[16.25345612 -130.92312622]
[7.51117659 -144.10960388]
[14.28043556 -157.37709045]
[13.16478634 -172.33555603]
[-1.36515510 -176.72248840]
[-13.32676983 -186.06509399]
[-21.10234642 -199.09983826]
[-23.64030457 -214.06390381]
[-20.59740448 -228.93351746]
[-12.38517284 -241.69767761]
[-0.11424807 -250.63012695]
[14.55582905 -254.52285767]
[29.64105034 -252.84938049]
[43.10126495 -245.83602905]
[53.11608887 -234.43130493]
[58.33109665 -220.17759705]
[58.04100418 -205.00260925]
[52.28504562 -190.95863342]
[41.84166336 -179.94499207]
[28.12323952 -173.45120239]
[29.23888779 -158.49275208]
[37.90137100 -146.37620544]
[31.21190834 -132.03877258]
[32.32755661 -117.08032227]
[33.44320679 -102.12187195]
[34.55885696 -87.16341400]
[37.66296387 -72.48811340]
[42.69988251 -58.35908508]
[47.73679733 -44.23005295]
[52.77371216 -30.10102463]
[57.81063080 -15.97199535]
[63.26598740 -1.99919748]
[77.83563232 7.78304577]
[75.45010376 26.04203606]
[81.52393341 39.75730515]
[87.59777069 53.47256851]
[93.67160797 67.18783569]
[99.74543762 80.90310669]
[113.22407532 86.22029877]
[119.09120178 99.46881104]
[113.96982574 113.02306366]
[120.04366302 126.73832703]
[126.11749268 140.45359802]
[132.19132996 154.16886902]
[139.94746399 141.32977295]
[154.80081177 139.23736572]
[165.80203247 149.43408203]
[164.84143066 164.40330505]
[152.62713623 173.11024475]
[138.16432190 169.13757324]
[143.20123291 183.26660156]
[146.60700989 185.96005249]
[148.76181030 189.26480103]
[149.62709045 192.71250916]
[149.32034302 195.87043762]
[148.08999634 198.38925171]
[152.27700806 212.79302979]
[156.46401978 227.19680786]
[162.79487610 213.59828186]
[175.85331726 206.21739197]
[190.76884460 207.80706787]
[201.97834778 217.77436829]
[205.30094910 232.40174866]
[199.49742126 246.23355103]
[186.73231506 254.11087036]
[171.76670837 253.09564209]
[160.18176270 243.56555176]
[162.62750244 258.36483765]
[165.07322693 273.16409302]
[167.51895142 287.96337891]
[169.96467590 302.76263428]
[172.41040039 317.56192017]
[174.85612488 332.36117554]
[189.80381775 331.02734375]
[204.80937195 330.81430054]
[219.78889465 331.72323608]
[234.65859985 333.74905396]
[249.33534241 336.88040161]
[263.73703003 341.09982300]
[277.78314209 346.38366699]
[291.39511108 352.70242310]
[304.49679565 360.02075195]
[317.01495361 368.29769897]
[328.87957764 377.48696899]
[340.02429199 387.53723145]
[350.38681030 398.39221191]
[359.90911865 409.99127197]
[368.53802490 422.26947021]
[376.22521973 435.15817261]
[382.92776489 448.58532715]
[388.60812378 462.47583008]
[393.23455811 476.75195312]
[396.78121948 491.33392334]
[399.22824097 506.14013672]
[400.56192017 521.08782959]
[400.77484131 536.09338379]
[399.86578369 551.07293701]
[397.83984375 565.94262695]
[394.70834351 580.61932373]
[390.48880005 595.02099609]
[385.20483398 609.06701660]
[378.88595581 622.67895508]
[371.56753540 635.78057861]
[363.29046631 648.29864502]
[354.10107422 660.16320801]
[344.05072021 671.30780029]
[333.19564819 681.67022705]
[321.59652710 691.19244385]
[309.31823730 699.82122803]
[296.42944336 707.50830078]
[283.00222778 714.21075439]
[269.11169434 719.89099121]
[254.83552551 724.51733398]
[240.25354004 728.06384277]
[225.44728088 730.51068115]
[210.49958801 731.84423828]
[195.49401855 732.05706787]
[180.51451111 731.14788818]
[165.64483643 729.12176514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 149]
[44 148]
[45 147]
[46 142]
[47 141]
[48 135]
[49 134]
[50 133]
[51 132]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[61 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[89 117]
[90 116]
[91 115]
[92 114]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
