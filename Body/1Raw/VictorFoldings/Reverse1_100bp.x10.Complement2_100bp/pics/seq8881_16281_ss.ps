%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[59.66119003 648.34655762]
[49.92966461 659.78576660]
[38.89022446 669.96850586]
[26.70385742 678.74627686]
[13.54827309 685.99114990]
[-0.38467878 691.59741211]
[-14.89181614 695.48333740]
[-29.76158142 697.59222412]
[-44.77713013 697.89337158]
[-59.71949005 696.38232422]
[-74.37075806 693.08117676]
[-88.51727295 688.03802490]
[-101.95274353 681.32641602]
[-114.48123932 673.04425049]
[-125.92005157 663.31231689]
[-136.10238647 652.27246094]
[-144.87973022 640.08575439]
[-152.12408447 626.92993164]
[-157.72982788 612.99676514]
[-161.61520386 598.48950195]
[-163.72355652 583.61962891]
[-164.02410889 568.60406494]
[-162.51251221 553.66180420]
[-159.21080017 539.01062012]
[-154.16712952 524.86431885]
[-147.45503235 511.42907715]
[-139.17239380 498.90090942]
[-129.44001770 487.46243286]
[-118.39981842 477.28054810]
[-106.21279144 468.50366211]
[-93.05667114 461.25976562]
[-79.12329865 455.65454102]
[-64.61586761 451.76971436]
[-49.74594879 449.66192627]
[-34.73037720 449.36193848]
[-19.78812981 450.87408447]
[-5.13710833 454.17633057]
[-0.10019220 440.04730225]
[4.93672419 425.91827393]
[9.97364044 411.78924561]
[15.01055622 397.66021729]
[20.04747200 383.53118896]
[24.76760674 369.29321289]
[21.10500717 354.85595703]
[32.55075455 343.93322754]
[36.95175552 329.59338379]
[41.35275269 315.25354004]
[45.75374985 300.91369629]
[50.15474701 286.57385254]
[54.12684250 272.10931396]
[57.44910431 257.48187256]
[60.55321503 242.80656433]
[63.65732193 228.13127136]
[66.76143646 213.45596313]
[60.42813873 203.14985657]
[62.89411926 190.89820862]
[73.37209320 183.37658691]
[76.69435120 168.74913025]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.13777924 42.50823593]
[108.02304840 27.78834343]
[110.90832520 13.06845093]
[113.79359436 -1.65144002]
[116.67887115 -16.37133217]
[119.34466553 -31.13254929]
[121.79039001 -45.93181992]
[121.56706238 -60.93015671]
[118.68179321 -75.65004730]
[115.79651642 -90.36994171]
[112.91124725 -105.08982849]
[110.02597046 -119.80972290]
[107.14070129 -134.52961731]
[102.41903687 -142.34906006]
[104.32376099 -149.49005127]
[101.65796661 -164.25126648]
[98.99217224 -179.01248169]
[96.32637787 -193.77371216]
[92.95325470 -197.75730896]
[91.58253479 -202.19290161]
[92.05106354 -206.24203491]
[93.88658142 -209.25254822]
[91.88256836 -224.11808777]
[89.87855530 -238.98361206]
[74.92641449 -241.06597900]
[61.09102249 -247.10621643]
[49.39905167 -256.65609741]
[40.71811676 -269.00695801]
[35.69240952 -283.24230957]
[34.69487000 -298.30575562]
[37.79951477 -313.07949829]
[44.77596664 -326.46725464]
[55.10652542 -337.47552490]
[68.02458954 -345.28744507]
[82.57156372 -349.32333374]
[97.66795349 -349.28366089]
[112.19351196 -345.17138672]
[125.07034302 -337.29168701]
[135.34291077 -326.22927856]
[142.24891663 -312.80505371]
[145.27587891 -298.01519775]
[144.19918823 -282.95718384]
[139.09873962 -268.74847412]
[130.35302734 -256.44338989]
[118.61102295 -246.95507812]
[104.74407959 -240.98762512]
[106.74809265 -226.12210083]
[108.75210571 -211.25656128]
[111.08759308 -196.43949890]
[113.75338745 -181.67828369]
[116.41918945 -166.91706848]
[119.08498383 -152.15585327]
[121.86059570 -137.41488647]
[124.74586487 -122.69499207]
[127.63113403 -107.97510529]
[130.51640320 -93.25521088]
[133.40168762 -78.53532410]
[136.28695679 -63.81542969]
[140.23260498 -78.28718567]
[147.48384094 -91.41805267]
[157.63055420 -102.46540833]
[170.09892273 -110.80448151]
[184.18377686 -115.96364594]
[199.08854675 -117.65113068]
[213.97030640 -115.77149963]
[227.98742676 -110.43105316]
[240.34716797 -101.93182373]
[250.35052490 -90.75448608]
[257.43176270 -77.53115845]
[261.19036865 -63.00970459]
[261.41381836 -48.01136780]
[258.08947754 -33.38438416]
[251.40531921 -19.95597649]
[241.73939514 -8.48558903]
[229.63833618 0.37807333]
[215.78654480 6.13372755]
[200.96737671 8.45586300]
[186.01893616 7.21315193]
[171.78665161 2.47587585]
[159.07539368 -5.48804951]
[148.60406494 -16.22822571]
[140.96487427 -29.13724327]
[136.58966064 -43.48609161]
[134.14393616 -28.68682098]
[136.14756775 -24.35156059]
[135.44909668 -18.71160126]
[131.39875793 -13.48605919]
[128.51348877 1.23383260]
[125.62821198 15.95372391]
[122.74294281 30.67361450]
[119.85767365 45.39350510]
[121.73134613 49.78649902]
[120.86525726 55.40316391]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[91.32181549 172.07138062]
[87.99954987 186.69883728]
[93.85268402 204.15800476]
[81.43673706 216.56007385]
[78.33262634 231.23536682]
[75.22851562 245.91067505]
[72.12440491 260.58596802]
[73.80728149 266.97967529]
[72.24335480 272.44329834]
[68.70321655 275.64898682]
[70.07317352 279.76934814]
[70.06185150 283.71450806]
[68.89393616 287.07180786]
[66.90506744 289.54385376]
[64.49459839 290.97485352]
[60.09359741 305.31469727]
[55.69260025 319.65454102]
[51.29159927 333.99438477]
[46.89060211 348.33422852]
[50.23841476 363.79718018]
[39.10745239 373.69421387]
[40.27791977 378.78115845]
[39.46169662 383.35140991]
[37.18830109 386.73471069]
[34.17650223 388.56811523]
[29.13958549 402.69714355]
[24.10267067 416.82617188]
[19.06575394 430.95520020]
[14.02883720 445.08422852]
[8.99192142 459.21325684]
[22.42789268 465.92385864]
[34.95700836 474.20507812]
[46.39654922 483.93615723]
[56.57970047 494.97521973]
[65.35795593 507.16125488]
[72.60330200 520.31658936]
[78.21009064 534.24932861]
[82.09654999 548.75628662]
[84.20600128 563.62597656]
[84.50769043 578.64154053]
[82.99721527 593.58398438]
[79.69659424 608.23535156]
[74.65397644 622.38208008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 188]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 177]
[51 174]
[52 173]
[53 172]
[54 171]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[64 162]
[65 161]
[66 160]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 150]
[73 149]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[81 118]
[82 117]
[83 116]
[84 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
