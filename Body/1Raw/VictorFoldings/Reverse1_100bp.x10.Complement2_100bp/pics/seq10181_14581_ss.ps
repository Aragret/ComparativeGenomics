%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[21.37599754 716.15856934]
[7.33950329 721.46063232]
[-6.98895597 725.91381836]
[-21.55808830 729.50213623]
[-36.31573868 732.21270752]
[-51.20907974 734.03588867]
[-66.18479919 734.96508789]
[-81.18927765 734.99700928]
[-96.16881561 734.13159180]
[-111.06977844 732.37182617]
[-125.83883667 729.72406006]
[-140.42311096 726.19781494]
[-154.77040100 721.80566406]
[-168.82933044 716.56335449]
[-182.54959106 710.48962402]
[-195.88204956 703.60626221]
[-208.77900696 695.93786621]
[-221.19425964 687.51190186]
[-233.08338928 678.35852051]
[-244.40382385 668.51055908]
[-255.11505127 658.00317383]
[-265.17871094 646.87396240]
[-274.55880737 635.16290283]
[-283.22171021 622.91180420]
[-291.13644409 610.16455078]
[-298.27468872 596.96679688]
[-304.61087036 583.36572266]
[-310.12228394 569.41009521]
[-314.78924561 555.14984131]
[-318.59503174 540.63598633]
[-321.52600098 525.92053223]
[-323.57168579 511.05612183]
[-324.72476196 496.09597778]
[-324.98107910 481.09365845]
[-324.33975220 466.10284424]
[-322.80303955 451.17724609]
[-320.37646484 436.37023926]
[-317.06869507 421.73486328]
[-312.89160156 407.32348633]
[-307.86013794 393.18774414]
[-301.99227905 379.37817383]
[-295.30908203 365.94427490]
[-287.83441162 352.93408203]
[-279.59506226 340.39419556]
[-270.62051392 328.36950684]
[-260.94290161 316.90307617]
[-250.59687805 306.03588867]
[-239.61946106 295.80691528]
[-228.04995728 286.25274658]
[-215.92977905 277.40759277]
[-203.30232239 269.30310059]
[-190.21278381 261.96829224]
[-176.70802307 255.42942810]
[-162.83636475 249.70989990]
[-148.64749146 244.83021545]
[-134.19219971 240.80780029]
[-119.52220917 237.65707397]
[-104.69005585 235.38932800]
[-89.74882507 234.01266479]
[-74.75201416 233.53201294]
[-59.75329208 233.94909668]
[-44.80636597 235.26242065]
[-29.96473122 237.46728516]
[-15.28152180 240.55578613]
[-0.80930126 244.51689148]
[13.40012455 249.33641052]
[27.29589081 254.99708557]
[33.77538681 241.46873474]
[40.25488281 227.94039917]
[46.32871628 214.22512817]
[51.99150085 200.33509827]
[49.63153839 185.62864685]
[62.00611877 175.77064514]
[67.66890717 161.88061523]
[73.22813416 147.94880676]
[78.68348694 133.97601318]
[84.13884735 120.00321960]
[89.59420013 106.03041840]
[94.84091949 91.97795105]
[99.87783813 77.84892273]
[104.91475677 63.71989059]
[109.95166779 49.59086227]
[114.98858643 35.46183014]
[120.02550507 21.33280182]
[122.14012909 6.48260403]
[121.24730682 -8.49080181]
[120.35449219 -23.46420670]
[119.46167755 -38.43761444]
[118.56886292 -53.41101837]
[117.67604828 -68.38442230]
[109.13106537 -81.69960022]
[116.09710693 -94.86483765]
[112.46245575 -103.24500275]
[115.30415344 -110.06750488]
[114.63436890 -125.05254364]
[113.96457672 -140.03758240]
[99.57169342 -144.85519409]
[87.89354706 -154.54978943]
[80.50951385 -167.81027222]
[78.41821289 -182.84326172]
[81.90248871 -197.61567688]
[90.49111938 -210.12966919]
[103.02255249 -218.69282532]
[117.80202484 -222.14703369]
[132.83073425 -220.02516174]
[146.07617188 -212.61415100]
[155.74699402 -200.91630554]
[160.53530884 -186.51364136]
[159.79351807 -171.35401917]
[153.62197876 -157.48764038]
[142.85530090 -146.78982544]
[128.94961548 -140.70736694]
[129.61940002 -125.72232819]
[130.28918457 -110.73728943]
[131.07051086 -95.75765228]
[139.55163574 -83.51348114]
[132.64945984 -69.27723694]
[133.54226685 -54.30383301]
[134.43508911 -39.33042908]
[135.32789612 -24.35702324]
[136.22071838 -9.38361740]
[137.11352539 5.58978844]
[142.92832947 -8.23729038]
[151.54324341 -20.51667404]
[162.56634521 -30.68973160]
[175.49617004 -38.29365921]
[189.74449158 -42.98252869]
[204.66310120 -44.54302216]
[219.57330322 -42.90415573]
[233.79678345 -38.14048386]
[246.68646240 -30.46871758]
[257.65597534 -20.23787689]
[266.20623779 -7.91339445]
[271.94830322 5.94404840]
[274.62094116 20.70402908]
[274.10253906 35.69506836]
[270.41671753 50.23517609]
[263.73110962 63.66286850]
[254.34992981 75.36727905]
[242.69992065 84.81593323]
[229.31106567 91.57898712]
[214.79251099 95.34875488]
[199.80470276 95.95375061]
[185.02952576 93.36643982]
[171.13914490 87.70453644]
[158.76547241 79.22560883]
[148.47142029 68.31540680]
[140.72532654 55.47025681]
[135.87954712 41.27453232]
[134.15452576 26.36971855]
[129.11761475 40.49874878]
[124.08069611 54.62777710]
[119.04378510 68.75680542]
[114.00686646 82.88583374]
[108.96994781 97.01486206]
[110.08689117 102.13993835]
[108.25283813 107.52599335]
[103.56700134 111.48577881]
[98.11164093 125.45857239]
[92.65628815 139.43136597]
[87.20092773 153.40417480]
[86.99497223 162.53628540]
[81.55892944 167.54339600]
[75.89614868 181.43342590]
[77.85107422 197.13339233]
[65.88153076 205.99789429]
[60.21874237 219.88790894]
[60.96232224 224.16589355]
[60.36589432 228.06573486]
[58.71287918 231.21263123]
[56.37930679 233.36228943]
[53.78322601 234.41989136]
[47.30373001 247.94824219]
[40.82423401 261.47659302]
[53.94488144 268.75561523]
[66.60671997 276.80627441]
[78.76444244 285.59976196]
[90.37450409 295.10461426]
[101.39535522 305.28674316]
[111.78755188 316.10977173]
[121.51387787 327.53494263]
[130.53952026 339.52130127]
[138.83216858 352.02600098]
[146.36215210 365.00424194]
[153.10249329 378.40960693]
[159.02906799 392.19406128]
[164.12066650 406.30825806]
[168.35906982 420.70172119]
[171.72909546 435.32290649]
[174.21867371 450.11941528]
[175.81889343 465.03836060]
[176.52404785 480.02630615]
[176.33157349 495.02960205]
[175.24220276 509.99450684]
[173.25981140 524.86749268]
[170.39149475 539.59527588]
[166.64752197 554.12518311]
[162.04130554 568.40521240]
[156.58932495 582.38415527]
[150.31111145 596.01208496]
[143.22911072 609.24011230]
[135.36869812 622.02093506]
[126.75801849 634.30877686]
[117.42787170 646.05969238]
[107.41166687 657.23156738]
[96.74526978 667.78448486]
[85.46685028 677.68060303]
[73.61679077 686.88446045]
[61.23751450 695.36322021]
[48.37332535 703.08642578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 174]
[68 173]
[69 172]
[70 167]
[71 166]
[73 164]
[74 163]
[75 161]
[76 160]
[77 159]
[78 158]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[92 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
