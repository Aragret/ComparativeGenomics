%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[155.04632568 485.33175659]
[159.58537292 470.98312378]
[166.83673096 457.79586792]
[176.52171326 446.27685547]
[188.26803589 436.86886597]
[201.62420654 429.93350220]
[197.43719482 415.52972412]
[186.45481873 405.46807861]
[190.03247070 390.05670166]
[185.84545898 375.65292358]
[181.65844727 361.24914551]
[177.15081787 346.94244385]
[172.32482910 332.73999023]
[167.49882507 318.53753662]
[162.67283630 304.33508301]
[157.53086853 290.24392700]
[152.07551575 276.27114868]
[146.62016296 262.29833984]
[141.16479492 248.32554626]
[135.70944214 234.35275269]
[130.25408936 220.37994385]
[124.79872894 206.40715027]
[120.86204529 203.70315552]
[118.58219910 198.49746704]
[119.39578247 191.93624878]
[114.35886383 177.80720520]
[109.32194519 163.67817688]
[106.84998322 162.35624695]
[104.75271606 159.97546387]
[103.43605804 156.67367554]
[103.24858093 152.73294067]
[104.43318939 148.55554199]
[101.53585815 146.54611206]
[99.46786499 143.03349304]
[98.92511749 138.42277527]
[100.39628601 133.41450500]
[96.85661316 118.83813477]
[84.53751373 111.21016693]
[81.11830139 97.12985229]
[88.56700897 84.70153809]
[85.02733612 70.12516022]
[81.48766327 55.54878616]
[77.94799042 40.97240829]
[64.02428436 38.54816437]
[52.11229706 31.02294922]
[43.99286652 19.56082344]
[40.86490631 5.91141176]
[43.16849518 -7.85713434]
[50.52326965 -19.67149734]
[61.79078674 -27.76540375]
[58.46852875 -42.39286423]
[55.14626694 -57.02032471]
[51.82400894 -71.64778137]
[46.68892288 -57.55413818]
[36.00796890 -47.02241516]
[21.84346771 -42.08612442]
[6.93036556 -43.69839096]
[-5.85185099 -51.54791260]
[-14.03513718 -64.11906433]
[-16.03942871 -78.98455048]
[-11.47772789 -93.27408600]
[-1.23082793 -104.22859192]
[12.72275543 -109.73290253]
[27.68880463 -108.72424316]
[40.77760696 -101.39736176]
[49.46241760 -89.16578674]
[48.79262924 -104.15082550]
[48.12284470 -119.13586426]
[47.45306015 -134.12091064]
[46.78327560 -149.10594177]
[36.72581100 -137.97726440]
[21.88576889 -135.79252625]
[9.04781342 -143.55053711]
[4.08128643 -157.70446777]
[9.25681782 -171.78330994]
[22.20822334 -179.35041809]
[37.01429367 -176.94621277]
[46.90657425 -165.66812134]
[47.79939270 -180.64154053]
[37.58681107 -192.40338135]
[38.70555496 -207.57582092]
[49.98160934 -217.23947144]
[50.87442398 -232.21287537]
[51.20940018 -247.20913696]
[50.98607254 -262.20745850]
[50.76274490 -277.20581055]
[50.53941727 -292.20416260]
[50.31608963 -307.20248413]
[50.09276199 -322.20083618]
[49.86943436 -337.19915771]
[49.64610672 -352.19750977]
[39.83829880 -367.78237915]
[48.97698212 -382.76406860]
[48.53037643 -397.75741577]
[40.38562393 -411.32110596]
[47.74055481 -424.27310181]
[47.29394913 -439.26644897]
[46.84734344 -454.25979614]
[32.88378906 -460.42276001]
[22.98359871 -472.03952026]
[19.11246300 -486.80355835]
[22.03899574 -501.78347778]
[31.18213463 -514.00500488]
[44.72650146 -521.04156494]
[59.98285294 -521.49597168]
[73.92202759 -515.27807617]
[83.77639771 -503.62246704]
[87.58936310 -488.84329224]
[84.60385895 -473.87500000]
[75.41266632 -461.68957520]
[61.84069061 -454.70642090]
[62.28729630 -439.71307373]
[62.73390198 -424.71972656]
[70.84671021 -412.22845459]
[63.52372360 -398.20404053]
[63.97032928 -383.21069336]
[72.55678558 -374.69015503]
[73.05156708 -362.20260620]
[64.64444733 -352.42083740]
[64.86777496 -337.42248535]
[65.09110260 -322.42416382]
[65.31443024 -307.42581177]
[65.53775787 -292.42749023]
[65.76108551 -277.42913818]
[65.98441315 -262.43081665]
[66.20774078 -247.43246460]
[78.36901855 -256.21331787]
[92.85691833 -252.32731628]
[98.99148560 -238.63911438]
[92.25055695 -225.23912048]
[77.60328674 -222.00531006]
[65.84783173 -231.32006836]
[64.95501709 -216.34664917]
[75.00283051 -205.41152954]
[74.31069183 -190.21365356]
[62.77279663 -179.74871826]
[61.87998199 -164.77531433]
[61.76831436 -149.77572632]
[62.43809891 -134.79069519]
[63.10788345 -119.80564880]
[63.77766800 -104.82061005]
[64.44745636 -89.83557129]
[66.45146942 -74.97004700]
[69.77372742 -60.34258270]
[73.09598541 -45.71512222]
[76.41824341 -31.08766365]
[92.05906677 -27.81422424]
[104.75273132 -18.01194954]
[111.92691803 -3.60311174]
[112.09990692 12.55022621]
[105.18632507 27.21467400]
[92.52436829 37.43273544]
[96.06404114 52.00911331]
[99.60371399 66.58548737]
[103.14338684 81.16186523]
[115.46248627 88.78983307]
[118.88169861 102.87014771]
[111.43299103 115.29846191]
[114.97266388 129.87483215]
[118.83696747 144.36853027]
[123.45097351 158.64126587]
[128.48789978 172.77029419]
[133.52481079 186.89932251]
[138.77153015 200.95179749]
[144.22688293 214.92459106]
[149.68223572 228.89738464]
[155.13760376 242.87019348]
[160.59295654 256.84298706]
[166.04830933 270.81579590]
[171.50367737 284.78857422]
[175.58006287 288.04898071]
[177.77836609 292.13806152]
[178.09744263 296.20172119]
[176.87528992 299.50909424]
[181.70127869 313.71154785]
[186.52728271 327.91400146]
[191.35328674 342.11645508]
[195.28001404 345.55560303]
[197.29354858 349.73880005]
[197.43086243 353.81262207]
[196.06224060 357.06213379]
[200.24925232 371.46591187]
[204.43626404 385.86968994]
[215.71810913 396.96157837]
[211.84097290 411.34271240]
[216.02798462 425.74649048]
[231.02072144 424.44116211]
[245.98001099 426.08615112]
[260.33084106 430.61819458]
[273.52163696 437.86318970]
[285.04534912 447.54257202]
[294.45901489 459.28430176]
[301.40084839 472.63711548]
[305.60400391 487.08770752]
[306.90692139 502.08065796]
[305.25952148 517.03967285]
[300.72512817 531.38977051]
[293.47802734 544.57940674]
[283.79678345 556.10150146]
[272.05352783 565.51330566]
[258.69958496 572.45300293]
[244.24832153 576.65380859]
[229.25515747 577.95428467]
[214.29640198 576.30450439]
[199.94703674 571.76776123]
[186.75860596 564.51849365]
[175.23802185 554.83538818]
[165.82814026 543.09063721]
[158.89062500 529.73559570]
[154.69215393 515.28363037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[9 183]
[10 182]
[11 181]
[12 177]
[13 176]
[14 175]
[15 174]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[25 163]
[26 162]
[27 161]
[32 160]
[36 159]
[37 158]
[40 155]
[41 154]
[42 153]
[43 152]
[50 146]
[51 145]
[52 144]
[53 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[78 137]
[79 136]
[82 133]
[83 132]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[93 116]
[94 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
