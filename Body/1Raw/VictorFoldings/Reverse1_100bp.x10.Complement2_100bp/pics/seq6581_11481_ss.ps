%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[137.81486511 677.41125488]
[140.84652710 692.30682373]
[137.94223022 707.22772217]
[129.54486084 719.89862061]
[116.93494415 728.38739014]
[102.03542328 731.39947510]
[87.11834717 728.47552490]
[74.45847321 720.06146240]
[65.98632812 707.44042969]
[62.99386597 692.53692627]
[65.93740845 677.62371826]
[74.36808777 664.97491455]
[87.00028992 656.51940918]
[101.90769196 653.54656982]
[104.79296112 638.82666016]
[107.67823792 624.10675049]
[110.56350708 609.38690186]
[113.11933899 594.60620117]
[115.34445953 579.77215576]
[117.56957245 564.93811035]
[119.79469299 550.10406494]
[122.01980591 535.27001953]
[109.18378448 527.64337158]
[100.22132874 515.65093994]
[96.52313232 501.10140991]
[98.68291473 486.20431519]
[106.40238190 473.23422241]
[118.53196716 464.18347168]
[133.24194336 460.45620728]
[135.46705627 445.62216187]
[137.69216919 430.78811646]
[139.91729736 415.95407104]
[139.69396973 400.95574951]
[137.02816772 386.19451904]
[134.36236572 371.43328857]
[131.69657898 356.67208862]
[129.03077698 341.91085815]
[126.36498260 327.14965820]
[112.69181824 326.94369507]
[99.28929138 324.20657349]
[86.62200928 319.03152466]
[75.12941742 311.59628296]
[65.21051025 302.15701294]
[57.21002579 291.03955078]
[51.40645218 278.62802124]
[48.00231934 265.35168457]
[47.11714172 251.67001343]
[48.78322983 238.05690002]
[52.94450378 224.98406982]
[59.45837402 212.90490723]
[68.10065460 202.23861694]
[78.57323456 193.35572815]
[90.51440430 186.56520081]
[103.51132202 182.10371399]
[101.50730896 167.23818970]
[99.50329590 152.37266541]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[78.80294800 74.73294830]
[64.16649628 78.01539612]
[50.78708649 71.23370361]
[44.78159332 57.48837662]
[48.89565277 43.06358719]
[61.24837112 34.55416107]
[76.19225311 35.85048676]
[86.89595795 46.36157608]
[78.95404816 32.67813110]
[86.50100708 19.83707428]
[86.27767944 4.83873653]
[86.05435181 -10.15960121]
[85.83102417 -25.15793800]
[85.60769653 -40.15627670]
[74.54859161 -51.12596130]
[74.53575897 -66.33959198]
[85.06183624 -76.81515503]
[84.83850861 -91.81349182]
[84.61518097 -106.81182861]
[84.39185333 -121.81016541]
[74.58404541 -137.39503479]
[83.72272491 -152.37673950]
[83.27612305 -167.37008667]
[68.37874603 -169.39941406]
[54.01861572 -173.85321045]
[40.58747482 -180.61001587]
[28.45174408 -189.48548889]
[17.94248962 -200.23748779]
[9.34641361 -212.57269287]
[2.89802313 -226.15458679]
[-1.22676516 -240.61267090]
[-2.91542411 -255.55249023]
[-2.12188554 -270.56649780]
[1.13220179 -285.24508667]
[6.75806427 -299.18780518]
[14.60222435 -312.01428223]
[24.45068741 -323.37463379]
[36.03477859 -332.95895386]
[49.03847885 -340.50570679]
[63.10703659 -345.80905151]
[77.85665131 -348.72433472]
[92.88494110 -349.17196655]
[107.78192139 -347.13980103]
[122.14119720 -342.68319702]
[135.57102966 -335.92382812]
[147.70504761 -327.04602051]
[158.21223450 -316.29199219]
[166.80593872 -303.95513916]
[173.25170898 -290.37197876]
[177.37371826 -275.91311646]
[179.05949402 -260.97296143]
[178.26306152 -245.95912170]
[175.00614929 -231.28117371]
[169.37759399 -217.33952332]
[161.53097534 -204.51454163]
[151.68031311 -193.15608215]
[140.09437561 -183.57402039]
[127.08922577 -176.02976990]
[113.01964569 -170.72912598]
[98.26947021 -167.81669617]
[98.71607971 -152.82334900]
[107.30252838 -144.30282593]
[107.79730988 -131.81526184]
[99.39019012 -122.03349304]
[99.61351776 -107.03515625]
[99.83684540 -92.03681946]
[100.06017303 -77.03848267]
[110.89347839 -66.88096619]
[111.33361816 -51.67369843]
[100.60603333 -40.37960434]
[100.82936096 -25.38126564]
[101.05268860 -10.38292885]
[101.27601624 4.61540890]
[101.49934387 19.61374664]
[109.42527771 32.22441101]
[101.89429474 46.13824844]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[114.36882019 150.36865234]
[116.37283325 165.23417664]
[118.37684631 180.09970093]
[134.71847534 181.42279053]
[150.35890198 186.31790161]
[164.52767944 194.54087830]
[176.52749634 205.68370056]
[185.76850891 219.19473267]
[191.79736328 234.40603638]
[194.31942749 250.56637573]
[193.21315002 266.87832642]
[188.53596497 282.53765869]
[180.52130127 296.77291870]
[169.56690979 308.88351440]
[156.21517944 318.27404785]
[141.12620544 324.48385620]
[143.79199219 339.24508667]
[146.45779419 354.00628662]
[149.12358093 368.76751709]
[151.78938293 383.52871704]
[154.45518494 398.28994751]
[158.68464661 383.89855957]
[166.44932556 371.06463623]
[177.23423767 360.63940430]
[190.32403564 353.31430054]
[204.85054016 349.57519531]
[219.85023499 349.67007446]
[234.32826233 353.59265137]
[247.32434082 361.08276367]
[257.97650146 371.64364624]
[265.57818604 384.57476807]
[269.62524414 399.01849365]
[269.84924316 414.01681519]
[266.23529053 428.57495117]
[259.02313232 441.72732544]
[248.69110107 452.60156250]
[235.92448425 460.47644043]
[221.57005310 464.82962036]
[206.57987976 465.37237549]
[191.94819641 462.06872559]
[178.64549255 455.13775635]
[167.55409241 445.03921509]
[159.40962219 432.44290161]
[154.75132751 418.17919922]
[152.52621460 433.01324463]
[150.30110168 447.84729004]
[148.07598877 462.68133545]
[161.04498291 470.56045532]
[169.98526001 482.77169800]
[173.55955505 497.43588257]
[171.25349426 512.31103516]
[163.44923401 525.13513184]
[151.36262512 533.97027588]
[136.85385132 537.49517822]
[134.62873840 552.32922363]
[132.40361023 567.16326904]
[130.17849731 581.99731445]
[127.95338440 596.83135986]
[129.86550903 601.68841553]
[129.73626709 606.32916260]
[127.98990631 610.01226807]
[125.28340149 612.27215576]
[122.39812469 626.99206543]
[119.51285553 641.71191406]
[116.62757874 656.43182373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[29 192]
[30 191]
[31 190]
[32 189]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[61 142]
[62 141]
[63 140]
[71 139]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[80 130]
[81 129]
[82 128]
[83 127]
[85 124]
[86 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
