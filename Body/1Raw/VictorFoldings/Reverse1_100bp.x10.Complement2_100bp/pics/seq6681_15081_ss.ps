%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[139.66813660 656.69940186]
[132.69638062 643.38995361]
[127.64485931 629.23980713]
[124.61190033 614.52423096]
[123.65654755 599.52978516]
[124.79739380 584.54833984]
[128.01222229 569.87139893]
[133.23847961 555.78479004]
[140.37440491 542.56268311]
[149.28111267 530.46240234]
[159.78523254 519.71954346]
[171.68229675 510.54315186]
[184.74072266 503.11187744]
[198.70632935 497.57040405]
[195.16665649 482.99401855]
[191.62698364 468.41763306]
[188.08731079 453.84127808]
[184.54763794 439.26489258]
[181.00796509 424.68850708]
[170.48582458 414.14651489]
[174.74807739 398.91024780]
[171.20840454 384.33389282]
[159.37469482 379.23553467]
[152.53605652 368.08587646]
[153.38017273 354.83831787]
[161.82247925 344.34344482]
[158.50021362 329.71600342]
[154.74391174 315.19393921]
[150.55690002 300.79016113]
[146.36988831 286.38638306]
[142.18287659 271.98257446]
[131.20050049 261.92092896]
[134.77816772 246.50955200]
[130.59115601 232.10577393]
[126.40414429 217.70199585]
[122.21713257 203.29820251]
[111.23475647 193.23655701]
[114.81242371 177.82516479]
[101.67607117 170.89898682]
[97.22466278 156.35115051]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.29753876 47.32951736]
[71.05081940 33.27704620]
[65.11739349 26.33209991]
[65.83230591 18.97610283]
[60.79538727 4.84707260]
[55.75847244 -9.28195667]
[38.21791840 -13.87399197]
[27.04320145 -27.95252991]
[26.56082726 -45.76314926]
[36.77524185 -60.16930771]
[31.31988525 -74.14210510]
[25.86452866 -88.11490631]
[13.63808918 -98.15605164]
[16.21675110 -112.82574463]
[10.76139355 -126.79854584]
[5.30603600 -140.77134705]
[-0.14932089 -154.74414062]
[-5.60467815 -168.71693420]
[-17.83111763 -178.75808716]
[-15.25245667 -193.42778015]
[-20.70781326 -207.40057373]
[-26.16316986 -221.37336731]
[-31.61852837 -235.34617615]
[-43.84496689 -245.38732910]
[-41.26630783 -260.05700684]
[-46.72166443 -274.02981567]
[-61.39225388 -270.76266479]
[-76.38964844 -269.77340698]
[-91.36228180 -271.08517456]
[-105.95916748 -274.66723633]
[-119.83815002 -280.43560791]
[-132.67387390 -288.25512695]
[-144.16545105 -297.94244385]
[-154.04351807 -309.27047729]
[-162.07649231 -321.97369385]
[-168.07609558 -335.75430298]
[-171.90167236 -350.28927612]
[-173.46354675 -365.23788452]
[-172.72511292 -380.24972534]
[-169.70367432 -394.97286987]
[-164.47006226 -409.06222534]
[-157.14697266 -422.18746948]
[-147.90603638 -434.04098511]
[-136.96389771 -444.34487915]
[-124.57705688 -452.85760498]
[-111.03587341 -459.37963867]
[-96.65776825 -463.75805664]
[-81.77979279 -465.89022827]
[-66.75070190 -465.72622681]
[-51.92280579 -463.26983643]
[-37.64368439 -458.57864380]
[-24.24806213 -451.76266479]
[-12.04995537 -442.98162842]
[-1.33530331 -432.44137573]
[7.64472771 -420.38900757]
[14.67963314 -407.10705566]
[19.60450363 -392.90682983]
[22.30389404 -378.12124634]
[22.71452522 -363.09686279]
[20.82677460 -348.18591309]
[16.68489075 -333.73788452]
[10.38596630 -320.09149170]
[2.07765770 -307.56661987]
[-8.04527760 -296.45687866]
[-19.74554253 -287.02267456]
[-32.74886703 -279.48516846]
[-27.29350853 -265.51235962]
[-15.45727253 -256.47064209]
[-17.64572906 -240.80152893]
[-12.19037247 -226.82873535]
[-6.73501587 -212.85592651]
[-1.27965879 -198.88313293]
[10.55657768 -189.84141541]
[8.36812019 -174.17228699]
[13.82347679 -160.19949341]
[19.27883339 -146.22669983]
[24.73419189 -132.25390625]
[30.18954849 -118.28110504]
[42.02578354 -109.23937988]
[39.83732605 -93.57025909]
[45.29268265 -79.59746552]
[50.74803925 -65.62466431]
[62.81806183 -64.32470703]
[73.25174713 -57.97875977]
[80.03717804 -47.73868942]
[81.83548737 -35.51389694]
[78.24470520 -23.61537743]
[69.88749695 -14.31887341]
[74.92441559 -0.18984367]
[79.96133423 13.93918610]
[85.10329437 28.03032684]
[90.35001373 42.08279800]
[98.85659790 29.72812080]
[113.80814362 28.52351189]
[124.18293762 39.35696411]
[122.33306122 54.24245834]
[109.62217712 62.20696259]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[132.55148315 146.08206177]
[136.59251404 160.74919128]
[129.21620178 173.63816833]
[140.49806213 184.73005676]
[136.62091064 199.11119080]
[140.80792236 213.51498413]
[144.99493408 227.91876221]
[149.18194580 242.32254028]
[160.46380615 253.41444397]
[156.58666992 267.79556274]
[160.77368164 282.19937134]
[164.96067810 296.60314941]
[169.14768982 311.00692749]
[172.38711548 313.89831543]
[174.34140015 317.32546997]
[174.99993896 320.81854248]
[174.50576782 323.95263672]
[173.12767029 326.39373779]
[176.44993591 341.02117920]
[191.42034912 350.07138062]
[195.14035034 366.81881714]
[185.78477478 380.79421997]
[189.32444763 395.37057495]
[200.09977722 406.95516968]
[195.58435059 421.14886475]
[199.12400818 435.72521973]
[202.66368103 450.30160522]
[206.20335388 464.87799072]
[209.74302673 479.45434570]
[213.28269958 494.03073120]
[228.23442078 492.55004883]
[243.24668884 493.16473389]
[258.02731323 495.86279297]
[272.28854370 500.59176636]
[285.75283813 507.25955200]
[298.15805054 515.73638916]
[309.26275635 525.85723877]
[318.85076904 537.42510986]
[326.73547363 550.21484375]
[332.76336670 563.97747803]
[336.81716919 578.44512939]
[338.81790161 593.33618164]
[338.72668457 608.36077881]
[336.54522705 623.22644043]
[332.31604004 637.64379883]
[326.12145996 651.33221436]
[318.08200073 664.02526855]
[308.35421753 675.47583008]
[297.12744141 685.46112061]
[284.62017822 693.78668213]
[271.07592773 700.29046631]
[256.75830078 704.84588623]
[241.94599915 707.36425781]
[226.92738342 707.79656982]
[211.99475098 706.13439941]
[197.43878174 702.41015625]
[183.54283142 696.69622803]
[170.57737732 689.10394287]
[158.79478455 679.78100586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[21 174]
[22 173]
[26 170]
[27 169]
[28 164]
[29 163]
[30 162]
[31 161]
[33 159]
[34 158]
[35 157]
[36 156]
[38 154]
[41 151]
[42 150]
[43 149]
[45 147]
[46 146]
[47 145]
[48 139]
[49 138]
[51 137]
[52 136]
[53 135]
[57 129]
[58 128]
[59 127]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[67 119]
[68 118]
[69 117]
[70 116]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
