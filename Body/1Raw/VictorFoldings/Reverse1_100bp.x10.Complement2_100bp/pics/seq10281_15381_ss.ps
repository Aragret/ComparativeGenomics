%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[116.19783020 543.43402100]
[110.32376099 529.61694336]
[105.92617035 515.26147461]
[103.05325317 500.52499390]
[101.73648071 485.56890869]
[101.99028015 470.55715942]
[103.81187439 455.65414429]
[107.18129730 441.02319336]
[112.06163025 426.82458496]
[118.39941406 413.21392822]
[126.12519836 400.34033203]
[135.15434265 388.34481812]
[145.38790894 377.35882568]
[156.71379089 367.50274658]
[169.00787354 358.88455200]
[182.13546753 351.59869385]
[176.26649475 337.79449463]
[170.39753723 323.99032593]
[164.52857971 310.18615723]
[156.58215332 322.90835571]
[141.69929504 324.77935791]
[130.85110474 314.41998291]
[132.03446960 299.46673584]
[144.37704468 290.94259644]
[158.77911377 295.13015747]
[153.95312500 280.92770386]
[149.12712097 266.72525024]
[144.30111694 252.52279663]
[139.47512817 238.32034302]
[124.65709686 236.61987305]
[111.99475861 228.62147522]
[104.02822113 215.86627197]
[102.38302612 200.85581970]
[107.43873596 186.56152344]
[118.24308014 175.83644104]
[113.41708374 161.63398743]
[108.59108734 147.43153381]
[103.76509094 133.22906494]
[98.83349609 119.06293488]
[85.78766632 112.75797272]
[80.92216492 99.10977936]
[87.03747559 85.97398376]
[82.00055695 71.84494781]
[76.96364594 57.71591949]
[71.92672729 43.58689117]
[66.88980865 29.45786285]
[61.85289383 15.32883263]
[56.81597900 1.19980323]
[51.77906418 -12.92922592]
[49.63516235 1.91677296]
[43.06497955 15.40130806]
[32.69474030 26.23912048]
[19.51287460 33.39721680]
[4.77578688 36.19333649]
[-10.11187267 34.36096573]
[-23.73110962 28.07475853]
[-34.78382492 17.93387604]
[-42.21654129 4.90488052]
[-45.32082367 -9.77038574]
[-43.80078888 -24.69317055]
[-37.80131531 -38.44112778]
[-27.89424133 -49.70389175]
[-15.02383995 -57.40796661]
[-0.41683754 -60.81904984]
[14.53451920 -59.61201477]
[28.40516281 -53.90191650]
[39.87303162 -44.23299789]
[47.84552765 -31.52579689]
[46.72988129 -46.48424911]
[45.61423111 -61.44270325]
[44.49858093 -76.40115356]
[35.75630188 -89.58763123]
[42.52556229 -102.85512543]
[41.40991211 -117.81357574]
[40.29426575 -132.77203369]
[39.17861557 -147.73048401]
[30.43633652 -160.91696167]
[37.20559692 -174.18444824]
[21.28834724 -177.07017517]
[6.66343927 -183.95866394]
[-5.68206644 -194.37887573]
[-14.91652679 -207.62162781]
[-20.41973877 -222.78785706]
[-21.82459450 -238.84960938]
[-19.04156494 -254.71977234]
[-12.26438046 -269.32565308]
[-1.95655823 -281.68145752]
[11.18029594 -290.95477295]
[26.25424004 -296.52279663]
[24.69371605 -311.44140625]
[23.13319397 -326.36001587]
[8.24968719 -328.88662720]
[-5.39973211 -335.33612061]
[-16.80218697 -345.22988892]
[-25.11153793 -357.83374023]
[-29.71117973 -372.21240234]
[-30.25978279 -387.29888916]
[-26.71664238 -401.97363281]
[-19.34468079 -415.14773560]
[-8.69094563 -425.84356689]
[4.45398378 -433.26739502]
[19.11466599 -436.86834717]
[34.20318222 -436.37924194]
[48.59986496 -431.83630371]
[61.23638535 -423.57672119]
[71.17502594 -412.21334839]
[77.67827606 -398.58947754]
[80.26354980 -383.71603394]
[78.73900604 -368.69677734]
[73.21777344 -354.64620972]
[64.10956573 -342.60696411]
[52.09026718 -333.47247314]
[38.05179977 -327.92053223]
[39.61231995 -313.00192261]
[41.17284393 -298.08331299]
[54.94856262 -296.31506348]
[67.98849487 -291.51141357]
[79.63237000 -283.91183472]
[89.28974915 -273.89752197]
[96.47000885 -261.97216797]
[100.80722809 -248.73674011]
[102.07886505 -234.85905457]
[100.21716309 -221.04023743]
[95.31273651 -207.97918701]
[87.61018372 -196.33726501]
[77.49589539 -186.70481873]
[65.47865295 -179.57124329]
[52.16404724 -175.30010986]
[60.82653046 -163.18356323]
[54.13706970 -148.84613037]
[55.25271606 -133.88768005]
[56.36836624 -118.92922974]
[57.48401642 -103.97077179]
[66.14649963 -91.85422516]
[59.45703506 -77.51680756]
[60.57268524 -62.55835342]
[61.68833160 -47.59989929]
[62.80398178 -32.64144516]
[65.90808868 -17.96614265]
[70.94500732 -3.83711314]
[75.98192596 10.29191685]
[81.01883698 24.42094612]
[86.05575562 38.54997635]
[91.09267426 52.67900467]
[96.12959290 66.80803680]
[101.16650391 80.93706512]
[114.21233368 87.24202728]
[119.07783508 100.89022064]
[112.96252441 114.02601624]
[118.79189301 121.05853271]
[117.96754456 128.40307617]
[122.79354095 142.60552979]
[127.61953735 156.80798340]
[132.44554138 171.01043701]
[147.54740906 172.93258667]
[160.26531982 181.18740845]
[168.10588074 194.09265137]
[169.55976868 209.06086731]
[164.39190674 223.11798096]
[153.67758179 233.49433899]
[158.50358582 247.69679260]
[163.32957458 261.89926147]
[168.15557861 276.10171509]
[172.98156738 290.30416870]
[178.33276367 304.31719971]
[184.20172119 318.12136841]
[190.07067871 331.92553711]
[195.93963623 345.72970581]
[210.29476929 341.33108521]
[225.03105164 338.45709229]
[239.98701477 337.13922119]
[254.99880981 337.39193726]
[269.90194702 339.21243286]
[284.53314209 342.58081055]
[298.73208618 347.46011353]
[312.34320068 353.79690552]
[325.21737671 361.52172852]
[337.21356201 370.55001831]
[348.20028687 380.78277588]
[358.05718994 392.10794067]
[366.67626953 404.40139771]
[373.96310425 417.52844238]
[379.83786011 431.34530640]
[384.23614502 445.70053101]
[387.10977173 460.43688965]
[388.42727661 475.39288330]
[388.17419434 490.40466309]
[386.35333252 505.30773926]
[382.98461914 519.93884277]
[378.10498047 534.13769531]
[371.76785278 547.74865723]
[364.04269409 560.62268066]
[355.01412964 572.61859131]
[344.78109741 583.60510254]
[333.45568848 593.46173096]
[321.16204834 602.08050537]
[308.03479004 609.36700439]
[294.21780396 615.24139404]
[279.86245728 619.63934326]
[265.12603760 622.51263428]
[250.17001343 623.82977295]
[235.15823364 623.57635498]
[220.25518799 621.75512695]
[205.62416077 618.38604736]
[191.42544556 613.50604248]
[177.81463623 607.16857910]
[164.94082642 599.44311523]
[152.94509888 590.41424561]
[141.95887756 580.18096924]
[132.10250854 568.85534668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 168]
[17 167]
[18 166]
[19 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[35 154]
[36 153]
[37 152]
[38 151]
[39 149]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[68 138]
[69 137]
[70 136]
[71 135]
[73 133]
[74 132]
[75 131]
[76 130]
[78 128]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
