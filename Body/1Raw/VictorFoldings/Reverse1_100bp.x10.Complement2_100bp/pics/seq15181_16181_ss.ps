%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUAGCACACUCCCACCCUGACAGAUGACUCAUCGGAGGAGUCUAAGUAACUUGAUCCAGACAGGGUUACAUACCCUACCGCCUAUCAUUCAAACAUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[92.97969818 651.09582520]
[91.41594696 636.04888916]
[94.58046722 621.25561523]
[102.16323090 608.16528320]
[113.42135620 598.06036377]
[127.25189209 591.93078613]
[125.69136810 577.01220703]
[116.67197418 565.15893555]
[122.93159485 550.62866211]
[121.37107086 535.71008301]
[119.81054688 520.79144287]
[118.25002289 505.87286377]
[116.68949890 490.95425415]
[115.12897491 476.03564453]
[113.56845093 461.11706543]
[111.89691162 446.21047974]
[110.11444855 431.31677246]
[108.33197784 416.42303467]
[98.23366547 427.51467896]
[83.25720978 428.35476685]
[71.98180389 418.46206665]
[70.86651611 403.50360107]
[80.55023193 392.04821777]
[95.48567963 390.65811157]
[107.11669922 400.12872314]
[106.67008972 385.13537598]
[98.55728149 372.64413452]
[105.88027191 358.61968994]
[97.76746368 346.12844849]
[105.09045410 332.10400391]
[104.64384460 317.11065674]
[104.19724274 302.11730957]
[103.75063324 287.12396240]
[95.63782501 274.63269043]
[102.96081543 260.60827637]
[102.51420593 245.61492920]
[85.56078339 240.58589172]
[71.32506561 230.05517578]
[61.52853775 215.27603149]
[57.36277390 198.01666260]
[59.34450912 180.34867859]
[67.25158691 164.39845276]
[80.14775085 152.09120178]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[84.04478455 22.02437973]
[83.14295959 17.47025871]
[84.03019714 13.49183655]
[86.16895294 10.68861008]
[85.72234344 -4.30473948]
[85.27574158 -19.29808998]
[84.82913208 -34.29143906]
[83.71348572 -49.24989319]
[81.93102264 -64.14360809]
[80.14855194 -79.03733063]
[78.36608887 -93.93104553]
[76.25146484 -108.78124237]
[66.36760712 -121.13518524]
[71.92620850 -134.95370483]
[61.91450119 -143.08564758]
[60.18212509 -155.46234131]
[67.11762238 -165.37321472]
[64.89250183 -180.20726013]
[62.66738892 -195.04130554]
[60.44227219 -209.87535095]
[57.77647400 -224.63656616]
[54.67236710 -239.31187439]
[51.56825638 -253.98716736]
[48.46414566 -268.66247559]
[45.36003494 -283.33776855]
[34.93440247 -295.23806763]
[39.87042618 -309.29098511]
[36.76631927 -323.96630859]
[26.34068680 -335.86657715]
[31.27671051 -349.91952515]
[28.17259979 -364.59481812]
[13.11625290 -364.60424805]
[-1.60903692 -367.74423218]
[-15.35954285 -373.87750244]
[-27.53415298 -382.73599243]
[-37.60064316 -393.93240356]
[-45.11894989 -406.97726440]
[-49.76040649 -421.30035400]
[-51.32210922 -436.27548218]
[-49.73578644 -451.24804688]
[-45.07078552 -465.56344604]
[-37.53103638 -478.59594727]
[-27.44615173 -489.77578735]
[-15.25699329 -498.61422729]
[-1.49642134 -504.72491455]
[13.23401165 -507.84066772]
[28.29035378 -507.82534790]
[43.01440811 -504.67956543]
[56.76250076 -498.54086304]
[68.93362427 -489.67758179]
[78.99570465 -478.47723389]
[86.50888062 -465.42941284]
[91.14470673 -451.10449219]
[92.70051575 -436.12875366]
[91.10830688 -421.15682983]
[86.43766785 -406.84323120]
[78.89279938 -393.81369019]
[68.80351257 -382.63784790]
[56.61087799 -373.80419922]
[42.84790421 -367.69891357]
[45.95201111 -353.02362061]
[56.15561676 -342.17300415]
[51.44161987 -327.07040405]
[54.54573059 -312.39511108]
[64.74933624 -301.54449463]
[60.03533936 -286.44189453]
[63.13944626 -271.76657104]
[66.24356079 -257.09127808]
[69.34767151 -242.41598511]
[72.45177460 -227.74067688]
[74.72496796 -226.10032654]
[76.48536682 -223.46070862]
[77.34909821 -220.01260376]
[77.00839996 -216.08215332]
[75.27631378 -212.10046387]
[77.50143433 -197.26641846]
[79.72654724 -182.43237305]
[81.95166779 -167.59834290]
[93.60741425 -154.47924805]
[86.72547913 -137.39942932]
[96.43439484 -126.10402679]
[91.05073547 -111.22696686]
[93.68875122 -108.88748169]
[95.32468414 -105.15401459]
[95.31568909 -100.51147461]
[93.25980377 -95.71350861]
[95.04227448 -80.81979370]
[96.82473755 -65.92607880]
[98.60720062 -51.03236008]
[108.70551300 -62.12398148]
[123.68197632 -62.96406937]
[134.95738220 -53.07138443]
[136.07266235 -38.11290359]
[126.38895416 -26.65752602]
[111.45350647 -25.26741028]
[99.82248688 -34.73804474]
[100.26908875 -19.74469566]
[100.71569824 -4.75134516]
[101.16230011 10.24200439]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[123.67285919 145.82748413]
[135.00541687 150.94078064]
[144.77153015 158.61677551]
[152.40402222 168.40290833]
[157.46122742 179.72428894]
[159.65258789 191.91744995]
[158.85530090 204.26919556]
[155.12126160 216.05836487]
[148.67364502 226.59793091]
[139.89356995 235.27499390]
[129.29765320 241.58650208]
[117.50755310 245.16831970]
[117.95416260 260.16168213]
[126.09891510 273.72537231]
[118.74398041 286.67736816]
[119.19058990 301.67071533]
[119.63719940 316.66406250]
[120.08380127 331.65740967]
[128.22856140 345.22109985]
[120.87361908 358.17309570]
[129.01837158 371.73678589]
[121.66344452 384.68878174]
[122.11004639 399.68212891]
[123.22570038 414.64056396]
[125.00816345 429.53430176]
[126.79062653 444.42800903]
[130.91763306 452.57699585]
[128.48706055 459.55651855]
[130.04757690 474.47512817]
[131.60810852 489.39373779]
[133.16862488 504.31234741]
[134.72915649 519.23095703]
[136.28967285 534.14953613]
[137.85018921 549.06817627]
[146.98121643 561.98852539]
[140.60997009 575.45166016]
[142.17050171 590.37023926]
[156.97010803 593.50506592]
[170.07565308 601.06146240]
[180.20320129 612.29925537]
[186.36054993 626.11743164]
[187.94447327 641.16223145]
[184.79977417 655.95977783]
[177.23455811 669.06024170]
[165.98999023 679.18023682]
[152.16767883 685.32836914]
[137.12181091 686.90216064]
[122.32641602 683.74755859]
[109.23100281 676.17358398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 187]
[17 186]
[18 185]
[25 184]
[26 183]
[28 181]
[30 179]
[31 178]
[32 177]
[33 176]
[35 174]
[36 173]
[44 161]
[45 160]
[46 159]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 142]
[62 141]
[63 140]
[64 139]
[65 135]
[67 133]
[70 131]
[71 130]
[72 129]
[73 128]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[80 117]
[81 116]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
