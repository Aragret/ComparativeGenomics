%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[86.90209961 633.72735596]
[83.54322052 618.03985596]
[93.82498932 605.72460938]
[93.82498932 590.72460938]
[93.82498932 575.72460938]
[90.68148804 569.03582764]
[93.93831635 560.50170898]
[86.39136505 547.66064453]
[94.33327484 533.97717285]
[94.55660248 518.97888184]
[87.00964355 506.13781738]
[94.95155334 492.45434570]
[95.17488098 477.45602417]
[95.39820862 462.45767212]
[95.62153625 447.45935059]
[95.84486389 432.46099854]
[86.48413849 417.61703491]
[96.05882263 401.88784790]
[96.05882263 386.88784790]
[96.05882263 371.88784790]
[96.05882263 356.88784790]
[96.05882263 341.88784790]
[83.80699158 335.85379028]
[75.30945587 325.07788086]
[72.26930237 311.62771606]
[75.33541870 298.11563110]
[83.96504974 287.19107056]
[96.51884460 281.02139282]
[96.74217224 266.02304077]
[96.96549988 251.02471924]
[97.18882751 236.02638245]
[97.41215515 221.02803040]
[81.26219177 207.22708130]
[80.58481598 185.70974731]
[96.24307251 170.52416992]
[95.35025787 155.55076599]
[94.45744324 140.57736206]
[93.56462097 125.60395050]
[92.67180634 110.63054657]
[86.82808685 124.44542694]
[77.88756561 136.48980713]
[66.35587311 146.08251953]
[52.88518143 152.68104553]
[38.23733139 155.91220093]
[23.24072075 155.59327698]
[8.74348640 151.74227905]
[-4.43448496 144.57699585]
[-15.54791546 134.50270081]
[-23.96828461 122.08910370]
[-29.21938324 108.03826141]
[-31.00423431 93.14483643]
[-29.22189522 78.25109863]
[-23.97316551 64.19937897]
[-15.55488873 51.78436661]
[-4.44315720 41.70818329]
[8.73360634 34.54069519]
[23.23019028 30.68725204]
[38.22674561 30.36578751]
[52.87514114 33.59448242]
[66.34694672 40.19073868]
[77.88025665 49.78150177]
[86.82280731 61.82437515]
[92.66886139 75.63826752]
[95.08782959 90.44301605]
[99.48883057 76.10316467]
[103.88983154 61.76332092]
[108.29082489 47.42347336]
[112.69182587 33.08362579]
[117.09282684 18.74377823]
[121.49382019 4.40393209]
[118.14601135 -11.05901527]
[129.27696228 -20.95603371]
[125.92916107 -36.41897964]
[137.06011963 -46.31600189]
[141.46112061 -60.65584946]
[145.86212158 -74.99569702]
[149.94178772 -89.43024445]
[151.83506775 -104.31027985]
[151.83506775 -119.31027985]
[151.83506775 -134.31028748]
[151.83506775 -149.31028748]
[151.83506775 -164.31028748]
[149.53150940 -167.99098206]
[148.61152649 -171.82740784]
[148.95420837 -175.36547852]
[150.30355835 -178.23704529]
[152.30827332 -180.19644165]
[153.20109558 -195.16986084]
[154.09390259 -210.14326477]
[154.98672485 -225.11666870]
[155.65650940 -240.10169983]
[156.10311890 -255.09506226]
[156.54971313 -270.08840942]
[156.99632263 -285.08175659]
[157.44293213 -300.07510376]
[157.88954163 -315.06845093]
[158.33613586 -330.06179810]
[158.78274536 -345.05514526]
[144.69006348 -350.63833618]
[133.35890198 -360.70712280]
[126.15753937 -374.04565430]
[123.95558929 -389.04324341]
[127.01895142 -403.88882446]
[134.97770691 -416.78976440]
[146.87078857 -426.18817139]
[161.26205444 -430.94918823]
[176.41369629 -430.49786377]
[190.49606323 -424.88873291]
[201.80865479 -414.79907227]
[208.98542786 -401.44729614]
[211.15972900 -386.44567871]
[208.06901550 -371.60577393]
[200.08650208 -358.71951294]
[188.17611694 -349.34301758]
[173.77609253 -344.60855103]
[173.32949829 -329.61520386]
[172.88288879 -314.62185669]
[172.43627930 -299.62850952]
[171.98966980 -284.63516235]
[171.54307556 -269.64178467]
[171.09646606 -254.64845276]
[170.64985657 -239.65510559]
[173.21472168 -235.62638855]
[173.27601624 -229.94367981]
[169.96012878 -224.22384644]
[169.06730652 -209.25044250]
[168.17449951 -194.27703857]
[167.28167725 -179.30363464]
[166.83506775 -164.31028748]
[166.83506775 -149.31028748]
[166.83506775 -134.31028748]
[166.83506775 -119.31027985]
[166.83506775 -104.31027985]
[173.95487976 -117.51287079]
[184.93099976 -127.73660278]
[198.60511780 -133.90254211]
[213.53414917 -135.35998535]
[228.14259338 -131.95510864]
[240.88880920 -124.04726410]
[250.42764282 -112.47097015]
[255.75244141 -98.44789886]
[256.30126953 -83.45793915]
[252.01620483 -69.08302307]
[243.34945679 -56.84016800]
[231.21565247 -48.02138901]
[216.89530945 -43.55735016]
[201.89967346 -43.91915894]
[187.81127930 -49.06863022]
[176.11689758 -58.46232605]
[168.05067444 -71.10890961]
[164.46383667 -85.67395020]
[165.92860413 -82.46664429]
[165.91265869 -78.39051819]
[164.02456665 -74.14924622]
[160.20196533 -70.59469604]
[155.80096436 -56.25484848]
[151.39996338 -41.91500092]
[155.06256104 -27.47773743]
[143.61682129 -16.55503654]
[147.27941895 -2.11777115]
[135.83366394 8.80492973]
[131.43266296 23.14477730]
[127.03166962 37.48462296]
[122.63067627 51.82447052]
[118.22967529 66.16432190]
[113.82867432 80.50416565]
[109.42768097 94.84400940]
[107.64521027 109.73773193]
[108.53803253 124.71113586]
[109.43084717 139.68453979]
[110.32366180 154.65794373]
[111.21647644 169.63134766]
[119.43044281 173.10519409]
[126.03912354 179.02880859]
[130.34524536 186.73931885]
[131.90682983 195.38749695]
[130.58241272 204.03121948]
[126.54338074 211.73811340]
[120.25238800 217.68617249]
[112.41049957 221.25135803]
[112.18716431 236.24971008]
[111.96383667 251.24804688]
[111.74050903 266.24636841]
[111.51718140 281.24472046]
[125.79850769 289.57751465]
[133.88253784 303.89337158]
[133.64529419 320.23843384]
[125.24623108 334.15286255]
[111.05882263 341.88784790]
[111.05882263 356.88784790]
[111.05882263 371.88784790]
[111.05882263 386.88784790]
[111.05882263 401.88784790]
[119.61064911 411.54336548]
[119.30184174 424.03689575]
[110.84320068 432.68432617]
[110.61987305 447.68267822]
[110.39654541 462.68099976]
[110.17321777 477.67935181]
[109.94989014 492.67767334]
[117.48086548 506.59152222]
[109.55493927 519.20220947]
[109.33161163 534.20050049]
[116.86258698 548.11437988]
[108.93665314 560.72503662]
[108.82498932 575.72460938]
[108.82498932 590.72460938]
[108.82498932 605.72460938]
[119.10675812 618.03985596]
[115.74787140 633.72735596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[7 205]
[9 203]
[10 202]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[72 159]
[74 157]
[75 156]
[76 155]
[77 151]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
