%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[208.53567505 663.72021484]
[194.10824585 668.00225830]
[179.12263489 669.38702393]
[164.15484619 667.82135010]
[149.78018188 663.36541748]
[136.55119324 656.19042969]
[124.97634125 646.57226562]
[115.50055695 634.88061523]
[108.48804474 621.56475830]
[104.20835876 607.13665771]
[102.82599640 592.15081787]
[104.39408112 577.18328857]
[108.85235596 562.80932617]
[116.02944946 549.58154297]
[125.64949799 538.00823975]
[137.34272766 528.53436279]
[150.65966797 521.52398682]
[165.08848572 517.24664307]
[180.07453918 515.86669922]
[181.63505554 500.94808960]
[175.26382446 487.48492432]
[184.39483643 474.56457520]
[185.95536804 459.64599609]
[187.51588440 444.72738647]
[181.14465332 431.26422119]
[190.27566528 418.34387207]
[191.83619690 403.42526245]
[193.39671326 388.50668335]
[191.61424255 373.61294556]
[186.57733154 359.48391724]
[181.54042053 345.35488892]
[176.50349426 331.22586060]
[171.46658325 317.09683228]
[166.42967224 302.96780396]
[161.39274597 288.83877563]
[156.35583496 274.70974731]
[151.31892395 260.58071899]
[135.48159790 260.02816772]
[121.03381348 253.42433167]
[110.20018005 241.75354004]
[104.66127014 226.78276062]
[105.29297638 210.79411316]
[112.02811432 196.23704529]
[123.86222076 185.35301208]
[118.61550140 171.30053711]
[113.36878204 157.24806213]
[108.12207031 143.19558716]
[102.87535095 129.14312744]
[91.82720947 128.12107849]
[81.95226288 123.06227112]
[74.66805267 114.69290924]
[71.02021027 104.21439362]
[71.53238678 93.13090515]
[76.13106537 83.03347015]
[84.15609741 75.37155914]
[72.54898834 64.62048340]
[75.99623871 50.13028717]
[71.38222504 35.85755539]
[64.63074493 49.25223541]
[50.89900208 55.28872681]
[36.46496582 51.20722580]
[27.92768669 38.87374115]
[29.19029045 23.92697334]
[39.67553329 13.20038605]
[54.58970261 11.59802914]
[67.11534882 19.85396194]
[64.01124573 5.17865896]
[51.04862213 -3.45894647]
[48.10966873 -18.38600922]
[56.42419052 -30.69065666]
[53.32007980 -45.36595917]
[50.21596909 -60.04125977]
[37.25334930 -68.67886353]
[34.31439590 -83.60592651]
[42.62891388 -95.91057587]
[39.52480698 -110.58587646]
[36.42069626 -125.26117706]
[32.03633881 -110.91623688]
[23.06549835 -98.89442444]
[10.56205845 -90.60804749]
[-4.00508928 -87.03059387]
[-18.92461014 -88.58232117]
[-32.44377518 -95.08095551]
[-42.97436523 -105.76302338]
[-49.27925873 -119.37361908]
[-50.61775970 -134.31378174]
[-46.83262634 -148.82835388]
[-38.36853027 -161.21217346]
[-26.21982384 -170.01040649]
[-11.81372643 -174.18945312]
[3.15734720 -173.25834656]
[16.93461037 -167.32649231]
[27.89952660 -157.09072876]
[34.76441193 -143.75207520]
[35.21101761 -158.74543762]
[35.65762329 -173.73878479]
[36.10423279 -188.73213196]
[36.55083847 -203.72547913]
[36.99744415 -218.71882629]
[37.44404984 -233.71218872]
[23.87207794 -240.69532776]
[14.68088150 -252.88075256]
[11.69538021 -267.84902954]
[15.50834656 -282.62820435]
[25.36271286 -294.28387451]
[39.30188751 -300.50177002]
[54.55823898 -300.04733276]
[68.10260773 -293.01077271]
[77.24574280 -280.78924561]
[80.17227936 -265.80932617]
[76.30113983 -251.04527283]
[66.40095520 -239.42852783]
[52.43739700 -233.26557922]
[51.99079132 -218.27223206]
[51.54418564 -203.27886963]
[51.09757996 -188.28552246]
[50.65097427 -173.29217529]
[50.20436859 -158.29882812]
[49.75776291 -143.30548096]
[51.09599686 -128.36529541]
[54.20010757 -113.68998718]
[57.30421829 -99.01468658]
[69.88903809 -91.13065338]
[73.24610138 -76.29203033]
[64.89127350 -63.14537048]
[67.99538422 -48.47006989]
[71.09949493 -33.79476547]
[83.68431091 -25.91073418]
[87.04137421 -11.07210922]
[78.68654633 2.07454872]
[81.79065704 16.74985123]
[85.65496063 31.24354362]
[90.26896667 45.51627731]
[101.54605103 55.24647522]
[98.42882538 70.75755310]
[116.31854248 75.68345642]
[127.65666199 90.37200928]
[127.89113617 108.92602539]
[116.92781830 123.89640808]
[122.17453766 137.94888306]
[127.42125702 152.00134277]
[132.66796875 166.05381775]
[137.91468811 180.10629272]
[152.15701294 180.19354248]
[165.48612976 185.12666321]
[176.30802917 194.29396057]
[183.33596802 206.57870483]
[185.74342346 220.49511719]
[183.26130676 234.36805725]
[176.20783997 246.53469849]
[165.44795227 255.54379272]
[170.48486328 269.67282104]
[175.52177429 283.80184937]
[180.55870056 297.93087769]
[185.59561157 312.05990601]
[190.63252258 326.18893433]
[195.66944885 340.31796265]
[200.70635986 354.44702148]
[205.74327087 368.57604980]
[207.50431824 353.67977905]
[212.09919739 339.40087891]
[219.35612488 326.27316284]
[229.00381470 314.78741455]
[240.68156433 305.37307739]
[253.95280457 298.38204956]
[268.32138062 294.07574463]
[283.25009155 292.61514282]
[298.18084717 294.05487061]
[312.55541992 298.34106445]
[325.83642578 305.31347656]
[337.52734375 314.71148682]
[347.19110107 326.18371582]
[354.46640015 339.30126953]
[359.08126831 353.57373047]
[360.86312866 368.46749878]
[359.74542236 383.42581177]
[355.76989746 397.88940430]
[349.08520508 411.31753540]
[339.94125366 423.20819092]
[328.67990112 433.11685181]
[315.72213745 440.67306519]
[301.55239868 445.59432983]
[286.70046997 447.69665527]
[271.72155762 446.90148926]
[257.17565918 443.23849487]
[243.60664368 436.84463501]
[231.52172852 427.95895386]
[221.37275696 416.91366577]
[213.53913879 404.12170410]
[208.31532288 390.06719971]
[206.75479126 404.98580933]
[205.19427490 419.90438843]
[211.45388794 434.43463135]
[202.43449402 446.28790283]
[200.87396240 461.20651245]
[199.31344604 476.12512207]
[205.57305908 490.65533447]
[196.55366516 502.50860596]
[194.99314880 517.42718506]
[209.36924744 521.87847900]
[222.60055542 529.04919434]
[234.17851257 538.66357422]
[243.65809631 550.35223389]
[250.67491150 563.66577148]
[254.95927429 578.09246826]
[256.34649658 593.07788086]
[254.78323364 608.04595947]
[250.32962036 622.42132568]
[243.15679932 635.65148926]
[233.54051208 647.22784424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[22 196]
[23 195]
[24 194]
[26 192]
[27 191]
[28 190]
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[55 135]
[57 133]
[58 132]
[66 131]
[67 130]
[70 127]
[71 126]
[72 125]
[75 122]
[76 121]
[77 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
