%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[108.65283966 470.17208862]
[111.37550354 455.29113770]
[118.56515503 441.98083496]
[129.51744080 431.54519653]
[143.15933228 425.00656128]
[141.15531921 410.14105225]
[139.15130615 395.27551270]
[137.14729309 380.40997314]
[135.14328003 365.54446411]
[125.77497101 353.96499634]
[131.59919739 339.25482178]
[129.59518433 324.38928223]
[114.39575195 314.18670654]
[111.42986298 295.79873657]
[123.04209137 280.82977295]
[120.59636688 266.03048706]
[110.88744354 254.73509216]
[116.27110291 239.85804749]
[113.82537842 225.05877686]
[111.37964630 210.25950623]
[108.93392181 195.46023560]
[97.08414459 182.51612854]
[103.71102905 165.33573914]
[101.04522705 150.57452393]
[96.76303864 144.55085754]
[98.45134735 135.57380676]
[96.00561523 120.77452850]
[93.55989075 105.97525787]
[91.24151611 103.99671173]
[89.59181976 101.13087463]
[88.94081879 97.62378693]
[89.52302551 93.83996582]
[91.43653870 90.22452545]
[88.36904907 86.00107574]
[87.33202362 81.47582245]
[88.10042572 77.47274780]
[90.15476227 74.60708618]
[89.26194763 59.63368225]
[88.36913300 44.66027451]
[87.47631836 29.68687057]
[86.58350372 14.71346378]
[85.69068909 -0.25994170]
[84.79786682 -15.23334789]
[81.92201996 -19.58955956]
[81.08809662 -24.15660095]
[82.03447723 -28.12137222]
[84.21472931 -30.89244461]
[83.99140167 -45.89078140]
[83.76807404 -60.88912201]
[83.54474640 -75.88745880]
[80.76913452 -90.62841797]
[75.52241516 -104.68089294]
[61.42189789 -111.30004120]
[56.30116272 -125.62599182]
[62.69840622 -139.02787781]
[57.45169067 -153.08035278]
[52.20497131 -167.13282776]
[46.95825195 -181.18530273]
[41.71153641 -195.23777771]
[39.65949249 -180.37879944]
[32.95278168 -166.96163940]
[22.29917908 -156.40225220]
[8.82298183 -149.81498718]
[-6.05363417 -147.89500427]
[-20.76070404 -150.84494019]
[-33.74615479 -158.35346985]
[-43.63959885 -169.62821960]
[-49.39696121 -183.47930908]
[-50.41065598 -198.44502258]
[-46.57369614 -212.94596863]
[-38.29101562 -225.45185852]
[-26.43669891 -234.64289856]
[-12.26176167 -239.54913330]
[2.73787951 -239.65280151]
[16.97927856 -234.94296265]
[28.95950508 -225.91667175]
[37.41434097 -213.52629089]
[35.85381699 -228.44488525]
[34.29329300 -243.36349487]
[22.29962540 -253.30279541]
[20.92955399 -268.45462036]
[30.47907066 -279.82748413]
[28.91854668 -294.74609375]
[27.35802460 -309.66470337]
[25.79750061 -324.58331299]
[24.23697853 -339.50192261]
[22.67645454 -354.42050171]
[21.11593246 -369.33911133]
[19.55540848 -384.25772095]
[4.60893726 -386.18118286]
[-9.49085808 -391.50024414]
[-21.98359299 -399.92807007]
[-32.19554901 -411.01016235]
[-39.57600784 -424.14886475]
[-43.72695160 -438.63565063]
[-44.42452240 -453.68920898]
[-41.63110733 -468.49777222]
[-35.49734497 -482.26272583]
[-26.35402679 -494.24172974]
[-14.69423771 -503.78875732]
[-1.14677465 -510.38897705]
[13.55776310 -513.68646240]
[28.62637901 -513.50335693]
[43.24644089 -509.84948730]
[56.62950897 -502.92199707]
[68.05384827 -493.09442139]
[76.90336609 -480.89678955]
[82.70080566 -466.98684692]
[85.13352966 -452.11477661]
[84.07034302 -437.08258057]
[79.56857300 -422.70095825]
[71.87100983 -409.74551392]
[61.39275742 -398.91485596]
[48.69890594 -390.79309082]
[34.47401428 -385.81823730]
[36.03453827 -370.89962769]
[37.59505844 -355.98104858]
[39.15558243 -341.06243896]
[40.71610641 -326.14382935]
[42.27663040 -311.22521973]
[43.83715057 -296.30661011]
[45.39767456 -281.38800049]
[57.09398651 -272.23748779]
[58.88910294 -257.13015747]
[49.21189880 -244.92402649]
[50.77242279 -230.00541687]
[52.33294678 -215.08680725]
[55.76400757 -200.48448181]
[61.01072311 -186.43202209]
[66.25744629 -172.37954712]
[71.50415802 -158.32707214]
[76.75087738 -144.27459717]
[90.36598969 -138.34465027]
[95.88708496 -124.16818237]
[89.57489014 -109.92761230]
[94.82160187 -95.87513733]
[96.38466644 -110.79347992]
[101.56072235 -124.87213135]
[110.03326416 -137.25016785]
[121.28418732 -147.17070007]
[134.62548828 -154.02705383]
[149.24136353 -157.39996338]
[164.23800659 -157.08319092]
[178.69841003 -153.09608459]
[191.73828125 -145.68247986]
[202.56025696 -135.29570007]
[210.50253296 -122.57091522]
[215.07946777 -108.28625488]
[216.01116943 -93.31521606]
[213.24066162 -78.57329559]
[206.93736267 -64.96195984]
[197.48672485 -53.31355286]
[185.46664429 -44.34037399]
[171.61218262 -38.59114075]
[156.77052307 -36.41742325]
[141.84924316 -37.95213699]
[127.76078033 -43.10144043]
[115.36666107 -51.55044937]
[105.42478180 -62.78250504]
[98.54308319 -76.11078644]
[98.76641083 -61.11244965]
[98.98973846 -46.11410904]
[99.21306610 -31.11577225]
[99.77127838 -16.12616348]
[100.66409302 -1.15275753]
[101.55690765 13.82064819]
[102.44972229 28.79405403]
[103.34253693 43.76745987]
[104.23535156 58.74086380]
[105.12817383 73.71427155]
[106.35514832 88.66400146]
[108.35916138 103.52953339]
[110.80488586 118.32880402]
[113.25061798 133.12806702]
[115.80644989 147.90872192]
[118.47224426 162.66995239]
[128.60391235 170.65193176]
[130.52037048 183.00146484]
[123.73319244 193.01449585]
[126.17892456 207.81376648]
[128.62464905 222.61303711]
[131.07037354 237.41230774]
[140.95423889 249.76626587]
[135.39562988 263.58477783]
[137.84136963 278.38403320]
[148.66870117 283.29376221]
[155.70953369 292.72390747]
[157.30744934 304.26257324]
[153.18003845 315.02731323]
[144.46070862 322.38528442]
[146.46472168 337.25082397]
[155.97637939 349.89355469]
[150.00880432 363.54043579]
[152.01281738 378.40597534]
[154.01683044 393.27148438]
[156.02085876 408.13702393]
[158.02487183 423.00256348]
[172.91123962 425.69531250]
[186.23596191 432.85818481]
[196.69361877 443.78945923]
[203.25965881 457.41818237]
[205.29081726 472.40917969]
[202.58808899 487.29373169]
[195.41627502 500.61367798]
[184.47799683 511.06399536]
[170.84486389 517.62091064]
[155.85252380 519.64202881]
[140.96977234 516.92932129]
[127.65465546 509.74856567]
[117.21166992 498.80328369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[11 191]
[12 190]
[15 185]
[16 184]
[18 182]
[19 181]
[20 180]
[21 179]
[23 176]
[24 175]
[26 174]
[27 173]
[28 172]
[33 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 136]
[52 135]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[77 127]
[78 126]
[79 125]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
