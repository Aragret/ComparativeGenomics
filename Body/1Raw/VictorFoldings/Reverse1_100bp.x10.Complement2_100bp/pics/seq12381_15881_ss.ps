%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[194.36648560 565.61102295]
[198.39332581 551.10314941]
[205.34887695 537.74975586]
[214.92906189 526.13452148]
[226.71510315 516.76525879]
[240.19172668 510.05151367]
[236.43542480 495.52944946]
[232.67912292 481.00738525]
[228.92282104 466.48535156]
[225.16653442 451.96328735]
[220.34053040 437.76083374]
[214.47157288 423.95663452]
[208.96157837 419.03100586]
[208.61968994 409.90298462]
[202.95689392 396.01296997]
[197.29411316 382.12292480]
[191.63133240 368.23291016]
[185.96853638 354.34286499]
[180.30575562 340.45285034]
[166.58401489 342.60015869]
[152.72152710 341.62731934]
[139.41917419 337.58001709]
[127.35031128 330.65945435]
[117.12668610 321.21237183]
[109.26739502 309.71368408]
[104.17256927 296.74255371]
[102.10296631 282.95333862]
[103.16667175 269.04244995]
[107.31340027 255.71322632]
[114.33692932 243.64041138]
[123.88528442 233.43595886]
[135.47843933 225.61802673]
[130.23171997 211.56555176]
[126.33573914 208.80325317]
[124.13365173 203.56417847]
[125.04482269 197.01580811]
[120.21882629 182.81335449]
[115.39282990 168.61088562]
[110.56683350 154.40843201]
[105.74083710 140.20597839]
[100.91484070 126.00352478]
[85.30150604 121.47031403]
[75.42684174 108.55454254]
[75.14617157 92.29885864]
[84.56907654 79.04989624]
[79.53216553 64.92086792]
[74.49524689 50.79183578]
[63.19771194 44.56861115]
[59.29332733 32.69681549]
[64.35706329 21.71113777]
[59.53106689 7.50868225]
[54.70507050 -6.69377327]
[49.87907028 -20.89622879]
[38.11318588 -31.47330475]
[41.34431076 -46.01321793]
[36.51831436 -60.21567535]
[31.69231796 -74.41812897]
[26.86631966 -88.62058258]
[22.04032135 -102.82304382]
[6.92632818 -102.66603088]
[-7.47669125 -107.18217468]
[-19.76196861 -115.91717529]
[-28.73366356 -128.00534058]
[-33.52325058 -142.25534058]
[-33.67360306 -157.26760864]
[-29.18257332 -171.57183838]
[-20.50199509 -183.77091980]
[-8.49223328 -192.67747498]
[-13.31823063 -206.87992859]
[-18.14422798 -221.08238220]
[-21.50952148 -223.82624817]
[-23.61488724 -227.16270447]
[-24.42874146 -230.62290955]
[-24.07500839 -233.77592468]
[-22.80729485 -236.27612305]
[-26.77939034 -250.74064636]
[-32.06956100 -258.18725586]
[-30.70123291 -265.45013428]
[-34.45753098 -279.97219849]
[-38.21383286 -294.49426270]
[-53.21413040 -293.38482666]
[-68.17144012 -294.97180176]
[-82.60495758 -299.20425415]
[-96.05069733 -305.94604492]
[-108.07643127 -314.98049927]
[-118.29558563 -326.01721191]
[-126.37965393 -338.70135498]
[-132.06877136 -352.62521362]
[-135.18005371 -367.34115601]
[-135.61349487 -382.37619019]
[-133.35514832 -397.24694824]
[-128.47761536 -411.47543335]
[-121.13769531 -424.60421753]
[-111.57132721 -436.21130371]
[-100.08602905 -445.92355347]
[-87.05101013 -453.42877197]
[-72.88529205 -458.48565674]
[-58.04424667 -460.93170166]
[-43.00494766 -460.68823242]
[-28.25084877 -457.76312256]
[-14.25623131 -452.25036621]
[-1.47096634 -444.32717896]
[9.69395351 -434.24829102]
[18.87962341 -422.33764648]
[25.79076004 -408.97814941]
[30.20520020 -394.59927368]
[31.98103714 -379.66320801]
[31.06118584 -364.65008545]
[27.47521591 -350.04251099]
[21.33839989 -336.31011963]
[12.84801292 -323.89425659]
[2.27698517 -313.19412231]
[-10.03486919 -304.55361938]
[-23.69177437 -298.25054932]
[-19.93547440 -283.72851562]
[-16.17917252 -269.20645142]
[-12.31486702 -254.71275330]
[-8.34277153 -240.24822998]
[-3.94177318 -225.90838623]
[0.88422459 -211.70591736]
[5.71022224 -197.50346375]
[20.66001511 -197.75778198]
[34.97583771 -193.37287903]
[47.25201035 -184.76615906]
[56.27906418 -172.77018738]
[61.16289902 -158.55221558]
[61.41332245 -143.50056458]
[56.99323273 -129.08906555]
[48.32346344 -116.73278809]
[36.24277878 -107.64904022]
[41.06877518 -93.44658661]
[45.89477158 -79.24412537]
[50.72077179 -65.04167175]
[55.54676819 -50.83921814]
[66.96746826 -41.27799606]
[64.08152771 -25.72222710]
[68.90752411 -11.51977062]
[73.73352051 2.68268466]
[78.55951691 16.88513947]
[92.36124420 27.72392845]
[88.62427521 45.75492096]
[93.66119385 59.88394928]
[98.69811249 74.01297760]
[111.65111542 76.73475647]
[121.58924103 85.47673798]
[125.94083405 97.97682953]
[123.57987976 111.00043488]
[115.11729431 121.17752838]
[119.94329071 135.37998962]
[124.76928711 149.58244324]
[129.59529114 163.78489685]
[134.42127991 177.98735046]
[139.24728394 192.18980408]
[144.28419495 206.31883240]
[149.53091431 220.37130737]
[165.62098694 218.69927979]
[181.58740234 221.23164368]
[196.35083008 227.79162598]
[208.91474915 237.93035889]
[218.43263245 250.95762634]
[224.26502991 265.98880005]
[226.02252197 282.00503540]
[223.59172058 297.92208862]
[217.14253235 312.66403198]
[207.11634827 325.23571777]
[194.19578552 334.79006958]
[199.85856628 348.68008423]
[205.52134705 362.57012939]
[211.18414307 376.46014404]
[216.84692383 390.35015869]
[222.50971985 404.24020386]
[228.27574158 418.08767700]
[234.14471436 431.89187622]
[237.54977417 417.28344727]
[247.73048401 406.26742554]
[262.02563477 401.72329712]
[276.69848633 404.83895874]
[287.91360474 414.79992676]
[292.73937988 429.00247192]
[289.91439819 443.73403931]
[280.17703247 455.14385986]
[266.07266235 460.24942017]
[251.28813171 457.71615601]
[239.68858337 448.20697021]
[243.44488525 462.72903442]
[247.20118713 477.25109863]
[250.95748901 491.77316284]
[254.71379089 506.29522705]
[269.75555420 505.63232422]
[284.60635376 508.11166382]
[298.61700439 513.62481689]
[311.17501831 521.93084717]
[321.73141479 532.66662598]
[329.82470703 545.36273193]
[335.10110474 559.46429443]
[337.32992554 574.35473633]
[336.41372681 589.38323975]
[332.39260864 603.89263916]
[325.44232178 617.24884033]
[315.86669922 628.86779785]
[304.08435059 638.24169922]
[290.61035156 644.96075439]
[276.03375244 648.73114014]
[260.99172974 649.38812256]
[246.14189148 646.90295410]
[232.13340759 641.38427734]
[219.57865906 633.07330322]
[209.02648926 622.33343506]
[200.93818665 609.63409424]
[195.66735840 595.53045654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 173]
[12 172]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[32 155]
[33 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[45 143]
[46 142]
[47 141]
[50 139]
[51 138]
[52 137]
[53 136]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[68 121]
[69 120]
[70 119]
[75 118]
[76 117]
[78 116]
[79 115]
[80 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
