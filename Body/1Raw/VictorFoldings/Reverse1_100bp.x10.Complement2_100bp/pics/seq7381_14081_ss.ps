%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[87.97172546 396.69128418]
[90.51188660 381.83157349]
[96.53504944 368.01187134]
[105.69102478 356.03555298]
[117.44749451 346.59899902]
[131.12095642 340.25079346]
[128.23568726 325.53088379]
[125.35041809 310.81100464]
[115.48960876 303.80450439]
[112.96537018 291.56472778]
[119.66508484 280.54309082]
[116.99929047 265.78186035]
[114.33349609 251.02066040]
[111.66769409 236.25942993]
[109.00189972 221.49821472]
[96.65740204 213.24298096]
[93.74362946 198.31098938]
[102.48617554 185.41891479]
[92.61015320 174.26931763]
[97.77172852 159.31375122]
[95.10593414 144.55253601]
[88.54990387 158.04396057]
[76.18216705 166.53153992]
[61.23561096 167.79664612]
[47.61723328 161.50857544]
[38.88684464 149.31101990]
[37.32654572 134.39239502]
[43.34420013 120.65238953]
[55.36680222 111.68260193]
[70.25167084 109.82772064]
[84.10794830 115.57260895]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[88.50189972 53.59860992]
[87.80432129 49.00876236]
[88.86832428 45.07392502]
[91.13011169 42.36899567]
[91.35343933 27.37065887]
[91.57676697 12.37232113]
[91.80009460 -2.62601638]
[78.72223663 -10.55802250]
[71.41876984 -23.88304520]
[71.76332855 -38.97435760]
[79.56327057 -51.78126526]
[92.63826752 -58.91638565]
[92.86159515 -73.91471863]
[93.08492279 -88.91305542]
[90.54104614 -93.47109985]
[90.04911041 -98.08751678]
[91.28775024 -101.97091675]
[93.66806793 -104.57215881]
[94.56088257 -119.54556274]
[95.45369720 -134.51896667]
[96.34651947 -149.49237061]
[97.23933411 -164.46577454]
[89.05369568 -151.89616394]
[76.92286682 -143.07328796]
[62.44287109 -139.15795898]
[47.51880264 -140.66531372]
[34.11417389 -147.39703369]
[23.99259567 -158.46742249]
[18.48573875 -172.42001343]
[18.31812096 -187.41906738]
[23.51179695 -201.49122620]
[33.38344955 -212.78504944]
[46.63429260 -219.81465149]
[61.52095032 -221.65513611]
[76.08483124 -218.06439209]
[88.40979767 -209.51481628]
[96.87429047 -197.13125610]
[100.36479187 -182.54063416]
[104.55180359 -196.94441223]
[108.73880768 -211.34819031]
[112.49510956 -225.87025452]
[115.81736755 -240.49771118]
[119.13963318 -255.12516785]
[122.46189117 -269.75262451]
[125.78414917 -284.38009644]
[111.54801178 -289.14569092]
[97.85712433 -295.30508423]
[84.84755707 -302.79708862]
[72.64861298 -311.54718018]
[61.38152695 -321.46844482]
[51.15828323 -332.46224976]
[42.08049011 -344.41934204]
[34.23836136 -357.22091675]
[27.70984840 -370.73968506]
[22.55982590 -384.84130859]
[18.83948517 -399.38565063]
[16.58580017 -414.22811890]
[15.82116795 -429.22125244]
[16.55318832 -444.21600342]
[18.77458763 -459.06338501]
[22.46328735 -473.61575317]
[27.58262634 -487.72854614]
[34.08172226 -501.26150513]
[41.89598846 -514.08007812]
[50.94775391 -526.05688477]
[61.14706421 -537.07287598]
[72.39253998 -547.01867676]
[84.57243347 -555.79528809]
[97.56567383 -563.31555176]
[111.24312592 -569.50469971]
[125.46887207 -574.30126953]
[140.10150146 -577.65753174]
[154.99560547 -579.54016113]
[170.00314331 -579.93041992]
[184.97497559 -578.82446289]
[199.76228333 -576.23333740]
[214.21809387 -572.18267822]
[228.19876099 -566.71276855]
[241.56532288 -559.87799072]
[254.18492126 -551.74633789]
[265.93215942 -542.39855957]
[276.69024658 -531.92755127]
[286.35229492 -520.43737793]
[294.82226562 -508.04229736]
[302.01599121 -494.86544800]
[307.86193848 -481.03784180]
[312.30203247 -466.69683838]
[315.29214478 -451.98501587]
[316.80255127 -437.04855347]
[316.81826782 -422.03594971]
[315.33908081 -407.09640503]
[312.37973022 -392.37835693]
[307.96963501 -378.02810669]
[302.15261841 -364.18826294]
[294.98645020 -350.99642944]
[286.54241943 -338.58364868]
[276.90441895 -327.07333374]
[266.16824341 -316.57983398]
[254.44059753 -307.20751953]
[241.83802795 -299.04946899]
[228.48579407 -292.18676758]
[214.51658630 -286.68765259]
[200.06927490 -282.60678101]
[185.28741455 -279.98468018]
[170.31794739 -278.84744263]
[155.30961609 -279.20635986]
[140.41160583 -281.05783081]
[137.08935547 -266.43035889]
[133.76708984 -251.80291748]
[130.44482422 -237.17544556]
[127.12257385 -222.54798889]
[128.50065613 -220.10688782]
[128.99482727 -216.97280884]
[128.33628845 -213.47972107]
[126.38201141 -210.05256653]
[123.14259338 -207.16117859]
[118.95558167 -192.75740051]
[114.76856995 -178.35362244]
[112.21273804 -163.57296753]
[111.31992340 -148.59956360]
[110.42710876 -133.62615967]
[109.53429413 -118.65274811]
[108.64147186 -103.67934418]
[108.08326721 -88.68972778]
[107.85993958 -73.69139099]
[107.63661194 -58.69305420]
[120.49337769 -51.17181015]
[127.90854645 -38.13834381]
[127.80362701 -23.04346466]
[120.10666656 -9.94180107]
[106.79843903 -2.40268850]
[106.57511139 12.59564877]
[106.35178375 27.59398651]
[106.12845612 42.59232330]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[109.86714935 141.88673401]
[112.53294373 156.64796448]
[122.59963989 168.85337830]
[117.24739075 182.75311279]
[129.94709778 191.77284241]
[132.44030762 206.78079224]
[123.76312256 218.83242798]
[126.42891693 233.59364319]
[129.09471130 248.35485840]
[131.76049805 263.11608887]
[134.42630005 277.87728882]
[146.64395142 291.65447998]
[140.07031250 307.92572021]
[142.95558167 322.64562988]
[145.84085083 337.36550903]
[160.89907837 338.08197021]
[175.34806824 342.38195801]
[188.34780884 350.01547241]
[199.14247131 360.53869629]
[207.10449219 373.33987427]
[211.77096558 387.67471313]
[212.87059021 402.70980835]
[210.33943176 417.57104492]
[204.32466125 431.39443970]
[195.17594910 443.37628174]
[183.42520142 452.81997681]
[169.75558472 459.17645264]
[154.96183777 462.07620239]
[139.90405273 461.35061646]
[125.45766449 457.04187012]
[112.46256256 449.40048218]
[101.67427826 438.87069702]
[93.72001648 426.06472778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[18 181]
[20 179]
[21 178]
[32 177]
[33 176]
[35 174]
[36 173]
[37 172]
[41 171]
[42 170]
[43 169]
[44 168]
[49 163]
[50 162]
[51 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[75 155]
[76 154]
[77 153]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
