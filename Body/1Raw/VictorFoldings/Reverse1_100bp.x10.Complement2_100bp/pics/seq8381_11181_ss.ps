%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[48.32696533 682.11132812]
[56.78240204 668.06005859]
[56.55907440 653.06170654]
[56.33574677 638.06341553]
[56.11241913 623.06506348]
[55.88909149 608.06671143]
[46.86972046 603.16552734]
[40.65001678 594.89807129]
[38.40583801 584.71588135]
[40.60758591 574.44183350]
[46.92350769 565.94384766]
[56.26776886 560.79516602]
[56.71437454 545.80181885]
[57.16098022 530.80847168]
[57.60758591 515.81512451]
[47.23864365 505.18402100]
[47.47798157 489.97225952]
[58.69917679 479.16845703]
[59.14578247 464.17510986]
[51.79085159 451.22311401]
[59.93560410 437.65942383]
[60.38220978 422.66607666]
[50.01326752 412.03494263]
[50.25260544 396.82318115]
[61.47380447 386.01937866]
[61.92041016 371.02603149]
[62.36701584 356.03268433]
[62.81362152 341.03933716]
[54.74954224 332.02282715]
[54.99891281 319.52795410]
[63.97334671 310.26394653]
[64.64313507 295.27890015]
[51.98076630 303.32031250]
[37.74985504 298.57888794]
[32.44089508 284.54980469]
[39.96745682 271.57479858]
[54.78123856 269.21856689]
[65.96143341 279.21649170]
[67.74389648 264.32275391]
[69.52635956 249.42904663]
[71.30883026 234.53532410]
[73.09129333 219.64161682]
[71.21115875 216.65875244]
[70.68239594 212.61703491]
[71.98692322 208.16154480]
[75.30036163 204.12815857]
[69.74176788 190.30964661]
[79.62562561 177.95570374]
[82.07135010 163.15643311]
[84.51708221 148.35716248]
[86.96280670 133.55789185]
[89.40853119 118.75861359]
[91.85426331 103.95934296]
[90.07540894 100.53764343]
[89.81342316 96.34845734]
[91.37726593 92.08683777]
[94.75383759 88.55999756]
[97.85794830 73.88469696]
[100.96205902 59.20939636]
[96.24806213 44.10678482]
[106.45166779 33.25617599]
[101.73767090 18.15356827]
[111.94127655 7.30295944]
[115.04538727 -7.37234306]
[118.14949799 -22.04764557]
[121.25360870 -36.72294617]
[124.24838257 -51.42095184]
[127.13365173 -66.14084625]
[113.19338226 -76.16873169]
[105.06504059 -91.23265076]
[104.34136963 -108.27893066]
[111.11960602 -123.87601471]
[123.99166107 -134.90524292]
[140.33634949 -139.18438721]
[142.78207397 -153.98365784]
[145.22779846 -168.78292847]
[147.67353821 -183.58221436]
[149.01176453 -198.52238464]
[149.23509216 -213.52073669]
[141.70411682 -227.43457031]
[149.63005066 -240.04522705]
[149.85337830 -255.04356384]
[150.07670593 -270.04190063]
[150.30003357 -285.04025269]
[147.29873657 -293.66754150]
[150.63999939 -300.25979614]
[147.84762573 -306.25262451]
[148.41566467 -311.90722656]
[151.32972717 -315.69104004]
[152.22253418 -330.66442871]
[153.11535645 -345.63784790]
[150.50228882 -354.39053345]
[154.13456726 -360.82702637]
[155.25021362 -375.78546143]
[156.36585999 -390.74392700]
[157.48152161 -405.70239258]
[143.19024658 -410.52011108]
[130.54652405 -418.74124146]
[120.34515381 -429.84902954]
[113.22739410 -443.14520264]
[109.64067841 -457.79397583]
[109.81047058 -472.87448120]
[113.72609711 -487.43878174]
[121.14141846 -500.57131958]
[131.59030151 -511.44659424]
[144.41590881 -519.38098145]
[158.81202698 -523.87573242]
[173.87370300 -524.64825439]
[188.65414429 -521.65002441]
[202.22422791 -515.06945801]
[213.73095703 -505.32031250]
[222.45097351 -493.01535034]
[227.83615112 -478.92810059]
[229.54797363 -463.94409180]
[227.47882080 -449.00521851]
[221.75877380 -435.05059814]
[212.74740601 -422.95736694]
[201.01115417 -413.48577881]
[187.28779602 -407.23117065]
[172.43997192 -404.58673096]
[171.32432556 -389.62826538]
[170.20866394 -374.66983032]
[169.09301758 -359.71136475]
[168.08876038 -344.74502563]
[167.19593811 -329.77160645]
[166.30313110 -314.79821777]
[165.63334656 -299.81317139]
[165.29837036 -284.81692505]
[165.07504272 -269.81857300]
[164.85171509 -254.82023621]
[164.62838745 -239.82189941]
[172.17533875 -226.98085022]
[164.23342896 -213.29740906]
[164.01010132 -198.29905701]
[173.03880310 -210.27749634]
[186.80818176 -216.22761536]
[201.71897888 -214.59410095]
[213.87351990 -205.80395508]
[220.09466553 -192.15486145]
[218.75619507 -177.21470642]
[210.20800781 -164.88877869]
[196.68457031 -158.39906311]
[181.72087097 -159.44194031]
[169.22837830 -167.74482727]
[162.47280884 -181.13647461]
[160.02706909 -166.33720398]
[157.58134460 -151.53793335]
[155.13562012 -136.73866272]
[166.33772278 -130.16168213]
[174.65849304 -120.14473724]
[179.09088135 -107.86624908]
[179.08688354 -94.78030396]
[174.62525940 -82.44446564]
[166.21667480 -72.33440399]
[154.84526062 -65.66734314]
[141.85354614 -63.25556946]
[138.96827698 -48.53567886]
[140.76646423 -41.36711884]
[135.92890930 -33.61883926]
[132.82479858 -18.94353485]
[129.72068787 -4.26823282]
[126.61657715 10.40706921]
[131.55259705 24.46000290]
[121.12696838 36.36028671]
[126.06299591 50.41321945]
[115.63735962 62.31350327]
[112.53325653 76.98880768]
[109.42914581 91.66410828]
[106.65353394 106.40507507]
[104.20780182 121.20434570]
[101.76207733 136.00361633]
[99.31635284 150.80288696]
[96.87062073 165.60215759]
[94.42489624 180.40142822]
[99.80855560 195.27848816]
[90.09963226 206.57388306]
[87.98500824 221.42407227]
[86.20254517 236.31779480]
[84.42008209 251.21151733]
[82.63761139 266.10522461]
[80.85514832 280.99896240]
[79.62817383 295.94866943]
[78.95838928 310.93371582]
[87.82118225 327.07473755]
[77.80696869 341.48593140]
[77.36036682 356.47927856]
[76.91375732 371.47262573]
[76.46715546 386.46597290]
[87.02539825 397.91854858]
[86.35889435 413.11758423]
[75.37555695 423.11267090]
[74.92895508 438.10601807]
[82.25194550 452.13043213]
[74.13913727 464.62170410]
[73.69252777 479.61505127]
[84.25077820 491.06762695]
[83.58426666 506.26663208]
[72.60093689 516.26171875]
[72.15432739 531.25506592]
[71.70772552 546.24841309]
[71.26111603 561.24176025]
[85.79460144 575.11468506]
[85.44532776 594.89807129]
[70.88742828 607.84338379]
[71.11075592 622.84173584]
[71.33408356 637.84008789]
[71.55741119 652.83837891]
[71.78073883 667.83673096]
[80.65078735 681.63000488]
[72.90097046 696.08245850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 208]
[3 207]
[4 206]
[5 205]
[6 204]
[12 201]
[13 200]
[14 199]
[15 198]
[18 195]
[19 194]
[21 192]
[22 191]
[25 188]
[26 187]
[27 186]
[28 185]
[31 183]
[32 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[46 176]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[57 168]
[58 167]
[59 166]
[61 164]
[63 162]
[64 161]
[65 160]
[66 159]
[67 157]
[68 156]
[74 148]
[75 147]
[76 146]
[77 145]
[78 134]
[79 133]
[81 131]
[82 130]
[83 129]
[84 128]
[86 127]
[89 126]
[90 125]
[91 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
