%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[94.51602936 579.62756348]
[86.56176758 592.43359375]
[75.77348328 602.96337891]
[62.77838516 610.60473633]
[48.33199692 614.91351318]
[33.27420807 615.63909912]
[18.48046494 612.73931885]
[4.81085062 606.38281250]
[-6.93989897 596.93914795]
[-16.08860970 584.95727539]
[-22.10338974 571.13391113]
[-24.63454819 556.27264404]
[-23.53492355 541.23754883]
[-18.86844826 526.90270996]
[-10.90642452 514.10156250]
[-0.11175551 503.57833862]
[12.88797188 495.94482422]
[27.33697128 491.64483643]
[42.39519501 490.92837524]
[45.28046799 476.20849609]
[48.16574097 461.48858643]
[51.05101395 446.76870728]
[53.49674225 431.96942139]
[55.50075531 417.10391235]
[57.50476837 402.23837280]
[59.50878143 387.37283325]
[61.51279449 372.50732422]
[54.43050766 362.70080566]
[55.97842407 350.29968262]
[65.86794281 342.01959229]
[68.09306335 327.18554688]
[70.31817627 312.35150146]
[72.43280029 297.50128174]
[74.43681335 282.63577271]
[67.35453033 272.82925415]
[68.90244293 260.42813110]
[78.79196167 252.14802551]
[81.01708221 237.31398010]
[82.79954529 222.42025757]
[84.13777924 207.48007202]
[85.47601318 192.53988647]
[86.70298767 177.59016418]
[87.81864166 162.63169861]
[88.93428802 147.67324829]
[82.16503143 134.40576172]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[97.17123413 31.26836967]
[95.61071014 16.34976387]
[94.05018616 1.43116009]
[92.48966980 -13.48744488]
[90.92914581 -28.40604973]
[75.98072052 -30.23653030]
[61.82130432 -35.34526443]
[49.15992355 -43.47301865]
[38.62984467 -54.20944977]
[30.75688553 -67.01385498]
[25.93315125 -81.24237061]
[24.39752007 -96.18037415]
[26.22380829 -111.07835388]
[31.31723213 -125.18952942]
[39.41931915 -137.80728149]
[50.12102127 -148.30053711]
[62.88336945 -156.14532471]
[77.06462097 -160.95095825]
[75.50409698 -175.86956787]
[71.49887848 -184.07907104]
[74.03309631 -191.02166748]
[72.69486237 -205.96185303]
[71.35662842 -220.90203857]
[70.01839447 -235.84222412]
[68.45787048 -250.76081848]
[66.67540741 -265.65454102]
[64.89293671 -280.54824829]
[53.51697922 -295.02819824]
[61.04745483 -310.87936401]
[59.04343796 -325.74487305]
[57.03942490 -340.61041260]
[49.88751602 -327.42520142]
[37.15312195 -319.49832153]
[22.16498566 -318.90188599]
[8.84096718 -325.79177856]
[0.66393578 -338.36697388]
[-0.22865368 -353.34039307]
[6.39651966 -366.79800415]
[18.80765152 -375.22201538]
[33.76050186 -376.41040039]
[47.34643173 -370.05252075]
[56.01380157 -357.81115723]
[56.23712921 -372.80950928]
[56.46045685 -387.80783081]
[56.57212448 -402.80743408]
[56.57212448 -417.80743408]
[56.57212448 -432.80743408]
[42.79825592 -439.38339233]
[33.24832916 -451.28976440]
[29.81848907 -466.16250610]
[33.18973160 -481.04867554]
[42.69269943 -492.99255371]
[56.44056320 -499.62271118]
[71.70368195 -499.62271118]
[85.45154572 -492.99255371]
[94.95451355 -481.04867554]
[98.32575989 -466.16250610]
[94.89591980 -451.28976440]
[85.34599304 -439.38339233]
[71.57212067 -432.80743408]
[71.57212067 -417.80743408]
[71.57212067 -402.80743408]
[74.71562195 -396.11862183]
[71.45879364 -387.58450317]
[71.23546600 -372.58618164]
[71.01213837 -357.58782959]
[71.90495300 -342.61444092]
[73.90896606 -327.74890137]
[75.91297913 -312.88336182]
[85.33927155 -305.30236816]
[87.13050842 -292.93405151]
[79.78665924 -282.33071899]
[81.56912231 -267.43701172]
[83.35158539 -252.54328918]
[86.48570251 -248.93963623]
[87.38929749 -243.32887268]
[84.95858002 -237.18045044]
[86.29681396 -222.24026489]
[87.63504791 -207.30007935]
[88.97328186 -192.35989380]
[90.42269897 -177.43008423]
[91.98322296 -162.51148987]
[106.85197449 -160.74455261]
[120.96147156 -155.71061707]
[133.60299683 -147.65911865]
[144.14083862 -136.99114990]
[152.04417419 -124.23947144]
[156.91392517 -110.04191589]
[158.50282288 -95.10948944]
[156.72796631 -80.19074249]
[151.67517090 -66.03427124]
[143.59484863 -53.35114288]
[132.88949585 -42.77917480]
[120.09378815 -34.85086441]
[105.84774780 -29.96657181]
[107.40827179 -15.04796791]
[108.96879578 -0.12936294]
[110.52931976 14.78924179]
[112.08984375 29.70784569]
[118.56995392 16.17979622]
[129.93920898 6.39510775]
[144.28167725 2.00267386]
[159.18040466 3.74269676]
[172.12471008 11.32195187]
[180.93322754 23.46320152]
[184.12158203 38.12042999]
[181.15248108 52.82364273]
[172.52626038 65.09508514]
[159.69657898 72.86679840]
[144.82550049 74.82912445]
[130.41902161 70.65137482]
[118.90492249 61.03756332]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[112.55522156 136.67234802]
[103.89273834 148.78889465]
[102.77709198 163.74736023]
[101.66144562 178.70581055]
[104.14391327 187.49642944]
[100.41619873 193.87812805]
[99.07796478 208.81831360]
[97.73973083 223.75849915]
[99.70574188 227.63003540]
[100.27977753 231.53323364]
[99.62281036 235.02662659]
[98.02265167 237.76635742]
[95.85112000 239.53909302]
[93.62600708 254.37313843]
[100.76147461 271.34860229]
[89.30234528 284.63977051]
[87.29833221 299.50531006]
[89.25316620 308.42810059]
[85.15222168 314.57659912]
[82.92710114 329.41064453]
[80.70198822 344.24468994]
[87.83745575 361.22015381]
[76.37832642 374.51132202]
[74.37431335 389.37686157]
[72.37029266 404.24240112]
[70.36627960 419.10791016]
[68.36226654 433.97344971]
[70.15344238 437.92889404]
[70.55261993 441.85385132]
[69.74031830 445.31442261]
[68.01942444 447.97994995]
[65.77090454 449.65396118]
[62.88563156 464.37387085]
[60.00035858 479.09375000]
[57.11508560 493.81365967]
[70.78855133 500.16186523]
[82.54502106 509.59841919]
[91.70099640 521.57470703]
[97.72415924 535.39447021]
[100.26432800 550.25415039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 203]
[22 202]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[30 191]
[31 190]
[32 189]
[33 187]
[34 186]
[37 184]
[38 183]
[39 178]
[40 177]
[41 176]
[42 174]
[43 173]
[44 172]
[46 170]
[47 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[70 134]
[71 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 126]
[78 125]
[79 124]
[81 121]
[82 120]
[83 119]
[94 118]
[95 117]
[96 116]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
