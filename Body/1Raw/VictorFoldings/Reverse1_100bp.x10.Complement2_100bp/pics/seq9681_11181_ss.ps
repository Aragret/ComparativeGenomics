%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[168.27777100 633.83020020]
[163.58506775 619.56896973]
[160.38362122 604.90081787]
[158.70735168 589.98120117]
[158.57405090 574.96832275]
[159.98510742 560.02136230]
[162.92556763 545.29864502]
[167.36427307 530.95635986]
[173.25416565 517.14642334]
[180.53280640 504.01535034]
[189.12304688 491.70227051]
[198.93380737 480.33773804]
[209.86109924 470.04217529]
[221.78909302 460.92477417]
[234.59133911 453.08218384]
[228.11184692 439.55383301]
[215.63589478 431.41748047]
[216.65287781 415.62899780]
[210.17338562 402.10064697]
[203.69389343 388.57229614]
[197.21440125 375.04397583]
[190.73489380 361.51562500]
[184.25540161 347.98727417]
[177.77590942 334.45892334]
[171.29641724 320.93057251]
[158.82046509 312.79425049]
[159.83744812 297.00573730]
[153.35795593 283.47741699]
[147.36511230 297.22824097]
[133.45523071 302.84210205]
[119.59652710 297.10308838]
[113.72789001 283.29876709]
[119.21115112 269.33688354]
[132.90524292 263.21545410]
[146.96485901 268.44046021]
[141.71813965 254.38798523]
[136.47143555 240.33551025]
[133.43266296 238.54713440]
[131.10914612 235.19805908]
[130.22497559 230.64048767]
[131.31958008 225.53666687]
[126.70556641 211.26393127]
[122.09155273 196.99119568]
[111.46802521 191.20611572]
[107.50720978 179.35302734]
[112.84973907 167.61334229]
[108.44873810 153.27349854]
[104.04774475 138.93363953]
[99.64674377 124.59379578]
[95.24574280 110.25395203]
[89.11804962 123.94523621]
[76.17095184 131.51971436]
[61.23340988 130.15229797]
[49.87675476 120.35299683]
[46.33673477 105.77670288]
[51.93369293 91.86002350]
[64.58010101 83.79352570]
[79.55915833 84.58582306]
[91.28470612 93.94237518]
[88.61890411 79.18115234]
[85.95310974 64.41993713]
[83.28731537 49.65872192]
[80.62152100 34.89750290]
[76.01679993 27.00862694]
[78.02763367 19.89678192]
[75.58190918 5.09751129]
[72.26846313 1.06412709]
[70.96393585 -3.39137554]
[71.49270630 -7.43308973]
[73.37284088 -10.41594791]
[71.59037018 -25.30966568]
[69.80790710 -40.20338058]
[68.02543640 -55.09709930]
[65.30081177 -58.47798157]
[63.93146515 -62.17790222]
[63.85128784 -65.73162842]
[64.84984589 -68.74318695]
[66.60751343 -70.92693329]
[65.71469879 -85.90033722]
[64.82188416 -100.87374878]
[53.06481934 -91.55863190]
[38.41785431 -94.79382324]
[31.67819023 -108.19445038]
[37.81405640 -121.88208008]
[52.30231857 -125.76669312]
[64.46197510 -116.98615265]
[64.68530273 -131.98448181]
[56.27818680 -141.76626587]
[56.77296829 -154.25381470]
[65.35942078 -162.77433777]
[65.80602264 -177.76770020]
[66.25263214 -192.76104736]
[51.62372208 -196.32316589]
[38.05526733 -202.84931946]
[26.14041901 -212.05421448]
[16.40004730 -223.53546143]
[9.25995827 -236.79112244]
[5.03228474 -251.24174500]
[3.90184331 -266.25561523]
[5.91805124 -281.17633057]
[10.99276924 -295.35171509]
[18.90415192 -308.16201782]
[29.30634880 -319.04721069]
[41.74461746 -327.53152466]
[55.67521667 -333.24395752]
[70.48915100 -335.93487549]
[85.53882599 -335.48660278]
[100.16633606 -331.91870117]
[113.73222351 -325.38720703]
[125.64344788 -316.17764282]
[135.37930298 -304.69256592]
[142.51417542 -291.43408203]
[146.73616028 -276.98181152]
[147.86070251 -261.96749878]
[145.83862305 -247.04756165]
[140.75831604 -232.87419128]
[132.84190369 -220.06701660]
[122.43542480 -209.18588257]
[109.99382019 -200.70649719]
[96.06097412 -194.99951172]
[81.24597931 -192.31443787]
[80.79937744 -177.32109070]
[80.35276794 -162.32774353]
[89.49145508 -147.34603882]
[79.68363953 -131.76115417]
[79.46031189 -116.76282501]
[79.79528809 -101.76656342]
[80.68811035 -86.79315948]
[81.58092499 -71.81974792]
[82.91915894 -56.87956619]
[84.70162201 -41.98584747]
[86.48408508 -27.09213066]
[88.26655579 -12.19841385]
[90.38117981 2.65178394]
[92.82690430 17.45105553]
[95.38273621 32.23170853]
[98.04853058 46.99292374]
[100.71433258 61.75414276]
[103.38012695 76.51535797]
[106.04592133 91.27658081]
[109.58559418 105.85295105]
[113.98658752 120.19280243]
[118.38758850 134.53265381]
[122.78858948 148.87249756]
[127.18958282 163.21234131]
[140.95782471 175.44006348]
[136.36428833 192.37718201]
[140.97830200 206.64991760]
[145.59230042 220.92265320]
[150.52389526 235.08879089]
[155.77061462 249.14126587]
[161.01733398 263.19372559]
[166.88629150 276.99792480]
[173.36579895 290.52624512]
[186.30519104 299.63024902]
[184.82475281 314.45108032]
[191.30426025 327.97943115]
[197.78375244 341.50778198]
[204.26324463 355.03613281]
[210.74273682 368.56445312]
[217.22224426 382.09280396]
[223.70173645 395.62115479]
[230.18122864 409.14950562]
[243.12063599 418.25347900]
[241.64019775 433.07434082]
[248.11968994 446.60269165]
[262.25500488 441.54336548]
[276.83563232 437.96426392]
[291.70697021 435.90338135]
[306.71139526 435.38250732]
[321.68984985 436.40719604]
[336.48355103 438.96658325]
[350.93566895 443.03353882]
[364.89300537 448.56491089]
[378.20764160 455.50213623]
[390.73840332 463.77160645]
[402.35244751 473.28570557]
[412.92666626 483.94354248]
[422.34899902 495.63217163]
[430.51950073 508.22766113]
[437.35162354 521.59649658]
[442.77291870 535.59698486]
[446.72589111 550.08074951]
[449.16867065 564.89410400]
[450.07534790 579.88018799]
[449.43634033 594.88006592]
[447.25836182 609.73468018]
[443.56454468 624.28668213]
[438.39404297 638.38171387]
[431.80166626 651.87036133]
[423.85726929 664.60968018]
[414.64511108 676.46466064]
[404.26281738 687.30957031]
[392.82043457 697.02947998]
[380.43930054 705.52130127]
[367.25064087 712.69506836]
[353.39422607 718.47473145]
[339.01699829 722.79901123]
[324.27136230 725.62207031]
[309.31356812 726.91394043]
[294.30224609 726.66101074]
[279.39648438 724.86590576]
[264.75430298 721.54766846]
[250.53092957 716.74145508]
[236.87712097 710.49822998]
[223.93762207 702.88421631]
[211.84960938 693.98010254]
[200.74121094 683.88018799]
[190.73017883 672.69165039]
[181.92263794 660.53308105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 166]
[16 165]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[27 154]
[28 153]
[35 152]
[36 151]
[37 150]
[41 149]
[42 148]
[43 147]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[65 135]
[66 134]
[70 133]
[71 132]
[72 131]
[73 130]
[78 129]
[79 128]
[80 127]
[86 126]
[87 125]
[90 123]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
