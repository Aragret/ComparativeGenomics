%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[153.26292419 469.59130859]
[158.36137390 455.44049072]
[165.90478516 442.42755127]
[175.65069580 430.97082520]
[187.28579712 421.43853760]
[200.43608093 414.13717651]
[195.61007690 399.93472290]
[190.78408813 385.73226929]
[185.95808411 371.52981567]
[181.13209534 357.32736206]
[170.42361450 351.70108032]
[166.28675842 339.90826416]
[171.45390320 328.09036255]
[166.83988953 313.81762695]
[162.22589111 299.54489136]
[157.50575256 285.30688477]
[152.67974854 271.10443115]
[147.85375977 256.90197754]
[142.92216492 242.73583984]
[137.88523865 228.60681152]
[132.84832764 214.47778320]
[118.17291260 211.92869568]
[106.66728973 202.31222534]
[101.48567200 188.13417053]
[104.11371613 173.16787720]
[113.94424438 161.45002747]
[108.90732574 147.32099915]
[103.87040710 133.19197083]
[98.83349609 119.06293488]
[85.78766632 112.75797272]
[80.92216492 99.10977936]
[87.03747559 85.97398376]
[82.00055695 71.84494781]
[76.96364594 57.71591949]
[71.61245728 43.70289993]
[65.94966888 29.81287193]
[60.28688431 15.92284489]
[53.30843353 2.64499831]
[45.07962418 -9.89640236]
[36.85081482 -22.43780327]
[38.67334366 -7.54893398]
[37.50297928 7.40533781]
[33.38634491 21.82939148]
[26.48739624 35.14871979]
[17.08092117 46.83282089]
[5.54157591 56.41632462]
[-7.67103386 63.51751709]
[-22.03065300 67.85356140]
[-36.96534729 69.25176239]
[-51.88026810 67.65642548]
[-66.18136597 63.13108826]
[-79.29902649 55.85599899]
[-90.71078491 46.12091827]
[-99.96211243 34.31359100]
[-106.68453217 20.90430069]
[-110.61029053 6.42713213]
[-111.58303070 -8.54129410]
[-109.56400299 -23.40479088]
[-104.63363647 -37.57135010]
[-96.98828888 -50.47672653]
[-86.93248749 -61.60689926]
[-74.86673737 -70.51856232]
[-61.27162170 -76.85676575]
[-46.68862534 -80.36906433]
[-31.69858170 -80.91555786]
[-16.89854431 -78.47447968]
[-2.87798691 -73.14306641]
[9.80465412 -65.13365936]
[20.64423370 -54.76526642]
[29.20698738 -42.45451736]
[26.98187065 -57.28855896]
[24.75675201 -72.12260437]
[22.53163528 -86.95664978]
[20.30651855 -101.79068756]
[10.60768795 -114.29042053]
[16.37140656 -128.02464294]
[14.14628983 -142.85868835]
[11.92117214 -157.69273376]
[2.22234249 -170.19245911]
[7.98606110 -183.92668152]
[5.76094389 -198.76072693]
[-9.27008820 -198.88145447]
[-24.09715462 -201.35220337]
[-38.35512924 -206.11210632]
[-51.69289017 -213.04396057]
[-63.78199005 -221.97705078]
[-74.32472229 -232.69140625]
[-83.06145477 -244.92315674]
[-89.77704620 -258.37112427]
[-94.30612183 -272.70407104]
[-96.53713989 -287.56912231]
[-96.41516876 -302.60012817]
[-93.94319916 -317.42700195]
[-89.18212128 -331.68457031]
[-82.24916840 -345.02175903]
[-73.31507111 -357.11013794]
[-62.59985352 -367.65197754]
[-50.36737061 -376.38769531]
[-36.91886902 -383.10217285]
[-22.58552742 -387.63006592]
[-7.72031641 -389.85986328]
[7.31069517 -389.73666382]
[22.13735390 -387.26345825]
[36.39454269 -382.50119019]
[49.73115921 -375.56713867]
[61.81878662 -366.63204956]
[72.35974884 -355.91595459]
[81.09446716 -343.68276978]
[87.80783844 -330.23370361]
[92.33454895 -315.89999390]
[94.56311035 -301.03460693]
[94.43865204 -286.00360107]
[91.96424103 -271.17715454]
[87.20080566 -256.92034912]
[80.26565552 -243.58430481]
[71.32956696 -231.49742126]
[60.61260605 -220.95733643]
[48.37868500 -212.22363281]
[34.92907715 -205.51136780]
[20.59498787 -200.98583984]
[22.82010460 -186.15179443]
[32.35977936 -174.71310425]
[26.75521660 -159.91784668]
[28.98033333 -145.08380127]
[31.20545006 -130.24975586]
[40.74512482 -118.81105804]
[35.14056015 -104.01580811]
[37.36568069 -89.18176270]
[39.59079742 -74.34771729]
[41.81591415 -59.51367569]
[44.04103088 -44.67963409]
[49.39221573 -30.66661072]
[57.62102509 -18.12520981]
[65.84983063 -5.58380985]
[65.40390778 -20.57717896]
[71.01942444 -34.48638535]
[81.75006104 -44.96747971]
[95.78752899 -50.25421524]
[110.76625824 -49.45568466]
[124.16207123 -42.70645523]
[133.71754456 -31.14388657]
[137.82240295 -16.71647835]
[135.78491211 -1.85550034]
[127.94843292 10.93470955]
[115.63353729 19.49877739]
[100.91549683 22.39350891]
[86.27457428 19.13108826]
[74.17691040 10.26005840]
[79.83969879 24.15008545]
[85.50248718 38.04011154]
[88.59314728 39.73721695]
[91.01535034 43.01562881]
[92.03482819 47.54486084]
[91.09267426 52.67900467]
[96.12959290 66.80803680]
[101.16650391 80.93706512]
[114.21233368 87.24202728]
[119.07783508 100.89022064]
[112.96252441 114.02601624]
[117.99944305 128.15504456]
[123.03635406 142.28407288]
[128.07327271 156.41310120]
[143.09948730 159.26966858]
[154.60244751 169.19834900]
[159.55830383 183.45689392]
[156.73069763 198.18307495]
[146.97735596 209.44087219]
[152.01428223 223.56990051]
[157.05119324 237.69892883]
[162.88055420 244.73144531]
[162.05621338 252.07598877]
[166.88220215 266.27844238]
[171.70820618 280.48089600]
[177.43222046 287.59942627]
[176.49861145 294.93087769]
[181.11262512 309.20361328]
[185.72663879 323.47634888]
[199.67539978 335.49771118]
[195.33454895 352.50134277]
[200.16053772 366.70379639]
[204.98654175 380.90628052]
[209.81253052 395.10873413]
[214.63853455 409.31118774]
[229.51477051 407.08914185]
[244.54869080 407.55926514]
[259.25701904 410.70645142]
[273.16693115 416.42953491]
[285.83132935 424.54452515]
[296.84304810 434.79058838]
[305.84814453 446.83834839]
[312.55709839 460.30050659]
[316.75430298 474.74429321]
[318.30477905 489.70544434]
[317.15872192 504.70297241]
[313.35296631 519.25482178]
[307.00985718 532.89318848]
[298.33328247 545.17962646]
[287.60214233 555.71917725]
[275.16143799 564.17309570]
[261.41107178 570.26959229]
[246.79307556 573.81268311]
[231.77731323 574.68847656]
[216.84652710 572.86883545]
[202.48065186 568.41223145]
[189.14149475 561.46191406]
[177.25787354 552.24133301]
[167.21176147 541.04687500]
[159.32614136 528.23840332]
[153.85447693 514.22766113]
[150.97265625 499.46505737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[13 177]
[14 176]
[15 175]
[16 173]
[17 172]
[18 171]
[19 169]
[20 168]
[21 167]
[26 162]
[27 161]
[28 160]
[29 159]
[32 156]
[33 155]
[34 154]
[35 150]
[36 149]
[37 148]
[38 134]
[39 133]
[40 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 125]
[77 124]
[78 123]
[80 121]
[81 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
