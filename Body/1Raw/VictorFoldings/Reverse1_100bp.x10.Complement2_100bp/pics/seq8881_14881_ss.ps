%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[175.49629211 477.56896973]
[188.20854187 469.48526001]
[183.17163086 455.35623169]
[178.13470459 441.22720337]
[173.09779358 427.09817505]
[168.06088257 412.96914673]
[163.02395630 398.84011841]
[157.88200378 384.74896240]
[152.63528442 370.69650269]
[147.38856506 356.64401245]
[142.14184570 342.59155273]
[136.89512634 328.53909302]
[131.64840698 314.48660278]
[126.36386108 309.31985474]
[126.42989349 300.18566895]
[121.39297485 286.05664062]
[116.35606384 271.92761230]
[107.66648102 284.15426636]
[92.69864655 285.13613892]
[82.48629761 274.14941406]
[84.55759430 259.29312134]
[97.38565063 251.51873779]
[111.51293945 256.55609131]
[107.54084015 242.09158325]
[103.56874847 227.62705994]
[99.59664917 213.16253662]
[95.89030457 227.69741821]
[87.24308014 239.95407104]
[74.79267120 248.31991577]
[60.17713928 251.69427490]
[45.31941605 249.63319397]
[32.17428589 242.40786743]
[22.47121620 230.96887207]
[17.48681450 216.82122803]
[17.87686348 201.82630920]
[23.59004593 187.95692444]
[33.87469482 177.03785706]
[47.37768936 170.50569153]
[62.32247162 169.21984863]
[76.74280548 173.34948730]
[88.74144745 182.35130310]
[96.74064636 195.04315186]
[96.07086182 180.05812073]
[87.77297974 167.68902588]
[94.88635254 153.55712891]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[90.31004333 63.67556381]
[78.55297089 72.99067688]
[63.90600967 69.75548553]
[57.16634750 56.35485840]
[63.30221176 42.66722870]
[77.79047394 38.78261566]
[89.95013428 47.56315994]
[90.17346191 32.56482315]
[80.83402252 16.69483948]
[90.41471100 1.99187267]
[90.41471100 -13.00812721]
[82.67741394 -26.80830002]
[90.41471100 -39.53557205]
[81.86289215 -49.19109344]
[82.17169189 -61.68462753]
[90.63033295 -70.33205414]
[90.85366058 -85.33039093]
[91.07699585 -100.32872772]
[91.30032349 -115.32706451]
[91.52365112 -130.32540894]
[91.74697876 -145.32374573]
[91.97030640 -160.32208252]
[84.43932343 -174.23591614]
[92.36525726 -186.84658813]
[92.58858490 -201.84492493]
[92.81191254 -216.84326172]
[93.03524017 -231.84159851]
[92.92357635 -246.84117126]
[92.47696686 -261.83453369]
[92.03036499 -276.82788086]
[91.58375549 -291.82122803]
[91.13714600 -306.81457520]
[90.69054413 -321.80792236]
[90.24393463 -336.80126953]
[75.32289124 -338.59570312]
[60.83596420 -342.59402466]
[47.10681152 -348.70697021]
[34.44214249 -356.79794312]
[23.12488937 -366.68618774]
[13.40788746 -378.15081787]
[5.50821590 -390.93566895]
[-0.39764386 -404.75518799]
[-4.17775202 -419.30056763]
[-5.74766016 -434.24691772]
[-5.07229567 -449.26028442]
[-2.16674662 -464.00531006]
[2.90407634 -478.15252686]
[10.02688885 -491.38595581]
[19.04256439 -503.40988159]
[29.74969101 -513.95574951]
[41.90906525 -522.78790283]
[55.24904251 -529.70910645]
[69.47160339 -534.56463623]
[84.25901031 -537.24609375]
[99.28091431 -537.69354248]
[114.20170593 -535.89703369]
[128.68806458 -531.89660645]
[142.41633606 -525.78173828]
[155.07986450 -517.68896484]
[166.39570618 -507.79910278]
[176.11106873 -496.33309937]
[184.00892639 -483.54708862]
[189.91281128 -469.72674561]
[193.69085693 -455.18081665]
[195.25863647 -440.23425293]
[194.58113098 -425.22097778]
[191.67347717 -410.47637939]
[186.60064697 -396.32986450]
[179.47593689 -383.09747314]
[170.45855713 -371.07479858]
[159.74992371 -360.53048706]
[147.58929443 -351.70004272]
[134.24833679 -344.78076172]
[120.02507782 -339.92724609]
[105.23728943 -337.24789429]
[105.68389130 -322.25454712]
[106.13050079 -307.26116943]
[106.57710266 -292.26782227]
[107.02371216 -277.27447510]
[107.47031403 -262.28112793]
[107.91692352 -247.28778076]
[110.21873474 -244.61682129]
[111.34120178 -240.69827271]
[110.71204376 -236.09854126]
[108.03357697 -231.61827087]
[107.81024933 -216.61993408]
[107.58692169 -201.62159729]
[107.36359406 -186.62326050]
[114.91054535 -173.78219604]
[106.96864319 -160.09875488]
[106.74531555 -145.10041809]
[106.52198792 -130.10208130]
[106.29866028 -115.10373688]
[106.07533264 -100.10540009]
[105.85200500 -85.10706329]
[105.62867737 -70.10872650]
[114.98940277 -55.26474380]
[105.41471100 -39.53557205]
[113.15201569 -26.80830002]
[105.41471100 -13.00812721]
[105.41471100 1.99187267]
[113.74366760 10.76427460]
[113.86643219 23.26102257]
[105.17179871 32.78815079]
[104.94847107 47.78648758]
[105.28344727 62.78274536]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[109.87139130 152.88734436]
[118.21718597 166.32826233]
[111.05590057 179.38832092]
[111.72568512 194.37336731]
[114.06117249 209.19042969]
[118.03327179 223.65495300]
[122.00536346 238.11947632]
[125.97746277 252.58399963]
[130.48509216 266.89068604]
[135.52200317 281.01971436]
[140.55892944 295.14874268]
[145.70088196 309.23989868]
[150.94760132 323.29235840]
[156.19432068 337.34484863]
[161.44104004 351.39730835]
[166.68775940 365.44976807]
[171.93447876 379.50225830]
[177.86790466 386.44720459]
[177.15299988 393.80319214]
[182.18991089 407.93222046]
[187.22682190 422.06124878]
[192.26374817 436.19027710]
[197.30065918 450.31930542]
[202.33757019 464.44833374]
[217.29670715 462.66735840]
[232.27703857 464.26025391]
[246.52716064 469.14715576]
[259.33230591 477.08291626]
[270.05014038 487.66949463]
[278.14306641 500.37588501]
[283.20516968 514.56469727]
[284.98254395 529.52429199]
[283.38601685 544.50421143]
[278.49566650 558.75317383]
[270.55679321 571.55639648]
[259.96762085 582.27166748]
[247.25926208 590.36151123]
[233.06921387 595.42016602]
[218.10922241 597.19390869]
[203.12965393 595.59375000]
[188.88191223 590.69995117]
[176.08062744 582.75799561]
[165.36791992 572.16619873]
[157.28112793 559.45587158]
[152.22590637 545.26464844]
[150.45579529 530.30419922]
[152.05958557 515.32501221]
[156.95684814 501.07846069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[15 173]
[16 172]
[17 171]
[23 170]
[24 169]
[25 168]
[26 167]
[42 166]
[43 165]
[45 163]
[46 162]
[47 161]
[48 160]
[49 158]
[50 157]
[51 156]
[57 155]
[58 154]
[60 151]
[61 150]
[63 148]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[74 138]
[75 137]
[76 136]
[77 135]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
