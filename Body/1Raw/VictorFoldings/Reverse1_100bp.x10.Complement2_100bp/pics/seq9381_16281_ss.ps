%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[41.71314240 726.92999268]
[27.56039238 731.93780518]
[12.97934723 735.51159668]
[-1.88507545 737.61578369]
[-16.88514137 738.22943115]
[-31.87177277 737.34655762]
[-46.69601822 734.97583008]
[-61.21054459 731.14080811]
[-75.27109528 725.87969971]
[-88.73793030 719.24468994]
[-101.47720337 711.30181885]
[-113.36230469 702.12994385]
[-124.27510834 691.82031250]
[-134.10716248 680.47528076]
[-142.76072693 668.20764160]
[-150.14982605 655.13940430]
[-156.20100403 641.40032959]
[-160.85414124 627.12701416]
[-164.06295776 612.46136475]
[-165.79557800 597.54907227]
[-166.03479004 582.53833008]
[-164.77821350 567.57843018]
[-162.03831482 552.81793213]
[-157.84236145 538.40362549]
[-152.23202515 524.47869873]
[-145.26309204 511.18164062]
[-137.00480652 498.64450073]
[-127.53923798 486.99197388]
[-116.96047974 476.33981323]
[-105.37366486 466.79391479]
[-92.89395142 458.44912720]
[-79.64537811 451.38839722]
[-65.75959778 445.68191528]
[-51.37464142 441.38638306]
[-36.63346481 438.54452515]
[-21.68257713 437.18450928]
[-6.67057323 437.31991577]
[8.25334835 438.94940186]
[11.35745811 424.27410889]
[14.46156883 409.59878540]
[17.56567955 394.92349243]
[20.66978836 380.24819946]
[12.35526752 367.94354248]
[15.29422188 353.01647949]
[28.25684166 344.37887573]
[31.36095238 329.70358276]
[34.46506119 315.02825928]
[32.85854340 311.88955688]
[32.69247055 307.81680298]
[34.38929749 303.49545288]
[38.04936600 299.77377319]
[41.80566788 285.25170898]
[45.56196976 270.72964478]
[39.69517899 260.15100098]
[42.70576477 248.02169800]
[53.50914764 240.97544861]
[57.48124313 226.51092529]
[49.91384888 213.73320007]
[53.73606873 199.00753784]
[67.18982697 191.15679932]
[71.16191864 176.69226074]
[75.13401794 162.22773743]
[79.10611725 147.76321411]
[67.44546509 140.71955872]
[58.00772858 130.89544678]
[51.43733215 118.96172333]
[48.18292236 105.73324585]
[48.46671677 92.11328125]
[52.26933670 79.03184509]
[59.33113098 67.38217163]
[69.16989899 57.95972443]
[81.11383057 51.40789795]
[94.34735870 48.17406845]
[107.96686554 48.47904587]
[112.36785889 34.13919830]
[116.76885986 19.79935074]
[121.16986084 5.45950413]
[125.35687256 -8.94427776]
[129.32896423 -23.40880203]
[128.58374023 -32.51278305]
[133.46937561 -38.05826950]
[137.65638733 -52.46205139]
[141.84339905 -66.86583710]
[146.03041077 -81.26961517]
[150.21742249 -95.67340088]
[144.70069885 -107.33223724]
[148.48460388 -119.24298096]
[159.02081299 -125.18560028]
[163.42181396 -139.52543640]
[167.82281494 -153.86529541]
[171.14508057 -168.49275208]
[173.37019348 -183.32679749]
[175.59530640 -198.16084290]
[177.82041931 -212.99488831]
[163.60522461 -217.91859436]
[150.53692627 -225.37069702]
[139.06060791 -235.09739685]
[129.56715393 -246.76741028]
[122.37991333 -259.98324585]
[117.74368286 -274.29476929]
[115.81636047 -289.21456909]
[116.66359711 -304.23443604]
[120.25653839 -318.84283447]
[126.47280884 -332.54220581]
[135.10067749 -344.86593628]
[145.84629822 -355.39431763]
[158.34365845 -363.76870728]
[172.16711426 -369.70391846]
[186.84585571 -372.99777222]
[201.87989807 -373.53808594]
[216.75721741 -371.30648804]
[230.97108459 -366.37896729]
[244.03738403 -358.92330933]
[255.51107788 -349.19351196]
[265.00137329 -337.52096558]
[272.18505859 -324.30319214]
[276.81744385 -309.99041748]
[278.74072266 -295.07009888]
[277.88943481 -280.05044556]
[274.29257202 -265.44302368]
[268.07260132 -251.74533081]
[259.44140625 -239.42391968]
[248.69296265 -228.89845276]
[236.19334412 -220.52742004]
[222.36828613 -214.59594727]
[207.68865967 -211.30604553]
[192.65446472 -210.76976013]
[190.42935181 -195.93571472]
[188.20423889 -181.10168457]
[185.97912598 -166.26763916]
[196.52720642 -176.93243408]
[210.96809387 -180.98962402]
[225.52696228 -177.37866211]
[236.39817810 -167.04344177]
[240.74002075 -152.68557739]
[237.41754150 -138.05816650]
[227.29922485 -126.98477936]
[213.02998352 -122.35998535]
[198.33976746 -125.39268494]
[187.06854248 -135.29014587]
[182.16265869 -149.46429443]
[177.76165771 -135.12445068]
[173.36067200 -120.78459930]
[178.20585632 -103.91773987]
[164.62120056 -91.48638916]
[160.43418884 -77.08260345]
[156.24717712 -62.67882156]
[152.06016541 -48.27503967]
[147.87315369 -33.87125778]
[143.79348755 -19.43670464]
[139.82139587 -4.97218180]
[141.36314392 -0.45199832]
[140.08171082 5.08469248]
[135.50970459 9.86050224]
[131.10870361 24.20034981]
[126.70771027 38.54019547]
[122.30670929 52.88004303]
[135.75750732 62.06214523]
[145.71875000 74.94655609]
[151.21836853 90.27590942]
[151.71965027 106.55422211]
[147.17366028 122.19290924]
[138.02404785 135.66581726]
[125.16371918 145.65815735]
[109.84769440 151.19474792]
[93.57064056 151.73532104]
[89.59854126 166.19984436]
[85.62644958 180.66436768]
[81.65435028 195.12889099]
[89.21186066 208.74952698]
[84.97753906 223.36203003]
[71.94577026 230.48301697]
[67.97367096 244.94754028]
[73.04137421 262.65063477]
[60.08402634 274.48593140]
[56.32772827 289.00799561]
[52.57142639 303.53005981]
[49.14036560 318.13238525]
[46.03625488 332.80767822]
[42.93214417 347.48300171]
[51.28697205 360.62963867]
[47.92990875 375.46826172]
[35.34509277 383.35229492]
[32.24098206 398.02761841]
[29.13687134 412.70291138]
[26.03276062 427.37820435]
[22.92864990 442.05349731]
[37.23416519 446.60662842]
[51.01523972 452.56152344]
[64.13491058 459.85897827]
[76.46277618 468.42648315]
[87.87632751 478.17889404]
[98.26211548 489.01928711]
[107.51692963 500.83990479]
[115.54878235 513.52325439]
[122.27784729 526.94335938]
[127.63725281 540.96673584]
[131.57371521 555.45404053]
[134.04814148 570.26135254]
[135.03591919 585.24145508]
[134.52722168 600.24542236]
[132.52713013 615.12420654]
[129.05549622 629.72991943]
[124.14685059 643.91735840]
[117.84995270 657.54553223]
[110.22740936 670.47906494]
[101.35495758 682.58929443]
[91.32079315 693.75598145]
[80.22463989 703.86804199]
[68.17677307 712.82501221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[45 180]
[46 179]
[47 178]
[51 177]
[52 176]
[53 175]
[56 173]
[57 172]
[60 169]
[61 168]
[62 167]
[63 166]
[74 157]
[75 156]
[76 155]
[77 154]
[78 151]
[79 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[88 143]
[89 142]
[90 141]
[91 130]
[92 129]
[93 128]
[94 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
