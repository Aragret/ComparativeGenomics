%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[73.18818665 524.97436523]
[62.90238190 513.94470215]
[55.68341064 500.70318604]
[51.98506165 486.08221436]
[52.03981400 471.00085449]
[55.84423065 456.40710449]
[63.15915680 443.21838379]
[73.52478027 432.26370239]
[86.28949738 424.23171997]
[100.65090942 419.62731934]
[99.75809479 404.65390015]
[98.86528015 389.68051147]
[95.95121002 385.89669800]
[95.38317871 380.24209595]
[98.17555237 374.24926758]
[97.72894287 359.25588989]
[97.28234100 344.26254272]
[96.83573151 329.26919556]
[96.38912964 314.27584839]
[95.94252014 299.28250122]
[95.49591064 284.28915405]
[82.77353668 273.29006958]
[81.92591095 256.15542603]
[93.96536255 243.46405029]
[93.29557800 228.47900391]
[92.62579346 213.49397278]
[90.65048218 211.50492859]
[89.34403229 208.61360168]
[89.05406189 205.07081604]
[90.03105164 201.24850464]
[92.38916779 197.60252380]
[92.61249542 182.60418701]
[92.83582306 167.60585022]
[93.05915070 152.60751343]
[93.05915070 137.60751343]
[92.83582306 122.60916901]
[92.61249542 107.61083221]
[91.60823822 92.64448547]
[89.82576752 77.75077057]
[88.04330444 62.85705566]
[86.26083374 47.96333694]
[84.36754608 33.08330154]
[82.36353302 18.21777344]
[77.32661438 4.08874369]
[69.47486115 -8.69209862]
[61.62310410 -21.47294044]
[53.77134705 -34.25378418]
[49.18041611 -36.73781586]
[46.29038239 -40.37113571]
[45.25419998 -44.31338882]
[45.86911774 -47.78530884]
[38.59589005 -60.90400314]
[31.32265854 -74.02269745]
[19.16161919 -78.32059479]
[13.37380600 -89.39691925]
[16.57858086 -101.06122589]
[9.50147533 -114.28675079]
[2.42437005 -127.51227570]
[-4.65273523 -140.73780823]
[-6.74092531 -125.88386536]
[-15.89823627 -114.00347900]
[-29.73096848 -108.20214081]
[-44.62327957 -109.99631500]
[-56.68235779 -118.91699982]
[-62.75598145 -132.63235474]
[-61.25653076 -147.55722046]
[-52.57594681 -159.79028320]
[-38.98332214 -166.13381958]
[-24.03173447 -164.92967224]
[-11.63007164 -156.49325562]
[-16.66698837 -170.62228394]
[-21.70390320 -184.75131226]
[-26.74081993 -198.88035583]
[-31.77773666 -213.00938416]
[-36.81465149 -227.13841248]
[-41.85157013 -241.26744080]
[-46.88848495 -255.39646912]
[-61.72998428 -252.95318604]
[-76.76924133 -253.19943237]
[-91.52279663 -256.12728882]
[-105.51638794 -261.64263916]
[-118.30018616 -269.56817627]
[-129.46324158 -279.64916992]
[-138.64669800 -291.56149292]
[-145.55535889 -304.92227173]
[-149.96713257 -319.30197144]
[-151.74018860 -334.23837280]
[-150.81755066 -349.25131226]
[-147.22888184 -363.85821533]
[-141.08950806 -377.58950806]
[-132.59681702 -390.00375366]
[-122.02381134 -400.70193481]
[-109.71035004 -409.34014893]
[-96.05227661 -415.64068604]
[-81.48863983 -419.40103149]
[-66.48759460 -420.50027466]
[-51.53136063 -418.90310669]
[-37.10072327 -414.66088867]
[-23.65957260 -407.90994263]
[-11.63997841 -398.86730957]
[-1.42832363 -387.82366943]
[6.64712906 -375.13403320]
[12.32678699 -361.20632935]
[15.42807388 -346.48825073]
[15.85129452 -331.45294189]
[13.58284569 -316.58370972]
[8.69564819 -302.35855103]
[1.34680486 -289.23474121]
[-8.22744942 -277.63418579]
[-19.71934128 -267.92971802]
[-32.75945663 -260.43338013]
[-27.72253990 -246.30435181]
[-22.68562317 -232.17532349]
[-17.64870644 -218.04629517]
[-12.61179066 -203.91726685]
[-7.57487440 -189.78823853]
[-2.53795815 -175.65921021]
[2.49895811 -161.53018188]
[8.57279205 -147.81491089]
[15.64989758 -134.58938599]
[22.72700310 -121.36385345]
[29.80410767 -108.13832855]
[45.18838501 -99.69493103]
[44.44135284 -81.29592896]
[51.71458435 -68.17723083]
[58.98781204 -55.05853653]
[66.55219269 -42.10553741]
[74.40394592 -29.32469749]
[82.25569916 -16.54385376]
[90.10746002 -3.76301169]
[88.71646118 -18.69837761]
[90.41837311 -33.60151291]
[95.14083099 -47.83873367]
[102.68302155 -60.80466461]
[112.72425842 -71.94798279]
[124.83757782 -80.79487610]
[138.50791931 -86.96916199]
[153.15400696 -90.20832062]
[168.15307617 -90.37460327]
[182.86738586 -87.46095276]
[196.67124939 -81.59125519]
[208.97772217 -73.01509094]
[219.26353455 -62.09712219]
[227.09133911 -49.30159378]
[232.12826538 -35.17256927]
[234.16015625 -20.31082535]
[233.10063171 -5.34829330]
[228.99472046 9.07881546]
[222.01699829 22.35705185]
[212.46418762 33.92181778]
[200.74247742 43.28137589]
[187.35026550 50.03775024]
[172.85699463 53.90365982]
[157.87893677 54.71472168]
[143.05296326 52.43644714]
[129.00949097 47.16571426]
[116.34563446 39.12663269]
[105.59987640 28.66103172]
[97.22905731 16.21376038]
[99.23307037 31.07928848]
[103.24202728 37.28816223]
[101.15455627 46.18087006]
[102.93701935 61.07458878]
[104.71949005 75.96830750]
[106.50195312 90.86202240]
[115.70384979 79.01612854]
[130.34028625 75.73368835]
[143.71971130 82.51537323]
[149.72518921 96.26070404]
[145.61112976 110.68549347]
[133.25842285 119.19492340]
[118.31453705 117.89859772]
[107.61083221 107.38750458]
[107.83415985 122.38584137]
[108.05748749 137.38418579]
[111.11466980 143.24636841]
[110.79969025 148.92066956]
[108.05748749 152.83084106]
[107.83415985 167.82917786]
[107.61083221 182.82751465]
[107.38750458 197.82585144]
[107.61083221 212.82418823]
[108.28061676 227.80921936]
[108.95040131 242.79426575]
[119.87043762 250.67889404]
[124.19245148 263.23001099]
[120.55045319 275.79257202]
[110.48926544 283.84255981]
[110.93586731 298.83590698]
[111.38247681 313.82925415]
[111.82907867 328.82260132]
[112.27568817 343.81594849]
[112.72229004 358.80929565]
[113.16889954 373.80264282]
[113.83868408 388.78768921]
[114.73149872 403.76107788]
[115.62431335 418.73449707]
[130.43112183 421.59970093]
[144.05984497 428.05792236]
[155.65377808 437.70321655]
[164.48410034 449.92926025]
[169.99574280 463.96749878]
[171.84225464 478.93551636]
[169.90753174 493.89239502]
[164.31321716 507.89788818]
[155.41094971 520.07165527]
[143.76036072 529.64843750]
[130.09379578 536.02618408]
[115.27035522 538.80401611]
[100.22185516 537.80737305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[24 184]
[25 183]
[26 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 175]
[36 174]
[37 173]
[38 165]
[39 164]
[40 163]
[41 162]
[42 160]
[43 159]
[44 130]
[45 129]
[46 128]
[47 127]
[51 126]
[52 125]
[53 124]
[56 122]
[57 121]
[58 120]
[59 119]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
