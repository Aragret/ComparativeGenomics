%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[142.27195740 688.57885742]
[132.89566040 676.85784912]
[124.59194946 664.35400391]
[117.42584229 651.16522217]
[111.45342255 637.39465332]
[106.72142029 623.15014648]
[103.26687622 608.54315186]
[101.11683655 593.68804932]
[100.28811646 578.70104980]
[100.78720856 563.69940186]
[102.61019897 548.80059814]
[105.74282837 534.12121582]
[110.16057587 519.77612305]
[115.82886505 505.87765503]
[122.70333862 492.53451538]
[130.73019409 479.85116577]
[139.84658813 467.92687988]
[149.98120117 456.85494995]
[161.05470276 446.72207642]
[172.98040771 437.60754395]
[185.66500854 429.58267212]
[199.00921631 422.71026611]
[193.34643555 408.82025146]
[187.68365479 394.93020630]
[182.02085876 381.04019165]
[170.05131531 372.17568970]
[172.00624084 356.47573853]
[157.58384705 346.47766113]
[160.24096680 328.25619507]
[154.37200928 314.45202637]
[148.50305176 300.64785767]
[144.52912903 315.11187744]
[133.43760681 325.21029663]
[118.66532135 327.81402588]
[104.78961182 322.11624146]
[96.11002350 309.88247681]
[95.31601715 294.90350342]
[102.65363312 281.82073975]
[115.84922791 274.68795776]
[130.81399536 275.71539307]
[142.91110229 284.58483887]
[138.93901062 270.12033081]
[134.96691895 255.65579224]
[124.13556671 245.43176270]
[127.94228363 230.07534790]
[117.11092377 219.85130310]
[120.91764069 204.49488831]
[116.94554901 190.03036499]
[112.97344971 175.56584167]
[109.00135040 161.10131836]
[95.12865448 161.56837463]
[81.50200653 158.92553711]
[68.80972290 153.30630493]
[57.69289780 144.99449158]
[48.71305847 134.40995789]
[42.32379150 122.08731842]
[38.84782028 108.64903259]
[38.46072388 94.77387238]
[41.18205643 81.16268921]
[46.87435532 68.50299835]
[55.25010300 57.43426514]
[65.88622284 48.51558304]
[78.24547577 42.19744110]
[74.70580292 27.62106705]
[71.16613007 13.04469204]
[66.10002136 5.44387960]
[67.68398285 -1.77504349]
[57.20600891 -9.29666996]
[54.74002838 -21.54830933]
[61.07332611 -31.85441971]
[57.96921539 -46.52972412]
[47.54358292 -58.43000793]
[52.47960663 -72.48294067]
[49.37549973 -87.15824127]
[46.27138901 -101.83354187]
[43.16727829 -116.50885010]
[39.95400238 -131.16062927]
[36.63174438 -145.78810120]
[33.30948639 -160.41555786]
[29.98722458 -175.04301453]
[26.66496658 -189.67047119]
[23.11732674 -193.49949646]
[21.54991531 -197.86944580]
[21.83717728 -201.93547058]
[23.53643417 -205.02494812]
[20.87063980 -219.78616333]
[18.20484352 -234.54737854]
[15.53904819 -249.30859375]
[0.50178480 -250.55082703]
[-13.70125675 -255.64356995]
[-26.10168839 -264.23959351]
[-35.85403061 -275.75280762]
[-42.29335022 -289.39822388]
[-44.98060226 -304.24548340]
[-43.73257065 -319.28228760]
[-38.63434601 -333.48333740]
[-30.03352928 -345.88046265]
[-18.51654434 -355.62835693]
[-4.86863565 -362.06240845]
[9.97965908 -364.74392700]
[25.01595879 -363.49008179]
[39.21506119 -358.38638306]
[51.60885239 -349.78079224]
[61.35230255 -338.26004028]
[67.78108215 -324.60964966]
[70.45687103 -309.76031494]
[69.19722748 -294.72448730]
[64.08803558 -280.52737427]
[55.47764969 -268.13690186]
[43.95314026 -258.39788818]
[30.30026436 -251.97439575]
[32.96606064 -237.21318054]
[35.63185501 -222.45195007]
[38.29765320 -207.69073486]
[41.29242706 -192.99273682]
[44.61468506 -178.36528015]
[47.93694687 -163.73780823]
[51.25920486 -149.11035156]
[54.58146286 -134.48289490]
[59.12835693 -128.65644836]
[57.84257889 -119.61296082]
[60.94668961 -104.93765259]
[64.05080414 -90.26235199]
[67.15490723 -75.58705139]
[77.35851288 -64.73644257]
[72.64451599 -49.63383484]
[75.74862671 -34.95853043]
[88.16457367 -22.55646706]
[82.31144714 -5.09730291]
[85.74250793 9.50501919]
[89.28218079 24.08139420]
[92.82185364 38.65776825]
[108.87934875 38.88083649]
[124.33650970 43.23619843]
[138.14826965 51.42938995]
[149.38081360 62.90645981]
[157.27468872 76.89144135]
[161.29618835 92.43881226]
[161.17343140 108.49739075]
[156.91471863 123.98145294]
[148.80796814 137.84413147]
[137.40127563 149.14813232]
[123.46588135 157.12921143]
[127.43797302 171.59373474]
[131.41006470 186.05827332]
[135.38217163 200.52279663]
[146.49763489 211.78143311]
[142.40679932 226.10324097]
[153.52226257 237.36189270]
[149.43144226 251.68370056]
[153.40353394 266.14822388]
[157.37564087 280.61276245]
[162.30722046 294.77890015]
[168.17619324 308.58306885]
[174.04515076 322.38723755]
[185.69306946 327.92700195]
[190.29714966 339.54534912]
[185.89627075 350.81295776]
[198.27085876 360.67095947]
[195.91088867 375.37741089]
[201.57366943 389.26742554]
[207.23646545 403.15747070]
[212.89924622 417.04748535]
[227.24475098 412.63113403]
[241.92443848 409.49993896]
[256.82342529 407.67840576]
[271.82507324 407.18075562]
[286.81204224 408.01095581]
[301.66696167 410.16244507]
[316.27359009 413.61840820]
[330.51763916 418.35177612]
[344.28759766 424.32556152]
[357.47567749 431.49295044]
[369.97872925 439.79788208]
[381.69885254 449.17532349]
[392.54431152 459.55191040]
[402.43023682 470.84643555]
[411.27923584 482.97045898]
[419.02209473 495.82916260]
[425.59820557 509.32183838]
[430.95608521 523.34289551]
[435.05377197 537.78265381]
[437.85925293 552.52807617]
[439.35052490 567.46374512]
[439.51593018 582.47271729]
[438.35418701 597.43762207]
[435.87438965 612.24127197]
[432.09591675 626.76782227]
[427.04837036 640.90362549]
[420.77124023 654.53796387]
[413.31365967 667.56414795]
[404.73400879 679.88031006]
[395.09939575 691.38995361]
[384.48529053 702.00305176]
[372.97470093 711.63653564]
[360.65771484 720.21496582]
[347.63079834 727.67126465]
[333.99581909 733.94708252]
[319.85958862 738.99328613]
[305.33264160 742.77032471]
[290.52874756 745.24865723]
[275.56375122 746.40893555]
[260.55474854 746.24206543]
[245.61924744 744.74932861]
[230.87411499 741.94244385]
[216.43476868 737.84332275]
[202.41419983 732.48406982]
[188.92216492 725.90667725]
[176.06422424 718.16259766]
[163.94104004 709.31237793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 163]
[23 162]
[24 161]
[25 160]
[27 158]
[29 155]
[30 154]
[31 153]
[41 152]
[42 151]
[43 150]
[45 148]
[47 146]
[48 145]
[49 144]
[50 143]
[63 132]
[64 131]
[65 130]
[67 129]
[70 127]
[71 126]
[73 124]
[74 123]
[75 122]
[76 121]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
