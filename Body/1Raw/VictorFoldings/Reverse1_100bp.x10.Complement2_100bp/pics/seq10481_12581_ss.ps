%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[13.40491772 602.24371338]
[5.41773367 614.96411133]
[-4.10079479 626.58306885]
[-15.00054646 636.91741943]
[-27.10961723 645.80413818]
[-40.23703003 653.10302734]
[-54.17574310 658.69909668]
[-68.70592499 662.50396729]
[-83.59841919 664.45764160]
[-98.61834717 664.52935791]
[-113.52881622 662.71795654]
[-128.09466553 659.05200195]
[-142.08618164 653.58935547]
[-155.28269958 646.41613770]
[-167.47607422 637.64544678]
[-178.47401428 627.41564941]
[-188.10305786 615.88806152]
[-196.21134949 603.24456787]
[-202.67098999 589.68444824]
[-207.38012695 575.42163086]
[-210.26448059 560.68109131]
[-211.27856445 545.69531250]
[-210.40637207 530.70056152]
[-207.66166687 515.93334961]
[-203.08773804 501.62661743]
[-196.75671387 488.00601196]
[-188.76846313 475.28628540]
[-179.24896240 463.66809082]
[-168.34832764 453.33468628]
[-156.23851013 444.44897461]
[-143.11048889 437.15115356]
[-129.17129517 431.55630493]
[-114.64080048 427.75268555]
[-99.74813843 425.80023193]
[-84.72821045 425.72979736]
[-69.81789398 427.54244995]
[-55.25234985 431.20959473]
[-49.79699326 417.23681641]
[-44.34163666 403.26400757]
[-46.92029572 388.59432983]
[-34.69385529 378.55316162]
[-29.23850060 364.58038330]
[-23.78314209 350.60757446]
[-18.32778549 336.63476562]
[-12.87242889 322.66198730]
[-16.44970512 305.48147583]
[-1.97806919 294.09494019]
[3.26864886 280.04244995]
[8.51536751 265.98999023]
[13.76208496 251.93751526]
[19.00880432 237.88504028]
[5.39888573 244.19139099]
[-9.11289883 240.39559937]
[-17.89195824 228.23303223]
[-16.92462349 213.26425171]
[-6.65314674 202.33279419]
[8.22648907 200.43637085]
[20.91151619 208.44198608]
[25.60246086 222.69146729]
[32.28265762 209.26109314]
[38.86268234 195.78135681]
[38.05948639 193.09564209]
[38.27173615 189.92996216]
[39.68758392 186.66947937]
[42.35238647 183.76028442]
[46.15174866 181.65818787]
[53.42497635 168.53948975]
[60.69820786 155.42080688]
[67.97143555 142.30210876]
[75.24466705 129.18341064]
[82.51789856 116.06472015]
[89.79112244 102.94602203]
[96.16973114 89.36981964]
[101.62508392 75.39701843]
[107.08044434 61.42422104]
[111.90644073 47.22176743]
[116.09345245 32.81798553]
[120.28046417 18.41420174]
[123.82013702 3.83782673]
[126.70540619 -10.88206482]
[129.59068298 -25.60195541]
[132.47595215 -40.32184601]
[135.36122131 -55.04174042]
[138.24650574 -69.76162720]
[140.80233765 -84.54228210]
[135.19776917 -99.33753204]
[144.73744202 -110.77623749]
[146.96255493 -125.61027527]
[149.07717896 -140.46047974]
[151.08119202 -155.32600403]
[153.08520508 -170.19152832]
[155.08921814 -185.05706787]
[157.09324646 -199.92259216]
[159.09725952 -214.78811646]
[157.14241028 -223.71092224]
[161.24336243 -229.85942078]
[163.46847534 -244.69346619]
[165.69358826 -259.52749634]
[151.75030518 -265.25881958]
[139.58419800 -274.16104126]
[129.90258789 -285.71655273]
[123.26834869 -299.25354004]
[120.06719208 -313.98501587]
[120.48523712 -329.05447388]
[124.49816132 -343.58581543]
[131.87266541 -356.73419189]
[142.18002319 -367.73519897]
[154.82095337 -375.94921875]
[169.06053162 -380.89874268]
[184.07090759 -382.29595947]
[198.97937012 -380.05969238]
[212.91918945 -374.31991577]
[225.07989502 -365.41033936]
[234.75450134 -353.84896851]
[241.38052368 -340.30795288]
[244.57275391 -325.57452393]
[244.14556885 -310.50534058]
[240.12384033 -295.97644043]
[232.74136353 -282.83251953]
[222.42733765 -271.83776855]
[209.78143311 -263.63140869]
[195.53884888 -258.69052124]
[180.52763367 -257.30239868]
[178.30252075 -242.46833801]
[176.07740784 -227.63430786]
[173.96278381 -212.78410339]
[171.95877075 -197.91857910]
[169.95475769 -183.05305481]
[167.95074463 -168.18751526]
[165.94673157 -153.32199097]
[163.94271851 -138.45646667]
[166.16439819 -131.40763855]
[161.79660034 -123.38516235]
[159.57148743 -108.55111694]
[165.33520508 -94.81689453]
[155.63636780 -82.31716919]
[157.42686462 -79.27965546]
[157.83505249 -75.22398376]
[156.39845276 -70.80930328]
[152.96638489 -66.87635803]
[150.08111572 -52.15646744]
[147.19584656 -37.43657303]
[144.31057739 -22.71668434]
[141.42529297 -7.99679232]
[138.54002380 6.72309923]
[151.56051636 -0.72450405]
[166.06925964 3.08290601]
[173.75498962 15.96427155]
[170.21496582 30.54056168]
[157.47708130 38.46181488]
[142.83816528 35.19038010]
[134.68424988 22.60121346]
[130.49723816 37.00499344]
[126.31022644 51.40877914]
[139.94323730 45.15250397]
[154.05444336 50.23913574]
[160.56030273 63.75482559]
[155.73396301 77.95716095]
[142.34017944 84.71041107]
[128.05149841 80.14600372]
[121.05323792 66.87957764]
[115.59788513 80.85237885]
[110.14252472 94.82517242]
[123.09648132 87.26242828]
[138.08694458 87.79729462]
[150.46894836 96.26403809]
[156.40582275 110.03914642]
[154.05793762 124.85425568]
[144.15281677 136.11874390]
[129.75967407 140.34217834]
[115.33837128 136.21588135]
[105.35752106 125.01844788]
[102.90982056 110.21925354]
[95.63658905 123.33795166]
[88.36335754 136.45663452]
[81.09013367 149.57533264]
[73.81690216 162.69403076]
[66.54367065 175.81272888]
[59.27044296 188.93141174]
[52.39102936 202.26084900]
[51.50642776 211.35234070]
[45.71303177 215.94128418]
[39.03283691 229.37165833]
[33.06127548 243.13175964]
[27.81455612 257.18423462]
[22.56783867 271.23669434]
[17.32111931 285.28918457]
[12.07440186 299.34164429]
[16.70869827 311.37850952]
[12.04939651 322.97482300]
[1.10036910 328.11734009]
[-4.35498810 342.09011841]
[-9.81034470 356.06292725]
[-15.26570225 370.03573608]
[-20.72105980 384.00851440]
[-18.53260231 399.67764282]
[-30.36883736 408.71936035]
[-35.82419586 422.69216919]
[-41.27955246 436.66494751]
[-28.08243752 443.83709717]
[-15.88831997 452.60675049]
[-4.88952112 462.83560181]
[4.74049377 474.36236572]
[12.84984589 487.00521851]
[19.31063843 500.56475830]
[24.02097511 514.82714844]
[26.90656662 529.56744385]
[27.92190361 544.55322266]
[27.05097389 559.54803467]
[24.30751228 574.31542969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 199]
[38 198]
[39 197]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[59 183]
[60 182]
[61 180]
[66 179]
[67 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 163]
[74 162]
[75 161]
[76 154]
[77 153]
[78 152]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 136]
[87 134]
[88 133]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
