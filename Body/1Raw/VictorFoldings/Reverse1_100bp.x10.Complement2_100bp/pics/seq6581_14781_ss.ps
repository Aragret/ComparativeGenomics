%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[28.51323891 437.58218384]
[28.68590164 452.61614990]
[26.38154984 467.47348022]
[21.66304970 481.74880981]
[14.65912151 495.05276489]
[5.56084061 507.02233887]
[-5.38358641 517.33105469]
[-17.87558746 525.69763184]
[-31.57437134 531.89385986]
[-46.10622787 535.75067139]
[-61.07471085 537.16290283]
[-76.07147217 536.09191895]
[-90.68739319 532.56707764]
[-104.52374268 526.68444824]
[-117.20304108 518.60449219]
[-128.37940979 508.54772949]
[-137.74792480 496.78845215]
[-145.05302429 483.64746094]
[-150.09541321 469.48327637]
[-152.73751831 454.68231201]
[-152.90728760 439.64831543]
[-150.60008240 424.79144287]
[-145.87882996 410.51699829]
[-138.87232971 397.21441650]
[-129.77174377 385.24655151]
[-118.82533264 374.93997192]
[-106.33171844 366.57577515]
[-92.63174438 360.38220215]
[-78.09914398 356.52819824]
[-63.13039017 355.11886597]
[-48.13383102 356.19268799]
[-33.51858902 359.72036743]
[-27.64962959 345.91619873]
[-21.78066826 332.11203003]
[-22.05647278 324.72653198]
[-15.72019577 318.14706421]
[-9.64636230 304.43179321]
[-3.57252789 290.71652222]
[2.50130606 277.00125122]
[8.57514000 263.28598022]
[6.65408659 248.51577759]
[19.31669235 239.03059387]
[25.39052582 225.31532288]
[31.46436119 211.60005188]
[18.46871948 219.09094238]
[3.46898007 219.17924500]
[-9.61396313 211.84190369]
[-17.36026001 198.99687195]
[-17.74504662 184.00181580]
[-10.66774178 170.77638245]
[2.02166533 162.77770996]
[17.00619316 162.09658813]
[30.36892319 168.91110229]
[38.61687088 181.43992615]
[39.59420776 196.40718079]
[47.63537979 183.74465942]
[55.67655563 171.08213806]
[63.71772766 158.41961670]
[70.89308929 145.24713135]
[77.17045593 131.62382507]
[83.44781494 118.00050354]
[89.72517395 104.37718964]
[95.90093994 90.70751953]
[101.97477722 76.99224854]
[108.04861450 63.27698517]
[114.12244415 49.56171799]
[120.19628143 35.84645081]
[126.27011108 22.13118362]
[120.81671906 7.54015207]
[127.17182922 -6.28255463]
[141.11575317 -11.39161491]
[147.18959045 -25.10688210]
[153.26342773 -38.82214737]
[142.61898804 -51.12783051]
[138.42161560 -66.78752136]
[141.46261597 -82.65296936]
[151.08332825 -95.55744171]
[165.31698608 -102.94776154]
[181.29057312 -103.38941193]
[187.15953064 -117.19358826]
[192.71876526 -131.12538147]
[197.96548462 -145.17785645]
[203.21220398 -159.23033142]
[208.45892334 -173.28279114]
[213.70564270 -187.33526611]
[218.95236206 -201.38774109]
[204.89178467 -196.16276550]
[191.19798279 -202.28486633]
[185.71539307 -216.24699402]
[191.58468628 -230.05102539]
[205.44366455 -235.78938293]
[219.35327148 -230.17488098]
[225.34544373 -216.42469788]
[231.82493591 -229.95303345]
[238.30442810 -243.48138428]
[244.78393555 -257.00973511]
[251.26342773 -270.53808594]
[257.74291992 -284.06643677]
[264.22241211 -297.59475708]
[251.73129272 -305.94656372]
[240.55595398 -315.99111938]
[230.92391968 -327.52386475]
[223.03128052 -340.31008911]
[217.03872681 -354.08941650]
[213.06825256 -368.58132935]
[211.20068359 -383.49084473]
[211.47406006 -398.51434326]
[213.88279724 -413.34603882]
[218.37786865 -427.68392944]
[224.86775208 -441.23611450]
[233.22033691 -453.72671509]
[243.26556396 -464.90142822]
[254.79891968 -474.53274536]
[267.58560181 -482.42459106]
[281.36532593 -488.41632080]
[295.85748291 -492.38589478]
[310.76708984 -494.25253296]
[325.79058838 -493.97824097]
[340.62213135 -491.56857300]
[354.95974731 -487.07260132]
[368.51153564 -480.58187866]
[381.00161743 -472.22854614]
[392.17572021 -462.18261719]
[401.80633545 -450.64865112]
[409.69738770 -437.86148071]
[415.68823242 -424.08142090]
[419.65692139 -409.58898926]
[421.52264404 -394.67926025]
[421.24740601 -379.65579224]
[418.83682251 -364.82440186]
[414.33999634 -350.48706055]
[407.84841919 -336.93566895]
[399.49429321 -324.44610596]
[389.44769287 -313.27264404]
[377.91314697 -303.64273071]
[365.12545776 -295.75247192]
[351.34503174 -289.76248169]
[336.85235596 -285.79467773]
[321.94250488 -283.92987061]
[306.91903687 -284.20605469]
[292.08782959 -286.61752319]
[277.75076294 -291.11526489]
[271.27127075 -277.58691406]
[264.79177856 -264.05859375]
[258.31228638 -250.53024292]
[251.83277893 -237.00189209]
[245.35328674 -223.47354126]
[238.87377930 -209.94520569]
[233.00482178 -196.14102173]
[227.75810242 -182.08854675]
[222.51138306 -168.03607178]
[217.26466370 -153.98361206]
[212.01795959 -139.93113708]
[206.77124023 -125.87866211]
[207.89437866 -122.53637695]
[207.45445251 -118.48403168]
[205.13537598 -114.46219635]
[200.96371460 -111.32462311]
[195.09475708 -97.52044678]
[204.74446106 -87.55292511]
[209.88250732 -74.61954498]
[209.70248413 -60.66078568]
[204.19854736 -47.78455734]
[194.17132568 -37.94787979]
[181.11158752 -32.65945053]
[166.97868347 -32.74831390]
[160.90486145 -19.03304863]
[154.83102417 -5.31778145]
[160.41923523 8.44112587]
[154.45487976 22.43688011]
[139.98538208 28.20501900]
[133.91154480 41.92028427]
[127.83771515 55.63555145]
[121.76387787 69.35081482]
[115.69004059 83.06608582]
[109.61621094 96.78134918]
[109.49119568 104.84093475]
[103.34848785 110.65454865]
[97.07112885 124.27786255]
[90.79376984 137.90118408]
[84.51641083 151.52449036]
[97.89753723 144.74618530]
[112.82958221 146.17234802]
[124.68569183 155.36108398]
[129.79212952 169.46513367]
[126.56658936 184.11422729]
[116.00856018 194.76918030]
[101.38954926 198.12843323]
[87.23942566 193.15109253]
[77.94274902 181.37942505]
[76.38024902 166.46078491]
[68.33908081 179.12330627]
[60.29790497 191.78582764]
[52.25673294 204.44836426]
[45.17962646 217.67388916]
[39.10579300 231.38916016]
[33.03195953 245.10441589]
[34.51856995 260.85562134]
[22.29040718 269.35983276]
[16.21657181 283.07507324]
[10.14273834 296.79034424]
[4.06890488 310.50561523]
[-2.00492930 324.22088623]
[-7.97649193 337.98098755]
[-13.84545326 351.78515625]
[-19.71441460 365.58935547]
[-7.03355408 373.66680908]
[4.14474344 383.72143555]
[13.51552773 395.47891235]
[20.82315636 408.61849976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 206]
[33 205]
[34 204]
[36 203]
[37 202]
[38 201]
[39 200]
[40 199]
[42 197]
[43 196]
[44 195]
[55 194]
[56 193]
[57 192]
[58 191]
[59 181]
[60 180]
[61 179]
[62 178]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[71 168]
[72 167]
[73 166]
[79 159]
[80 158]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
