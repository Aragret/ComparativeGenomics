%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[72.90669250 579.12359619]
[75.29021454 563.66870117]
[87.08431244 553.40063477]
[86.63770294 538.40728760]
[86.19109344 523.41394043]
[85.74449158 508.42059326]
[85.29788208 493.42724609]
[84.85128021 478.43389893]
[82.90579987 476.41567993]
[81.64253998 473.50521851]
[81.40534973 469.95849609]
[82.43914032 466.15115356]
[84.85128021 462.54067993]
[85.29788208 447.54733276]
[85.74449158 432.55398560]
[86.19109344 417.56063843]
[74.14595032 405.82382202]
[74.31970215 388.66906738]
[87.09321594 376.71682739]
[87.31654358 361.71847534]
[87.53987122 346.72015381]
[87.76319885 331.72180176]
[87.98652649 316.72344971]
[88.20985413 301.72512817]
[80.66290283 288.88406372]
[88.60480499 275.20062256]
[88.15820312 260.20727539]
[87.04254913 245.24882507]
[83.41027069 238.81233215]
[86.02333832 230.05964661]
[77.54221344 217.81546021]
[84.44439697 203.57922363]
[83.55158234 188.60581970]
[82.65876770 173.63241577]
[81.76595306 158.65901184]
[75.66117859 172.36053467]
[65.83432007 183.69335938]
[53.13548660 191.67706299]
[38.66325760 195.62100220]
[23.66962624 195.18395996]
[9.45168972 190.40376282]
[-2.76055574 181.69393921]
[-11.91063023 169.80796814]
[-17.20696068 155.77412415]
[-18.19136047 140.80645752]
[-14.77867126 126.19983673]
[-7.26412296 113.21786499]
[3.70220017 102.98361969]
[17.17160225 96.38246155]
[31.97884369 93.98546600]
[46.84295273 95.99999237]
[60.47803116 102.25176239]
[71.70451355 112.19993591]
[79.55118561 124.98389435]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[90.90052795 71.26733398]
[101.26454926 60.56984711]
[104.58681488 45.94238663]
[100.09819031 30.77126884]
[110.46221924 20.07377815]
[113.78447723 5.44631863]
[100.57592773 -8.40539074]
[98.40185547 -27.27025032]
[107.96094513 -43.50454712]
[125.23455048 -50.64006805]
[120.07298279 -65.59562683]
[129.94900513 -76.74522400]
[132.61479187 -91.50644684]
[127.45322418 -106.46200562]
[137.32923889 -117.61160278]
[139.99504089 -132.37281799]
[142.66082764 -147.13403320]
[145.32662964 -161.89524841]
[130.74847412 -169.52284241]
[119.25023651 -181.26507568]
[111.94697571 -195.96676636]
[109.54187012 -212.18653870]
[112.25849152 -228.33816528]
[119.82009888 -242.84562683]
[131.47778320 -254.29698181]
[146.08457947 -261.58172607]
[162.20838928 -263.99850464]
[164.43351746 -278.83255005]
[166.65863037 -293.66659546]
[157.53611755 -306.29263306]
[160.00401306 -321.30477905]
[172.09725952 -329.92388916]
[174.32237244 -344.75793457]
[176.54748535 -359.59197998]
[178.77259827 -374.42602539]
[180.99772644 -389.26007080]
[183.22283936 -404.09411621]
[185.44795227 -418.92816162]
[187.67306519 -433.76220703]
[173.72978210 -439.49353027]
[161.56367493 -448.39572144]
[151.88206482 -459.95123291]
[145.24781799 -473.48822021]
[142.04667664 -488.21969604]
[142.46470642 -503.28915405]
[146.47763062 -517.82049561]
[153.85214233 -530.96887207]
[164.15950012 -541.96990967]
[176.80043030 -550.18389893]
[191.04000854 -555.13342285]
[206.05038452 -556.53063965]
[220.95884705 -554.29437256]
[234.89866638 -548.55462646]
[247.05937195 -539.64501953]
[256.73397827 -528.08367920]
[263.36001587 -514.54260254]
[266.55221558 -499.80923462]
[266.12506104 -484.74002075]
[262.10330200 -470.21112061]
[254.72084045 -457.06719971]
[244.40681458 -446.07244873]
[231.76091003 -437.86608887]
[217.51832581 -432.92520142]
[202.50711060 -431.53707886]
[200.28199768 -416.70303345]
[198.05688477 -401.86898804]
[195.83177185 -387.03494263]
[193.60664368 -372.20089722]
[191.38153076 -357.36685181]
[189.15641785 -342.53280640]
[186.93128967 -327.69876099]
[195.96345520 -315.91082764]
[193.91819763 -300.83529663]
[181.49267578 -291.44146729]
[179.26756287 -276.60742188]
[177.04243469 -261.77337646]
[189.48916626 -256.20303345]
[200.07653809 -247.58877563]
[208.07670593 -236.51431274]
[212.93745422 -223.73275757]
[214.32034302 -210.11543274]
[212.12428284 -196.59245300]
[206.49285889 -184.08924866]
[197.80494690 -173.46318054]
[186.64930725 -165.44476318]
[173.78459167 -160.58744812]
[160.08784485 -159.22946167]
[157.42205811 -144.46824646]
[154.75625610 -129.70701599]
[152.09045410 -114.94580841]
[157.44270325 -101.04606628]
[147.37600708 -88.84064484]
[144.71022034 -74.07942963]
[150.06245422 -60.17969131]
[139.99577332 -47.97427368]
[149.09484863 -41.52001572]
[155.15589905 -32.09336472]
[157.27107239 -21.03548050]
[155.09719849 -9.93669605]
[148.91073608 -0.40780920]
[139.57333374 6.15370226]
[128.41194153 8.76857758]
[125.08967590 23.39603806]
[129.81593323 37.52090454]
[119.21427155 49.26464844]
[115.89201355 63.89210892]
[120.61826324 78.01697540]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[96.73935699 157.76618958]
[97.63217163 172.73960876]
[98.52498627 187.71301270]
[99.41780090 202.68641663]
[107.96278381 216.00158691]
[100.99674225 229.16682434]
[102.00100708 244.13316345]
[103.11665344 259.09161377]
[113.70016479 248.46197510]
[128.69918823 248.29145813]
[139.52162170 258.67776489]
[139.96786499 273.67111206]
[129.78230286 284.68267822]
[114.79968262 285.40447998]
[103.60314178 275.42395020]
[111.13412476 289.33779907]
[103.20819092 301.94845581]
[102.98486328 316.94677734]
[102.76153564 331.94512939]
[102.53820801 346.94348145]
[102.31488037 361.94180298]
[102.09155273 376.94015503]
[112.52291870 385.46078491]
[116.09022522 398.24688721]
[111.70693970 410.57040405]
[101.18444824 418.00723267]
[100.73783875 433.00061035]
[100.29123688 447.99395752]
[99.84462738 462.98730469]
[99.84462738 477.98730469]
[100.29123688 492.98065186]
[100.73783875 507.97399902]
[101.18444824 522.96734619]
[101.63105011 537.96069336]
[102.07765961 552.95404053]
[114.46200562 562.50189209]
[117.76119995 577.78753662]
[110.41745758 591.59344482]
[95.89826965 597.40093994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[13 200]
[14 199]
[15 198]
[16 197]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[26 186]
[27 179]
[28 178]
[30 177]
[32 175]
[33 174]
[34 173]
[35 172]
[55 171]
[56 170]
[57 169]
[59 167]
[61 165]
[62 164]
[64 162]
[65 161]
[69 154]
[71 152]
[72 151]
[74 149]
[75 148]
[76 147]
[77 146]
[86 135]
[87 134]
[88 133]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
