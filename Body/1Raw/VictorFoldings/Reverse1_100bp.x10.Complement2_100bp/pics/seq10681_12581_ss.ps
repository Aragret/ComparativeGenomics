%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[65.59748077 445.12237549]
[63.81501770 430.22863770]
[62.03255081 415.33493042]
[60.25008392 400.44122314]
[58.46761703 385.54748535]
[49.27274704 373.82983398]
[55.31533432 359.20800781]
[53.42204285 344.32797241]
[51.41802979 329.46246338]
[46.49806976 343.63262939]
[37.98291779 355.98141479]
[26.48728943 365.61730957]
[12.84106159 371.84469604]
[-1.97063124 374.21401978]
[-16.87852097 372.55426025]
[-30.80639267 366.98519897]
[-42.74878311 357.90890503]
[-51.84355927 345.98056030]
[-57.43416595 332.06134033]
[-59.11700439 317.15603638]
[-56.77059555 302.34069824]
[-50.56432343 288.68484497]
[-40.94623184 277.17431641]
[-28.61065102 268.64007568]
[-14.44810295 263.69818115]
[0.51900899 262.70541382]
[15.21019554 265.73345947]
[28.56488609 272.56372070]
[39.61899567 282.70306396]
[47.57451630 295.41958618]
[51.85731506 309.79638672]
[54.52310944 295.03515625]
[57.18890762 280.27395630]
[59.85470200 265.51272583]
[62.52049637 250.75151062]
[53.76476669 241.29811096]
[52.02659988 228.33428955]
[58.16265106 216.56315613]
[70.13148499 210.38565063]
[73.01675415 195.66575623]
[75.90203094 180.94586182]
[69.41599274 170.73519897]
[71.69928741 158.44819641]
[82.06411743 150.77140808]
[85.16822815 136.09609985]
[88.16300201 121.39809418]
[91.04827118 106.67819977]
[93.82388306 91.93724060]
[96.48967743 77.17602539]
[98.82516479 62.35895538]
[100.82917786 47.49342728]
[102.83319092 32.62789917]
[104.83721161 17.76237106]
[106.39772797 2.84376597]
[107.51338196 -12.11468697]
[108.51763916 -27.08103180]
[109.41045380 -42.05443573]
[110.30326843 -57.02784348]
[108.22286224 -60.83912659]
[107.53286743 -64.72351074]
[108.08553314 -68.23491669]
[109.60340881 -71.02106476]
[111.72119141 -72.85768127]
[113.50366211 -87.75139618]
[115.28612518 -102.64511108]
[113.83670807 -117.57492065]
[109.22269440 -131.84765625]
[104.60868835 -146.12039185]
[99.99468231 -160.39312744]
[95.38066864 -174.66584778]
[90.76666260 -188.93858337]
[84.84348297 -175.15759277]
[72.01059723 -167.39118958]
[57.05435181 -168.53605652]
[45.55305862 -178.16519165]
[41.79640961 -192.68714905]
[47.18555069 -206.68562317]
[59.71045685 -214.93951416]
[74.69965363 -214.37031555]
[86.56320190 -205.18937683]
[83.67793274 -219.90927124]
[80.79265594 -234.62916565]
[77.90738678 -249.34906006]
[75.02210999 -264.06893921]
[59.96995544 -264.20129395]
[45.25263214 -267.36123657]
[31.47280884 -273.41940308]
[19.19475555 -282.12768555]
[8.92125320 -293.12951660]
[1.07299519 -305.97433472]
[-4.02863693 -320.13619995]
[-6.17473412 -335.03515625]
[-5.27741623 -350.06112671]
[-1.37342703 -364.59881592]
[5.37736750 -378.05285645]
[14.69852638 -389.87237549]
[26.20835304 -399.57333374]
[39.43553162 -406.75851440]
[53.83840942 -411.13366699]
[68.82720184 -412.51962280]
[83.78813171 -410.85964966]
[98.10855865 -406.22174072]
[111.20205688 -398.79574585]
[122.53247070 -388.88583374]
[131.63581848 -376.89773560]
[138.13932800 -363.32241821]
[141.77667236 -348.71575928]
[142.39892578 -333.67590332]
[139.98060608 -318.81869507]
[134.62071228 -304.75253296]
[126.53875732 -292.05346680]
[116.06568909 -281.24145508]
[103.63036346 -272.75924683]
[89.74200439 -266.95422363]
[92.62727356 -252.23432922]
[95.51255035 -237.51443481]
[98.39781952 -222.79455566]
[101.28309631 -208.07466125]
[105.03939819 -193.55259705]
[109.65340424 -179.27986145]
[114.26741028 -165.00712585]
[118.88142395 -150.73439026]
[123.49542999 -136.46166992]
[128.10943604 -122.18893433]
[130.29464722 -137.02890015]
[135.38320923 -151.13941956]
[143.17247009 -163.95843506]
[153.35218811 -174.97540283]
[165.51689148 -183.75151062]
[179.18206787 -189.93719482]
[193.80345154 -193.28611755]
[208.79867554 -193.66485596]
[223.57046509 -191.05833435]
[237.53050232 -185.57037354]
[250.12272644 -177.41957092]
[260.84561157 -166.93054199]
[269.27209473 -154.52108765]
[275.06649780 -140.68545532]
[277.99807739 -125.97470856]
[277.95004272 -110.97478485]
[274.92431641 -96.28311920]
[269.04141235 -82.48487854]
[260.53567505 -70.12963867]
[249.74581909 -59.70949554]
[237.10165405 -51.63949585]
[223.10676575 -46.24105072]
[208.31857300 -43.72918701]
[193.32608032 -44.20394516]
[178.72645569 -47.64641953]
[165.10116577 -53.91949844]
[152.99290466 -62.77332306]
[142.88395691 -73.85525513]
[135.17695618 -86.72389984]
[130.17984009 -100.86264801]
[128.39738464 -85.96893311]
[126.61491394 -71.07521057]
[125.27667999 -56.13502884]
[124.38386536 -41.16162109]
[123.49104309 -26.18821526]
[126.23085022 -19.32415962]
[122.47183228 -10.99903870]
[121.35618591 3.95941472]
[123.08114624 6.16908789]
[124.03475952 9.19517994]
[123.90167999 12.74731922]
[122.47740173 16.42644310]
[119.70273590 19.76638412]
[117.69872284 34.63191223]
[115.69470978 49.49744034]
[113.69069672 64.36296844]
[115.52620697 67.37348938]
[115.99474335 71.42263031]
[114.62402344 75.85821533]
[111.25090027 79.84181976]
[108.58509827 94.60303497]
[110.36550140 102.46450806]
[105.76816559 109.56347656]
[102.88288879 124.28337097]
[104.30316925 133.30670166]
[99.84352875 139.20021057]
[96.73941803 153.87551880]
[102.85184479 171.24559021]
[90.62191772 183.83114624]
[87.73664856 198.55102539]
[84.85137177 213.27091980]
[94.87497711 227.60781860]
[91.49495697 244.42716980]
[77.28171539 253.41731262]
[74.61592102 268.17852783]
[71.95012665 282.93972778]
[69.28432465 297.70095825]
[66.61853027 312.46218872]
[66.28355408 327.45843506]
[68.28756714 342.32397461]
[72.53543854 350.41058350]
[70.20905304 357.42553711]
[79.53141785 370.20849609]
[73.36133575 383.76501465]
[75.14379883 398.65875244]
[76.92626953 413.55245972]
[78.70873260 428.44616699]
[80.49119568 443.33990479]
[94.41330719 449.98660278]
[102.51242065 463.11700439]
[102.20413208 478.54129028]
[93.58683014 491.33761597]
[79.41025543 497.42269897]
[64.19810486 494.85482788]
[52.80451584 484.45339966]
[48.86514664 469.53747559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[7 196]
[8 194]
[9 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[39 185]
[40 184]
[41 183]
[44 181]
[45 180]
[46 178]
[47 177]
[48 175]
[49 174]
[50 170]
[51 169]
[52 168]
[53 167]
[54 162]
[55 161]
[56 159]
[57 158]
[58 157]
[63 156]
[64 155]
[65 154]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
