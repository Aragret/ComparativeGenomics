%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[97.05896759 430.59188843]
[85.55651093 440.43933105]
[71.47890472 446.01605225]
[56.35319138 446.71713257]
[41.82009125 442.46652222]
[29.45604706 433.72528076]
[20.60221863 421.44161987]
[16.21899986 406.94796753]
[16.78185272 391.81649780]
[22.22972298 377.68850708]
[31.97166443 366.09655762]
[44.95094681 358.29803467]
[59.75967026 355.13885498]
[61.54213715 340.24514771]
[63.32460403 325.35144043]
[64.99614716 310.44485474]
[66.55666351 295.52624512]
[68.11718750 280.60766602]
[69.67771149 265.68905640]
[63.30647659 252.22589111]
[72.43749237 239.30554199]
[73.99801636 224.38694763]
[75.44743347 209.45713806]
[76.78566742 194.51695251]
[63.77686310 201.98495483]
[49.77186203 196.61280823]
[45.09462738 182.36067200]
[53.19304657 169.73468018]
[68.09726715 168.04225159]
[78.81987762 178.52941895]
[81.26560211 163.73014832]
[83.71132660 148.93087769]
[81.70049286 141.81903076]
[86.30521393 133.93016052]
[88.97100830 119.16894531]
[91.63680267 104.40772247]
[89.69918060 99.53334808]
[90.63050079 93.92032623]
[94.60799408 89.24951935]
[97.71210480 74.57421875]
[100.81621552 59.89891434]
[103.92032623 45.22360992]
[107.02443695 30.54830933]
[110.12854767 15.87300682]
[113.23265076 1.19770432]
[116.33676147 -13.47759819]
[119.22203827 -28.19748878]
[121.88783264 -42.95870590]
[124.55362701 -57.71992493]
[115.61024475 -45.67766571]
[104.51653290 -35.58165359]
[91.68723297 -27.80932808]
[77.60198212 -22.65126419]
[62.78735733 -20.30030251]
[47.79722595 -20.84433174]
[33.19200134 -24.26301765]
[19.51771164 -30.42854691]
[7.28557587 -39.11041641]
[-3.04709482 -49.98405075]
[-11.09400749 -62.64292908]
[-16.55432129 -76.61379242]
[-19.22389984 -91.37432098]
[-19.00293732 -106.37269592]
[-15.89969635 -121.04817963]
[-10.03019333 -134.85212708]
[-1.61386299 -147.26846313]
[9.03464317 -157.83299255]
[21.51722336 -166.15075684]
[35.36720657 -171.91079712]
[50.06680298 -174.89775085]
[65.06645203 -174.99995422]
[79.80538940 -172.21359253]
[93.73258209 -166.64283752]
[106.32735443 -158.49595642]
[117.11884308 -148.07752991]
[125.70359802 -135.77703857]
[131.76066589 -122.05435944]
[135.06361389 -107.42253113]
[135.48895264 -92.42855835]
[133.02235413 -77.63890839]
[141.80294800 -89.80036163]
[150.58355713 -101.96182251]
[151.63377380 -108.48934174]
[155.27609253 -112.85174561]
[159.81108093 -114.34939575]
[168.94987488 -126.24402618]
[178.08868408 -138.13865662]
[187.22747803 -150.03329468]
[196.36628723 -161.92793274]
[205.50508118 -173.82255554]
[207.77740479 -189.47973633]
[221.66702271 -194.85816956]
[230.80583191 -206.75280762]
[239.94462585 -218.64744568]
[248.72523499 -230.80889893]
[257.13986206 -243.22639465]
[265.55447388 -255.64389038]
[273.96908569 -268.06137085]
[282.38369751 -280.47888184]
[271.01339722 -290.28869629]
[260.85882568 -301.35220337]
[252.05737305 -313.51983643]
[244.72802734 -326.62698364]
[238.96990967 -340.49639893]
[234.86091614 -354.94052124]
[232.45660400 -369.76400757]
[231.78947449 -384.76638794]
[232.86857605 -399.74475098]
[235.67929077 -414.49658203]
[240.18362427 -428.82235718]
[246.32066345 -442.52832031]
[254.00740051 -455.42910767]
[263.13986206 -467.35028076]
[273.59457397 -478.13061523]
[285.23016357 -487.62429810]
[297.88922119 -495.70294189]
[311.40057373 -502.25732422]
[325.58151245 -507.19876099]
[340.24020386 -510.46044922]
[355.17846680 -511.99826050]
[370.19427490 -511.79144287]
[385.08450317 -509.84274292]
[399.64779663 -506.17852783]
[413.68725586 -500.84835815]
[427.01293945 -493.92431641]
[439.44467163 -485.50003052]
[450.81433105 -475.68948364]
[460.96817017 -464.62527466]
[469.76879883 -452.45706177]
[477.09729004 -439.34942627]
[482.85446167 -425.47964478]
[486.96249390 -411.03524780]
[489.36584473 -396.21160889]
[490.03195190 -381.20916748]
[488.95184326 -366.23086548]
[486.14013672 -351.47921753]
[481.63485718 -337.15374756]
[475.49691772 -323.44821167]
[467.80932617 -310.54791260]
[458.67605591 -298.62734985]
[448.22061157 -287.84771729]
[436.58441162 -278.35482788]
[423.92480469 -270.27700806]
[410.41302490 -263.72354126]
[396.23175049 -258.78305054]
[381.57281494 -255.52233887]
[366.63446045 -253.98550415]
[351.61868286 -254.19334412]
[336.72857666 -256.14303589]
[322.16552734 -259.80822754]
[308.12643433 -265.13934326]
[294.80120850 -272.06427002]
[286.38659668 -259.64675903]
[277.97195435 -247.22926331]
[269.55734253 -234.81176758]
[261.14273071 -222.39427185]
[261.53863525 -219.61914062]
[260.85913086 -216.51995850]
[258.97528076 -213.50558472]
[255.90841675 -211.02388000]
[251.83926392 -209.50863647]
[242.70045471 -197.61399841]
[233.56166077 -185.71937561]
[231.94300842 -170.91297913]
[217.39971924 -164.68376160]
[208.26092529 -152.78912354]
[199.12211609 -140.89450073]
[189.98330688 -128.99986267]
[180.84451294 -117.10522461]
[171.70570374 -105.21059418]
[162.74501038 -93.18121338]
[153.96441650 -81.01976013]
[145.18380737 -68.85830688]
[139.31484985 -55.05412674]
[136.64904785 -40.29291153]
[133.98326111 -25.53169441]
[135.92211914 -21.16708374]
[135.13975525 -15.53814697]
[131.01206970 -10.37348843]
[127.90795898 4.30181456]
[124.80384827 18.97711754]
[121.69973755 33.65242004]
[118.59562683 48.32772064]
[115.49151611 63.00302505]
[112.38740540 77.67832947]
[109.28329468 92.35363007]
[106.39802551 107.07351685]
[103.73223114 121.83473969]
[101.06642914 136.59594727]
[98.51059723 151.37660217]
[96.06487274 166.17587280]
[93.61914825 180.97514343]
[91.72585297 195.85517883]
[90.38761902 210.79536438]
[92.73892975 219.62197876]
[88.91661835 225.94746399]
[87.35609436 240.86607361]
[93.61571503 255.39631653]
[84.59632111 267.24957275]
[83.03579712 282.16818237]
[81.47527313 297.08679199]
[79.91474915 312.00537109]
[82.13438416 320.86602783]
[78.21832275 327.13391113]
[76.43585205 342.02761841]
[74.65338898 356.92132568]
[88.29839325 363.48580933]
[99.07083893 374.12692261]
[105.80220795 387.69039917]
[107.76232910 402.70492554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 206]
[14 205]
[15 204]
[16 202]
[17 201]
[18 200]
[19 199]
[21 197]
[22 196]
[23 194]
[24 193]
[30 192]
[31 191]
[32 190]
[34 189]
[35 188]
[36 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 176]
[48 175]
[49 174]
[80 173]
[81 172]
[82 171]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 165]
[92 163]
[93 162]
[94 161]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
