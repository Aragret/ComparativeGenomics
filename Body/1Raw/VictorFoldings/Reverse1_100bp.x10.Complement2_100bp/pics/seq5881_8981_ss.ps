%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[84.78322601 566.94757080]
[85.47945404 551.92242432]
[88.84754181 537.26306152]
[94.77922058 523.44079590]
[103.08380890 510.89993286]
[113.49436188 500.04360962]
[125.67620087 491.22076416]
[139.23774719 484.71505737]
[135.26565552 470.25051880]
[131.29356384 455.78601074]
[127.32146454 441.32147217]
[124.07930756 455.96691895]
[116.52439117 468.92541504]
[105.37679291 478.96191406]
[91.69904327 485.11978149]
[76.79480743 486.81204224]
[62.08467102 483.87747192]
[48.97070312 476.59570312]
[38.70284653 465.66085815]
[32.25976562 452.11511230]
[30.25557899 437.24963379]
[32.88130951 422.48123169]
[39.88668823 409.21755981]
[50.60401154 398.72283936]
[64.01176453 391.99737549]
[78.83201599 389.68215942]
[93.65218353 391.99786377]
[107.05971527 398.72381592]
[117.77667999 409.21890259]
[124.78197479 422.48385620]
[124.78197479 407.48385620]
[124.78197479 392.48385620]
[124.78197479 377.48385620]
[124.78197479 362.48385620]
[124.78197479 347.48385620]
[123.77771759 332.51751709]
[121.77369690 317.65197754]
[107.55947113 313.13302612]
[96.67208862 302.84835815]
[91.30780029 288.79895020]
[92.58061218 273.75234985]
[100.29144287 260.69747925]
[112.95701599 252.25088501]
[110.95300293 237.38536072]
[108.94898987 222.51983643]
[106.94497681 207.65431213]
[94.98139954 198.85609436]
[92.73728180 183.80888367]
[102.04676819 171.32003784]
[100.04275513 156.45451355]
[90.67444611 144.87504578]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[83.14687347 48.63037109]
[85.57744598 41.65082169]
[84.01692200 26.73221779]
[82.45639801 11.81361389]
[80.89587402 -3.10499120]
[79.33535004 -18.02359581]
[77.77482605 -32.94219971]
[76.21430206 -47.86080551]
[74.65378571 -62.77941132]
[73.09326172 -77.69801331]
[61.93414688 -92.34573364]
[69.69978333 -108.08300781]
[67.91732025 -122.97672272]
[66.13485718 -137.87043762]
[64.35238647 -152.76416016]
[55.03002167 -165.54711914]
[61.20010376 -179.10363770]
[59.41763687 -193.99736023]
[57.63517380 -208.89108276]
[46.25921249 -223.37103271]
[53.78968811 -239.22218323]
[51.78567505 -254.08770752]
[49.78166199 -268.95324707]
[45.53379059 -277.03985596]
[47.86017990 -284.05480957]
[46.07771301 -298.94854736]
[32.54073334 -303.01016235]
[21.60738373 -311.89758301]
[14.90753841 -324.24334717]
[13.42371655 -338.16772461]
[17.34711266 -351.56497192]
[26.05368996 -362.42166138]
[38.20317841 -369.11929321]
[36.64265442 -384.03790283]
[35.08213043 -398.95648193]
[20.32208252 -402.33578491]
[7.46034813 -410.32669067]
[-2.10792708 -422.06240845]
[-7.34484816 -436.26992798]
[-7.68235350 -451.40811157]
[-3.08383274 -465.83489990]
[5.95190096 -477.98538208]
[18.44471931 -486.54156494]
[33.03949356 -490.57534790]
[48.15309143 -489.64913940]
[62.14610672 -483.86343384]
[73.50067902 -473.84582520]
[80.98514557 -460.68295288]
[83.78765106 -445.80261230]
[81.60420227 -430.81890869]
[74.67164612 -417.35717773]
[63.74196625 -406.87762451]
[50.00073624 -400.51702881]
[51.56126022 -385.59841919]
[53.12178040 -370.67980957]
[68.26278687 -365.57095337]
[79.70169830 -354.32971191]
[85.11283875 -339.17047119]
[83.36508179 -323.11102295]
[74.75788879 -309.37203979]
[60.97143173 -300.73098755]
[62.75389481 -285.83728027]
[64.64718628 -270.95724487]
[66.65119934 -256.09173584]
[68.65521240 -241.22619629]
[78.08150482 -233.64518738]
[79.87274170 -221.27687073]
[72.52889252 -210.67353821]
[74.31135559 -195.77983093]
[76.09381866 -180.88610840]
[85.28869629 -169.16844177]
[79.24610901 -154.54663086]
[81.02857208 -139.65290833]
[82.81103516 -124.75919342]
[84.59350586 -109.86547089]
[93.90587616 -102.14496613]
[95.51277161 -89.75135040]
[88.01186371 -79.25853729]
[89.57238770 -64.33993530]
[91.13291168 -49.42132950]
[92.69343567 -34.50272369]
[94.25395966 -19.58411980]
[95.81447601 -4.66551447]
[97.37500000 10.25309086]
[98.93552399 25.17169571]
[100.49604797 40.09030151]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[120.87584686 140.80361938]
[114.90828705 154.45050049]
[116.91230011 169.31602478]
[129.19657898 178.89382935]
[131.01716614 193.99813843]
[121.81050110 205.65029907]
[123.81451416 220.51582336]
[125.81852722 235.38134766]
[127.82254028 250.24687195]
[142.27267456 255.03799438]
[153.16526794 265.58496094]
[158.37707520 279.75738525]
[156.92465210 294.72573853]
[149.14938354 307.52630615]
[136.63922119 315.64797974]
[138.64324951 330.51348877]
[146.30546570 317.61813354]
[159.67515564 310.81732178]
[174.60958862 312.21835327]
[186.48115540 321.38708496]
[191.61131287 335.48254395]
[188.41044617 350.13702393]
[177.87036133 360.80975342]
[163.25703430 364.19360352]
[149.09854126 359.24008179]
[139.78196716 347.48385620]
[139.78196716 362.48385620]
[139.78196716 377.48385620]
[139.78196716 392.48385620]
[139.78196716 407.48385620]
[139.78196716 422.48385620]
[141.78599548 437.34939575]
[145.75808716 451.81390381]
[149.73017883 466.27844238]
[153.70227051 480.74295044]
[168.68438721 479.41030884]
[183.66368103 480.77444458]
[198.15859985 484.79150391]
[211.70323181 491.33236694]
[223.86213684 500.18679810]
[234.24447632 511.07009888]
[242.51651001 523.63250732]
[248.41229248 537.47009277]
[251.74234009 552.13812256]
[252.39958191 567.16503906]
[250.36288452 582.06774902]
[245.69773865 596.36724854]
[238.55409241 609.60388184]
[229.16159058 621.35211182]
[217.82217407 631.23425293]
[204.90034485 638.93273926]
[190.81147766 644.19995117]
[176.00849915 646.86669922]
[160.96723938 646.84716797]
[146.17121887 644.14208984]
[132.09608459 638.83825684]
[119.19427490 631.10632324]
[107.88053131 621.19476318]
[98.51854706 609.42224121]
[91.40927124 596.16711426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 185]
[9 184]
[10 183]
[11 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 166]
[37 165]
[43 159]
[44 158]
[45 157]
[46 156]
[49 153]
[50 152]
[52 150]
[53 149]
[56 147]
[57 146]
[58 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[70 133]
[71 132]
[72 131]
[73 130]
[75 128]
[76 127]
[77 126]
[79 123]
[80 122]
[81 121]
[83 120]
[84 119]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
