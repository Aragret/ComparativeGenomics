%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[88.99974060 497.16397095]
[91.64347839 512.03631592]
[89.98873138 527.05096436]
[84.16963196 540.99066162]
[74.65791321 552.72534180]
[62.22464371 561.30383301]
[47.87773895 566.03070068]
[32.78023529 566.52270508]
[18.15601921 562.73999023]
[5.19061136 554.98919678]
[-5.06494045 543.89862061]
[-11.77926540 530.36737061]
[-14.40806293 515.49237061]
[-12.73822784 500.47943115]
[-6.90512753 486.54559326]
[2.61837626 474.82043457]
[15.06025505 466.25442505]
[29.41190147 461.54199219]
[44.50989151 461.06518555]
[48.26619339 446.54312134]
[43.96258545 432.28378296]
[54.90919495 420.86090088]
[58.66549683 406.33883667]
[62.42179871 391.81680298]
[66.17810059 377.29473877]
[69.93440247 362.77267456]
[72.15951538 347.93862915]
[72.82929993 332.95358276]
[73.49908447 317.96853638]
[65.57014465 308.83297729]
[66.00551605 296.34323120]
[75.11688232 287.21383667]
[76.00969696 272.24041748]
[76.90251923 257.26702881]
[77.79533386 242.29360962]
[78.68814850 227.32020569]
[76.63380432 224.45454407]
[75.86540985 220.45147705]
[76.90242767 215.92622375]
[79.96992493 211.70277405]
[81.53044891 196.78416443]
[83.09097290 181.86555481]
[84.65149689 166.94696045]
[77.28036499 157.35565186]
[78.45837402 144.91394043]
[88.09697723 136.34306335]
[89.87944031 121.44934082]
[91.66191101 106.55562592]
[92.77755737 91.59717560]
[93.22415924 76.60382080]
[93.67076874 61.61047363]
[94.11737823 46.61712265]
[94.56398010 31.62377357]
[92.44935608 16.77357483]
[87.83535004 2.50084186]
[83.22133636 -11.77189159]
[78.60733032 -26.04462433]
[67.00022888 -36.79570389]
[70.44747162 -51.28590012]
[65.83345795 -65.55863190]
[61.21945190 -79.83136749]
[56.60544205 -94.10410309]
[51.99143219 -108.37683105]
[47.34883499 -113.08404541]
[45.98510742 -118.60104370]
[47.45938873 -123.14367676]
[43.27237701 -137.54745483]
[31.99051857 -148.63935852]
[35.86766052 -163.02049255]
[31.68065071 -177.42428589]
[18.11149788 -185.07383728]
[14.07046032 -199.74096680]
[21.44677544 -212.62994385]
[17.25976372 -227.03372192]
[13.07275200 -241.43751526]
[7.67230129 -248.80451965]
[8.93234348 -256.08697510]
[4.96024752 -270.55151367]
[-9.99527359 -269.00805664]
[-25.00085640 -269.94738770]
[-39.64713287 -273.34393311]
[-53.53454971 -279.10494995]
[-66.28424072 -287.07336426]
[-77.54839325 -297.03170776]
[-87.01969910 -308.70834351]
[-94.43978882 -321.78475952]
[-99.60623169 -335.90417480]
[-102.37807465 -350.68139648]
[-102.67971802 -365.71331787]
[-100.50291443 -380.58987427]
[-95.90705872 -394.90518188]
[-89.01752472 -408.26870728]
[-80.02227020 -420.31591797]
[-69.16668701 -430.71813965]
[-56.74692917 -439.19158936]
[-43.10180664 -445.50512695]
[-28.60357666 -449.48648071]
[-13.64775848 -451.02703857]
[1.35764194 -450.08480835]
[16.00326538 -446.68545532]
[29.88957024 -440.92172241]
[42.63772583 -432.95089722]
[53.89995575 -422.99035645]
[63.36901855 -411.31188965]
[70.78658295 -398.23406982]
[75.95030212 -384.11364746]
[78.71930695 -369.33587646]
[79.01805115 -354.30389404]
[76.83837891 -339.42779541]
[72.23976898 -325.11337280]
[65.34766388 -311.75115967]
[56.35009003 -299.70568848]
[45.49250031 -289.30554199]
[33.07110977 -280.83450317]
[19.42477036 -274.52359009]
[23.39686775 -260.05908203]
[27.47653389 -245.62452698]
[31.66354561 -231.22073364]
[35.85055542 -216.81695557]
[48.98690414 -209.89077759]
[53.43831635 -195.34294128]
[46.08443451 -181.61128235]
[50.27144241 -167.20750427]
[61.25381851 -157.14585876]
[57.67615891 -141.73446655]
[61.86317062 -127.33068848]
[66.26416779 -112.99084473]
[70.87817383 -98.71810913]
[75.49218750 -84.44537354]
[80.10619354 -70.17264557]
[84.72020721 -55.89990997]
[95.99728394 -46.16971207]
[92.88006592 -30.65863419]
[97.49407196 -16.38590050]
[102.10807800 -2.11316729]
[106.72209167 12.15956593]
[108.94972992 -2.67409873]
[114.74927521 -16.50758362]
[123.76607513 -28.49496651]
[135.44874573 -37.90321350]
[149.08290100 -44.15700531]
[163.83479309 -46.87392426]
[178.80233765 -45.88782501]
[193.07028198 -41.25901031]
[205.76611328 -33.27053452]
[216.11349487 -22.41089439]
[223.47967529 -9.34416294]
[227.41419983 5.13062572]
[227.67646790 20.12833214]
[224.25047302 34.73184204]
[217.34567261 48.04814148]
[207.38433838 59.26293945]
[194.97558594 67.69044495]
[180.87820435 72.81530762]
[165.95428467 74.32414246]
[151.11642456 72.12468719]
[137.27194214 66.35144043]
[125.26744843 57.35742950]
[115.83702087 45.69264984]
[109.55732727 32.07037735]
[109.11072540 47.06372833]
[108.66411591 62.05707932]
[108.21751404 77.05043030]
[107.77090454 92.04377747]
[119.40283966 82.57286835]
[134.33822632 83.96369934]
[144.02137756 95.41954041]
[142.90538025 110.37796783]
[131.62950134 120.27011108]
[116.65308380 119.42930603]
[106.55562592 108.33808899]
[104.77316284 123.23181152]
[102.99069214 138.12553406]
[110.62842560 154.88102722]
[99.57009888 168.50747681]
[98.00957489 183.42608643]
[96.44905090 198.34468079]
[94.88852692 213.26329041]
[93.66155243 228.21302795]
[92.76873779 243.18643188]
[91.87592316 258.15985107]
[90.98310852 273.13323975]
[90.09029388 288.10665894]
[98.71178436 304.37783813]
[88.48412323 318.63833618]
[87.81433868 333.62338257]
[87.14455414 348.60839844]
[95.33322906 336.04077148]
[107.66441345 327.50015259]
[122.30884552 324.25354004]
[137.09411621 326.78253174]
[149.82691956 334.71194458]
[158.61840820 346.86553955]
[162.16442871 361.44036865]
[159.93894958 376.27435303]
[152.27210999 389.16699219]
[140.30122375 398.20565796]
[125.80211639 402.04962158]
[110.92563629 400.12857056]
[97.87863159 392.72750854]
[88.59653473 380.94436646]
[84.45645905 366.52896118]
[80.70015717 381.05102539]
[76.94385529 395.57308960]
[73.18755341 410.09515381]
[69.43125153 424.61721802]
[73.46618652 439.91525269]
[62.78824997 450.29940796]
[59.03195190 464.82147217]
[72.00513458 472.55923462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[27 187]
[28 186]
[29 185]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[40 178]
[41 177]
[42 176]
[43 175]
[46 173]
[47 172]
[48 171]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 136]
[55 135]
[56 134]
[57 133]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[66 126]
[67 125]
[69 123]
[70 122]
[73 119]
[74 118]
[75 117]
[77 116]
[78 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
