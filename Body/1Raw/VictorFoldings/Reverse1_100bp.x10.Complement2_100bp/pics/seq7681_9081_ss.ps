%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[7.76247549 432.23669434]
[5.13603020 447.01535034]
[1.19539881 461.49905396]
[-4.02768993 475.57119751]
[-10.49118233 489.11849976]
[-18.14303780 502.03189087]
[-26.92164421 514.20733643]
[-36.75632477 525.54693604]
[-47.56789017 535.95922852]
[-59.26929092 545.36047363]
[-71.76631927 553.67492676]
[-84.95834351 560.83575439]
[-98.73915100 566.78515625]
[-112.99778748 571.47528076]
[-127.61945343 574.86840820]
[-142.48640442 576.93719482]
[-157.47895813 577.66491699]
[-172.47639465 577.04583740]
[-187.35795593 575.08483887]
[-202.00381470 571.79779053]
[-216.29606628 567.21105957]
[-230.11962891 561.36169434]
[-243.36320496 554.29669189]
[-255.92015076 546.07299805]
[-267.68936157 536.75677490]
[-278.57611084 526.42309570]
[-288.49270630 515.15515137]
[-297.35931396 503.04357910]
[-305.10455322 490.18600464]
[-311.66604614 476.68588257]
[-316.99096680 462.65194702]
[-321.03643799 448.19717407]
[-323.76992798 433.43795776]
[-325.16937256 418.49313354]
[-325.22354126 403.48303223]
[-323.93194580 388.52850342]
[-321.30505371 373.74993896]
[-317.36398315 359.26635742]
[-312.14047241 345.19436646]
[-305.67657471 331.64724731]
[-298.02432251 318.73410034]
[-289.24533081 306.55889893]
[-279.41030884 295.21963501]
[-268.59841919 284.80767822]
[-256.89672852 275.40676880]
[-244.39945984 267.09268188]
[-231.20721436 259.93231201]
[-217.42622375 253.98330688]
[-203.16743469 249.29359436]
[-188.54566956 245.90092468]
[-173.67864990 243.83261108]
[-158.68608093 243.10530090]
[-143.68867493 243.72486877]
[-128.80717468 245.68629456]
[-114.16139984 248.97381592]
[-99.86929321 253.56094360]
[-86.04590607 259.41076660]
[-72.80255127 266.47616577]
[-60.24585724 274.70025635]
[-48.47691727 284.01681519]
[-38.15024948 273.13748169]
[-27.82358170 262.25814819]
[-17.49691200 251.37879944]
[-7.17024374 240.49946594]
[-4.02000093 225.94181824]
[11.09243107 221.25941467]
[20.40731430 209.50215149]
[28.63612175 196.96075439]
[36.86492920 184.41935730]
[36.92043686 166.87045288]
[53.43515015 158.72517395]
[61.47632217 146.06263733]
[69.51749420 133.40011597]
[77.55867004 120.73759460]
[78.49075317 113.40594482]
[85.81501007 107.94764709]
[84.13873291 96.42240143]
[90.60017395 86.73265839]
[101.88425446 83.84980774]
[110.29887390 71.43231201]
[118.71348572 59.01482010]
[127.12810516 46.59732437]
[135.45005798 34.11753082]
[143.67886353 21.57612991]
[151.62554932 8.85409260]
[159.28614807 -4.04223394]
[166.94673157 -16.93856049]
[174.60733032 -29.83488846]
[182.26792908 -42.73121643]
[189.92852783 -55.62754059]
[197.49290466 -68.58054352]
[204.96064758 -81.58949280]
[212.33134460 -94.65367889]
[219.60456848 -107.77236938]
[226.87779236 -120.89106750]
[214.64241028 -129.59596252]
[203.45860291 -139.61605835]
[193.46704102 -150.82537842]
[184.79338074 -163.08293152]
[177.54669189 -176.23457336]
[171.81811523 -190.11489868]
[167.67968750 -204.54934692]
[165.18347168 -219.35639954]
[164.36083984 -234.34983826]
[165.22215271 -249.34111023]
[167.75656128 -264.14169312]
[171.93220520 -278.56539917]
[177.69656372 -292.43090820]
[184.97715759 -305.56381226]
[193.68241882 -317.79895020]
[203.70286560 -328.98245239]
[214.91247559 -338.97366333]
[227.17028809 -347.64697266]
[240.32214355 -354.89324951]
[254.20263672 -360.62142944]
[268.63720703 -364.75939941]
[283.44433594 -367.25518799]
[298.43780518 -368.07736206]
[313.42904663 -367.21560669]
[328.22955322 -364.68075562]
[342.65313721 -360.50469971]
[356.51846313 -354.73989868]
[369.65115356 -347.45892334]
[381.88601685 -338.75329590]
[393.06924438 -328.73251343]
[403.06011963 -317.52261353]
[411.73306274 -305.26455688]
[418.97894287 -292.11248779]
[424.70669556 -278.23181152]
[428.84426880 -263.79711914]
[431.33959961 -248.98989868]
[432.16131592 -233.99641418]
[431.29913330 -219.00518799]
[428.76382446 -204.20477295]
[424.58731079 -189.78129578]
[418.82211304 -175.91613770]
[411.54074097 -162.78367615]
[402.83477783 -150.54905701]
[392.81365967 -139.36616516]
[381.60345459 -129.37561035]
[369.34512329 -120.70304108]
[356.19281006 -113.45753479]
[342.31198120 -107.73020172]
[327.87716675 -103.59307861]
[313.06988525 -101.09818268]
[298.07635498 -100.27689362]
[283.08517456 -101.13954926]
[268.28482056 -103.67528534]
[253.86148071 -107.85222626]
[239.99649048 -113.61783600]
[232.72326660 -100.49914551]
[225.45002747 -87.38044739]
[224.95599365 -80.00632477]
[217.96960449 -74.12174988]
[210.50186157 -61.11280060]
[209.89808655 -53.74684906]
[202.82485962 -47.96694565]
[195.16426086 -35.07061768]
[187.50366211 -22.17428970]
[179.84306335 -9.27796364]
[172.18246460 3.61836338]
[164.52186584 16.51469040]
[165.03314209 20.00337791]
[163.88005066 23.91303253]
[160.88311768 27.45869446]
[156.22026062 29.80493736]
[147.99145508 42.34633636]
[146.95031738 49.66329193]
[139.54560852 55.01194000]
[131.13098145 67.42943573]
[122.71636963 79.84693146]
[114.30175018 92.26442719]
[113.52787781 109.02084351]
[98.35640717 116.17645264]
[90.22119141 128.77876282]
[82.18002319 141.44128418]
[74.13884735 154.10382080]
[66.09767151 166.76634216]
[68.14073944 179.50167847]
[61.18254471 189.88278198]
[49.40633011 192.64816284]
[41.17752075 205.18955994]
[32.94871521 217.73095703]
[46.66101837 211.65043640]
[61.65608597 212.03509521]
[75.03860474 218.81065369]
[84.22462463 230.66885376]
[87.44046021 245.32008362]
[84.06519318 259.93539429]
[74.75052643 271.69284058]
[61.29498672 278.32217407]
[46.29661560 278.54345703]
[32.65137482 272.31390381]
[22.99393845 260.83636475]
[19.18900871 246.32696533]
[21.97176552 231.58607483]
[18.08288956 246.92189026]
[3.70909071 250.82614136]
[-6.61757803 261.70547485]
[-16.94424629 272.58480835]
[-27.27091408 283.46414185]
[-37.59758377 294.34347534]
[-27.68064499 305.61114502]
[-18.81366730 317.72244263]
[-11.06804371 330.57977295]
[-4.50613689 344.07968140]
[0.81921870 358.11346436]
[4.86514521 372.56811523]
[7.59906721 387.32723999]
[8.99897194 402.27203369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 202]
[61 201]
[62 200]
[63 199]
[64 198]
[66 196]
[67 183]
[68 182]
[69 181]
[71 178]
[72 177]
[73 176]
[74 175]
[76 174]
[79 172]
[80 171]
[81 170]
[82 169]
[83 167]
[84 166]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 155]
[92 154]
[93 152]
[94 151]
[95 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
