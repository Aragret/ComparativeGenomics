%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[47.79929352 528.89532471]
[40.04948044 514.44287109]
[48.91952896 500.64959717]
[49.14285660 485.65127563]
[49.36618423 470.65292358]
[49.58951187 455.65460205]
[49.81283951 440.65625000]
[50.03616714 425.65792847]
[46.99259949 418.92303467]
[50.37612915 410.43838501]
[50.82273483 395.44503784]
[43.46780396 382.49304199]
[51.61255646 368.92935181]
[52.05916214 353.93600464]
[43.55836105 366.29464722]
[30.58037758 373.81607056]
[15.63105106 375.04800415]
[1.59686518 369.75256348]
[-8.81239891 358.95223999]
[-13.58687496 344.73239136]
[-11.80468750 329.83862305]
[-3.80994821 317.14672852]
[8.85368347 309.10729980]
[23.74106026 307.27264404]
[37.97766113 311.99694824]
[48.81462097 322.36807251]
[54.15967560 336.38476562]
[57.26378632 321.70947266]
[60.36789703 307.03417969]
[49.19793701 297.18035889]
[44.42824554 282.96395874]
[47.43472672 268.17114258]
[57.50807953 256.79464722]
[72.01795197 251.95619202]
[75.12206268 237.28088379]
[78.22617340 222.60559082]
[81.11145020 207.88569641]
[83.77724457 193.12448120]
[78.42499542 179.22473145]
[88.49169159 167.01931763]
[90.16323090 152.11274719]
[90.83301544 137.12770081]
[91.50279999 122.14266968]
[92.17258453 107.15763092]
[92.17258453 92.15763092]
[83.82679749 78.71670532]
[90.98807526 65.65663910]
[90.31829071 50.67160416]
[81.97249603 37.23068237]
[89.13378143 24.17061806]
[88.46398926 9.18557835]
[75.68231964 0.58702844]
[70.47545624 -13.72177792]
[74.64324951 -28.18184471]
[86.38597107 -37.30578995]
[85.71618652 -52.29082870]
[85.04640198 -67.27587128]
[84.37661743 -82.26091003]
[76.03082275 -95.70182800]
[83.19210052 -108.76189423]
[82.52231598 -123.74693298]
[81.85253143 -138.73196411]
[75.54444885 -125.12285614]
[65.54994202 -113.93759918]
[52.73365402 -106.14384460]
[38.20430756 -102.41581726]
[23.21884537 -103.07604218]
[9.07365608 -108.06739044]
[-3.00755978 -116.95807648]
[-11.97965622 -128.97895813]
[-17.06645584 -143.09010315]
[-17.82790184 -158.07075500]
[-14.19811821 -172.62495422]
[-6.49112082 -185.49360657]
[4.62635946 -195.56344604]
[18.19254875 -201.96333313]
[33.03383636 -204.13960266]
[47.86630249 -201.90399170]
[61.40679169 -195.44992065]
[72.48391724 -185.33569336]
[80.13938904 -172.43632507]
[83.71061707 -157.87123108]
[87.25028992 -172.44761658]
[90.78996277 -187.02398682]
[94.32963562 -201.60035706]
[86.04451752 -212.21975708]
[85.39773560 -225.47842407]
[92.40161896 -236.52503967]
[104.30991364 -241.44660950]
[108.06621552 -255.96867371]
[111.82251740 -270.49072266]
[115.57881165 -285.01278687]
[111.54388428 -300.31082153]
[122.22181702 -310.69500732]
[125.97811890 -325.21707153]
[112.21528625 -331.26525879]
[99.60094452 -339.44293213]
[88.46184540 -349.53829956]
[79.08650970 -361.28988647]
[71.71778870 -374.39324951]
[66.54654694 -388.50900269]
[63.70673370 -403.27148438]
[63.27190399 -418.29837036]
[65.25331879 -433.20040894]
[69.59966278 -447.59155273]
[76.19834900 -461.09909058]
[84.87845612 -473.37313843]
[95.41515350 -484.09573364]
[107.53550720 -492.98916626]
[120.92557526 -499.82305908]
[135.23852539 -504.42041016]
[150.10360718 -506.66213989]
[165.13580322 -506.49017334]
[179.94570923 -503.90896606]
[194.14973450 -498.98538208]
[207.37995911 -491.84695435]
[219.29370117 -482.67855835]
[229.58233643 -471.71771240]
[237.97938538 -459.24832153]
[244.26733398 -445.59338379]
[248.28330994 -431.10653687]
[249.92329407 -416.16308594]
[249.14480591 -401.15011597]
[245.96801758 -386.45642090]
[240.47520447 -372.46267700]
[232.80865479 -359.53131104]
[223.16693115 -347.99728394]
[211.79980469 -338.15939331]
[199.00167847 -330.27239990]
[185.10408020 -324.54064941]
[170.46699524 -321.11260986]
[155.46952820 -320.07702637]
[140.50018311 -321.46075439]
[136.74388123 -306.93869019]
[141.04748535 -292.67938232]
[130.10087585 -281.25650024]
[126.34457397 -266.73443604]
[122.58827209 -252.21237183]
[118.83197021 -237.69030762]
[127.97844696 -223.57717896]
[124.00951385 -206.88697815]
[108.90600586 -198.06068420]
[105.36633301 -183.48431396]
[101.82666016 -168.90794373]
[98.28698730 -154.33155823]
[96.83757019 -139.40174866]
[97.50735474 -124.41671753]
[98.17713928 -109.43167877]
[106.47502899 -97.06259155]
[99.36165619 -82.93069458]
[100.03144073 -67.94565582]
[100.70122528 -52.96061707]
[101.37100983 -37.97557831]
[113.88090515 -29.93564606]
[119.32214355 -15.90507412]
[115.41260529 -1.18879318]
[103.44902802 8.51579380]
[104.11882019 23.50083160]
[112.41670227 35.86992264]
[105.30332947 50.00181961]
[105.97311401 64.98685455]
[114.27099609 77.35594940]
[107.15762329 91.48783875]
[118.05292511 81.17801666]
[133.05038452 81.45415497]
[143.55877686 92.15806580]
[143.55841064 107.15806580]
[133.04951477 117.86147308]
[118.05204010 118.13689423]
[107.15762329 107.82741547]
[106.48783875 122.81245422]
[105.81805420 137.79748535]
[105.14826965 152.78253174]
[114.98027802 141.45417786]
[129.34577942 137.13766479]
[143.79348755 141.17053223]
[153.84660339 152.30314636]
[156.39006042 167.08592224]
[150.63575745 180.93829346]
[138.36669922 189.56791687]
[123.38462067 190.30084229]
[110.33186340 182.90992737]
[103.25290680 169.68511963]
[108.41447449 184.64067078]
[98.53845978 195.79026794]
[95.87266541 210.55148315]
[97.74515533 216.89225769]
[96.34459686 222.40002441]
[92.90147400 225.70970154]
[89.79736328 240.38499451]
[86.69326019 255.06030273]
[98.00117493 265.35974121]
[102.60516357 279.84075928]
[99.36419678 294.58398438]
[89.24649048 305.65139771]
[75.04319763 310.13827515]
[71.93908691 324.81359863]
[68.83497620 339.48889160]
[67.05251312 354.38259888]
[66.60590363 369.37594604]
[73.92889404 383.40039062]
[65.81608582 395.89163208]
[65.36947632 410.88497925]
[65.03450012 425.88125610]
[64.81117249 440.87957764]
[64.58784485 455.87792969]
[64.36451721 470.87625122]
[64.14118958 485.87460327]
[63.91786575 500.87292480]
[72.37330627 514.92419434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[10 203]
[11 202]
[13 200]
[14 199]
[27 198]
[28 197]
[29 196]
[34 191]
[35 190]
[36 189]
[37 186]
[38 185]
[40 183]
[41 173]
[42 172]
[43 171]
[44 170]
[45 163]
[47 161]
[48 160]
[50 158]
[51 157]
[55 153]
[56 152]
[57 151]
[58 150]
[60 148]
[61 147]
[62 146]
[82 145]
[83 144]
[84 143]
[85 142]
[89 139]
[90 138]
[91 137]
[92 136]
[94 134]
[95 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
