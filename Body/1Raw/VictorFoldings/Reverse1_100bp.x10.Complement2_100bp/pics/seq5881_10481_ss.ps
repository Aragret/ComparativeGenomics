%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[53.27264786 425.83935547]
[44.60848618 438.09078979]
[35.15356064 449.74285889]
[24.94921684 460.74453735]
[14.04007053 471.04776001]
[2.47382832 480.60745239]
[-9.69893360 489.38180542]
[-22.42498779 497.33248901]
[-35.64868164 504.42471313]
[-49.31219864 510.62744141]
[-63.35578537 515.91357422]
[-77.71803284 520.26007080]
[-92.33613586 523.64776611]
[-107.14617920 526.06195068]
[-122.08339691 527.49206543]
[-137.08247375 527.93182373]
[-152.07781982 527.37933350]
[-167.00387573 525.83703613]
[-181.79534912 523.31158447]
[-196.38757324 519.81408691]
[-210.71675110 515.35980225]
[-224.72021484 509.96823120]
[-238.33671570 503.66296387]
[-251.50672913 496.47155762]
[-264.17266846 488.42547607]
[-276.27914429 479.55984497]
[-287.77319336 469.91348267]
[-298.60458374 459.52856445]
[-308.72595215 448.45050049]
[-318.09304810 436.72772217]
[-326.66488647 424.41149902]
[-334.40396118 411.55569458]
[-341.27648926 398.21649170]
[-347.25241089 384.45223999]
[-352.30554199 370.32315063]
[-356.41384888 355.89099121]
[-359.55932617 341.21884155]
[-361.72824097 326.37088013]
[-362.91107178 311.41204834]
[-363.10269165 296.40777588]
[-362.30227661 281.42361450]
[-360.51324463 266.52511597]
[-357.74349976 251.77742004]
[-354.00512695 237.24504089]
[-349.31445312 222.99150085]
[-343.69201660 209.07913208]
[-337.16238403 195.56878662]
[-329.75415039 182.51951599]
[-321.49963379 169.98838806]
[-312.43499756 158.03021240]
[-302.59985352 146.69728088]
[-292.03720093 136.03913879]
[-280.79324341 126.10237885]
[-268.91711426 116.93048096]
[-256.46081543 108.56352997]
[-243.47874451 101.03812408]
[-230.02769470 94.38716888]
[-216.16650391 88.63974762]
[-201.95574951 83.82099152]
[-187.45761108 79.95196533]
[-172.73544312 77.04959869]
[-157.85365295 75.12657166]
[-142.87730408 74.19130707]
[-127.87189484 74.24787903]
[-112.90302277 75.29605103]
[-98.03615570 77.33123779]
[-83.33630371 80.34453583]
[-68.86773682 84.32276917]
[-54.69373322 89.24855042]
[-40.87627029 95.10033417]
[-27.47576141 101.85252380]
[-14.55081177 109.47560883]
[-2.15793729 117.93624115]
[9.64867115 127.19743347]
[20.81738663 137.21868896]
[31.29936790 147.95617676]
[42.70183182 138.21022034]
[54.10429382 128.46424866]
[57.14645767 121.72874451]
[65.74983978 118.65959930]
[77.29614258 109.08448029]
[88.84244537 99.50936127]
[100.31714630 89.84854889]
[111.71960449 80.10258484]
[123.12207031 70.35662079]
[134.45166016 60.52603912]
[145.70776367 50.61138916]
[156.73963928 40.44784164]
[167.54179382 30.04046822]
[178.34394836 19.63309479]
[189.14610291 9.22572136]
[199.94825745 -1.18165183]
[210.75041199 -11.58902550]
[201.21746826 -23.18027115]
[192.62335205 -35.48373413]
[185.02105713 -48.42356110]
[178.45744324 -61.91997528]
[172.97299194 -75.88975525]
[168.60150146 -90.24678802]
[165.36994934 -104.90254211]
[163.29823303 -119.76666260]
[162.39913940 -134.74749756]
[162.67820740 -149.75271606]
[164.13371277 -164.68975830]
[166.75669861 -179.46656799]
[170.53097534 -193.99203491]
[175.43327332 -208.17658997]
[181.43338013 -221.93276978]
[188.49429321 -235.17579651]
[196.57249451 -247.82398987]
[205.61814880 -259.79937744]
[215.57550049 -271.02816772]
[226.38317871 -281.44104004]
[237.97451782 -290.97387695]
[250.27807617 -299.56787109]
[263.21798706 -307.17004395]
[276.71444702 -313.73352051]
[290.68429565 -319.21783447]
[305.04135132 -323.58917236]
[319.69714355 -326.82055664]
[334.56127930 -328.89212036]
[349.54214478 -329.79107666]
[364.54736328 -329.51184082]
[379.48437500 -328.05618286]
[394.26116943 -325.43304443]
[408.78659058 -321.65863037]
[422.97109985 -316.75619507]
[436.72723389 -310.75592041]
[449.97018433 -303.69488525]
[462.61828613 -295.61657715]
[474.59359741 -286.57077026]
[485.82226562 -276.61331177]
[496.23504639 -265.80554199]
[505.76776123 -254.21409607]
[514.36163330 -241.91046143]
[521.96362305 -228.97047424]
[528.52697754 -215.47392273]
[534.01116943 -201.50402832]
[538.38232422 -187.14691162]
[541.61358643 -172.49108887]
[543.68499756 -157.62693787]
[544.58380127 -142.64607239]
[544.30444336 -127.64086914]
[542.84863281 -112.70384216]
[540.22534180 -97.92709351]
[536.45074463 -83.40171051]
[531.54815674 -69.21725464]
[525.54779053 -55.46118546]
[518.48657227 -42.21831131]
[510.40814209 -29.57027626]
[501.36224365 -17.59506416]
[491.40466309 -6.36650658]
[480.59677124 4.04616880]
[469.00521851 13.57876301]
[456.70150757 22.17250443]
[443.76144409 29.77440643]
[430.26483154 36.33760452]
[416.29489136 41.82162857]
[401.93771362 46.19266891]
[387.28186035 49.42378235]
[372.41769409 51.49504089]
[357.43679810 52.39367294]
[342.43161011 52.11414337]
[327.49459839 50.65817642]
[312.71786499 48.03474426]
[298.19253540 44.26002121]
[284.00811768 39.35728455]
[270.25213623 33.35675812]
[257.00930786 26.29543877]
[244.36135864 18.21686172]
[232.38624573 9.17083454]
[221.15779114 -0.78686863]
[210.35563660 9.62050438]
[199.55348206 20.02787781]
[188.75132751 30.43525124]
[177.94915771 40.84262466]
[167.14700317 51.24999619]
[166.71620178 54.74953461]
[164.56896973 58.21427155]
[160.74011230 60.83975220]
[155.62240601 61.86748505]
[144.36631775 71.78213501]
[141.42475891 78.56218719]
[132.86802673 81.75907898]
[121.46556854 91.50505066]
[110.06311035 101.25101471]
[106.46888733 108.46586609]
[98.41756439 111.05566406]
[86.87126160 120.63078308]
[75.32495880 130.20590210]
[63.85025787 139.86671448]
[52.44779587 149.61268616]
[41.04533386 159.35864258]
[50.01984406 171.38461304]
[58.17992401 183.97741699]
[65.48989105 197.08200073]
[71.91778564 210.64105225]
[77.43550110 224.59529114]
[82.01889801 238.88368225]
[85.64794922 253.44375610]
[88.30677032 268.21182251]
[89.98374939 283.12335205]
[90.67154694 298.11309814]
[90.36714935 313.11553955]
[89.07189941 328.06506348]
[86.79145813 342.89627075]
[83.53578949 357.54437256]
[79.31913757 371.94525146]
[74.15993500 386.03598022]
[68.08074951 399.75491333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 193]
[77 192]
[78 191]
[80 190]
[81 189]
[82 188]
[83 186]
[84 185]
[85 184]
[86 182]
[87 181]
[88 177]
[89 176]
[90 175]
[91 174]
[92 173]
[93 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
