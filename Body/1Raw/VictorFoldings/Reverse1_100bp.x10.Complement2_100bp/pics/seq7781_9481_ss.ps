%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[48.65058136 561.02551270]
[41.84571457 574.40777588]
[33.72188568 587.03289795]
[24.36245537 598.77142334]
[13.86346531 609.50280762]
[2.33265543 619.11688232]
[-10.11165142 627.51513672]
[-23.34175491 634.61126709]
[-37.22189331 640.33251953]
[-51.60963058 644.62017822]
[-66.35733032 647.43023682]
[-81.31365204 648.73388672]
[-96.32512665 648.51763916]
[-111.23770142 646.78387451]
[-125.89835358 643.55023193]
[-140.15664673 638.85003662]
[-153.86625671 632.73138428]
[-166.88650513 625.25714111]
[-179.08378601 616.50402832]
[-190.33293152 606.56182861]
[-200.51850891 595.53253174]
[-209.53601074 583.52935791]
[-217.29286194 570.67547607]
[-223.70950317 557.10278320]
[-228.72007751 542.95062256]
[-232.27317810 528.36407471]
[-234.33232117 513.49291992]
[-234.87638855 498.48977661]
[-233.89981079 483.50854492]
[-231.41258240 468.70297241]
[-227.44024658 454.22500610]
[-222.02355957 440.22320557]
[-215.21810913 426.84124756]
[-207.09371948 414.21646118]
[-197.73376465 402.47836304]
[-187.23431396 391.74746704]
[-175.70307922 382.13385010]
[-163.25840759 373.73617554]
[-150.02798462 366.64059448]
[-136.14759827 360.91995239]
[-121.75966644 356.63293457]
[-107.01184082 353.82354736]
[-92.05546570 352.52056885]
[-77.04399872 352.73745728]
[-62.13150024 354.47189331]
[-47.47098923 357.70614624]
[-33.21290588 362.40701294]
[-19.50356293 368.52624512]
[-12.03582191 355.51730347]
[-4.56808090 342.50833130]
[2.89966035 329.49938965]
[10.36740112 316.49044800]
[17.64063072 303.37173462]
[24.71773720 290.14620972]
[23.90056038 275.27404785]
[37.23357010 266.75692749]
[44.31067657 253.53138733]
[51.38778305 240.30586243]
[58.46488571 227.08033752]
[63.81607437 213.06730652]
[67.35574341 198.49093628]
[70.89541626 183.91456604]
[74.43508911 169.33818054]
[72.95877838 162.09648132]
[78.13749695 154.57192993]
[81.89379883 140.04988098]
[85.65009308 125.52781677]
[77.18324280 118.35715485]
[71.99171448 108.55133820]
[70.82074738 97.51798248]
[73.83842468 86.84092712]
[80.61157227 78.05283356]
[90.16790009 72.41523743]
[101.13562012 70.73740387]
[105.53662109 56.39755630]
[109.93761444 42.05770874]
[114.33861542 27.71786118]
[118.73961639 13.37801361]
[123.14060974 -0.96183324]
[127.54161072 -15.30168056]
[131.94261169 -29.64152718]
[128.59480286 -45.10447311]
[139.72575378 -55.00149536]
[144.12675476 -69.34133911]
[148.52775574 -83.68119049]
[152.71476746 -98.08496857]
[156.68685913 -112.54949188]
[160.65895081 -127.01401520]
[164.63105774 -141.47854614]
[168.17073059 -156.05491638]
[171.27484131 -170.73022461]
[165.16241455 -188.10029602]
[177.39233398 -200.68585205]
[180.27760315 -215.40574646]
[183.16288757 -230.12562561]
[169.15502930 -235.60466003]
[156.35070801 -243.49700928]
[145.16152954 -253.54898071]
[135.94720459 -265.43746948]
[129.00389099 -278.78024292]
[124.55482483 -293.14846802]
[122.74301147 -308.08023071]
[123.62668610 -323.09552002]
[127.17745209 -337.71166992]
[133.28115845 -351.45883179]
[141.74160767 -363.89508057]
[152.28683472 -374.62066650]
[164.57783508 -383.29080200]
[178.21951294 -389.62673950]
[192.77334595 -393.42486572]
[207.77149963 -394.56304932]
[222.73181152 -393.00469971]
[237.17341614 -388.79992676]
[250.63203430 -382.08386230]
[262.67504883 -373.07244873]
[272.91534424 -362.05535889]
[281.02368164 -349.38671875]
[286.73947144 -335.47378540]
[289.87893677 -320.76379395]
[290.34115601 -305.72964478]
[288.11129761 -290.85458374]
[283.26101685 -276.61679077]
[275.94625854 -263.47396851]
[266.40213013 -251.84857178]
[254.93547058 -242.11434937]
[241.91485596 -234.58419800]
[227.75885010 -229.50016785]
[212.92251587 -227.02571106]
[197.88276672 -227.24035645]
[194.99749756 -212.52046204]
[192.11222839 -197.80058289]
[198.59826660 -187.58990479]
[196.31497192 -175.30290222]
[185.95013428 -167.62611389]
[182.84602356 -152.95080566]
[184.26031494 -150.53048706]
[184.80108643 -147.40411377]
[184.19462585 -143.90161133]
[182.29158020 -140.44573975]
[179.09558105 -137.50643921]
[175.12347412 -123.04192352]
[171.15138245 -108.57740021]
[167.17929077 -94.11287689]
[168.72103882 -89.59268951]
[167.43960571 -84.05599976]
[162.86759949 -79.28018951]
[158.46659851 -64.94034576]
[154.06559753 -50.60049438]
[157.72821045 -36.16323090]
[146.28245544 -25.24053001]
[141.88145447 -10.90068245]
[137.48045349 3.43916488]
[133.07946777 17.77901268]
[128.67846680 32.11885834]
[124.27746582 46.45870590]
[119.87646484 60.79855347]
[115.47547150 75.13839722]
[127.31039429 89.42968750]
[128.18069458 107.96476746]
[117.73696136 123.30213165]
[100.17215729 129.28411865]
[96.41585541 143.80618286]
[92.65955353 158.32823181]
[89.01146698 172.87785339]
[85.47179413 187.45423889]
[81.93212128 202.03060913]
[78.39244843 216.60697937]
[88.42670441 205.45738220]
[101.50542450 198.11250305]
[116.24837494 195.34750366]
[131.09970093 197.45414734]
[144.49212646 204.21012878]
[155.01228333 214.90246582]
[161.54997253 228.40278625]
[163.41525269 243.28636169]
[160.41127014 257.98248291]
[152.85505676 270.94024658]
[141.54403687 280.79217529]
[127.67186737 286.49859619]
[112.70253754 287.45727539]
[98.21578217 283.56704712]
[85.74042511 275.23843384]
[76.59301758 263.35043335]
[71.73892212 249.15754700]
[71.69041443 234.15744019]
[64.61331177 247.38296509]
[57.53620529 260.60848999]
[50.45909882 273.83401489]
[50.77007294 289.65216064]
[37.94326401 297.22332764]
[30.86615944 310.44885254]
[30.69743919 317.05816650]
[27.67059708 321.86807251]
[23.37635422 323.95819092]
[15.90861320 336.96713257]
[8.44087124 349.97607422]
[0.97313040 362.98504639]
[-6.49461079 375.99398804]
[5.70305538 384.74658203]
[16.95264053 394.68829346]
[27.13870239 405.71713257]
[36.15671921 417.71990967]
[43.91415024 430.57342529]
[50.33138657 444.14584351]
[55.34258652 458.29782104]
[58.89632034 472.88418579]
[60.95611954 487.75524902]
[61.50085068 502.75839233]
[60.52492523 517.73968506]
[58.03835297 532.54534912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 198]
[49 197]
[50 196]
[51 195]
[52 194]
[53 191]
[54 190]
[56 188]
[57 187]
[58 186]
[59 185]
[60 167]
[61 166]
[62 165]
[63 164]
[65 163]
[66 162]
[67 161]
[74 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[83 148]
[84 147]
[85 146]
[86 143]
[87 142]
[88 141]
[89 140]
[90 135]
[91 134]
[93 131]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
