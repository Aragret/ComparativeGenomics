%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[69.36198425 518.26763916]
[56.96580887 508.93411255]
[52.45540619 494.08700562]
[57.56510544 479.43536377]
[70.33013153 470.61303711]
[70.55345917 455.61468506]
[70.77678680 440.61636353]
[71.00011444 425.61801147]
[71.22344208 410.61968994]
[63.02601624 401.72424316]
[63.08932877 389.22705078]
[71.92484283 379.83044434]
[72.37144470 364.83709717]
[62.31026077 356.78710938]
[58.66825867 344.22454834]
[62.99027634 331.67343140]
[73.91030884 323.78878784]
[74.58009338 308.80377197]
[75.24987793 293.81872559]
[72.40818787 286.99621582]
[76.04283142 278.61605835]
[76.93565369 263.64263916]
[77.82846832 248.66925049]
[78.72128296 233.69583130]
[79.61409760 218.72242737]
[77.55975342 215.85676575]
[76.79135895 211.85369873]
[77.82837677 207.32844543]
[80.89587402 203.10499573]
[82.45639801 188.18638611]
[84.01692200 173.26777649]
[85.57744598 158.34918213]
[83.14687347 151.36962891]
[87.27387238 143.22065735]
[89.05633545 128.32695007]
[90.83880615 113.43322754]
[84.20520782 103.86051941]
[85.67522430 92.30715179]
[94.49465179 84.70064545]
[88.67043304 69.99047852]
[98.03874207 58.41101456]
[97.92707825 43.41143036]
[95.70195770 28.57738686]
[83.89992523 14.44255733]
[90.95510864 -1.62577331]
[88.50938416 -16.42504501]
[86.06365204 -31.22431564]
[76.17979431 -43.57825851]
[81.73839569 -57.39677048]
[79.29267120 -72.19604492]
[76.84693909 -86.99531555]
[74.40121460 -101.79458618]
[69.46961975 -115.96071625]
[62.19638824 -129.07940674]
[54.92316055 -142.19810486]
[47.55247116 -155.26229858]
[40.08472824 -168.27124023]
[32.61698914 -181.28019714]
[25.14924812 -194.28915405]
[17.68150711 -207.29809570]
[3.91617751 -201.29986572]
[-10.42547035 -196.85235596]
[-25.16934204 -194.00956726]
[-40.13645935 -192.80599976]
[-55.14513779 -193.25628662]
[-70.01318359 -195.35494995]
[-84.56011963 -199.07650757]
[-98.60934448 -204.37579346]
[-111.99032593 -211.18846130]
[-124.54062653 -219.43182373]
[-136.10789490 -229.00582886]
[-146.55172729 -239.79423523]
[-155.74533081 -251.66607666]
[-163.57710266 -264.47726440]
[-169.95198059 -278.07226562]
[-174.79258728 -292.28607178]
[-178.04014587 -306.94610596]
[-179.65524292 -321.87442017]
[-179.61825562 -336.88980103]
[-177.92965698 -351.80996704]
[-174.60993958 -366.45382690]
[-169.69938660 -380.64361572]
[-163.25762939 -394.20706177]
[-155.36285400 -406.97952271]
[-146.11088562 -418.80593872]
[-135.61405945 -429.54278564]
[-123.99977112 -439.05969238]
[-111.40901947 -447.24114990]
[-97.99464417 -453.98782349]
[-83.91948700 -459.21783447]
[-69.35440826 -462.86770630]
[-54.47620392 -464.89312744]
[-39.46548843 -465.26947021]
[-24.50447845 -463.99221802]
[-9.77478695 -461.07684326]
[4.54478168 -456.55874634]
[18.28040123 -450.49279785]
[31.26533318 -442.95257568]
[43.34195328 -434.02966309]
[54.36366272 -423.83236694]
[64.19666290 -412.48443604]
[72.72160339 -400.12365723]
[79.83498383 -386.90008545]
[85.45046234 -372.97424316]
[89.49987030 -358.51513672]
[91.93405151 -343.69833374]
[92.72346497 -328.70364380]
[91.85851288 -313.71316528]
[89.34970093 -298.90881348]
[85.22749329 -284.47027588]
[79.54191589 -270.57290649]
[72.36199951 -257.38534546]
[63.77489090 -245.06767273]
[53.88483429 -233.76943970]
[42.81188583 -223.62779236]
[30.69045830 -214.76583862]
[38.15819931 -201.75689697]
[45.62594223 -188.74794006]
[53.09368134 -175.73898315]
[60.56142426 -162.73002625]
[66.61769104 -158.49406433]
[68.04185486 -149.47132874]
[75.31508636 -136.35264587]
[82.58831024 -123.23394775]
[81.92108154 -138.21910095]
[84.95143127 -152.90980530]
[91.49405670 -166.40773010]
[101.14888000 -177.88748169]
[113.32550049 -186.64703369]
[127.27931976 -192.15077209]
[142.15704346 -194.06211853]
[157.04890442 -192.26419067]
[171.04425049 -186.86695862]
[183.28727722 -178.20043945]
[193.02929688 -166.79461670]
[199.67459106 -153.34693909]
[202.81680298 -138.67974854]
[202.26377869 -123.68994141]
[198.04934692 -109.29416656]
[190.43119812 -96.37271118]
[179.87521362 -85.71574402]
[167.02687073 -77.97492981]
[152.67185974 -73.62362671]
[137.68800354 -72.92792511]
[122.99156952 -75.93035889]
[109.48123932 -82.44733429]
[97.98317719 -92.08032990]
[89.20048523 -104.24031067]
[91.64620972 -89.44104004]
[94.09194183 -74.64176941]
[96.53766632 -59.84249878]
[106.24658966 -48.54709625]
[100.86292267 -33.67004395]
[103.30865479 -18.87077141]
[105.75437927 -4.07150078]
[115.40220642 3.22548580]
[117.56089783 15.53498650]
[110.53600311 26.35227013]
[112.76112366 41.18631363]
[117.61915588 26.99478531]
[126.39576721 14.83044720]
[138.33169556 5.74563932]
[152.39434814 0.52628720]
[167.36718750 -0.37608317]
[181.95489502 3.11659241]
[194.89549255 10.70216274]
[205.06948853 21.72439957]
[211.59674072 35.22977066]
[213.91256714 50.04992294]
[211.81661987 64.90277100]
[205.49023438 78.50338745]
[195.48069763 89.67518616]
[182.65393066 97.45169830]
[168.11958313 101.16017151]
[153.13502502 100.47979736]
[138.99656677 95.46941376]
[126.92731476 86.56249237]
[117.97139740 74.52955627]
[112.90427399 60.41502762]
[118.87183380 74.06191254]
[109.36018372 86.70465851]
[116.12969971 102.05229187]
[105.73252106 115.21569061]
[103.95005798 130.10940552]
[102.16758728 145.00312805]
[100.49604797 159.90969849]
[98.93552399 174.82830811]
[97.37500000 189.74690247]
[95.81447601 204.66551208]
[94.58750153 219.61524963]
[93.69468689 234.58865356]
[92.80187225 249.56205750]
[91.90905762 264.53546143]
[91.01624298 279.50888062]
[90.23491669 294.48849487]
[89.56513214 309.47354126]
[88.89534760 324.45858765]
[100.93479919 337.14996338]
[100.08718109 354.28460693]
[87.36479950 365.28369141]
[86.91819000 380.27703857]
[96.02031708 396.28430176]
[86.22177887 410.84301758]
[85.99845123 425.84133911]
[85.77512360 440.83969116]
[85.55179596 455.83801270]
[85.32846832 470.83636475]
[97.82516479 480.03485107]
[102.49636841 494.83212280]
[97.54590607 509.53833008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[12 201]
[13 200]
[17 197]
[18 196]
[19 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[29 189]
[30 188]
[31 187]
[32 186]
[34 185]
[35 184]
[36 183]
[39 181]
[41 179]
[42 159]
[43 158]
[45 155]
[46 154]
[47 153]
[49 151]
[50 150]
[51 149]
[52 148]
[53 124]
[54 123]
[55 122]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
