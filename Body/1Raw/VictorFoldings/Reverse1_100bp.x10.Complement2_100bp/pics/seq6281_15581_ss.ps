%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[134.19433594 720.00323486]
[128.37005615 705.84924316]
[129.80213928 690.61090088]
[138.16152954 677.78985596]
[151.52729797 670.33227539]
[151.08068848 655.33892822]
[150.63409424 640.34558105]
[150.18748474 625.35223389]
[149.29466248 610.37884521]
[147.95643616 595.43865967]
[146.61819458 580.49847412]
[145.27996826 565.55828857]
[143.94172668 550.61810303]
[142.15927124 535.72436523]
[139.93414307 520.89031982]
[137.70903015 506.05630493]
[125.61579132 497.43716431]
[123.14788818 482.42504883]
[132.27040100 469.79898071]
[130.04528809 454.96493530]
[127.82017517 440.13088989]
[125.59505463 425.29684448]
[123.36994171 410.46279907]
[121.14482117 395.62875366]
[118.91970825 380.79470825]
[116.69458771 365.96069336]
[114.35910034 351.14361572]
[111.91337585 336.34432983]
[108.62146759 332.88421631]
[107.46824646 327.31939697]
[109.62200165 321.06857300]
[107.61798859 306.20306396]
[105.61396790 291.33752441]
[103.60995483 276.47198486]
[92.57827759 286.63577271]
[77.73126221 284.49893188]
[70.01357269 271.63668823]
[75.11440277 257.53060913]
[89.27361298 252.57916260]
[102.05265808 260.43099976]
[101.15984344 245.45758057]
[100.26702881 230.48417664]
[91.78590393 218.24000549]
[98.68808746 204.00376892]
[97.79527283 189.03036499]
[96.90245819 174.05696106]
[84.27424622 166.20417786]
[78.62471771 152.25616455]
[82.31471252 137.48330688]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[89.77846527 58.33268738]
[88.44023132 43.39250183]
[87.10199738 28.45231628]
[85.31953430 13.55859852]
[83.09441376 -1.27544558]
[80.86930084 -16.10948944]
[78.64418030 -30.94353294]
[71.68936920 -17.65328789]
[59.07440948 -9.53770256]
[44.09681320 -8.71817398]
[30.67169380 -15.40892315]
[22.30834198 -27.86100578]
[21.19291878 -42.81947708]
[27.61699486 -56.37422562]
[39.90132904 -64.98207855]
[54.83483124 -66.39295959]
[68.51391602 -60.23806763]
[77.36257935 -48.12710190]
[77.36257935 -63.12710190]
[77.36257935 -78.12710571]
[77.36257935 -93.12710571]
[77.36257935 -108.12710571]
[74.75111389 -112.64676666]
[74.19050598 -117.25534821]
[75.37119293 -121.15676117]
[77.71251678 -123.79314423]
[78.38230133 -138.77818298]
[79.05208588 -153.76322937]
[79.72187042 -168.74826050]
[80.39165497 -183.73330688]
[77.64855957 -192.44612122]
[81.18460846 -198.93597412]
[82.07742310 -213.90937805]
[82.97023773 -228.88278198]
[83.86306000 -243.85618591]
[84.64437866 -258.83581543]
[85.31416321 -273.82086182]
[85.64913940 -288.81713867]
[77.91184235 -302.61730957]
[85.64913940 -315.34457397]
[85.64913940 -330.34457397]
[85.64913940 -345.34457397]
[71.25596619 -350.00201416]
[59.00766373 -358.88085938]
[50.10419464 -371.11129761]
[45.41783142 -385.49508667]
[45.40769577 -400.62304688]
[50.07477951 -415.01309204]
[58.96184921 -427.25543213]
[71.19824219 -436.15072632]
[85.58515930 -440.82745361]
[100.71311951 -440.82745361]
[115.10003662 -436.15072632]
[127.33643341 -427.25543213]
[136.22351074 -415.01309204]
[140.89059448 -400.62304688]
[140.88044739 -385.49508667]
[136.19409180 -371.11129761]
[127.29061890 -358.88085938]
[115.04231262 -350.00201416]
[100.64913940 -345.34457397]
[100.64913940 -330.34457397]
[100.64913940 -315.34457397]
[108.38644409 -302.61730957]
[100.64913940 -288.81713867]
[102.87040710 -286.07882690]
[103.87570953 -282.12857056]
[103.10987854 -277.54962158]
[100.29920197 -273.15109253]
[99.62941742 -258.16604614]
[102.47111511 -251.34353638]
[98.83646393 -242.96337891]
[97.94364929 -227.98995972]
[97.05083466 -213.01655579]
[96.15801239 -198.04315186]
[95.37669373 -183.06352234]
[94.70690918 -168.07847595]
[94.03712463 -153.09344482]
[93.36734009 -138.10839844]
[92.69755554 -123.12335968]
[92.36257935 -108.12710571]
[92.36257935 -93.12710571]
[92.36257935 -78.12710571]
[92.36257935 -63.12710190]
[92.36257935 -48.12710190]
[93.47822571 -33.16865158]
[95.70334625 -18.33460617]
[97.92845917 -3.50056267]
[100.15357971 11.33348083]
[102.32510376 13.10622406]
[103.92526245 15.84595013]
[104.58222961 19.33934402]
[104.00819397 23.24254799]
[102.04218292 27.11408043]
[103.38041687 42.05426788]
[104.71865082 56.99444962]
[107.74408722 60.68982697]
[108.48022461 66.32499695]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[122.01416016 135.11616516]
[127.43348694 149.34585571]
[123.48144531 163.86637878]
[111.87586212 173.16413879]
[112.76867676 188.13754272]
[113.66149139 203.11094666]
[122.20647430 216.42611694]
[115.24043274 229.59136963]
[116.13325500 244.56477356]
[117.02606964 259.53817749]
[118.47548676 274.46798706]
[120.47949982 289.33352661]
[122.48351288 304.19903564]
[124.48752594 319.06457520]
[126.71264648 333.89862061]
[129.15837097 348.69787598]
[133.64512634 356.65444946]
[131.52862549 363.73556519]
[133.75375366 378.56961060]
[135.97886658 393.40365601]
[138.20397949 408.23770142]
[140.42910767 423.07174683]
[142.65422058 437.90579224]
[144.87933350 452.73983765]
[147.10444641 467.57385254]
[159.52996826 476.96771240]
[161.57524109 492.04324341]
[152.54307556 503.83117676]
[154.76818848 518.66522217]
[156.99330139 533.49926758]
[159.81739807 536.79754639]
[161.29629517 540.45501709]
[161.48223877 544.00482178]
[160.57379150 547.04473877]
[158.88191223 549.27984619]
[160.22015381 564.22003174]
[161.55838013 579.16021729]
[162.89662170 594.10040283]
[164.23484802 609.04058838]
[166.85762024 612.50109863]
[168.11619568 616.24017334]
[168.09053040 619.79467773]
[167.00274658 622.77520752]
[165.18083191 624.90563965]
[165.62744141 639.89898682]
[166.07405090 654.89233398]
[166.52064514 669.88568115]
[180.30659485 676.53448486]
[189.41429138 688.83520508]
[191.75085449 703.96130371]
[186.77934265 718.43688965]
[175.64219666 728.93560791]
[160.89863586 733.04486084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 187]
[15 186]
[16 185]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 173]
[28 172]
[31 171]
[32 170]
[33 169]
[34 168]
[40 167]
[41 166]
[42 165]
[44 163]
[45 162]
[46 161]
[50 157]
[51 156]
[53 154]
[54 153]
[55 150]
[56 149]
[57 148]
[58 143]
[59 142]
[60 141]
[61 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 124]
[91 123]
[92 119]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
