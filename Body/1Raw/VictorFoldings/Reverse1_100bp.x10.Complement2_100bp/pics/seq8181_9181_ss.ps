%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[25.78075218 498.25933838]
[27.16494942 513.32385254]
[23.82423401 528.07830811]
[16.08589745 541.07727051]
[4.70806122 551.04724121]
[-9.19458866 557.01141357]
[-24.26001358 558.38555908]
[-39.01225662 555.03491211]
[-52.00604248 547.28790283]
[-61.96837234 535.90338135]
[-67.92324066 521.99670410]
[-69.28724670 506.93038940]
[-65.92676544 492.18038940]
[-58.17101288 479.19180298]
[-46.77982330 469.23709106]
[-32.86919403 463.29156494]
[-17.80194092 461.93765259]
[-14.47968102 447.31018066]
[-11.15742111 432.68273926]
[-7.83516169 418.05526733]
[-19.58938408 410.38861084]
[-28.03864288 399.14633179]
[-32.15170670 385.66665649]
[-31.41501045 371.56277466]
[-25.89668465 358.52993774]
[-16.24081612 348.14160156]
[-3.59234548 341.65951538]
[10.53868580 339.88046265]
[14.07835865 325.30407715]
[17.61803055 310.72772217]
[21.15770340 296.15133667]
[24.69737625 281.57495117]
[28.23704720 266.99859619]
[31.66810989 252.39627075]
[34.99036789 237.76879883]
[24.27110672 248.26153564]
[10.08871174 253.14617920]
[-4.81841564 251.47956848]
[-17.57194328 243.58352661]
[-25.70936584 230.98263550]
[-27.65947151 216.10993958]
[-23.04572868 201.83712769]
[-12.75897884 190.92004395]
[1.21457040 185.46659851]
[16.17684364 186.52980042]
[29.23886108 193.90432739]
[37.87855148 206.16629028]
[40.42766190 220.94937134]
[46.29662323 207.14518738]
[52.16558456 193.34101868]
[58.03454208 179.53683472]
[63.90350342 165.73266602]
[69.77246857 151.92848206]
[75.64142609 138.12431335]
[65.06546783 128.74685669]
[57.89945602 116.56343079]
[54.84286118 102.76325989]
[56.19403076 88.69336700]
[61.82108307 75.72711182]
[71.17475891 65.13011932]
[83.34205627 57.93676376]
[97.13533020 54.84917831]
[111.20822144 56.16874695]
[117.28205872 42.45347977]
[123.35588837 28.73821449]
[129.42971802 15.02294731]
[135.50355530 1.30768085]
[140.64552307 -12.78345966]
[144.83253479 -27.18724251]
[149.01954651 -41.59102249]
[153.20655823 -55.99480438]
[157.39355469 -70.39859009]
[153.81590271 -85.80997467]
[164.79827881 -95.87162018]
[168.98529053 -110.27540588]
[173.17230225 -124.67918396]
[177.35931396 -139.08296204]
[181.54632568 -153.48675537]
[185.73333740 -167.89053345]
[173.54026794 -178.66378784]
[167.28837585 -193.62231445]
[168.18247986 -209.75181580]
[175.99290466 -223.82594299]
[189.11160278 -233.05163574]
[204.88298035 -235.62341309]
[208.85508728 -250.08793640]
[212.82717896 -264.55245972]
[216.79927063 -279.01699829]
[202.87736511 -284.64700317]
[189.70323181 -291.85522461]
[177.45501709 -300.54415894]
[166.29835510 -310.59631348]
[156.38415527 -321.87573242]
[147.84648132 -334.22985840]
[140.80078125 -347.49163818]
[135.34237671 -361.48171997]
[131.54504395 -376.01089478]
[129.46017456 -390.88265991]
[129.11593628 -405.89593506]
[130.51701355 -420.84762573]
[133.64442444 -435.53558350]
[138.45588684 -449.76113892]
[144.88635254 -463.33190918]
[152.84881592 -476.06436157]
[162.23564148 -487.78631592]
[172.91984558 -498.33923340]
[184.75694275 -507.58041382]
[197.58686829 -515.38488770]
[211.23609924 -521.64709473]
[225.52005005 -526.28228760]
[240.24554443 -529.22790527]
[255.21342468 -530.44403076]
[270.22128296 -529.91418457]
[285.06616211 -527.64562988]
[299.54727173 -523.66900635]
[313.46878052 -518.03802490]
[326.64245605 -510.82891846]
[338.89010620 -502.13916016]
[350.04608154 -492.08627319]
[359.95953369 -480.80621338]
[368.49636841 -468.45150757]
[375.54116821 -455.18927002]
[380.99865723 -441.19882202]
[384.79501343 -426.66940308]
[386.87890625 -411.79748535]
[387.22213745 -396.78417969]
[385.82006836 -381.83258057]
[382.69168091 -367.14483643]
[377.87924194 -352.91961670]
[371.44790649 -339.34927368]
[363.48455811 -326.61734009]
[354.09695435 -314.89599609]
[343.41204834 -304.34381104]
[331.57434082 -295.10339355]
[318.74389648 -287.29980469]
[305.09423828 -281.03851318]
[290.80999756 -276.40423584]
[276.08428955 -273.45962524]
[261.11633301 -272.24450684]
[246.10852051 -272.77532959]
[231.26379395 -275.04489136]
[227.29170227 -260.58035278]
[223.31961060 -246.11584473]
[219.34750366 -231.65132141]
[230.24237061 -223.06236267]
[237.06227112 -210.93138123]
[238.74876404 -197.07369995]
[235.01445007 -183.57757568]
[226.39131165 -172.48944092]
[214.15518188 -165.50361633]
[200.13711548 -163.70352173]
[195.95010376 -149.29974365]
[191.76309204 -134.89596558]
[187.57608032 -120.49217224]
[183.38906860 -106.08839417]
[179.20205688 -91.68460846]
[183.07920837 -77.30347443]
[171.79734802 -66.21157837]
[167.61033630 -51.80779648]
[163.42332458 -37.40401459]
[159.23631287 -23.00023079]
[155.04930115 -8.59644890]
[167.27688599 -17.28473282]
[182.25527954 -18.08938408]
[195.34329224 -10.76107311]
[202.48542786 2.42944503]
[201.46864319 17.39494324]
[192.60798645 29.49819946]
[178.64903259 34.98888779]
[163.91712952 32.16566086]
[152.97708130 21.90332222]
[149.21882629 7.38151503]
[143.14498901 21.09678078]
[137.07115173 34.81204987]
[130.99732971 48.52731323]
[124.92348480 62.24258041]
[136.33787537 73.04889679]
[143.36599731 87.10842133]
[145.15951538 102.72405243]
[141.50193787 118.01087189]
[132.83476257 131.12364197]
[120.20417786 140.47955322]
[105.13479614 144.94926453]
[89.44560242 143.99327087]
[83.57664490 157.79743958]
[77.70767975 171.60162354]
[71.83872223 185.40579224]
[65.96975708 199.20997620]
[60.10079956 213.01414490]
[54.23183823 226.81832886]
[49.61782837 241.09106445]
[46.29557037 255.71852112]
[47.44655991 264.78015137]
[42.81342316 270.53826904]
[39.27375031 285.11462402]
[35.73407745 299.69100952]
[32.19440460 314.26739502]
[28.65473366 328.84375000]
[25.11506081 343.42013550]
[38.15867615 352.82080078]
[46.57592773 366.47436523]
[49.10310364 382.27465820]
[45.38243866 397.79757690]
[36.01241684 410.67303467]
[22.45174217 418.94692993]
[6.79229879 421.37753296]
[3.47003913 436.00497437]
[0.14777960 450.63244629]
[-3.17447996 465.25991821]
[9.82967663 472.98953247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[34 192]
[35 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 184]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[85 144]
[86 143]
[87 142]
[88 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
