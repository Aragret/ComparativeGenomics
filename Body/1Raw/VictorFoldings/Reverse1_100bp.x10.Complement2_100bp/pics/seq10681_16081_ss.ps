%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[46.33778000 628.95880127]
[39.23458862 642.23016357]
[29.60502434 653.79980469]
[17.84341240 663.19390869]
[4.43138409 670.02783203]
[-10.08184814 674.02166748]
[-25.10197639 675.01196289]
[-40.01393509 672.95806885]
[-54.20708847 667.94421387]
[-67.10023499 660.17553711]
[-78.16541290 649.97033691]
[-86.94950867 637.74639893]
[-93.09281158 624.00433350]
[-96.34376526 609.30682373]
[-96.56924438 594.25579834]
[-93.76001740 579.46752930]
[-88.03111267 565.54754639]
[-79.61712646 553.06597900]
[-68.86261749 542.53387451]
[-56.20796585 534.38250732]
[-42.17137146 528.94567871]
[-27.32762909 526.44604492]
[-12.28457832 526.98596191]
[-8.74490547 512.40960693]
[-5.20523310 497.83322144]
[-1.66556072 483.25683594]
[-6.18098879 469.06317139]
[4.59433699 457.47857666]
[8.13400936 442.90219116]
[11.67368126 428.32583618]
[15.21335411 413.74945068]
[18.75302696 399.17306519]
[22.29269981 384.59671021]
[25.83237076 370.02032471]
[24.32001686 366.83517456]
[24.27527809 362.75927734]
[26.10001564 358.49035645]
[29.86927032 354.87930298]
[34.05628204 340.47549438]
[38.24329376 326.07171631]
[42.43030548 311.66793823]
[46.61731339 297.26416016]
[50.80432510 282.86038208]
[54.99133682 268.45660400]
[59.17834854 254.05281067]
[62.82643509 239.50318909]
[65.93054962 224.82789612]
[69.03466034 210.15258789]
[72.13876343 195.47729492]
[75.24287415 180.80198669]
[78.34698486 166.12667847]
[73.41096497 152.07374573]
[83.83659363 140.17346191]
[86.94070435 125.49816132]
[75.96045685 115.58210754]
[71.39193726 101.51004791]
[74.45363617 87.03524017]
[84.32895660 76.01834106]
[98.38399506 71.39772797]
[101.48810577 56.72242355]
[104.59221649 42.04711914]
[107.69632721 27.37181854]
[106.41054535 18.32833481]
[110.95744324 12.50188160]
[114.27970123 -2.12557864]
[99.78640747 -8.50636005]
[86.80886841 -17.57338905]
[75.83856964 -28.98116302]
[67.29053497 -42.29557419]
[61.48767853 -57.01042175]
[58.64858627 -72.56668091]
[58.87927246 -88.37370300]
[62.16923904 -103.83167267]
[68.39192963 -118.35437012]
[77.30960846 -131.39137268]
[88.58242035 -142.44892883]
[101.78137970 -151.10870361]
[116.40464020 -157.04351807]
[131.89663696 -160.02976990]
[147.66915894 -159.95587158]
[150.55442810 -174.67576599]
[153.43969727 -189.39564514]
[151.66181946 -195.76359558]
[153.14422607 -201.24989319]
[156.63624573 -204.50793457]
[159.95849609 -219.13540649]
[163.28076172 -233.76286316]
[166.60302734 -248.39031982]
[165.45202637 -257.45193481]
[170.08515930 -263.21005249]
[173.62483215 -277.78643799]
[177.16450500 -292.36282349]
[163.21545410 -297.94891357]
[150.20339966 -305.46337891]
[138.39326477 -314.75323486]
[128.02549744 -325.62936401]
[119.31114197 -337.87030029]
[112.42764282 -351.22689819]
[107.51512146 -365.42715454]
[104.67359924 -380.18203735]
[103.96092224 -395.19113159]
[105.39160156 -410.14889526]
[108.93650055 -424.75073242]
[114.52346802 -438.69946289]
[122.03874207 -451.71102905]
[131.32933044 -463.52059937]
[142.20610046 -473.88769531]
[154.44758606 -482.60128784]
[167.80459595 -489.48397827]
[182.00517273 -494.39559937]
[196.76023865 -497.23620605]
[211.76936340 -497.94796753]
[226.72702026 -496.51635742]
[241.32865906 -492.97055054]
[255.27702332 -487.38272095]
[268.28814697 -479.86663818]
[280.09713745 -470.57531738]
[290.46356201 -459.69793701]
[299.17639160 -447.45590210]
[306.05825806 -434.09844971]
[310.96899414 -419.89758301]
[313.80871582 -405.14233398]
[314.51953125 -390.13317871]
[313.08700562 -375.17559814]
[309.54028320 -360.57418823]
[303.95159912 -346.62615967]
[296.43469238 -333.61550903]
[287.14263916 -321.80709839]
[276.26461792 -311.44134521]
[264.02203369 -302.72924805]
[250.66418457 -295.84823608]
[236.46299744 -290.93835449]
[221.70758057 -288.09957886]
[206.69836426 -287.38967896]
[191.74089050 -288.82315063]
[188.20121765 -274.24676514]
[184.66154480 -259.67037964]
[181.23048401 -245.06806946]
[177.90821838 -230.44059753]
[174.58596802 -215.81314087]
[171.26370239 -201.18568420]
[168.15959167 -186.51037598]
[165.27432251 -171.79048157]
[162.38905334 -157.07060242]
[175.61802673 -151.89791870]
[187.74252319 -144.49110413]
[198.38871765 -135.07705688]
[207.22811890 -123.94455719]
[213.98770142 -111.43546295]
[218.45832825 -97.93418121]
[220.50120544 -83.85585022]
[220.05223083 -69.63357544]
[217.12397766 -55.70512390]
[211.80532837 -42.49943161]
[204.25883484 -30.42339706]
[194.71568298 -19.84935379]
[183.46867371 -11.10357857]
[170.86315918 -4.45622730]
[157.28656006 -0.11299399]
[143.15631104 1.79125762]
[128.90716553 1.19668090]
[125.58489990 15.82414150]
[122.37162781 30.47592926]
[119.26751709 45.15122986]
[116.16340637 59.82653427]
[113.05929565 74.50183868]
[124.03954315 84.41789246]
[128.60806274 98.48995209]
[125.54636383 112.96475983]
[115.67104340 123.98165894]
[101.61600494 128.60227966]
[98.51189423 143.27757263]
[103.22589111 158.38018799]
[93.02229309 169.23078918]
[89.91818237 183.90609741]
[86.81407166 198.58140564]
[83.70996094 213.25669861]
[80.60585022 227.93200684]
[77.50173950 242.60729980]
[91.30580139 236.73806763]
[104.57318878 243.73638916]
[107.52368927 258.44332886]
[97.98229218 270.01751709]
[82.98256683 269.92687988]
[73.58213043 258.23983765]
[69.39511871 272.64361572]
[65.20810699 287.04739380]
[61.02109909 301.45117188]
[56.83408737 315.85494995]
[52.64707565 330.25872803]
[48.46006393 344.66250610]
[44.27305222 359.06631470]
[40.40874863 373.55999756]
[36.86907578 388.13638306]
[33.32940292 402.71273804]
[29.78973007 417.28912354]
[26.25005722 431.86550903]
[22.71038437 446.44186401]
[19.17071152 461.01824951]
[23.43295860 476.25451660]
[12.91081429 486.79650879]
[9.37114239 501.37289429]
[5.83147001 515.94927979]
[2.29179740 530.52563477]
[15.90709686 536.94500732]
[27.95126915 545.97399902]
[37.93111420 557.24291992]
[45.43796158 570.29022217]
[50.16441345 584.58166504]
[51.91692352 599.53204346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 204]
[24 203]
[25 202]
[26 201]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[38 192]
[39 191]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[53 172]
[54 171]
[59 166]
[60 165]
[61 164]
[62 163]
[64 162]
[65 161]
[80 144]
[81 143]
[82 142]
[85 141]
[86 140]
[87 139]
[88 138]
[90 137]
[91 136]
[92 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
