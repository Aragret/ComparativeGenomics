%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[21.26937485 644.51733398]
[9.75035572 654.13873291]
[-2.52385497 662.77606201]
[-15.46941185 670.37030029]
[-28.99788284 676.86950684]
[-43.01685333 682.22937012]
[-57.43055725 686.41320801]
[-72.14053345 689.39251709]
[-87.04629517 691.14691162]
[-102.04602051 691.66430664]
[-117.03724670 690.94134521]
[-131.91755676 688.98284912]
[-146.58532715 685.80224609]
[-160.94032288 681.42120361]
[-174.88452148 675.86968994]
[-188.32263184 669.18566895]
[-201.16288757 661.41473389]
[-213.31756592 652.60998535]
[-224.70362854 642.83154297]
[-235.24330139 632.14630127]
[-244.86457825 620.62719727]
[-253.50175476 608.35284424]
[-261.09582520 595.40722656]
[-267.59487915 581.87866211]
[-272.95455933 567.85961914]
[-277.13824463 553.44586182]
[-280.11737061 538.73583984]
[-281.87155151 523.83007812]
[-282.38882446 508.83035278]
[-281.66564941 493.83914185]
[-279.70697021 478.95883179]
[-276.52618408 464.29113770]
[-272.14498901 449.93615723]
[-266.59332275 435.99203491]
[-259.90911865 422.55401611]
[-252.13801575 409.71383667]
[-243.33312988 397.55926514]
[-233.55459595 386.17333984]
[-222.86920166 375.63378906]
[-211.34996033 366.01263428]
[-199.07554626 357.37561035]
[-186.12980652 349.78170776]
[-172.60118103 343.28280640]
[-158.58207703 337.92327881]
[-144.16827393 333.73977661]
[-129.45823669 330.76083374]
[-114.55242920 329.00683594]
[-99.55268860 328.48974609]
[-84.56147766 329.21307373]
[-69.68121338 331.17193604]
[-55.01352692 334.35290527]
[-40.65862656 338.73428345]
[-26.71457100 344.28610229]
[-20.03437614 330.85574341]
[-13.35418129 317.42535400]
[-20.39666557 304.32797241]
[-18.35228729 289.41876221]
[-7.79742956 278.44387817]
[7.37125015 275.75735474]
[6.11163712 260.91610718]
[19.18515015 252.00578308]
[25.86534500 238.57540894]
[32.54553986 225.14503479]
[39.22573471 211.71466064]
[29.19452286 197.72132874]
[27.62424469 180.48626709]
[35.03733063 164.74935913]
[49.47316742 154.88441467]
[67.00574493 153.68357849]
[73.28310394 140.06025696]
[79.56046295 126.43694305]
[85.83782959 112.81362915]
[80.91882324 99.18463135]
[86.98255157 86.02494049]
[100.53885651 80.90901184]
[106.81621552 67.28569031]
[107.56536102 58.18203354]
[113.28979492 53.50735092]
[119.76928711 39.97900772]
[126.24878693 26.45066071]
[132.72828674 12.92231560]
[139.20777893 -0.60603046]
[145.68727112 -14.13437557]
[152.16676331 -27.66272163]
[151.14979553 -43.45121002]
[163.62573242 -51.58755112]
[162.60874939 -67.37603760]
[175.08470154 -75.51238251]
[181.56419373 -89.04072571]
[168.72534180 -96.82086945]
[156.71090698 -105.82199097]
[145.63659668 -115.95739746]
[135.60908508 -127.12949371]
[126.72492218 -139.23066711]
[119.06967163 -152.14437866]
[112.71707153 -165.74626160]
[107.72830200 -179.90531921]
[104.15139771 -194.48519897]
[102.02081299 -209.34545898]
[101.35706329 -224.34300232]
[102.16654968 -239.33337402]
[104.44146729 -254.17222595]
[108.15991211 -268.71664429]
[113.28607178 -282.82653809]
[119.77057648 -296.36602783]
[127.55097198 -309.20474243]
[136.55233765 -321.21899414]
[146.68797302 -332.29309082]
[157.86026001 -342.32040405]
[169.96160889 -351.20431519]
[182.87548828 -358.85928345]
[196.47749329 -365.21163940]
[210.63665771 -370.20010376]
[225.21659851 -373.77673340]
[240.07688904 -375.90701294]
[255.07444763 -376.57046509]
[270.06481934 -375.76068115]
[284.90362549 -373.48547363]
[299.44796753 -369.76672363]
[313.55776978 -364.64028931]
[327.09713745 -358.15551758]
[339.93566895 -350.37484741]
[351.94973755 -341.37326050]
[363.02365112 -331.23739624]
[373.05072021 -320.06491089]
[381.93438721 -307.96337891]
[389.58911133 -295.04934692]
[395.94119263 -281.44720459]
[400.92938232 -267.28796387]
[404.50570679 -252.70794678]
[406.63571167 -237.84759521]
[407.29885864 -222.85003662]
[406.48876953 -207.85968018]
[404.21325684 -193.02091980]
[400.49423218 -178.47665405]
[395.36749268 -164.36695862]
[388.88244629 -150.82772827]
[381.10153198 -137.98933411]
[372.09970093 -125.97544098]
[361.96362305 -114.90174866]
[350.79092407 -104.87490082]
[338.68920898 -95.99146271]
[325.77505493 -88.33699036]
[312.17279053 -81.98520660]
[298.01342773 -76.99728394]
[283.43334961 -73.42124939]
[268.57293701 -71.29155731]
[253.57536316 -70.62871552]
[238.58503723 -71.43909454]
[223.74632263 -73.71490479]
[209.20213318 -77.43422699]
[195.09254456 -82.56122589]
[188.61303711 -69.03288269]
[190.09347534 -54.21203232]
[177.15408325 -45.10805511]
[178.63452148 -30.28720474]
[165.69511414 -21.18322563]
[159.21562195 -7.65488005]
[152.73612976 5.87346554]
[146.25662231 19.40181160]
[139.77713013 32.93015671]
[133.29763794 46.45850372]
[126.81813812 59.98684692]
[120.43953705 73.56305695]
[114.16217041 87.18637085]
[119.08117676 100.81536865]
[113.01744843 113.97505951]
[99.46114349 119.09098816]
[93.18378448 132.71430969]
[86.90641785 146.33761597]
[80.62905884 159.96093750]
[89.05255890 169.74992371]
[93.13330841 181.95330811]
[92.29859924 194.74697876]
[86.70768738 206.23266602]
[77.22291565 214.71954346]
[65.27687836 218.97314453]
[52.65610886 218.39485168]
[45.97591400 231.82522583]
[39.29571915 245.25559998]
[32.61552429 258.68597412]
[33.39732742 274.48785400]
[20.80162621 282.43756104]
[27.81093407 296.15527344]
[25.42667007 311.19418335]
[14.77017879 321.81976318]
[0.07619437 324.10556030]
[-6.60400009 337.53591919]
[-13.28419495 350.96630859]
[-0.44375706 358.73693848]
[11.71112537 367.54138184]
[23.09741974 377.31951904]
[33.63734818 388.00451660]
[43.25890732 399.52343750]
[51.89636993 411.79754639]
[59.49074173 424.74301147]
[65.99013519 438.27139282]
[71.35015106 452.29031372]
[75.53418732 466.70394897]
[78.51364136 481.41390991]
[80.26818085 496.31964111]
[80.78581238 511.31936646]
[80.06299591 526.31060791]
[78.10467529 541.19091797]
[74.92422485 555.85870361]
[70.54337311 570.21380615]
[64.99204254 584.15802002]
[58.30815506 597.59625244]
[50.53737259 610.43658447]
[41.73277664 622.59136963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 189]
[54 188]
[55 187]
[59 183]
[61 181]
[62 180]
[63 179]
[64 178]
[69 171]
[70 170]
[71 169]
[72 168]
[75 165]
[76 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[86 155]
[88 153]
[89 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
