%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[54.14072037 567.89672852]
[58.64191437 582.37139893]
[57.91793442 597.51245117]
[52.05620575 611.49157715]
[41.76456451 622.62072754]
[28.28577042 629.55596924]
[13.24745560 631.45989990]
[-1.53442931 628.10260010]
[-14.27490044 619.88940430]
[-23.43548393 607.81219482]
[-27.90999413 593.32928467]
[-27.15811348 578.18957520]
[-21.27063370 564.22125244]
[-10.95849895 553.11108398]
[2.53305316 546.20068359]
[17.57485008 544.32446289]
[20.89710999 529.69702148]
[24.21936989 515.06958008]
[27.54162979 500.44210815]
[30.53640366 485.74411011]
[33.20219803 470.98287964]
[26.56485748 460.86990356]
[28.66497040 448.55029297]
[38.91435242 440.72003174]
[41.79962540 426.00012207]
[44.68489838 411.28024292]
[47.57017136 396.56036377]
[50.45544052 381.84045410]
[53.01127625 367.05981445]
[55.23639297 352.22576904]
[46.20422745 340.43780518]
[48.24949646 325.36230469]
[60.67501450 315.96844482]
[62.90013123 301.13439941]
[65.12525177 286.30035400]
[67.35036469 271.46630859]
[69.57548523 256.63226318]
[71.80059814 241.79823303]
[74.02571869 226.96418762]
[76.25083160 212.13014221]
[70.48711395 198.39591980]
[80.18594360 185.89619446]
[82.41106415 171.06214905]
[84.63617706 156.22810364]
[77.34253693 140.26660156]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[94.64424133 71.91054535]
[93.52859497 56.95209122]
[92.41294098 41.99363708]
[75.11649323 37.58219528]
[60.38622665 27.54234505]
[49.98430252 13.09480476]
[45.14834976 -4.01362610]
[46.44425201 -21.72125244]
[53.69996262 -37.89993286]
[66.02816772 -50.61083984]
[81.93473816 -58.33681488]
[79.93072510 -73.20234680]
[77.92671204 -88.06787109]
[75.92269897 -102.93340302]
[73.47697449 -117.73267365]
[70.59169769 -132.45256042]
[60.34440231 -144.50674438]
[65.48910522 -158.48463440]
[62.60383224 -173.20452881]
[59.71855927 -187.92442322]
[55.66822052 -193.14996338]
[54.96974564 -198.78991699]
[56.97338486 -203.12518311]
[54.52765656 -217.92445374]
[52.08193207 -232.72372437]
[49.63620377 -247.52299500]
[47.19047546 -262.32226562]
[44.74474716 -277.12152100]
[40.85178757 -282.46536255]
[40.32154846 -288.12359619]
[42.45337296 -292.39727783]
[40.44935989 -307.26281738]
[38.44534683 -322.12835693]
[36.44133377 -336.99386597]
[34.43732071 -351.85940552]
[32.43330765 -366.72494507]
[30.42929268 -381.59045410]
[20.91763878 -394.23321533]
[26.88520241 -407.88009644]
[24.88118744 -422.74563599]
[9.90229130 -424.50161743]
[-4.16902351 -429.92828369]
[-16.44822311 -438.68453979]
[-26.16342545 -450.21997070]
[-32.70392609 -463.80938721]
[-35.65858078 -478.59860229]
[-34.84165955 -493.65792847]
[-30.30451775 -508.04074097]
[-22.33235931 -520.84289551]
[-11.42632198 -531.25970459]
[1.72803152 -538.63623047]
[16.30380630 -542.50891113]
[31.38475800 -542.63427734]
[46.02288437 -539.00439453]
[59.29802322 -531.84747314]
[70.37568665 -521.61340332]
[78.55951691 -508.94549561]
[83.33508301 -494.64007568]
[84.40218353 -479.59640503]
[81.69374084 -464.76013184]
[75.38000488 -451.06387329]
[65.85786438 -439.36859131]
[53.72589493 -430.40945435]
[39.74671555 -424.74963379]
[41.75072861 -409.88409424]
[51.11904144 -398.30465698]
[45.29481888 -383.59448242]
[47.29883575 -368.72894287]
[49.30284882 -353.86343384]
[51.30686188 -338.99789429]
[53.31087494 -324.13235474]
[55.31488800 -309.26684570]
[57.31890106 -294.40130615]
[59.54401779 -279.56726074]
[61.98974609 -264.76800537]
[64.43547821 -249.96871948]
[66.88120270 -235.16944885]
[69.32692719 -220.37017822]
[71.77265930 -205.57090759]
[74.43845367 -190.80969238]
[77.32372284 -176.08979797]
[80.20899963 -161.36990356]
[90.24992371 -150.36859131]
[85.31159210 -135.33782959]
[88.19686127 -120.61794281]
[90.44538116 -118.94393158]
[92.16628265 -116.27838898]
[92.97858429 -112.81781769]
[92.57940674 -108.89287567]
[90.78823090 -104.93741608]
[92.79224396 -90.07188416]
[94.79625702 -75.20635986]
[96.80027008 -60.34082794]
[109.01660156 -58.72930145]
[120.49980164 -54.22990417]
[130.57716370 -47.10052109]
[138.65696716 -37.75327301]
[144.26324463 -26.73069191]
[147.06378174 -14.67423344]
[146.88983154 -2.28695130]
[143.74623108 9.70750141]
[137.81150818 20.60714722]
[129.42762756 29.77276802]
[119.08044434 36.66539383]
[107.37139893 40.87799072]
[108.48704529 55.83644485]
[109.60269165 70.79489899]
[116.23992157 57.34323502]
[127.46884155 47.39781952]
[141.62371826 42.43399048]
[156.60475159 43.18810654]
[170.18959045 49.54829788]
[180.36302185 60.57106400]
[185.61585999 74.62124634]
[185.16888428 89.61458588]
[179.08839417 103.32691193]
[168.27641296 113.72406769]
[154.33682251 119.26371765]
[139.33746338 119.12406921]
[125.50343323 113.32585144]
[114.88690186 102.72919464]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[110.98352051 138.67312622]
[109.00833893 151.01339722]
[99.47022247 158.45321655]
[97.24510956 173.28726196]
[95.01998901 188.12130737]
[100.62454987 202.91656494]
[91.08487701 214.35525513]
[88.85976410 229.18930054]
[86.63464355 244.02334595]
[84.40952301 258.85739136]
[82.18441010 273.69143677]
[79.95928955 288.52548218]
[77.73417664 303.35952759]
[75.50905609 318.19357300]
[84.63157654 330.81964111]
[82.16367340 345.83175659]
[70.07043457 354.45086670]
[67.84532166 369.28491211]
[69.75743866 374.14196777]
[69.62820435 378.78271484]
[67.88183594 382.46582031]
[65.17533112 384.72573853]
[62.29006195 399.44561768]
[59.40478897 414.16552734]
[56.51951599 428.88540649]
[53.63424301 443.60528564]
[60.00460434 460.88244629]
[47.96341705 473.64868164]
[45.29761887 488.40991211]
[47.06428146 493.32171631]
[46.79692841 497.95657349]
[44.94168091 501.58605957]
[42.16909027 503.76437378]
[38.84682846 518.39184570]
[35.52457047 533.01928711]
[32.20231247 547.64672852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[20 203]
[21 202]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 192]
[30 191]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[42 179]
[43 178]
[44 177]
[46 174]
[47 173]
[49 171]
[50 156]
[51 155]
[52 154]
[60 142]
[61 141]
[62 140]
[63 139]
[64 134]
[65 133]
[67 131]
[68 130]
[69 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
