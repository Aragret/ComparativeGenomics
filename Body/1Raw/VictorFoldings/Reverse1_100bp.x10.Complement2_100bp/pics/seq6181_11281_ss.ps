%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[96.21266937 567.56976318]
[92.44367981 582.15545654]
[85.52310181 595.53649902]
[75.79806519 607.04180908]
[63.75638199 616.09417725]
[50.00204849 622.23956299]
[35.22498322 625.16979980]
[20.16639519 624.73779297]
[5.58161449 620.96527100]
[-7.79778910 614.04144287]
[-19.30071068 604.31359863]
[-28.35017014 592.26971436]
[-34.49224854 578.51391602]
[-37.41886520 563.73614502]
[-36.98321533 548.67767334]
[-33.20715714 534.09381104]
[-26.28009605 520.71606445]
[-16.54948616 509.21551514]
[-4.50341511 500.16897583]
[9.25389385 494.03021240]
[24.03237915 491.10717773]
[39.09075546 491.54647827]
[42.84705734 477.02441406]
[46.60335922 462.50234985]
[50.35965729 447.98031616]
[54.11595917 433.45825195]
[57.87226105 418.93618774]
[61.62855911 404.41412354]
[65.38486481 389.89205933]
[69.14115906 375.36999512]
[72.57221985 360.76766968]
[75.67633057 346.09237671]
[78.78044128 331.41708374]
[68.68250275 320.50057983]
[66.92817688 305.55447388]
[74.39839935 292.28613281]
[88.41100311 285.88665771]
[91.51511383 271.21136475]
[94.61922455 256.53607178]
[97.72333527 241.86076355]
[100.60860443 227.14086914]
[103.27440643 212.37965393]
[105.94020081 197.61843872]
[106.05186462 182.61885071]
[103.60614014 167.81958008]
[101.16040802 153.02030945]
[98.71468353 138.22103882]
[96.26895905 123.42176819]
[93.82322693 108.62249756]
[90.82845306 93.92449188]
[87.28878021 79.34812164]
[73.36507416 76.92387390]
[61.45308685 69.39865875]
[53.33365631 57.93653488]
[50.20569611 44.28712082]
[52.50928497 30.51857567]
[59.86405945 18.70421219]
[71.13157654 10.61030579]
[67.80931854 -4.01715374]
[64.48705292 -18.64461327]
[51.39727020 -27.08826828]
[48.23640060 -41.96992111]
[56.36680222 -54.39699173]
[53.04454422 -69.02445221]
[49.72228241 -83.65191650]
[46.40002441 -98.27937317]
[43.07776642 -112.90683746]
[39.75550461 -127.53429413]
[36.43324661 -142.16175842]
[33.11098480 -156.78921509]
[22.50933266 -168.53295898]
[27.23558235 -182.65782166]
[23.91332436 -197.28527832]
[13.31167030 -209.02902222]
[18.03792000 -223.15390015]
[14.71566010 -237.78135681]
[11.39340115 -252.40881348]
[-3.57702041 -261.45898438]
[-7.29702139 -278.20642090]
[2.05856299 -292.18182373]
[-1.48110950 -306.75820923]
[-5.02078199 -321.33456421]
[-8.56045437 -335.91094971]
[-12.10012722 -350.48733521]
[-27.16337585 -350.27227783]
[-41.89670181 -353.41500854]
[-55.56109238 -359.75790405]
[-67.47113800 -368.98278809]
[-77.02944183 -380.62695312]
[-83.75656128 -394.10632324]
[-87.31507111 -408.74481201]
[-87.52646637 -423.80810547]
[-84.38015747 -438.54067993]
[-78.03395844 -452.20352173]
[-68.80619049 -464.11132812]
[-57.15970612 -473.66680908]
[-43.67869949 -480.39065552]
[-29.03937149 -483.94561768]
[-13.97601891 -484.15338135]
[0.75578380 -481.00350952]
[14.41709518 -474.65399170]
[26.32266998 -465.42333984]
[35.87533188 -453.77453613]
[42.59591675 -440.29190063]
[46.14733124 -425.65170288]
[46.35143280 -410.58831787]
[43.19798279 -395.85726929]
[36.84516144 -382.19750977]
[27.61161995 -370.29415894]
[15.96051121 -360.74432373]
[2.47624850 -354.02700806]
[6.01592112 -339.45062256]
[9.55559349 -324.87423706]
[13.09526539 -310.29788208]
[16.63493919 -295.72149658]
[28.46864128 -290.62316895]
[35.30727768 -279.47351074]
[34.46316147 -266.22592163]
[26.02086067 -255.73107910]
[29.34312057 -241.10360718]
[32.66537857 -226.47615051]
[43.02940369 -215.77865601]
[38.54078293 -200.60754395]
[41.86304474 -185.98008728]
[52.22706604 -175.28259277]
[47.73844528 -160.11148071]
[51.06070709 -145.48400879]
[54.38296509 -130.85655212]
[57.70522690 -116.22909546]
[61.02748489 -101.60163116]
[64.34974670 -86.97417450]
[67.67200470 -72.34671021]
[70.99426270 -57.71925354]
[83.69506836 -50.02346420]
[87.27268219 -35.23646545]
[79.11451721 -21.96687317]
[82.43677521 -7.33941364]
[85.75903320 7.28804684]
[101.39985657 10.56148529]
[114.09352112 20.36375999]
[121.26770782 34.77259827]
[121.44069672 50.92593765]
[114.52711487 65.59038544]
[101.86515808 75.80844879]
[105.40483093 90.38482666]
[115.31925964 79.12853241]
[130.30801392 79.70916748]
[139.32194519 91.69870758]
[135.71632385 106.25890350]
[122.14906311 112.65653229]
[108.62249756 106.17677307]
[111.06822968 120.97604370]
[113.51395416 135.77531433]
[115.95967865 150.57458496]
[118.40541077 165.37385559]
[120.85113525 180.17312622]
[125.25457764 165.83403015]
[133.04202271 153.01390076]
[143.73728943 142.49670410]
[156.68634033 134.92556763]
[171.09733582 130.76347351]
[186.08905029 130.26493835]
[200.74472046 133.46041870]
[214.16816711 140.15454102]
[225.53851318 149.93795776]
[234.16049194 162.21238708]
[239.50682068 176.22726440]
[241.25061035 191.12556458]
[239.28521729 205.99624634]
[233.73080444 219.92996216]
[224.92706299 232.07467651]
[213.41230774 241.68771362]
[199.89070129 248.18124390]
[185.18907166 251.15818787]
[170.20643616 250.43650818]
[155.85900879 246.06031799]
[143.02410889 238.29722595]
[132.48661804 227.62197876]
[124.89089203 214.68733215]
[120.70141602 200.28424072]
[118.03562164 215.04545593]
[115.36982727 229.80667114]
[117.24231720 236.14743042]
[115.84175873 241.65519714]
[112.39863586 244.96487427]
[109.29452515 259.64016724]
[106.19041443 274.31549072]
[103.08630371 288.99078369]
[113.30747223 300.51614380]
[114.76522064 315.67294312]
[107.10913086 328.62857056]
[93.45574188 334.52117920]
[90.35163879 349.19650269]
[87.24752808 363.87179565]
[88.86715698 368.83404541]
[88.46192932 373.45886230]
[86.49943542 377.03149414]
[83.66322327 379.12631226]
[79.90692139 393.64837646]
[76.15061951 408.17041016]
[72.39431763 422.69247437]
[68.63801575 437.21453857]
[64.88172150 451.73660278]
[61.12541580 466.25866699]
[57.36911774 480.78073120]
[53.61281586 495.30279541]
[66.99557495 502.22012329]
[78.50321198 511.94235229]
[87.55850220 523.98187256]
[93.70724487 537.73468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 194]
[32 193]
[33 192]
[37 188]
[38 187]
[39 186]
[40 185]
[41 182]
[42 181]
[43 180]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 145]
[51 144]
[58 138]
[59 137]
[60 136]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[72 124]
[73 123]
[75 121]
[76 120]
[77 119]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
