%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[98.42694092 679.05395508]
[85.29595947 671.71282959]
[73.73764038 662.08367920]
[64.14565277 650.49450684]
[56.84669495 637.34008789]
[52.08937073 623.06835938]
[50.03570938 608.16540527]
[50.75565720 593.13891602]
[54.22469711 578.50054932]
[60.32467270 564.74902344]
[68.84781647 552.35266113]
[79.50384521 541.73358154]
[91.92980194 533.25360107]
[105.70247650 527.20147705]
[120.35277557 523.78338623]
[119.68299103 508.79833984]
[119.01319885 493.81332397]
[118.34341431 478.82827759]
[117.67362976 463.84323120]
[117.00384521 448.85818481]
[113.56481171 442.31643677]
[116.43732452 433.64541626]
[115.99071503 418.65206909]
[115.54411316 403.65872192]
[107.43130493 391.16744995]
[114.75429535 377.14303589]
[114.30768585 362.14968872]
[99.40819550 356.75234985]
[87.69224548 346.02453613]
[80.97381592 331.58718872]
[80.30847931 315.63848877]
[85.82767487 300.61935425]
[96.71402740 288.83981323]
[111.32230377 282.12365723]
[110.65251923 267.13861084]
[109.98273468 252.15356445]
[109.31295013 237.16853333]
[108.64316559 222.18348694]
[107.86183929 207.20385742]
[106.96902466 192.23045349]
[106.07621002 177.25703430]
[105.18339539 162.28363037]
[96.70227051 150.03945923]
[103.60445404 135.80322266]
[100.39117432 121.15143585]
[94.93582153 107.17863464]
[92.25818634 105.72267914]
[90.05114746 103.26026917]
[88.68847656 99.96382141]
[88.47505188 96.14142609]
[89.59896851 92.20825958]
[84.98495483 77.93552399]
[80.37094879 63.66279221]
[75.75694275 49.39006042]
[71.14292908 35.11732864]
[59.53582764 24.36624718]
[62.98307419 9.87605095]
[57.36567307 2.67309093]
[58.40832901 -4.64364719]
[54.00733185 -18.98349380]
[42.56158447 -29.90619469]
[46.22418213 -44.34346008]
[34.77843475 -55.26616287]
[38.44103622 -69.70343018]
[34.04003525 -84.04327393]
[29.63903809 -98.38311768]
[25.88207626 -83.86123657]
[16.60723305 -72.07237244]
[3.37748218 -65.00316620]
[-11.57773209 -63.84489822]
[-25.73819160 -68.79276276]
[-36.71761322 -79.01295471]
[-42.66576767 -92.78319550]
[-42.58028793 -107.78295135]
[-36.47557831 -121.48450470]
[-25.38039398 -131.57890320]
[-11.16446209 -136.36505127]
[3.77657986 -135.03642273]
[16.92490387 -127.81689453]
[26.06550598 -115.92160034]
[24.50498390 -130.84020996]
[22.94445992 -145.75880432]
[21.38393784 -160.67741394]
[9.39026928 -170.61671448]
[8.02019787 -185.76852417]
[17.56971359 -197.14140320]
[16.00919151 -212.06001282]
[14.44866753 -226.97862244]
[4.93873787 -235.69206238]
[3.94610453 -248.14991760]
[11.45921326 -257.63043213]
[10.12097836 -272.57061768]
[-4.69722462 -275.50274658]
[-18.08846474 -282.49212646]
[-28.96717262 -292.97213745]
[-36.45146179 -306.09320068]
[-39.93461609 -320.79162598]
[-39.13426590 -335.87594604]
[-34.11529922 -350.12326050]
[-25.28457642 -362.37869263]
[-13.35796642 -371.64868164]
[0.69769484 -377.18176270]
[15.74297714 -378.52938843]
[30.55822754 -375.58236694]
[43.94244003 -368.57952881]
[54.81061554 -358.08862305]
[62.28171921 -344.96005249]
[65.75010681 -330.25811768]
[64.93460083 -315.17462158]
[59.90132523 -300.93234253]
[51.05829239 -288.68579102]
[39.12237549 -279.42779541]
[25.06116295 -273.90884399]
[26.39939880 -258.96865845]
[37.25362015 -245.17906189]
[29.36727142 -228.53913879]
[30.92779541 -213.62052917]
[32.48831940 -198.70193481]
[44.18463135 -189.55142212]
[45.97974396 -174.44406128]
[36.30254364 -162.23793030]
[37.86306381 -147.31933594]
[39.42358780 -132.40072632]
[40.98411179 -117.48212433]
[43.97888565 -102.78411865]
[48.37988281 -88.44427490]
[52.78087997 -74.10442352]
[63.91184235 -64.20740509]
[60.56402969 -48.74445724]
[71.69499207 -38.84743881]
[68.34717560 -23.38449287]
[72.74817657 -9.04464531]
[77.25580597 5.26204157]
[88.53288269 14.99224091]
[85.41566467 30.50331688]
[90.02967072 44.77605057]
[94.64368439 59.04878616]
[99.25769043 73.32151794]
[103.87170410 87.59425354]
[108.90861511 101.72328186]
[114.36397552 115.69607544]
[115.80113220 100.76508331]
[121.16175842 86.75566864]
[130.05886841 74.67919159]
[141.85017395 65.40745544]
[155.68444824 59.60979462]
[170.56298828 57.70475388]
[185.41169739 59.82985687]
[199.15861511 65.83168793]
[210.81137085 75.27696991]
[219.52871704 87.48384857]
[224.68136597 101.57108307]
[225.89730835 116.52172089]
[223.08880615 131.25645447]
[216.45857239 144.71156311]
[206.48527527 155.91572571]
[193.88887024 164.06008911]
[179.57872009 168.55671692]
[164.58789062 169.08099365]
[149.99856567 165.59506226]
[136.86396790 158.35057068]
[126.13230896 147.87052917]
[118.57785797 134.91040039]
[127.12284088 148.22558594]
[120.15679932 161.39082336]
[121.04961395 176.36422729]
[121.94242859 191.33763123]
[122.83524323 206.31103516]
[126.46989441 214.69119263]
[123.62820435 221.51370239]
[124.29798889 236.49874878]
[124.96777344 251.48377991]
[125.63755798 266.46881104]
[126.30734253 281.45385742]
[139.83229065 285.91781616]
[150.99772644 294.71182251]
[158.47506714 306.76345825]
[161.38345337 320.61437988]
[159.39349365 334.59658813]
[152.76440430 347.03341675]
[142.31045532 356.44052124]
[129.30104065 361.70306396]
[129.74763489 376.69641113]
[137.89239502 390.26010132]
[130.53746033 403.21209717]
[130.98406982 418.20544434]
[131.43067932 433.19879150]
[131.98889160 448.18841553]
[132.65867615 463.17346191]
[133.32846069 478.15847778]
[133.99824524 493.14352417]
[134.66802979 508.12857056]
[135.33781433 523.11358643]
[150.23463440 525.21105957]
[164.49232483 530.01031494]
[177.62528992 537.34790039]
[189.18620300 546.97387695]
[198.78131104 558.56042480]
[206.08381653 571.71295166]
[210.84498596 585.98339844]
[212.90266418 600.88574219]
[212.18676758 615.91247559]
[208.72167969 630.55175781]
[202.62541199 644.30493164]
[194.10560608 656.70361328]
[183.45243835 667.32550049]
[171.02876282 675.80883789]
[157.25772095 681.86468506]
[142.60835266 685.28674316]
[127.57959747 685.95849609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[22 187]
[23 186]
[24 185]
[26 183]
[27 182]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 168]
[40 167]
[41 166]
[42 165]
[44 163]
[45 141]
[46 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[57 133]
[59 132]
[60 131]
[62 129]
[64 127]
[65 126]
[66 125]
[80 124]
[81 123]
[82 122]
[83 121]
[86 118]
[87 117]
[88 116]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
