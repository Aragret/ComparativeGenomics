%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[43.51846313 927.79620361]
[28.62323380 929.61975098]
[13.63586521 930.37609863]
[-1.36727333 930.06127930]
[-16.30972672 928.67694092]
[-31.11535263 926.23016357]
[-45.70870209 922.73339844]
[-60.01541138 918.20446777]
[-73.96257782 912.66644287]
[-87.47912598 906.14752197]
[-100.49617767 898.68096924]
[-112.94740295 890.30480957]
[-124.76934814 881.06170654]
[-135.90177917 870.99877930]
[-146.28796387 860.16729736]
[-155.87496948 848.62249756]
[-164.61393738 836.42315674]
[-172.46035767 823.63153076]
[-179.37423706 810.31268311]
[-185.32032776 796.53454590]
[-190.26835632 782.36730957]
[-194.19308472 767.88317871]
[-197.07452393 753.15594482]
[-198.89799500 738.26074219]
[-199.65419006 723.27337646]
[-199.33927917 708.27020264]
[-197.95484924 693.32775879]
[-195.50794983 678.52215576]
[-192.01107788 663.92883301]
[-187.48202515 649.62219238]
[-181.94387817 635.67504883]
[-175.42486572 622.15856934]
[-167.95819092 609.14154053]
[-159.58192444 596.69036865]
[-150.33874512 584.86853027]
[-140.27574158 573.73614502]
[-129.44419861 563.35003662]
[-117.89932251 553.76312256]
[-105.69992828 545.02429199]
[-92.90819550 537.17791748]
[-79.58929443 530.26416016]
[-65.81111145 524.31817627]
[-51.64384460 519.37023926]
[-37.15969467 515.44561768]
[-22.43246651 512.56433105]
[-7.53721094 510.74096680]
[7.45017052 509.98489380]
[22.45330429 510.29989624]
[37.39573669 511.68444824]
[39.84146500 496.88519287]
[42.28719330 482.08590698]
[44.73291779 467.28665161]
[47.17864609 452.48736572]
[49.62437439 437.68811035]
[39.05339813 430.76910400]
[31.85793304 420.32754517]
[29.13601303 407.89456177]
[31.32651901 395.30960083]
[38.13884354 384.44833374]
[48.59090805 376.94305420]
[61.15058899 373.93737793]
[64.03585815 359.21749878]
[66.92113495 344.49758911]
[69.80640411 329.77770996]
[72.69168091 315.05780029]
[75.57695007 300.33792114]
[78.02267456 285.53866577]
[80.02669525 270.67312622]
[82.03070831 255.80760193]
[83.48012543 240.87779236]
[84.37294006 225.90438843]
[85.26575470 210.93096924]
[86.15856934 195.95756531]
[79.19252777 182.79232788]
[87.73751068 169.47715759]
[88.63032532 154.50375366]
[80.83827972 145.25115967]
[81.45955658 132.76925659]
[90.70584106 123.77653503]
[91.82148743 108.81807709]
[92.71430206 93.84467316]
[93.38408661 78.85963440]
[90.64099121 70.14681244]
[94.17704773 63.65696716]
[95.06986237 48.68356323]
[88.16767883 34.44732285]
[96.64880371 22.20314980]
[86.43621826 10.44130707]
[87.55496216 -4.73113680]
[98.83101654 -14.39478874]
[99.72383881 -29.36819458]
[92.82165527 -43.60443115]
[101.30278015 -55.84860611]
[102.19559479 -70.82201385]
[102.86537933 -85.80705261]
[103.31198120 -100.80039978]
[103.75859070 -115.79375458]
[104.20519257 -130.78709412]
[90.11251068 -136.37028503]
[78.78134155 -146.43907166]
[71.57998657 -159.77760315]
[69.37803650 -174.77517700]
[72.44139862 -189.62077332]
[80.40015411 -202.52169800]
[92.29323578 -211.92013550]
[106.68450165 -216.68113708]
[121.83613586 -216.22981262]
[135.91851807 -210.62066650]
[147.23110962 -200.53102112]
[154.40786743 -187.17924500]
[156.58216858 -172.17762756]
[153.49145508 -157.33770752]
[145.50894165 -144.45146179]
[133.59855652 -135.07498169]
[119.19854736 -130.34049988]
[118.75193787 -115.34714508]
[118.30533600 -100.35379791]
[117.85872650 -85.36044312]
[120.42359924 -81.33174133]
[120.48488617 -75.64902496]
[117.16899872 -69.92919922]
[116.27618408 -54.95579147]
[123.24222565 -41.79055023]
[114.69724274 -28.47537804]
[113.80442810 -13.50197315]
[123.85224152 -2.56684732]
[123.16010284 12.63103390]
[111.62220764 23.09596443]
[118.58824921 36.26120377]
[110.04326630 49.57637787]
[109.15045166 64.54978180]
[108.36912537 79.52941895]
[107.69934082 94.51445770]
[110.27082062 99.08627319]
[110.09775543 104.77339172]
[106.77994537 109.93373108]
[105.66429138 124.89218140]
[114.04257965 141.28991699]
[103.60373688 155.39656067]
[102.71092224 170.36997986]
[109.61309814 184.60621643]
[101.13198090 196.85038757]
[100.23915863 211.82379150]
[99.34634399 226.79719543]
[98.45352936 241.77059937]
[111.23421478 233.91859436]
[125.39295959 238.87138367]
[130.49246216 252.97793579]
[122.77355194 265.83944702]
[107.92633057 267.97488403]
[96.89623260 257.81161499]
[94.89221954 272.67712402]
[92.88820648 287.54266357]
[94.67938232 291.49813843]
[95.07855988 295.42306519]
[94.26625824 298.88363647]
[92.54535675 301.54919434]
[90.29684448 303.22320557]
[87.41156769 317.94308472]
[84.52629852 332.66296387]
[81.64102173 347.38287354]
[78.75575256 362.10275269]
[75.87047577 376.82266235]
[89.38231659 388.05935669]
[95.31169128 404.50784302]
[92.10998535 421.60620117]
[80.74790955 434.66055298]
[64.42364502 440.13381958]
[61.97791672 454.93310547]
[59.53218842 469.73236084]
[57.08646393 484.53164673]
[54.64073563 499.33090210]
[52.19500732 514.13018799]
[66.78841400 517.62670898]
[81.09519196 522.15545654]
[95.04244232 527.69329834]
[108.55908966 534.21197510]
[121.57625580 541.67834473]
[134.02760315 550.05432129]
[145.84970093 559.29724121]
[156.98228455 569.35998535]
[167.36862183 580.19128418]
[176.95581055 591.73596191]
[185.69497681 603.93511963]
[193.54159546 616.72668457]
[200.45567322 630.04541016]
[206.40197754 643.82348633]
[211.35021973 657.99066162]
[215.27516174 672.47467041]
[218.15682983 687.20184326]
[219.98052979 702.09704590]
[220.73696899 717.08441162]
[220.42227173 732.08758545]
[219.03807068 747.03002930]
[216.59141541 761.83569336]
[213.09475708 776.42907715]
[208.56591797 790.73577881]
[203.02798462 804.68304443]
[196.50918579 818.19958496]
[189.04270935 831.21673584]
[180.66664124 843.66802979]
[171.42362976 855.49005127]
[161.36079407 866.62255859]
[150.52941895 877.00878906]
[138.98468018 886.59588623]
[126.78543091 895.33496094]
[113.99381256 903.18145752]
[100.67501831 910.09545898]
[86.89692688 916.04168701]
[72.72973633 920.98980713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 153]
[68 152]
[69 151]
[70 145]
[71 144]
[72 143]
[73 142]
[75 140]
[76 139]
[79 137]
[80 136]
[81 133]
[82 132]
[84 131]
[85 130]
[87 128]
[90 125]
[91 124]
[93 122]
[94 121]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
