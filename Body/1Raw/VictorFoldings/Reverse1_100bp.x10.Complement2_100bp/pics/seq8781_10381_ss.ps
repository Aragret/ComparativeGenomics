%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[34.66302490 166.24285889]
[36.94403076 181.07572937]
[38.09670258 196.03865051]
[38.11444473 211.04588318]
[36.99714661 226.01147461]
[34.75121689 240.84971619]
[31.38951302 255.47558594]
[26.93129539 269.80532837]
[21.40209770 283.75686646]
[14.83359337 297.25027466]
[7.26340485 310.20828247]
[-1.26510501 322.55664062]
[-10.70308590 334.22460938]
[-20.99647713 345.14541626]
[-32.08631516 355.25643921]
[-43.90908432 364.49978638]
[-56.39706039 372.82250977]
[-69.47870636 380.17694092]
[-83.07910919 386.52096558]
[-97.12034607 391.81823730]
[-111.52199554 396.03842163]
[-126.20156860 399.15731812]
[-141.07498169 401.15707397]
[-156.05703735 402.02624512]
[-171.06190491 401.75982666]
[-186.00367737 400.35940552]
[-200.79672241 397.83291626]
[-215.35632324 394.19491577]
[-229.59910583 389.46618652]
[-243.44345093 383.67382812]
[-256.81008911 376.85101318]
[-269.62240601 369.03683472]
[-281.80709839 360.27606201]
[-293.29428101 350.61886597]
[-304.01821899 340.12054443]
[-313.91748047 328.84127808]
[-322.93533325 316.84561157]
[-331.02011108 304.20230103]
[-338.12557983 290.98373413]
[-344.21093750 277.26568604]
[-349.24142456 263.12664795]
[-353.18817139 248.64768982]
[-356.02856445 233.91169739]
[-357.74636841 219.00308228]
[-358.33172607 204.00726318]
[-357.78128052 189.01011658]
[-356.09817505 174.09754944]
[-353.29208374 159.35498047]
[-349.37905884 144.86686707]
[-344.38150024 130.71618652]
[-338.32806396 116.98398590]
[-331.25341797 103.74893188]
[-323.19805908 91.08683014]
[-314.20816040 79.07022095]
[-304.33520508 67.76792145]
[-293.63571167 57.24467468]
[-282.17102051 47.56075668]
[-270.00677490 38.77164459]
[-257.21267700 30.92767334]
[-243.86195374 24.07377434]
[-230.03112793 18.24921036]
[-215.79940796 13.48734283]
[-201.24830627 9.81544590]
[-186.46116638 7.25455284]
[-171.52270508 5.81933355]
[-156.51849365 5.51800776]
[-141.53445435 6.35230160]
[-126.65643311 8.31743717]
[-111.96963501 11.40215683]
[-97.55820465 15.58879280]
[-83.50466919 20.85336304]
[-69.88954926 27.16571236]
[-56.79081345 34.48968506]
[-44.28350067 42.78332520]
[-32.43925095 51.99913406]
[-21.32590485 62.08432007]
[-11.00712299 72.98110962]
[-1.54200959 84.62709808]
[7.01521969 96.95557404]
[14.61554909 109.89591217]
[21.21544266 123.37399292]
[35.14724350 117.81476593]
[49.07904053 112.25554657]
[63.01083755 106.69631958]
[76.94263458 101.13709259]
[90.87443542 95.57786560]
[96.59880829 89.90299988]
[105.05527496 90.04128265]
[111.95585632 84.05632019]
[119.31697083 84.71644592]
[133.40811157 79.57448578]
[147.49925232 74.43252563]
[161.59039307 69.29056549]
[157.27511597 54.92023849]
[153.80270386 40.32330704]
[151.18490601 25.54916763]
[149.43057251 10.64781189]
[148.54565430 -4.33033800]
[148.53312683 -19.33460045]
[149.39305115 -34.31420898]
[151.12249756 -49.21847153]
[153.71563721 -63.99695587]
[157.16369629 -78.59966278]
[161.45497131 -92.97718048]
[166.57498169 -107.08084869]
[172.50637817 -120.86296082]
[179.22911072 -134.27687073]
[186.72041321 -147.27719116]
[194.95495605 -159.81994629]
[203.90486145 -171.86267090]
[213.53984070 -183.36463928]
[223.82730103 -194.28691101]
[234.73243713 -204.59254456]
[246.21833801 -214.24665833]
[258.24615479 -223.21659851]
[270.77517700 -231.47201538]
[283.76300049 -238.98495483]
[297.16571045 -245.72999573]
[310.93792725 -251.68434143]
[325.03305054 -256.82781982]
[339.40341187 -261.14303589]
[354.00033569 -264.61538696]
[368.77450562 -267.23312378]
[383.67587280 -268.98739624]
[398.65402222 -269.87225342]
[413.65826416 -269.88473511]
[428.63787842 -269.02474976]
[443.54214478 -267.29522705]
[458.32061768 -264.70202637]
[472.92330933 -261.25390625]
[487.30081177 -256.96255493]
[501.40444946 -251.84249878]
[515.18652344 -245.91104126]
[528.60040283 -239.18826294]
[541.60070801 -231.69689941]
[554.14343262 -223.46231079]
[566.18609619 -214.51235962]
[577.68804932 -204.87733459]
[588.61029053 -194.58982849]
[598.91583252 -183.68464661]
[608.56994629 -172.19869995]
[617.53979492 -160.17085266]
[625.79516602 -147.64179993]
[633.30804443 -134.65393066]
[640.05303955 -121.25120544]
[646.00732422 -107.47896576]
[651.15075684 -93.38381958]
[655.46594238 -79.01345062]
[658.93823242 -64.41648865]
[661.55590820 -49.64232635]
[663.31011963 -34.74095917]
[664.19488525 -19.76280022]
[664.20727539 -4.75853825]
[663.34722900 10.22106075]
[661.61767578 25.12530899]
[659.02441406 39.90377426]
[655.57623291 54.50645447]
[651.28485107 68.88393402]
[646.16473389 82.98756409]
[640.23321533 96.76962280]
[633.51037598 110.18347931]
[626.01892090 123.18373871]
[617.78430176 135.72642517]
[608.83428955 147.76907349]
[599.19921875 159.27095032]
[588.91168213 170.19314575]
[578.00646973 180.49868774]
[566.52044678 190.15272522]
[554.49255371 199.12255859]
[541.96350098 207.37785339]
[528.97558594 214.89068604]
[515.57287598 221.63563538]
[501.80056763 227.58985901]
[487.70541382 232.73321533]
[473.33502197 237.04832458]
[458.73803711 240.52055359]
[443.96386719 243.13816833]
[429.06250000 244.89231873]
[414.08435059 245.77705383]
[399.08007812 245.78938293]
[384.10049438 244.92927551]
[369.19622803 243.19964600]
[354.41778564 240.60632324]
[339.81512451 237.15809631]
[325.43765259 232.86662292]
[311.33404541 227.74644470]
[297.55200195 221.81486511]
[284.13818359 215.09197998]
[271.13796997 207.60050964]
[258.59530640 199.36581421]
[246.55268860 190.41577148]
[235.05085754 180.78063965]
[224.12870789 170.49304199]
[213.82319641 159.58778381]
[204.16921997 148.10176086]
[195.19943237 136.07383728]
[186.94418335 123.54470825]
[179.43141174 110.55677795]
[172.68652344 97.15399933]
[166.73234558 83.38171387]
[152.64120483 88.52366638]
[138.55006409 93.66562653]
[124.45893097 98.80758667]
[110.40645599 104.05430603]
[96.43366241 109.50966644]
[82.50186157 115.06889343]
[68.57006073 120.62811279]
[54.63826752 126.18733978]
[40.70646667 131.74656677]
[26.77466965 137.30580139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 210]
[82 209]
[83 208]
[84 207]
[85 206]
[86 205]
[88 204]
[90 203]
[91 202]
[92 201]
[93 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
