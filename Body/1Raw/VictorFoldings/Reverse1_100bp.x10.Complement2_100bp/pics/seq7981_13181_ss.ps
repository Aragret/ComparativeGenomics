%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[26.31868172 628.98126221]
[14.61873627 638.38085938]
[2.20897722 646.82110596]
[-10.83213615 654.24871826]
[-24.42215347 660.61669922]
[-38.47515488 665.88482666]
[-52.90228653 670.01983643]
[-67.61233521 672.99548340]
[-82.51230621 674.79296875]
[-97.50798035 675.40100098]
[-112.50456238 674.81567383]
[-127.40723419 673.04071045]
[-142.12178040 670.08734131]
[-156.55516052 665.97424316]
[-170.61611938 660.72741699]
[-184.21575928 654.37994385]
[-197.26809692 646.97210693]
[-209.69062805 638.55065918]
[-221.40480042 629.16882324]
[-232.33653259 618.88598633]
[-242.41673279 607.76708984]
[-251.58168030 595.88250732]
[-259.77340698 583.30731201]
[-266.94012451 570.12097168]
[-273.03652954 556.40698242]
[-278.02404785 542.25195312]
[-281.87121582 527.74542236]
[-284.55364990 512.97912598]
[-286.05441284 498.04632568]
[-286.36398315 483.04150391]
[-285.48046875 468.05953979]
[-283.40942383 453.19512939]
[-280.16390991 438.54226685]
[-275.76449585 424.19354248]
[-270.23895264 410.23974609]
[-263.62225342 396.76907349]
[-255.95620728 383.86666870]
[-247.28929138 371.61413574]
[-237.67631531 360.08892822]
[-227.17802429 349.36389160]
[-215.86080933 339.50686646]
[-203.79623413 330.58016968]
[-191.06056213 322.64022827]
[-177.73431396 315.73724365]
[-163.90174866 309.91485596]
[-149.65031433 305.20989990]
[-135.07011414 301.65206909]
[-120.25334167 299.26391602]
[-105.29367065 298.06051636]
[-90.28567505 298.04946899]
[-75.32424164 299.23086548]
[-60.50396729 301.59719849]
[-45.91855240 305.13354492]
[-31.66021156 309.81753540]
[-17.81908989 315.61956787]
[-10.93967724 302.29013062]
[-4.06026411 288.96069336]
[-5.09877396 274.10235596]
[8.10595131 265.38766479]
[14.98536396 252.05822754]
[13.94685459 237.19987488]
[27.15157890 228.48518372]
[34.03099060 215.15574646]
[40.91040421 201.82632446]
[47.69039536 188.44604492]
[54.37059021 175.01567078]
[49.40232468 161.02096558]
[55.98566818 147.30549622]
[70.69829559 142.18920898]
[77.37848663 128.75881958]
[84.05868530 115.32845306]
[90.73887634 101.89807129]
[90.23886871 96.67658234]
[92.69995880 91.54663849]
[97.82314301 88.17173767]
[104.90024567 74.94620514]
[111.97734833 61.72068024]
[119.05445862 48.49515152]
[125.33181763 34.87183762]
[130.78717041 20.89903831]
[136.24253845 6.92623997]
[141.69789124 -7.04655743]
[147.15324402 -21.01935577]
[152.19015503 -35.14838409]
[156.80416870 -49.42111969]
[161.41818237 -63.69385147]
[166.03219604 -77.96658325]
[165.69422913 -87.09476471]
[170.82260132 -92.41656494]
[175.64860535 -106.61901855]
[180.47459412 -120.82147217]
[185.30059814 -135.02392578]
[185.09857178 -144.15612793]
[190.30561829 -149.40098572]
[190.23957825 -158.53517151]
[195.52413940 -163.70191956]
[200.77084351 -177.75439453]
[206.01756287 -191.80686951]
[211.26428223 -205.85934448]
[216.51100159 -219.91180420]
[203.54786682 -227.53599548]
[192.10572815 -237.29553223]
[182.53228760 -248.89381409]
[175.11846924 -261.97842407]
[170.08958435 -276.15167236]
[167.59843445 -290.98291016]
[167.72074890 -306.02139282]
[170.45280457 -320.81015015]
[175.71156311 -334.89971924]
[183.33721924 -347.86199951]
[193.09803772 -359.30303955]
[204.69741821 -368.87515259]
[217.78285217 -376.28750610]
[231.95668030 -381.31478882]
[246.78819275 -383.80422974]
[261.82666016 -383.68020630]
[276.61511230 -380.94650269]
[290.70410156 -375.68612671]
[303.66549683 -368.05902100]
[315.10543823 -358.29687500]
[324.67623901 -346.69641113]
[332.08709717 -333.61013794]
[337.11276245 -319.43576050]
[339.60055542 -304.60394287]
[339.47482300 -289.56549072]
[336.73941040 -274.77737427]
[331.47747803 -260.68896484]
[323.84887695 -247.72842407]
[314.08544922 -236.28959656]
[302.48388672 -226.72010803]
[289.39678955 -219.31074524]
[275.22180176 -214.28668213]
[260.38973999 -211.80058289]
[245.35128784 -211.92800903]
[230.56347656 -214.66510010]
[225.31675720 -200.61262512]
[220.07003784 -186.56015015]
[214.82331848 -172.50767517]
[209.57659912 -158.45521545]
[204.43464661 -144.36405945]
[199.50305176 -130.19793701]
[194.67704773 -115.99547577]
[189.85105896 -101.79302216]
[185.02505493 -87.59056854]
[180.30491638 -73.35257721]
[175.69091797 -59.07984161]
[171.07690430 -44.80710983]
[166.46289062 -30.53437614]
[167.61770630 -27.98005486]
[167.83029175 -24.81439209]
[166.86274719 -21.39397430]
[164.61050415 -18.15485382]
[161.12603760 -15.56399822]
[155.67068481 -1.59120059]
[150.21533203 12.38159752]
[144.75997925 26.35439491]
[139.30461121 40.32719421]
[152.60978699 33.40098572]
[167.46163940 35.50402832]
[178.32077026 45.85192871]
[181.13702393 60.58518219]
[174.85998535 74.20864868]
[161.83084106 81.64110565]
[146.90914917 80.11044312]
[135.66030884 70.18754578]
[132.27998352 55.57225800]
[125.20288086 68.79778290]
[118.12577057 82.02331543]
[111.04866791 95.24884033]
[104.16925812 108.57826996]
[97.48905945 122.00864410]
[90.80886841 135.43902588]
[84.12866974 148.86940002]
[88.92510223 163.68937683]
[81.95911407 177.21453857]
[67.80096436 181.69586182]
[61.12077332 195.12625122]
[60.10091019 204.20356750]
[54.23983383 208.70573425]
[47.36042023 222.03517151]
[40.48101044 235.36459351]
[41.02745819 251.17636108]
[28.31479263 258.93765259]
[21.43538094 272.26705933]
[21.98182869 288.07882690]
[9.26916504 295.84011841]
[2.38975239 309.16955566]
[-4.48966026 322.49896240]
[8.25802135 330.41961670]
[20.33610344 339.32803345]
[31.66822433 349.16790771]
[42.18273926 359.87704468]
[51.81316376 371.38769531]
[60.49861908 383.62707520]
[68.18418884 396.51785278]
[74.82128143 409.97851562]
[80.36793518 423.92391968]
[84.78907776 438.26596069]
[88.05677032 452.91387939]
[90.15033722 467.77514648]
[91.05654144 482.75576782]
[90.76966858 497.76101685]
[89.29152679 512.69604492]
[86.63145447 527.46643066]
[82.80627441 541.97875977]
[77.84017181 556.14135742]
[71.76454163 569.86456299]
[64.61779785 583.06170654]
[56.44512558 595.64929199]
[47.29819489 607.54772949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 188]
[56 187]
[57 186]
[59 184]
[60 183]
[62 181]
[63 180]
[64 179]
[65 177]
[66 176]
[69 173]
[70 172]
[71 171]
[72 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 148]
[85 147]
[86 146]
[87 145]
[89 144]
[90 143]
[91 142]
[92 141]
[94 140]
[96 139]
[97 138]
[98 137]
[99 136]
[100 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
