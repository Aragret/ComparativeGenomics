%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[65.34989166 711.25024414]
[52.63758469 719.24487305]
[39.08310318 725.70959473]
[24.86975288 730.55694580]
[10.18975258 733.72149658]
[-4.75836802 735.16027832]
[-19.77245140 734.85400391]
[-34.64944839 732.80670166]
[-49.18816757 729.04608154]
[-63.19198608 723.62304688]
[-76.47151947 716.61083984]
[-88.84718323 708.10443115]
[-100.15159607 698.21875000]
[-110.23189545 687.08752441]
[-118.95174408 674.86126709]
[-126.19322205 661.70538330]
[-131.85839844 647.79772949]
[-135.87065125 633.32647705]
[-138.17572021 618.48718262]
[-138.74244690 603.48071289]
[-137.56314087 588.50988770]
[-134.65377808 573.77716064]
[-130.05368042 559.48187256]
[-123.82507324 545.81732178]
[-116.05218506 532.96820068]
[-106.84014130 521.10839844]
[-96.31352234 510.39828491]
[-84.61468506 500.98266602]
[-71.90184784 492.98892212]
[-58.34693909 486.52511597]
[-44.13326263 481.67864990]
[-29.45305061 478.51513672]
[-14.50483513 477.07730103]
[0.50922757 477.38461304]
[15.38608932 479.43292236]
[19.14238930 464.91085815]
[22.89869118 450.38879395]
[26.65499115 435.86672974]
[30.41129112 421.34466553]
[34.16759109 406.82260132]
[37.92389297 392.30056763]
[41.46356583 377.72418213]
[44.78582382 363.09671021]
[48.10808563 348.46926880]
[51.43034363 333.84179688]
[54.75260544 319.21435547]
[58.07486343 304.58688354]
[61.39712143 289.95941162]
[64.71938324 275.33197021]
[68.04164124 260.70449829]
[70.81725311 245.96353149]
[63.88175201 236.05265808]
[65.61413574 223.67596436]
[75.62583160 215.54402161]
[78.07156372 200.74475098]
[80.40705109 185.92767334]
[82.63216400 171.09362793]
[75.33852386 155.13212585]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[100.20967865 42.30731201]
[101.54791260 27.36712646]
[102.21769714 12.38208675]
[102.88748169 -2.60295177]
[103.55726624 -17.58798981]
[89.42117310 -22.93854713]
[77.64695740 -32.38366318]
[69.37981415 -44.98853302]
[65.41885376 -59.51181793]
[66.13984680 -74.52790070]
[71.45960999 -88.56681061]
[80.84540558 -100.25813293]
[93.36822510 -108.46478271]
[107.79478455 -112.39357758]
[108.46456909 -127.37861633]
[109.13435364 -142.36364746]
[109.69256592 -157.35325623]
[110.13916779 -172.34661865]
[107.26665497 -181.01762390]
[110.70569611 -187.55940247]
[111.37548065 -202.54443359]
[112.04526520 -217.52947998]
[112.71504974 -232.51451111]
[113.38483429 -247.49955750]
[102.99826813 -259.10803223]
[103.89099121 -274.29547119]
[115.02191925 -284.12591553]
[107.90854645 -298.25781250]
[116.20642853 -310.62692261]
[116.87621307 -325.61193848]
[117.54600525 -340.59698486]
[103.20196533 -345.30349731]
[90.66028595 -353.70639038]
[80.85163879 -365.18215942]
[74.50388336 -378.87918091]
[72.08808136 -393.78106689]
[73.78349304 -408.78201294]
[79.46430206 -422.76882935]
[88.70896149 -434.70361328]
[100.83145905 -443.70071411]
[114.93222046 -449.09246826]
[129.96487427 -450.47882080]
[144.81388855 -447.75686646]
[158.37739563 -441.12857056]
[169.64886475 -431.08584595]
[177.79188538 -418.37390137]
[182.20220947 -403.93603516]
[182.55253601 -388.84365845]
[178.81689453 -374.21670532]
[171.27246094 -361.14062500]
[160.47911072 -350.58572388]
[147.23777771 -343.33523560]
[132.53103638 -339.92721558]
[131.86125183 -324.94216919]
[131.19146729 -309.95712280]
[138.35275269 -296.89706421]
[130.00695801 -283.45614624]
[140.21646118 -272.67181396]
[139.75067139 -257.46533203]
[128.36987305 -246.82977295]
[127.70008850 -231.84472656]
[127.03030396 -216.85969543]
[126.36051941 -201.87464905]
[125.69073486 -186.88961792]
[125.13252258 -171.90000916]
[124.68591309 -156.90666199]
[127.62886810 -150.12721252]
[124.11939240 -141.69386292]
[123.44960785 -126.70882416]
[122.77982330 -111.72378540]
[136.79833984 -106.52359009]
[148.53906250 -97.23243713]
[156.84437561 -84.75037384]
[160.89044189 -70.29283905]
[160.26889038 -55.27231216]
[155.02803040 -41.16032028]
[145.66929626 -29.34327316]
[133.09938049 -20.98626709]
[118.54230499 -16.91820526]
[117.87252045 -1.93316662]
[117.20273590 13.05187225]
[116.53295135 28.03691101]
[128.30459595 18.74023056]
[143.21762085 20.35327339]
[152.72914124 31.95201302]
[151.39054871 46.89216614]
[139.96864319 56.61533356]
[125.00640869 55.55164337]
[115.07520294 44.31132507]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[108.97950745 153.53865051]
[107.00432587 165.87893677]
[97.46620941 173.31875610]
[95.24109650 188.15280151]
[97.06286621 197.10371399]
[92.87083435 203.19047546]
[90.42510223 217.98974609]
[97.30704498 235.06956482]
[85.65129852 248.18865967]
[99.08154297 241.50819397]
[112.74195862 247.70440674]
[116.56259155 262.20968628]
[107.72702026 274.33123779]
[92.74849701 275.13357544]
[82.66910553 264.02676392]
[79.34683990 278.65420532]
[76.02458191 293.28167725]
[72.70232391 307.90914917]
[69.38006592 322.53659058]
[66.05780792 337.16406250]
[62.73554611 351.79153442]
[59.41328430 366.41897583]
[56.09102631 381.04644775]
[57.67852020 387.46450806]
[56.03342438 392.90423584]
[52.44595337 396.05685425]
[48.68965149 410.57891846]
[44.93334961 425.10098267]
[41.17705154 439.62304688]
[37.42074966 454.14508057]
[33.66444778 468.66714478]
[29.90814781 483.18920898]
[43.91233063 488.61132812]
[57.19233322 495.62261963]
[69.56855774 504.12823486]
[80.87363434 514.01318359]
[90.95467377 525.14373779]
[99.67533875 537.36938477]
[106.91769409 550.52478027]
[112.58379364 564.43200684]
[116.59701538 578.90307617]
[118.90308380 593.74212646]
[119.47080231 608.74859619]
[118.29250336 623.71954346]
[115.38411713 638.45239258]
[110.78497314 652.74804688]
[104.55728149 666.41302490]
[96.78525543 679.26263428]
[87.57400513 691.12304688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 170]
[54 168]
[55 167]
[56 165]
[57 164]
[59 161]
[60 160]
[61 159]
[63 157]
[64 156]
[65 155]
[66 154]
[67 147]
[68 146]
[69 145]
[70 144]
[79 135]
[80 134]
[81 133]
[82 131]
[83 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[92 122]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
