%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[116.09748840 492.86273193]
[101.30300903 489.25122070]
[89.26049042 479.92932129]
[82.05638123 466.51214600]
[80.93882751 451.32427979]
[86.10145569 436.99713135]
[96.64981842 426.01296997]
[110.75633240 420.27484131]
[111.20294189 405.28149414]
[111.64954376 390.28814697]
[112.09615326 375.29479980]
[112.54275513 360.30145264]
[112.98936462 345.30810547]
[112.76603699 330.30975342]
[111.87322235 315.33636475]
[97.53370667 311.13351440]
[85.47473145 302.26165771]
[77.16316223 289.77597046]
[73.61822510 275.17272949]
[75.28652191 260.20986938]
[81.98588562 246.69548035]
[92.92504120 236.26922607]
[106.79701996 230.20344543]
[105.90420532 215.23004150]
[105.01139069 200.25663757]
[104.11856842 185.28323364]
[103.22575378 170.30982971]
[101.55421448 155.40324402]
[99.10848999 140.60397339]
[96.66275787 125.80471039]
[84.39965820 120.82425690]
[76.17337036 110.45523071]
[74.11255646 97.38076782]
[78.75048065 84.98406982]
[88.88701630 76.47295380]
[86.66190338 61.63891220]
[84.43678284 46.80486679]
[82.21166992 31.97082329]
[79.98654938 17.13677979]
[75.02703857 31.29316330]
[65.98577118 43.26210403]
[53.72451782 51.90280151]
[39.41193771 56.39167786]
[24.41221237 56.30088043]
[10.15502167 51.63906479]
[-2.00072908 42.85056305]
[-10.89643192 30.77304459]
[-15.68420410 16.55765724]
[-15.90770721 1.55932283]
[-11.54563713 -12.79241371]
[-3.01375985 -25.12963676]
[8.87472153 -34.27643967]
[22.98667336 -39.36100769]
[37.97703171 -39.89871216]
[52.41701508 -35.83830643]
[64.93029022 -27.56679535]
[74.32418060 -15.87257004]
[79.70355225 -1.86914134]
[81.48601532 -16.76285934]
[83.26847839 -31.65657616]
[84.60671234 -46.59675980]
[85.49953461 -61.57016754]
[86.39234924 -76.54357147]
[77.77085114 -92.81475067]
[87.99851227 -107.07525635]
[88.66829681 -122.06029510]
[81.44493103 -108.91407776]
[71.51168823 -97.67438507]
[59.35323334 -88.88962555]
[45.56280899 -82.98842621]
[30.81327820 -80.25871277]
[15.82430172 -80.83368683]
[1.32722640 -84.68528748]
[-11.97060394 -91.62557983]
[-23.42035675 -101.31594849]
[-32.46337509 -113.28356171]
[-38.65843201 -126.94450378]
[-41.70325089 -141.63221741]
[-41.44927597 -156.63006592]
[-37.90889359 -171.20626831]
[-31.25484848 -184.64962769]
[-21.81180573 -196.30418396]
[-10.04051304 -205.60131836]
[3.48468161 -212.08738708]
[18.10385513 -215.44593811]
[33.10370636 -215.51306152]
[47.75235367 -212.28552246]
[61.33506393 -205.92077637]
[73.18910980 -196.72938538]
[82.73609161 -185.15980530]
[89.51020050 -171.77655029]
[93.18091583 -157.23263550]
[93.56969452 -142.24424744]
[99.84705353 -155.86756897]
[106.12441254 -169.49087524]
[112.40177155 -183.11419678]
[118.67913818 -196.73750305]
[124.95649719 -210.36082458]
[131.23385620 -223.98414612]
[137.51121521 -237.60745239]
[124.97959137 -245.90557861]
[113.86160278 -256.01947021]
[104.41787720 -267.71203613]
[96.86979675 -280.70922852]
[91.39428711 -294.70635986]
[88.11970520 -309.37527466]
[87.12281799 -324.37216187]
[88.42698669 -339.34545898]
[92.00164795 -353.94418335]
[97.76300049 -367.82608032]
[105.57598877 -380.66577148]
[115.25746918 -392.16226196]
[126.58049011 -402.04608154]
[139.27963257 -410.08547974]
[153.05718994 -416.09207153]
[167.59022522 -419.92501831]
[182.53804016 -421.49450684]
[197.55024719 -420.76367188]
[212.27493286 -417.74972534]
[226.36692810 -412.52325439]
[239.49591064 -405.20681763]
[251.35411072 -395.97189331]
[261.66354370 -385.03497314]
[270.18255615 -372.65246582]
[276.71145630 -359.11459351]
[281.09716797 -344.73870850]
[283.23690796 -329.86181641]
[283.08050537 -314.83264160]
[280.63165283 -300.00350952]
[275.94772339 -285.72201538]
[269.13851929 -272.32293701]
[260.36367798 -260.12036133]
[249.82887268 -249.40037537]
[237.78106689 -240.41423035]
[224.50267029 -233.37257385]
[210.30496216 -228.44050598]
[195.52073669 -225.73361206]
[180.49656677 -225.31535339]
[165.58465576 -227.19554138]
[151.13453674 -231.33009338]
[144.85717773 -217.70678711]
[138.57981873 -204.08346558]
[132.30244446 -190.46014404]
[126.02509308 -176.83683777]
[119.74773407 -163.21351624]
[113.47036743 -149.59019470]
[107.19300842 -135.96688843]
[103.65333557 -121.39051056]
[102.98355103 -106.40547180]
[110.91249084 -97.26991272]
[110.47711945 -84.78014374]
[101.36575317 -75.65075684]
[100.47293854 -60.67734909]
[99.58012390 -45.70394516]
[101.33779144 -43.52019882]
[102.33634949 -40.50864029]
[102.25617218 -36.95491409]
[100.88683319 -33.25498962]
[98.16220093 -29.87410927]
[96.37973022 -14.98039246]
[94.59726715 -0.08667538]
[94.82059479 14.91166210]
[97.04571533 29.74570656]
[99.27082825 44.57975006]
[101.49594879 59.41379166]
[103.72106171 74.24783325]
[118.28021240 81.48368073]
[125.70229340 95.94876862]
[123.08953857 111.99556732]
[111.46202850 123.35898590]
[113.90776062 138.15824890]
[116.35348511 152.95751953]
[125.01725769 140.71255493]
[139.49253845 136.77984619]
[153.16142273 142.95733643]
[159.77468872 156.42080688]
[156.30882263 171.01490784]
[144.34838867 180.06742859]
[129.36154175 179.43966675]
[118.19916534 169.41700745]
[119.09197998 184.39041138]
[119.98479462 199.36381531]
[120.87760925 214.33723450]
[121.77042389 229.31063843]
[136.26490784 233.68501282]
[148.36552429 242.73747253]
[156.62335205 255.36001587]
[160.05787659 270.01861572]
[158.27337646 284.93963623]
[151.50439453 298.32452393]
[140.58509827 308.56649780]
[126.84662628 314.44354248]
[127.73944092 329.41693115]
[138.48004150 318.94604492]
[153.47994995 318.99887085]
[164.14653015 329.54513550]
[164.36950684 344.54348755]
[154.02111816 355.40216064]
[139.02941895 355.90084839]
[127.98271179 345.75469971]
[127.53610992 360.74804688]
[127.08950043 375.74139404]
[126.64289856 390.73474121]
[126.19628906 405.72808838]
[125.74968719 420.72146606]
[139.48965454 427.28903198]
[149.36552429 438.88159180]
[153.66622925 453.49060059]
[151.64666748 468.58502197]
[143.65672302 481.54962158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 193]
[15 192]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 172]
[29 171]
[30 170]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[58 161]
[59 160]
[60 159]
[61 154]
[62 153]
[63 152]
[65 149]
[66 148]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[99 141]
[100 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
