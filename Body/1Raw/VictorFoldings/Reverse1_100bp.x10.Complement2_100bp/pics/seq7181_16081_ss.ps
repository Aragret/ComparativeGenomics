%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[99.12296295 502.09323120]
[100.50715637 517.15771484]
[97.16644287 531.91223145]
[89.42810059 544.91119385]
[78.05027008 554.88116455]
[64.14761353 560.84533691]
[49.08219147 562.21942139]
[34.32994843 558.86883545]
[21.33616447 551.12176514]
[11.37383366 539.73724365]
[5.41896677 525.83062744]
[4.05495977 510.76428223]
[7.41544485 496.01428223]
[15.17119503 483.02569580]
[26.56238174 473.07098389]
[40.47301483 467.12545776]
[55.54026794 465.77154541]
[58.86252594 451.14407349]
[62.18478394 436.51663208]
[65.50704193 421.88916016]
[59.42076874 405.42938232]
[72.04320526 392.02209473]
[75.14731598 377.34677124]
[78.25142670 362.67147827]
[81.35552979 347.99618530]
[84.13114166 333.25521851]
[86.57687378 318.45593262]
[89.02259827 303.65667725]
[91.46832275 288.85739136]
[92.80656433 273.91720581]
[93.02989197 258.91888428]
[85.48293304 246.07781982]
[93.42484283 232.39437866]
[93.64817047 217.39604187]
[93.87149811 202.39770508]
[94.09482574 187.39936829]
[94.31815338 172.40103149]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[88.50189972 53.59860992]
[87.80432129 49.00876236]
[88.86832428 45.07392502]
[91.13011169 42.36899567]
[91.35343933 27.37065887]
[91.57676697 12.37232113]
[91.80009460 -2.62601638]
[88.91881561 -8.57662296]
[89.40259552 -14.23904133]
[92.26000214 -18.06582451]
[92.92978668 -33.05086136]
[93.59957123 -48.03590012]
[91.81710815 -62.92961884]
[87.63009644 -77.33339691]
[83.44308472 -91.73718262]
[79.25607300 -106.14096832]
[75.06906128 -120.54474640]
[70.88204956 -134.94853210]
[66.69503784 -149.35231018]
[62.50802994 -163.75608826]
[58.21390533 -178.12831116]
[53.81290817 -192.46815491]
[36.49489594 -197.83883667]
[25.95996284 -212.40231323]
[26.27335739 -230.21670532]
[37.12085342 -244.15238953]
[32.29485321 -258.35485840]
[27.46885681 -272.55731201]
[13.57166767 -279.59335327]
[8.87973881 -294.06539917]
[15.67317295 -307.27090454]
[10.84717560 -321.47335815]
[6.02117777 -335.67581177]
[-8.86899757 -333.53167725]
[-23.89961433 -334.16033936]
[-38.55873108 -337.54040527]
[-52.34706879 -343.55676270]
[-64.79499817 -352.00445557]
[-75.47855377 -362.59579468]
[-84.03385162 -374.97003174]
[-90.16950226 -388.70568848]
[-93.67652130 -403.33496094]
[-94.43547821 -418.35955811]
[-92.42050934 -433.26776123]
[-87.70024109 -447.55178833]
[-80.43545532 -460.72515869]
[-70.87358856 -472.33917236]
[-59.34029770 -481.99826050]
[-46.22842026 -489.37344360]
[-31.98453331 -494.21350098]
[-17.09378052 -496.35363770]
[-2.06333470 -495.72091675]
[12.59487247 -492.33688354]
[26.38158798 -486.31683350]
[38.82724380 -477.86575317]
[49.50793839 -467.27154541]
[58.05989838 -454.89501953]
[64.19184875 -441.15771484]
[67.69492340 -426.52749634]
[68.44982910 -411.50268555]
[66.43083954 -396.59503174]
[61.70672607 -382.31225586]
[54.43839264 -369.14086914]
[44.87339020 -357.52941895]
[33.33750153 -347.87344360]
[20.22363281 -340.50180054]
[25.04963112 -326.29934692]
[29.87562943 -312.09689331]
[43.30814362 -305.76419067]
[48.40471268 -291.42962646]
[41.67131424 -277.38330078]
[46.49731064 -263.18084717]
[51.32330704 -248.97839355]
[63.32324219 -247.14077759]
[73.46316528 -240.33526611]
[79.78457642 -229.80242920]
[81.03523254 -217.50952148]
[76.91673279 -205.78321838]
[68.15275574 -196.86915588]
[72.55374908 -182.52929688]
[77.52140045 -177.05717468]
[76.91181183 -167.94309998]
[81.09882355 -153.53932190]
[85.28583527 -139.13554382]
[89.47284698 -124.73175812]
[93.65985870 -110.32797241]
[97.84687042 -95.92419434]
[102.03387451 -81.52040863]
[106.22088623 -67.11663055]
[108.93019867 -81.86991882]
[115.31758118 -95.44200134]
[124.95937347 -106.93268585]
[137.21607971 -115.57983398]
[151.27474976 -120.80992126]
[166.20292664 -122.27603912]
[181.01048279 -119.88095856]
[194.71527100 -113.78352356]
[206.40830994 -104.38816833]
[215.31405640 -92.31805420]
[220.84181213 -78.37373352]
[222.62492371 -63.48009491]
[220.54515076 -48.62497711]
[214.74043274 -34.79366684]
[205.59576416 -22.90354156]
[193.71768188 -13.74323654]
[179.89402771 -7.92031717]
[165.04165649 -5.82099962]
[150.14567566 -7.58452225]
[136.19410706 -13.09391785]
[124.11227417 -21.98376846]
[114.70153809 -33.66444016]
[108.58460999 -47.36611557]
[107.91482544 -32.38107681]
[107.24504089 -17.39603806]
[106.79843903 -2.40268850]
[106.57511139 12.59564877]
[106.35178375 27.59398651]
[106.12845612 42.59232330]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[111.94470978 161.39474487]
[112.64228821 165.98458862]
[111.57827759 169.91941833]
[109.31649017 172.62435913]
[109.09316254 187.62269592]
[108.86983490 202.62103271]
[108.64650726 217.61936951]
[108.42317963 232.61770630]
[115.95415497 246.53153992]
[108.02822876 259.14221191]
[107.80490112 274.14053345]
[116.83359528 262.16210938]
[130.60298157 256.21197510]
[145.51376343 257.84548950]
[157.66831970 266.63565063]
[163.88945007 280.28472900]
[162.55099487 295.22491455]
[154.00280762 307.55084229]
[140.47935486 314.04055786]
[125.51565552 312.99768066]
[113.02317810 304.69479370]
[106.26760101 291.30313110]
[103.82186890 306.10238647]
[101.37614441 320.90167236]
[98.93041229 335.70092773]
[100.77001190 340.58590698]
[100.57169342 345.22424316]
[98.77068329 348.88092041]
[96.03083801 351.10028076]
[92.92672729 365.77560425]
[89.82261658 380.45089722]
[86.71850586 395.12619019]
[93.08708954 406.34243774]
[90.19954681 418.50161743]
[80.13450623 425.21142578]
[76.81224823 439.83886719]
[73.48998260 454.46633911]
[70.16772461 469.09381104]
[83.17188263 476.82342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[22 203]
[23 202]
[24 201]
[25 200]
[26 196]
[27 195]
[28 194]
[29 193]
[30 182]
[31 181]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 171]
[39 170]
[40 169]
[41 168]
[43 166]
[44 165]
[45 164]
[49 163]
[50 162]
[51 161]
[52 160]
[55 159]
[56 158]
[57 157]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 125]
[67 124]
[71 118]
[72 117]
[73 116]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
