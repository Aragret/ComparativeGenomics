%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[-15.21362686 488.27200317]
[-11.56490135 502.86657715]
[-10.66028595 517.88311768]
[-12.53059101 532.81018066]
[-17.11211395 547.13928223]
[-24.24881172 560.38250732]
[-33.69760895 572.08868408]
[-45.13668442 581.85913086]
[-58.17642593 589.36114502]
[-72.37271118 594.33911133]
[-87.24200439 596.62353516]
[-102.27788544 596.13659668]
[-116.96821594 592.89489746]
[-130.81266785 587.00878906]
[-143.33969116 578.67883301]
[-154.12261963 568.18872070]
[-162.79418945 555.89569092]
[-169.05906677 542.21844482]
[-172.70385742 527.62292480]
[-173.60443115 512.60614014]
[-171.73010254 497.67959595]
[-167.14471436 483.35168457]
[-160.00444031 470.11041260]
[-150.55249023 458.40676880]
[-139.11077881 448.63937378]
[-126.06902313 441.14093018]
[-111.87139893 436.16677856]
[-97.00148010 433.88635254]
[-81.96573639 434.37734985]
[-67.27628326 437.62301636]
[-61.40731812 423.81884766]
[-55.53835678 410.01467896]
[-49.66939926 396.21047974]
[-43.80043793 382.40631104]
[-37.93147659 368.60214233]
[-32.06251526 354.79797363]
[-34.20326233 340.05801392]
[-21.68327904 330.38531494]
[-15.81431866 316.58114624]
[-30.09417534 321.17306519]
[-43.50094604 314.44561768]
[-48.35462570 300.25259399]
[-41.87480545 286.72442627]
[-27.77342033 281.61062622]
[-14.12838554 287.84063721]
[-8.75617409 301.84466553]
[-1.67906821 288.61914062]
[5.39803743 275.39361572]
[4.58086157 260.52142334]
[17.91387177 252.00430298]
[24.99097824 238.77877808]
[32.06808090 225.55325317]
[39.14518738 212.32772827]
[46.22229385 199.10220337]
[52.90248871 185.67182922]
[59.17984772 172.04850769]
[65.45720673 158.42518616]
[71.73457336 144.80187988]
[69.18624115 127.43889618]
[84.30995941 116.93391418]
[90.38378906 103.21865082]
[90.50880432 95.15906525]
[96.65151215 89.34545135]
[102.92887115 75.72213745]
[109.20623016 62.09881973]
[115.48358917 48.47550201]
[114.23165894 32.70390701]
[126.58508301 24.38271904]
[132.86244202 10.75940228]
[139.13980103 -2.86391354]
[145.41716003 -16.48723030]
[151.69451904 -30.11054611]
[157.97187805 -43.73386002]
[164.24923706 -57.35717773]
[169.91203308 -71.24720764]
[174.94894409 -85.37623596]
[179.98587036 -99.50526428]
[185.02278137 -113.63429260]
[189.95437622 -127.80043030]
[194.78036499 -142.00288391]
[194.57835388 -151.13508606]
[199.78538513 -156.37994385]
[204.82231140 -170.50897217]
[208.90197754 -184.94352722]
[212.00608826 -199.61882019]
[215.11019897 -214.29412842]
[218.21430969 -228.96942139]
[221.31842041 -243.64472961]
[224.42253113 -258.32003784]
[227.52662659 -272.99533081]
[213.38780212 -278.07540894]
[200.07241821 -285.03344727]
[187.82855225 -293.73983765]
[176.88429260 -304.03240967]
[167.44354248 -315.71942139]
[159.68215942 -328.58309937]
[153.74472046 -342.38385010]
[149.74186707 -356.86456299]
[147.74815369 -371.75546265]
[147.80073547 -386.77914429]
[149.89860535 -401.65573120]
[154.00270081 -416.10806274]
[160.03657532 -429.86694336]
[167.88778687 -442.67599487]
[177.41011047 -454.29663086]
[188.42613220 -464.51235962]
[200.73062134 -473.13287354]
[214.09437561 -479.99755859]
[228.26841736 -484.97854614]
[242.98870850 -487.98303223]
[257.98098755 -488.95507812]
[272.96600342 -487.87652588]
[287.66458130 -484.76748657]
[301.80285645 -479.68588257]
[315.11749268 -472.72640991]
[327.36041260 -464.01867676]
[338.30355835 -453.72491455]
[347.74304199 -442.03689575]
[355.50302124 -429.17236328]
[361.43896484 -415.37097168]
[365.44024658 -400.88983154]
[367.43234253 -385.99871826]
[367.37814331 -370.97503662]
[365.27865601 -356.09869385]
[361.17300415 -341.64678955]
[355.13766479 -327.88858032]
[347.28503418 -315.08038330]
[337.76147461 -303.46075439]
[326.74435425 -293.24621582]
[314.43890381 -284.62704468]
[301.07443237 -277.76382446]
[286.89984131 -272.78436279]
[272.17922974 -269.78146362]
[257.18682861 -268.81106567]
[242.20193481 -269.89123535]
[239.09782410 -255.21592712]
[235.99371338 -240.54061890]
[232.88960266 -225.86531067]
[229.78549194 -211.19001770]
[226.68138123 -196.51470947]
[223.57727051 -181.83941650]
[235.12478638 -191.41307068]
[250.00184631 -193.32954407]
[263.59866333 -186.99496460]
[271.70208740 -174.37219238]
[271.80120850 -159.37251282]
[263.86529541 -146.64376831]
[250.35337830 -140.13006592]
[235.45228577 -141.84976196]
[223.77926636 -151.26998901]
[218.95133972 -165.47204590]
[213.91441345 -151.34301758]
[208.98281860 -137.17687988]
[204.15682983 -122.97443390]
[204.98117065 -115.62989044]
[199.15180969 -108.59737396]
[194.11489868 -94.46834564]
[189.07797241 -80.33931732]
[184.04106140 -66.21028900]
[198.02227783 -71.64402008]
[211.80570984 -65.72648621]
[217.49555969 -51.84753036]
[211.83244324 -37.95763779]
[198.06044006 -32.01357651]
[184.06878662 -37.42037201]
[177.87255859 -51.07981873]
[171.59519958 -37.45650101]
[165.31784058 -23.83318520]
[159.04048157 -10.20986843]
[152.76312256 3.41344738]
[146.48576355 17.03676414]
[140.20838928 30.66007996]
[141.90933228 45.45724487]
[129.10690308 54.75286484]
[122.82954407 68.37618256]
[116.55218506 81.99949646]
[110.27482605 95.62281036]
[104.09906006 109.29248047]
[98.02522278 123.00775146]
[101.93485260 135.29911804]
[96.59358978 146.59754944]
[85.35788727 151.07923889]
[79.08052826 164.70254517]
[72.80316162 178.32586670]
[66.52580261 191.94918823]
[67.07762146 196.25608826]
[66.30764771 200.12541199]
[64.51576996 203.19535828]
[62.08853531 205.23867798]
[59.44782257 206.17930603]
[52.37071609 219.40483093]
[45.29360962 232.63035583]
[38.21650314 245.85588074]
[31.13939857 259.08142090]
[31.45037270 274.89956665]
[18.62356567 282.47070312]
[11.54645920 295.69622803]
[4.46935368 308.92175293]
[-2.01014209 322.45010376]
[-7.87910271 336.25430298]
[-6.15814352 351.98162842]
[-18.25833893 360.66693115]
[-24.12729836 374.47109985]
[-29.99625969 388.27526855]
[-35.86521912 402.07946777]
[-41.73418045 415.88363647]
[-47.60314178 429.68780518]
[-53.47210312 443.49197388]
[-40.94283676 451.81857300]
[-30.15707779 462.30581665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[38 200]
[39 199]
[46 198]
[47 197]
[48 196]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 185]
[56 184]
[57 183]
[58 182]
[60 179]
[61 178]
[63 177]
[64 176]
[65 175]
[66 174]
[68 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 159]
[76 158]
[77 157]
[78 156]
[79 154]
[80 153]
[82 152]
[83 151]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
