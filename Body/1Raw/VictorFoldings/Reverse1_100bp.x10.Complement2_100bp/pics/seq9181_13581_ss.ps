%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[249.93374634 458.56079102]
[262.51708984 450.29321289]
[257.06173706 436.32040405]
[251.60638428 422.34762573]
[246.15103149 408.37481689]
[240.69566345 394.40200806]
[228.85943604 385.36029053]
[231.04789734 369.69119263]
[225.59252930 355.71838379]
[219.62097168 341.95828247]
[213.14147949 328.42993164]
[206.66197205 314.90158081]
[200.18247986 301.37322998]
[183.95008850 298.92642212]
[172.25756836 287.16857910]
[169.85342407 270.59384155]
[177.88117981 255.70590210]
[171.20097351 242.27551270]
[164.52078247 228.84513855]
[157.84059143 215.41476440]
[151.16040039 201.98439026]
[144.48020935 188.55401611]
[137.80000305 175.12364197]
[131.11981201 161.69326782]
[124.43962097 148.26289368]
[117.75942230 134.83250427]
[109.43747711 122.35271454]
[99.60689545 111.02312469]
[95.95909882 125.57281494]
[82.37336731 131.93110657]
[68.86459351 125.41089630]
[65.39095306 110.81864166]
[74.51307678 98.91121674]
[89.50496674 98.46566010]
[80.54426575 86.43627930]
[71.58357239 74.40690613]
[73.41723633 89.29440308]
[69.81980133 103.85662842]
[61.26457214 116.17767334]
[48.87714005 124.63648987]
[34.28728485 128.12016296]
[19.41454506 126.17037964]
[6.21569347 119.04364777]
[-3.57273769 107.67761993]
[-8.66291142 93.56768799]
[-8.38512707 78.57025909]
[-2.77593279 64.65850830]
[7.42668581 53.66275406]
[20.88039780 47.02968216]
[35.81513977 45.63199234]
[50.26598358 49.65356827]
[62.33330154 58.56704330]
[56.25946808 44.85177612]
[50.18563461 31.13650894]
[44.11180115 17.42124367]
[38.03796768 3.70597601]
[31.96413231 -10.00929070]
[25.89029884 -23.72455788]
[19.61293793 -37.34787369]
[13.13344288 -50.87622070]
[6.65394688 -64.40456390]
[6.48359537 -49.40553284]
[3.24047232 -34.76032257]
[-2.93752241 -21.09165764]
[-11.78769779 -8.98073769]
[-22.93373871 1.05747652]
[-35.90171432 8.59615517]
[-50.14021301 13.31474876]
[-65.04380798 15.01262093]
[-79.97879791 13.61757755]
[-94.31013489 9.18893623]
[-107.42843628 1.91500521]
[-118.77591705 -7.89492464]
[-127.87007141 -19.82373047]
[-134.32420349 -33.36419296]
[-137.86389160 -47.94056320]
[-138.33862305 -62.93304825]
[-135.72821045 -77.70416260]
[-130.14366150 -91.62582397]
[-121.82241058 -104.10608673]
[-111.11830139 -114.61427307]
[-98.48647308 -122.70357513]
[-84.46402740 -128.03002930]
[-69.64721680 -130.36715698]
[-54.66605759 -129.61557007]
[-40.15755844 -125.80724335]
[-26.73862076 -119.10410309]
[-14.97983074 -109.79116058]
[-5.38117552 -98.26441956]
[1.64926994 -85.01383209]
[1.20266402 -100.00717926]
[0.75605810 -115.00052643]
[0.30945218 -129.99388123]
[-2.83466887 -135.80989075]
[-2.60420895 -141.48826599]
[0.07947440 -145.43882751]
[0.07947440 -160.43882751]
[0.07947440 -175.43882751]
[0.07947440 -190.43882751]
[-13.69439411 -197.01478577]
[-23.24431992 -208.92115784]
[-26.67416000 -223.79391479]
[-23.30291557 -238.68006897]
[-13.79995060 -250.62394714]
[-0.05208434 -257.25411987]
[15.21103287 -257.25411987]
[28.95889854 -250.62394714]
[38.46186447 -238.68006897]
[41.83311081 -223.79391479]
[38.40327072 -208.92115784]
[28.85334396 -197.01478577]
[15.07947445 -190.43882751]
[15.07947445 -175.43882751]
[15.07947445 -160.43882751]
[15.07947445 -145.43882751]
[15.30280209 -130.44049072]
[15.74940777 -115.44713593]
[16.19601440 -100.45378876]
[16.64262009 -85.46043396]
[20.18229294 -70.88406372]
[26.66178894 -57.35571671]
[33.14128494 -43.82736969]
[37.26817703 -41.42366409]
[39.92889404 -36.40195084]
[39.60556412 -29.79839134]
[45.67940140 -16.08312416]
[51.75323486 -2.36785793]
[57.82706833 11.34740925]
[63.90090179 25.06267548]
[69.97473907 38.77794266]
[76.04856873 52.49320984]
[83.61294556 65.44620514]
[92.57364655 77.47558594]
[101.53433990 89.50495911]
[110.93649292 101.19254303]
[120.76707458 112.52214050]
[117.49209595 97.88401794]
[119.08208466 82.96852112]
[125.36923981 69.34972382]
[135.69006348 58.46484375]
[148.95536804 51.46258926]
[163.76524353 49.08192444]
[178.55677795 51.57408905]
[191.76895142 58.67607880]
[202.00749207 69.63839722]
[208.19186401 83.30417633]
[209.66944885 98.23122406]
[206.28430176 112.84425354]
[198.39364624 125.60112762]
[186.83023071 135.15556335]
[172.81436157 140.49928284]
[157.82516479 141.06832886]
[143.44447327 136.80267334]
[131.18980408 128.15231323]
[137.86999512 141.58268738]
[144.55018616 155.01306152]
[151.23037720 168.44345093]
[157.91058350 181.87382507]
[164.59077454 195.30419922]
[171.27096558 208.73457336]
[177.95115662 222.16494751]
[184.63136292 235.59532166]
[191.31155396 249.02569580]
[205.03662109 250.29589844]
[216.25280762 258.11993408]
[222.09164429 270.36645508]
[221.12455750 283.79064941]
[213.71083069 294.89373779]
[220.19032288 308.42208862]
[226.66981506 321.95043945]
[233.14932251 335.47879028]
[240.51974487 322.41445923]
[255.30421448 319.88073730]
[266.60415649 329.74539185]
[266.08966064 344.73657227]
[254.14001465 353.80331421]
[239.56533813 350.26303101]
[245.02069092 364.23580933]
[257.24713135 374.27697754]
[254.66847229 388.94665527]
[260.12380981 402.91946411]
[265.57919312 416.89227295]
[271.03454590 430.86505127]
[276.48989868 444.83786011]
[291.34628296 442.39224243]
[306.38650513 443.08926392]
[320.95303345 446.89846802]
[334.40908813 453.65335083]
[346.16641235 463.05859375]
[355.71105957 474.70306396]
[362.62576294 488.07769775]
[366.60824585 502.59780884]
[367.48440552 517.62866211]
[365.21594238 532.51312256]
[359.90200806 546.60052490]
[351.77493286 559.27508545]
[341.18997192 569.98272705]
[328.60989380 578.25524902]
[314.58459473 583.73107910]
[299.72723389 586.17089844]
[284.68731689 585.46795654]
[270.12228394 581.65295410]
[256.66888428 574.89282227]
[244.91525269 565.48291016]
[235.37519836 553.83471680]
[228.46575928 540.45739746]
[224.48898315 525.93572998]
[223.61874390 510.90451050]
[225.89306641 496.02093506]
[231.21252441 481.93557739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[8 178]
[9 177]
[10 171]
[11 170]
[12 169]
[13 168]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 136]
[28 135]
[34 134]
[35 133]
[36 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 122]
[60 121]
[61 120]
[90 119]
[91 118]
[92 117]
[93 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
