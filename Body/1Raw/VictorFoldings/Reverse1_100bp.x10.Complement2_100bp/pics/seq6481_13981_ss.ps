%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[72.10580444 654.61010742]
[57.77835464 659.36682129]
[42.69879150 660.08056641]
[27.98612213 656.69824219]
[14.73211956 649.47094727]
[3.92032051 638.93493652]
[-3.64696717 625.87207031]
[-7.40820074 611.25170898]
[-7.08427191 596.15869141]
[-2.69921851 581.71313477]
[5.42155981 568.98699951]
[16.67544746 558.92456055]
[30.22732925 552.27258301]
[45.07156754 549.52459717]
[46.40980530 534.58441162]
[47.74803925 519.64422607]
[49.08627319 504.70407104]
[50.42450714 489.76388550]
[51.76274109 474.82369995]
[53.10097504 459.88351440]
[51.40910339 457.64840698]
[50.50065231 454.60845947]
[50.68660355 451.05868530]
[52.16549683 447.40118408]
[54.98958206 444.10290527]
[57.21469879 429.26885986]
[59.43981552 414.43481445]
[61.66493225 399.60076904]
[55.90121460 385.86657715]
[65.60004425 373.36682129]
[67.82516479 358.53277588]
[69.93978882 343.68258667]
[63.97222519 330.03570557]
[73.48387909 317.39294434]
[75.48789215 302.52743530]
[77.49190521 287.66189575]
[79.49591827 272.79638672]
[81.49993134 257.93084717]
[75.53237152 244.28396606]
[85.04402161 231.64122009]
[86.49343872 216.71141052]
[87.38625336 201.73800659]
[88.27907562 186.76458740]
[89.17189026 171.79118347]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[92.49418640 72.48416901]
[90.71171570 57.59045410]
[88.92925262 42.69673538]
[85.27879333 37.18441772]
[85.00173187 31.50812721]
[87.32226562 27.33389854]
[85.98402405 12.39371395]
[84.64579010 -2.54647088]
[83.30755615 -17.48665619]
[68.84552002 -22.08286285]
[57.27614975 -31.83953857]
[50.34236526 -45.24611282]
[49.07310104 -60.24533463]
[53.63074493 -74.54892731]
[63.29111099 -85.98670197]
[76.55832672 -92.83580780]
[75.22009277 -107.77599335]
[73.88185883 -122.71617889]
[72.43243408 -137.64599609]
[70.87191772 -152.56459045]
[69.31139374 -167.48320007]
[58.15227890 -182.13092041]
[65.91791534 -197.86819458]
[64.13545227 -212.76191711]
[62.35298538 -227.65562439]
[60.57052231 -242.54934692]
[51.24815369 -255.33230591]
[57.41823578 -268.88882446]
[55.63576889 -283.78253174]
[47.78240585 -271.00268555]
[34.31293488 -264.40167236]
[19.40102196 -266.02490234]
[7.66728497 -275.36938477]
[2.74754882 -289.53964233]
[6.16624784 -304.14486694]
[16.86406136 -314.65945435]
[31.52615547 -317.82537842]
[45.60932159 -312.66162109]
[54.74982834 -300.76797485]
[54.97315598 -315.76632690]
[55.19648361 -330.76464844]
[55.41981125 -345.76300049]
[55.64313889 -360.76132202]
[55.86646652 -375.75967407]
[56.08979416 -390.75799561]
[56.31312180 -405.75634766]
[56.53644943 -420.75466919]
[56.75977707 -435.75302124]
[56.98310471 -450.75134277]
[57.20643234 -465.74969482]
[43.73111725 -473.00741577]
[35.18176651 -485.70257568]
[33.52295685 -500.91790771]
[39.13586807 -515.15710449]
[50.73069763 -525.14801025]
[65.64303589 -528.59484863]
[80.44614410 -524.70556641]
[91.73836517 -514.37384033]
[96.92483521 -499.97384644]
[94.81374359 -484.81463623]
[85.89019775 -472.37963867]
[72.20477295 -465.52636719]
[71.98144531 -450.52801514]
[71.75811768 -435.52969360]
[71.53479004 -420.53134155]
[71.31146240 -405.53302002]
[71.08813477 -390.53466797]
[70.86480713 -375.53634644]
[70.64147949 -360.53799438]
[70.41815186 -345.53967285]
[70.19482422 -330.54132080]
[69.97149658 -315.54299927]
[69.74816895 -300.54464722]
[70.52948761 -285.56500244]
[72.31195068 -270.67129517]
[81.50682831 -258.95364380]
[75.46424103 -244.33181763]
[77.24670410 -229.43809509]
[79.02916718 -214.54437256]
[80.81163788 -199.65066528]
[90.12400818 -191.93014526]
[91.73090363 -179.53654480]
[84.22999573 -169.04371643]
[85.79051971 -154.12512207]
[87.35104370 -139.20651245]
[91.17335510 -132.88102722]
[88.82204437 -124.05441284]
[90.16027832 -109.11422729]
[91.49851227 -94.17404175]
[105.77174377 -89.79180908]
[117.31105042 -80.25294495]
[124.33817291 -66.98703766]
[125.75476837 -52.00101471]
[121.31397247 -37.57558441]
[111.66272736 -25.91812134]
[98.24774170 -18.82489014]
[99.58597565 -3.88470507]
[100.92420959 11.05548000]
[102.26244354 25.99566460]
[103.82296753 40.91426849]
[105.60543823 55.80798721]
[107.38790131 70.70170593]
[114.31380463 57.39636993]
[126.57675934 48.75809097]
[141.43719482 46.71667862]
[155.57525635 51.72819519]
[165.83245850 62.67304611]
[169.91731262 77.10613251]
[166.91726685 91.80306244]
[157.50253296 103.48049927]
[143.77636719 109.52967834]
[128.80525208 108.59920502]
[115.93376923 100.89693451]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[107.68134308 166.19415283]
[104.14529419 172.68400574]
[103.25247955 187.65740967]
[102.35966492 202.63081360]
[101.46684265 217.60421753]
[114.24753571 209.75221252]
[128.40628052 214.70500183]
[133.50576782 228.81155396]
[125.78686523 241.67306519]
[110.93965149 243.80850220]
[99.90955353 233.64523315]
[105.73377228 248.35539246]
[96.36545563 259.93484497]
[94.36144257 274.80038452]
[92.35742950 289.66592407]
[90.35341644 304.53143311]
[88.34940338 319.39697266]
[94.17362976 334.10714722]
[84.80531311 345.68661499]
[86.76015472 354.60940552]
[82.65920258 360.75790405]
[80.43408966 375.59194946]
[86.03865051 390.38720703]
[76.49897766 401.82589722]
[74.27385712 416.65994263]
[72.04874420 431.49398804]
[69.82362366 446.32803345]
[68.04116058 461.22174072]
[66.70292664 476.16192627]
[65.36469269 491.10211182]
[64.02645874 506.04229736]
[62.68822098 520.98248291]
[61.34998703 535.92266846]
[60.01175308 550.86285400]
[74.13133240 556.20513916]
[86.28529358 565.15972900]
[95.57173920 577.06201172]
[101.30155182 591.02880859]
[103.04953766 606.02368164]
[100.68599701 620.93395996]
[94.38630676 634.65319824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[25 196]
[26 195]
[27 194]
[28 193]
[30 191]
[31 190]
[32 188]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[40 180]
[41 174]
[42 173]
[43 172]
[44 171]
[45 169]
[46 168]
[47 167]
[48 166]
[50 164]
[51 152]
[52 151]
[53 150]
[56 149]
[57 148]
[58 147]
[59 146]
[66 139]
[67 138]
[68 137]
[69 135]
[70 134]
[71 133]
[73 130]
[74 129]
[75 128]
[76 127]
[78 125]
[79 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
