%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[144.38783264 634.60882568]
[133.06205750 644.60400391]
[119.37850189 651.00219727]
[104.44643402 653.28479004]
[89.47633362 651.26666260]
[75.68175507 645.11151123]
[64.18096924 635.31817627]
[55.90628815 622.68066406]
[51.52850342 608.22344971]
[51.40250015 593.11846924]
[55.53850174 578.59020996]
[63.60121155 565.81640625]
[74.93702698 555.83264160]
[88.62699890 549.44818115]
[103.56135559 547.18060303]
[105.56536865 532.31512451]
[107.56938171 517.44958496]
[109.57339478 502.58404541]
[111.57740784 487.71850586]
[102.40829468 478.66552734]
[100.09299469 465.79223633]
[105.69731903 453.75885010]
[117.37837219 447.05307007]
[119.60348511 432.21902466]
[121.82860565 417.38497925]
[124.05371857 402.55093384]
[124.38869476 387.55468750]
[122.82817841 372.63607788]
[121.26765442 357.71746826]
[119.59610748 342.81088257]
[117.81364441 327.91717529]
[116.03118134 313.02346802]
[114.24871063 298.12973022]
[112.46624756 283.23602295]
[100.63499451 274.26068115]
[98.61515045 259.18170166]
[108.10955048 246.83285522]
[106.32708740 231.93914795]
[94.49583435 222.96379089]
[92.47599030 207.88482666]
[101.97039032 195.53598022]
[100.18792725 180.64225769]
[98.40545654 165.74855042]
[96.62299347 150.85482788]
[94.09207153 148.39988708]
[92.62448120 144.59709167]
[92.84076691 139.95957947]
[95.10884094 135.25820923]
[93.99318695 120.29975128]
[83.47323608 113.22980499]
[78.87767029 101.41733551]
[81.85388184 89.09679413]
[91.33497620 80.68474579]
[90.44215393 65.71134186]
[89.54933929 50.73793793]
[81.00435638 37.42276382]
[87.97039795 24.25752449]
[86.96614075 9.29117966]
[85.85049438 -5.66727352]
[84.73484039 -20.62572670]
[74.01679230 -35.59920120]
[82.24755096 -51.09828568]
[80.90931702 -66.03846741]
[79.57108307 -80.97865295]
[78.23284912 -95.91883850]
[66.38848877 -106.03560638]
[65.24415588 -121.20613861]
[74.96193695 -132.43557739]
[73.62370300 -147.37576294]
[70.61943054 -151.64442444]
[69.64990234 -156.18461609]
[70.47781372 -160.17579651]
[72.57459259 -163.01055908]
[71.90480804 -177.99560547]
[71.23502350 -192.98063660]
[70.56523895 -207.96568298]
[69.89544678 -222.95071411]
[68.77980042 -237.90916443]
[67.21927643 -252.82777405]
[65.65875244 -267.74636841]
[64.09823608 -282.66497803]
[62.53770828 -297.58358765]
[53.40669632 -310.50393677]
[59.77793121 -323.96707153]
[58.21740723 -338.88568115]
[56.65688324 -353.80429077]
[41.66588211 -355.09518433]
[27.19016457 -359.20007324]
[13.75301743 -365.97055054]
[1.84018528 -375.16189575]
[-8.11769104 -386.44186401]
[-15.76063919 -399.40264893]
[-20.81237221 -413.57571411]
[-23.09027290 -428.44879150]
[-22.51199722 -443.48413086]
[-19.09844780 -458.13830566]
[-12.97302341 -471.88150024]
[-4.35715532 -484.21694946]
[6.43769979 -494.69873047]
[19.02131462 -502.94790649]
[32.93879700 -508.66632080]
[47.68704224 -511.64721680]
[62.73291016 -511.78286743]
[77.53250122 -509.06832886]
[91.55081940 -503.60177612]
[104.28110504 -495.58078003]
[115.26317596 -485.29531860]
[124.10003662 -473.11721802]
[130.47222900 -459.48666382]
[134.14941406 -444.89645386]
[134.99867249 -429.87396240]
[132.98927307 -414.96224976]
[128.19387817 -400.70037842]
[120.78583527 -387.60391235]
[111.03294373 -376.14627075]
[99.28775024 -366.74163818]
[85.97485352 -359.73001099]
[71.57549286 -355.36480713]
[73.13600922 -340.44619751]
[74.69653320 -325.52761841]
[83.71592712 -313.67434692]
[77.45631409 -299.14410400]
[79.01683807 -284.22549438]
[80.57736206 -269.30691528]
[82.13788605 -254.38829041]
[83.69841003 -239.46969604]
[85.78861237 -237.60174561]
[87.26483917 -234.79330444]
[87.76515961 -231.27406311]
[87.01741028 -227.40039062]
[84.88048553 -223.62049866]
[85.55027771 -208.63546753]
[86.22006226 -193.65042114]
[86.88984680 -178.66539001]
[87.55963135 -163.68034363]
[88.56388855 -148.71400452]
[89.90212250 -133.77381897]
[101.46089935 -124.45018005]
[103.03089142 -109.31777191]
[93.17302704 -97.25707245]
[94.51126099 -82.31688690]
[95.84950256 -67.37670135]
[97.18773651 -52.43651962]
[106.26611328 -44.44217300]
[107.50328827 -32.00621033]
[99.69329834 -21.74137497]
[100.80894470 -6.78292227]
[101.92459106 8.17553139]
[105.55687714 14.61201286]
[102.94380188 23.36470795]
[111.42492676 35.60888290]
[104.52275085 49.84511948]
[105.41556549 64.81852722]
[106.30838013 79.79193115]
[118.89916992 90.46150208]
[120.00409698 106.92803955]
[108.95164490 119.18410492]
[110.06729126 134.14254761]
[111.51670837 149.07235718]
[113.29917145 163.96607971]
[115.08164215 178.85980225]
[116.86410522 193.75350952]
[129.00442505 203.51313782]
[130.59992981 218.64288330]
[121.22080231 230.15667725]
[123.00326538 245.05039978]
[135.14358521 254.81002808]
[136.73908997 269.93975830]
[127.35996246 281.45355225]
[129.14242554 296.34729004]
[130.92489624 311.24099731]
[132.70736694 326.13470459]
[134.48982239 341.02844238]
[138.61683655 349.17739868]
[136.18626404 356.15695190]
[137.74678040 371.07556152]
[139.30729675 385.99417114]
[145.01493835 372.12249756]
[154.86788940 360.81234741]
[167.82632446 353.25729370]
[182.52272034 350.25460815]
[197.40612793 352.12121582]
[210.90585327 358.66009521]
[221.59727478 369.18121338]
[228.35206604 382.57421875]
[230.45739746 397.42575073]
[227.69107056 412.16845703]
[220.34504700 425.24652100]
[209.19453430 435.27978516]
[195.41632080 441.20941162]
[180.46441650 442.40963745]
[165.91673279 438.75378418]
[153.30854797 430.62768555]
[143.97041321 418.88891602]
[138.88777161 404.77606201]
[136.66264343 419.61010742]
[134.43753052 434.44415283]
[132.21241760 449.27819824]
[142.86619568 463.15319824]
[140.24057007 480.10671997]
[126.44293213 489.72253418]
[124.43891907 504.58807373]
[122.43490601 519.45361328]
[120.43089294 534.31909180]
[118.42687988 549.18463135]
[132.22763062 555.32598877]
[143.73825073 565.10772705]
[152.02563477 577.73687744]
[156.41793823 592.18969727]
[156.55911255 607.29455566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[23 198]
[24 197]
[25 196]
[26 195]
[27 177]
[28 176]
[29 175]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[37 166]
[38 165]
[41 162]
[42 161]
[43 160]
[44 159]
[48 158]
[49 157]
[53 154]
[54 153]
[55 152]
[57 150]
[58 148]
[59 147]
[60 146]
[62 143]
[63 142]
[64 141]
[65 140]
[68 137]
[69 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 120]
[85 119]
[86 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
