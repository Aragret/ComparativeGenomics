%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[40.24653244 381.48013306]
[41.84877396 396.43582153]
[40.75461197 411.43722534]
[36.99922562 426.00216675]
[30.70332527 439.66238403]
[22.06930542 451.97875977]
[11.37471199 462.55541992]
[-1.03666794 471.05230713]
[-14.76585960 477.19635010]
[-29.37152672 480.78997803]
[-44.38415909 481.71771240]
[-59.32115936 479.94973755]
[-73.70236206 475.54284668]
[-87.06548309 468.63873291]
[-98.98094177 459.45932007]
[-109.06571198 448.29968262]
[-116.99560547 435.51858521]
[-122.51570892 421.52685547]
[-125.44857788 406.77429199]
[-125.69992828 391.73513794]
[-123.26168823 376.89279175]
[-118.21222687 362.72442627]
[-110.71386719 349.68548584]
[-101.00765228 338.19506836]
[-89.40560150 328.62261963]
[-76.28066254 321.27578735]
[-62.05475235 316.39077759]
[-47.18517685 314.12463379]
[-32.14992523 314.55017090]
[-17.43232727 317.65371704]
[-11.76954079 303.76370239]
[-6.10675478 289.87368774]
[-0.44396809 275.98364258]
[-1.46710300 272.60940552]
[-0.90672237 268.57196045]
[1.53108239 264.62094116]
[5.79430532 261.60897827]
[12.07166672 247.98565674]
[18.34902763 234.36233521]
[24.62638855 220.73902893]
[9.86522293 223.40510559]
[-1.52264702 213.64208984]
[-1.14250839 198.64691162]
[10.72541523 189.47344971]
[25.33253098 192.88404846]
[31.91100121 206.36288452]
[39.18423080 193.24418640]
[46.45745850 180.12548828]
[45.86180115 165.24279785]
[59.32014084 156.92512512]
[66.59336853 143.80644226]
[73.86660004 130.68774414]
[74.36064148 123.31362152]
[81.34703064 117.42904663]
[88.81477356 104.42008972]
[96.08799744 91.30139923]
[103.16510773 78.07587433]
[110.24221039 64.85034180]
[117.22066498 51.57249832]
[124.10007477 38.24306870]
[130.97949219 24.91363907]
[137.85890198 11.58421040]
[144.73831177 -1.74521875]
[151.61772156 -15.07464790]
[156.01872253 -29.41449547]
[157.80119324 -44.30821228]
[159.58364868 -59.20193100]
[161.36611938 -74.09564972]
[147.41888428 -78.53717804]
[134.53291321 -85.47142792]
[123.14907074 -94.65942383]
[113.65649414 -105.78514862]
[106.37931824 -118.46634674]
[101.56560516 -132.26770020]
[99.37886047 -146.71578979]
[99.89253235 -161.31526184]
[103.08748627 -175.56588745]
[108.85276031 -188.97964478]
[116.98939514 -201.09750366]
[127.21730042 -211.50502014]
[139.18490601 -219.84666443]
[152.48123169 -225.83778381]
[166.65003967 -229.27450562]
[181.20539856 -230.04051208]
[183.20941162 -244.90603638]
[185.21342468 -259.77157593]
[172.54786682 -268.21813965]
[164.83703613 -281.27304077]
[163.56422424 -296.31961060]
[168.92851257 -310.36901855]
[179.81588745 -320.65368652]
[194.03012085 -325.17266846]
[196.03413391 -340.03817749]
[197.70567322 -354.94476318]
[199.04389954 -369.88494873]
[200.38214111 -384.82513428]
[201.72036743 -399.76531982]
[203.05860901 -414.70550537]
[204.39683533 -429.64569092]
[205.73507690 -444.58587646]
[191.99969482 -450.99798584]
[181.28791809 -461.72335815]
[174.89324951 -475.46685791]
[173.58789062 -490.56890869]
[177.52943420 -505.20584106]
[186.24195862 -517.61016846]
[198.67335510 -526.28405762]
[213.32249451 -530.18005371]
[228.42039490 -528.82769775]
[242.14395142 -522.39025879]
[252.83593750 -511.64517212]
[259.20526123 -497.88992310]
[260.48278809 -482.78549194]
[256.51428223 -468.15585327]
[247.77891541 -455.76757812]
[235.33154297 -447.11660767]
[220.67526245 -443.24765015]
[219.33702087 -428.30746460]
[217.99879456 -413.36727905]
[216.66055298 -398.42709351]
[215.32232666 -383.48690796]
[213.98408508 -368.54672241]
[212.64585876 -353.60653687]
[214.61396790 -350.68096924]
[215.26283264 -346.65679932]
[214.09153748 -342.16442871]
[210.89965820 -338.03417969]
[208.89564514 -323.16864014]
[221.40579224 -315.04696655]
[229.18106079 -302.24639893]
[230.63349915 -287.27804565]
[225.42167664 -273.10565186]
[214.52909851 -262.55868530]
[200.07896423 -257.76754761]
[198.07495117 -242.90202332]
[196.07093811 -228.03649902]
[210.65037537 -223.11175537]
[223.99749756 -215.44294739]
[235.60156250 -205.32145691]
[245.01815796 -193.13252258]
[251.88613892 -179.34063721]
[255.94155884 -164.47181702]
[257.02777100 -149.09352112]
[255.10147095 -133.79306030]
[250.23445129 -119.15508270]
[242.61091614 -105.73931122]
[232.52047729 -94.05908203]
[220.34719849 -84.56172943]
[206.55499268 -77.61145782]
[191.66983032 -73.47536469]
[176.25984192 -72.31317902]
[174.47737122 -57.41946411]
[172.69490051 -42.52574539]
[170.91244507 -27.63202858]
[179.11831665 -40.18844604]
[190.05703735 -50.45218658]
[203.10997009 -57.84278107]
[217.53890991 -61.94226074]
[232.52783203 -62.51877594]
[247.22903442 -59.53972626]
[260.81109619 -53.17358780]
[272.50585938 -43.78039551]
[281.65197754 -31.89138603]
[287.73217773 -18.17893410]
[290.40255737 -3.41854811]
[289.51214600 11.55500031]
[285.11126709 25.89488411]
[277.44882202 38.79011536]
[266.95816040 49.51140594]
[254.23258972 57.45241165]
[239.99177551 62.16403198]
[225.04112244 63.37980270]
[210.22616577 61.03096771]
[196.38476562 55.25036240]
[184.29969788 46.36490631]
[174.65446472 34.87711716]
[167.99452209 21.43668747]
[164.69653320 6.80373669]
[164.94715881 -8.19523525]
[158.06774902 5.13419390]
[151.18832397 18.46362305]
[144.30891418 31.79305267]
[137.42950439 45.12248230]
[130.55009460 58.45191193]
[130.27581787 65.83747864]
[123.46773529 71.92745209]
[116.39063263 85.15297699]
[109.31352997 98.37850189]
[109.65785217 103.61256409]
[107.04511261 108.66696167]
[101.82372284 111.88783264]
[94.35597992 124.89678955]
[86.98529053 137.96096802]
[79.71206665 151.07966614]
[72.43883514 164.19836426]
[72.51426697 180.01939392]
[59.57615280 187.39872742]
[52.30292511 200.51741028]
[45.02969360 213.63610840]
[38.24970245 227.01638794]
[31.97234344 240.63969421]
[25.69498253 254.26301575]
[19.41762161 267.88632202]
[13.44605923 281.64642334]
[7.78327227 295.53646851]
[2.12048578 309.42648315]
[-3.54230094 323.31652832]
[9.15007687 331.38766479]
[20.19718170 341.59555054]
[29.24389267 353.61209106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 207]
[31 206]
[32 205]
[33 204]
[37 203]
[38 202]
[39 201]
[40 200]
[46 199]
[47 198]
[48 197]
[50 195]
[51 194]
[52 193]
[54 192]
[55 191]
[56 188]
[57 187]
[58 186]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 154]
[66 153]
[67 152]
[68 151]
[84 136]
[85 135]
[86 134]
[92 128]
[93 127]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
