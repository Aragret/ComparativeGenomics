%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[24.44639969 582.71240234]
[25.65071869 597.73950195]
[23.22313309 612.61804199]
[17.30478096 626.48297119]
[8.23974514 638.52825928]
[-3.44494319 648.05352783]
[-17.06995201 654.50512695]
[-31.84314156 657.50781250]
[-46.90561676 656.88714600]
[-61.38166809 652.67907715]
[-74.42967224 645.12841797]
[-85.29103851 634.67401123]
[-93.33429718 621.92376709]
[-98.09183502 607.61889648]
[-99.28704071 592.59106445]
[-96.85044098 577.71405029]
[-90.92368317 563.85266113]
[-81.85134125 551.81292725]
[-70.16088104 542.29467773]
[-56.53196335 535.85137939]
[-41.75695801 532.85766602]
[-26.69486046 533.48748779]
[-22.50785065 519.08367920]
[-18.32083893 504.67990112]
[-14.13382816 490.27612305]
[-21.51014137 477.38714600]
[-17.46910477 462.72000122]
[-3.89995170 455.07046509]
[0.28705943 440.66665649]
[4.47407055 426.26287842]
[8.66108227 411.85910034]
[12.84809303 397.45532227]
[17.03510475 383.05154419]
[13.15796089 368.67041016]
[24.43981743 357.57849121]
[28.62682915 343.17471313]
[32.81383896 328.77093506]
[37.00085068 314.36715698]
[31.90506935 297.57431030]
[45.30314255 284.94207764]
[49.27523804 270.47753906]
[53.24733353 256.01303101]
[57.11164093 241.51933289]
[60.86793900 226.99728394]
[64.62423706 212.47521973]
[68.38053894 197.95315552]
[72.02862549 183.40353394]
[75.56829834 168.82716370]
[79.10797119 154.25079346]
[82.64764404 139.67440796]
[86.18731689 125.09803772]
[75.50717926 114.85945129]
[71.35965729 100.65761566]
[74.85097504 86.28038025]
[85.04992676 75.56238556]
[99.23630524 71.36228943]
[102.77597809 56.78591537]
[106.31565094 42.20954132]
[109.85532379 27.63316536]
[96.37672424 16.99281120]
[88.92913055 1.58096910]
[88.96733856 -15.48062420]
[96.43525696 -30.75948715]
[109.78695679 -41.20294189]
[126.30641937 -44.74800110]
[129.41052246 -59.42330170]
[132.51463318 -74.09860229]
[135.61874390 -88.77391052]
[138.72285461 -103.44921112]
[141.05834961 -118.26627350]
[142.61886597 -133.18487549]
[144.17939758 -148.10348511]
[145.40637207 -163.05322266]
[146.29917908 -178.02662659]
[147.19200134 -193.00003052]
[146.96867371 -207.99836731]
[145.63043213 -222.93855286]
[136.25129700 -231.79261780]
[135.44424438 -244.26388550]
[143.09767151 -253.63146973]
[141.98202515 -268.58990479]
[140.86637878 -283.54837036]
[139.75073242 -298.50683594]
[138.63507080 -313.46527100]
[137.51942444 -328.42373657]
[136.40377808 -343.38217163]
[135.28813171 -358.34063721]
[134.06115723 -373.29037476]
[132.72291565 -388.23056030]
[131.38468933 -403.17074585]
[130.04644775 -418.11093140]
[115.17997742 -420.68975830]
[101.48793030 -427.02932739]
[89.90384674 -436.69738770]
[81.21755219 -449.03475952]
[76.02129364 -463.20025635]
[74.66936493 -478.22805786]
[77.25393677 -493.09353638]
[83.59878540 -506.78314209]
[93.27132416 -518.36346436]
[105.61204529 -527.04504395]
[119.77954865 -532.23577881]
[134.80786133 -533.58190918]
[149.67234802 -530.99163818]
[163.35949707 -524.64147949]
[174.93611145 -514.96447754]
[183.61286926 -502.62039185]
[188.79818726 -488.45089722]
[190.13851929 -473.42205811]
[187.54246521 -458.55859375]
[181.18704224 -444.87387085]
[171.50556946 -433.30099487]
[159.15814209 -424.62899780]
[144.98663330 -419.44915771]
[146.32487488 -404.50897217]
[147.66310120 -389.56878662]
[149.00134277 -374.62860107]
[152.72904968 -368.24691772]
[150.24658203 -359.45629883]
[151.36222839 -344.49783325]
[152.47789001 -329.53936768]
[153.59353638 -314.58093262]
[154.70918274 -299.62246704]
[155.82482910 -284.66403198]
[156.94047546 -269.70556641]
[158.05612183 -254.74711609]
[168.70384216 -240.79745483]
[160.57061768 -224.27679443]
[161.90885925 -209.33660889]
[169.64237976 -222.18933105]
[182.71803284 -229.53967285]
[197.71784973 -229.46626282]
[210.72093201 -221.98829651]
[218.32829285 -209.06050110]
[218.55139160 -194.06214905]
[211.33190918 -180.91380310]
[198.55700684 -173.05239868]
[183.56600952 -172.53286743]
[170.27752686 -179.49104309]
[162.16540527 -192.10722351]
[161.27258301 -177.13380432]
[160.37977600 -162.16040039]
[162.43411255 -159.29473877]
[163.20251465 -155.29167175]
[162.16549683 -150.76641846]
[159.09799194 -146.54296875]
[157.53747559 -131.62435913]
[155.97694397 -116.70575714]
[167.57397461 -126.21936798]
[182.57392883 -126.17855072]
[194.11900330 -116.60196686]
[196.93098450 -101.86789703]
[189.72424316 -88.71256256]
[175.79360962 -83.15039825]
[161.50799561 -87.72436523]
[153.39816284 -100.34510040]
[150.29405212 -85.66979980]
[147.18994141 -70.99449158]
[144.08583069 -56.31919098]
[140.98171997 -41.64389038]
[151.87896729 -34.57326126]
[159.74417114 -24.19476700]
[163.62387085 -11.73060989]
[163.03555298 1.34210598]
[158.02755737 13.46641636]
[149.17591858 23.19093323]
[137.51815796 29.34357834]
[124.43170166 31.17283821]
[120.89202881 45.74921417]
[117.35235596 60.32558823]
[113.81268311 74.90196228]
[124.49282074 85.14054871]
[128.64033508 99.34238434]
[125.14902496 113.71961975]
[114.95007324 124.43761444]
[100.76369476 128.63771057]
[97.22402191 143.21408081]
[93.68434906 157.79046631]
[90.14467621 172.36683655]
[86.60500336 186.94320679]
[87.62095642 196.02096558]
[82.90260315 201.70945740]
[79.14630127 216.23152161]
[75.38999939 230.75357056]
[71.63369751 245.27563477]
[72.51438141 254.36750793]
[67.71186066 259.98513794]
[63.73976135 274.44964600]
[59.76766586 288.91418457]
[65.45735931 300.48959351]
[61.85120773 312.45535278]
[51.40463257 318.55416870]
[47.21762085 332.95794678]
[43.03061295 347.36172485]
[38.84360123 361.76550293]
[42.42126083 377.17691040]
[31.43888664 387.23855591]
[27.25187492 401.64233398]
[23.06486320 416.04611206]
[18.87785339 430.44989014]
[14.69084167 444.85366821]
[10.50382996 459.25747681]
[17.85771370 472.98910522]
[13.40630150 487.53695679]
[0.26995429 494.46313477]
[-3.91705704 508.86691284]
[-8.10406780 523.27069092]
[-12.29107952 537.67449951]
[0.76150107 545.21728516]
[11.62920380 555.66503906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[35 195]
[36 194]
[37 193]
[38 192]
[40 189]
[41 188]
[42 187]
[43 185]
[44 184]
[45 183]
[46 182]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[56 171]
[57 170]
[58 169]
[59 168]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 148]
[71 147]
[72 146]
[73 142]
[74 141]
[75 140]
[76 129]
[77 128]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
