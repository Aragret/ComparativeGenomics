%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[62.47361755 480.56564331]
[74.95066071 471.60916138]
[73.39013672 456.69055176]
[71.82961273 441.77194214]
[70.26908875 426.85333252]
[67.18897247 423.20343018]
[66.36901855 417.57983398]
[68.89100647 411.46829224]
[67.77536011 396.50982666]
[66.65971375 381.55136108]
[65.54405975 366.59292603]
[58.03095627 379.57571411]
[45.39450836 387.65780640]
[30.45773888 389.03363037]
[16.55755615 383.39581299]
[6.79929829 372.00387573]
[3.36298442 357.40280151]
[7.01629591 342.85449219]
[16.94307327 331.60906982]
[30.92564964 326.17883301]
[45.84028244 327.77688599]
[58.35500336 336.04620361]
[65.67399597 349.13943481]
[67.01222992 334.19927979]
[60.44125748 320.83245850]
[69.37889099 307.77761841]
[70.71712494 292.83743286]
[69.02526093 290.60229492]
[68.11680603 287.56234741]
[68.30275726 284.01260376]
[69.78165436 280.35507202]
[72.60573578 277.05682373]
[74.83085632 262.22277832]
[77.05596924 247.38873291]
[68.02380371 235.60078430]
[70.06907654 220.52525330]
[82.49459076 211.13142395]
[84.71971130 196.29737854]
[86.94482422 181.46333313]
[89.16994476 166.62928772]
[91.39505768 151.79524231]
[92.51071167 136.83679199]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[93.07069397 61.61720657]
[85.53971863 47.70336533]
[93.46565247 35.09270096]
[93.68898010 20.09436417]
[93.91230774 5.09602642]
[94.13563538 -9.90231037]
[84.79618835 -25.77229309]
[94.37688446 -40.47526169]
[94.37688446 -55.47526169]
[94.37688446 -70.47525787]
[91.24747467 -79.05690765]
[94.49021149 -85.69817352]
[94.71353912 -100.69651031]
[94.93686676 -115.69484711]
[95.16019440 -130.69319153]
[81.25479889 -136.76901245]
[70.76324463 -147.67636108]
[65.26183319 -161.73153687]
[65.55989838 -176.78141785]
[71.58088684 -190.53323364]
[82.37876129 -200.90393066]
[96.28652191 -206.33563232]
[96.50984955 -221.33396912]
[96.73317719 -236.33230591]
[96.95650482 -251.33064270]
[96.50990295 -266.32397461]
[95.39425659 -281.28244019]
[94.27860260 -296.24090576]
[93.16295624 -311.19934082]
[78.30859375 -313.73577881]
[64.50135803 -319.75015259]
[52.54209518 -328.88882446]
[43.12335587 -340.61712646]
[36.78924561 -354.25064087]
[33.90402222 -368.99499512]
[34.63113785 -383.99230957]
[38.92398834 -398.37103271]
[46.52887726 -411.29656982]
[57.00000000 -422.01980591]
[69.72557831 -429.92041016]
[83.96360779 -434.54284668]
[82.84796143 -449.50128174]
[81.73231506 -464.45974731]
[80.50533295 -479.40948486]
[79.16709900 -494.34967041]
[77.82886505 -509.28985596]
[63.07757187 -512.64459229]
[50.08597946 -520.39532471]
[40.12686920 -531.78265381]
[34.17593384 -545.69097900]
[32.81618881 -560.75775146]
[36.18084335 -575.50677490]
[43.94026566 -588.49316406]
[55.33427048 -598.44464111]
[69.24658203 -604.38623047]
[84.31421661 -605.73590088]
[99.06100464 -602.36138916]
[112.04219818 -594.59326172]
[121.98603821 -583.19256592]
[127.91832733 -569.27630615]
[129.25788879 -554.20776367]
[125.87346649 -539.46325684]
[118.09664154 -526.48724365]
[106.68931580 -516.55102539]
[92.76905060 -510.62808228]
[94.10728455 -495.68789673]
[95.44551849 -480.74771118]
[99.17323303 -474.36602783]
[96.69076538 -465.57540894]
[97.80641174 -450.61694336]
[98.92206573 -435.65847778]
[113.68826294 -433.19927979]
[127.44503784 -427.27380371]
[139.39100647 -418.22253418]
[148.82914734 -406.56811523]
[155.20745850 -392.98529053]
[158.15124512 -378.26174927]
[157.48513794 -363.25253296]
[153.24351501 -348.83023071]
[145.66877747 -335.83450317]
[135.19747925 -325.02288818]
[122.43516541 -317.02688599]
[108.12140656 -312.31500244]
[109.23706055 -297.35653687]
[110.35270691 -282.39810181]
[111.46835327 -267.43963623]
[122.05186462 -278.06927490]
[137.05088806 -278.23980713]
[147.87332153 -267.85351562]
[148.31956482 -252.86013794]
[138.13400269 -241.84858704]
[123.15138245 -241.12677002]
[111.95484924 -251.10731506]
[111.73152161 -236.10897827]
[111.50819397 -221.11064148]
[111.28486633 -206.11230469]
[125.02474213 -200.26892090]
[135.50904846 -189.58132935]
[141.11793518 -175.65634155]
[140.96777344 -160.60426331]
[135.05032349 -146.71911621]
[124.23866272 -136.12896729]
[110.15853119 -130.46986389]
[109.93520355 -115.47151947]
[109.71187592 -100.47318268]
[109.48854828 -85.47484589]
[109.37688446 -70.47525787]
[109.37688446 -55.47526169]
[109.37688446 -40.47526169]
[117.70584106 -31.70285797]
[117.82860565 -19.20611191]
[109.13397217 -9.67898273]
[108.91064453 5.31935453]
[108.68731689 20.31769180]
[108.46398926 35.31602859]
[116.01094055 48.15708542]
[108.06903076 61.84053421]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[107.51071167 136.83679199]
[116.36006165 124.72527313]
[130.03933716 118.57079315]
[144.97279358 119.98212433]
[157.25686646 128.59034729]
[163.68052673 142.14529419]
[162.56465149 157.10372925]
[154.20092773 169.55555725]
[140.77560425 176.24589539]
[125.79803467 175.42591858]
[113.18331146 167.30995178]
[106.22910309 154.02035522]
[104.00399017 168.85440063]
[101.77886963 183.68844604]
[99.55375671 198.52249146]
[97.32863617 213.35653687]
[106.45115662 225.98260498]
[103.98325348 240.99473572]
[91.89001465 249.61384583]
[89.66489410 264.44790649]
[87.43978119 279.28192139]
[85.65731049 294.17565918]
[84.31907654 309.11584473]
[90.79433441 323.55126953]
[81.95241547 335.53750610]
[80.61418152 350.47769165]
[80.50251770 365.47726440]
[81.61816406 380.43572998]
[82.73381042 395.39416504]
[83.84946442 410.35263062]
[85.18769836 425.29281616]
[86.74822235 440.21142578]
[88.30873871 455.13003540]
[89.86926270 470.04861450]
[103.92968750 476.22924805]
[113.00312042 488.62152100]
[114.64885712 503.89196777]
[108.42419434 517.93298340]
[96.00354767 526.96752930]
[80.72799683 528.56536865]
[66.70659637 522.29675293]
[57.71102524 509.84780884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[8 198]
[9 197]
[10 196]
[11 195]
[23 194]
[24 193]
[26 191]
[27 190]
[32 189]
[33 188]
[34 187]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 169]
[43 168]
[44 167]
[46 166]
[47 165]
[48 164]
[50 162]
[51 161]
[52 160]
[53 159]
[55 156]
[56 155]
[57 154]
[59 153]
[60 152]
[61 151]
[62 150]
[69 143]
[70 142]
[71 141]
[72 140]
[73 133]
[74 132]
[75 131]
[76 130]
[88 118]
[89 117]
[90 116]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
