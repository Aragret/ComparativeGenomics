%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[196.18408203 424.20553589]
[203.51966858 411.09039307]
[212.68673706 399.18313599]
[223.48988342 388.73754883]
[235.69885254 379.97634888]
[228.81944275 366.64691162]
[221.94003296 353.31747437]
[215.06062317 339.98806763]
[202.34794617 332.22677612]
[202.89439392 316.41500854]
[196.01498413 303.08557129]
[189.13557434 289.75616455]
[184.93894958 287.47637939]
[182.12989807 282.53610229]
[182.25646973 275.92587280]
[175.77696228 262.39752197]
[169.19694519 248.91778564]
[162.51675415 235.48739624]
[155.83654785 222.05702209]
[149.15635681 208.62664795]
[142.47616577 195.19627380]
[135.79597473 181.76589966]
[124.43180847 177.62072754]
[118.75651550 166.48632812]
[122.29845428 154.08401489]
[115.81896210 140.55566406]
[109.33946228 127.02732086]
[101.48770905 114.24647522]
[88.64146423 108.72691345]
[86.61766052 94.89232635]
[77.47885895 82.99768829]
[68.34005737 71.10305786]
[59.20125198 59.20842743]
[50.06245041 47.31379318]
[45.55510330 61.62056732]
[31.61500359 67.15894318]
[18.51827431 59.84624100]
[15.91933537 45.07310486]
[25.73402977 33.72974777]
[40.72585678 34.17731476]
[32.49705124 21.63591194]
[31.15693474 36.57592773]
[22.03666878 48.48477936]
[7.96226597 53.67238235]
[-6.70516682 50.53129578]
[-17.42076492 40.03482056]
[-20.86418533 25.43540955]
[-15.96844673 11.25684261]
[-4.25054550 1.89250648]
[10.65859795 0.24404147]
[24.13941574 6.82241583]
[17.65991974 -6.70592976]
[11.18042374 -20.23427582]
[4.70092773 -33.76262283]
[-8.23847485 -42.86660004]
[-6.75803661 -57.68745041]
[-13.23753262 -71.21579742]
[-19.71702766 -84.74414062]
[-32.65642929 -93.84812164]
[-31.17599297 -108.66896820]
[-44.11539459 -117.77294922]
[-42.63495636 -132.59379578]
[-58.06474304 -142.64382935]
[-56.03450012 -160.07498169]
[-62.71469498 -173.50535583]
[-69.39488983 -186.93574524]
[-76.07508087 -200.36611938]
[-90.29708862 -195.52690125]
[-105.03721619 -192.62654114]
[-120.03240967 -191.71679688]
[-135.01506042 -192.81388855]
[-149.71778870 -195.89825439]
[-163.87820435 -200.91484070]
[-177.24359131 -207.77412415]
[-189.57543945 -216.35368347]
[-200.65367126 -226.50042725]
[-210.28057861 -238.03324890]
[-218.28436279 -250.74635315]
[-224.52218628 -264.41284180]
[-228.88272095 -278.78884888]
[-231.28814697 -293.61776733]
[-231.69554138 -308.63500977]
[-230.09764099 -323.57254028]
[-226.52294922 -338.16381836]
[-221.03527832 -352.14840698]
[-213.73254395 -365.27676392]
[-204.74507141 -377.31457520]
[-194.23327637 -388.04702759]
[-182.38471985 -397.28256226]
[-169.41088867 -404.85641479]
[-155.54328918 -410.63336182]
[-141.02941895 -414.51031494]
[-126.12828064 -416.41812134]
[-111.10581970 -416.32272339]
[-96.23012543 -414.22579956]
[-81.76666260 -410.16479492]
[-67.97356415 -404.21218872]
[-55.09696579 -396.47418213]
[-43.36668015 -387.08886719]
[-32.99203873 -376.22378540]
[-24.15819740 -364.07278442]
[-17.02280045 -350.85275269]
[-11.71318817 -336.79956055]
[-8.32411957 -322.16409302]
[-6.91607380 -307.20745850]
[-7.51418066 -292.19659424]
[-10.10776520 -277.39941406]
[-14.65054226 -263.07995605]
[-21.06144142 -249.49378967]
[-29.22605133 -236.88337708]
[-38.99866486 -225.47375488]
[-50.20487976 -215.46855164]
[-62.64470673 -207.04631042]
[-55.96451569 -193.61593628]
[-49.28432083 -180.18556213]
[-42.60412598 -166.75518799]
[-31.23996544 -162.61000061]
[-25.56467056 -151.47561646]
[-29.10661125 -139.07328796]
[-16.63066673 -130.93695068]
[-17.64764786 -115.14846802]
[-5.17170191 -107.01212311]
[-6.18868303 -91.22364044]
[0.29081288 -77.69528961]
[6.77030897 -64.16694641]
[19.24625397 -56.03060532]
[18.22927284 -40.24211502]
[24.70876884 -26.71377182]
[31.18826485 -13.18542576]
[37.66775894 0.34291977]
[45.03844833 13.40710545]
[53.26725769 25.94850540]
[61.95708084 38.17499161]
[71.09588623 50.06962204]
[80.23468781 61.96425629]
[89.37348938 73.85888672]
[98.51229095 85.75352478]
[111.35853577 91.27308655]
[113.38233948 105.10767365]
[111.55227661 90.21973419]
[115.48477173 75.74439240]
[124.59647369 63.82898712]
[137.53572083 56.24109650]
[152.38302612 54.10633850]
[166.93591309 57.74139023]
[179.03552246 66.60701752]
[186.88697815 79.38805389]
[189.32553101 94.18850708]
[185.98944092 108.81282043]
[177.37362671 121.09156036]
[164.75614929 129.20326233]
[150.00877380 131.94458008]
[135.31916809 128.90887451]
[122.86780548 120.54782104]
[129.34730530 134.07617188]
[135.82679749 147.60452271]
[151.25659180 157.65455627]
[149.22634888 175.08570862]
[155.90653992 188.51608276]
[162.58673096 201.94645691]
[169.26692200 215.37683105]
[175.94712830 228.80720520]
[182.62731934 242.23757935]
[189.25106812 248.52755737]
[189.30531311 255.91801453]
[195.78480530 269.44635010]
[202.46501160 282.87673950]
[209.34442139 296.20617676]
[216.22383118 309.53558350]
[229.42855835 318.25027466]
[228.39004517 333.10864258]
[235.26945496 346.43807983]
[242.14886475 359.76748657]
[249.02828979 373.09692383]
[263.24246216 368.22097778]
[278.01513672 365.46667480]
[293.03140259 364.89273071]
[307.97122192 366.51138306]
[322.51611328 370.28814697]
[336.35607910 376.14248657]
[349.19610596 383.94964600]
[360.76251221 393.54318237]
[370.80874634 404.71862793]
[379.12069702 417.23779297]
[385.52117920 430.83380127]
[389.87377930 445.21688843]
[392.08569336 460.08044434]
[392.10980225 475.10766602]
[389.94558716 489.97824097]
[385.63919067 504.37521362]
[379.28234863 517.99169922]
[371.01062012 530.53747559]
[361.00027466 541.74505615]
[349.46472168 551.37567139]
[336.64981079 559.22399902]
[322.82870483 565.12274170]
[308.29598999 568.94610596]
[293.36148071 570.61273193]
[278.34344482 570.08697510]
[263.56201172 567.38006592]
[249.33224487 562.54980469]
[235.95747375 555.69897461]
[223.72277832 546.97375488]
[212.88891602 536.55999756]
[203.68684387 524.67980957]
[196.31268311 511.58630371]
[190.92362976 497.55862427]
[187.63452148 482.89575195]
[186.51550293 467.91024780]
[187.59040833 452.92150879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[7 172]
[8 171]
[10 169]
[11 168]
[12 167]
[15 166]
[16 165]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[25 156]
[26 155]
[27 154]
[28 139]
[30 137]
[31 136]
[32 135]
[33 134]
[34 133]
[40 132]
[41 131]
[51 130]
[52 129]
[53 128]
[54 127]
[56 125]
[57 124]
[58 123]
[60 121]
[62 119]
[64 116]
[65 115]
[66 114]
[67 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
