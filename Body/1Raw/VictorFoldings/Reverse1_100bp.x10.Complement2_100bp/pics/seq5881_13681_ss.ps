%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[58.37659454 536.21197510]
[61.35774231 521.44006348]
[67.66571808 507.75405884]
[76.96034241 495.89208984]
[88.74037170 486.49380493]
[102.37051392 480.06607056]
[99.26640320 465.39074707]
[96.16229248 450.71545410]
[93.05818176 436.04016113]
[89.95407104 421.36483765]
[75.47946167 412.80187988]
[71.60016632 396.09063721]
[81.19245911 381.46163940]
[77.87020111 366.83419800]
[74.54794312 352.20672607]
[70.75888062 366.72027588]
[62.91131973 379.50369263]
[51.68415451 389.45108032]
[38.04864502 395.70190430]
[23.18439865 397.71542358]
[8.37732124 395.31738281]
[-5.09162474 388.71530151]
[-16.05724144 378.48031616]
[-23.57089424 365.49783325]
[-26.98257637 350.89096069]
[-25.99714470 335.92337036]
[-20.69984627 321.88989258]
[-11.54895210 310.00454712]
[0.66389483 301.29556274]
[14.88216019 296.51635742]
[29.87582207 296.08035278]
[44.34777832 300.02526855]
[57.04606247 308.00985718]
[66.87213898 319.34335327]
[72.97502136 333.04190063]
[73.86783600 318.06851196]
[74.76065063 303.09509277]
[75.65347290 288.12170410]
[73.59912872 285.25604248]
[72.83073425 281.25296021]
[73.86775208 276.72772217]
[76.93524933 272.50424194]
[78.49576569 257.58566284]
[80.05628967 242.66705322]
[72.05720520 227.04713440]
[82.99700165 212.23489380]
[84.33523560 197.29470825]
[76.10448456 181.79562378]
[86.82253265 166.82215881]
[87.93817902 151.86370850]
[85.30087280 144.95960999]
[89.18342590 136.69137573]
[90.52165985 121.75119781]
[91.85989380 106.81101227]
[92.30649567 91.81766510]
[91.85989380 76.82431030]
[91.41328430 61.83096313]
[90.96668243 46.83761215]
[90.52007294 31.84426117]
[90.07347107 16.85091209]
[81.92871857 3.28722620]
[89.28364563 -9.66477108]
[76.33359528 -21.42553520]
[75.90445709 -38.57577515]
[87.77352905 -50.49063873]
[87.10374451 -65.47567749]
[86.43395233 -80.46071625]
[82.92447662 -88.89406586]
[85.86743164 -95.67350769]
[84.86317444 -110.63984680]
[83.30265045 -125.55845642]
[81.74212646 -140.47706604]
[80.18160248 -155.39566040]
[68.12754059 -158.42546082]
[57.60495377 -164.99418640]
[49.62071228 -174.45565796]
[44.93336868 -185.88771057]
[43.98110199 -198.18212891]
[46.84080505 -210.15208435]
[53.22209549 -220.64663696]
[62.49674606 -228.66148376]
[73.76049042 -233.43499756]
[72.86767578 -248.40840149]
[71.97486115 -263.38180542]
[71.08203888 -278.35522461]
[70.18922424 -293.32861328]
[68.85099030 -308.26879883]
[67.06852722 -323.16253662]
[62.94152451 -331.31149292]
[65.37210083 -338.29104614]
[63.81157303 -353.20965576]
[62.25105286 -368.12826538]
[47.41847610 -371.04135132]
[34.10430527 -378.19845581]
[23.49242401 -388.96319580]
[16.52643967 -402.37835693]
[13.82575893 -417.25106812]
[15.63052464 -432.25888062]
[21.78026009 -446.06726074]
[31.72813225 -457.44845581]
[44.58958435 -465.39041138]
[59.22098541 -469.18692017]
[74.32131958 -468.50039673]
[88.54788208 -463.39193726]
[100.63564301 -454.31573486]
[109.50978088 -442.07885742]
[114.38120270 -427.76940918]
[114.81675720 -412.65975952]
[110.77770233 -398.09344482]
[102.62319183 -385.36569214]
[91.07832336 -375.60827637]
[77.16965485 -369.68878174]
[78.73017883 -354.77017212]
[80.29070282 -339.85156250]
[81.96224213 -324.94500732]
[83.74470520 -310.05126953]
[85.86248779 -308.21466064]
[87.38037109 -305.42849731]
[87.93303680 -301.91711426]
[87.24304199 -298.03271484]
[85.16262817 -294.22143555]
[86.05545044 -279.24804688]
[86.94826508 -264.27462769]
[87.84107971 -249.30122375]
[88.73389435 -234.32781982]
[105.34341431 -228.22537231]
[117.64575958 -215.43293762]
[123.12766266 -198.49696350]
[120.64001465 -180.81706238]
[110.63832092 -165.96345520]
[95.10021210 -156.95619202]
[96.66072845 -142.03758240]
[98.22125244 -127.11898041]
[99.78177643 -112.20037079]
[111.11117554 -122.03117371]
[125.88799286 -119.45323944]
[133.21929932 -106.36691284]
[127.70073700 -92.41895294]
[113.40038300 -87.89128113]
[100.86078644 -96.12010956]
[101.41899109 -81.13050079]
[102.08878326 -66.14546204]
[102.75856781 -51.16042328]
[113.39061737 -43.88106537]
[117.95688629 -31.62418175]
[114.58035278 -18.78636932]
[104.27700043 -10.11137772]
[112.38980865 2.37988377]
[105.06681824 16.40430641]
[105.51342010 31.39765549]
[105.96002960 46.39100647]
[106.40663910 61.38435745]
[106.85324097 76.37770844]
[107.29985046 91.37105560]
[116.83433533 79.79118347]
[131.32501221 75.91557312]
[145.36720276 81.18972778]
[153.72352600 93.64653015]
[153.27728271 108.63989258]
[144.19490051 120.57765961]
[129.86389160 125.00734711]
[115.62935638 120.27677917]
[106.80007935 108.14924622]
[105.46184540 123.08943176]
[104.12361145 138.02961731]
[102.89662933 152.97935486]
[101.78098297 167.93780518]
[109.59097290 178.20263672]
[108.35379791 190.63859558]
[99.27542114 198.63294983]
[97.93718719 213.57313538]
[105.59348297 223.95310974]
[104.17129517 236.36927795]
[94.97489929 244.22756958]
[93.41437531 259.14617920]
[91.85385132 274.06478882]
[90.62687683 289.01452637]
[89.73406219 303.98791504]
[88.84123993 318.96133423]
[87.94842529 333.93472290]
[89.17539978 348.88446045]
[92.49766541 363.51193237]
[95.81992340 378.13937378]
[107.96737671 383.95779419]
[114.45117188 395.54101562]
[113.09976196 408.55084229]
[104.62937927 418.26074219]
[107.73348236 432.93603516]
[110.83759308 447.61135864]
[113.94170380 462.28665161]
[117.04581451 476.96194458]
[132.11129761 477.32000732]
[146.68794250 481.14334106]
[159.98966980 488.22576904]
[171.29914856 498.18533325]
[180.00643921 510.48489380]
[185.64198303 524.46124268]
[187.90187073 539.36053467]
[186.66421509 554.37933350]
[181.99577332 568.70770264]
[174.14830017 581.57293701]
[163.54501343 592.28118896]
[150.75770569 600.25500488]
[136.47601318 605.06439209]
[121.47011566 606.44995117]
[106.54926300 604.33691406]
[92.51811218 598.83929443]
[80.13335419 590.25360107]
[70.06288147 579.04278564]
[62.84978104 565.81146240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[13 183]
[14 182]
[15 181]
[35 180]
[36 179]
[37 178]
[38 177]
[42 176]
[43 175]
[44 174]
[46 171]
[47 170]
[49 167]
[50 166]
[52 165]
[53 164]
[54 163]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 149]
[62 147]
[65 143]
[66 142]
[67 141]
[69 140]
[70 134]
[71 133]
[72 132]
[73 131]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 116]
[88 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
