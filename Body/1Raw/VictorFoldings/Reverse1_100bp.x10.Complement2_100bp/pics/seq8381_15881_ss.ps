%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[0.85933405 630.37902832]
[3.89099622 645.27459717]
[0.98669863 660.19549561]
[-7.41067410 672.86645508]
[-20.02058411 681.35516357]
[-34.92011261 684.36724854]
[-49.83718491 681.44329834]
[-62.49706268 673.02929688]
[-70.96920013 660.40820312]
[-73.96166229 645.50476074]
[-71.01811981 630.59155273]
[-62.58744049 617.94274902]
[-49.95524216 609.48718262]
[-35.04784012 606.51434326]
[-32.16257095 591.79443359]
[-29.27729607 577.07458496]
[-26.39202499 562.35467529]
[-23.50675201 547.63476562]
[-25.30494690 540.46624756]
[-20.46738815 532.71795654]
[-17.36327744 518.04266357]
[-14.25916767 503.36734009]
[-11.15505791 488.69204712]
[-21.30867195 483.36013794]
[-29.89932442 475.74456787]
[-36.42359543 466.28402710]
[-40.49734879 455.52560425]
[-41.87834930 444.09298706]
[-40.48065186 432.65051270]
[-36.37993622 421.86434937]
[-29.80942345 412.36395264]
[-21.14662743 404.70504761]
[-10.89165974 399.33737183]
[0.36163700 396.57815552]
[11.96007538 396.59338379]
[16.14708710 382.18957520]
[20.33409691 367.78579712]
[24.52110863 353.38201904]
[28.70812035 338.97824097]
[14.69410706 331.61132812]
[2.50142121 321.50314331]
[-7.34179688 309.08859253]
[-14.40857124 294.90252686]
[-18.39161110 279.55676270]
[-19.11666679 263.71365356]
[-16.55015945 248.05743408]
[-10.80072784 233.26481628]
[-2.11462474 219.97561646]
[9.13482285 208.76515198]
[22.46325874 200.11926270]
[37.29615784 194.41334534]
[52.99357986 191.89599609]
[68.87779999 192.67817688]
[72.63409424 178.15612793]
[76.39039612 163.63406372]
[80.14669800 149.11199951]
[74.55319214 132.47831726]
[87.56921387 119.45277405]
[91.10888672 104.87640381]
[89.79956818 96.92289734]
[94.81128693 90.11015320]
[98.56758881 75.58809662]
[86.22400665 69.01867676]
[75.66584015 59.86296082]
[67.42443085 48.58634949]
[61.91349411 35.76085663]
[59.40834808 22.03610229]
[60.03215790 8.10639954]
[63.74989319 -5.32436562]
[70.37026978 -17.57830429]
[79.55559540 -28.03773499]
[90.83898163 -36.17632675]
[103.64808655 -41.58557510]
[117.33414459 -43.99531555]
[131.20481873 -43.28720474]
[135.39183044 -57.69098663]
[139.57884216 -72.09476471]
[138.37617493 -78.59593201]
[140.34213257 -83.92810059]
[144.11088562 -86.86161041]
[148.72489929 -101.13434601]
[153.33891296 -115.40708160]
[157.31100464 -129.87159729]
[160.63327026 -144.49906921]
[163.95552063 -159.12652588]
[167.27778625 -173.75398254]
[170.60005188 -188.38143921]
[171.38136292 -203.36108398]
[169.59890747 -218.25480652]
[167.81643677 -233.14851379]
[166.03396606 -248.04223633]
[151.13504028 -250.53189087]
[137.54162598 -257.11947632]
[126.35572052 -267.27090454]
[118.48408508 -280.16333008]
[114.56484985 -294.75155640]
[114.91572571 -309.85299683]
[119.50827026 -324.24343872]
[127.97019196 -336.75634766]
[139.61550903 -346.37731934]
[153.50019836 -352.32644653]
[168.49868774 -354.12145996]
[183.39511108 -351.61682129]
[196.98188782 -345.01559448]
[208.15760803 -334.85290527]
[216.01628113 -321.95260620]
[219.92085266 -307.36044312]
[219.55480957 -292.25936890]
[214.94781494 -277.87353516]
[206.47332764 -265.36914062]
[194.81834412 -255.75987244]
[180.92768860 -249.82470703]
[182.71015930 -234.93098450]
[184.49261475 -220.03726196]
[186.27508545 -205.14355469]
[191.31440735 -219.27171326]
[199.66653442 -231.73132324]
[210.82075500 -241.76046753]
[224.09495544 -248.74584961]
[238.67742920 -252.26029968]
[253.67645264 -252.08894348]
[268.17483521 -248.24221802]
[281.28594971 -240.95538330]
[292.20812988 -230.67402649]
[300.27340698 -218.02684021]
[304.98861694 -203.78721619]
[306.06542969 -188.82592773]
[303.43795776 -174.05783081]
[297.26693726 -160.38603210]
[287.92968750 -148.64653015]
[275.99716187 -139.55725098]
[262.19909668 -133.67396545]
[247.37919617 -131.35644531]
[232.44374084 -132.74642944]
[218.30601501 -137.75889587]
[205.83056641 -146.08734131]
[195.78025818 -157.22247314]
[188.76966858 -170.48338318]
[185.22750854 -185.05918884]
[181.90524292 -170.43173218]
[178.58299255 -155.80426025]
[175.26072693 -141.17680359]
[171.93846130 -126.54934692]
[185.17492676 -133.60597229]
[199.56387329 -129.36827087]
[206.86267090 -116.26378632]
[202.89022827 -101.79936218]
[189.92214966 -94.26087189]
[175.38713074 -97.96671295]
[167.61164856 -110.79306793]
[162.99763489 -96.52033997]
[158.38362122 -82.24760437]
[153.98263550 -67.90775299]
[149.79562378 -53.50397491]
[145.60861206 -39.10019302]
[159.45304871 -30.94187164]
[170.73272705 -19.48148537]
[178.68058777 -5.49048424]
[182.75413513 10.08732986]
[182.67242432 26.19946861]
[178.43544006 41.75586700]
[170.32449341 55.70262909]
[158.88352966 67.09342957]
[144.88267517 75.15372467]
[129.26635742 79.33341980]
[113.08965302 79.34439087]
[109.33335114 93.86645508]
[105.68526459 108.41607666]
[102.14559174 122.99244690]
[108.17740631 134.39332581]
[104.92911530 146.46115112]
[94.66875458 152.86830139]
[90.91246033 167.39036560]
[87.15615845 181.91242981]
[83.39985657 196.43447876]
[96.21660614 202.56005859]
[107.67678070 210.94664001]
[117.38635254 221.30392456]
[125.01185608 233.27386475]
[130.29180908 246.44308472]
[133.04570007 260.35714722]
[133.18020630 274.53622437]
[130.69223022 288.49160767]
[125.66909790 301.74261475]
[118.28540039 313.83316040]
[108.79695129 324.34738159]
[97.53192902 332.92395020]
[84.87953186 339.26855469]
[71.27651978 343.16397095]
[57.19212341 344.47741699]
[43.11190033 343.16525269]
[38.92489243 357.56903076]
[34.73788071 371.97280884]
[30.55086899 386.37658691]
[26.36385727 400.78039551]
[41.42323685 412.00146484]
[51.01767731 428.10775757]
[53.70461273 446.62844849]
[49.09889221 464.73361206]
[37.92774582 479.66644287]
[21.91609383 489.16314697]
[3.52024460 491.79614258]
[0.41613442 506.47146606]
[-2.68797565 521.14672852]
[-5.79208565 535.82208252]
[-8.78686047 550.52008057]
[-11.67213249 565.23992920]
[-14.55740547 579.95983887]
[-17.44267845 594.67974854]
[-20.32795143 609.39959717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[20 205]
[21 204]
[22 203]
[23 202]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[53 175]
[54 174]
[55 173]
[56 172]
[58 169]
[59 168]
[61 167]
[62 166]
[75 155]
[76 154]
[77 153]
[80 152]
[81 151]
[82 150]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
