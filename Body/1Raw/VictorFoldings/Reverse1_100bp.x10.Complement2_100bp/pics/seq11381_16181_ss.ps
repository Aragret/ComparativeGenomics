%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[180.20889282 412.55261230]
[182.00413513 397.64730835]
[185.29812622 383.00012207]
[190.05706787 368.76132202]
[196.23214722 355.07702637]
[203.75996399 342.08767700]
[212.56327820 329.92657471]
[222.55177307 318.71850586]
[233.62292480 308.57846069]
[224.66223145 296.54907227]
[215.70153809 284.51971436]
[206.74084473 272.49032593]
[197.78015137 260.46093750]
[195.02911377 259.92245483]
[192.32562256 258.26181030]
[190.09817505 255.49163818]
[188.76274109 251.77934265]
[188.66955566 247.43821716]
[180.44075012 234.89682007]
[172.21194458 222.35542297]
[158.76081848 215.95881653]
[157.65933228 200.17601013]
[149.43051147 187.63459778]
[141.20170593 175.09320068]
[132.97290039 162.55180359]
[116.37524414 159.83950806]
[106.68388367 145.68350220]
[110.29887390 128.56768799]
[101.88425446 116.15019226]
[90.60017395 113.26734161]
[84.13873291 103.57759857]
[85.81501007 92.05235291]
[77.58620453 79.51095581]
[69.35739136 66.96955109]
[61.12858582 54.42815399]
[52.89977646 41.88675308]
[38.30667496 45.82360840]
[23.23164368 45.05816650]
[9.15038681 39.67796326]
[-2.56256318 30.22165108]
[-10.76802635 17.62510681]
[-14.67296124 3.12881613]
[-13.90709400 -11.84427834]
[-8.55799770 -25.82845879]
[0.83872235 -37.45870590]
[-7.39008570 -50.00010681]
[-15.61889362 -62.54150772]
[-22.94315147 -67.99980927]
[-23.87523460 -75.33145142]
[-31.91640663 -87.99398041]
[-39.95758057 -100.65650177]
[-47.99875259 -113.31903076]
[-56.03992462 -125.98155212]
[-64.08110046 -138.64407349]
[-63.01379395 -123.68209839]
[-66.79877472 -109.16748810]
[-75.03659821 -96.63200378]
[-86.85791016 -87.39855194]
[-101.01517487 -82.44156647]
[-116.01435089 -82.28414917]
[-130.27253723 -86.94293213]
[-142.28501892 -95.92625427]
[-150.78411865 -108.28608704]
[-154.87287903 -122.71807098]
[-154.11981201 -137.69915771]
[-148.60440063 -151.64836121]
[-138.90869141 -163.09358215]
[-126.05588531 -170.82698059]
[-111.40238953 -174.03244019]
[-96.49460602 -172.37168884]
[-82.90579987 -166.01997375]
[-72.06991577 -155.64744568]
[-76.68392181 -169.92018127]
[-81.29792786 -184.19291687]
[-85.91194153 -198.46565247]
[-90.52594757 -212.73838806]
[-95.13996124 -227.01110840]
[-99.75396729 -241.28384399]
[-114.66163635 -239.28353882]
[-129.68688965 -239.97744751]
[-144.34672546 -243.34327698]
[-158.16990662 -249.27281189]
[-170.71206665 -257.57546997]
[-181.57002258 -267.98434448]
[-190.39472961 -280.16482544]
[-196.90252686 -293.72537231]
[-200.88420105 -308.23007202]
[-202.21177673 -323.21264648]
[-200.84255981 -338.19146729]
[-196.82055664 -352.68502808]
[-190.27508545 -366.22741699]
[-181.41654968 -378.38333130]
[-170.52969360 -388.76196289]
[-157.96450806 -397.02972412]
[-144.12489319 -402.92080688]
[-129.45574951 -406.24588013]
[-114.42862701 -406.89801025]
[-99.52658081 -404.85626221]
[-85.22865295 -400.18624878]
[-71.99446106 -393.03811646]
[-60.24942398 -383.64160156]
[-50.37110901 -372.29882812]
[-42.67705536 -359.37438965]
[-37.41459274 -345.28375244]
[-34.75289536 -330.47985840]
[-34.77751923 -315.43859863]
[-37.48767471 -300.64352417]
[-42.79624176 -286.57015991]
[-50.53256989 -273.67098999]
[-60.44797134 -262.36062622]
[-72.22370911 -253.00262451]
[-85.48123169 -245.89785767]
[-80.86722565 -231.62512207]
[-76.25321198 -217.35238647]
[-71.63920593 -203.07965088]
[-67.02519989 -188.80693054]
[-62.41118622 -174.53419495]
[-57.79718018 -160.26145935]
[-51.41857529 -146.68525696]
[-43.37739944 -134.02272034]
[-35.33622742 -121.36019897]
[-27.29505539 -108.69767761]
[-19.25388145 -96.03514862]
[-11.21270847 -83.37262726]
[-3.07749295 -70.77031708]
[5.15131474 -58.22891235]
[13.38012218 -45.68751526]
[27.78988838 -49.67745209]
[42.74763870 -49.01723480]
[56.78795624 -43.75894165]
[68.53141022 -34.40575409]
[76.82009888 -21.86381531]
[80.83178711 -7.35445786]
[80.16145325 7.70472622]
[74.86219025 21.83838463]
[65.44117737 33.65794373]
[73.66998291 46.19934464]
[81.89879608 58.74074554]
[90.12760162 71.28214264]
[98.35640717 83.82354736]
[113.52787781 90.97915649]
[114.30175018 107.73557281]
[122.71636963 120.15306854]
[136.14805603 121.15512848]
[146.40055847 129.58702087]
[149.87324524 142.19743347]
[145.51429749 154.32299805]
[153.74310303 166.86439514]
[161.97192383 179.40579224]
[170.20072937 191.94718933]
[184.24043274 199.24084473]
[184.75334167 214.12661743]
[192.98214722 226.66801453]
[201.21095276 239.20941162]
[209.80952454 251.50025940]
[218.77021790 263.52963257]
[227.73091125 275.55902100]
[236.69160461 287.58837891]
[245.65231323 299.61776733]
[258.53735352 291.91281128]
[272.13580322 285.55093384]
[286.30810547 280.59747314]
[300.90884399 277.10324097]
[315.78817749 275.10409546]
[330.79339600 274.62051392]
[345.77056885 275.65753174]
[360.56597900 278.20443726]
[375.02783203 282.23513794]
[389.00765991 287.70822144]
[402.36206055 294.56759644]
[414.95401001 302.74282837]
[426.65423584 312.15005493]
[437.34271240 322.69268799]
[446.90972900 334.26260376]
[455.25717163 346.74102783]
[462.29931641 359.99996948]
[467.96395874 373.90332031]
[472.19290161 388.30841064]
[474.94281006 403.06744385]
[476.18542480 418.02896118]
[475.90805054 433.03942871]
[474.11346436 447.94479370]
[470.82009888 462.59216309]
[466.06176758 476.83117676]
[459.88732910 490.51571655]
[452.36007690 503.50540161]
[443.55728149 515.66687012]
[433.56927490 526.87542725]
[422.49856567 537.01593018]
[410.45874023 545.98443604]
[397.57336426 553.68884277]
[383.97463989 560.05004883]
[369.80209351 565.00292969]
[355.20123291 568.49652100]
[340.32180786 570.49499512]
[325.31655884 570.97790527]
[310.33941650 569.94024658]
[295.54412842 567.39270020]
[281.08245850 563.36138916]
[267.10287476 557.88763428]
[253.74876404 551.02770996]
[241.15719604 542.85192871]
[229.45738220 533.44415283]
[218.76936340 522.90106201]
[209.20283508 511.33071899]
[200.85595703 498.85192871]
[193.81439209 485.59268188]
[188.15037537 471.68908691]
[183.92205811 457.28381348]
[181.17279053 442.52465820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[18 154]
[19 153]
[20 152]
[22 150]
[23 149]
[24 148]
[25 147]
[28 143]
[29 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[45 127]
[46 126]
[47 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
