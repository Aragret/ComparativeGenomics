%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[160.18257141 454.50466919]
[173.15576172 446.76690674]
[169.39945984 432.24484253]
[165.64315796 417.72277832]
[161.88685608 403.20071411]
[158.13055420 388.67864990]
[153.41220093 382.99017334]
[154.42814636 373.91241455]
[150.88847351 359.33602905]
[146.80880737 344.90148926]
[142.19480896 330.62875366]
[137.58079529 316.35601807]
[132.96678162 302.08328247]
[128.35276794 287.81054688]
[120.57653046 300.63748169]
[106.04132843 304.34262085]
[93.07360840 296.80349731]
[89.10186005 282.33889771]
[96.40128326 269.23474121]
[110.79043579 264.99774170]
[124.02595520 272.05429077]
[120.70368958 257.42681885]
[117.38143158 242.79936218]
[114.05917358 228.17189026]
[103.97825623 239.27932739]
[88.99980164 238.47560120]
[80.16537476 226.35317993]
[83.98738098 211.84828186]
[97.64838409 205.65336609]
[111.07698059 212.33378601]
[108.74149323 197.51672363]
[106.29576111 182.71745300]
[103.85003662 167.91818237]
[101.40431213 153.11891174]
[98.95858002 138.31964111]
[96.51285553 123.52037048]
[93.95702362 108.73971558]
[90.30893707 94.19009399]
[85.69492340 79.91735840]
[81.08091736 65.64463043]
[76.46690369 51.37189484]
[71.85289764 37.09915924]
[67.23889160 22.82642746]
[62.62487793 8.55369377]
[51.01777649 -2.19738626]
[54.46501923 -16.68758202]
[49.85101318 -30.96031570]
[46.52694321 -33.75397491]
[44.47148514 -37.12141037]
[43.70923996 -40.59335327]
[44.10987473 -43.74074936]
[45.41467285 -46.22180557]
[41.65837479 -60.74386597]
[37.30418396 -65.71906281]
[36.27125168 -71.30744934]
[38.01330185 -75.75428009]
[34.69104004 -90.38174438]
[31.36878204 -105.00920105]
[26.96778297 -119.34905243]
[21.51242638 -133.32185364]
[10.03461075 -139.20594788]
[5.77849007 -150.95622253]
[10.51289654 -162.08779907]
[5.26617861 -176.14027405]
[0.01946035 -190.19274902]
[-5.22725773 -204.24520874]
[-10.47397614 -218.29768372]
[-13.68010235 -203.64433289]
[-22.85825729 -191.78004456]
[-36.23628235 -184.99562073]
[-51.23109436 -184.60102844]
[-64.94742584 -190.67245483]
[-74.73686218 -202.03761292]
[-78.70922852 -216.50205994]
[-76.09751892 -231.27294922]
[-67.40601349 -243.49822998]
[-54.31290054 -250.81741333]
[-39.34626389 -251.81727600]
[-25.39591789 -246.30474854]
[-15.15481853 -235.34313965]
[-17.82061386 -250.10435486]
[-20.48641014 -264.86557007]
[-23.15220451 -279.62677002]
[-25.81800079 -294.38800049]
[-35.88469315 -306.59341431]
[-30.53244972 -320.49316406]
[-33.19824600 -335.25436401]
[-48.24413300 -336.19494629]
[-62.62751007 -340.70959473]
[-75.51214600 -348.53579712]
[-86.14894104 -359.21859741]
[-93.91949463 -372.13687134]
[-98.37202454 -386.53958130]
[-99.24768066 -401.58938599]
[-96.49554443 -416.41131592]
[-90.27561951 -430.14361572]
[-80.94953156 -441.98791504]
[-69.05947876 -451.25561523]
[-55.29674149 -457.40786743]
[-40.46146393 -460.08703613]
[-25.41614723 -459.13735962]
[-11.03551006 -454.61401367]
[1.84437788 -446.77996826]
[12.47469711 -436.09072876]
[20.23741341 -423.16775513]
[24.68121529 -408.76232910]
[25.54774284 -393.71200562]
[22.78661919 -378.89175415]
[16.55837250 -365.16323853]
[7.22510338 -353.32458496]
[-4.67056274 -344.06408691]
[-18.43702698 -337.92016602]
[-15.77123260 -323.15896606]
[-5.89521408 -312.00936890]
[-11.05678272 -297.05380249]
[-8.39098740 -282.29257202]
[-5.72519207 -267.53137207]
[-3.05939651 -252.77014160]
[-0.39360097 -238.00892639]
[3.57849526 -223.54440308]
[8.82521343 -209.49192810]
[14.07193184 -195.43946838]
[19.31864929 -181.38699341]
[24.56536865 -167.33451843]
[38.68368530 -156.91146851]
[35.48522568 -138.77720642]
[40.94058228 -124.80440521]
[44.77908325 -139.30494690]
[55.28327179 -150.01298523]
[69.70736694 -154.12947083]
[84.28096008 -150.57833862]
[95.19453430 -140.28785706]
[99.59531403 -125.94794464]
[96.33294678 -111.30701447]
[86.26020813 -100.19216156]
[72.01008606 -95.50879669]
[57.30752563 -98.48112488]
[45.99624252 -108.33145905]
[49.31850052 -93.70400238]
[52.64076233 -79.07653809]
[56.18043137 -64.50016785]
[59.93673325 -49.97810745]
[64.12374115 -35.57432556]
[68.73775482 -21.30159187]
[80.01483154 -11.57139206]
[76.89761353 3.93968463]
[81.51161957 18.21241760]
[86.12563324 32.48515320]
[90.73963928 46.75788498]
[95.35365295 61.03061676]
[99.96765900 75.30335236]
[104.58166504 89.57608795]
[109.83015442 75.52427673]
[121.77838135 66.45565796]
[136.72406006 65.18023682]
[150.03611755 72.09322357]
[157.58964539 85.05254364]
[157.04412842 100.04262543]
[148.56857300 112.41860962]
[134.78924561 118.34568024]
[119.97581482 115.98726654]
[108.71823883 106.07392120]
[113.32295990 113.96279907]
[111.31212616 121.07463837]
[113.75785065 135.87391663]
[116.20358276 150.67318726]
[118.64930725 165.47245789]
[121.09503174 180.27172852]
[123.54076385 195.07099915]
[128.02751160 203.02755737]
[125.91102600 210.10867310]
[128.68663025 224.84963989]
[132.00889587 239.47709656]
[135.33114624 254.10455322]
[138.65341187 268.73202515]
[142.62550354 283.19653320]
[147.23951721 297.46926880]
[151.85353088 311.74200439]
[156.46752930 326.01473999]
[161.08154297 340.28747559]
[170.13130188 328.32495117]
[185.12173462 327.78918457]
[195.00244141 339.07507324]
[192.48974609 353.86312866]
[179.43589783 361.25210571]
[165.46485901 355.79635620]
[169.00453186 370.37274170]
[172.65261841 384.92236328]
[176.40892029 399.44442749]
[180.16522217 413.96649170]
[183.92150879 428.48852539]
[187.67781067 443.01058960]
[202.77580261 443.48742676]
[217.12745667 448.19985962]
[229.56933594 456.76583862]
[239.09283447 468.49102783]
[244.92593384 482.42483521]
[246.59576416 497.43777466]
[243.96697998 512.31280518]
[237.25265503 525.84405518]
[226.99710083 536.93457031]
[214.03169250 544.68542480]
[199.40747070 548.46813965]
[184.30996704 547.97613525]
[169.96305847 543.24926758]
[157.52980042 534.67077637]
[148.01808167 522.93603516]
[142.19897461 508.99636841]
[140.54421997 493.98178101]
[143.18797302 479.10940552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[8 187]
[9 186]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[21 175]
[22 174]
[23 173]
[24 172]
[30 171]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 162]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[46 144]
[47 143]
[52 142]
[53 141]
[56 140]
[57 139]
[58 138]
[59 127]
[60 126]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
