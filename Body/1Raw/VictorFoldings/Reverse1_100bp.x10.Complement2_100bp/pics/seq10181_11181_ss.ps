%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[146.66769409 421.52328491]
[155.53955078 409.35842896]
[166.74700928 399.30426025]
[179.80014038 391.80029297]
[175.18612671 377.52755737]
[170.57212830 363.25482178]
[165.95811462 348.98208618]
[161.34410095 334.70938110]
[155.57806396 320.86187744]
[148.69865417 307.53244019]
[135.98599243 299.77117920]
[136.53244019 283.95941162]
[129.65303040 270.62997437]
[122.77362061 257.30053711]
[115.89420319 243.97111511]
[116.07330322 258.97006226]
[112.41581726 273.51730347]
[105.16432190 286.64804077]
[94.79978943 297.49130249]
[82.00965881 305.32791138]
[67.64226532 309.63812256]
[52.65052795 310.13601685]
[38.02880859 306.78857422]
[24.74690628 299.81787109]
[13.68576527 289.68615723]
[5.57903004 277.06552124]
[0.96439213 262.79299927]
[0.14792311 247.81521606]
[3.18377662 233.12564087]
[9.87059498 219.69856262]
[19.76486588 208.42456055]
[32.21033859 200.05137634]
[46.38154984 195.13438416]
[61.33857346 193.99971008]
[76.08936310 196.72261047]
[89.65554810 203.12249756]
[101.13734436 212.77487183]
[109.77558136 225.04408264]
[107.55046082 210.21005249]
[105.32534790 195.37600708]
[103.10022736 180.54196167]
[100.87511444 165.70791626]
[91.33544159 154.26921082]
[96.94000244 139.47396851]
[94.33710480 137.09545898]
[92.75694275 133.33804321]
[92.83506012 128.69615173]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.38268280 49.42300415]
[84.60021973 34.52928543]
[82.81775665 19.63556862]
[81.03528595 4.74185181]
[79.25282288 -10.15186596]
[71.39945984 2.62798810]
[57.92998886 9.22900200]
[43.01807404 7.60577965]
[31.28433800 -1.73870540]
[26.36460114 -15.90896320]
[29.78330040 -30.51418495]
[40.48111343 -41.02878189]
[55.14320755 -44.19469452]
[69.22637177 -39.03092957]
[78.36688232 -27.13729668]
[78.59020996 -42.13563538]
[71.05922699 -56.04947281]
[78.98516083 -68.66014099]
[79.20848846 -83.65847778]
[79.43181610 -98.65681458]
[79.65514374 -113.65515137]
[68.92755890 -124.94924164]
[69.36769867 -140.15650940]
[80.20100403 -150.31402588]
[80.42433167 -165.31236267]
[80.64765930 -180.31069946]
[79.75484467 -195.28410339]
[77.75083160 -210.14962769]
[75.74681091 -225.01516724]
[73.74279785 -239.88069153]
[71.29707336 -254.67996216]
[68.41180420 -269.39984131]
[65.52652740 -284.11975098]
[62.64125443 -298.83963013]
[47.58278275 -299.42196655]
[33.06467056 -303.46191406]
[19.86985779 -310.74157715]
[8.70992851 -320.86840820]
[0.18672273 -333.29626465]
[-5.24011421 -347.35494995]
[-7.27791929 -362.28625488]
[-5.81679726 -377.28497314]
[-0.93554360 -391.54226685]
[7.10260153 -404.28921509]
[17.86415100 -414.83840942]
[30.76874733 -422.62097168]
[45.12046432 -427.21716309]
[60.14532852 -428.37911987]
[75.03306580 -426.04421997]
[88.98081207 -420.33831787]
[101.23636627 -411.56915283]
[111.13881683 -400.20965576]
[118.15412140 -386.87240601]
[121.90396881 -372.27667236]
[122.18611908 -357.20959473]
[118.98537445 -342.48370361]
[112.47432709 -328.89315796]
[103.00412750 -317.17086792]
[91.08547974 -307.94900513]
[77.36114502 -301.72491455]
[80.24642181 -287.00500488]
[83.13169098 -272.28512573]
[86.01696777 -257.56524658]
[88.26548004 -255.89122009]
[89.98638153 -253.22567749]
[90.79868317 -249.76510620]
[90.39950562 -245.84016418]
[88.60832977 -241.88470459]
[90.61234283 -227.01918030]
[92.61635590 -212.15364075]
[94.62036896 -197.28811646]
[101.77227783 -210.47334290]
[114.50667572 -218.40020752]
[129.49481201 -218.99665833]
[142.81883240 -212.10676575]
[150.99586487 -199.53155518]
[151.88844299 -184.55813599]
[145.26327515 -171.10052490]
[132.85214233 -162.67652893]
[117.89929199 -161.48814392]
[104.31336212 -167.84600830]
[95.64599609 -180.08737183]
[95.42266846 -165.08903503]
[95.19934082 -150.09069824]
[105.72541046 -139.61514282]
[105.71258545 -124.40151215]
[94.65348053 -113.43182373]
[94.43015289 -98.43348694]
[94.20682526 -83.43515015]
[93.98349762 -68.43681335]
[101.53044891 -55.59575272]
[93.58854675 -41.91230774]
[93.36521912 -26.91396904]
[94.14653778 -11.93433189]
[95.92900848 2.95938587]
[97.71147156 17.85310364]
[99.49393463 32.74681854]
[101.27640533 47.64053726]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.77404785 137.24884033]
[121.47287750 149.74858093]
[115.70915985 163.48280334]
[117.93427277 178.31684875]
[120.15939331 193.15087891]
[122.38450623 207.98492432]
[124.60962677 222.81896973]
[129.22363281 237.09170532]
[136.10304260 250.42114258]
[142.98245239 263.75054932]
[149.86187744 277.07998657]
[163.06660461 285.79467773]
[162.02809143 300.65304565]
[168.90750122 313.98248291]
[170.74194336 299.09506226]
[179.20875549 286.71310425]
[192.41644287 279.60275269]
[207.41435242 279.35244751]
[220.85192871 286.01815796]
[229.72717285 298.11071777]
[232.05734253 312.92861938]
[227.32185364 327.16152954]
[216.57865906 337.62973022]
[202.22778320 341.99465942]
[187.47526550 339.28112793]
[175.61683655 330.09536743]
[180.23085022 344.36810303]
[184.84486389 358.64083862]
[189.45886230 372.91354370]
[194.07287598 387.18627930]
[209.04850769 385.62927246]
[224.02055359 387.22027588]
[238.33451843 391.88977051]
[251.36465454 399.43356323]
[262.54135132 409.52197266]
[271.37597656 421.71386719]
[277.48233032 435.47634888]
[280.59350586 450.20776367]
[280.57345581 465.26409912]
[277.42306519 479.98718262]
[271.28009033 493.73333740]
[262.41299438 505.90170288]
[251.20950317 515.96026611]
[238.15931702 523.46936035]
[223.83296204 528.10070801]
[208.85673523 529.65185547]
[193.88529968 528.05493164]
[179.57316589 523.37982178]
[166.54600525 515.83087158]
[155.37329102 505.73812866]
[146.54345703 493.54272461]
[140.44250488 479.77783203]
[137.33712769 465.04519653]
[137.36309814 449.98889160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[9 170]
[10 169]
[12 167]
[13 166]
[14 165]
[15 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[44 157]
[48 156]
[49 155]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[67 145]
[68 144]
[70 142]
[71 141]
[72 140]
[73 139]
[76 136]
[77 135]
[78 134]
[79 123]
[80 122]
[81 121]
[82 120]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
