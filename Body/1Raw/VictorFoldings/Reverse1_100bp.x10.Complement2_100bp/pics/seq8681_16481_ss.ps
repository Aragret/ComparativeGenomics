%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[193.82102966 598.72631836]
[181.90371704 589.61163330]
[170.47142029 579.89550781]
[159.55445862 569.60375977]
[149.18177795 558.76367188]
[139.38088989 547.40393066]
[130.17778015 535.55474854]
[121.59685516 523.24755859]
[113.66087341 510.51489258]
[106.39086914 497.39056396]
[99.80613708 483.90942383]
[93.92412567 470.10717773]
[88.76043701 456.02041626]
[84.32875824 441.68652344]
[80.64085388 427.14349365]
[77.70649719 412.42990112]
[75.53347778 397.58477783]
[74.12754059 382.64743042]
[73.49242401 367.65756226]
[73.62981415 352.65484619]
[74.53934479 337.67907715]
[76.21860504 322.77001953]
[78.66313934 307.96716309]
[81.86646271 293.30978394]
[85.82009125 278.83673096]
[90.51352692 264.58639526]
[95.93433380 250.59658813]
[102.06813049 236.90435791]
[108.89865875 223.54606628]
[116.40779877 210.55709839]
[124.57563019 197.97192383]
[133.38050842 185.82391357]
[142.79908752 174.14526367]
[152.80636597 162.96694946]
[142.16035461 152.39990234]
[131.51434326 141.83285522]
[120.86833954 131.26580811]
[110.22233582 120.69876862]
[99.57632446 110.13171387]
[92.09164429 107.13970184]
[88.85194397 99.32720184]
[78.36444092 88.60282135]
[67.87694550 77.87844086]
[56.29499435 87.42476654]
[43.94517899 95.95446777]
[30.91647720 103.40610504]
[17.30276680 109.72596741]
[3.20213270 114.86853790]
[-11.28382587 118.79674530]
[-26.05073547 121.48229980]
[-40.99219894 122.90585327]
[-56.00056458 123.05713654]
[-70.96768951 121.93506622]
[-85.78572845 119.54772949]
[-100.34793091 115.91232300]
[-114.54936218 111.05504608]
[-128.28770447 105.01089478]
[-141.46397400 97.82341003]
[-153.98321533 89.54438019]
[-165.75524902 80.23346710]
[-176.69525146 69.95774841]
[-186.72438049 58.79127121]
[-195.77038574 46.81447983]
[-203.76809692 34.11367416]
[-210.65988159 20.78036499]
[-216.39608765 6.91062212]
[-220.93539429 -7.39562321]
[-224.24507141 -22.03529167]
[-226.30128479 -36.90290070]
[-227.08921814 -51.89133072]
[-226.60319519 -66.89258575]
[-224.84671021 -81.79857635]
[-221.83242798 -96.50190735]
[-217.58207703 -110.89664459]
[-212.12626648 -124.87905884]
[-205.50430298 -138.34840393]
[-197.76390076 -151.20765686]
[-188.96084595 -163.36413574]
[-179.15855408 -174.73025513]
[-168.42765808 -185.22413635]
[-156.84545898 -194.77017212]
[-144.49542236 -203.29956055]
[-131.46652222 -210.75085449]
[-117.85265350 -217.07035828]
[-103.75188446 -222.21257019]
[-89.26582336 -226.14039612]
[-74.49884796 -228.82557678]
[-59.55734634 -230.24873352]
[-44.54898071 -230.39964294]
[-29.58188438 -229.27717590]
[-14.76390076 -226.88946533]
[-0.20179453 -223.25367737]
[13.99951267 -218.39604187]
[27.73769760 -212.35153198]
[40.91377640 -205.16369629]
[53.43281174 -196.88435364]
[65.20460510 -187.57313538]
[76.14433289 -177.29713440]
[86.17317200 -166.13040161]
[95.21887970 -154.15336609]
[103.21626282 -141.45236206]
[110.10770416 -128.11886597]
[115.84355164 -114.24897766]
[120.38247681 -99.94261932]
[123.69177246 -85.30286407]
[125.74760437 -70.43520355]
[126.53514862 -55.44675446]
[126.04873657 -40.44551086]
[124.29187775 -25.53956413]
[121.27722168 -10.83630943]
[117.02648926 3.55831265]
[111.57032013 17.54058647]
[104.94800568 31.00976944]
[97.20728302 43.86881256]
[88.40390778 56.02506638]
[78.60131836 67.39093781]
[89.08882141 78.11531830]
[99.57632446 88.83969879]
[110.14337158 99.48571014]
[120.78938293 110.05275726]
[131.43539429 120.61980438]
[142.08140564 131.18685913]
[152.72740173 141.75390625]
[163.37341309 152.32095337]
[174.47691345 142.23072815]
[186.08511353 132.72547913]
[198.16725159 123.83039856]
[210.69126892 115.56909943]
[223.62397766 107.96347046]
[236.93106079 101.03369141]
[250.57722473 94.79813385]
[264.52630615 89.27333069]
[278.74130249 84.47393799]
[293.18450928 80.41268158]
[307.81765747 77.10032654]
[322.60189819 74.54566193]
[337.49804688 72.75545502]
[352.46661377 71.73446655]
[367.46789551 71.48538971]
[382.46209717 72.00889587]
[397.40945435 73.30358887]
[412.27038574 75.36604309]
[427.00540161 78.19078064]
[441.57546997 81.77031708]
[455.94198608 86.09516144]
[470.06677246 91.15383911]
[483.91244507 96.93293762]
[497.44223022 103.41713715]
[510.62030029 110.58922577]
[523.41168213 118.43020630]
[535.78247070 126.91927338]
[547.69982910 136.03392029]
[559.13214111 145.74996948]
[570.04919434 156.04165649]
[580.42193604 166.88169861]
[590.22290039 178.24134827]
[599.42602539 190.09046936]
[608.00701904 202.39765930]
[615.94311523 215.13026428]
[623.21319580 228.25453186]
[629.79797363 241.73564148]
[635.68011475 255.53785706]
[640.84387207 269.62457275]
[645.27563477 283.95846558]
[648.96362305 298.50146484]
[651.89801025 313.21502686]
[654.07116699 328.06015015]
[655.47717285 342.99746704]
[656.11236572 357.98736572]
[655.97503662 372.99008179]
[655.06561279 387.96582031]
[653.38647461 402.87490845]
[650.94201660 417.67776489]
[647.73876953 432.33517456]
[643.78521729 446.80825806]
[639.09185791 461.05862427]
[633.67114258 475.04846191]
[627.53741455 488.74072266]
[620.70697021 502.09906006]
[613.19787598 515.08807373]
[605.03015137 527.67327881]
[596.22534180 539.82135010]
[586.80682373 551.50006104]
[576.79962158 562.67840576]
[566.23022461 573.32678223]
[555.12664795 583.41693115]
[543.51837158 592.92211914]
[531.43621826 601.81713867]
[518.91210938 610.07836914]
[505.97937012 617.68389893]
[492.67227173 624.61364746]
[479.02606201 630.84912109]
[465.07693481 636.37384033]
[450.86190796 641.17315674]
[436.41867065 645.23431396]
[421.78552246 648.54656982]
[407.00128174 651.10119629]
[392.10510254 652.89129639]
[377.13653564 653.91217041]
[362.13525391 654.16119385]
[347.14105225 653.63757324]
[332.19369507 652.34283447]
[317.33279419 650.28027344]
[302.59777832 647.45544434]
[288.02774048 643.87585449]
[273.66125488 639.55090332]
[259.53649902 634.49212646]
[245.69085693 628.71295166]
[232.16110229 622.22869873]
[218.98307800 615.05651855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[41 118]
[42 117]
[43 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
