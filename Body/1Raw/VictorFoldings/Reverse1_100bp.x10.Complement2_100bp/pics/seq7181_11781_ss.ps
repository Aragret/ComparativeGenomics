%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-30.56558800 593.91754150]
[-34.96879959 608.28656006]
[-41.46451950 621.83880615]
[-49.90762711 634.27148438]
[-60.10950470 645.30682373]
[-71.84223175 654.69836426]
[-84.84370422 662.23626709]
[-98.82345581 667.75207520]
[-113.46917725 671.12255859]
[-128.45367432 672.27252197]
[-143.44219971 671.17620850]
[-158.09988403 667.85815430]
[-172.09928894 662.39239502]
[-185.12765503 654.90112305]
[-196.89392090 645.55163574]
[-207.13522339 634.55285645]
[-215.62277222 622.15045166]
[-222.16696167 608.62152100]
[-226.62156677 594.26837158]
[-228.88708496 579.41149902]
[-228.91291809 564.38299561]
[-226.69845581 549.51849365]
[-222.29319763 535.15008545]
[-215.79554749 521.59875488]
[-207.35067749 509.16726685]
[-197.14721680 498.13333130]
[-185.41316223 488.74349976]
[-172.41061401 481.20748901]
[-158.43006897 475.69366455]
[-143.78387451 472.32519531]
[-128.79920959 471.17739868]
[-113.81084442 472.27584839]
[-99.15362549 475.59603882]
[-93.69827271 461.62322998]
[-88.24291229 447.65042114]
[-82.78755951 433.67764282]
[-95.43575287 441.74133301]
[-110.41658783 442.49932861]
[-123.81410980 435.75347900]
[-132.12623596 423.26715088]
[-133.18020630 408.30422974]
[-126.70050812 394.77597046]
[-114.38092041 386.21865845]
[-99.44174957 384.86914062]
[-85.78806305 391.08016968]
[-76.98889923 403.22821045]
[-75.34421539 418.13690186]
[-67.87647247 405.12796021]
[-60.40873337 392.11898804]
[-52.94099045 379.11004639]
[-45.47325134 366.10110474]
[-38.00550842 353.09213257]
[-44.25593567 339.59881592]
[-41.32777023 324.83770752]
[-30.13838959 314.51049805]
[-14.83669853 312.73162842]
[-7.36895752 299.72265625]
[0.09878348 286.71371460]
[7.56652451 273.70477295]
[-0.83035433 262.66116333]
[-4.39511251 249.20887756]
[-2.55762911 235.37042236]
[4.43740320 223.23945618]
[15.56248379 214.66401672]
[29.15811539 210.96496582]
[43.18031311 212.73263550]
[50.84091187 199.83630371]
[50.68862915 184.94247437]
[64.38864899 177.02919006]
[72.04924774 164.13287354]
[79.70984650 151.23654175]
[85.06102753 137.22352600]
[87.94630432 122.50363159]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[88.11370850 78.14546967]
[97.82263184 66.85006714]
[100.26835632 52.05079651]
[102.71408844 37.25152206]
[100.87448883 32.36655045]
[101.07280731 27.72823334]
[102.87381744 24.07153702]
[105.61366272 21.85217857]
[108.71777344 7.17687607]
[104.00377655 -7.92573309]
[114.20738220 -18.77634239]
[117.31149292 -33.45164490]
[120.41560364 -48.12694550]
[123.19121552 -62.86790848]
[125.63694000 -77.66718292]
[128.08267212 -92.46645355]
[130.52839661 -107.26572418]
[132.97412109 -122.06499481]
[126.09218597 -139.14482117]
[137.74794006 -152.26390076]
[139.97305298 -167.09794617]
[142.19816589 -181.93199158]
[128.16838074 -187.41952515]
[115.71173859 -195.89181519]
[105.45305634 -206.92390442]
[97.90690613 -219.96243286]
[93.45178986 -234.35339355]
[92.31118774 -249.37493896]
[94.54230499 -264.27359009]
[100.03323364 -278.30206299]
[108.50854492 -290.75665283]
[119.54312897 -301.01263428]
[132.58348083 -308.55563354]
[146.97552490 -313.00726318]
[161.99734497 -314.14422607]
[176.89546204 -311.90951538]
[190.92257690 -306.41519165]
[203.37510681 -297.93685913]
[213.62844849 -286.89978027]
[221.16828918 -273.85760498]
[225.61642456 -259.46447754]
[226.74974060 -244.44238281]
[224.51141357 -229.54481506]
[219.01368713 -215.51902771]
[210.53233337 -203.06854248]
[199.49278259 -192.81788635]
[186.44877625 -185.28120422]
[172.05458069 -180.83656311]
[157.03221130 -179.70687866]
[154.80709839 -164.87283325]
[152.58197021 -150.03878784]
[159.51747131 -140.12791443]
[157.78509521 -127.75121307]
[147.77339172 -119.61926270]
[145.32766724 -104.81999207]
[142.88194275 -90.02072144]
[140.43621826 -75.22145081]
[137.99047852 -60.42218018]
[139.73554993 -57.35834503]
[140.08331299 -53.29705429]
[138.58114624 -48.90424347]
[135.09091187 -45.02283478]
[131.98680115 -30.34753418]
[128.88269043 -15.67223167]
[133.81871033 -1.61929870]
[123.39308167 10.28098583]
[120.28897095 24.95628929]
[117.51335907 39.69725037]
[115.06762695 54.49652100]
[112.62190247 69.29579163]
[118.18049622 83.11430359]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[102.66619110 125.38890076]
[99.78092194 140.10879517]
[108.92174530 128.21571350]
[120.70151520 118.92932892]
[134.39988708 112.81748962]
[149.17921448 110.25394440]
[164.13571167 111.39546204]
[178.35479736 116.17222595]
[190.96697998 124.29214478]
[201.20098877 135.25868225]
[208.43104553 148.40121460]
[212.21501160 162.91609192]
[212.32148743 177.91571045]
[208.74397278 192.48284912]
[201.70124817 205.72671509]
[191.62394714 216.83743286]
[179.12832642 225.13558960]
[164.97848511 230.11375427]
[150.03970337 231.46748352]
[135.22547913 229.11402893]
[121.44171143 223.19729614]
[109.53128815 214.07907104]
[100.22253418 202.31697083]
[94.08468628 188.63023376]
[91.49307251 173.85581970]
[92.60617065 158.89714050]
[84.94557190 171.79347229]
[77.28497314 184.68978882]
[76.88932037 200.50605774]
[63.73723984 207.49690247]
[56.07664108 220.39323425]
[65.18336487 233.87660217]
[67.49013519 249.92411804]
[62.58536911 265.31579590]
[51.49936676 276.98559570]
[36.48836517 282.63214111]
[20.57547760 281.17248535]
[13.10773563 294.18145752]
[5.63999462 307.19039917]
[-1.82774651 320.19937134]
[4.35264015 334.30996704]
[1.07747245 349.18029785]
[-10.19257164 359.15274048]
[-24.99655724 360.55987549]
[-32.46429825 373.56884766]
[-39.93203735 386.57778931]
[-47.39978027 399.58673096]
[-54.86752319 412.59570312]
[-62.33526230 425.60464478]
[-68.81475830 439.13299561]
[-74.27011871 453.10577393]
[-79.72547150 467.07858276]
[-85.18083191 481.05139160]
[-72.15139771 488.54080200]
[-60.38380051 497.88861084]
[-50.14093018 508.88592529]
[-41.65161514 521.28710938]
[-35.10550690 534.81506348]
[-30.64885330 549.16766357]
[-28.38121414 564.02416992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 203]
[34 202]
[35 201]
[36 200]
[47 199]
[48 198]
[49 197]
[50 196]
[51 195]
[52 194]
[56 190]
[57 189]
[58 188]
[59 187]
[66 181]
[67 180]
[69 178]
[70 177]
[71 176]
[72 152]
[73 151]
[74 150]
[75 147]
[77 145]
[78 144]
[79 143]
[83 142]
[84 141]
[86 139]
[87 138]
[88 137]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[95 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
