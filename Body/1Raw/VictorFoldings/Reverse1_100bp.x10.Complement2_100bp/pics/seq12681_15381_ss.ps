%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[76.50492859 498.50366211]
[70.46894073 484.75598145]
[65.92847443 470.44458008]
[62.93495560 455.73162842]
[61.52231598 440.78381348]
[61.70655823 425.77056885]
[63.48559570 410.86193848]
[66.83927155 396.22686768]
[71.72958374 382.03121948]
[78.10112000 368.43579102]
[85.88168335 355.59463501]
[94.98312378 343.65328979]
[105.30230713 332.74703979]
[116.72231293 322.99945068]
[129.11373901 314.52096558]
[142.33619690 307.40765381]
[136.67340088 293.51763916]
[131.01062012 279.62762451]
[125.34783173 265.73757935]
[119.68504333 251.84756470]
[114.02226257 237.95753479]
[102.05271912 229.09303284]
[104.00764465 213.39306641]
[102.79294586 228.34381104]
[97.64148712 242.43148804]
[88.92516327 254.63908386]
[77.27320862 264.08535767]
[63.52678299 270.08834839]
[48.67826080 272.21469116]
[33.79956436 270.31088257]
[19.96480370 264.51440430]
[8.17271805 255.24365234]
[-0.72540939 243.16792297]
[-6.08721590 229.15896606]
[-7.52562809 214.22808838]
[-4.93680573 199.45317078]
[1.49236238 185.90084839]
[11.29774857 174.54943848]
[23.77149391 166.21842957]
[38.01310730 161.50924683]
[52.99447632 160.76184082]
[67.63407898 164.03016663]
[80.87507629 171.07829285]
[91.76158142 181.39739990]
[99.50815582 194.24360657]
[98.39250946 179.28515625]
[97.27685547 164.32670593]
[81.99628448 161.81591797]
[67.75719452 155.72918701]
[55.38328934 146.41864014]
[45.59037018 134.42285156]
[38.94494629 120.43577576]
[35.83143997 105.26653290]
[36.42995834 89.79262543]
[40.70588303 74.90920258]
[48.41185760 61.47722626]
[59.10210800 50.27371979]
[72.15821838 41.94678497]
[86.82492828 36.97811508]
[85.48669434 22.03792953]
[84.14846039 7.09774542]
[82.81022644 -7.84243965]
[81.47199249 -22.78262520]
[70.53219604 -37.59486389]
[78.53128052 -53.21477509]
[76.97075653 -68.13337708]
[75.41023254 -83.05198669]
[64.08083344 -73.22117615]
[49.30401993 -75.79911804]
[41.97270966 -88.88544464]
[47.49127197 -102.83339691]
[61.79162598 -107.36107635]
[74.33123016 -99.13224792]
[73.88462067 -114.12559509]
[73.43801880 -129.11894226]
[72.99140930 -144.11228943]
[72.54480743 -159.10565186]
[72.09819794 -174.09899902]
[71.65159607 -189.09234619]
[71.20498657 -204.08569336]
[70.75838470 -219.07904053]
[55.81316376 -220.59411621]
[41.19357300 -224.04704285]
[27.14977455 -229.37870789]
[13.92207336 -236.49790955]
[1.73681366 -245.28280640]
[-9.19749928 -255.58308411]
[-18.69376564 -267.22250366]
[-26.58949089 -280.00189209]
[-32.74956894 -293.70254517]
[-37.06859207 -308.09008789]
[-39.47265625 -322.91827393]
[-39.92062759 -337.93341064]
[-38.40483856 -352.87857056]
[-34.95122528 -367.49798584]
[-29.61888313 -381.54153442]
[-22.49905777 -394.76889038]
[-13.71357918 -406.95373535]
[-3.41277623 -417.88757324]
[8.22708988 -427.38327026]
[21.00684547 -435.27838135]
[34.70781326 -441.43780518]
[49.09554672 -445.75616455]
[63.92386246 -448.15951538]
[78.93901825 -448.60678101]
[93.88409424 -447.09027100]
[108.50335693 -443.63595581]
[122.54664612 -438.30294800]
[135.77366638 -431.18249512]
[147.95809937 -422.39645386]
[158.89141846 -412.09512329]
[168.38658142 -400.45480347]
[176.28109741 -387.67468262]
[182.43986511 -373.97341919]
[186.75752258 -359.58547974]
[189.16017151 -344.75704956]
[189.60671997 -329.74185181]
[188.08949280 -314.79684448]
[184.63449097 -300.17776489]
[179.30081177 -286.13473511]
[172.17973328 -272.90805054]
[163.39309692 -260.72402954]
[153.09124756 -249.79119873]
[141.45048523 -240.29658508]
[128.66996765 -232.40269470]
[114.96842194 -226.24456787]
[100.58027649 -221.92759705]
[85.75173187 -219.52565002]
[86.19833374 -204.53230286]
[86.64494324 -189.53895569]
[87.09154510 -174.54559326]
[87.53815460 -159.55224609]
[87.98476410 -144.55889893]
[88.43136597 -129.56555176]
[88.87797546 -114.57219696]
[89.32457733 -99.57884979]
[90.32884216 -84.61250305]
[91.88935852 -69.69390106]
[93.44988251 -54.77529526]
[102.64627838 -46.91699982]
[104.06847382 -34.50083542]
[96.41217804 -24.12085915]
[97.75041199 -9.18067360]
[99.08864594 5.75951099]
[100.42687988 20.69969559]
[101.76511383 35.63988113]
[116.07006073 37.65343857]
[129.56600952 42.80566788]
[141.57353210 50.83719254]
[151.48815918 61.34368896]
[158.81074524 73.79623413]
[163.17265320 87.56793213]
[164.35430908 101.96549225]
[162.29621887 116.26410675]
[157.10198975 129.74394226]
[149.03312683 141.72640991]
[138.49580383 151.60826111]
[126.02053070 158.89204407]
[112.23531342 163.21105957]
[113.35095978 178.16950989]
[114.46660614 193.12796021]
[117.89766693 207.73028564]
[130.27224731 217.58828735]
[127.91228485 232.29475403]
[133.57507324 246.18476868]
[139.23785400 260.07479858]
[144.90065002 273.96481323]
[150.56343079 287.85485840]
[156.22622681 301.74487305]
[170.65310669 297.58590698]
[185.44033813 294.98397827]
[200.42034912 293.96862793]
[215.42344666 294.55130005]
[230.27958679 296.72546387]
[244.82046509 300.46643066]
[258.88131714 305.73184204]
[272.30282593 312.46200562]
[284.93292236 320.58068848]
[296.62847900 329.99591064]
[307.25698853 340.60095215]
[316.69799805 352.27566528]
[324.84457397 364.88778687]
[331.60437012 378.29440308]
[336.90081787 392.34359741]
[340.67388916 406.87615967]
[342.88085938 421.72747803]
[343.49670410 436.72924805]
[342.51443481 451.71145630]
[339.94519043 466.50442505]
[335.81808472 480.94046021]
[330.17987061 494.85601807]
[323.09445190 508.09341431]
[314.64212036 520.50268555]
[304.91860962 531.94317627]
[294.03411865 542.28533936]
[282.11196899 551.41192627]
[269.28723145 559.21954346]
[255.70527649 565.61968994]
[241.51994324 570.53991699]
[226.89198303 573.92437744]
[211.98713684 575.73486328]
[196.97428894 575.95068359]
[182.02355957 574.56958008]
[167.30432129 571.60705566]
[152.98338318 567.09674072]
[139.22300720 561.08972168]
[126.17910767 553.65411377]
[113.99947357 544.87408447]
[102.82211304 534.84918213]
[92.77368164 523.69299316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[23 162]
[45 161]
[46 160]
[47 159]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[65 139]
[66 138]
[67 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
