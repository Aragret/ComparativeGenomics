%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[28.45304108 677.17504883]
[14.68543720 683.14843750]
[0.49633810 688.03698730]
[-14.02892017 691.81127930]
[-28.80297852 694.44860840]
[-43.73698425 695.93310547]
[-58.74112320 696.25585938]
[-73.72515106 695.41497803]
[-88.59896088 693.41540527]
[-103.27308655 690.26928711]
[-117.65928650 685.99542236]
[-131.67103577 680.61962891]
[-145.22406006 674.17419434]
[-158.23686218 666.69787598]
[-170.63116455 658.23559570]
[-182.33242798 648.83837891]
[-193.27027893 638.56256104]
[-203.37895203 627.47009277]
[-212.59762573 615.62762451]
[-220.87088013 603.10638428]
[-228.14894104 589.98162842]
[-234.38804626 576.33239746]
[-239.55067444 562.24072266]
[-243.60577393 547.79132080]
[-246.52894592 533.07116699]
[-248.30262756 518.16876221]
[-248.91613770 503.17367554]
[-248.36579895 488.17617798]
[-246.65490723 473.26641846]
[-243.79376221 458.53405762]
[-239.79956055 444.06771851]
[-234.69633484 429.95440674]
[-228.51478577 416.27902222]
[-221.29206848 403.12374878]
[-213.07162476 390.56777954]
[-203.90290833 378.68658447]
[-193.84106445 367.55160522]
[-182.94657898 357.22985840]
[-171.28500366 347.78338623]
[-158.92645264 339.26898193]
[-145.94526672 331.73791504]
[-132.41950989 325.23544312]
[-118.43053436 319.80065918]
[-104.06246948 315.46627808]
[-89.40171814 312.25836182]
[-74.53646851 310.19616699]
[-59.55611038 309.29214478]
[-44.55074692 309.55172729]
[-29.61062050 310.97329712]
[-14.82558346 313.54837036]
[-0.28455618 317.26144409]
[4.54144144 303.05899048]
[9.36743927 288.85653687]
[14.19343662 274.65408325]
[19.01943398 260.45162964]
[6.03680182 267.96502686]
[-8.89413357 266.52725220]
[-20.20450020 256.67456055]
[-23.67581177 242.08175659]
[-18.01335716 228.19158936]
[-5.32908773 220.18476868]
[9.64607430 221.04760742]
[21.32676506 230.45832825]
[25.35633087 244.90809631]
[31.83582687 231.37974548]
[38.31532288 217.85140991]
[44.79481888 204.32305908]
[51.27431488 190.79470825]
[57.34814835 177.07945251]
[63.01093674 163.18942261]
[61.98780060 159.81517029]
[62.54817963 155.77772522]
[64.98598480 151.82672119]
[69.24920654 148.81474304]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[94.56919098 73.42963409]
[100.07808685 62.21197891]
[111.37926483 57.89806747]
[117.85876465 44.36972046]
[124.33825684 30.84137726]
[130.81774902 17.31303024]
[137.29725647 3.78468537]
[143.77674866 -9.74365997]
[150.25624084 -23.27200508]
[156.73573303 -36.80035019]
[155.71876526 -52.58883667]
[168.19470215 -60.72518158]
[171.51696777 -75.35263824]
[171.51696777 -90.35263824]
[171.51696777 -105.35263824]
[171.51696777 -120.35263824]
[161.94227600 -136.08181763]
[171.30300903 -150.92579651]
[171.07968140 -165.92413330]
[170.85635376 -180.92247009]
[157.17091370 -187.77575684]
[148.24737549 -200.21075439]
[146.13627625 -215.36996460]
[151.32275391 -229.76992798]
[162.61497498 -240.10165405]
[177.41807556 -243.99095154]
[192.33041382 -240.54411316]
[203.92524719 -230.55319214]
[209.53816223 -216.31402588]
[207.87934875 -201.09867859]
[199.33000183 -188.40351868]
[185.85469055 -181.14579773]
[186.07801819 -166.14746094]
[186.30134583 -151.14912415]
[194.75997925 -142.50169373]
[195.06878662 -130.00816345]
[186.51696777 -120.35263824]
[186.51696777 -105.35263824]
[186.51696777 -90.35263824]
[186.51696777 -75.35263824]
[193.17782593 -88.79261017]
[202.30068970 -100.69948578]
[213.54446411 -110.62809753]
[226.48880005 -118.20728302]
[240.64978027 -123.15367126]
[255.49797058 -125.28234100]
[270.47827148 -124.51371002]
[285.03060913 -120.87651825]
[298.61096191 -114.50674438]
[310.71160889 -105.64253235]
[320.88015747 -94.61525726]
[328.73645020 -81.83720398]
[333.98675537 -67.78607941]
[336.43481445 -52.98719406]
[335.98910522 -37.99381638]
[332.66629028 -23.36648750]
[326.59054565 -9.65205860]
[317.98907471 2.63674688]
[307.18344116 13.04050159]
[294.57760620 21.17025375]
[280.64285278 26.72206879]
[265.90014648 29.48838425]
[250.90063477 29.36578178]
[236.20512390 26.35884476]
[222.36297607 20.57999039]
[209.89172363 12.24526405]
[199.25758362 1.66626608]
[190.85813904 -10.76150036]
[185.00741577 -24.57341385]
[181.92413330 -39.25310516]
[181.72305298 -54.24568558]
[183.20349121 -39.42483521]
[170.26408386 -30.32085609]
[163.78459167 -16.79250908]
[157.30509949 -3.26416445]
[150.82559204 10.26418114]
[144.34609985 23.79252625]
[137.86660767 37.32087326]
[131.38711548 50.84921646]
[124.90761566 64.37756348]
[127.19715118 81.77655792]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[82.87252808 155.09210205]
[76.90096283 168.85220337]
[71.23817444 182.74223328]
[71.98175049 187.02020264]
[71.38533020 190.92005920]
[69.73230743 194.06695557]
[67.39874268 196.21661377]
[64.80265808 197.27421570]
[58.32316589 210.80255127]
[51.84366989 224.33090210]
[45.36417389 237.85925293]
[38.88467789 251.38758850]
[33.22188950 265.27761841]
[28.39589310 279.48007202]
[23.56989479 293.68252563]
[18.74389648 307.88497925]
[13.91789913 322.08743286]
[27.71077538 328.00225830]
[41.00381851 334.96810913]
[53.71708679 342.94314575]
[65.77410889 351.87939453]
[77.10238647 361.72308350]
[87.63378143 372.41506958]
[97.30495453 383.89096069]
[106.05773926 396.08184814]
[113.83950043 408.91430664]
[120.60343933 422.31121826]
[126.30886841 436.19201660]
[130.92147827 450.47320557]
[134.41352844 465.06887817]
[136.76400757 479.89129639]
[137.95880127 494.85125732]
[137.99070740 509.85882568]
[136.85952759 524.82373047]
[134.57208252 539.65600586]
[131.14212036 554.26641846]
[126.59027100 568.56707764]
[120.94390106 582.47198486]
[114.23698425 595.89752197]
[106.50985718 608.76300049]
[97.80897522 620.99096680]
[88.18668365 632.50787354]
[77.70084381 643.24450684]
[66.41452026 653.13629150]
[54.39559555 662.12371826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 182]
[52 181]
[53 180]
[54 179]
[55 178]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[69 168]
[70 167]
[74 166]
[75 165]
[76 164]
[77 163]
[79 161]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[91 150]
[92 119]
[93 118]
[94 117]
[95 116]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
