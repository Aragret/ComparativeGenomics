%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[16.82572937 518.63586426]
[24.38619614 531.66607666]
[28.85710907 546.05212402]
[30.01420593 561.07238770]
[27.79945183 575.97351074]
[22.32393265 590.00799561]
[13.86230183 602.47186279]
[2.83898950 612.73999023]
[-10.19307899 620.29730225]
[-24.58022118 624.76470947]
[-39.60078049 625.91821289]
[-54.50133896 623.69982910]
[-68.53448486 618.22088623]
[-80.99632263 609.75622559]
[-91.26177216 598.73046875]
[-98.81592560 585.69653320]
[-103.27986908 571.30834961]
[-104.42968750 556.28747559]
[-102.20771027 541.38745117]
[-96.72538757 527.35565186]
[-88.25772095 514.89587402]
[-77.22943115 504.63308716]
[-64.19370270 497.08209229]
[-49.80440140 492.62164307]
[-34.78327942 491.47546387]
[-19.88380051 493.70104980]
[-14.42844391 479.72824097]
[-8.97308731 465.75546265]
[-3.51772976 451.78265381]
[1.93762720 437.80984497]
[1.44205117 430.43582153]
[7.57962418 423.67062378]
[13.24241066 409.78060913]
[8.84153080 398.51300049]
[13.44561481 386.89465332]
[25.09353256 381.35488892]
[30.96249390 367.55072021]
[35.47012329 353.24401855]
[38.57423401 338.56872559]
[41.67834473 323.89343262]
[35.34504700 313.58731079]
[37.81102753 301.33566284]
[48.28900146 293.81405640]
[51.61125946 279.18658447]
[54.93352127 264.55914307]
[50.20727158 250.43426514]
[60.80892563 238.69052124]
[64.13118744 224.06306458]
[51.89795685 215.50283813]
[43.85228729 202.87696838]
[41.24647522 188.09269714]
[44.50827026 173.39752197]
[53.17102814 161.03749084]
[65.94017792 152.91395569]
[80.88662720 150.29109192]
[84.20888519 135.66363525]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[95.55115509 72.11938477]
[95.95639038 67.49454498]
[97.91887665 63.92191696]
[100.75509644 61.82711411]
[104.51139832 47.30505371]
[100.47646332 32.00701904]
[111.15440369 21.62284660]
[114.91069794 7.10078764]
[118.23296356 -7.52667284]
[121.11823273 -22.24656487]
[124.00350189 -36.96645737]
[126.88877869 -51.68634796]
[113.17362976 -45.61224365]
[99.80351257 -52.41224289]
[96.63438416 -67.07363892]
[106.00240326 -78.78859711]
[121.00181580 -78.92128754]
[130.57521057 -67.37549591]
[134.54730225 -81.84001923]
[138.51939392 -96.30454254]
[141.29501343 -111.04550171]
[142.85552979 -125.96411133]
[144.41606140 -140.88270569]
[145.97657776 -155.80131531]
[146.64636230 -170.78636169]
[146.42303467 -185.78469849]
[138.48112488 -199.46813965]
[146.02807617 -212.30920410]
[145.80474854 -227.30754089]
[145.58142090 -242.30587769]
[145.35809326 -257.30419922]
[145.13476562 -272.30255127]
[144.91143799 -287.30087280]
[130.24734497 -290.82437134]
[116.92059326 -297.88473511]
[105.76891327 -308.03808594]
[97.49330902 -320.64624023]
[92.61399841 -334.91659546]
[91.43769836 -349.95211792]
[94.03834534 -364.80767822]
[100.25246429 -378.54940796]
[109.68943024 -390.31353760]
[121.75603485 -399.36053467]
[135.69374084 -405.12167358]
[150.62643433 -407.23486328]
[165.61543274 -405.56723022]
[179.71849060 -400.22360229]
[192.04910278 -391.53988647]
[201.83215332 -380.06195068]
[208.45265198 -366.51132202]
[211.49446106 -351.73977661]
[210.76634216 -336.67590332]
[206.31407166 -322.26660156]
[198.41754150 -309.41766357]
[187.57310486 -298.93676758]
[174.46246338 -291.48275757]
[159.90977478 -287.52420044]
[160.13310242 -272.52587891]
[160.35643005 -257.52752686]
[160.57975769 -242.52920532]
[160.80308533 -227.53086853]
[161.02641296 -212.53253174]
[168.95234680 -199.92185974]
[161.42137146 -186.00802612]
[161.64469910 -171.00968933]
[171.35054016 -182.44631958]
[185.89730835 -186.10575867]
[199.85942078 -180.62310791]
[208.02935791 -168.04328918]
[207.35993958 -153.05822754]
[198.10081482 -141.25700378]
[183.70544434 -137.04118347]
[169.54292297 -141.98315430]
[160.89518738 -154.24079895]
[159.33465576 -139.32218933]
[157.77413940 -124.40358734]
[156.21360779 -109.48497772]
[165.91442871 -120.92588806]
[179.78605652 -126.63357544]
[194.72956848 -125.33293915]
[207.40652466 -117.31453705]
[214.98486328 -104.36970520]
[215.77157593 -89.39035034]
[209.59089661 -75.72290039]
[197.82360840 -66.42069244]
[183.09855652 -63.56187057]
[168.70535278 -67.78510284]
[157.85948181 -78.14690399]
[152.98391724 -92.33244324]
[149.01182556 -77.86791992]
[145.03973389 -63.40339661]
[141.60867310 -48.80107498]
[138.72340393 -34.08118439]
[135.83811951 -19.36129189]
[132.95285034 -4.64140034]
[134.40301514 -2.24240518]
[134.99028015 0.87556434]
[134.43603516 4.38672113]
[132.58465576 7.87052917]
[129.43275452 10.85708809]
[125.67646027 25.37914658]
[129.98005676 39.63846970]
[119.03345490 51.06135559]
[115.27715302 65.58341217]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[98.83634949 138.98590088]
[95.51409149 153.61335754]
[107.86114502 162.43525696]
[115.86842346 175.27761841]
[118.34215546 190.16702271]
[114.93611145 204.82943726]
[106.19965363 217.03759766]
[93.48939514 224.94927979]
[78.75864410 227.38531494]
[75.43638611 242.01277161]
[79.92500305 257.18389893]
[69.56098175 267.88137817]
[66.23872375 282.50885010]
[62.91646194 297.13632202]
[68.76959229 314.59545898]
[56.35364532 326.99752808]
[53.24953461 341.67285156]
[50.14542389 356.34814453]
[60.47258759 345.46926880]
[74.30038452 339.65618896]
[89.29858398 339.88845825]
[102.93973541 346.12698364]
[112.92504883 357.32043457]
[117.57183838 371.58251953]
[116.09703827 386.50985718]
[108.74916840 399.58688354]
[96.76647949 408.60992432]
[82.16826630 412.05841064]
[67.41458130 409.35125732]
[54.99168015 400.94461060]
[46.99304199 388.25518799]
[44.76667023 373.41967773]
[38.89770889 387.22384644]
[41.55482864 405.44531250]
[27.13243675 415.44338989]
[21.46965027 429.33340454]
[15.91042519 443.26519775]
[10.45506763 457.23800659]
[4.99971104 471.21081543]
[-0.45564607 485.18359375]
[-5.91100311 499.15640259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 210]
[27 209]
[28 208]
[29 207]
[30 206]
[32 205]
[33 204]
[36 202]
[37 201]
[38 187]
[39 186]
[40 185]
[43 183]
[44 182]
[45 181]
[47 179]
[48 178]
[55 171]
[56 170]
[57 169]
[58 168]
[59 166]
[60 165]
[64 164]
[65 163]
[67 161]
[68 160]
[69 155]
[70 154]
[71 153]
[72 152]
[78 151]
[79 150]
[80 149]
[81 137]
[82 136]
[83 135]
[84 134]
[85 125]
[86 124]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
