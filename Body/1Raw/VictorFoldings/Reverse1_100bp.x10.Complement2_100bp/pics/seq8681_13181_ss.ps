%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[14.36226654 486.42941284]
[7.58221817 472.96484375]
[4.22215128 458.26879883]
[4.47741556 443.19570923]
[8.33317089 428.62188721]
[15.56524754 415.39462280]
[25.75318336 404.28292847]
[38.30466461 395.93286133]
[52.48996353 390.82986450]
[50.92943954 375.91125488]
[49.36891556 360.99264526]
[47.80839539 346.07403564]
[46.24787140 331.15542603]
[44.68734741 316.23681641]
[39.43824005 330.28839111]
[30.90152550 342.62228394]
[19.59923363 352.48425293]
[6.22249794 359.27120972]
[-8.41068554 362.56817627]
[-23.40549278 362.17349243]
[-37.84498596 358.11135864]
[-50.84618378 350.63012695]
[-61.61405945 340.18728638]
[-69.49015045 327.42141724]
[-73.99283600 313.11318970]
[-74.84676361 298.13751221]
[-71.99973297 283.41018677]
[-65.62582397 269.83175659]
[-56.11481857 258.23260498]
[-44.04830551 249.32196045]
[-30.16416359 243.64476013]
[-15.31141186 241.54815674]
[-0.39830193 243.16033936]
[13.66322327 248.38275146]
[26.01329803 256.89602661]
[35.89670944 268.17953491]
[42.70907974 281.54336548]
[46.03383636 296.17028809]
[49.57350922 281.59390259]
[53.11318207 267.01754761]
[56.32645798 252.36575317]
[59.21173096 237.64585876]
[62.09700012 222.92596436]
[64.98227692 208.20606995]
[63.32920456 205.09164429]
[63.10250854 201.02178955]
[64.73480988 196.67565918]
[68.33906555 192.89988708]
[71.87873840 178.32351685]
[75.41841125 163.74713135]
[78.95808411 149.17076111]
[77.28243256 144.69848633]
[78.39845276 139.12609863]
[82.82623291 134.21627808]
[86.79833221 119.75175476]
[90.77042389 105.28723145]
[93.65570068 90.56733704]
[95.43816376 75.67362213]
[96.88758087 60.74381256]
[98.00323486 45.78535843]
[99.11888123 30.82690620]
[100.23452759 15.86845303]
[93.54506683 1.53103065]
[102.20755005 -10.58551598]
[103.32319641 -25.54396820]
[104.43885040 -40.50242233]
[91.54267120 -32.84157181]
[77.45923615 -38.00460434]
[72.57033539 -52.18552780]
[80.47987366 -64.93069458]
[95.35723877 -66.84483337]
[106.23479462 -56.51846695]
[108.45991516 -71.35250854]
[110.68503571 -86.18655396]
[112.91014862 -101.02059937]
[115.13526917 -115.85463715]
[117.36038208 -130.68869019]
[116.80216980 -145.67829895]
[113.47991180 -160.30575562]
[110.15765381 -174.93321228]
[106.83539581 -189.56066895]
[96.23374176 -201.30441284]
[100.95999146 -215.42927551]
[97.63773346 -230.05674744]
[82.57775879 -229.95011902]
[67.84705353 -233.08386230]
[54.13459778 -239.31143188]
[42.08174515 -248.34153748]
[32.25223160 -259.75183105]
[25.10579872 -273.00863647]
[20.97669983 -287.49188232]
[20.05805969 -302.52416992]
[22.39284325 -317.40243530]
[27.87185287 -331.43078613]
[36.23882294 -343.95309448]
[47.10241318 -354.38363647]
[59.95451355 -362.23458862]
[74.19401550 -367.13876343]
[89.15489960 -368.86672974]
[104.13742828 -367.33770752]
[118.44084167 -362.62319946]
[131.39613342 -354.94372559]
[142.39736938 -344.65844727]
[150.93000793 -332.24844360]
[156.59494019 -318.29415894]
[159.12722778 -303.44821167]
[158.40841675 -288.40502930]
[154.47213745 -273.86819458]
[147.50250244 -260.51760864]
[137.82546997 -248.97770691]
[125.89368439 -239.78823853]
[112.26519012 -233.37899780]
[115.58744812 -218.75154114]
[125.95147705 -208.05404663]
[121.46285248 -192.88293457]
[124.78511047 -178.25547791]
[128.10737610 -163.62800598]
[131.42962646 -149.00054932]
[134.92370605 -163.58792114]
[141.64521790 -176.99768066]
[151.24154663 -188.52635193]
[163.20930481 -197.56919861]
[176.92066956 -203.65182495]
[191.65638733 -206.45515442]
[206.64343262 -205.83213806]
[221.09564209 -201.81546021]
[234.25486755 -194.61581421]
[245.43080139 -184.61088562]
[254.03717041 -172.32550049]
[259.62249756 -158.40415955]
[261.89382935 -143.57711792]
[260.73196411 -128.62217712]
[256.19787598 -114.32386017]
[248.52941895 -101.43220520]
[238.12884521 -90.62350464]
[225.54176331 -82.46473694]
[211.42846680 -77.38391876]
[196.52929688 -75.64756012]
[181.62585449 -77.34676361]
[167.49992371 -82.39237976]
[154.89254761 -90.51972961]
[144.46505737 -101.30247498]
[136.76446533 -114.17496490]
[132.19442749 -128.46356201]
[129.96931458 -113.62952423]
[127.74419403 -98.79547882]
[125.51907349 -83.96143341]
[123.29396057 -69.12738800]
[121.06884003 -54.29334641]
[119.39730072 -39.38677216]
[118.28165436 -24.42831993]
[117.16600037 -9.46986675]
[123.93526459 3.79762721]
[115.19298553 16.98410225]
[114.07733154 31.94255638]
[112.96168518 46.90100861]
[111.84603882 61.85946274]
[113.85748291 64.75539398]
[114.56620026 68.76946259]
[113.46192169 73.27877045]
[110.33187866 77.45608521]
[108.54941559 92.34980774]
[118.77529144 81.37567902]
[133.08897400 76.89032745]
[147.74891663 80.06622314]
[158.92303467 90.07318115]
[163.69042969 104.29541016]
[160.80493164 119.01525879]
[151.02079773 130.38499451]
[136.89558411 135.43258667]
[122.12157440 132.83860779]
[110.56066895 123.28112793]
[105.23494720 109.25933075]
[101.26285553 123.72385406]
[97.29075623 138.18836975]
[93.53445435 152.71043396]
[89.99478149 167.28680420]
[86.45510864 181.86318970]
[82.91544342 196.43955994]
[79.70216370 211.09135437]
[76.81689453 225.81123352]
[73.93161774 240.53112793]
[71.04634857 255.25102234]
[72.73968506 260.18859863]
[72.40335846 264.81896973]
[70.49427032 268.42041016]
[67.68955994 270.55722046]
[64.14988708 285.13357544]
[60.61021423 299.70996094]
[59.60595322 314.67630005]
[61.16647720 329.59490967]
[62.72699738 344.51351929]
[64.28752136 359.43212891]
[65.84804535 374.35070801]
[67.40856934 389.26931763]
[82.34282684 391.32635498]
[96.35057831 396.89828491]
[108.61743927 405.66113281]
[118.43022919 417.10546875]
[125.21843719 430.56588745]
[128.58741760 445.25988770]
[128.34129333 460.33312988]
[124.49436951 474.90930176]
[117.27030945 488.14096069]
[107.08911896 499.25881958]
[94.54270172 507.61648560]
[80.36049652 512.72808838]
[65.36704254 514.29644775]
[50.43403244 512.23034668]
[36.42965698 506.64996338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[38 189]
[39 188]
[40 187]
[41 183]
[42 182]
[43 181]
[44 180]
[48 179]
[49 178]
[50 177]
[51 176]
[54 175]
[55 174]
[56 173]
[57 162]
[58 161]
[59 157]
[60 156]
[61 155]
[62 154]
[64 152]
[65 151]
[66 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 118]
[79 117]
[80 116]
[81 115]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
