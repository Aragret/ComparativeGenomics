%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[73.96880341 544.23876953]
[65.43475342 556.60101318]
[55.36006927 567.74353027]
[43.91714478 577.47564697]
[31.30178452 585.63092041]
[17.72985458 592.06964111]
[3.43358922 596.68182373]
[-11.34238529 599.38836670]
[-26.34523201 600.14312744]
[-41.31823349 598.93304443]
[-56.00518036 595.77893066]
[-70.15476227 590.73468018]
[-83.52485657 583.88659668]
[-95.88668823 575.35198975]
[-107.02873230 565.27679443]
[-116.76032257 553.83337402]
[-124.91494751 541.21765137]
[-131.35307312 527.64538574]
[-135.96452332 513.34893799]
[-138.67041016 498.57281494]
[-139.42440796 483.56991577]
[-138.21363831 468.59698486]
[-135.05879211 453.91018677]
[-130.01387024 439.76083374]
[-123.16520691 426.39108276]
[-114.62997437 414.02966309]
[-104.55422974 402.88809204]
[-93.11038208 393.15704346]
[-80.49424744 385.00302124]
[-66.92170715 378.56555176]
[-52.62500000 373.95477295]
[-37.84876633 371.24957275]
[-22.84584808 370.49630737]
[-7.87296200 371.70779419]
[6.81368494 374.86331177]
[11.85060120 360.73428345]
[16.88751793 346.60525513]
[21.92443275 332.47622681]
[26.96134949 318.34719849]
[31.99826622 304.21817017]
[37.03518295 290.08914185]
[41.75531769 275.85116577]
[36.91011810 258.98431396]
[50.49478149 246.55294800]
[54.68179321 232.14916992]
[47.30547714 219.26019287]
[51.34651566 204.59306335]
[64.91567230 196.94349670]
[69.10267639 182.53971863]
[73.28968811 168.13594055]
[68.19390869 151.34307861]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[88.23181915 60.13794708]
[83.99034882 44.25381851]
[88.31315613 28.48897743]
[99.92906189 17.12118912]
[115.60140991 13.18547249]
[119.35771179 -1.33658648]
[123.11401367 -15.85864544]
[126.87031555 -30.38070488]
[130.62661743 -44.90276337]
[134.38291931 -59.42482376]
[120.76856232 -65.81900787]
[108.56426239 -74.60372925]
[98.18479919 -85.47860718]
[89.98260498 -98.07227325]
[84.23578644 -111.95501709]
[81.13871002 -126.65348816]
[80.79543304 -141.66677856]
[83.21615601 -156.48356628]
[88.31701660 -170.59947205]
[95.92289734 -183.53424072]
[105.77350616 -194.84811401]
[117.53226471 -204.15670776]
[130.79779053 -211.14418030]
[145.11761475 -215.57383728]
[160.00361633 -217.29623413]
[174.94865417 -216.25415039]
[178.70495605 -230.77621460]
[182.46125793 -245.29827881]
[186.21755981 -259.82034302]
[189.97386169 -274.34240723]
[180.27752686 -286.31265259]
[179.49801636 -301.51943970]
[187.72496033 -314.12026978]
[201.62785339 -319.39736938]
[205.38415527 -333.91943359]
[209.14045715 -348.44146729]
[212.89675903 -362.96353149]
[216.65306091 -377.48559570]
[210.79165649 -388.97500610]
[214.21925354 -400.99313354]
[224.57386780 -407.24682617]
[228.54595947 -421.71133423]
[232.51806641 -436.17587280]
[219.14288330 -443.08950806]
[207.49765015 -452.63320923]
[198.09144592 -464.38977051]
[191.33547974 -477.84527588]
[187.52510071 -492.41149902]
[186.82684326 -507.45166016]
[189.27127075 -522.30822754]
[194.75151062 -536.33184814]
[203.02798462 -548.90930176]
[213.73889160 -559.49090576]
[226.41598511 -567.61401367]
[240.50508118 -572.92358398]
[255.39027405 -575.18737793]
[270.42083740 -574.30651855]
[284.93969727 -570.31951904]
[298.31216431 -563.40063477]
[309.95364380 -553.85229492]
[319.35519409 -542.09204102]
[326.10586548 -528.63391113]
[329.91052246 -514.06616211]
[330.60287476 -499.02575684]
[328.15258789 -484.17010498]
[322.66683960 -470.14868164]
[314.38540649 -457.57443237]
[303.67034912 -446.99707031]
[290.99005127 -438.87893677]
[276.89886475 -433.57495117]
[262.01278687 -431.31701660]
[246.98258972 -432.20376587]
[243.01048279 -417.73925781]
[239.03839111 -403.27471924]
[244.38363647 -386.55960083]
[231.17512512 -373.72930908]
[227.41882324 -359.20724487]
[223.66252136 -344.68518066]
[219.90621948 -330.16311646]
[216.14991760 -315.64105225]
[225.75033569 -304.28457642]
[226.83554077 -289.27502441]
[218.78030396 -276.35345459]
[204.49592590 -270.58609009]
[200.73962402 -256.06402588]
[196.98332214 -241.54197693]
[193.22702026 -227.01991272]
[189.47071838 -212.49784851]
[203.04663086 -206.16265869]
[215.23046875 -197.43833923]
[225.60643005 -186.62081909]
[233.82009888 -174.07749939]
[239.59048462 -160.23478699]
[242.71974182 -145.56352234]
[243.09985352 -130.56307983]
[240.71641541 -115.74428558]
[235.64913940 -101.61206055]
[228.06922913 -88.64818573]
[218.23358154 -77.29492188]
[206.47602844 -67.93988037]
[193.19612122 -60.90282059]
[178.84541321 -56.42468643]
[163.91223145 -54.65939713]
[148.90496826 -55.66852188]
[145.14868164 -41.14646530]
[141.39237976 -26.62440491]
[137.63607788 -12.10234547]
[133.87977600 2.41971421]
[130.12347412 16.94177437]
[140.47387695 25.85166550]
[146.00215149 38.41219330]
[145.57725525 52.19510269]
[139.22512817 64.50886536]
[128.13473511 72.92428589]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[101.74620056 154.25836182]
[98.14004517 166.22412109]
[87.69347382 172.32295227]
[83.50646210 186.72673035]
[79.31945038 201.13050842]
[86.67333221 214.86215210]
[82.22192383 229.41000366]
[69.08557129 236.33618164]
[64.89856720 250.73995972]
[70.41528320 262.39880371]
[66.63138580 274.30953979]
[56.09516525 280.25216675]
[57.26562881 285.33911133]
[56.44940948 289.90936279]
[54.17601013 293.29266357]
[51.16421127 295.12606812]
[46.12729645 309.25509644]
[41.09037781 323.38412476]
[36.05346298 337.51315308]
[31.01654625 351.64218140]
[25.97963142 365.77120972]
[20.94271469 379.90023804]
[34.31346130 386.74700928]
[46.67610550 395.28045654]
[57.81910706 405.35461426]
[67.55178833 416.79708862]
[75.70761871 429.41204834]
[82.14703369 442.98367310]
[86.75984955 457.27972412]
[89.46713257 472.05557251]
[90.22256470 487.05838013]
[89.01321411 502.03143311]
[85.85977173 516.71850586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 189]
[44 186]
[45 185]
[48 182]
[49 181]
[50 180]
[52 177]
[53 176]
[54 175]
[56 173]
[57 172]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
