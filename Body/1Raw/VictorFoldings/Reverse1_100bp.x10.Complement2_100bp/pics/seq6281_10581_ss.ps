%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[245.23843384 324.19793701]
[235.74954224 312.58065796]
[226.26063538 300.96340942]
[216.77174377 289.34613037]
[207.28283691 277.72888184]
[197.79394531 266.11160278]
[194.34136963 265.39599609]
[191.06388855 262.97253418]
[188.76039124 258.94177246]
[188.15472412 253.75714111]
[179.19403076 241.72776794]
[170.23333740 229.69837952]
[161.27264404 217.66900635]
[152.31195068 205.63963318]
[151.13751221 220.59358215]
[141.48565674 232.07582092]
[126.95628357 235.80374146]
[112.96849060 230.38693237]
[104.73938751 217.84573364]
[105.33821869 202.85768127]
[114.54162598 191.01296997]
[128.91697693 186.72938538]
[143.10356140 191.60527039]
[135.63581848 178.59632874]
[128.16807556 165.58737183]
[120.70034027 152.57841492]
[113.23259735 139.56945801]
[105.76485443 126.56051636]
[98.29711914 113.55155945]
[99.21147156 128.52366638]
[97.22737885 143.39186096]
[92.41902161 157.60029602]
[84.96615601 170.61778259]
[75.14741516 181.95764160]
[63.32987595 191.19592285]
[49.95535278 197.98724365]
[35.52386093 202.07772827]
[20.57492828 203.31442261]
[5.66743422 201.65110779]
[-8.64129448 197.14996338]
[-21.81631470 189.97927856]
[-33.36507034 180.40711975]
[-42.85580063 168.79135132]
[-49.93368912 155.56623840]
[-54.33412552 141.22621155]
[-55.89258957 126.30739594]
[-54.55082321 111.36753082]
[-50.35898972 96.96514893]
[-43.47380066 83.63870239]
[-34.15266418 71.88641357]
[-22.74405861 62.14763641]
[-9.67450428 54.78647232]
[4.56738615 50.07812119]
[19.44916916 48.19861221]
[34.41447449 49.21820450]
[48.90382004 53.09878922]
[62.37550354 59.69527817]
[74.32588196 68.76106262]
[84.30818176 79.95721436]
[91.94661713 92.85961914]
[83.20433807 79.67314911]
[89.97359467 66.40565491]
[88.85794830 51.44719696]
[87.74230194 36.48874664]
[86.62664795 21.53029060]
[85.51100159 6.57183790]
[84.06158447 -8.35797024]
[74.73921967 -21.14093018]
[80.90930176 -34.69745255]
[79.12683105 -49.59117126]
[77.34436798 -64.48488617]
[75.56189728 -79.37860870]
[73.77943420 -94.27232361]
[71.99697113 -109.16603851]
[56.98134232 -109.06137085]
[42.04841614 -110.63861084]
[27.38598442 -113.87792206]
[13.17844486 -118.73857117]
[-0.39552596 -125.15941620]
[-13.16522312 -133.05972290]
[-24.97005272 -142.34013367]
[-35.66155624 -152.88394165]
[-45.10528183 -164.55853271]
[-53.18245697 -177.21708679]
[-59.79150772 -190.70042419]
[-64.84931946 -204.83897400]
[-68.29227448 -219.45492554]
[-70.07708740 -234.36447144]
[-70.18130493 -249.38011169]
[-68.60362244 -264.31298828]
[-65.36386871 -278.97531128]
[-60.50280380 -293.18270874]
[-54.08154678 -306.75650024]
[-46.18085861 -319.52593994]
[-36.90009689 -331.33050537]
[-26.35597420 -342.02169800]
[-14.68109989 -351.46505737]
[-2.02229500 -359.54187012]
[11.46124268 -366.15051270]
[25.59994316 -371.20788574]
[40.21599960 -374.65042114]
[55.12559509 -376.43478394]
[70.14122772 -376.53854370]
[85.07405853 -374.96041870]
[99.73629761 -371.72024536]
[113.94354248 -366.85873413]
[127.51713562 -360.43707275]
[140.28636169 -352.53601074]
[152.09063721 -343.25488281]
[162.78150940 -332.71044922]
[172.22453308 -321.03530884]
[180.30094910 -308.37625122]
[186.90919495 -294.89251709]
[191.96615601 -280.75366211]
[195.40824890 -266.13751221]
[197.19216919 -251.22785950]
[197.29548645 -236.21221924]
[195.71690369 -221.27943420]
[192.47627258 -206.61729431]
[187.61436462 -192.41018677]
[181.19229126 -178.83679199]
[173.29083252 -166.06781006]
[164.00936890 -154.26380920]
[153.46461487 -143.57325745]
[141.78916931 -134.13058472]
[129.12988281 -126.05453491]
[115.64595032 -119.44669342]
[101.50695038 -114.39015198]
[86.89068604 -110.94850922]
[88.67314911 -96.05478668]
[90.45561981 -81.16107178]
[92.23808289 -66.26735687]
[94.02055359 -51.37363815]
[95.80301666 -36.47991943]
[104.99788666 -24.76225853]
[98.95529938 -10.14043617]
[101.48622131 -7.68548965]
[102.95381165 -3.88269734]
[102.73752594 0.75481462]
[100.46945190 5.45618963]
[101.58510590 20.41464233]
[102.70075226 35.37309647]
[103.81639862 50.33155060]
[104.93205261 65.29000092]
[113.59452820 77.40654755]
[106.90506744 91.74397278]
[111.30606842 106.08381653]
[118.77381134 119.09277344]
[126.24155426 132.10173035]
[133.70928955 145.11067200]
[141.17703247 158.11962891]
[148.64477539 171.12858582]
[156.11251831 184.13752747]
[164.34132385 196.67893982]
[173.30201721 208.70831299]
[182.26271057 220.73768616]
[191.22340393 232.76707458]
[200.18411255 244.79644775]
[209.41120911 256.62271118]
[218.90010071 268.23999023]
[228.38900757 279.85723877]
[237.87789917 291.47451782]
[247.36680603 303.09176636]
[256.85568237 314.70904541]
[269.60809326 306.77145386]
[283.27084351 300.52984619]
[297.61959839 296.08670044]
[312.41873169 293.51495361]
[327.42523193 292.85684204]
[342.39266968 294.12316895]
[357.07531738 297.29318237]
[371.23199463 302.31475830]
[384.63031006 309.10549927]
[397.05017090 317.55383301]
[408.28771973 327.52111816]
[418.15835571 338.84359741]
[426.50003052 351.33538818]
[433.17575073 364.79135132]
[438.07589722 378.99053955]
[441.12002563 393.69976807]
[442.25811768 408.67752075]
[441.47149658 423.67782593]
[438.77310181 438.45440674]
[434.20721436 452.76458740]
[427.84881592 466.37335205]
[419.80230713 479.05731201]
[410.19985962 490.60809326]
[399.19909668 500.83609009]
[386.98071289 509.57333374]
[373.74530029 516.67633057]
[359.71023560 522.02844238]
[345.10598755 525.54180908]
[330.17233276 527.15875244]
[315.15451050 526.85266113]
[300.29916382 524.62860107]
[285.85018921 520.52307129]
[272.04483032 514.60351562]
[259.10986328 506.96713257]
[247.25761414 497.73931885]
[236.68275452 487.07156372]
[227.55891418 475.13909912]
[220.03591919 462.13784790]
[214.23730469 448.28128052]
[210.25828552 433.79693604]
[208.16419983 418.92269897]
[207.98944092 403.90280151]
[209.73687744 388.98385620]
[213.37780762 374.41085815]
[218.85244751 360.42312622]
[226.07090759 347.25036621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[60 146]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 136]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
