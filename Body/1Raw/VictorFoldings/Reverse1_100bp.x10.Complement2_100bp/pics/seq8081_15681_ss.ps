%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[83.08565521 461.11727905]
[88.64269257 475.18762207]
[89.57775116 490.28665161]
[85.79921722 504.93511963]
[77.67728424 517.69793701]
[66.00765228 527.32470703]
[51.93358612 532.87231445]
[36.83392715 533.79724121]
[22.18798447 530.00891113]
[9.43061829 521.87841797]
[-0.18833566 510.20236206]
[-5.72651005 496.12457275]
[-6.64133120 481.02429199]
[-2.84317350 466.38088989]
[5.29585743 453.62896729]
[16.97838211 444.01785278]
[31.05986786 438.48910522]
[46.16075134 437.58441162]
[49.91705322 423.06234741]
[53.67335510 408.54028320]
[57.42965317 394.01821899]
[49.67285919 381.35458374]
[53.27540970 366.57363892]
[66.61078644 358.52346802]
[70.36708832 344.00140381]
[74.12339020 329.47933960]
[72.65862274 326.27206421]
[72.67457581 322.19592285]
[74.56266785 317.95465088]
[78.38526917 314.40011597]
[82.78627014 300.06024170]
[87.18726349 285.72039795]
[91.58826447 271.38055420]
[95.98925781 257.04071045]
[100.39025879 242.70086670]
[104.79125977 228.36102295]
[106.35178375 213.44241333]
[105.01354980 198.50222778]
[94.15932465 184.71264648]
[102.04566956 168.07272339]
[100.48514557 153.15411377]
[98.92462921 138.23550415]
[97.36410522 123.31690216]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[79.39775085 50.30027390]
[75.64144897 35.77821732]
[71.88514709 21.25615692]
[61.18787003 14.04983330]
[58.35820770 1.87704599]
[64.38184357 -8.61306095]
[60.84217072 -23.18943596]
[57.30249786 -37.76581192]
[53.76282883 -52.34218597]
[42.98750305 -63.92678452]
[47.50292969 -78.12045288]
[43.96325684 -92.69683075]
[40.42358398 -107.27320099]
[36.88391113 -121.84957886]
[26.96948242 -110.59328461]
[11.98072529 -111.17391968]
[2.96679306 -123.16345978]
[6.57242203 -137.72366333]
[20.13967705 -144.12129211]
[33.66624069 -137.64152527]
[31.22051430 -152.44079590]
[28.77478790 -167.24006653]
[26.32905960 -182.03933716]
[23.55344963 -196.78030396]
[20.44933891 -211.45561218]
[17.34522820 -226.13090515]
[13.80555630 -240.70729065]
[9.83345985 -255.17181396]
[5.86136389 -269.63632202]
[-6.53377914 -274.90652466]
[-13.52832890 -286.18869019]
[-12.75918388 -299.24588013]
[-4.73081541 -309.32431030]
[-8.48711586 -323.84637451]
[-12.24341679 -338.36843872]
[-27.29353523 -337.81344604]
[-42.11101151 -340.50723267]
[-56.00280762 -346.32376099]
[-68.31917572 -354.99099731]
[-78.48406219 -366.10357666]
[-86.02203369 -379.14172363]
[-90.58052063 -393.49560547]
[-91.94631958 -408.49389648]
[-90.05554962 -423.43508911]
[-84.99665070 -437.62036133]
[-77.00622559 -450.38619995]
[-66.45800781 -461.13558960]
[-53.84535217 -469.36572266]
[-39.75818253 -474.69165039]
[-24.85537529 -476.86431885]
[-9.83396435 -475.78207397]
[4.60347176 -471.49551392]
[17.78166962 -464.20516968]
[29.08425903 -454.25198364]
[37.98259735 -442.10153198]
[44.06049728 -428.32208252]
[47.03367996 -413.55813599]
[46.76308441 -398.50021362]
[43.26136780 -383.85263062]
[36.69231415 -370.30044556]
[27.36316490 -358.47753906]
[15.71026611 -348.93688965]
[2.27864265 -342.12472534]
[6.03494310 -327.60266113]
[9.79124355 -313.08059692]
[24.63377190 -305.17251587]
[29.25539589 -288.65115356]
[20.32588768 -273.60842896]
[24.29798317 -259.14389038]
[28.27008057 -244.67938232]
[30.63687706 -243.17724609]
[32.55126190 -240.64707947]
[33.61869812 -237.25650024]
[33.51255417 -233.31274414]
[32.02053070 -229.23501587]
[35.12464142 -214.55972290]
[38.22875214 -199.88441467]
[40.96860123 -197.66505432]
[42.76960754 -194.00836182]
[42.96792603 -189.37004089]
[41.12833023 -184.48506165]
[43.57405853 -169.68579102]
[46.01978683 -154.88652039]
[48.46551132 -140.08724976]
[51.46028900 -125.38925171]
[54.99995804 -110.81287384]
[58.53963089 -96.23650360]
[62.07930374 -81.66012573]
[72.60144806 -71.11812592]
[68.33920288 -55.88185883]
[71.87887573 -41.30548477]
[75.41854858 -26.72910881]
[78.95822144 -12.15273380]
[91.73791504 -0.12583674]
[86.40720367 17.49985504]
[90.16350555 32.02191544]
[93.91980743 46.54397583]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.92855835 90.41831970]
[124.77442932 80.05651093]
[139.16763306 75.83327484]
[153.89268494 78.69208527]
[165.65997314 87.99428558]
[171.84066772 101.66172791]
[171.05397034 116.64108276]
[163.47563171 129.58592224]
[150.79867554 137.60433960]
[135.85517883 138.90498352]
[121.98353577 133.19729614]
[112.28270721 121.75637817]
[113.84323120 136.67498779]
[115.40375519 151.59359741]
[116.96427917 166.51219177]
[126.47420502 175.22563171]
[127.46684265 187.68350220]
[119.95372772 197.16400146]
[121.29196930 212.10418701]
[126.69422913 198.11077881]
[135.03678894 185.64474487]
[145.91259766 175.31436157]
[158.79098511 167.62365723]
[173.04359436 162.94786072]
[187.97502136 161.51513672]
[202.85670471 163.39538574]
[216.96255493 168.49685669]
[229.60430908 176.57064819]
[240.16514587 187.22282410]
[248.12977600 199.93363953]
[253.10958862 214.08288574]
[254.86161804 228.98022461]
[253.30036926 243.89874268]
[248.50201416 258.11056519]
[240.70068359 270.92224121]
[230.27703857 281.70870972]
[217.73962402 289.94360352]
[203.70022583 295.22515869]
[188.84381104 297.29568481]
[173.89527893 296.05413818]
[159.58399963 291.56112671]
[146.60824585 284.03582764]
[135.60113525 273.84545898]
[127.09974670 261.48721313]
[121.51885223 247.56408691]
[119.13110352 232.76202393]
[114.73011017 247.10186768]
[110.32910919 261.44171143]
[105.92810822 275.78155518]
[101.52711487 290.12139893]
[97.12611389 304.46124268]
[92.72511292 318.80108643]
[88.64544678 333.23565674]
[84.88915253 347.75772095]
[81.13285065 362.27978516]
[88.89231110 375.78637695]
[84.87601471 390.46029663]
[71.95171356 397.77453613]
[68.19541168 412.29660034]
[64.43910980 426.81866455]
[60.68281174 441.34069824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[24 204]
[25 203]
[26 202]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 168]
[38 167]
[40 164]
[41 163]
[42 162]
[43 161]
[44 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[54 141]
[55 140]
[56 139]
[57 138]
[59 136]
[60 135]
[61 134]
[62 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 125]
[73 124]
[74 123]
[75 118]
[76 117]
[77 116]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
