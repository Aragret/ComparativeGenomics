%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[98.58622742 407.86581421]
[93.53414154 422.03323364]
[86.03336334 435.07080078]
[76.32501984 446.55938721]
[64.72119141 456.12969971]
[51.59488678 463.47409058]
[37.36807251 468.35644531]
[22.49807549 470.61984253]
[7.46290588 470.19152832]
[-7.25411701 467.08523560]
[-21.17990303 461.40084839]
[-33.86679459 453.32107544]
[-44.90695953 443.10568237]
[-53.94550323 431.08300781]
[-60.69187927 417.63958740]
[-64.92920685 403.20748901]
[-66.52128601 388.25073242]
[-65.41693878 373.25006104]
[-61.65165329 358.68768311]
[-55.34647369 345.03176880]
[-46.70408630 332.72122192]
[-36.00231171 322.15185547]
[-23.58516121 313.66339111]
[-9.85179710 307.52868652]
[4.75630808 303.94497681]
[19.76956558 303.02743530]
[34.70536041 304.80557251]
[39.10635757 290.46572876]
[43.50735855 276.12588501]
[47.90835571 261.78604126]
[52.30935287 247.44618225]
[56.71035004 233.10633850]
[55.30387115 228.54225159]
[56.74958801 223.04617310]
[61.46175385 218.40859985]
[66.28775024 204.20614624]
[70.47476196 189.80236816]
[74.01443481 175.22599792]
[77.55410767 160.64961243]
[73.03868103 146.45594788]
[83.81400299 134.87135315]
[87.35367584 120.29497528]
[90.89334869 105.71859741]
[91.56313324 90.73355865]
[89.33801270 75.89952087]
[79.63918304 63.39978790]
[85.40290833 49.66556549]
[83.17778778 34.83152390]
[80.95266724 19.99747849]
[78.72755432 5.16343498]
[68.83803558 -3.11667371]
[67.29011536 -15.51779175]
[74.37240601 -25.32430649]
[72.36839294 -40.18983459]
[70.36437988 -55.05536270]
[60.85272598 -67.69811249]
[66.82028961 -81.34499359]
[64.81627655 -96.21052551]
[62.81225967 -111.07604980]
[60.80824661 -125.94158173]
[56.72858047 -140.37612915]
[50.65474701 -154.09140015]
[44.58091354 -167.80667114]
[38.50707626 -181.52192688]
[32.43324280 -195.23719788]
[26.35940933 -208.95246887]
[11.99457932 -204.56965637]
[-2.79381251 -201.95034790]
[-17.79010582 -201.13270569]
[-32.77561188 -202.12867737]
[-47.53179932 -204.92373657]
[-61.84347534 -209.47711182]
[-75.50193787 -215.72242737]
[-88.30799866 -223.56857300]
[-100.07492065 -232.90115356]
[-110.63109589 -243.58406067]
[-119.82258606 -255.46150208]
[-127.51535797 -268.36029053]
[-133.59722900 -282.09231567]
[-137.97949219 -296.45730591]
[-140.59825134 -311.24578857]
[-141.41532898 -326.24212646]
[-140.41879272 -341.22760010]
[-137.62318420 -355.98367310]
[-133.06927490 -370.29516602]
[-126.82345581 -383.95339966]
[-118.97682953 -396.75918579]
[-109.64381409 -408.52572632]
[-98.96051025 -419.08151245]
[-87.08271790 -428.27255249]
[-74.18364716 -435.96484375]
[-60.45140076 -442.04620361]
[-46.08624268 -446.42794800]
[-31.29765320 -449.04614258]
[-16.30129814 -449.86267090]
[-1.31586719 -448.86557007]
[13.44010925 -446.06939697]
[27.75144577 -441.51495361]
[41.40943909 -435.26864624]
[54.21491623 -427.42153931]
[65.98114014 -418.08807373]
[76.53651428 -407.40435791]
[85.72711945 -395.52624512]
[93.41892242 -382.62686157]
[99.49976349 -368.89440918]
[103.88095856 -354.52908325]
[106.49861908 -339.74038696]
[107.31456757 -324.74401855]
[106.31691742 -309.75860596]
[103.52020264 -295.00274658]
[98.96521759 -280.69158936]
[92.71838379 -267.03381348]
[84.87079620 -254.22863770]
[75.53689575 -242.46276855]
[64.85280609 -231.90779114]
[52.97432327 -222.71762085]
[40.07467651 -215.02630615]
[46.14850998 -201.31103516]
[52.22234344 -187.59576416]
[58.29617691 -173.88049316]
[64.37001038 -160.16523743]
[70.44384766 -146.44996643]
[71.37045288 -161.42132568]
[76.61255646 -175.47550964]
[85.71666718 -187.39671326]
[97.89519501 -196.15362549]
[112.09456635 -200.98869324]
[127.08640289 -201.48361206]
[141.57374573 -197.59559631]
[154.30331421 -189.66096497]
[164.17385864 -178.36618042]
[170.33148193 -164.68832397]
[172.24349976 -149.81068420]
[169.74447632 -135.02030945]
[163.05062866 -121.59674072]
[152.74102783 -110.70123291]
[139.70756531 -103.27635193]
[125.07775879 -99.96443939]
[110.11723328 -101.05199432]
[96.12023163 -106.44494629]
[84.29763031 -115.67674255]
[75.67377472 -127.94559479]
[77.67778778 -113.08006287]
[79.68180084 -98.21453857]
[81.68581390 -83.34900665]
[91.05413055 -71.76954651]
[85.22990417 -57.05937576]
[87.23391724 -42.19384766]
[89.23793030 -27.32832146]
[100.69706726 -14.03715229]
[93.56159973 2.93831778]
[95.78671265 17.77236176]
[98.01183319 32.60640717]
[100.23694611 47.44044876]
[109.77662659 58.87915039]
[104.17205811 73.67440033]
[106.39717865 88.50844574]
[110.95696259 74.21829224]
[118.54273987 61.27781677]
[128.78439331 50.31840515]
[141.18218994 41.87479401]
[155.13122559 36.35896301]
[169.95089722 34.04004669]
[184.91810608 35.03118515]
[199.30259705 39.28402328]
[212.40249634 46.59105301]
[223.57862854 56.59574509]
[232.28570557 68.80995178]
[238.09887695 82.63771820]
[240.73449707 97.40435028]
[240.06398010 112.38935852]
[236.12004089 126.86158752]
[229.09510803 140.11489868]
[219.33195496 151.50263977]
[207.30693054 160.46919250]
[193.60678101 166.57702637]
[178.89994812 169.52815247]
[163.90402222 169.17857361]
[149.35067749 165.54533386]
[135.95002747 158.80572510]
[124.35588837 149.28857422]
[115.13398743 137.45825195]
[108.73427582 123.89198303]
[105.46972656 109.25827026]
[101.93005371 123.83464813]
[98.39038086 138.41102600]
[102.65262604 153.64729309]
[92.13047791 164.18928528]
[88.59081268 178.76567078]
[85.05113983 193.34204102]
[98.39119720 186.48326111]
[112.71545410 190.93472290]
[119.81833649 204.14642334]
[115.63098145 218.55010986]
[102.55209351 225.89468384]
[88.07386017 221.97285461]
[80.49020386 209.03215027]
[75.66420746 223.23460388]
[71.05020142 237.50733948]
[66.64920044 251.84718323]
[62.24820328 266.18704224]
[57.84720612 280.52688599]
[53.44620514 294.86672974]
[49.04520798 309.20657349]
[62.40704346 316.11315918]
[74.32080078 325.29479980]
[84.40349579 336.45629883]
[92.33102417 349.23886108]
[97.84853363 363.23159790]
[100.77866364 377.98471069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[32 199]
[35 198]
[36 197]
[37 190]
[38 189]
[39 188]
[41 186]
[42 185]
[43 184]
[44 157]
[45 156]
[47 154]
[48 153]
[49 152]
[50 151]
[53 149]
[54 148]
[55 147]
[57 145]
[58 144]
[59 143]
[60 142]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
