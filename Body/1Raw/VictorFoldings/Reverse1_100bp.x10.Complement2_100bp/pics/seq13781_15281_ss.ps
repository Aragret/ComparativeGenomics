%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[34.45101929 530.50994873]
[31.47097015 545.23321533]
[26.59459114 559.44152832]
[19.90531921 572.89172363]
[11.51761913 585.35375977]
[1.57501519 596.61425781]
[-9.75236320 606.48065186]
[-22.27068710 614.78405762]
[-35.76575470 621.38244629]
[-50.00664520 626.16278076]
[-64.74967957 629.04339600]
[-79.74258423 629.97497559]
[-94.72881317 628.94152832]
[-109.45192719 625.96081543]
[-123.66000366 621.08374023]
[-137.10990906 614.39379883]
[-149.57151794 606.00555420]
[-160.83157349 596.06237793]
[-170.69741821 584.73455811]
[-179.00022888 572.21582031]
[-185.59793091 558.72045898]
[-190.37763977 544.47930908]
[-193.25755310 529.73614502]
[-194.18840027 514.74322510]
[-193.15425110 499.75701904]
[-190.17280579 485.03405762]
[-185.29507446 470.82620239]
[-178.60452271 457.37661743]
[-170.21563721 444.91540527]
[-160.27195740 433.65582275]
[-148.94363403 423.79052734]
[-136.42453003 415.48831177]
[-122.92882538 408.89123535]
[-108.68748474 404.11221313]
[-93.94417572 401.23300171]
[-78.95117950 400.30285645]
[-63.96504974 401.33773804]
[-49.24221802 404.31988525]
[-35.03461075 409.19830322]
[-28.35441399 395.76791382]
[-21.67421913 382.33752441]
[-14.99402523 368.90716553]
[-8.31383038 355.47677612]
[-1.63363624 342.04641724]
[4.84585953 328.51806641]
[11.12322044 314.89474487]
[17.40058136 301.27142334]
[23.67794228 287.64810181]
[29.95530319 274.02481079]
[28.25436783 259.22763062]
[41.05679321 249.93202209]
[47.33415222 236.30870056]
[46.55004501 231.59762573]
[48.71708298 226.34396362]
[54.00658798 222.37751770]
[60.68678284 208.94714355]
[67.36697388 195.51676941]
[72.50893402 181.42562866]
[76.04860687 166.84925842]
[79.58827972 152.27287292]
[83.12795258 137.69650269]
[86.66762543 123.12012482]
[90.20729828 108.54375458]
[93.31140900 93.86844635]
[95.97720337 79.10723114]
[98.64299774 64.34601593]
[101.30879211 49.58479691]
[92.40629578 39.47737122]
[90.97148895 26.28071404]
[97.30544281 14.83680344]
[108.89968872 9.21515369]
[111.78496552 -5.50473785]
[106.84663391 -20.53548813]
[116.88755798 -31.53681183]
[119.77282715 -46.25670242]
[122.65810394 -60.97659302]
[125.54337311 -75.69648743]
[128.42864990 -90.41637421]
[131.31391907 -105.13626862]
[134.19918823 -119.85616302]
[135.09201050 -134.82955933]
[133.97636414 -149.78802490]
[132.86071777 -164.74647522]
[131.63374329 -179.69621277]
[130.29550171 -194.63638306]
[117.14263153 -202.65563965]
[111.30204010 -216.71766663]
[114.81999969 -231.34941101]
[126.14360809 -240.98860168]
[124.80537415 -255.92878723]
[123.46713257 -270.86895752]
[122.12889862 -285.80914307]
[120.79066467 -300.74932861]
[106.03937531 -304.10412598]
[93.04777527 -311.85482788]
[83.08866882 -323.24215698]
[77.13773346 -337.15048218]
[75.77798462 -352.21722412]
[79.14264679 -366.96624756]
[86.90206909 -379.95266724]
[98.29606628 -389.90414429]
[112.20838165 -395.84576416]
[127.27601624 -397.19540405]
[142.02279663 -393.82086182]
[155.00399780 -386.05273438]
[164.94783020 -374.65206909]
[170.88012695 -360.73577881]
[172.21968079 -345.66723633]
[168.83526611 -330.92272949]
[161.05844116 -317.94674683]
[149.65110779 -308.01052856]
[135.73085022 -302.08758545]
[137.06909180 -287.14739990]
[138.40731812 -272.20721436]
[139.74555969 -257.26702881]
[141.08378601 -242.32682800]
[153.94021606 -234.85351562]
[160.00251770 -221.07991028]
[156.75399780 -206.20373535]
[145.23568726 -195.97462463]
[146.57391357 -181.03443909]
[150.30163574 -174.65275574]
[147.81916809 -165.86212158]
[148.93481445 -150.90367126]
[150.05046082 -135.94522095]
[156.04914856 -149.69351196]
[165.95556641 -160.95684814]
[178.82553101 -168.66166687]
[193.43234253 -172.07357788]
[208.38375854 -170.86741638]
[222.25473022 -165.15811157]
[233.72315979 -155.48983765]
[241.69593811 -142.78414917]
[245.41316223 -128.25202942]
[244.52052307 -113.27861786]
[239.10310364 -99.29106903]
[229.67724609 -87.62258911]
[217.14138794 -79.38534546]
[202.69035339 -75.36445618]
[187.70152283 -75.94316864]
[173.60353088 -81.06632996]
[161.74012756 -90.24562836]
[153.24203491 -102.60614777]
[148.91908264 -116.97088623]
[146.03381348 -102.25099182]
[143.14854431 -87.53110504]
[140.26325989 -72.81121063]
[137.37799072 -58.09132004]
[134.49272156 -43.37142944]
[131.60745239 -28.65153885]
[136.75215149 -14.67365265]
[126.50485229 -2.61946511]
[123.61958313 12.10042572]
[133.58987427 25.64413834]
[130.62138367 42.54097366]
[116.07001495 52.25059128]
[113.40422058 67.01181030]
[110.73841858 81.77302551]
[108.07262421 96.53424835]
[109.59199524 99.17640686]
[110.18357086 102.42980194]
[109.61911774 105.95185089]
[107.80013275 109.32046509]
[104.78367615 112.08342743]
[101.24400330 126.65979767]
[97.70433044 141.23617554]
[94.16465759 155.81254578]
[90.62498474 170.38893127]
[87.08531189 184.96530151]
[97.37451172 174.05052185]
[110.88022614 167.52398682]
[125.82554626 166.24436951]
[140.24415588 170.38003540]
[152.23904419 179.38685608]
[160.23207092 192.07981873]
[163.17161560 206.78897095]
[160.67094421 221.57905579]
[153.05903625 234.50418091]
[141.33740234 243.86384583]
[127.04819489 248.42658997]
[112.07141876 247.59213257]
[98.37753296 241.47024536]
[87.76819611 230.86639404]
[81.63924408 217.17565918]
[80.79735565 202.19696045]
[74.11715698 215.62733459]
[67.43696594 229.05770874]
[60.95746994 242.58605957]
[54.68010712 256.20938110]
[55.93204117 271.98098755]
[43.57861710 280.30215454]
[37.30125809 293.92547607]
[31.02389717 307.54879761]
[24.74653625 321.17211914]
[18.46917534 334.79544067]
[18.69414902 341.40307617]
[15.95896339 346.38461304]
[11.79673958 348.72659302]
[5.11654520 362.15698242]
[-1.56364942 375.58737183]
[-8.24384403 389.01773071]
[-14.92403889 402.44812012]
[-21.60423279 415.87847900]
[-9.14183140 424.26559448]
[2.11917591 434.20767212]
[11.98609829 445.53457642]
[20.29010010 458.05249023]
[26.88908958 471.54724121]
[31.67014885 485.78790283]
[34.55146408 500.53082275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[51 189]
[52 188]
[55 187]
[56 186]
[57 185]
[58 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 159]
[65 158]
[66 157]
[67 156]
[71 153]
[72 152]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 125]
[82 124]
[83 123]
[84 121]
[85 120]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
