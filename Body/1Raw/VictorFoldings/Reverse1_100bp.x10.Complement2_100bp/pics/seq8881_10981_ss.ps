%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[155.24090576 544.39874268]
[150.67886353 530.02380371]
[149.83586121 514.96594238]
[152.76489258 500.17163086]
[159.28184509 486.57089233]
[168.97705078 475.01867676]
[181.24105835 466.24114990]
[195.30296326 460.79010010]
[193.52049255 445.89639282]
[191.73802185 431.00265503]
[189.95556641 416.10894775]
[188.17309570 401.21524048]
[176.34184265 392.23986816]
[174.32200623 377.16091919]
[183.81639099 364.81207275]
[182.03393555 349.91833496]
[180.25146484 335.02462769]
[177.25669861 320.32662964]
[173.06968689 305.92285156]
[168.88267517 291.51907349]
[163.74070740 277.42791748]
[157.66687012 263.71264648]
[151.59304810 249.99739075]
[145.51921082 236.28211975]
[139.93649292 231.43907166]
[139.45874023 222.31713867]
[133.58976746 208.51296997]
[127.72080994 194.70878601]
[121.85185242 180.90461731]
[115.98289490 167.10043335]
[110.11392975 153.29626465]
[103.51305389 166.76579285]
[89.36637878 171.75292969]
[75.77775574 165.40081787]
[70.53137970 151.34822083]
[76.63259888 137.64511108]
[90.58636475 132.14125061]
[104.39865875 137.98884583]
[99.78464508 123.71610260]
[95.17063904 109.44337463]
[89.92391968 95.39089966]
[84.05496216 81.58672333]
[78.18599701 67.78254700]
[72.31703949 53.97837067]
[66.44807434 40.17419434]
[60.57911682 26.37001610]
[54.71015549 12.56583881]
[42.19017410 2.89316535]
[44.33092117 -11.84679604]
[38.46195984 -25.65097237]
[25.94197655 -35.32364655]
[28.08272362 -50.06361008]
[22.21376228 -63.86778641]
[9.69378090 -73.54045868]
[11.83452702 -88.28041840]
[5.96556664 -102.08459473]
[-8.41644764 -108.06752777]
[-14.17176247 -122.15052795]
[-8.37932396 -135.82470703]
[-14.24828434 -149.62889099]
[-20.11724472 -163.43305969]
[-25.98620605 -177.23724365]
[-32.26356506 -190.86056519]
[-38.94375992 -204.29093933]
[-45.62395477 -217.72131348]
[-52.30414963 -231.15168762]
[-58.98434448 -244.58206177]
[-73.20635223 -239.74285889]
[-87.94647980 -236.84249878]
[-102.94167328 -235.93273926]
[-117.92432404 -237.02984619]
[-132.62704468 -240.11419678]
[-146.78746033 -245.13078308]
[-160.15286255 -251.99006653]
[-172.48471069 -260.56964111]
[-183.56294250 -270.71636963]
[-193.18984985 -282.24920654]
[-201.19361877 -294.96231079]
[-207.43144226 -308.62878418]
[-211.79197693 -323.00479126]
[-214.19740295 -337.83370972]
[-214.60481262 -352.85095215]
[-213.00689697 -367.78851318]
[-209.43222046 -382.37976074]
[-203.94453430 -396.36434937]
[-196.64179993 -409.49270630]
[-187.65434265 -421.53051758]
[-177.14253235 -432.26296997]
[-165.29399109 -441.49850464]
[-152.32014465 -449.07235718]
[-138.45254517 -454.84930420]
[-123.93867493 -458.72625732]
[-109.03754425 -460.63406372]
[-94.01508331 -460.53866577]
[-79.13938141 -458.44174194]
[-64.67592621 -454.38073730]
[-50.88282013 -448.42813110]
[-38.00622559 -440.69012451]
[-26.27593994 -431.30480957]
[-15.90130043 -420.43972778]
[-7.06745768 -408.28872681]
[0.06793942 -395.06869507]
[5.37755060 -381.01553345]
[8.76661968 -366.38003540]
[10.17466545 -351.42340088]
[9.57655907 -336.41253662]
[6.98297405 -321.61535645]
[2.44019675 -307.29589844]
[-3.97070217 -293.70974731]
[-12.13531208 -281.09933472]
[-21.90792656 -269.68969727]
[-33.11414337 -259.68450928]
[-45.55397034 -251.26225281]
[-38.87377548 -237.83187866]
[-32.19358063 -224.40150452]
[-25.51338577 -210.97113037]
[-18.83319092 -197.54075623]
[-16.22165298 -196.52192688]
[-13.85633469 -194.40724182]
[-12.15664959 -191.28530884]
[-11.50222588 -187.39477539]
[-12.18202877 -183.10620117]
[-6.31306839 -169.30203247]
[-0.44410753 -155.49784851]
[5.42485332 -141.69366455]
[19.29116821 -136.37757874]
[25.43977547 -122.46178436]
[19.76974297 -107.95355988]
[25.63870430 -94.14938354]
[37.73889923 -85.46407318]
[36.01794052 -69.73674774]
[41.88690186 -55.93256760]
[53.98709488 -47.24726105]
[52.26613617 -31.51993370]
[58.13509750 -17.71575737]
[70.23529053 -9.03045082]
[68.51433563 6.69687843]
[74.38329315 20.50105476]
[80.25225067 34.30523300]
[86.12121582 48.10940933]
[91.99017334 61.91358566]
[97.85913849 75.71776581]
[103.72809601 89.52194214]
[110.32897186 76.05240631]
[124.47565460 71.06526947]
[138.06427002 77.41738892]
[143.31065369 91.46998596]
[137.20942688 105.17308807]
[123.25566101 110.67694855]
[109.44337463 104.82936096]
[114.05738068 119.10209656]
[118.67138672 133.37483215]
[123.91810608 147.42730713]
[129.78706360 161.23147583]
[135.65603638 175.03565979]
[141.52499390 188.83982849]
[147.39395142 202.64401245]
[153.26290894 216.44818115]
[159.23448181 230.20828247]
[165.30830383 243.92355347]
[171.38214111 257.63882446]
[177.45597839 271.35409546]
[181.21411133 256.83248901]
[192.15405273 246.57005310]
[206.88594055 243.74668884]
[220.84494019 249.23724365]
[229.70570374 261.34042358]
[230.72264099 276.30590820]
[223.58061218 289.49649048]
[210.49269104 296.82492065]
[195.51428223 296.02041626]
[183.28645325 287.33206177]
[187.47346497 301.73583984]
[191.66047668 316.13961792]
[196.32427979 301.88308716]
[207.01467896 291.36093140]
[221.34339905 286.92385864]
[236.10939026 289.56314087]
[248.01387024 298.68908691]
[254.39735413 312.26300049]
[253.83377075 327.25241089]
[246.44900513 340.30865479]
[233.89283752 348.51492310]
[218.97035217 350.03790283]
[205.01527405 344.53738403]
[195.14518738 333.24215698]
[196.92764282 348.13589478]
[198.71011353 363.02960205]
[210.85043335 372.78921509]
[212.44593811 387.91897583]
[203.06681824 399.43276978]
[204.84927368 414.32647705]
[206.63174438 429.22018433]
[208.41421509 444.11392212]
[210.19667053 459.00762939]
[225.14776611 460.98645020]
[239.13673401 466.62200928]
[251.28419495 475.56011963]
[260.82656860 487.23889160]
[267.16403198 500.92419434]
[269.89816284 515.75579834]
[268.85711670 530.80126953]
[264.10635376 545.11492920]
[255.94447327 557.79699707]
[244.88455200 568.05023193]
[231.62182617 575.23016357]
[216.99000549 578.88537598]
[201.90885925 578.78613281]
[187.32640076 574.93872070]
[174.15928650 567.58496094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[15 188]
[16 187]
[17 186]
[18 174]
[19 173]
[20 172]
[21 162]
[22 161]
[23 160]
[24 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[31 153]
[38 152]
[39 151]
[40 150]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[49 135]
[50 134]
[52 132]
[53 131]
[55 129]
[56 128]
[59 125]
[60 124]
[61 123]
[62 122]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
