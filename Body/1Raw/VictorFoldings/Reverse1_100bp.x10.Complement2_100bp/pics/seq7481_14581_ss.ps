%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[57.82980347 681.18518066]
[43.30789948 685.02825928]
[28.40859795 686.94293213]
[13.38685226 686.89642334]
[-1.50029838 684.88946533]
[-15.99811459 680.95648193]
[-29.85852051 675.16473389]
[-42.84434509 667.61340332]
[-54.73338699 658.43157959]
[-65.32220459 647.77642822]
[-74.42961121 635.83032227]
[-81.89977264 622.79754639]
[-87.60485840 608.90130615]
[-91.44724274 594.37921143]
[-93.36118317 579.47979736]
[-93.31393433 564.45806885]
[-91.30629730 549.57098389]
[-87.37262726 535.07336426]
[-81.58023834 521.21325684]
[-74.02823639 508.22778320]
[-64.84585571 496.33917236]
[-54.19021606 485.75085449]
[-42.24364471 476.64401245]
[-29.21057129 469.17446899]
[-15.31400490 463.47006226]
[-0.79173237 459.62835693]
[14.10774899 457.71511841]
[29.12948990 457.76309204]
[31.13350487 442.89758301]
[33.13751984 428.03204346]
[35.14153290 413.16650391]
[37.14554596 398.30099487]
[24.63539314 390.17932129]
[16.86012459 377.37875366]
[15.40769863 362.41040039]
[20.61950874 348.23797607]
[31.51209259 337.69100952]
[45.96223068 332.89987183]
[47.96624374 318.03436279]
[49.97025681 303.16882324]
[51.97427368 288.30331421]
[39.02612305 280.86862183]
[29.88611221 269.01089478]
[25.97170258 254.51805115]
[27.90945053 239.59046936]
[35.43495560 226.50686646]
[47.42844391 217.27653503]
[62.08129120 213.33067322]
[64.08530426 198.46513367]
[66.08931732 183.59960938]
[68.09333038 168.73408508]
[70.09734344 153.86856079]
[61.54291916 166.19015503]
[49.89984894 175.64736938]
[36.08635330 181.49435425]
[21.19182205 183.27001953]
[6.39090061 180.83428955]
[-7.14914799 174.37928772]
[-18.36049843 164.41406250]
[-26.35898018 151.72453308]
[-30.51379585 137.31143188]
[-30.49728012 122.31143951]
[-26.31073761 107.90752411]
[-18.28433418 95.23563385]
[-7.05106592 85.29512024]
[6.50316381 78.86994934]
[21.30941200 76.46682739]
[36.19999695 78.27526855]
[50.00058365 84.15266418]
[61.62280273 93.63549805]
[70.15007782 105.97589874]
[74.90990448 120.20066833]
[75.52657318 135.19142151]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.12747192 44.90789413]
[117.87661743 35.80423737]
[123.60105133 31.12955284]
[130.08055115 17.60120773]
[136.56004333 4.07286263]
[130.44607544 -12.31733704]
[137.93029785 -27.75434685]
[153.94197083 -32.89875412]
[160.21932983 -46.52207184]
[166.49668884 -60.14538574]
[172.77404785 -73.76869965]
[179.05140686 -87.39202118]
[185.32878113 -101.01533508]
[191.60614014 -114.63864899]
[194.92839050 -129.26611328]
[195.15171814 -144.26445007]
[195.37504578 -159.26278687]
[195.59837341 -174.26112366]
[195.82170105 -189.25946045]
[181.74108887 -194.92520142]
[170.66067505 -205.29771423]
[164.07901001 -218.97419739]
[162.88619995 -234.10501099]
[167.24357605 -248.64384460]
[176.56181335 -260.62445068]
[189.58071899 -268.42651367]
[204.53959656 -270.99493408]
[219.41535950 -267.98229980]
[232.19619751 -259.79605103]
[241.15361023 -247.54331970]
[245.07617188 -232.88119507]
[243.43338013 -217.79258728]
[236.44743347 -204.31813049]
[225.06311035 -194.28013611]
[210.82003784 -189.03613281]
[210.59671021 -174.03779602]
[210.37338257 -159.03945923]
[210.15005493 -144.04112244]
[209.92672729 -129.04278564]
[216.75901794 -142.39642334]
[226.18496704 -154.06481934]
[237.80377197 -163.55183411]
[251.12141418 -170.45405579]
[265.57159424 -174.47801208]
[280.53988647 -175.45259094]
[295.38986206 -173.33634949]
[309.49008179 -168.21929932]
[322.24096680 -160.31898499]
[333.10037231 -149.97135925]
[341.60653687 -137.61639404]
[347.39776611 -123.77943420]
[350.22784424 -109.04883575]
[349.97640991 -94.05094147]
[346.65417480 -79.42347717]
[340.40237427 -65.78840637]
[331.48687744 -53.72550583]
[320.28674316 -43.74769211]
[307.27819824 -36.27922058]
[293.01440430 -31.63766479]
[278.10183716 -30.02038002]
[263.17462158 -31.49613762]
[248.86743164 -36.00218201]
[235.78863525 -43.34692001]
[224.49435425 -53.21804810]
[215.46481323 -65.19583893]
[209.08396912 -78.77098846]
[205.62312317 -93.36628723]
[205.22944641 -108.36128998]
[198.95208740 -94.73797607]
[192.67472839 -81.11465454]
[186.39736938 -67.49134064]
[180.12001038 -53.86802673]
[173.84265137 -40.24470901]
[167.56529236 -26.62139320]
[173.67471313 -15.27659798]
[172.11109924 -2.29056048]
[163.22283936 7.56891346]
[150.08839417 10.55235863]
[143.60888672 24.08070374]
[137.12939453 37.60905075]
[130.75079346 51.18525696]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.14988708 141.46878052]
[84.96287537 155.87257385]
[82.95886230 170.73809814]
[80.95484924 185.60362244]
[78.95083618 200.46916199]
[76.94682312 215.33468628]
[90.03169250 223.01985168]
[99.15277863 235.09663391]
[102.94501495 249.70596313]
[100.86067200 264.61380005]
[93.24820709 277.55270386]
[81.29447937 286.56677246]
[66.83979797 290.30731201]
[64.83578491 305.17285156]
[62.83177185 320.03836060]
[60.82775879 334.90390015]
[73.49333191 343.35046387]
[81.20416260 356.40536499]
[82.47697449 371.45196533]
[77.11267853 385.50134277]
[66.22530365 395.78601074]
[52.01107407 400.30499268]
[50.00706100 415.17053223]
[48.00304794 430.03604126]
[45.99903107 444.90158081]
[43.99501801 459.76712036]
[58.49320984 463.69869995]
[72.35416412 469.48913574]
[85.34071350 477.03927612]
[97.23062897 486.21994019]
[107.82045746 496.87408447]
[116.92900085 508.81933594]
[124.40040588 521.85137939]
[130.10681152 535.74713135]
[133.95057678 550.26885986]
[135.86593628 565.16802979]
[135.82011414 580.18975830]
[133.81390381 595.07702637]
[129.88160706 609.57501221]
[124.09053802 623.43572998]
[116.53977203 636.42187500]
[107.35852814 648.31140137]
[96.70389557 658.90069580]
[84.75819397 668.00866699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[38 182]
[39 181]
[40 180]
[41 179]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[73 167]
[74 166]
[75 165]
[77 163]
[78 162]
[79 161]
[80 160]
[82 159]
[83 158]
[84 157]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
