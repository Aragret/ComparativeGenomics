%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[159.06672668 377.18154907]
[156.62100220 362.38226318]
[154.17527771 347.58300781]
[151.72953796 332.78372192]
[149.28381348 317.98446655]
[146.83808899 303.18518066]
[137.19026184 295.88818359]
[135.03157043 283.57870483]
[142.05647278 272.76141357]
[139.83134460 257.92736816]
[136.83657837 243.22937012]
[133.08027649 228.70730591]
[129.32397461 214.18524170]
[125.56767273 199.66317749]
[120.84931946 193.97468567]
[121.86527252 184.89694214]
[118.32559967 170.32055664]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[66.75387573 35.46868515]
[61.29851913 21.49588776]
[55.84316254 7.52308941]
[50.38780594 -6.44970846]
[44.93244934 -20.42250633]
[38.85861588 -34.13777161]
[32.17842102 -47.56814957]
[25.49822426 -60.99852371]
[18.81802940 -74.42890167]
[3.24032497 -84.24810028]
[5.01081800 -101.70754242]
[5.18991899 -86.70861053]
[1.53242838 -72.16135406]
[-5.71906567 -59.03063202]
[-16.08359718 -48.18736267]
[-28.87372398 -40.35074234]
[-43.24112320 -36.04054260]
[-58.23286057 -35.54264450]
[-72.85457611 -38.89007187]
[-86.13648224 -45.86080551]
[-97.19762421 -55.99249649]
[-105.30435944 -68.61314392]
[-109.91899872 -82.88568115]
[-110.73546600 -97.86344147]
[-107.69960785 -112.55301666]
[-101.01279449 -125.98009491]
[-91.11852264 -137.25410461]
[-78.67304993 -145.62728882]
[-64.50183868 -150.54428101]
[-49.54481506 -151.67895508]
[-34.79402542 -148.95605469]
[-21.22783661 -142.55616760]
[-9.74604511 -132.90377808]
[-1.10780573 -120.63457489]
[-3.33292294 -135.46861267]
[-5.55804014 -150.30265808]
[-7.78315735 -165.13670349]
[-10.00827408 -179.97074890]
[-12.23339176 -194.80479431]
[-28.73389053 -200.85183716]
[-39.84229279 -214.35420227]
[-42.56801605 -231.53485107]
[-36.24925995 -247.64654541]
[-22.71075439 -258.28359985]
[-25.37654877 -273.04483032]
[-28.04234505 -287.80603027]
[-30.70814133 -302.56726074]
[-33.37393570 -317.32846069]
[-36.03973007 -332.08969116]
[-51.03866577 -331.29272461]
[-66.01921844 -332.38192749]
[-80.74510956 -335.34017944]
[-94.98410797 -340.12078857]
[-108.51163483 -346.64834595]
[-121.11434937 -354.81994629]
[-132.59347534 -364.50668335]
[-142.76797485 -375.55578613]
[-151.47738647 -387.79299927]
[-158.58436584 -401.02532959]
[-163.97679138 -415.04406738]
[-167.56962585 -429.62811279]
[-169.30622864 -444.54748535]
[-169.15917969 -459.56686401]
[-167.13082886 -474.44937134]
[-163.25314331 -488.96026611]
[-157.58728027 -502.87075806]
[-150.22261047 -515.96142578]
[-141.27528381 -528.02575684]
[-130.88641357 -538.87353516]
[-119.21983337 -548.33367920]
[-106.45955658 -556.25695801]
[-92.80682373 -562.51843262]
[-78.47695923 -567.01934814]
[-63.69596863 -569.68872070]
[-48.69696426 -570.48443604]
[-33.71650696 -569.39398193]
[-18.99085999 -566.43444824]
[-4.75226545 -561.65264893]
[8.77471256 -555.12396240]
[21.37673378 -546.95129395]
[32.85504532 -537.26361084]
[43.02862167 -526.21362305]
[51.73700714 -513.97570801]
[58.84285736 -500.74276733]
[64.23410034 -486.72360229]
[67.82572174 -472.13922119]
[69.56105804 -457.21972656]
[69.41275787 -442.20034790]
[67.38314819 -427.31802368]
[63.50423813 -412.80743408]
[57.83721161 -398.89743042]
[50.47144318 -385.80740356]
[41.52309799 -373.74380493]
[31.13330841 -362.89691162]
[19.46593475 -353.43774414]
[6.70498848 -345.51553345]
[-6.94827175 -339.25518799]
[-21.27851486 -334.75549316]
[-18.61271858 -319.99426270]
[-15.94692326 -305.23306274]
[-13.28112793 -290.47183228]
[-10.61533260 -275.71063232]
[-7.94953680 -260.94940186]
[4.33100271 -257.98181152]
[14.61488247 -250.56274414]
[21.35367966 -239.76568604]
[23.51632118 -227.17591858]
[20.74670410 -214.65776062]
[13.42177486 -204.07852173]
[2.60065222 -197.02990723]
[4.82576942 -182.19586182]
[7.05088663 -167.36181641]
[9.27600384 -152.52777100]
[11.50112057 -137.69374084]
[13.72623825 -122.85968781]
[18.34024811 -108.58695984]
[29.76486206 -104.61143494]
[35.60530090 -93.56277466]
[32.24840546 -81.10909271]
[38.92860031 -67.67871857]
[45.60879517 -54.24834442]
[52.28899002 -40.81796646]
[58.07644272 -54.65651321]
[71.90119934 -60.47683334]
[85.84381104 -54.94478226]
[91.91731262 -41.22937012]
[86.64253235 -27.18740845]
[73.04110718 -20.86277008]
[58.90524673 -25.87786293]
[64.36060333 -11.90506554]
[69.81596375 2.06773257]
[75.27131653 16.04053116]
[80.72667694 30.01332855]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[132.19357300 136.21922302]
[143.58084106 126.45551300]
[158.42410278 124.29277039]
[172.12402344 130.40115356]
[180.43551636 142.88790894]
[180.78318787 157.88388062]
[173.05929565 170.74240112]
[159.65719604 177.47912598]
[144.72964478 176.00659180]
[132.90197754 166.78088379]
[136.44165039 181.35726929]
[140.08973694 195.90689087]
[143.84603882 210.42893982]
[147.60234070 224.95100403]
[151.35862732 239.47306824]
[158.89541626 226.50398254]
[172.96211243 221.29551697]
[187.12762451 226.22891235]
[194.91566467 239.04867554]
[192.76564026 253.89379883]
[181.66053772 263.97726440]
[166.67742920 264.68908691]
[154.66539001 255.70225525]
[156.89051819 270.53628540]
[168.69255066 284.67111206]
[161.63735962 300.73944092]
[164.08308411 315.53872681]
[166.52880859 330.33798218]
[168.97454834 345.13726807]
[171.42027283 359.93652344]
[173.86599731 374.73580933]
[188.52774048 378.97796631]
[199.89118958 389.16790771]
[205.70011902 403.28240967]
[204.80114746 418.51901245]
[197.37278748 431.85250854]
[184.88992310 440.63552856]
[169.83105469 443.12414551]
[155.18612671 438.82427979]
[143.86289978 428.58969116]
[138.10960388 414.45242310]
[139.06857300 399.21945190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[9 192]
[10 191]
[11 183]
[12 182]
[13 181]
[14 180]
[16 179]
[17 178]
[18 168]
[19 167]
[20 166]
[21 165]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 148]
[33 147]
[34 146]
[35 145]
[37 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
