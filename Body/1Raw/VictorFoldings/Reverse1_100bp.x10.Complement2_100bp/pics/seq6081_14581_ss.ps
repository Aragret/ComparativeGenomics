%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[203.99652100 525.10864258]
[204.72047424 510.11267090]
[206.98251343 495.27059937]
[210.75866699 480.73977661]
[216.00889587 466.67425537]
[222.67756653 453.22311401]
[230.69395447 440.52896118]
[239.97309875 428.72634888]
[250.41664124 417.94042969]
[261.91384888 408.28546143]
[253.49923706 395.86798096]
[245.08462524 383.45046997]
[236.66999817 371.03298950]
[228.25538635 358.61547852]
[226.41438293 373.50207520]
[216.25944519 384.54190063]
[201.57810974 387.61734009]
[187.84614563 381.58132935]
[180.18524170 368.68518066]
[181.45272827 353.73883057]
[191.17585754 342.31689453]
[205.72814941 338.67947388]
[219.68284607 344.18395996]
[212.80343628 330.85452271]
[197.54656982 322.18301392]
[198.56745911 303.79718018]
[191.49035645 290.57165527]
[184.41325378 277.34613037]
[177.33615112 264.12060547]
[163.38490295 267.89825439]
[148.93504333 268.46975708]
[134.71426392 265.80294800]
[121.43947601 260.02886963]
[109.78067017 251.43525696]
[100.32708740 240.45230103]
[93.55744171 227.63101196]
[89.81569672 213.61564636]
[89.29354858 199.11126709]
[92.02065277 184.84835815]
[97.86293793 171.54594421]
[106.52919769 159.87545776]
[117.58560181 150.42669678]
[110.70619202 137.09727478]
[103.82677460 123.76783752]
[93.67617798 123.22850800]
[84.65301514 118.54789734]
[78.36598206 110.56047821]
[75.93596649 100.69029236]
[77.79618835 90.69703674]
[83.61501312 82.36235809]
[77.33765411 68.73903656]
[71.06028748 55.11572266]
[64.78292847 41.49240494]
[48.26371384 35.73611832]
[41.15851593 20.12102890]
[47.41950607 4.51209593]
[40.94001007 -9.01624966]
[34.46051407 -22.54459572]
[27.98101807 -36.07294083]
[21.50152206 -49.60128784]
[9.61785793 -54.61540222]
[4.49957991 -66.01658630]
[8.39294529 -77.46945953]
[2.11558414 -91.09277344]
[-4.16177654 -104.71608734]
[-10.43913746 -118.33940887]
[-16.87267113 -124.82380676]
[-16.70685577 -132.21260071]
[-22.78068924 -145.92787170]
[-28.85452461 -159.64314270]
[-43.31913757 -155.57426453]
[-58.21559525 -153.60542297]
[-73.24062347 -153.77668762]
[-88.08832550 -156.08457947]
[-102.45643616 -160.48210144]
[-116.05242157 -166.87974548]
[-128.59950256 -175.14724731]
[-139.84222412 -185.11630249]
[-149.55169678 -196.58395386]
[-157.53025818 -209.31671143]
[-163.61547852 -223.05537415]
[-167.68345642 -237.52024841]
[-169.65138245 -252.41682434]
[-169.47917175 -267.44183350]
[-167.17036438 -282.28939819]
[-162.77194214 -296.65722656]
[-156.37345886 -310.25283813]
[-148.10517883 -322.79940796]
[-138.13543701 -334.04150391]
[-126.66719818 -343.75027466]
[-113.93393707 -351.72802734]
[-100.19489288 -357.81240845]
[-85.72977448 -361.87948608]
[-70.83307648 -363.84649658]
[-55.80807114 -363.67337036]
[-40.96065140 -361.36361694]
[-26.59309006 -356.96432495]
[-12.99789143 -350.56500244]
[-0.45183760 -342.29592896]
[10.78964996 -332.32550049]
[20.49770737 -320.85665894]
[28.47469521 -308.12289429]
[34.55820847 -294.38348389]
[38.62439346 -279.91812134]
[40.59047318 -265.02130127]
[40.41641617 -249.99629211]
[38.10576630 -235.14901733]
[33.70557022 -220.78173828]
[27.30540466 -207.18693542]
[19.03557014 -194.64138794]
[9.06443214 -183.40051270]
[-2.40501142 -173.69316101]
[-15.13925743 -165.71696472]
[-9.06542301 -152.00170898]
[-2.99158955 -138.28643799]
[3.18417883 -124.61676788]
[9.46153927 -110.99345398]
[15.73890018 -97.37013245]
[22.01626015 -83.74681854]
[36.87070465 -74.40270233]
[35.02986526 -56.08078384]
[41.50936127 -42.55243683]
[47.98885727 -29.02409172]
[54.46835327 -15.49574566]
[60.94784927 -1.96739984]
[73.58044434 0.57169700]
[82.57836914 10.06482410]
[84.49398804 23.20030403]
[78.40625000 35.21504593]
[84.68360901 48.83835983]
[90.96096802 62.46167755]
[97.23832703 76.08499146]
[115.62143707 81.68265533]
[124.05109406 98.95150757]
[117.15620422 116.88842773]
[124.03562164 130.21784973]
[130.91503906 143.54728699]
[146.06715393 139.87796021]
[161.64842224 139.93365479]
[176.75698853 143.70700073]
[190.51937866 150.97552490]
[202.14099121 161.31484985]
[210.95191956 174.12341309]
[216.44563293 188.65751648]
[218.30804443 204.07441711]
[216.43551636 219.48130798]
[210.94055176 233.98692322]
[202.14509583 246.75315857]
[190.56167603 257.04348755]
[197.63877869 270.26901245]
[204.71588135 283.49453735]
[211.79298401 296.72006226]
[223.88868713 301.19854736]
[229.51095581 312.35983276]
[226.13287354 323.97512817]
[233.01228333 337.30453491]
[240.67288208 350.20086670]
[249.08749390 362.61837769]
[257.50210571 375.03585815]
[265.91674805 387.45336914]
[274.33135986 399.87084961]
[287.55978394 392.77066040]
[301.44815063 387.06826782]
[315.84924316 382.82415771]
[330.61038208 380.08328247]
[345.57513428 378.87469482]
[360.58480835 379.21127319]
[375.48034668 381.08935547]
[390.10382080 384.48910522]
[404.30020142 389.37445068]
[417.91903687 395.69360352]
[430.81591797 403.37960815]
[442.85415649 412.35092163]
[453.90612793 422.51251221]
[463.85467529 433.75665283]
[472.59436035 445.96411133]
[480.03250122 459.00549316]
[486.09027100 472.74258423]
[490.70346069 487.02972412]
[493.82318115 501.71548462]
[495.41632080 516.64416504]
[495.46600342 531.65753174]
[493.97171021 546.59649658]
[490.94927979 561.30255127]
[486.43075562 575.61993408]
[480.46405029 589.39678955]
[473.11236572 602.48712158]
[464.45367432 614.75219727]
[454.57977295 626.06188965]
[443.59530640 636.29644775]
[431.61669922 645.34722900]
[418.77096558 653.11840820]
[405.19427490 659.52758789]
[391.03054810 664.50677490]
[376.42990112 668.00323486]
[361.54711914 669.97991943]
[346.54000854 670.41577148]
[331.56759644 669.30633545]
[316.78860474 666.66320801]
[302.35974121 662.51446533]
[288.43392944 656.90417480]
[275.15881348 649.89166260]
[262.67507935 641.55139160]
[251.11508179 631.97167969]
[240.60137939 621.25415039]
[231.24539185 609.51232910]
[223.14633179 596.87078857]
[216.39001465 583.46343994]
[211.04809570 569.43249512]
[207.17720032 554.92663574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[23 156]
[24 155]
[26 152]
[27 151]
[28 150]
[29 149]
[42 137]
[43 136]
[44 135]
[50 132]
[51 131]
[52 130]
[53 129]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[63 119]
[64 118]
[65 117]
[66 116]
[68 115]
[69 114]
[70 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
