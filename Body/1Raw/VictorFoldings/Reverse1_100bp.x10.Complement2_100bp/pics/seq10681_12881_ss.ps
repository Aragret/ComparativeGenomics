%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[106.25262451 580.15289307]
[118.89975739 571.53265381]
[117.11729431 556.63897705]
[115.33483124 541.74523926]
[113.55236053 526.85150146]
[111.76989746 511.95782471]
[109.98742676 497.06408691]
[108.20496368 482.17037964]
[106.42250061 467.27667236]
[97.95913696 479.66098022]
[83.87200928 484.81393433]
[69.41527557 480.81359863]
[59.98093033 469.15197754]
[59.08775711 454.17858887]
[67.06888580 441.47814941]
[80.94755554 435.78756714]
[95.54735565 439.22930908]
[105.42340088 450.52078247]
[105.42340088 435.52078247]
[105.42340088 420.52078247]
[102.27989960 413.83197021]
[105.53672791 405.29788208]
[105.76005554 390.29953003]
[105.98338318 375.30120850]
[106.20671082 360.30285645]
[106.43003845 345.30453491]
[98.88308716 332.46347046]
[106.82499695 318.78002930]
[107.04832458 303.78167725]
[107.27165222 288.78335571]
[107.38331604 273.78375244]
[107.38331604 258.78375244]
[107.38331604 243.78376770]
[107.38331604 228.78376770]
[107.38331604 213.78376770]
[107.38331604 198.78376770]
[106.15634155 183.83403015]
[103.71061707 169.03475952]
[101.26488495 154.23548889]
[98.81916046 139.43621826]
[96.37342834 124.63694763]
[93.92770386 109.83767700]
[87.60282898 123.43899536]
[75.73781586 132.61622620]
[60.98335648 135.31915283]
[46.63562012 130.94393921]
[35.89993668 120.46801758]
[31.17468071 106.23172760]
[33.51548767 91.41549683]
[42.39941406 79.32931519]
[55.84177017 72.67325592]
[70.83950043 72.93431091]
[84.04206848 80.05415344]
[92.50000000 92.44221497]
[92.50000000 77.44221497]
[92.50000000 62.44221497]
[92.50000000 47.44221497]
[81.60544586 36.30909348]
[81.81912994 21.09695816]
[92.50000000 10.77927685]
[92.50000000 -4.22072268]
[92.50000000 -19.22072220]
[84.76270294 -33.02089691]
[92.50000000 -45.74816895]
[92.50000000 -60.74816895]
[92.50000000 -75.74816895]
[92.50000000 -90.74816895]
[92.50000000 -105.74816895]
[92.50000000 -120.74816895]
[92.50000000 -135.74816895]
[89.37059021 -144.32981873]
[92.61332703 -150.97108459]
[82.57128143 -139.82849121]
[67.92200470 -136.60379028]
[54.12931824 -142.49971008]
[46.33755493 -155.31721497]
[47.45284653 -170.27569580]
[57.05921936 -181.79600525]
[71.57373047 -185.58135986]
[85.58283234 -180.21990967]
[93.86178589 -167.71022034]
[95.86579895 -182.57574463]
[97.86981201 -197.44126892]
[99.87382507 -212.30680847]
[101.87784576 -227.17233276]
[102.88210297 -242.13867188]
[102.88210297 -257.13867188]
[102.88210297 -272.13867188]
[102.88210297 -287.13867188]
[102.77043152 -302.13827515]
[102.54710388 -317.13659668]
[102.32377625 -332.13494873]
[87.60851288 -335.38418579]
[74.03948212 -341.93997192]
[62.34846115 -351.44873047]
[53.16592407 -363.39770508]
[46.98707199 -377.14245605]
[44.14512634 -391.94177246]
[44.79335022 -406.99755859]
[48.89678192 -421.49786377]
[56.23413086 -434.66067505]
[66.40970612 -445.77618408]
[78.87474060 -454.24493408]
[92.95702362 -459.61019897]
[107.89710999 -461.58264160]
[122.88930511 -460.05587769]
[137.12509155 -455.11227417]
[149.83674622 -447.01843262]
[160.33876038 -436.21081543]
[168.06475830 -423.27227783]
[172.59809875 -408.90060425]
[173.69430542 -393.87078857]
[171.29425049 -378.99340820]
[165.52737427 -365.07077026]
[156.70466614 -352.85369873]
[145.30194092 -343.00106812]
[131.93411255 -336.04418945]
[117.32212067 -332.35827637]
[117.54544830 -317.35992432]
[117.76877594 -302.36160278]
[121.01151276 -295.72030640]
[117.88210297 -287.13867188]
[117.88210297 -272.13867188]
[117.88210297 -257.13867188]
[117.88210297 -242.13867188]
[127.19846344 -253.89476013]
[141.35690308 -258.84841919]
[155.97026062 -255.46469116]
[166.51045227 -244.79208374]
[169.71145630 -230.13760376]
[164.58143616 -216.04211426]
[152.70996094 -206.87326050]
[137.77554321 -205.47209167]
[124.40577698 -212.27278137]
[116.74337006 -225.16831970]
[114.73935699 -210.30279541]
[112.73534393 -195.43725586]
[110.73133087 -180.57173157]
[108.72731781 -165.70620728]
[107.61166382 -150.74775696]
[107.50000000 -135.74816895]
[107.50000000 -120.74816895]
[107.50000000 -105.74816895]
[107.50000000 -90.74816895]
[107.50000000 -75.74816895]
[107.50000000 -60.74816895]
[107.50000000 -45.74816895]
[115.23729706 -33.02089691]
[107.50000000 -19.22072220]
[107.50000000 -4.22072268]
[107.50000000 10.77927685]
[118.18087006 21.09695816]
[118.39455414 36.30909348]
[107.50000000 47.44221497]
[107.50000000 62.44221497]
[107.50000000 77.44221497]
[107.50000000 92.44221497]
[108.72697449 107.39195251]
[111.17270660 122.19122314]
[113.61843109 136.99049377]
[116.06415558 151.78976440]
[118.50988770 166.58903503]
[120.95561218 181.38830566]
[127.28048706 167.78698730]
[139.14549255 158.60975647]
[153.89996338 155.90682983]
[168.24769592 160.28204346]
[178.98338318 170.75796509]
[183.70863342 184.99426270]
[181.36782837 199.81048584]
[172.48390198 211.89666748]
[159.04154968 218.55271912]
[144.04382324 218.29167175]
[130.84124756 211.17182922]
[122.38331604 198.78376770]
[122.38331604 213.78376770]
[122.38331604 228.78376770]
[122.38331604 243.78376770]
[122.38331604 258.78375244]
[122.38331604 273.78375244]
[125.51272583 282.36541748]
[122.26998901 289.00668335]
[122.04666138 304.00500488]
[121.82333374 319.00335693]
[129.35430908 332.91720581]
[121.42837524 345.52786255]
[121.20504761 360.52618408]
[120.98171997 375.52453613]
[120.75839233 390.52285767]
[120.53506470 405.52120972]
[120.42340088 420.52078247]
[120.42340088 435.52078247]
[120.42340088 450.52078247]
[121.31621552 465.49420166]
[123.09867859 480.38790894]
[124.88114929 495.28161621]
[126.66361237 510.17535400]
[128.44607544 525.06909180]
[130.22854614 539.96276855]
[132.01101685 554.85650635]
[133.79347229 569.75024414]
[148.11763000 575.14257812]
[158.28642273 586.58172607]
[161.96315002 601.43902588]
[158.30291748 616.30041504]
[148.14682007 627.75085449]
[133.82867432 633.15911865]
[118.63866425 631.28240967]
[106.06734467 622.55194092]
[99.00351715 608.97399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[18 193]
[19 192]
[20 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[28 184]
[29 183]
[30 182]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[54 157]
[55 156]
[56 155]
[57 154]
[60 151]
[61 150]
[62 149]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[72 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 125]
[87 124]
[88 123]
[89 122]
[90 120]
[91 119]
[92 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
