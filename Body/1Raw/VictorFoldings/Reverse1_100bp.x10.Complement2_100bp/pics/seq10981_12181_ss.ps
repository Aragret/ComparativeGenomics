%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[129.53900146 701.13513184]
[120.92845154 688.83630371]
[113.62814331 675.71722412]
[107.71545410 661.91705322]
[103.25307465 647.58209229]
[100.28830719 632.86431885]
[98.85257721 617.91961670]
[98.96109772 602.90655518]
[100.61273193 587.98425293]
[103.78995514 573.31079102]
[108.45909882 559.04187012]
[114.57067108 545.32861328]
[122.05987549 532.31646729]
[130.84732056 520.14337158]
[140.83985901 508.93832397]
[151.93157959 498.82012939]
[164.00488281 489.89602661]
[176.93179321 482.26065063]
[190.57527161 475.99490356]
[185.74926758 461.79244995]
[180.92326355 447.58999634]
[176.09727478 433.38754272]
[171.27127075 419.18508911]
[166.33967590 405.01895142]
[161.30276489 390.88992310]
[149.74098206 381.49978638]
[152.39500427 365.90277100]
[147.35807800 351.77374268]
[142.32116699 337.64471436]
[137.49337769 351.84655762]
[125.82045746 361.26690674]
[110.91938019 362.98675537]
[97.40740204 356.47317505]
[89.47137451 343.74450684]
[89.57034302 328.74481201]
[97.67364502 316.12197876]
[111.27039337 309.78726196]
[126.14748383 311.70358276]
[137.69522095 321.27737427]
[134.59111023 306.60205078]
[131.48699951 291.92675781]
[128.27372742 277.27496338]
[124.95146942 262.64752197]
[121.62921143 248.02005005]
[118.30695343 233.39259338]
[108.24190521 226.68278503]
[105.35437012 214.52360535]
[111.72295380 203.30735779]
[108.61884308 188.63206482]
[105.17572021 185.32238770]
[103.77516174 179.81462097]
[105.64765930 173.47386169]
[102.98185730 158.71263123]
[100.31606293 143.95141602]
[97.65026855 129.19020081]
[86.95964050 126.22095490]
[78.14094543 119.48770905]
[72.46008301 109.95703125]
[70.73255920 98.99702454]
[73.20633698 88.18099976]
[79.52631378 79.06157684]
[88.78527069 72.94784546]
[86.78125763 58.08231735]
[84.77724457 43.21678925]
[75.26558685 30.57404327]
[81.23315430 16.92715836]
[76.98528290 8.84053802]
[79.31166840 1.82557452]
[77.52920532 -13.06814289]
[75.41458130 -27.91834068]
[72.96885681 -42.71760941]
[70.52312469 -57.51688004]
[68.07740021 -72.31615448]
[65.63166809 -87.11542511]
[55.74781418 -99.46936798]
[61.30641174 -113.28787994]
[58.86068344 -128.08714294]
[56.30485153 -142.86779785]
[53.63905716 -157.62902832]
[50.97325897 -172.39024353]
[41.74305344 -175.37915039]
[34.28022385 -181.48785400]
[29.58323097 -189.84460449]
[28.26055336 -199.28074646]
[30.45213318 -208.49417114]
[35.81589127 -216.22897339]
[43.58033752 -221.44660950]
[41.79787064 -236.34033203]
[40.01540756 -251.23403931]
[25.05217743 -253.06849670]
[10.96301746 -258.43124390]
[-1.43294907 -267.01049805]
[-11.41503716 -278.30743408]
[-18.40290070 -291.66534424]
[-21.99027443 -306.30755615]
[-21.96859360 -321.38278198]
[-18.33911896 -336.01461792]
[-11.31286335 -349.35235596]
[-1.29832315 -360.62054443]
[11.12226868 -369.16409302]
[25.22679520 -374.48629761]
[40.19524002 -376.27770996]
[55.15735245 -374.43417358]
[69.24325562 -369.06289673]
[81.63402557 -360.47613525]
[91.60926056 -349.17312622]
[98.58902740 -335.81100464]
[102.16751862 -321.16662598]
[102.13670349 -306.09140015]
[98.49835205 -291.46179199]
[91.46401215 -278.12829590]
[81.44264221 -266.86618042]
[69.01687622 -258.33013916]
[54.90912247 -253.01651001]
[56.69158936 -238.12278748]
[58.47405624 -223.22908020]
[75.54711914 -211.99066162]
[78.81958771 -191.51663208]
[65.73447418 -175.05603027]
[68.40027618 -160.29481506]
[71.06607056 -145.53359985]
[75.34825897 -139.50993347]
[73.65995789 -130.53288269]
[76.10568237 -115.73360443]
[85.81460571 -104.43820190]
[80.43093872 -89.56114960]
[82.87667084 -74.76187897]
[85.32239532 -59.96260834]
[87.76812744 -45.16333771]
[90.21385193 -30.36406708]
[92.85186768 -28.02458191]
[94.48780060 -24.29111290]
[94.47880554 -19.64856911]
[92.42292023 -14.85060883]
[94.20539093 0.04310865]
[96.09867859 14.92314339]
[105.46699524 26.50260735]
[99.64276886 41.21277618]
[101.64678192 56.07830429]
[103.65079498 70.94383240]
[120.38030243 78.97067261]
[128.92749023 95.44040680]
[125.86080933 113.74073792]
[112.41148376 126.52440643]
[115.07728577 141.28562927]
[117.74308014 156.04684448]
[120.40887451 170.80805969]
[123.29414368 185.52795410]
[126.39825439 200.20324707]
[139.02069092 213.61054993]
[132.93441772 230.07032776]
[136.25666809 244.69778442]
[139.57893372 259.32525635]
[142.90119934 273.95269775]
[147.85357666 281.62811279]
[146.16230774 288.82263184]
[149.26641846 303.49795532]
[152.37052917 318.17324829]
[156.45019531 332.60778809]
[161.48710632 346.73684692]
[166.52403259 360.86587524]
[178.44609070 371.26660156]
[175.43179321 385.85299683]
[180.46870422 399.98202515]
[186.29808044 407.01455688]
[185.47372437 414.35906982]
[190.29972839 428.56152344]
[195.12573242 442.76400757]
[199.95172119 456.96646118]
[204.77772522 471.16891479]
[219.41409302 467.82513428]
[234.31669617 466.00405884]
[249.32756042 465.72494507]
[264.28756714 466.99075317]
[279.03811646 469.78808594]
[293.42288208 474.08731079]
[307.28930664 479.84277344]
[320.49047852 486.99356079]
[332.88641357 495.46377563]
[344.34570312 505.16372681]
[354.74688721 515.99047852]
[363.97970581 527.82940674]
[371.94628906 540.55487061]
[378.56219482 554.03204346]
[383.75726318 568.11804199]
[387.47644043 582.66351318]
[389.68029785 597.51434326]
[390.34545898 612.51306152]
[389.46493530 627.50067139]
[387.04797363 642.31829834]
[383.12023926 656.80889893]
[377.72338867 670.81884766]
[370.91458130 684.19958496]
[362.76602173 696.80926514]
[353.36410522 708.51434326]
[342.80847168 719.19061279]
[331.21102905 728.72491455]
[318.69473267 737.01623535]
[305.39221191 743.97662354]
[291.44451904 749.53234863]
[276.99951172 753.62445068]
[262.21029663 756.20965576]
[247.23364258 757.26043701]
[232.22833252 756.76574707]
[217.35342407 754.73077393]
[202.76660156 751.17712402]
[188.62248230 746.14245605]
[175.07099915 739.68011475]
[162.25582886 731.85870361]
[150.31278992 722.76098633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 164]
[25 163]
[27 161]
[28 160]
[29 159]
[39 158]
[40 157]
[41 156]
[42 154]
[43 153]
[44 152]
[45 151]
[48 149]
[49 148]
[52 147]
[53 146]
[54 145]
[55 144]
[62 140]
[63 139]
[64 138]
[66 136]
[68 135]
[69 134]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[76 124]
[77 123]
[78 121]
[79 120]
[80 119]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
