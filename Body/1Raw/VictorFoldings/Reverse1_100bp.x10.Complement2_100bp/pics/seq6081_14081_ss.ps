%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[122.75330353 480.38946533]
[123.69599915 465.35864258]
[127.84826660 450.88201904]
[135.01591492 437.63668823]
[144.86367798 426.24212646]
[156.93095398 417.23132324]
[170.65336609 411.02569580]
[167.54925537 396.35040283]
[164.44514465 381.67510986]
[161.34103394 366.99981689]
[158.23692322 352.32449341]
[155.13281250 337.64920044]
[152.02870178 322.97390747]
[141.82510376 312.12329102]
[146.53909302 297.02069092]
[143.43498230 282.34536743]
[133.23138428 271.49478149]
[137.94538879 256.39215088]
[134.84127808 241.71685791]
[131.73716736 227.04154968]
[128.63305664 212.36625671]
[125.52893829 197.69094849]
[122.42482758 183.01564026]
[118.13070679 168.64343262]
[112.67535400 154.67063904]
[107.21999359 140.69784546]
[101.76463318 126.72504425]
[96.30928040 112.75224304]
[95.02962494 127.69755554]
[90.60954285 142.03153992]
[83.25012970 155.10208130]
[73.28617096 166.31454468]
[61.17097855 175.15887451]
[47.45569992 181.23268127]
[32.76429367 184.25965881]
[17.76512146 184.10209656]
[3.14054489 180.76718140]
[-10.44411659 174.40660095]
[-22.37084961 165.30972290]
[-32.09706879 153.89041138]
[-39.18029785 140.66816711]
[-43.29829407 126.24449921]
[-44.26371765 111.27560425]
[-42.03264618 96.44245148]
[-36.70658112 82.41986084]
[-28.52782059 69.84576416]
[-17.86844444 59.29220200]
[-5.21338558 51.23928452]
[8.86163807 46.05337143]
[23.71630669 43.97038269]
[38.67483139 45.08508301]
[53.05669785 49.34675980]
[66.20762634 56.56153870]
[77.52934265 66.40119171]
[86.50678253 78.41807556]
[92.73289490 92.06962585]
[93.17950439 77.07627869]
[93.62610626 62.08292770]
[86.30311584 48.05850220]
[94.41592407 35.56724167]
[94.86253357 20.57389259]
[95.30914307 5.58054256]
[95.75574493 -9.41280746]
[88.43275452 -23.43722916]
[96.54556274 -35.92848969]
[96.99217224 -50.92184067]
[85.36023712 -41.45093155]
[70.42485809 -42.84175873]
[60.74169540 -54.29760361]
[61.85770416 -69.25602722]
[73.13358307 -79.14817810]
[88.11000061 -78.30736542]
[98.20745087 -67.21615601]
[92.16486359 -81.83797455]
[101.35974121 -93.55564117]
[103.14220428 -108.44935608]
[104.92466736 -123.34307098]
[106.70713806 -138.23678589]
[108.48960114 -153.13050842]
[110.27206421 -168.02423096]
[112.05453491 -182.91793823]
[113.83699799 -197.81166077]
[99.22074127 -201.25331116]
[85.08173370 -206.30984497]
[71.59780121 -212.91769409]
[58.93851471 -220.99372864]
[47.26307678 -230.43640137]
[36.71831512 -241.12696838]
[27.43684769 -252.93096924]
[19.53539467 -265.69995117]
[13.11332607 -279.27334595]
[8.25140667 -293.48043823]
[5.01078081 -308.14257812]
[3.43220186 -323.07537842]
[3.53552222 -338.09100342]
[5.31944227 -353.00067139]
[8.76152802 -367.61682129]
[13.81849098 -381.75567627]
[20.42673492 -395.23941040]
[28.50315475 -407.89843750]
[37.94617844 -419.57360840]
[48.63705444 -430.11804199]
[60.44132996 -439.39916992]
[73.21055603 -447.30023193]
[86.78414154 -453.72189331]
[100.99138641 -458.58340454]
[115.65362549 -461.82357788]
[130.58645630 -463.40170288]
[145.60209656 -463.29794312]
[160.51168823 -461.51358032]
[175.12774658 -458.07104492]
[189.26644897 -453.01367188]
[202.74998474 -446.40502930]
[215.40878296 -438.32821655]
[227.08366394 -428.88485718]
[237.62777710 -418.19366455]
[246.90853882 -406.38909912]
[254.80923462 -393.61965942]
[261.23049927 -380.04586792]
[266.09155273 -365.83847046]
[269.33129883 -351.17614746]
[270.90899658 -336.24325562]
[270.80477905 -321.22763062]
[269.01995850 -306.31808472]
[265.57699585 -291.70214844]
[260.51919556 -277.56359863]
[253.91014099 -264.08023071]
[245.83296204 -251.42167664]
[236.38923645 -239.74708557]
[225.69773865 -229.20329285]
[213.89291382 -219.92288208]
[201.12321472 -212.02256775]
[187.54924011 -205.60171509]
[173.34170532 -200.74107361]
[158.67927551 -197.50177002]
[143.74633789 -195.92453003]
[128.73071289 -196.02919006]
[126.94824982 -181.13548279]
[125.16578674 -166.24176025]
[123.38331604 -151.34803772]
[121.60085297 -136.45433044]
[119.81838989 -121.56060791]
[118.03591919 -106.66689301]
[116.25345612 -91.77317047]
[122.42353821 -78.21664429]
[113.10117340 -65.43368530]
[111.98551941 -50.47523499]
[111.53891754 -35.48188400]
[118.89384460 -22.52988815]
[110.74909210 -8.96620178]
[110.30249023 6.02714825]
[109.85588074 21.02049828]
[109.40927887 36.01384735]
[116.76420593 48.96584702]
[108.61945343 62.52953339]
[108.17285156 77.52288055]
[107.72624207 92.51623535]
[110.28207397 107.29688263]
[115.73743439 121.26968384]
[121.19279480 135.24247742]
[126.64814758 149.21528625]
[132.10350037 163.18807983]
[135.47680664 148.57229614]
[145.18583679 137.13836670]
[159.06156921 131.44065857]
[174.00413513 132.75202942]
[186.67532349 140.77954102]
[194.24436951 153.72982788]
[195.02030945 168.70973206]
[188.82980347 182.37274170]
[177.05584717 191.66648865]
[162.32873535 194.51472473]
[147.93856812 190.28114319]
[137.10012817 179.91152954]
[140.20423889 194.58683777]
[143.30834961 209.26214600]
[146.41246033 223.93743896]
[149.51657104 238.61274719]
[152.62068176 253.28805542]
[163.04631042 265.18832397]
[158.11029053 279.24127197]
[161.21440125 293.91656494]
[171.64002991 305.81686401]
[166.70401001 319.86978149]
[169.80812073 334.54507446]
[172.91223145 349.22039795]
[176.01634216 363.89569092]
[179.12045288 378.57098389]
[182.22456360 393.24630737]
[185.32867432 407.92160034]
[200.38856506 408.03921509]
[215.07096863 411.39193726]
[228.68919373 417.82296753]
[240.60626221 427.03152466]
[250.26480103 438.58688354]
[257.21307373 451.94860840]
[261.12606812 466.49172974]
[261.82080078 481.53604126]
[259.26477051 496.37789917]
[253.57749939 510.32312012]
[245.02502441 522.71948242]
[234.00733948 532.98712158]
[221.03977966 540.64587402]
[206.72883606 545.33746338]
[191.74388123 546.84252930]
[176.78578186 545.09057617]
[162.55415344 540.16363525]
[149.71463013 532.29211426]
[138.86773682 521.84423828]
[130.52082825 509.30853271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[15 182]
[16 181]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[56 157]
[57 156]
[58 155]
[60 153]
[61 152]
[62 151]
[63 150]
[65 148]
[66 147]
[73 146]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
