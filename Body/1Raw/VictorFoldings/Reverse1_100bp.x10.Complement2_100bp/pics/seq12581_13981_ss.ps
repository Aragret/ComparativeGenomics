%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[42.89975739 482.97097778]
[27.65186501 482.28945923]
[14.21376324 475.05203247]
[5.25359869 462.69573975]
[2.55041838 447.67391968]
[6.64094067 432.96911621]
[16.71298981 421.50106812]
[30.76675224 415.54669189]
[31.43653679 400.56164551]
[32.10632324 385.57662964]
[32.77610779 370.59158325]
[33.44589233 355.60653687]
[34.11567688 340.62149048]
[34.78546143 325.63647461]
[31.94376945 318.81396484]
[35.57841873 310.43377686]
[36.47123337 295.46038818]
[37.36404800 280.48696899]
[38.25686646 265.51358032]
[29.65774155 277.80401611]
[16.84525490 285.60403442]
[1.97853243 287.59918213]
[-12.43712139 283.45321655]
[-23.97241402 273.86483765]
[-30.68344879 260.44982910]
[-31.43929672 245.46890259]
[-26.11258507 231.44654846]
[-15.60095692 220.74581909]
[-1.67580700 215.16996765]
[13.31623173 215.65859985]
[26.84873772 222.12940979]
[36.64124680 233.49192810]
[41.04369736 247.83302307]
[44.79999924 233.31095886]
[48.55630112 218.78890991]
[52.31259918 204.26684570]
[39.92474747 212.72503662]
[24.92823219 212.40176392]
[12.91638279 203.41758728]
[8.36932182 189.12338257]
[12.98299217 174.85054016]
[25.03660774 165.92247009]
[40.03446579 165.66912842]
[52.38274384 174.18501282]
[57.47587204 188.29505920]
[62.93122864 174.32225037]
[68.38658905 160.34945679]
[73.84194183 146.37666321]
[79.29730225 132.40386963]
[84.75265503 118.43106842]
[90.20801544 104.45826721]
[92.65373993 89.65899658]
[91.98395538 74.67395782]
[91.31417084 59.68891907]
[82.96837616 46.24800110]
[90.12966156 33.18793488]
[89.45987701 18.20289421]
[88.79008484 3.21785617]
[88.12030029 -11.76718235]
[74.17327881 -15.34086609]
[61.81263733 -22.69253922]
[52.03604889 -33.21837997]
[45.62967682 -46.05879211]
[43.10494614 -60.16861343]
[44.65774918 -74.40216827]
[50.15325165 -87.60630035]
[59.13756561 -98.71379852]
[70.87522888 -106.82966614]
[84.40938568 -111.30319977]
[83.96277618 -126.29654694]
[83.51617432 -141.28990173]
[82.84638977 -156.27493286]
[81.95356750 -171.24833679]
[81.06075287 -186.22175598]
[80.16793823 -201.19515991]
[67.01987457 -203.62150574]
[54.75501633 -208.92361450]
[43.99321747 -216.82949829]
[35.27746582 -226.93568420]
[29.04649162 -238.72784424]
[25.61268425 -251.60687256]
[25.14643860 -264.91943359]
[27.66769218 -277.99096680]
[33.04511642 -290.16006470]
[41.00293350 -300.81170654]
[51.13507462 -309.40853882]
[62.92589569 -315.51785278]
[75.77639771 -318.83343506]
[75.55307007 -333.83178711]
[75.32974243 -348.83010864]
[75.10641479 -363.82846069]
[74.88308716 -378.82678223]
[74.65975952 -393.82513428]
[74.43643188 -408.82345581]
[74.21310425 -423.82180786]
[73.98977661 -438.82012939]
[73.76644897 -453.81848145]
[59.52338409 -459.06246948]
[48.13906097 -469.10046387]
[41.15311050 -482.57492065]
[39.51033020 -497.66351318]
[43.43288803 -512.32562256]
[52.39029694 -524.57836914]
[65.17113495 -532.76464844]
[80.04690552 -535.77728271]
[95.00576782 -533.20886230]
[108.02468109 -525.40679932]
[117.34292603 -513.42620850]
[121.70029449 -498.88735962]
[120.50748444 -483.75653076]
[113.92581177 -470.08004761]
[102.84540558 -459.70755005]
[88.76478577 -454.04180908]
[88.98811340 -439.04345703]
[89.21144104 -424.04513550]
[89.43476868 -409.04678345]
[89.65809631 -394.04846191]
[89.88142395 -379.05010986]
[90.10475159 -364.05178833]
[90.32807922 -349.05343628]
[90.55140686 -334.05511475]
[90.77473450 -319.05676270]
[106.95475769 -314.89059448]
[121.32846069 -306.34677124]
[132.73817444 -294.10467529]
[140.26246643 -279.14184570]
[143.29058838 -262.65600586]
[141.57206726 -245.96916199]
[135.23730469 -230.42160034]
[124.78782654 -217.26422119]
[111.05654144 -207.55790710]
[95.14134216 -202.08796692]
[96.03416443 -187.11456299]
[96.92697906 -172.14115906]
[97.81979370 -157.16775513]
[100.73385620 -153.38394165]
[101.30189514 -147.72935486]
[98.50952148 -141.73651123]
[98.95613098 -126.74315643]
[99.40273285 -111.74980164]
[114.48194122 -107.51379395]
[127.53025818 -98.81453705]
[137.26371765 -86.49360657]
[142.72007751 -71.74965668]
[143.35398865 -56.02179718]
[139.09136963 -40.84913635]
[130.33792114 -27.72016716]
[117.94053650 -17.92674446]
[103.10533905 -12.43696785]
[103.77512360 2.54807091]
[104.44491577 17.53310966]
[105.11470032 32.51815033]
[113.41258240 44.88723755]
[106.29920959 59.01913452]
[106.96899414 74.00417328]
[107.63877869 88.98921204]
[113.66413116 75.25257874]
[122.37885284 63.04382324]
[133.41238403 52.88207245]
[146.29557800 45.19940948]
[160.48063660 40.32250214]
[175.36439514 38.45872116]
[190.31399536 39.68731308]
[204.69377136 43.95603943]
[217.89228821 51.08339310]
[229.34834290 60.76631165]
[238.57479858 72.59307861]
[245.17936707 86.06080627]
[248.88121033 100.59683990]
[249.52291870 115.58310699]
[247.07720947 130.38238525]
[241.64807129 144.36538696]
[233.46636963 156.93756104]
[222.87997437 167.56433105]
[210.33903503 175.79383850]
[196.37678528 181.27616882]
[181.58692932 183.77819824]
[166.59832764 183.19354248]
[152.04830933 179.54705811]
[138.55554199 172.99380493]
[126.69374084 163.81243896]
[116.96727753 152.39332581]
[109.78973389 139.22203064]
[105.46630096 124.85861206]
[104.18080902 109.91362762]
[98.72545624 123.88642120]
[93.27009583 137.85922241]
[87.81474304 151.83201599]
[82.35938263 165.80480957]
[76.90402985 179.77761841]
[71.44866943 193.75041199]
[66.83466339 208.02314758]
[63.07835770 222.54521179]
[59.32205963 237.06726074]
[55.56575775 251.58932495]
[53.23027039 266.40640259]
[52.33745575 281.37979126]
[51.44464111 296.35321045]
[50.55182266 311.32659912]
[49.77050018 326.30624390]
[49.10071564 341.29129028]
[48.43093109 356.27633667]
[47.76114655 371.26135254]
[47.09136200 386.24639893]
[46.42157745 401.23144531]
[45.75178909 416.21649170]
[59.21828842 423.40090942]
[68.22704315 435.72183228]
[70.98935699 450.73291016]
[66.95677185 465.45367432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[16 199]
[17 198]
[18 197]
[19 196]
[33 195]
[34 194]
[35 193]
[36 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 156]
[53 155]
[54 154]
[56 152]
[57 151]
[58 150]
[59 149]
[69 140]
[70 139]
[71 138]
[72 135]
[73 134]
[74 133]
[75 132]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
