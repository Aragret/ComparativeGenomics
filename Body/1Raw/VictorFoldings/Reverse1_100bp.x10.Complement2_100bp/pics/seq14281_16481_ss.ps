%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[70.85902405 821.13421631]
[55.86151505 821.73101807]
[40.86821747 821.03637695]
[25.99014473 819.05535889]
[11.33744526 815.80273438]
[-2.98139429 811.30242920]
[-16.86036110 805.58795166]
[-30.19669724 798.70147705]
[-42.89166260 790.69403076]
[-54.85126877 781.62487793]
[-65.98696899 771.56121826]
[-76.21631622 760.57745361]
[-85.46357727 748.75506592]
[-93.66028595 736.18145752]
[-100.74575043 722.94976807]
[-106.66751862 709.15795898]
[-111.38174438 694.90814209]
[-114.85352325 680.30578613]
[-117.05715179 665.45904541]
[-117.97631836 650.47784424]
[-117.60420990 635.47308350]
[-115.94359589 620.55584717]
[-113.00675201 605.83660889]
[-108.81543732 591.42431641]
[-103.40067291 577.42565918]
[-96.80255890 563.94433594]
[-89.06993866 551.08013916]
[-80.26006317 538.92828369]
[-70.43815613 527.57873535]
[-59.67694855 517.11560059]
[-48.05610275 507.61624146]
[-35.66166306 499.15106201]
[-22.58538818 491.78271484]
[-8.92409992 485.56576538]
[5.22106171 480.54620361]
[19.74536705 476.76126099]
[34.54128265 474.23889160]
[49.49925995 472.99777222]
[64.50856018 473.04714966]
[65.84679413 458.10696411]
[67.18502808 443.16677856]
[68.52326202 428.22659302]
[58.03918076 422.86300659]
[49.95400238 414.25314331]
[45.23177338 403.38946533]
[44.44701385 391.53515625]
[47.71492767 380.07723999]
[54.67518616 370.36413574]
[64.53149414 363.54721069]
[76.14263916 360.44406128]
[78.14665222 345.57852173]
[80.15066528 330.71301270]
[82.15467834 315.84747314]
[84.15869141 300.98193359]
[85.49692535 286.04174805]
[86.16670990 271.05673218]
[86.83650208 256.07168579]
[87.50628662 241.08663940]
[88.17607117 226.10160828]
[88.84585571 211.11656189]
[89.51564026 196.13153076]
[90.18542480 181.14648438]
[90.85520935 166.16145325]
[80.64569855 155.37713623]
[81.11148834 140.17063904]
[92.49229431 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[90.28736877 25.82962036]
[89.84075928 10.83627033]
[89.39414978 -4.15707970]
[81.24939728 -17.72076607]
[88.60433197 -30.67276382]
[80.45957947 -44.23645020]
[87.81451416 -57.18844604]
[87.36790466 -72.18180084]
[77.83341217 -60.60192108]
[63.34273911 -56.72631073]
[49.30054474 -62.00047302]
[40.94422150 -74.45726776]
[41.39047241 -89.45063019]
[50.47285461 -101.38840485]
[64.80386353 -105.81808472]
[79.03839111 -101.08752441]
[87.86767578 -88.95998383]
[89.20590973 -103.90016937]
[79.34805298 -115.96086884]
[80.91803741 -131.09327698]
[92.47681427 -140.41691589]
[93.81504822 -155.35710144]
[95.15328217 -170.29728699]
[80.82175446 -174.94001770]
[67.88291931 -182.65585327]
[56.98577881 -193.05778503]
[48.67693710 -205.62403870]
[43.37315750 -219.72431946]
[41.34047699 -234.65133667]
[42.68085480 -249.65637207]
[47.32706070 -263.98678589]
[55.04603577 -276.92373657]
[65.45060730 -287.81835938]
[78.01887512 -296.12417603]
[92.12042999 -301.42453003]
[107.04794312 -303.45358276]
[122.05265808 -302.10955811]
[136.38194275 -297.45989990]
[149.31703186 -289.73779297]
[160.20913696 -279.33056641]
[168.51188660 -266.76028442]
[173.80882263 -252.65745544]
[175.83427429 -237.72944641]
[174.48661804 -222.72506714]
[169.83348083 -208.39691162]
[162.10823059 -195.46368408]
[151.69837952 -184.57411194]
[139.12608337 -176.27439880]
[125.02196503 -170.98088074]
[110.09346771 -168.95904541]
[108.75523376 -154.01885986]
[107.41699982 -139.07867432]
[117.13478088 -127.84923553]
[115.99045563 -112.67870331]
[104.14609528 -102.56193542]
[102.80786133 -87.62174988]
[102.36125183 -72.62840271]
[102.80786133 -57.63505173]
[110.92066956 -45.14379120]
[103.59767914 -31.11936951]
[111.71048737 -18.62810898]
[104.38750458 -4.60368586]
[104.83410645 10.38966465]
[105.28071594 25.38301468]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[110.07207489 117.95940399]
[111.04906464 121.78171539]
[110.75910187 125.32449341]
[109.45265198 128.21583557]
[107.47733307 130.20486450]
[117.86389923 141.81335449]
[116.97117615 157.00077820]
[105.84024811 166.83123779]
[105.17046356 181.81626892]
[104.50067902 196.80131531]
[103.83089447 211.78634644]
[103.16110992 226.77139282]
[102.49132538 241.75642395]
[101.82154083 256.74145508]
[101.15174866 271.72650146]
[100.48196411 286.71154785]
[112.25361633 277.41485596]
[127.16663361 279.02792358]
[136.67816162 290.62664795]
[135.33956909 305.56680298]
[123.91766357 315.28997803]
[108.95542908 314.22628784]
[99.02422333 302.98596191]
[97.02021027 317.85150146]
[95.01619720 332.71701050]
[93.01218414 347.58255005]
[91.00817108 362.44805908]
[105.99529266 373.22830200]
[113.40113831 390.04626465]
[111.25447083 408.21112061]
[100.23542786 422.70401001]
[83.46344757 429.56484985]
[82.12521362 444.50503540]
[80.78697968 459.44522095]
[79.44874573 474.38540649]
[94.22788239 477.00424194]
[108.72718048 480.88391113]
[122.83928680 485.99566650]
[136.45971680 492.30163574]
[149.48764038 499.75515747]
[161.82658386 508.30102539]
[173.38519287 517.87597656]
[184.07789612 528.40911865]
[193.82553101 539.82250977]
[202.55592346 552.03161621]
[210.20443726 564.94598389]
[216.71444702 578.47009277]
[222.03775024 592.50378418]
[226.13493347 606.94311523]
[228.97567749 621.68121338]
[230.53890991 636.60894775]
[230.81311035 651.61584473]
[229.79620361 666.59069824]
[227.49574280 681.42272949]
[223.92875671 696.00213623]
[219.12164307 710.22088623]
[213.11001587 723.97375488]
[205.93835449 737.15893555]
[197.65977478 749.67877197]
[188.33557129 761.44061279]
[178.03477478 772.35736084]
[166.83363342 782.34814453]
[154.81510925 791.33905029]
[142.06816101 799.26348877]
[128.68717957 806.06280518]
[114.77121735 811.68664551]
[100.42331696 816.09338379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 178]
[40 177]
[41 176]
[42 175]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[66 148]
[67 143]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[77 132]
[79 130]
[80 129]
[89 128]
[90 127]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
