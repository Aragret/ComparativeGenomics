%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[160.66450500 651.75415039]
[144.87597656 651.04846191]
[134.27261353 639.32910156]
[135.14520264 623.54888916]
[146.97604370 613.07000732]
[147.64582825 598.08502197]
[148.31561279 583.09997559]
[148.98539734 568.11492920]
[149.65518188 553.12988281]
[149.65518188 538.12988281]
[148.98539734 523.14483643]
[148.31561279 508.15979004]
[147.42280579 493.18640137]
[146.30715942 478.22793579]
[145.19149780 463.26950073]
[144.07585144 448.31103516]
[142.96020508 433.35256958]
[141.84455872 418.39413452]
[140.72891235 403.43566895]
[139.27949524 388.50585938]
[137.49702454 373.61215210]
[135.71455383 358.71841431]
[126.40218353 350.99792480]
[124.79528809 338.60430908]
[132.29620361 328.11148071]
[130.73567200 313.19290161]
[129.17515564 298.27429199]
[127.61463165 283.35568237]
[125.38951111 268.52163696]
[122.50424194 253.80174255]
[119.61896515 239.08184814]
[109.57804108 228.08053589]
[114.51637268 213.04977417]
[111.63110352 198.32987976]
[101.59017181 187.32856750]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[77.56906128 59.74524689]
[69.80402374 72.57895660]
[58.90231323 82.88200378]
[45.65093994 89.91059875]
[31.00653267 93.15734100]
[16.02628326 92.38784790]
[1.79162788 87.65766907]
[-10.66982079 79.30828094]
[-20.45845985 67.94242859]
[-26.86763954 54.38062668]
[-29.43467522 39.60191727]
[-27.97425079 24.67317963]
[-22.59179497 10.67213821]
[-13.67587280 -1.39046180]
[-1.87013113 -10.64381123]
[11.97316265 -16.41990280]
[26.85464859 -18.30175400]
[41.70001984 -16.15351295]
[55.43757629 -10.13026524]
[67.07559204 -0.66683197]
[75.77391052 11.55361271]
[80.90483856 25.65000153]
[82.68730164 10.75628471]
[84.46977234 -4.13743305]
[70.77079010 -10.52456379]
[59.73167801 -20.81924438]
[52.42493820 -34.00408173]
[49.55514526 -48.78174591]
[51.39098358 -63.70261383]
[57.74018097 -77.30697632]
[67.96953583 -88.26782990]
[81.06805420 -95.52033997]
[95.74686432 -98.36525726]
[97.52933502 -113.25897217]
[99.31179810 -128.15269470]
[101.09426117 -143.04640198]
[93.45653534 -159.80189514]
[104.51486206 -173.42835999]
[106.07537842 -188.34696960]
[107.63590240 -203.26556396]
[105.29699707 -209.44950867]
[106.28402710 -215.04617310]
[109.47145081 -218.60278320]
[111.47546387 -233.46830750]
[113.47947693 -248.33383179]
[115.48348999 -263.19937134]
[113.52864838 -272.12216187]
[117.62960052 -278.27066040]
[119.85471344 -293.10470581]
[121.30413055 -308.03451538]
[121.97391510 -323.01956177]
[122.64369965 -338.00457764]
[123.20191193 -352.99420166]
[123.64852142 -367.98754883]
[124.09512329 -382.98089600]
[110.52315521 -389.96405029]
[101.33196259 -402.14947510]
[98.34645844 -417.11776733]
[102.15942383 -431.89694214]
[112.01379395 -443.55258179]
[125.95296478 -449.77047729]
[141.20932007 -449.31604004]
[154.75367737 -442.27951050]
[163.89682007 -430.05798340]
[166.82334900 -415.07803345]
[162.95222473 -400.31399536]
[153.05203247 -388.69723511]
[139.08847046 -382.53430176]
[138.64187622 -367.54095459]
[138.19526672 -352.54760742]
[141.13821411 -345.76815796]
[137.62873840 -337.33480835]
[136.95895386 -322.34976196]
[136.28916931 -307.36471558]
[147.29937744 -317.55175781]
[162.27516174 -318.40380859]
[174.36978149 -309.53137207]
[178.05375671 -294.99081421]
[171.64280701 -281.42984009]
[158.06794739 -275.04837036]
[143.53541565 -278.76394653]
[134.68875122 -290.87957764]
[132.46363831 -276.04553223]
[130.34901428 -261.19534302]
[128.34500122 -246.32981873]
[126.34098816 -231.46429443]
[124.33697510 -216.59875488]
[122.55451202 -201.70504761]
[120.99398804 -186.78643799]
[119.43346405 -171.86782837]
[126.80458832 -162.27653503]
[125.62658691 -149.83482361]
[115.98798370 -141.26394653]
[114.20551300 -126.37022400]
[112.42304993 -111.47650909]
[110.64058685 -96.58278656]
[124.23350525 -90.35434723]
[135.25067139 -80.21569061]
[142.60459900 -67.15048218]
[145.56416321 -52.43205643]
[143.82714844 -37.49936295]
[137.55119324 -23.81625366]
[127.33947754 -12.72800732]
[114.18280792 -5.32905531]
[99.36348724 -2.35496712]
[97.58102417 12.53875065]
[95.79855347 27.43246841]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[131.49569702 181.46673584]
[126.35099030 195.44461060]
[129.23626709 210.16450500]
[139.48356628 222.21868896]
[134.33885193 236.19657898]
[137.22413635 250.91647339]
[140.10940552 265.63635254]
[149.35478210 253.82438660]
[164.22727966 251.87272644]
[176.20724487 260.89938354]
[178.43200684 275.73348999]
[169.62712097 287.87738037]
[154.83644104 290.37448120]
[142.53323364 281.79516602]
[144.09375000 296.71374512]
[145.65428162 311.63235474]
[147.21479797 326.55096436]
[158.37391663 341.19869995]
[150.60827637 356.93597412]
[152.39074707 371.82968140]
[154.17320251 386.72338867]
[157.30323792 390.90072632]
[158.40751648 395.41003418]
[157.69880676 399.42410278]
[155.68736267 402.32003784]
[156.80300903 417.27847290]
[157.91865540 432.23693848]
[159.03430176 447.19537354]
[160.14996338 462.15383911]
[161.26560974 477.11230469]
[162.38125610 492.07073975]
[165.78193665 497.74057007]
[165.80526733 503.42355347]
[163.30065918 507.49002075]
[163.97044373 522.47503662]
[164.64022827 537.46008301]
[175.53552246 527.15026855]
[190.53298950 527.42639160]
[201.04138184 538.13031006]
[201.04101562 553.13031006]
[190.53210449 563.83374023]
[175.53463745 564.10913086]
[164.64022827 553.79968262]
[163.97044373 568.78472900]
[163.30065918 583.76971436]
[162.63087463 598.75476074]
[161.96109009 613.73980713]
[172.80987549 625.23242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 198]
[11 197]
[12 196]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 183]
[21 182]
[22 181]
[25 179]
[26 178]
[27 177]
[28 176]
[29 169]
[30 168]
[31 167]
[33 165]
[34 164]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[44 154]
[45 153]
[67 152]
[68 151]
[69 150]
[78 141]
[79 140]
[80 139]
[81 138]
[83 135]
[84 134]
[85 133]
[88 132]
[89 131]
[90 130]
[91 129]
[93 128]
[94 127]
[95 119]
[96 118]
[97 117]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
