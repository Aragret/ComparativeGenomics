%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[148.76417542 810.39160156]
[134.48910522 805.77276611]
[120.48504639 800.38787842]
[106.79305267 794.25274658]
[93.45328522 787.38531494]
[80.50488281 779.80572510]
[67.98582458 771.53625488]
[55.93282318 762.60113525]
[44.38123703 753.02661133]
[33.36494827 742.84075928]
[22.91626930 732.07336426]
[13.06584835 720.75610352]
[3.84258032 708.92218018]
[-4.72648287 696.60626221]
[-12.61620617 683.84448242]
[-19.80344772 670.67425537]
[-26.26712799 657.13421631]
[-31.98828316 643.26416016]
[-36.95013809 629.10467529]
[-41.13813019 614.69732666]
[-44.53998566 600.08435059]
[-47.14571762 585.30865479]
[-48.94768906 570.41357422]
[-49.94061279 555.44274902]
[-50.12157059 540.44018555]
[-49.49003983 525.44976807]
[-48.04787064 510.51553345]
[-45.79928970 495.68130493]
[-42.75089645 480.99053955]
[-38.91162872 466.48638916]
[-34.29275131 452.21133423]
[-28.90781212 438.20727539]
[-22.77260399 424.51531982]
[-15.90512466 411.17556763]
[-8.32551575 398.22720337]
[-0.05601028 385.70816040]
[8.87913513 373.65518188]
[18.45371246 362.10363770]
[28.63963890 351.08737183]
[39.40703583 340.63873291]
[50.72431946 330.78836060]
[62.55829620 321.56512451]
[74.87425232 312.99609375]
[87.63606262 305.10641479]
[100.80629730 297.91921997]
[114.34632874 291.45559692]
[128.21643066 285.73446655]
[142.37593079 280.77267456]
[138.18891907 266.36889648]
[134.00190735 251.96510315]
[129.81489563 237.56132507]
[125.62789154 223.15754700]
[113.57833862 218.59269714]
[106.24866486 207.75950623]
[106.50040436 194.48747253]
[114.46566010 183.62609863]
[110.49356842 169.16157532]
[106.52146912 154.69705200]
[102.54937744 140.23252869]
[97.74684906 134.61492920]
[98.62753296 125.52304840]
[94.87123108 111.00098419]
[91.28447723 125.56584930]
[83.21830750 138.21246338]
[71.52396393 147.60620117]
[57.43558884 152.75573730]
[42.43995667 153.11761475]
[28.11958885 148.65362549]
[15.98575115 139.83489990]
[7.31895638 127.59207916]
[3.03383136 113.21718597]
[3.58259559 98.22722626]
[8.90733719 84.20413208]
[18.44612312 72.62779236]
[31.19230270 64.71989441]
[45.80073929 61.31496811]
[60.72977448 62.77234268]
[74.40390778 68.93822479]
[85.38007355 79.16191101]
[92.50000000 92.36464691]
[92.50000000 77.36464691]
[92.50000000 62.36465073]
[92.50000000 47.36465073]
[92.50000000 32.36465073]
[92.50000000 17.36465073]
[84.76270294 3.56447816]
[92.50000000 -9.16279411]
[92.50000000 -24.16279411]
[92.50000000 -39.16279221]
[92.50000000 -54.16279221]
[84.76270294 -67.96296692]
[92.50000000 -80.69023895]
[92.50000000 -95.69023895]
[84.76270294 -109.49040985]
[92.50000000 -122.21768188]
[92.50000000 -137.21768188]
[92.50000000 -152.21768188]
[78.24732971 -157.37879944]
[66.62139893 -167.10575867]
[59.02610016 -180.22395325]
[56.37859344 -195.14932251]
[58.99858856 -210.07954407]
[66.56970215 -223.21171570]
[78.17768860 -232.96008301]
[92.42082214 -238.14746094]
[107.57917786 -238.14746094]
[121.82231140 -232.96008301]
[133.43029785 -223.21171570]
[141.00140381 -210.07954407]
[143.62139893 -195.14932251]
[140.97390747 -180.22395325]
[133.37860107 -167.10575867]
[121.75267029 -157.37879944]
[107.50000000 -152.21768188]
[107.50000000 -137.21768188]
[107.50000000 -122.21768188]
[115.23729706 -109.49040985]
[107.50000000 -95.69023895]
[107.50000000 -80.69023895]
[115.23729706 -67.96296692]
[107.50000000 -54.16279221]
[107.50000000 -39.16279221]
[107.50000000 -24.16279411]
[107.50000000 -9.16279411]
[115.23729706 3.56447816]
[107.50000000 17.36465073]
[107.50000000 32.36465073]
[107.50000000 47.36465073]
[107.50000000 62.36465073]
[107.50000000 77.36464691]
[107.50000000 92.36464691]
[109.39329529 107.24468231]
[113.14958954 121.76674652]
[117.01390076 136.26043701]
[120.98599243 150.72496033]
[124.95809174 165.18948364]
[128.93019104 179.65400696]
[144.28979492 188.02670288]
[148.75389099 204.59132385]
[140.03167725 218.97053528]
[144.21868896 233.37431335]
[148.40570068 247.77809143]
[152.59271240 262.18188477]
[156.77972412 276.58566284]
[171.39263916 273.18365479]
[186.16830444 270.57778931]
[201.06338501 268.77566528]
[216.03417969 267.78259277]
[231.03677368 267.60147095]
[246.02719116 268.23284912]
[260.96142578 269.67486572]
[275.79568481 271.92330933]
[290.48648071 274.97155762]
[304.99069214 278.81066895]
[319.26577759 283.42941284]
[333.26986694 288.81420898]
[346.96191406 294.94927979]
[360.30172729 301.81661987]
[373.25018311 309.39611816]
[385.76928711 317.66549683]
[397.82235718 326.60052490]
[409.37399292 336.17498779]
[420.39035034 346.36077881]
[430.83911133 357.12808228]
[440.68960571 368.44528198]
[449.91296387 380.27914429]
[458.48208618 392.59503174]
[466.37191772 405.35675049]
[473.55923462 418.52691650]
[480.02301025 432.06689453]
[485.74426270 445.93692017]
[490.70620728 460.09637451]
[494.89428711 474.50369263]
[498.29623413 489.11663818]
[500.90206909 503.89230347]
[502.70416260 518.78741455]
[503.69717407 533.75817871]
[503.87823486 548.76080322]
[503.24679565 563.75122070]
[501.80471802 578.68542480]
[499.55624390 593.51971436]
[496.50796509 608.21044922]
[492.66879272 622.71466064]
[488.04998779 636.98974609]
[482.66516113 650.99383545]
[476.53002930 664.68585205]
[469.66265869 678.02563477]
[462.08312988 690.97406006]
[453.81369019 703.49316406]
[444.87863159 715.54620361]
[435.30413818 727.09777832]
[425.11828613 738.11413574]
[414.35095215 748.56280518]
[403.03375244 758.41326904]
[391.19982910 767.63659668]
[378.88394165 776.20568848]
[366.12216187 784.09545898]
[352.95196533 791.28277588]
[339.41198730 797.74645996]
[325.54193115 803.46765137]
[311.38244629 808.42956543]
[296.97512817 812.61761475]
[282.36218262 816.01953125]
[267.58651733 818.62530518]
[252.69140625 820.42730713]
[237.72061157 821.42028809]
[222.71800232 821.60131836]
[207.72760010 820.96984863]
[192.79336548 819.52770996]
[177.95912170 817.27917480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[56 137]
[57 136]
[58 135]
[59 134]
[61 133]
[62 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[87 124]
[88 123]
[89 122]
[90 121]
[92 119]
[93 118]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
