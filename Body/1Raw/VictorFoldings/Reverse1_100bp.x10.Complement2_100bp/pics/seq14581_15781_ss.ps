%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[112.71346283 623.77569580]
[99.64854431 631.60052490]
[84.52972412 633.42840576]
[69.97643280 628.94268799]
[58.51011658 618.92053223]
[52.11738205 605.09832764]
[51.90581131 589.87091064]
[57.91205597 575.87646484]
[69.09550476 565.53961182]
[83.51854706 560.65130615]
[84.85678101 545.71112061]
[86.19501495 530.77093506]
[83.66079712 523.82830811]
[87.66601562 515.61883545]
[89.22653961 500.70022583]
[90.78706360 485.78161621]
[92.34758759 470.86300659]
[90.08946228 466.65469360]
[90.45099640 460.98315430]
[94.18312836 455.52578735]
[96.18714142 440.66027832]
[98.19115448 425.79473877]
[100.19516754 410.92919922]
[102.19918060 396.06369019]
[104.20319366 381.19815063]
[106.20720673 366.33264160]
[106.76541901 351.34301758]
[98.28429413 339.09884644]
[105.18647766 324.86260986]
[104.29366302 309.88919067]
[103.40084839 294.91580200]
[102.50803375 279.94238281]
[98.97197723 273.45254517]
[101.71507263 264.73971558]
[101.04528809 249.75468445]
[87.06433105 241.15176392]
[80.90436554 225.75642395]
[85.17697906 209.56240845]
[98.38986969 199.00230408]
[97.49705505 184.02890015]
[89.01593018 171.78472900]
[95.91811371 157.54849243]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[83.24195099 74.94937134]
[90.20799255 61.78413391]
[89.31517792 46.81072617]
[86.79660797 43.27366638]
[85.64991760 39.49879837]
[85.78140259 35.94660187]
[86.95744324 32.99981689]
[88.84197235 30.92456055]
[88.84197235 15.92456055]
[88.84197235 0.92456073]
[88.84197235 -14.07543945]
[88.84197235 -29.07543945]
[77.94741821 -40.20856476]
[78.16110229 -55.42069626]
[88.84197235 -65.73838043]
[88.84197235 -80.73838043]
[73.71006775 -84.74082947]
[60.13622284 -92.51234436]
[49.03979492 -103.51991272]
[41.17062378 -117.01159668]
[37.05838013 -132.06785583]
[36.97689819 -147.66424561]
[40.92595673 -162.74110413]
[48.63168335 -176.27555847]
[59.56554413 -187.35092163]
[72.98059082 -195.21875000]
[87.96247864 -199.34948730]
[87.73915100 -214.34782410]
[87.29254913 -229.34117126]
[86.62276459 -244.32621765]
[85.95298004 -259.31124878]
[77.60718536 -272.75216675]
[84.76846313 -285.81222534]
[84.09867859 -300.79727173]
[83.42889404 -315.78231812]
[75.08309937 -329.22323608]
[82.24438477 -342.28329468]
[81.57460022 -357.26834106]
[72.60015869 -366.53237915]
[72.35079193 -379.02722168]
[80.41487122 -388.04373169]
[79.96826172 -403.03707886]
[79.52165985 -418.03042603]
[79.07505035 -433.02377319]
[64.29336548 -435.93057251]
[50.52932358 -442.05422974]
[38.47332764 -451.08752441]
[28.73009491 -462.57739258]
[21.78834534 -475.94750977]
[17.99627495 -490.52722168]
[17.54409218 -505.58520508]
[20.45447731 -520.36621094]
[26.58144569 -534.12878418]
[35.61767578 -546.18255615]
[47.10990524 -555.92303467]
[60.48170090 -562.86151123]
[75.06232452 -566.65008545]
[90.12042999 -567.09857178]
[104.90071106 -564.18463135]
[118.66178131 -558.05432129]
[130.71339417 -549.01519775]
[140.45106506 -537.52056885]
[147.38633728 -524.14709473]
[151.17134094 -509.56555176]
[151.61622620 -494.50735474]
[148.69866943 -479.72778320]
[142.56503296 -465.96820068]
[133.52296448 -453.91876221]
[122.02601624 -444.18389893]
[108.65086365 -437.25186157]
[94.06840515 -433.47039795]
[94.51500702 -418.47705078]
[94.96161652 -403.48370361]
[95.40821838 -388.49032593]
[105.42242432 -374.07913208]
[96.55963898 -357.93814087]
[97.22942352 -342.95309448]
[105.52730560 -330.58398438]
[98.41393280 -316.45208740]
[99.08371735 -301.46707153]
[99.75350189 -286.48202515]
[108.05139160 -274.11294556]
[100.93801880 -259.98104858]
[101.60780334 -244.99600220]
[102.27758789 -230.01095581]
[105.13499451 -226.18417358]
[105.61877441 -220.52175903]
[102.73748779 -214.57115173]
[102.96081543 -199.57281494]
[116.98164368 -196.29544067]
[129.81629944 -189.74800110]
[140.71414185 -180.30836487]
[149.03660583 -168.52363586]
[154.29454041 -155.07856750]
[156.17709351 -140.75569153]
[154.56994629 -126.38977051]
[149.56233215 -112.81922150]
[141.44206238 -100.83710480]
[130.67900085 -91.14482880]
[117.89786530 -84.31105804]
[103.84197235 -80.73838043]
[103.84197235 -65.73838043]
[114.52285004 -55.42069626]
[114.73652649 -40.20856476]
[103.84197235 -29.07543945]
[103.84197235 -14.07543945]
[103.84197235 0.92456073]
[103.84197235 15.92456055]
[103.84197235 30.92456055]
[104.28858185 45.91791153]
[105.18139648 60.89131546]
[113.66252136 73.13549042]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[110.89151764 156.65567017]
[119.43650055 169.97084045]
[112.47045898 183.13607788]
[113.36327362 198.10949707]
[125.49717712 204.64854431]
[132.75793457 216.23733521]
[133.33966064 229.79208374]
[127.19727325 241.76768494]
[116.03032684 249.08489990]
[116.70011139 264.06994629]
[117.48143768 279.04956055]
[118.37425232 294.02297974]
[119.26706696 308.99639893]
[120.15988159 323.96978760]
[128.70486450 337.28497314]
[121.73882294 350.45019531]
[128.81652832 337.22500610]
[140.61135864 327.95773315]
[155.13565063 324.21011353]
[169.94183350 326.61364746]
[182.53479004 334.76333618]
[190.79238892 347.28579712]
[193.32308960 362.07077026]
[189.70040894 376.62673950]
[180.53483582 388.50076294]
[167.37094116 395.69186401]
[152.42706299 396.98818970]
[138.22151184 392.17132568]
[127.14816284 382.05297852]
[121.07273865 368.33663940]
[119.06872559 383.20217896]
[117.06471252 398.06768799]
[115.06069946 412.93322754]
[113.05667877 427.79876709]
[111.05266571 442.66427612]
[109.04865265 457.52981567]
[107.26618958 472.42352295]
[105.70566559 487.34213257]
[104.14514160 502.26074219]
[102.58461761 517.17932129]
[101.13520050 532.10913086]
[99.79696655 547.04931641]
[98.45873260 561.98950195]
[111.78343201 569.36328125]
[120.95178986 581.52307129]
[124.37532806 596.36218262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[14 204]
[15 203]
[16 202]
[17 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[27 180]
[29 178]
[30 177]
[31 176]
[32 175]
[34 174]
[35 173]
[39 168]
[40 167]
[42 165]
[43 164]
[44 163]
[45 162]
[47 160]
[49 158]
[50 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[62 149]
[63 148]
[74 136]
[75 135]
[76 132]
[77 131]
[78 130]
[80 128]
[81 127]
[82 126]
[84 124]
[85 123]
[88 121]
[89 120]
[90 119]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
