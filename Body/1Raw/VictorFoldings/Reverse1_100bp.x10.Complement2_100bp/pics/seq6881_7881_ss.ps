%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[166.94099426 602.88714600]
[161.11041260 589.05499268]
[156.58099365 574.74383545]
[153.39138794 560.07580566]
[151.56878662 545.17608643]
[151.12875366 530.17169189]
[152.07502747 515.19073486]
[154.39956665 500.36099243]
[158.08251953 485.80902100]
[163.09245300 471.65890503]
[169.38664246 458.03143311]
[176.91137695 445.04287720]
[185.60244751 432.80401611]
[195.38572693 421.41928101]
[206.17773438 410.98580933]
[217.88638306 401.59262085]
[230.41180420 393.31985474]
[223.33468628 380.09432983]
[216.25758362 366.86877441]
[209.18048096 353.64324951]
[197.69793701 349.83828735]
[191.69364929 338.87780762]
[194.86476135 326.37551880]
[187.98535156 313.04608154]
[181.10594177 299.71667480]
[174.22651672 286.38723755]
[159.34211731 285.82165527]
[146.65486145 277.82855225]
[139.62550354 264.46984863]
[140.23046875 249.28662109]
[148.40734863 236.36045837]
[141.52793884 223.03102112]
[134.64852905 209.70159912]
[127.76911163 196.37216187]
[120.88970184 183.04273987]
[118.58058929 197.86393738]
[109.24741364 209.60667419]
[95.32983398 215.20141602]
[80.46588898 213.18571472]
[68.54096222 204.08647156]
[62.67221451 190.28221130]
[64.39370728 175.38131714]
[73.25546265 163.27886963]
[86.94102478 157.13839722]
[101.87303162 158.56503296]
[114.14771271 167.18515015]
[101.90634918 163.16288757]
[94.10025787 152.66780090]
[93.75911713 139.39775085]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[75.26779938 47.87698364]
[64.16056061 41.32015228]
[60.61137772 29.33736992]
[65.99995422 18.50732803]
[61.59895706 4.16748095]
[57.19795609 -10.17236614]
[52.79695892 -24.51221275]
[37.19488144 -32.42388153]
[32.23956680 -48.84824371]
[40.52979660 -63.48077011]
[35.91578674 -77.75350189]
[31.30177689 -92.02623749]
[29.12305069 -77.18531036]
[23.62471008 -63.22937012]
[15.09518528 -50.89052200]
[3.98191977 -40.81603241]
[-9.13210773 -33.53439331]
[-23.55896187 -29.42758179]
[-38.54183578 -28.71103477]
[-53.29476166 -31.42233849]
[-67.04383087 -37.41926575]
[-79.06778717 -46.38722992]
[-88.73589325 -57.85578918]
[-95.54096222 -71.22332764]
[-99.12602234 -85.78860474]
[-99.30300903 -100.78755951]
[-96.06263733 -115.43338013]
[-89.57489014 -128.95776367]
[-80.18009949 -140.65126038]
[-68.37109375 -149.90045166]
[-54.76736450 -156.22015381]
[-40.08252335 -159.27880859]
[-25.08691216 -158.91601562]
[-10.56716919 -155.15077209]
[2.71502805 -148.18060303]
[14.06292248 -138.37115479]
[22.88122559 -126.23699951]
[28.70781326 -112.41310120]
[21.80563164 -126.64933777]
[30.28675461 -138.89350891]
[31.17957115 -153.86691284]
[32.07238770 -168.84031677]
[32.96520233 -183.81373596]
[18.87476349 -189.31961060]
[7.17665482 -198.91175842]
[-0.98306078 -211.65045166]
[-4.80497837 -226.28767395]
[-3.91466522 -241.38940430]
[1.60065496 -255.47615051]
[11.20064735 -267.16784668]
[23.94480133 -275.31900024]
[38.58457565 -279.13113403]
[53.68571472 -278.23068237]
[67.76876068 -272.70593262]
[79.45401001 -263.09811401]
[87.59664154 -250.34849548]
[91.39894104 -235.70616150]
[90.48838806 -220.60563660]
[84.95420074 -206.52629089]
[75.33854675 -194.84748840]
[62.58347702 -186.71339417]
[47.93860626 -182.92091370]
[47.04579163 -167.94750977]
[46.15297699 -152.97410583]
[45.26015854 -138.00070190]
[52.22620392 -124.83545685]
[43.68121719 -111.52028656]
[45.57451248 -96.64025116]
[50.18851852 -82.36751556]
[54.80252838 -68.09477997]
[66.98265076 -63.89072037]
[74.63162231 -53.28056717]
[74.77515411 -40.00691223]
[67.13681030 -28.91321182]
[71.53780365 -14.57336426]
[75.93880463 -0.23351687]
[80.33979797 14.10632992]
[93.81269836 25.35124207]
[89.54053497 43.26297379]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[131.22232056 131.25604248]
[136.42161560 147.60481262]
[128.35017395 162.35914612]
[134.21913147 176.16333008]
[141.09854126 189.49275208]
[147.97795105 202.82218933]
[154.85736084 216.15161133]
[161.73678589 229.48104858]
[177.00993347 230.30447388]
[189.73625183 238.60734558]
[196.55262756 252.07595825]
[195.71780396 267.04788208]
[187.55595398 279.50781250]
[194.43536377 292.83724976]
[201.31477356 306.16668701]
[208.19418335 319.49609375]
[223.91636658 329.08227539]
[222.40600586 346.56616211]
[229.48310852 359.79168701]
[236.56022644 373.01721191]
[243.63732910 386.24273682]
[257.46920776 380.41146851]
[271.78012085 375.88134766]
[286.44799805 372.69097900]
[301.34765625 370.86764526]
[316.35202026 370.42684937]
[331.33300781 371.37240601]
[346.16287231 373.69619751]
[360.71505737 377.37841797]
[374.86538696 382.38763428]
[388.49316406 388.68115234]
[401.48211670 396.20523071]
[413.72143555 404.89569092]
[425.10665894 414.67840576]
[435.54064941 425.46987915]
[444.93441772 437.17807007]
[453.20782471 449.70306396]
[460.29025269 462.93801880]
[466.12130737 476.76998901]
[470.65118408 491.08099365]
[473.84130859 505.74893188]
[475.66439819 520.64862061]
[476.10491943 535.65295410]
[475.15914917 550.63397217]
[472.83511353 565.46380615]
[469.15264893 580.01586914]
[464.14315796 594.16613770]
[457.84942627 607.79382324]
[450.32513428 620.78265381]
[441.63446045 633.02178955]
[431.85156250 644.40686035]
[421.05990601 654.84069824]
[409.35156250 664.23425293]
[396.82644653 672.50744629]
[383.59136963 679.58966064]
[369.75930786 685.42047119]
[355.44821167 689.95013428]
[340.78024292 693.14001465]
[325.88052368 694.96282959]
[310.87615967 695.40313721]
[295.89517212 694.45709229]
[281.06539917 692.13281250]
[266.51333618 688.45007324]
[252.36317444 683.44042969]
[238.73559570 677.14642334]
[225.74690247 669.62194824]
[213.50788879 660.93103027]
[202.12300110 651.14794922]
[191.68934631 640.35614014]
[182.29595947 628.64764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 161]
[18 160]
[19 159]
[20 158]
[23 156]
[24 155]
[25 154]
[26 153]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[46 143]
[50 140]
[51 139]
[53 137]
[54 136]
[55 135]
[56 134]
[59 132]
[60 131]
[61 130]
[62 129]
[65 125]
[66 124]
[67 123]
[93 122]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
