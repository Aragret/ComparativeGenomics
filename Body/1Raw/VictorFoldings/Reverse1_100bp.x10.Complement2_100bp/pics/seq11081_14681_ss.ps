%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[100.22068024 537.46429443]
[101.19843292 522.19006348]
[109.17238617 509.12582397]
[122.31018829 501.27365112]
[121.41737366 486.30023193]
[112.58103943 478.03912354]
[111.71467590 465.57183838]
[119.82682800 455.54409790]
[119.15704346 440.55905151]
[118.48725891 425.57400513]
[117.14902496 410.63381958]
[115.14501190 395.76831055]
[113.14099884 380.90277100]
[103.77268219 369.32330322]
[109.59690857 354.61315918]
[97.63333130 345.81494141]
[95.38921356 330.76773071]
[104.69870758 318.27886963]
[95.33039093 306.69943237]
[101.15461731 291.98925781]
[99.15060425 277.12371826]
[97.14658356 262.25820923]
[95.14257050 247.39266968]
[87.48035431 260.28802490]
[74.11065674 267.08883667]
[59.17622757 265.68783569]
[47.30466461 256.51907349]
[42.17449951 242.42362976]
[45.37537003 227.76913452]
[55.91545105 217.09642029]
[70.52878571 213.71257019]
[84.68727112 218.66607666]
[94.00384521 230.42230225]
[94.00384521 215.42230225]
[84.42314911 200.71934509]
[93.76258850 184.84936523]
[93.53926086 169.85102844]
[93.31593323 154.85267639]
[93.09260559 139.85433960]
[78.34332275 134.16239929]
[66.90247345 123.25155640]
[60.51784134 108.78863525]
[60.16478729 92.98310089]
[65.89724731 78.24951935]
[76.83949280 66.83869934]
[91.31990814 60.49383545]
[90.87329865 45.50048447]
[90.42669678 30.50713539]
[88.75514984 15.60056210]
[85.76037598 0.90255791]
[82.65626526 -13.77274418]
[79.55216217 -28.44804764]
[76.44805145 -43.12334824]
[73.34394073 -57.79865265]
[70.02168274 -72.42610931]
[66.48200989 -87.00248718]
[62.12686920 -72.64864349]
[52.66979980 -61.00545883]
[39.51369095 -53.80012512]
[24.61017609 -52.10151672]
[10.17010498 -56.16160583]
[-1.66442585 -65.37810516]
[-9.13783360 -78.38380432]
[-11.14148235 -93.24938202]
[-7.37814331 -107.76961517]
[1.59391522 -119.79052734]
[14.44374084 -127.52886963]
[29.26513863 -129.83671570]
[43.85944366 -126.37170410]
[56.06167603 -117.64785767]
[64.06101990 -104.96108246]
[63.61441422 -119.95442963]
[63.16780472 -134.94778442]
[62.72119904 -149.94113159]
[54.57644653 -163.50482178]
[61.93138123 -176.45681763]
[61.48477554 -191.45016479]
[61.03816605 -206.44351196]
[60.59156036 -221.43685913]
[60.14495468 -236.43022156]
[59.69834900 -251.42356873]
[56.31481934 -259.90823364]
[59.35838699 -266.64309692]
[56.10155487 -275.17721558]
[59.24505615 -281.86602783]
[59.24505615 -296.86602783]
[59.24505615 -311.86602783]
[59.24505615 -326.86602783]
[59.24505615 -341.86602783]
[59.24505615 -356.86602783]
[59.24505615 -371.86602783]
[59.24505615 -386.86602783]
[44.55646896 -390.21163940]
[30.98085403 -396.74237061]
[19.19915581 -406.13061523]
[9.80234051 -417.90548706]
[3.26174712 -431.47634888]
[-0.09454983 -446.16250610]
[-0.09820005 -461.22729492]
[3.25097942 -475.91506958]
[9.78499508 -489.48910522]
[19.17610359 -501.26852417]
[30.95325279 -510.66247559]
[44.52569962 -517.19976807]
[59.21266556 -520.55255127]
[74.27745056 -520.55255127]
[88.96440887 -517.19976807]
[102.53686523 -510.66247559]
[114.31401062 -501.26852417]
[123.70511627 -489.48910522]
[130.23913574 -475.91506958]
[133.58831787 -461.22729492]
[133.58467102 -446.16250610]
[130.22836304 -431.47634888]
[123.68777466 -417.90548706]
[114.29095459 -406.13061523]
[102.50926208 -396.74237061]
[88.93363953 -390.21163940]
[74.24505615 -386.86602783]
[74.24505615 -371.86602783]
[74.24505615 -356.86602783]
[74.24505615 -341.86602783]
[74.24505615 -326.86602783]
[74.24505615 -311.86602783]
[74.24505615 -296.86602783]
[74.24505615 -281.86602783]
[74.35671997 -266.86642456]
[74.69169617 -251.87017822]
[75.13830566 -236.87681580]
[75.58491516 -221.88346863]
[76.03151703 -206.89012146]
[76.47812653 -191.89677429]
[76.92472839 -176.90342712]
[85.03753662 -164.41215515]
[77.71455383 -150.38774109]
[78.16115570 -135.39439392]
[78.60776520 -120.40103912]
[79.05436707 -105.40768433]
[81.05838013 -90.54216003]
[84.59805298 -75.96578217]
[88.13819122 -72.76008606]
[89.70211029 -67.29647064]
[88.01924133 -60.90276337]
[91.12335205 -46.22745895]
[94.22746277 -31.55215645]
[97.33157349 -16.87685394]
[100.43568420 -2.20155215]
[104.89532471 3.69195175]
[103.47504425 12.71528912]
[109.39215851 -1.06831610]
[120.97866058 -10.59474564]
[135.64610291 -13.73577118]
[150.11775208 -9.78967953]
[161.16058350 0.36196294]
[166.30761719 14.45125294]
[164.40898132 29.33060646]
[155.88883972 41.67594147]
[142.65061951 48.72927094]
[127.65176392 48.91487122]
[114.24306488 42.19127655]
[105.42004395 30.06052971]
[105.86665344 45.05387878]
[106.31325531 60.04722977]
[119.55715179 64.59380341]
[130.45726013 73.38354492]
[137.70730591 85.36306763]
[140.43841553 99.09671783]
[138.32327271 112.93861389]
[131.61537170 125.22991943]
[121.11861420 134.49760437]
[108.09094238 139.63101196]
[108.31427002 154.62934875]
[108.53759766 169.62770081]
[108.76092529 184.62603760]
[117.45555878 194.15315247]
[117.33280182 206.64990234]
[109.00384521 215.42230225]
[109.00384521 230.42230225]
[110.00810242 245.38865662]
[112.01211548 260.25418091]
[114.01612854 275.11972046]
[116.02014160 289.98522949]
[125.53179169 302.62799072]
[119.56423187 316.27487183]
[131.84851074 325.85266113]
[133.66909790 340.95697021]
[124.46243286 352.60913086]
[133.97409058 365.25189209]
[128.00653076 378.89877319]
[130.01054382 393.76428223]
[132.01455688 408.62982178]
[141.94660950 397.38906860]
[156.90890503 396.32611084]
[168.33033752 406.04983521]
[169.66821289 420.99005127]
[160.15612793 432.58831787]
[145.24304199 434.20065308]
[133.47230530 424.90423584]
[134.14208984 439.88928223]
[134.81187439 454.87429810]
[145.07934570 470.16027832]
[136.39077759 485.40740967]
[137.28359985 500.38082886]
[151.26138306 506.61618042]
[160.73127747 518.64031982]
[163.51716614 533.69012451]
[158.97886658 548.30737305]
[148.15924072 559.13299561]
[133.54457092 563.67938232]
[118.49318695 560.90185547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[8 200]
[9 199]
[10 198]
[11 191]
[12 190]
[13 189]
[15 187]
[18 184]
[20 182]
[21 181]
[22 180]
[23 179]
[33 178]
[34 177]
[36 174]
[37 173]
[38 172]
[39 171]
[46 163]
[47 162]
[48 161]
[49 149]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 140]
[56 139]
[71 138]
[72 137]
[73 136]
[74 135]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[83 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
