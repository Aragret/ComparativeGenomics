%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[31.81707573 439.56655884]
[30.95047569 454.57009888]
[27.85729027 469.27688599]
[22.60662460 483.35836792]
[15.31577873 496.49996948]
[6.14763260 508.40805054]
[-4.69299221 518.81665039]
[-16.96391296 527.49316406]
[-30.39099503 534.24383545]
[-44.67426682 538.91772461]
[-59.49464035 541.41058350]
[-74.52101898 541.66662598]
[-89.41771698 539.68011475]
[-103.85192108 535.49542236]
[-117.50117493 529.20611572]
[-130.06054688 520.95263672]
[-141.24946594 510.91943359]
[-150.81796265 499.33056641]
[-158.55226135 486.44497681]
[-164.27957153 472.55053711]
[-167.87197876 457.95764160]
[-169.24919128 442.99234009]
[-168.38044739 427.98889160]
[-165.28517151 413.28253174]
[-160.03250122 399.20181274]
[-152.73977661 386.06124878]
[-143.56993103 374.15447998]
[-132.72782898 363.74743652]
[-120.45567322 355.07266235]
[-107.02763367 348.32391357]
[-92.74369049 343.65200806]
[-77.92296600 341.16128540]
[-62.89654541 340.90740967]
[-48.00013733 342.89605713]
[-33.56652451 347.08276367]
[-27.28916359 333.45944214]
[-21.01180458 319.83612061]
[-14.73444271 306.21279907]
[-16.43537712 291.41564941]
[-3.63295388 282.12002563]
[-5.33388805 267.32284546]
[7.46853495 258.02725220]
[6.62544060 255.35379028]
[6.79053640 252.18530273]
[8.15768051 248.90408325]
[10.77887630 245.95555115]
[14.54651833 243.79711914]
[21.62362289 230.57159424]
[28.70072937 217.34606934]
[18.30388069 206.60052490]
[11.72850704 193.14933777]
[9.62986088 178.30427551]
[12.22592831 163.51741028]
[19.27486229 150.23904419]
[30.09745407 139.77545166]
[43.64256287 133.16044617]
[58.58919144 131.05313110]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[118.12514496 45.04808807]
[120.57086945 30.24881744]
[123.01659393 15.44954681]
[125.46232605 0.65027624]
[118.59925842 -10.27039814]
[120.94098663 -22.54639435]
[130.69638062 -29.69893074]
[133.36218262 -44.46014786]
[136.02796936 -59.22136688]
[138.69377136 -73.98258209]
[138.91709900 -88.98091888]
[136.69197083 -103.81496429]
[134.46685791 -118.64900970]
[132.24174500 -133.48304749]
[130.01663208 -148.31709290]
[123.84752655 -134.64440918]
[112.41284180 -124.93627167]
[97.92043304 -121.06716919]
[83.16854858 -123.78414917]
[71.00555420 -132.56262207]
[63.77993393 -145.70759583]
[62.88684082 -160.68098450]
[68.49871063 -174.59165955]
[79.53199005 -184.75369263]
[93.85631561 -189.20494080]
[108.70589447 -187.08595276]
[121.21349335 -178.80586243]
[128.96450806 -165.96221924]
[129.41111755 -180.95556641]
[129.85771179 -195.94892883]
[130.30432129 -210.94227600]
[115.84963226 -215.26942444]
[103.00793457 -223.19111633]
[92.65479279 -234.16723633]
[85.49610901 -247.44938660]
[82.01997375 -262.13198853]
[82.46338654 -277.21395874]
[86.79612732 -291.66699219]
[94.72277832 -304.50561523]
[105.70288086 -314.85452271]
[118.98780060 -322.00808716]
[133.67173767 -325.47854614]
[148.75354004 -325.02929688]
[163.20487976 -320.69097900]
[176.04046631 -312.75936890]
[186.38513184 -301.77526855]
[193.53355408 -288.48760986]
[196.99835205 -273.80230713]
[196.54328918 -258.72070312]
[192.19938660 -244.27102661]
[184.26283264 -231.43850708]
[173.27473450 -221.09808350]
[159.98429871 -213.95478821]
[145.29766846 -210.49566650]
[144.85105896 -195.50231934]
[144.40446472 -180.50897217]
[143.95785522 -165.51562500]
[144.85067749 -150.54220581]
[147.07579041 -135.70817566]
[149.30090332 -120.87412262]
[151.52601624 -106.04007721]
[153.75114441 -91.20603943]
[158.40721130 -105.46510315]
[166.55056763 -118.06215668]
[177.64109802 -128.16166687]
[190.94319153 -135.09379578]
[205.57456970 -138.39874268]
[220.56480408 -137.85729980]
[234.91961670 -133.50538635]
[247.68692017 -125.63164520]
[258.01992798 -114.75831604]
[265.23324585 -101.60659027]
[268.84844971 -87.04876709]
[268.62579346 -72.05041504]
[264.58001709 -57.60633087]
[256.97946167 -44.67453003]
[246.32823181 -34.11273575]
[233.33280945 -26.62147331]
[218.85511780 -22.69760895]
[203.85543823 -22.60140228]
[189.32861328 -26.33922958]
[176.23815918 -33.66317749]
[165.45233154 -44.08747864]
[157.68652344 -56.92071915]
[153.45498657 -71.31678772]
[150.78918457 -56.55556870]
[148.12339783 -41.79435349]
[145.45759583 -27.03313637]
[152.27276611 -10.86154461]
[140.26159668 3.09600353]
[137.81587219 17.89527512]
[135.37013245 32.69454575]
[132.92440796 47.49381638]
[141.74084473 35.35830307]
[153.36422729 25.87691689]
[167.02365112 19.67851830]
[181.81312561 17.17422867]
[196.75172424 18.53014565]
[210.84860229 23.65633774]
[223.16879272 32.21280289]
[232.89511108 43.63202286]
[239.38247681 57.15659714]
[242.20057678 71.88949585]
[241.16252136 86.85353088]
[236.33715820 101.05619812]
[228.04452515 113.55548859]
[216.83464050 123.52236176]
[203.45101929 130.29574585]
[188.78135681 133.42640686]
[173.79862976 132.70668030]
[159.49659729 128.18431091]
[146.82385254 120.15924072]
[136.62094116 109.16376495]
[129.56459045 95.92715454]
[126.12280273 81.32735443]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[97.13878632 151.68138123]
[103.67786407 165.28590393]
[105.68903351 180.22523499]
[102.98781586 195.03463745]
[95.85111237 208.26603699]
[84.98893738 218.62963867]
[71.47372437 225.11956787]
[56.63452530 227.11161804]
[41.92625809 224.42317200]
[34.84915161 237.64869690]
[27.77204514 250.87422180]
[21.09185028 264.30459595]
[22.34378624 280.07620239]
[9.99036217 288.39739990]
[11.24229717 304.16897583]
[-1.11112690 312.49017334]
[-7.38848782 326.11349487]
[-13.66584873 339.73678589]
[-19.94320869 353.36010742]
[-7.38265800 361.61178589]
[3.80768538 371.64343262]
[13.37782383 383.23092651]
[21.11395836 396.11541748]
[26.84325981 410.00903320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 205]
[36 204]
[37 203]
[38 202]
[40 200]
[42 198]
[47 197]
[48 196]
[49 195]
[58 186]
[59 185]
[60 184]
[62 182]
[63 181]
[64 180]
[65 157]
[66 156]
[67 155]
[68 154]
[71 152]
[72 151]
[73 150]
[74 149]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[92 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
