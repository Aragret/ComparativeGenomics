%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[3.17547011 545.67584229]
[-7.11033344 534.64624023]
[-14.32930565 521.40472412]
[-18.02765656 506.78375244]
[-17.97290230 491.70239258]
[-14.16848660 477.10864258]
[-6.85355854 463.91989136]
[3.51206040 452.96524048]
[16.27677727 444.93325806]
[30.63819313 440.32885742]
[29.74537849 425.35543823]
[28.85256195 410.38204956]
[27.95974541 395.40863037]
[25.95503616 393.44921875]
[24.60568428 390.57766724]
[24.26300049 387.03958130]
[25.18297386 383.20315552]
[27.48654556 379.52246094]
[27.48654556 364.52246094]
[27.48654556 349.52246094]
[27.48654556 334.52246094]
[20.85739326 347.97811890]
[11.43593597 359.65011597]
[-0.31812993 368.96902466]
[-13.83129787 375.48013306]
[-28.44423103 378.86572266]
[-43.44393158 378.96060181]
[-58.09852982 375.76016235]
[-71.69299316 369.42059326]
[-83.56402588 360.25112915]
[-93.13240814 348.69924927]
[-99.93127441 335.32855225]
[-103.62889862 320.79144287]
[-104.04486847 305.79721069]
[-101.15887451 291.07748413]
[-95.11174774 277.35040283]
[-86.19852448 265.28582764]
[-74.85411072 255.47233582]
[-61.63202667 248.38880920]
[-47.17740250 244.38084412]
[-32.19551086 243.64399719]
[-17.41735458 246.21421814]
[-3.56399035 251.96612549]
[8.68864441 260.61901855]
[18.74271584 271.75076294]
[26.10766411 284.81820679]
[30.42413902 299.18371582]
[31.48179245 314.13977051]
[37.14457703 300.24975586]
[42.80736542 286.35974121]
[48.47014999 272.46969604]
[54.13293839 258.57968140]
[58.53393555 244.23982239]
[61.63804626 229.56452942]
[64.74215698 214.88922119]
[67.84626770 200.21392822]
[70.95037842 185.53862000]
[69.14231873 181.11822510]
[70.09193420 175.51507568]
[74.37156677 170.47560120]
[77.91123199 155.89921570]
[76.43492889 148.65751648]
[81.61363983 141.13298035]
[85.36994171 126.61091614]
[89.12624359 112.08885193]
[84.22846985 96.04553986]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[103.19554138 55.05816650]
[106.73521423 40.48179245]
[110.27487946 25.90541649]
[113.81455231 11.32904148]
[117.35422516 -3.24733424]
[120.89389801 -17.82370949]
[123.11901855 -32.65775299]
[124.01183319 -47.63116074]
[124.90464783 -62.60456467]
[113.05548859 -75.47377777]
[114.15812683 -92.59391022]
[127.04285431 -103.40235901]
[119.92948151 -117.53425598]
[128.22737122 -129.90335083]
[128.89715576 -144.88838196]
[129.56694031 -159.87342834]
[122.45356750 -174.00532532]
[130.75144958 -186.37440491]
[131.42123413 -201.35945129]
[132.09101868 -216.34448242]
[132.76080322 -231.32952881]
[133.43058777 -246.31455994]
[125.31843567 -256.34231567]
[126.18479919 -268.80960083]
[135.02113342 -277.07070923]
[135.91395569 -292.04409790]
[136.80676270 -307.01751709]
[137.69958496 -321.99090576]
[138.59239197 -336.96432495]
[139.48521423 -351.93771362]
[125.39477539 -357.44360352]
[113.69666290 -367.03576660]
[105.53694916 -379.77444458]
[101.71503448 -394.41168213]
[102.60534668 -409.51339722]
[108.12066650 -423.60015869]
[117.72065735 -435.29183960]
[130.46481323 -443.44302368]
[145.10458374 -447.25512695]
[160.20573425 -446.35467529]
[174.28877258 -440.82992554]
[185.97401428 -431.22210693]
[194.11665344 -418.47250366]
[197.91896057 -403.83016968]
[197.00840759 -388.72964478]
[191.47421265 -374.65029907]
[181.85855103 -362.97149658]
[169.10348511 -354.83740234]
[154.45861816 -351.04492188]
[153.56579590 -336.07150269]
[152.67298889 -321.09811401]
[151.78016663 -306.12469482]
[150.88735962 -291.15127563]
[149.99453735 -276.17788696]
[158.68310547 -260.93072510]
[148.41563416 -245.64477539]
[147.74584961 -230.65974426]
[147.07606506 -215.67469788]
[146.40628052 -200.68966675]
[145.73649597 -185.70462036]
[152.89776611 -172.64456177]
[144.55197144 -159.20362854]
[143.88218689 -144.21859741]
[143.21240234 -129.23355103]
[150.37368774 -116.17349243]
[142.02789307 -102.73257446]
[151.96810913 -94.53369904]
[155.42266846 -81.91830444]
[150.91426086 -69.43292999]
[139.87805176 -61.71175003]
[138.98524475 -46.73834229]
[138.09242249 -31.76493645]
[146.95741272 -43.86501312]
[160.15359497 -50.99670410]
[175.13296509 -51.78299332]
[189.00326538 -46.07205582]
[199.08634949 -34.96658707]
[203.43533325 -20.61087799]
[201.21049500 -5.77679253]
[192.84141541 6.67144060]
[179.94403076 14.33026218]
[165.00863647 15.72087383]
[150.91900635 10.57477093]
[140.39562988 -0.11441480]
[135.47027588 -14.28403664]
[131.93060303 0.29233831]
[128.39093018 14.86871338]
[124.85125732 29.44508934]
[121.31158447 44.02146530]
[117.77191162 58.59783936]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[116.14162445 98.04374695]
[113.30912781 109.34056854]
[103.64830017 115.84515381]
[99.89199829 130.36721802]
[96.13569641 144.88926697]
[92.48760986 159.43888855]
[88.94793701 174.01527405]
[85.62567902 188.64273071]
[82.52156830 203.31803894]
[79.41745758 217.99333191]
[76.31334686 232.66864014]
[73.20923615 247.34393311]
[83.77109528 236.69277954]
[97.87918854 231.59751892]
[112.80947876 233.04199219]
[125.67915344 240.74728394]
[134.00328064 253.22561646]
[136.17460632 268.06762695]
[131.77388000 282.40756226]
[121.65080261 293.47659302]
[107.75999451 299.13748169]
[92.78355408 298.29714966]
[79.61318207 291.11791992]
[70.79189301 278.98596191]
[68.02296448 264.24246216]
[62.36017990 278.13247681]
[56.69739151 292.02252197]
[51.03460693 305.91253662]
[45.37181854 319.80258179]
[42.48654556 334.52246094]
[42.48654556 349.52246094]
[42.48654556 364.52246094]
[42.48654556 379.52246094]
[42.93315125 394.51580811]
[43.82596970 409.48922729]
[44.71878433 424.46261597]
[45.61159897 439.43603516]
[60.41840363 442.30123901]
[74.04712677 448.75946045]
[85.64105225 458.40475464]
[94.47138214 470.63079834]
[99.98303223 484.66903687]
[101.82953644 499.63705444]
[99.89481354 514.59393311]
[94.30049133 528.59942627]
[85.39823151 540.77319336]
[73.74764252 550.34997559]
[60.08107758 556.72772217]
[45.25763702 559.50555420]
[30.20913506 558.50891113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 194]
[18 193]
[19 192]
[20 191]
[21 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[60 167]
[61 166]
[63 165]
[64 164]
[65 163]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 140]
[76 139]
[77 138]
[80 134]
[82 132]
[83 131]
[84 130]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
