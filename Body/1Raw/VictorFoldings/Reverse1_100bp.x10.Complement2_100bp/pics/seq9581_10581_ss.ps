%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[117.45269775 504.56961060]
[102.70893097 507.48147583]
[87.69584656 508.16326904]
[72.74883270 506.59979248]
[58.20182037 502.82592773]
[44.37979126 496.92599487]
[31.59153366 489.03179932]
[20.12274551 479.31973267]
[10.22964096 468.00671387]
[2.13323593 455.34552002]
[-3.98559213 441.61898804]
[-7.99014664 427.13378906]
[-9.79096413 412.21350098]
[-9.34781456 397.19146729]
[-6.67059755 382.40332031]
[-1.81912243 368.17935181]
[5.09822607 354.83740234]
[13.92691231 342.67547607]
[24.46969986 331.96533203]
[36.49105835 322.94622803]
[49.72243118 315.81961060]
[63.86821747 310.74472046]
[78.61239624 307.83496094]
[93.62557983 307.15527344]
[95.18610382 292.23669434]
[96.74662781 277.31808472]
[98.30715179 262.39947510]
[99.86767578 247.48086548]
[101.42819214 232.56225586]
[102.65517426 217.61253357]
[103.54798889 202.63911438]
[104.44080353 187.66571045]
[103.65947723 172.68608093]
[101.21375275 157.88681030]
[97.02172089 151.80004883]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[83.83914185 88.45188904]
[75.50878906 100.92607117]
[64.15789795 110.73205566]
[50.60589981 117.16193390]
[35.83112335 119.75153351]
[20.90017509 118.31390381]
[6.89093065 112.95283508]
[-5.18526888 104.05533600]
[-14.45663261 92.26374054]
[-20.25385284 78.42928314]
[-22.15842438 63.55068588]
[-20.03285408 48.70204926]
[-14.03058720 34.95531082]
[-4.58493471 23.30286026]
[7.62221527 14.58589363]
[21.70961761 9.43369961]
[36.66028976 8.21821785]
[51.39493179 11.02719593]
[64.84983063 17.65785027]
[76.05368042 27.63150978]
[84.19764709 40.22816467]
[88.69402313 54.53960419]
[91.13974762 39.74033356]
[81.96255493 51.60536957]
[69.46634674 59.90264893]
[54.96987915 63.75653076]
[40.00299835 62.76031113]
[26.14519310 57.01912308]
[14.85891247 47.13884354]
[7.33522463 34.16216660]
[4.36812162 19.45855331]
[6.27072906 4.57970619]
[12.84226036 -8.90417194]
[23.38920593 -19.57009697]
[36.79852295 -26.29246521]
[51.65509033 -28.36185265]
[66.39105988 -25.55986977]
[79.45131683 -18.18221664]
[89.45757294 -7.00747633]
[95.35385132 6.78505659]
[96.51787567 21.74001312]
[102.59170532 8.02474594]
[108.66554260 -5.69052076]
[114.73937988 -19.40578651]
[120.81320953 -33.12105560]
[126.88704681 -46.83631897]
[132.96087646 -60.55158615]
[139.03471375 -74.26685333]
[133.58131409 -88.85788727]
[139.93643188 -102.68059540]
[153.88035583 -107.78964996]
[159.95419312 -121.50492096]
[156.04455566 -133.79627991]
[161.38581848 -145.09471130]
[172.62152100 -149.57640076]
[178.89888000 -163.19972229]
[185.17623901 -176.82304382]
[191.45359802 -190.44635010]
[178.86560059 -198.65367126]
[167.60681152 -208.60643005]
[157.91720581 -220.09248352]
[150.00331116 -232.86698914]
[144.03381348 -246.65768433]
[140.13597107 -261.17059326]
[138.39286804 -276.09640503]
[138.84162903 -291.11694336]
[141.47271729 -305.91204834]
[146.23002625 -320.16635132]
[153.01217651 -333.57608032]
[161.67459106 -345.85534668]
[172.03263855 -356.74243164]
[183.86553955 -366.00527954]
[196.92106628 -373.44644165]
[210.92094421 -378.90734863]
[225.56675720 -382.27154541]
[240.54634094 -383.46737671]
[255.54040527 -382.46929932]
[270.22933960 -379.29861450]
[284.30004883 -374.02291870]
[297.45260620 -366.75466919]
[309.40670776 -357.64874268]
[319.90750122 -346.89929199]
[328.73117065 -334.73538208]
[335.68966675 -321.41632080]
[340.63464355 -307.22601318]
[343.46072388 -292.46688843]
[344.10763550 -277.45358276]
[342.56161499 -262.50610352]
[338.85559082 -247.94302368]
[333.06857300 -234.07476807]
[325.32394409 -221.19694519]
[315.78671265 -209.58404541]
[304.66021729 -199.48361206]
[292.18161011 -191.11090088]
[278.61685181 -184.64442444]
[264.25512695 -180.22196960]
[249.40249634 -177.93783569]
[234.37556458 -177.84068298]
[219.49464417 -179.93260193]
[205.07691956 -184.16899109]
[198.79956055 -170.54568481]
[192.52220154 -156.92236328]
[186.24484253 -143.29904175]
[188.79316711 -125.93607330]
[173.66944885 -115.43108368]
[167.59562683 -101.71582031]
[173.18382263 -87.95691681]
[167.21948242 -73.96115875]
[152.74998474 -68.19302368]
[146.67614746 -54.47775269]
[140.60231018 -40.76248550]
[134.52847290 -27.04722023]
[128.45465088 -13.33195305]
[122.38080597 0.38331333]
[116.30697632 14.09858036]
[110.23313904 27.81384659]
[105.93901825 42.18605804]
[103.49329376 56.98532867]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[116.01302338 155.44108582]
[118.45875549 170.24035645]
[123.65711975 156.16992188]
[133.53254700 144.87939453]
[146.78573608 137.85421753]
[161.67300415 136.01869202]
[176.23568726 139.61430359]
[188.55780029 148.16799927]
[197.01815796 160.55436707]
[200.50366211 175.14378357]
[198.55574036 190.01676941]
[191.43064880 203.21652222]
[180.06585693 213.00636292]
[165.95655823 218.09831238]
[150.95909119 217.82240295]
[137.04663086 212.21495056]
[126.04960632 202.01370239]
[119.41420746 188.55853271]
[118.52139282 203.53193665]
[117.62857819 218.50534058]
[119.96639252 223.17242432]
[120.25170135 227.80621338]
[118.84089661 231.63043213]
[116.34680176 234.12278748]
[114.78627777 249.04138184]
[113.22575378 263.95999146]
[111.66522980 278.87860107]
[110.10470581 293.79721069]
[108.54418182 308.71582031]
[123.09173584 312.48760986]
[136.91461182 318.38555908]
[149.70397949 326.27792358]
[161.17416382 335.98837280]
[171.06887817 347.29995728]
[179.16708374 359.96002197]
[185.28787231 373.68566895]
[189.29447937 388.17031860]
[191.09742737 403.09033203]
[190.65641785 418.11242676]
[187.98130798 432.90097046]
[183.13185120 447.12561035]
[176.21640015 460.46856689]
[167.38945007 472.63174438]
[156.84819031 483.34338379]
[144.82810974 492.36422729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 185]
[31 184]
[32 183]
[33 167]
[34 166]
[36 165]
[37 164]
[38 163]
[40 161]
[41 160]
[63 159]
[64 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[92 147]
[93 146]
[96 144]
[97 143]
[98 142]
[99 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
