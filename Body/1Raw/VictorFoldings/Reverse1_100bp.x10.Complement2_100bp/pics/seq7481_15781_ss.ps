%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[136.84718323 364.43164062]
[142.39816284 350.47802734]
[149.53155518 337.26321411]
[158.15089417 324.96591187]
[168.13960266 313.75241089]
[179.36259460 303.77441406]
[170.76403809 291.48358154]
[162.16546631 279.19271851]
[153.56690979 266.90188599]
[144.96833801 254.61105347]
[136.36978149 242.32022095]
[127.77120972 230.02937317]
[130.04269409 244.85639954]
[128.88101196 259.81134033]
[124.34709167 274.10971069]
[116.67877197 287.00146484]
[106.27832794 297.81027222]
[93.69134521 305.96920776]
[79.57810211 311.05017090]
[64.67895508 312.78671265]
[49.77548981 311.08767700]
[35.64950943 306.04223633]
[23.04203033 297.91500854]
[12.61441803 287.13238525]
[4.91368532 274.26000977]
[0.34379676 259.97308350]
[-0.85552084 245.02110291]
[1.37864649 230.18841553]
[6.92909908 216.25311279]
[15.50467014 203.94622803]
[26.65550423 193.91333008]
[39.79664993 186.68075562]
[54.23874664 182.62786865]
[69.22419739 181.96731567]
[83.96688843 184.73373413]
[97.69345093 190.78199768]
[109.68381500 199.79483032]
[119.30990601 211.30081177]
[115.77023315 196.72444153]
[112.23056030 182.14807129]
[108.69088745 167.57168579]
[105.15121460 152.99531555]
[101.61154175 138.41894531]
[98.07186890 123.84256744]
[94.53219604 109.26618958]
[88.05270386 95.73784637]
[78.91390228 83.84321594]
[69.77510071 71.94857788]
[60.63629532 60.05394745]
[51.49749374 48.15931320]
[54.12997055 62.92650986]
[52.35239410 77.82080841]
[46.31853867 91.55371094]
[36.55039597 102.93717957]
[23.89300346 110.98643494]
[9.44135666 115.00512695]
[-5.55433416 114.64560699]
[-19.79679108 109.93897247]
[-32.05390167 101.29239655]
[-41.26529694 89.45388794]
[-46.63410950 75.44760895]
[-47.69587326 60.48523712]
[-44.35873795 45.86116028]
[-36.91140366 32.84051895]
[-25.99813271 22.54971886]
[-12.56303596 15.87902164]
[2.23161626 13.40550995]
[17.10593987 15.34316540]
[30.77315521 21.52436256]
[42.04863739 31.41168404]
[36.59328079 17.43888474]
[31.13792419 3.46608758]
[25.68256760 -10.50671005]
[20.22721100 -24.47950745]
[5.52835655 -21.32675552]
[-9.48589611 -20.57283020]
[-24.42663956 -22.23726082]
[-38.90687561 -26.27693176]
[-52.55152893 -32.58720779]
[-65.00717163 -41.00463867]
[-75.95117188 -51.31119156]
[-85.10005188 -63.23990250]
[-92.21684265 -76.48178864]
[-97.11718750 -90.69385529]
[-99.67416382 -105.50796509]
[-99.82154083 -120.54041290]
[-97.55550385 -135.40180969]
[-92.93473816 -149.70722961]
[-86.07894135 -163.08609009]
[-77.16569519 -175.19189453]
[-66.42587280 -185.71102905]
[-54.13765335 -194.37104797]
[-40.61934280 -200.94763184]
[-26.22109413 -205.27043152]
[-11.31585407 -207.22746277]
[3.71029329 -206.76805115]
[18.46813583 -203.90409851]
[32.57540894 -198.70977783]
[45.66670227 -191.31962585]
[57.40291595 -181.92507935]
[67.48005676 -170.76948547]
[75.63710022 -158.14178467]
[81.66276550 -144.36907959]
[85.40097046 -129.80810547]
[86.75487518 -114.83602142]
[85.68943024 -99.84065247]
[82.23221588 -85.21041870]
[76.47279358 -71.32426453]
[68.56034088 -58.54188538]
[58.69981003 -47.19437027]
[47.14661407 -37.57564545]
[34.20000839 -29.93486595]
[39.65536499 -15.96206760]
[45.11072159 -1.98926950]
[50.56607819 11.98352814]
[56.02143860 25.95632553]
[63.39212799 39.02051163]
[72.53092957 50.91514587]
[81.66973114 62.80977631]
[90.80853271 74.70440674]
[99.94733429 86.59904480]
[97.01009369 71.88943481]
[97.15232086 56.89011002]
[100.36798096 42.23884583]
[106.52033997 28.55862236]
[115.34779358 16.43113136]
[126.47499847 6.37203693]
[139.42881775 -1.19094050]
[153.65844727 -5.93622065]
[168.55882263 -7.66203117]
[183.49639893 -6.29499054]
[197.83601379 -1.89322543]
[210.96794128 5.35609865]
[222.33378601 15.14473724]
[231.45028687 27.05647087]
[237.92979431 40.58480835]
[241.49681091 55.15451813]
[241.99964905 70.14608765]
[239.41693115 84.92206573]
[233.85848999 98.85417938]
[225.56065369 111.35001373]
[214.87626648 121.87825012]
[202.25962830 129.99122620]
[188.24719238 135.34396362]
[173.43478394 137.70886230]
[158.45223999 136.98536682]
[143.93663025 133.20423889]
[130.50515747 126.52626801]
[118.72891998 117.23538971]
[109.10857391 105.72651672]
[112.64824677 120.30289459]
[116.18791962 134.87927246]
[119.72759247 149.45564270]
[123.26726532 164.03201294]
[126.80693817 178.60839844]
[130.34660339 193.18476868]
[133.88627625 207.76113892]
[140.06205750 221.43081665]
[148.66061401 233.72164917]
[157.25917053 246.01249695]
[165.85774231 258.30334473]
[174.45629883 270.59417725]
[183.05487061 282.88500977]
[191.65342712 295.17584229]
[204.87408447 288.05328369]
[218.83224487 282.51376343]
[233.33912659 278.63214111]
[248.19854736 276.46096802]
[263.20956421 276.02960205]
[278.16915894 277.34384155]
[292.87500000 280.38595581]
[307.12823486 285.11474609]
[320.73611450 291.46633911]
[333.51458740 299.35476685]
[345.29083252 308.67337036]
[355.90560913 319.29614258]
[365.21533203 331.07940674]
[373.09414673 343.86380005]
[379.43545532 357.47644043]
[384.15353394 371.73324585]
[387.18457031 386.44137573]
[388.48754883 401.40194702]
[388.04486084 416.41262817]
[385.86251831 431.27041626]
[381.96997070 445.77438354]
[376.41995239 459.72836304]
[369.28744507 472.94366455]
[360.66891479 485.24151611]
[350.68096924 496.45568848]
[339.45861816 506.43444824]
[327.15368652 515.04284668]
[313.93255615 522.16455078]
[299.97402954 527.70312500]
[285.46688843 531.58380127]
[270.60733032 533.75396729]
[255.59628296 534.18432617]
[240.63677979 532.86907959]
[225.93112183 529.82598877]
[211.67820740 525.09625244]
[198.07075500 518.74377441]
[185.29281616 510.85449219]
[173.51719666 501.53509521]
[162.90312195 490.91162109]
[153.59417725 479.12774658]
[145.71621704 466.34280396]
[139.37580872 452.72973633]
[134.65869141 438.47262573]
[131.62864685 423.76428223]
[130.32666016 408.80361938]
[130.77033997 393.79296875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 164]
[7 163]
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
