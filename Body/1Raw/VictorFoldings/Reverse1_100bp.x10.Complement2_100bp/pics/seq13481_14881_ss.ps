%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[154.44258118 574.48394775]
[148.98722839 560.51110840]
[143.53187561 546.53833008]
[138.07650757 532.56555176]
[132.62115479 518.59271240]
[127.16579437 504.61993408]
[121.71044159 490.64712524]
[109.87420654 481.60540771]
[112.06266022 465.93627930]
[110.36173248 480.83953857]
[104.19594574 494.51370239]
[94.15299225 505.65548706]
[81.19008636 513.20288086]
[66.54278564 516.43652344]
[51.60717010 515.04821777]
[37.80680847 509.17031860]
[26.45706177 499.36300659]
[18.63971710 486.56109619]
[15.09987545 471.98474121]
[16.17492867 457.02331543]
[21.76241302 443.10284424]
[31.32976151 431.55010986]
[43.96507645 423.46624756]
[58.46404266 419.62176514]
[73.44470978 420.38311768]
[87.47921753 425.67770386]
[99.22988129 435.00088501]
[107.57717896 447.46508789]
[106.01666260 432.54647827]
[104.45613861 417.62786865]
[102.89561462 402.70925903]
[93.87622070 390.85601807]
[100.13583374 376.32577515]
[98.57530975 361.40716553]
[97.01478577 346.48855591]
[94.52069855 343.99621582]
[93.10988617 340.17199707]
[93.39519501 335.53820801]
[95.73300934 330.87112427]
[94.84019470 315.89770508]
[93.94738007 300.92431641]
[93.05456543 285.95089722]
[81.89083862 282.20187378]
[72.61791229 274.88662720]
[66.33639526 264.84362793]
[63.80183792 253.23690796]
[65.33391571 241.42097473]
[70.77631378 230.78286743]
[79.51234436 222.57923889]
[90.53470612 217.78802490]
[90.31137848 202.78968811]
[90.08805084 187.79135132]
[89.86472321 172.79301453]
[89.64139557 157.79466248]
[77.48011017 166.57551575]
[62.99221420 162.68952942]
[56.85764313 149.00132751]
[63.59857178 135.60133362]
[78.24584198 132.36752319]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[85.27770996 77.22431183]
[86.32959747 64.77130890]
[95.28794098 56.64268112]
[96.40358734 41.68423080]
[97.51924133 26.72577667]
[98.63488770 11.76732254]
[90.82489777 1.50248837]
[92.06207275 -10.93347359]
[101.14044952 -18.92782211]
[102.36742401 -33.87755585]
[103.48307800 -48.83600998]
[104.59872437 -63.79446030]
[105.71437073 -78.75291443]
[106.83002472 -93.71137238]
[107.94567108 -108.66982269]
[100.13567352 -118.93465424]
[101.37285614 -131.37062073]
[110.45123291 -139.36495972]
[111.78946686 -154.30514526]
[105.31420898 -168.74058533]
[114.15612793 -180.72680664]
[115.49436188 -195.66699219]
[104.03361511 -208.88330078]
[105.64550018 -225.96301270]
[118.84632111 -236.38304138]
[119.96197510 -251.34149170]
[121.07762146 -266.29995728]
[122.19326782 -281.25839233]
[123.30892181 -296.21685791]
[113.27258301 -308.12945557]
[114.61709595 -323.28353882]
[126.03578186 -332.77825928]
[127.15142822 -347.73669434]
[112.95388031 -352.86819458]
[100.66794586 -361.64077759]
[91.20532227 -373.40350342]
[85.26820374 -387.28344727]
[83.29715729 -402.25067139]
[85.43844604 -417.19448853]
[91.53318024 -431.00595093]
[101.12908173 -442.66018677]
[113.51408386 -451.29235840]
[127.76911926 -456.26190186]
[142.83638000 -457.20004272]
[157.59777832 -454.03720093]
[170.95791626 -447.00802612]
[181.92538452 -436.63415527]
[189.68632507 -423.68536377]
[193.66481018 -409.12261963]
[193.56562805 -394.02648926]
[189.39613342 -379.51727295]
[181.46572876 -366.67160034]
[170.36291504 -356.44271851]
[156.91156006 -349.58969116]
[142.10987854 -346.62106323]
[140.99423218 -331.66259766]
[150.87812805 -320.57910156]
[149.95979309 -305.39318848]
[138.26736450 -295.10119629]
[137.15171814 -280.14276123]
[136.03607178 -265.18429565]
[134.92042542 -250.22584534]
[133.80477905 -235.26739502]
[143.49647522 -226.77619934]
[146.57389832 -214.06353760]
[141.69575500 -201.71792603]
[130.43455505 -194.32876587]
[129.09631348 -179.38858032]
[135.66728210 -166.02177429]
[126.72965240 -152.96691895]
[125.39141846 -138.02673340]
[133.62217712 -122.52764893]
[122.90412140 -107.55417633]
[121.78847504 -92.59571838]
[120.67282867 -77.63726807]
[119.55717468 -62.67881393]
[118.44152832 -47.72035980]
[117.32588196 -32.76190567]
[119.96318054 -25.85781860]
[116.08063507 -17.58958817]
[124.31139374 -2.09050369]
[113.59333801 12.88297081]
[112.47769165 27.84142494]
[111.36204529 42.79987717]
[110.24639893 57.75833130]
[118.70699310 73.13315582]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.63973236 157.57133484]
[104.86306000 172.56967163]
[105.08638763 187.56802368]
[105.30971527 202.56636047]
[105.53304291 217.56469727]
[121.95349884 226.00242615]
[131.77220154 241.53575134]
[132.34388733 259.81805420]
[123.59664917 275.78518677]
[108.02796936 285.05807495]
[108.92078400 300.03149414]
[109.81359863 315.00488281]
[110.70642090 329.97830200]
[111.93339539 344.92803955]
[113.49391937 359.84664917]
[115.05443573 374.76525879]
[124.18545532 387.68557739]
[117.81421661 401.14874268]
[119.37474060 416.06735229]
[120.93526459 430.98596191]
[122.49578857 445.90457153]
[126.03546143 460.48092651]
[138.26190186 470.52209473]
[135.68324280 485.19177246]
[141.13859558 499.16458130]
[146.59394836 513.13739014]
[152.04931641 527.11016846]
[157.50466919 541.08294678]
[162.96002197 555.05578613]
[168.41537476 569.02856445]
[183.31486511 566.80297852]
[198.33598328 567.94915771]
[212.72528076 572.40960693]
[225.76101685 579.96057129]
[236.78930664 590.22338867]
[245.25697327 602.68316650]
[250.73928833 616.71496582]
[252.96125793 631.61499023]
[251.81144714 646.63586426]
[247.34750366 661.02404785]
[239.79335022 674.05798340]
[229.52790833 685.08374023]
[217.06607056 693.54840088]
[203.03291321 699.02734375]
[188.13235474 701.24572754]
[173.11180115 700.09222412]
[158.72465515 695.62481689]
[145.69259644 688.06750488]
[134.66928101 677.79937744]
[126.20764923 665.33551025]
[120.73213196 651.30102539]
[118.51737213 636.39990234]
[119.67446899 621.37963867]
[124.14538574 606.99359131]
[131.70585632 593.96337891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[9 177]
[28 176]
[29 175]
[30 174]
[31 173]
[33 171]
[34 170]
[35 169]
[39 168]
[40 167]
[41 166]
[42 165]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[60 155]
[61 154]
[62 153]
[64 151]
[67 149]
[68 148]
[69 147]
[70 146]
[73 144]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[82 135]
[83 134]
[85 132]
[86 131]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
