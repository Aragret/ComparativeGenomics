%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[88.66206360 645.91497803]
[73.91815186 643.04351807]
[59.66249466 638.31018066]
[46.12918854 631.79266357]
[33.54045868 623.59802246]
[22.10302925 613.86077881]
[12.00470924 602.74090576]
[3.41132236 590.42089844]
[-3.53601933 577.10314941]
[-8.72323418 563.00628662]
[-12.06514454 548.36181641]
[-13.50687122 533.41027832]
[-13.02474213 518.39709473]
[-10.62667179 503.56878662]
[-6.35204077 489.16894531]
[-0.27104142 475.43395996]
[7.51647091 462.58938599]
[16.88261795 450.84616089]
[27.67359924 440.39706421]
[39.71221542 431.41375732]
[52.80078506 424.04370117]
[66.72438049 418.40792847]
[81.25435638 414.59899902]
[96.15213013 412.67944336]
[96.15213013 397.67944336]
[96.15213013 382.67944336]
[85.47126007 372.36175537]
[85.25757599 357.14962769]
[96.15213013 346.01651001]
[96.15213013 331.01651001]
[85.47126007 320.69882202]
[85.25757599 305.48669434]
[96.15213013 294.35357666]
[96.15213013 279.35357666]
[96.15213013 264.35357666]
[96.15213013 249.35357666]
[96.15213013 234.35357666]
[96.15213013 219.35357666]
[96.15213013 204.35357666]
[96.15213013 189.35357666]
[84.01371765 180.76306152]
[79.20440674 166.50352478]
[83.76715851 151.97648621]
[96.15213013 142.81578064]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[81.76117706 79.92954254]
[80.76854706 67.47167206]
[88.28165436 57.99118042]
[86.94342041 43.05099487]
[85.27188110 28.14442253]
[83.26786804 13.27889442]
[81.26385498 -1.58663380]
[71.75219727 -14.22938061]
[77.71975708 -27.87626457]
[75.71574402 -42.74179459]
[73.71173096 -57.60732269]
[62.12144852 -71.91629791]
[69.41509247 -87.87780762]
[67.18997192 -102.71185303]
[64.96485901 -117.54589844]
[51.35799408 -124.76805115]
[44.69076538 -138.45751953]
[47.33159256 -153.27270508]
[58.06138611 -163.56880188]
[55.83626938 -178.40284729]
[53.61115265 -193.23689270]
[51.38603592 -208.07093811]
[49.16091919 -222.90496826]
[46.93580246 -237.73901367]
[44.71068192 -252.57305908]
[29.70483017 -252.02137756]
[14.73156261 -253.15330505]
[-0.02081464 -255.95462036]
[-14.36677361 -260.39010620]
[-28.12590027 -266.40396118]
[-41.12515640 -273.92056274]
[-53.20106506 -282.84536743]
[-64.20175934 -293.06619263]
[-73.98889160 -304.45440674]
[-82.43937683 -316.86688232]
[-89.44695282 -330.14746094]
[-94.92347717 -344.12915039]
[-98.80007935 -358.63613892]
[-101.02801514 -373.48593140]
[-101.57925415 -388.49179077]
[-100.44687653 -403.46502686]
[-97.64511871 -418.21731567]
[-93.20920563 -432.56314087]
[-87.19493866 -446.32208252]
[-79.67794800 -459.32110596]
[-70.75276947 -471.39675903]
[-60.53163910 -482.39715576]
[-49.14310455 -492.18392944]
[-36.73038864 -500.63406372]
[-23.44959068 -507.64123535]
[-9.46773529 -513.11730957]
[5.03934240 -516.99353027]
[19.88920021 -519.22100830]
[34.89508820 -519.77178955]
[49.86828613 -518.63897705]
[64.62049866 -515.83679199]
[78.96619415 -511.40042114]
[92.72496033 -505.38574219]
[105.72376251 -497.86837769]
[117.79914093 -488.94281006]
[128.79922485 -478.72137451]
[138.58567810 -467.33255005]
[147.03541565 -454.91955566]
[154.04219055 -441.63854980]
[159.51788330 -427.65655518]
[163.39361572 -413.14935303]
[165.62066650 -398.29943848]
[166.17100525 -383.29351807]
[165.03773499 -368.32034302]
[162.23509216 -353.56823730]
[157.79832458 -339.22265625]
[151.78323364 -325.46408081]
[144.26547241 -312.46551514]
[135.33956909 -300.39038086]
[125.11777496 -289.39062500]
[113.72866058 -279.60449219]
[101.31543732 -271.15512085]
[88.03421783 -264.14874268]
[74.05204010 -258.67349243]
[59.54472733 -254.79818726]
[61.76984406 -239.96414185]
[63.99496078 -225.13009644]
[66.22007751 -210.29605103]
[68.44519806 -195.46200562]
[70.67031097 -180.62796021]
[72.89543152 -165.79391479]
[86.17387390 -159.09907532]
[93.04525757 -145.71072388]
[90.68794250 -130.66757202]
[79.79889679 -119.77101135]
[82.02401733 -104.93696594]
[84.24913025 -90.10292816]
[93.78724670 -82.66310883]
[95.76243591 -70.32283020]
[88.57726288 -59.61133575]
[90.58127594 -44.74580765]
[92.58528900 -29.88027954]
[101.95359802 -18.30081367]
[96.12937927 -3.59064746]
[98.13339233 11.27488041]
[100.13740540 26.14040947]
[102.70459747 28.55740166]
[104.22864532 32.33792114]
[104.08142853 36.97814178]
[101.88360596 41.71276093]
[103.22183990 56.65294647]
[114.07606506 70.44253540]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[119.66665649 114.56804657]
[134.35035706 111.50388336]
[147.62730408 118.48401642]
[153.42749023 132.31723022]
[149.09912109 146.67916870]
[136.62107849 155.00373840]
[121.69815826 153.48506165]
[111.15213013 142.81578064]
[123.53710938 151.97648621]
[128.09985352 166.50352478]
[123.29055023 180.76306152]
[111.15213013 189.35357666]
[111.15213013 204.35357666]
[111.15213013 219.35357666]
[111.15213013 234.35357666]
[111.15213013 249.35357666]
[111.15213013 264.35357666]
[111.15213013 279.35357666]
[111.15213013 294.35357666]
[122.04668427 305.48669434]
[121.83300781 320.69882202]
[111.15213013 331.01651001]
[111.15213013 346.01651001]
[122.04668427 357.14962769]
[121.83300781 372.36175537]
[111.15213013 382.67944336]
[111.15213013 397.67944336]
[111.15213013 412.67944336]
[126.04990387 414.59899902]
[140.57987976 418.40792847]
[154.50347900 424.04370117]
[167.59204102 431.41375732]
[179.63066101 440.39706421]
[190.42164612 450.84616089]
[199.78779602 462.58938599]
[207.57530212 475.43395996]
[213.65631104 489.16894531]
[217.93093872 503.56878662]
[220.32901001 518.39709473]
[220.81114197 533.41027832]
[219.36941528 548.36181641]
[216.02749634 563.00628662]
[210.84028625 577.10314941]
[203.89294434 590.42089844]
[195.29956055 602.74090576]
[185.20123291 613.86077881]
[173.76380920 623.59802246]
[161.17507935 631.79266357]
[147.64176941 638.31018066]
[133.38610840 643.04351807]
[118.64219666 645.91497803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 187]
[25 186]
[26 185]
[29 182]
[30 181]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[44 167]
[45 159]
[46 158]
[48 156]
[51 154]
[52 153]
[53 149]
[54 148]
[55 147]
[57 145]
[58 144]
[59 143]
[61 140]
[62 139]
[63 138]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
