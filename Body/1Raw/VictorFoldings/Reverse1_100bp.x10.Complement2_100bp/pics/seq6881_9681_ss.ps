%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[20.41295433 602.11590576]
[21.37191582 617.34887695]
[15.61862087 631.48614502]
[4.29539061 641.72076416]
[-10.34953880 646.02062988]
[-25.40840530 643.53198242]
[-37.89126205 634.74902344]
[-45.31962585 621.41552734]
[-46.21859360 606.17889404]
[-40.40967178 592.06439209]
[-29.04622459 581.87445068]
[-14.38447666 577.63226318]
[-11.93874931 562.83300781]
[-9.49302197 548.03375244]
[-7.04729414 533.23449707]
[-4.60156679 518.43518066]
[-6.61240053 511.32336426]
[-2.00768089 503.43447876]
[0.65811455 488.67327881]
[3.32391000 473.91204834]
[1.41918409 466.77105713]
[6.14084673 458.95159912]
[9.02611923 444.23171997]
[0.52932233 432.05221558]
[3.24570847 417.08306885]
[16.07829094 408.25341797]
[14.62813187 405.85443115]
[14.04086876 402.73645020]
[14.59510994 399.22531128]
[16.44648933 395.74148560]
[19.59838295 392.75494385]
[23.35468292 378.23287964]
[27.11098480 363.71081543]
[30.86728477 349.18875122]
[34.62358475 334.66668701]
[38.37988663 320.14462280]
[42.13618851 305.62258911]
[45.89248657 291.10052490]
[49.64878845 276.57846069]
[53.40509033 262.05639648]
[57.16138840 247.53433228]
[45.70498657 237.98361206]
[39.50591278 224.34980774]
[39.84248352 209.31491089]
[46.70148849 195.86224365]
[58.77019882 186.68438721]
[73.68728638 183.64433289]
[77.44358826 169.12228394]
[81.19989014 154.60021973]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[99.33768463 48.11862946]
[103.79732513 42.22512817]
[106.90143585 27.54982376]
[108.35085297 12.62001610]
[108.12752533 -2.37832141]
[107.90419769 -17.37665939]
[107.68087006 -32.37499619]
[107.45754242 -47.37333298]
[104.20071411 -55.90743256]
[107.34421539 -62.59624481]
[107.34421539 -77.59624481]
[106.22856140 -92.55470276]
[104.00344849 -107.38874054]
[101.77832794 -122.22278595]
[99.11253357 -136.98400879]
[96.00842285 -151.65930176]
[92.90431213 -166.33460999]
[89.80020142 -181.00991821]
[86.69609070 -195.68521118]
[81.35174561 -181.66958618]
[70.51516724 -171.29804993]
[56.27874756 -166.57319641]
[41.39130402 -168.40731812]
[28.72736931 -176.44627380]
[20.73215675 -189.13786316]
[18.94941330 -204.03155518]
[23.72335815 -218.25158691]
[34.13221741 -229.05230713]
[48.16620636 -234.34826660]
[63.11557770 -233.11689758]
[76.09384155 -225.59596252]
[84.59558105 -213.23643494]
[84.14897156 -228.22978210]
[83.70236969 -243.22312927]
[83.25576019 -258.21649170]
[82.80915833 -273.20983887]
[68.06925964 -276.37191772]
[54.51472092 -282.97024536]
[42.93358612 -292.62121582]
[33.99917221 -304.76367188]
[28.23090363 -318.69171143]
[25.96414948 -333.59558105]
[27.33069038 -348.60879517]
[32.25107956 -362.85845947]
[40.43925095 -375.51614380]
[51.41915512 -385.84597778]
[64.55243683 -393.24734497]
[79.07554626 -397.28997803]
[94.14411926 -397.73883057]
[108.88209534 -394.56777954]
[122.43263245 -387.96124268]
[134.00791931 -378.30328369]
[142.93496704 -366.15539551]
[148.69479370 -352.22384644]
[150.95249939 -337.31860352]
[149.57685852 -322.30624390]
[144.64784241 -308.05957031]
[136.45199585 -295.40682983]
[125.46582794 -285.08367920]
[112.32806396 -277.69027710]
[97.80250549 -273.65643311]
[98.24911499 -258.66308594]
[98.69571686 -243.66973877]
[99.14232635 -228.67639160]
[99.58892822 -213.68304443]
[101.37139893 -198.78932190]
[104.47550964 -184.11401367]
[107.57961273 -169.43872070]
[110.68372345 -154.76341248]
[113.78783417 -140.08811951]
[116.06102753 -138.44776917]
[117.82141876 -135.80813599]
[118.68515778 -132.36004639]
[118.34445953 -128.42959595]
[116.61237335 -124.44790649]
[118.83749390 -109.61386108]
[121.06260681 -94.77981567]
[128.01741028 -108.07006073]
[140.63238525 -116.18564606]
[155.60997009 -117.00517273]
[169.03509521 -110.31442261]
[177.39845276 -97.86234283]
[178.51387024 -82.90386963]
[172.08979797 -69.34912109]
[159.80546570 -60.74127197]
[144.87196350 -59.33039093]
[131.19287109 -65.48528290]
[122.34421539 -77.59624481]
[122.34421539 -62.59624481]
[122.45587921 -47.59666061]
[122.67920685 -32.59832382]
[122.90253448 -17.59998703]
[123.12586212 -2.60164928]
[123.34918976 12.39668846]
[130.57727051 -0.74693537]
[142.01828003 -10.44761848]
[156.16696167 -15.42906952]
[171.16180420 -15.03589344]
[185.02999878 -9.31981850]
[195.94691467 0.96710730]
[202.47625732 14.47146130]
[203.75900269 29.41651344]
[199.62634277 43.83598709]
[190.62202454 55.83274841]
[177.93072510 63.82842255]
[163.22218323 66.77103424]
[148.43157959 64.27343750]
[135.50486755 56.66423798]
[126.14276886 44.94454575]
[121.57673645 30.65393448]
[118.47262573 45.32923889]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[100.79460907 146.91308594]
[100.95945740 150.85482788]
[99.94261932 154.26092529]
[98.06611633 156.81930542]
[95.72194672 158.35652161]
[91.96564484 172.87858582]
[88.20934296 187.40063477]
[99.78146362 197.29243469]
[105.88632965 211.17109680]
[105.36212158 226.26234436]
[98.36633301 239.57473755]
[86.33396149 248.49278259]
[71.68344879 251.29063416]
[67.92714691 265.81271362]
[64.17084503 280.33474731]
[60.41454697 294.85681152]
[56.65824509 309.37887573]
[52.90194702 323.90093994]
[49.14564514 338.42300415]
[45.38934326 352.94506836]
[41.63304520 367.46710205]
[37.87674332 381.98916626]
[34.12044144 396.51123047]
[30.79818344 411.13870239]
[39.34782028 424.15951538]
[36.21205139 439.04647827]
[23.74601173 447.11700439]
[20.86073875 461.83688354]
[18.08512688 476.57785034]
[15.41933155 491.33905029]
[12.75353622 506.10028076]
[10.19770432 520.88092041]
[7.75197649 535.68017578]
[5.30624914 550.47949219]
[2.86052179 565.27874756]
[0.41479436 580.07800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[18 205]
[19 204]
[20 203]
[22 202]
[23 201]
[26 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[47 181]
[48 180]
[49 179]
[50 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[58 167]
[59 166]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[66 145]
[67 144]
[68 133]
[69 132]
[70 131]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
