%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[180.86372375 505.80285645]
[175.88464355 520.06414795]
[167.08824158 532.34423828]
[155.18762207 541.64758301]
[141.14750671 547.21997070]
[126.10604858 548.60974121]
[111.28261566 545.70416260]
[97.87885284 538.73883057]
[86.98136902 528.27832031]
[79.47354889 515.17071533]
[75.96403503 500.47854614]
[76.73732758 485.39285278]
[81.73072815 471.13653564]
[90.53945160 458.86529541]
[102.44941711 449.57394409]
[116.49513245 444.01562500]
[131.53796387 442.64099121]
[134.42324829 427.92111206]
[137.30851746 413.20123291]
[140.19378662 398.48132324]
[143.07905579 383.76144409]
[143.86038208 368.78179932]
[142.52215576 353.84161377]
[141.18391418 338.90142822]
[139.84567261 323.96124268]
[138.50744629 309.02105713]
[137.16920471 294.08087158]
[134.72348022 279.28161621]
[124.20133972 268.73959351]
[128.46359253 253.50334167]
[124.92391205 238.92695618]
[121.38423920 224.35058594]
[117.84456635 209.77421570]
[114.30489349 195.19783020]
[110.76522064 180.62145996]
[107.22555542 166.04508972]
[102.59241486 160.28697205]
[103.74340820 151.22535706]
[93.37937927 140.52786255]
[97.86800385 125.35674286]
[94.54574585 110.72927856]
[90.37545013 125.13790894]
[81.58458710 137.29196167]
[69.20590973 145.76356506]
[54.69363403 149.55751038]
[39.75266647 148.22808838]
[26.13824463 141.93145752]
[15.44978046 131.40734863]
[8.94294548 117.89212799]
[7.38215542 102.97355652]
[10.95077038 88.40423584]
[19.22955132 75.89576721]
[31.24591827 66.91763306]
[45.58819962 62.52457047]
[60.57147598 63.23267365]
[74.43553162 68.95875549]
[85.55162048 79.03012085]
[92.61434174 92.26509094]
[92.83766937 77.26675415]
[93.06099701 62.26841354]
[93.28432465 47.27007675]
[93.50765228 32.27173996]
[77.95863342 28.58039474]
[63.61857605 21.54153252]
[51.19771576 11.50709724]
[41.31048965 -1.02268755]
[34.44516754 -15.42425346]
[30.93970490 -30.98171616]
[30.96513557 -46.92246628]
[34.51721573 -62.45553970]
[41.41678619 -76.81084442]
[51.31880569 -89.27738190]
[63.72960663 -99.23841095]
[78.03150177 -106.20200348]
[93.51353455 -109.82530212]
[93.29020691 -124.82363892]
[93.06687927 -139.82197571]
[92.62027740 -154.81532288]
[91.95049286 -169.80036926]
[91.16916656 -184.77999878]
[90.27635193 -199.75341797]
[89.38353729 -214.72682190]
[88.49072266 -229.70022583]
[79.94573975 -243.01539612]
[86.91178131 -256.18063354]
[86.01896667 -271.15405273]
[85.12614441 -286.12744141]
[84.23332977 -301.10086060]
[72.69544220 -311.56579590]
[72.00329590 -326.76367188]
[82.05111694 -337.69879150]
[81.15830231 -352.67221069]
[80.26548004 -367.64559937]
[76.63083649 -376.02575684]
[79.47252655 -382.84826660]
[78.80274200 -397.83331299]
[78.13295746 -412.81835938]
[63.94257355 -418.34579468]
[53.23184586 -429.17172241]
[47.85647583 -443.42041016]
[48.74777985 -458.62322998]
[55.75133133 -472.14617920]
[67.65372467 -481.64633179]
[82.39279175 -485.47772217]
[97.41491699 -482.97656250]
[110.11740875 -474.57617188]
[118.29949188 -461.73196411]
[120.54356384 -446.66931152]
[116.46083832 -431.99786377]
[106.75865936 -420.25955200]
[93.11799622 -413.48812866]
[93.78778076 -398.50308228]
[94.45756531 -383.51806641]
[95.23889160 -368.53842163]
[96.13170624 -353.56500244]
[97.02452087 -338.59161377]
[108.30057526 -328.92794800]
[109.41931915 -313.75552368]
[99.20674133 -301.99368286]
[100.09955597 -287.02026367]
[100.99237061 -272.04684448]
[101.88518524 -257.07345581]
[110.36631012 -244.82926941]
[103.46412659 -230.59303284]
[104.35694122 -215.61962891]
[105.24975586 -200.64622498]
[106.14257812 -185.67282104]
[109.67862701 -179.18296814]
[106.93553162 -170.47015381]
[107.60531616 -155.48510742]
[110.46272278 -151.65832520]
[110.94650269 -145.99591064]
[108.06521606 -140.04530334]
[108.28854370 -125.04696655]
[108.51187134 -110.04862976]
[122.33502960 -107.42945862]
[135.38072205 -102.14787292]
[147.14134216 -94.40719604]
[157.15888977 -84.50644684]
[165.04273987 -72.82884979]
[170.48492432 -59.82694244]
[173.27215576 -46.00507736]
[173.29414368 -31.89983749]
[170.54801941 -18.05921555]
[165.13848877 -5.02132320]
[157.27383423 6.70653820]
[147.25791931 16.66760445]
[135.47843933 24.47344971]
[122.39190674 29.81912422]
[108.50598907 32.49506760]
[108.28266144 47.49340439]
[108.05933380 62.49174118]
[107.83600616 77.49008179]
[107.61267853 92.48841858]
[109.17320251 107.40702057]
[112.49546051 122.03448486]
[123.09711456 133.77822876]
[118.37086487 147.90309143]
[121.80192566 162.50541687]
[125.34159851 177.08178711]
[128.88127136 191.65815735]
[132.42094421 206.23454285]
[135.96061707 220.81091309]
[139.50028992 235.38728333]
[143.03996277 249.96366882]
[153.81529236 261.54827881]
[149.29986572 275.74194336]
[155.04124451 261.88421631]
[166.88186646 252.67553711]
[181.72660828 250.52304077]
[195.69511414 255.98937988]
[205.13604736 267.64566040]
[207.58154297 282.44497681]
[202.39237976 296.51879883]
[190.92498779 306.18826294]
[176.17691040 308.92584229]
[162.00326538 304.01586914]
[152.10939026 292.74264526]
[153.44763184 307.68283081]
[154.78585815 322.62301636]
[156.12409973 337.56320190]
[157.46232605 352.50338745]
[158.80056763 367.44357300]
[164.49468994 353.56634521]
[173.97976685 341.94598389]
[186.43527222 333.58770752]
[200.78366089 329.21463013]
[215.78364563 329.20507812]
[230.13760376 333.55981445]
[242.60375977 341.90219116]
[252.10366821 353.51043701]
[257.81549072 367.38037109]
[259.24508667 382.31210327]
[256.26882935 397.01385498]
[249.14411926 410.21380615]
[238.48736572 420.77001953]
[225.22048950 427.76928711]
[210.49118042 430.60607910]
[195.57366943 429.03500366]
[181.75849915 423.19198608]
[170.24081421 413.58248901]
[162.01698303 401.03781128]
[157.79895020 386.64669800]
[154.91368103 401.36660767]
[152.02841187 416.08648682]
[149.14312744 430.80639648]
[146.25785828 445.52627563]
[159.66860962 452.47814941]
[170.57659912 462.92767334]
[178.09757996 476.02770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[28 167]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[38 158]
[40 156]
[41 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[75 135]
[76 134]
[77 133]
[78 130]
[79 129]
[80 127]
[81 126]
[82 125]
[83 124]
[85 122]
[86 121]
[87 120]
[88 119]
[91 116]
[92 115]
[93 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
