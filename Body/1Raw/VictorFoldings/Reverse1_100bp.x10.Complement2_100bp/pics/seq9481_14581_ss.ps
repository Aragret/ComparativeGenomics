%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[234.82365417 347.07153320]
[246.08699036 337.12579346]
[237.85818481 324.58438110]
[229.62936401 312.04296875]
[221.40055847 299.50158691]
[213.17175293 286.96017456]
[204.66493225 274.60568237]
[195.88432312 262.44421387]
[187.10371399 250.28276062]
[178.32312012 238.12130737]
[169.54251099 225.95983887]
[160.76191711 213.79838562]
[155.83059692 227.96461487]
[141.73178101 233.08549500]
[128.85858154 225.38609314]
[126.70064545 210.54212952]
[136.84872437 199.49601746]
[151.82058716 200.38975525]
[143.96882629 187.60890198]
[136.11706543 174.82806396]
[128.26531982 162.04722595]
[122.08561707 157.99343872]
[120.39344025 149.01712036]
[112.73284149 136.12078857]
[105.07224274 123.22447205]
[97.41164398 110.32814026]
[88.72182465 98.10165405]
[79.06101227 86.62695312]
[69.40019989 75.15225220]
[65.26744843 73.82022095]
[62.09281921 71.47794342]
[60.07625198 68.55068207]
[59.25904083 65.48493958]
[59.53063965 62.69488907]
[50.56994247 50.66551208]
[41.60924911 38.63613510]
[32.64855194 26.60675621]
[23.68785667 14.57737923]
[14.72715950 2.54800177]
[5.76646376 -9.48137569]
[-3.19423199 -21.51075363]
[-17.64316940 -27.95581245]
[-19.04118919 -42.78466415]
[-28.00188637 -54.81404114]
[-45.07667542 -61.70846176]
[-46.43725586 -79.20462799]
[-55.57605743 -91.09925842]
[-64.71485901 -102.99388885]
[-73.85366058 -114.88852692]
[-82.99246216 -126.78315735]
[-92.13126373 -138.67779541]
[-104.85018921 -130.70446777]
[-118.26943970 -123.97628784]
[-132.26748657 -118.55416107]
[-146.71755981 -114.48720551]
[-161.48880005 -111.81224823]
[-176.44741821 -110.55351257]
[-191.45794678 -110.72240448]
[-206.38446045 -112.31738281]
[-221.09176636 -115.32402039]
[-235.44668579 -119.71507263]
[-249.31918335 -125.45077515]
[-262.58364868 -132.47918701]
[-275.11996460 -140.73666382]
[-286.81457520 -150.14840698]
[-297.56155396 -160.62918091]
[-307.26364136 -172.08409119]
[-315.83288574 -184.40937805]
[-323.19174194 -197.49340820]
[-329.27352905 -211.21771240]
[-334.02319336 -225.45799255]
[-337.39770508 -240.08528137]
[-339.36651611 -254.96710205]
[-339.91177368 -269.96868896]
[-339.02856445 -284.95416260]
[-336.72488403 -299.78784180]
[-333.02157593 -314.33535767]
[-327.95220947 -328.46496582]
[-321.56265259 -342.04873657]
[-313.91079712 -354.96359253]
[-305.06594849 -367.09265137]
[-295.10821533 -378.32598877]
[-284.12774658 -388.56188965]
[-272.22399902 -397.70770264]
[-259.50479126 -405.68054199]
[-246.08529663 -412.40826416]
[-232.08705139 -417.82986450]
[-217.63684082 -421.89630127]
[-202.86550903 -424.57070923]
[-187.90682983 -425.82891846]
[-172.89630127 -425.65948486]
[-157.96984863 -424.06393433]
[-143.26264954 -421.05676270]
[-128.90789795 -416.66519165]
[-115.03560638 -410.92898560]
[-101.77139282 -403.90008545]
[-89.23538971 -395.64215088]
[-77.54112244 -386.22998047]
[-66.79450989 -375.74880981]
[-57.09286499 -364.29357910]
[-48.52405930 -351.96795654]
[-41.16568756 -338.88366699]
[-35.08439255 -325.15914917]
[-30.33525085 -310.91867065]
[-26.96127129 -296.29129028]
[-24.99300766 -281.40939331]
[-24.44828606 -266.40777588]
[-25.33204269 -251.42233276]
[-27.63627052 -236.58874512]
[-31.34010124 -222.04136658]
[-36.40999603 -207.91192627]
[-42.80003357 -194.32839966]
[-50.45235062 -181.41380310]
[-59.29763794 -169.28509521]
[-69.25579834 -158.05210876]
[-80.23663330 -147.81658936]
[-71.09783173 -135.92196655]
[-61.95903015 -124.02732849]
[-52.82022858 -112.13269043]
[-43.68142319 -100.23806000]
[-34.54262161 -88.34342957]
[-22.59334755 -86.46157074]
[-14.88231277 -76.62675476]
[-15.97250748 -63.77473831]
[-7.01181173 -51.74535751]
[6.79619598 -46.16072083]
[8.83514595 -30.47144890]
[17.79584122 -18.44207191]
[26.75653839 -6.41269445]
[35.71723175 5.61668348]
[44.67792892 17.64606094]
[53.63862610 29.67543793]
[62.59932327 41.70481491]
[71.56002045 53.73419571]
[80.87490082 65.49144745]
[90.53571320 76.96614838]
[100.19651794 88.44084930]
[98.68808746 73.51688385]
[104.20221710 59.56717682]
[115.50703430 49.70811844]
[130.07702637 46.14225388]
[144.65721130 49.66620255]
[155.99034119 59.49270630]
[161.54455566 73.42649841]
[160.07905579 88.35473633]
[151.92120361 100.94241333]
[138.89350891 108.37740326]
[123.90638733 108.99872589]
[110.30797577 102.66754150]
[117.96856689 115.56387329]
[125.62916565 128.46020508]
[133.28976440 141.35652161]
[141.04615784 154.19546509]
[148.89791870 166.97630310]
[156.74966431 179.75715637]
[164.60142517 192.53799438]
[172.92337036 205.01779175]
[181.70396423 217.17924500]
[190.48457336 229.34069824]
[199.26518250 241.50215149]
[208.04577637 253.66360474]
[216.82638550 265.82507324]
[221.58935547 267.96075439]
[224.74162292 271.36907959]
[226.06814575 275.22332764]
[225.71315002 278.73138428]
[233.94195557 291.27276611]
[242.17077637 303.81417847]
[250.39958191 316.35556030]
[258.62838745 328.89697266]
[272.23602295 322.52410889]
[286.61212158 318.15277100]
[301.46398926 315.87194824]
[316.48931885 315.72805786]
[331.38214111 317.72402954]
[345.83932495 321.81924438]
[359.56649780 327.93035889]
[372.28421021 335.93289185]
[383.73355103 345.66394043]
[393.68139648 356.92544556]
[401.92523193 369.48806763]
[408.29727173 383.09606934]
[412.66772461 397.47244263]
[414.94763184 412.32446289]
[415.09057617 427.34979248]
[413.09368896 442.24252319]
[408.99755859 456.69943237]
[402.88562012 470.42623901]
[394.88229370 483.14346313]
[385.15051270 494.59219360]
[373.88842773 504.53933716]
[361.32528687 512.78240967]
[347.71685791 519.15356445]
[333.34024048 523.52313232]
[318.48806763 525.80212402]
[303.46273804 525.94415283]
[288.57012939 523.94635010]
[274.11346436 519.84930420]
[260.38705444 513.73657227]
[247.67033386 505.73242188]
[236.22219849 495.99993896]
[226.27574158 484.73724365]
[218.03344727 472.17358398]
[211.66311646 458.56475830]
[207.29444885 444.18786621]
[205.01637268 429.33554077]
[204.87527466 414.31021118]
[206.87402344 399.41775513]
[210.97192383 384.96133423]
[217.08557129 371.23529053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[18 156]
[19 155]
[20 154]
[21 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 137]
[28 136]
[29 135]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[40 128]
[41 127]
[43 125]
[44 124]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[51 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
