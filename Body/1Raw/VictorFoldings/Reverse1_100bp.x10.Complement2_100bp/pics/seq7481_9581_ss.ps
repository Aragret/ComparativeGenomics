%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[0.60208577 496.90744019]
[-3.44458365 511.36624146]
[-9.00522709 525.31298828]
[-16.01683807 538.58959961]
[-24.39996910 551.04577637]
[-34.05963516 562.54022217]
[-44.88638306 572.94281006]
[-56.75753403 582.13562012]
[-69.53858948 590.01452637]
[-83.08471680 596.49017334]
[-97.24243164 601.48931885]
[-111.85132599 604.95520020]
[-126.74585724 606.84857178]
[-141.75726318 607.14801025]
[-156.71546936 605.85015869]
[-171.45095825 602.96960449]
[-185.79678345 598.53912354]
[-199.59039307 592.60882568]
[-212.67549133 585.24591064]
[-224.90382385 576.53387451]
[-236.13681030 566.57135010]
[-246.24720764 555.47125244]
[-255.12042236 543.35931396]
[-262.65594482 530.37286377]
[-268.76837158 516.65899658]
[-273.38845825 502.37310791]
[-276.46383667 487.67706299]
[-277.95968628 472.73736572]
[-277.85900879 457.72329712]
[-276.16302490 442.80499268]
[-272.89086914 428.15148926]
[-268.07968140 413.92883301]
[-261.78393555 400.29812622]
[-254.07496643 387.41387939]
[-245.04014587 375.42202759]
[-234.78184509 364.45849609]
[-223.41629028 354.64746094]
[-211.07225037 346.10012817]
[-197.88961792 338.91333008]
[-184.01773071 333.16851807]
[-169.61380005 328.93072510]
[-154.84100342 326.24804688]
[-139.86676025 325.15081787]
[-124.86071014 325.65151978]
[-109.99289703 327.74444580]
[-95.43179321 331.40588379]
[-81.34236908 336.59436035]
[-67.88427734 343.25109863]
[-59.84310532 330.58856201]
[-51.80193329 317.92602539]
[-43.76076126 305.26351929]
[-35.90900421 292.48266602]
[-28.24840736 279.58633423]
[-20.58781052 266.69003296]
[-12.92721367 253.79368591]
[-5.26661587 240.89736938]
[2.39398170 228.00103760]
[2.24169850 213.10720825]
[15.94172001 205.19393921]
[23.60231781 192.29760742]
[22.87416840 174.76373291]
[39.00870514 165.88914490]
[46.47644424 152.88018799]
[33.30364227 160.05496216]
[18.35816765 161.33276367]
[4.15859699 156.49829102]
[-6.90219402 146.36622620]
[-12.96026707 132.64398193]
[-12.99473095 117.64402008]
[-6.99977684 103.89409637]
[4.01433897 93.71130371]
[18.19154549 88.81163025]
[33.14273453 90.02075195]
[46.34836578 97.13491058]
[55.58306122 108.95524597]
[59.29061127 123.48983002]
[56.84562683 138.29086304]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[112.07900238 74.46486664]
[121.73981476 62.99016953]
[131.31492615 51.44386673]
[140.80383301 39.82660294]
[141.64039612 34.67420197]
[144.12156677 30.75029182]
[147.50399780 28.47560310]
[150.98509216 27.91486740]
[160.98326111 16.73289299]
[170.98143005 5.55091763]
[172.70503235 -0.83192736]
[176.78143311 -4.79172945]
[181.44761658 -5.80945635]
[185.33648682 -21.14527130]
[199.71029663 -25.04951859]
[210.03695679 -35.92885208]
[220.36363220 -46.80818558]
[230.69029236 -57.68752289]
[220.88452148 -69.05525970]
[212.25936890 -81.34286499]
[204.90052795 -94.42819977]
[198.88114929 -108.18122864]
[194.26107788 -122.46525574]
[191.08619690 -137.13832092]
[189.38809204 -152.05459595]
[189.18360901 -167.06581116]
[190.47480774 -182.02279663]
[193.24884033 -196.77688599]
[197.47814941 -211.18145752]
[203.12069702 -225.09333801]
[210.12037659 -238.37426758]
[218.40765381 -250.89224243]
[227.90016174 -262.52285767]
[238.50354004 -273.15048218]
[250.11241150 -282.66955566]
[262.61141968 -290.98544312]
[275.87628174 -298.01547241]
[289.77523804 -303.68981934]
[304.17010498 -307.95205688]
[318.91781616 -310.75979614]
[333.87179565 -312.08520508]
[348.88345337 -311.91503906]
[363.80355835 -310.25103760]
[378.48385620 -307.10974121]
[392.77841187 -302.52230835]
[406.54516602 -296.53442383]
[419.64727783 -289.20550537]
[431.95458984 -280.60845947]
[443.34469604 -270.82870483]
[453.70446777 -259.96343994]
[462.93090820 -248.12068176]
[470.93234253 -235.41807556]
[477.62918091 -221.98190308]
[482.95495605 -207.94570923]
[486.85668945 -193.44897461]
[489.29559326 -178.63580322]
[490.24743652 -163.65339661]
[489.70275879 -148.65066528]
[487.66699219 -133.77671814]
[484.16033936 -119.17938232]
[479.21768188 -105.00374603]
[472.88812256 -91.39068604]
[465.23458862 -78.47550201]
[456.33312988 -66.38655853]
[446.27221680 -55.24399948]
[435.15185547 -45.15856552]
[423.08255005 -36.23049927]
[410.18423462 -28.54853058]
[396.58517456 -22.18900871]
[382.42044067 -17.21513748]
[367.83087158 -13.67635441]
[352.96145630 -11.60782814]
[337.95996094 -11.03011703]
[322.97549438 -11.94896317]
[308.15695190 -14.35523415]
[293.65167236 -18.22501564]
[279.60379028 -23.51984596]
[266.15289307 -30.18710136]
[253.43270874 -38.16051865]
[241.56962585 -47.36085129]
[231.24296570 -36.48151779]
[220.91629028 -25.60218430]
[210.58963013 -14.72284985]
[207.43937683 -0.16519776]
[192.32695007 4.51721239]
[182.16340637 15.54908943]
[172.16523743 26.73106384]
[162.16705322 37.91304016]
[152.42109680 49.31550217]
[142.93218994 60.93276596]
[141.13548279 68.10169983]
[133.21450806 72.65097809]
[123.55370331 84.12567902]
[121.65045929 91.26706696]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[68.17522430 148.12144470]
[59.48539734 160.34793091]
[52.01765442 173.35688782]
[54.62734604 185.98829651]
[48.13962936 196.66973877]
[36.49864578 199.95820618]
[28.83804703 212.85452271]
[28.44239235 228.67079163]
[15.29030895 235.66163635]
[7.62971115 248.55796814]
[-0.03088637 261.45428467]
[-7.69148397 274.35061646]
[-15.35208130 287.24694824]
[-23.01267815 300.14328003]
[-23.47635078 306.73846436]
[-26.71494865 311.40841675]
[-31.09823608 313.30468750]
[-39.13940811 325.96722412]
[-47.18058014 338.62973022]
[-55.22175598 351.29226685]
[-43.47396469 360.64221191]
[-32.78658295 371.18792725]
[-23.28071213 382.80990601]
[-15.06405354 395.37646484]
[-8.22971249 408.74523926]
[-2.85512543 422.76470947]
[0.99880809 437.27606201]
[3.28842068 452.11486816]
[3.98776913 467.11297607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 201]
[49 200]
[50 199]
[51 198]
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[59 188]
[60 187]
[62 184]
[63 183]
[77 182]
[78 181]
[79 180]
[80 179]
[82 177]
[83 175]
[84 174]
[85 172]
[86 171]
[90 170]
[91 169]
[92 168]
[95 167]
[97 165]
[98 164]
[99 163]
[100 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
