%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[91.76123047 702.17358398]
[76.90950775 699.90643311]
[62.50484848 695.63800049]
[48.81560516 689.44781494]
[36.09679794 681.45117188]
[24.58536911 671.79711914]
[14.49577045 660.66546631]
[6.01596594 648.26361084]
[-0.69607097 634.82250977]
[-5.51529932 620.59265137]
[-8.35194016 605.83911133]
[-9.15314770 590.83673096]
[-7.90399742 575.86499023]
[-4.62775898 561.20275879]
[0.61453259 547.12329102]
[7.72521687 533.88879395]
[16.57182693 521.74584961]
[26.98955345 510.92065430]
[38.78432465 501.61489868]
[51.73640823 494.00192261]
[65.60451508 488.22357178]
[80.13028717 484.38748169]
[95.04312897 482.56509399]
[95.26645660 467.56677246]
[95.48978424 452.56842041]
[87.94282532 439.72738647]
[95.88473511 426.04394531]
[96.10806274 411.04559326]
[96.33139038 396.04724121]
[96.55471802 381.04891968]
[96.77804565 366.05056763]
[97.00137329 351.05224609]
[97.22470093 336.05389404]
[82.17438507 332.70147705]
[68.14111328 326.29895020]
[55.73579407 317.12249756]
[45.49900818 305.56906128]
[37.87744141 292.13925171]
[33.20439148 277.41561890]
[31.68520546 262.03741455]
[33.38824081 246.67279053]
[38.24180984 231.98982239]
[46.03717422 218.62742615]
[56.43754578 207.16755676]
[68.99261475 198.10989380]
[83.15806580 191.85002136]
[98.31914520 188.66213989]
[98.31914520 173.66213989]
[98.31914520 158.66213989]
[98.31914520 143.66213989]
[98.31914520 128.66213989]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[63.24600220 34.73237228]
[68.09119415 17.86551094]
[63.69020081 3.52566409]
[59.28919983 -10.81418324]
[45.60766220 -18.26087570]
[41.34870148 -32.86621475]
[48.53229904 -45.86357880]
[44.13130188 -60.20342636]
[39.73030472 -74.54327393]
[35.32930374 -88.88311768]
[30.92830849 -103.22296906]
[19.48255920 -114.14566803]
[23.14515877 -128.58293152]
[18.74416161 -142.92277527]
[14.34316254 -157.26263428]
[11.07121563 -142.62382507]
[2.79275107 -130.11515808]
[-9.40305614 -121.38232422]
[-23.91163826 -117.57430267]
[-38.82414246 -119.19209290]
[-52.17856979 -126.02285004]
[-62.21791840 -137.16787720]
[-67.62133789 -151.16084290]
[-67.67791748 -166.16073608]
[-62.38021088 -180.19406128]
[-52.42522049 -191.41448975]
[-39.12270355 -198.34579468]
[-24.22282791 -200.07603455]
[-9.68593216 -196.37757874]
[2.57540655 -187.73699951]
[10.94894600 -175.28894043]
[9.83329678 -190.24739075]
[8.71764851 -205.20584106]
[7.60199928 -220.16430664]
[6.48635101 -235.12275696]
[5.37070227 -250.08120728]
[-9.36856556 -253.43463135]
[-22.46373940 -260.98498535]
[-32.75040817 -272.06088257]
[-39.31388474 -285.67749023]
[-41.57055283 -300.62402344]
[-39.31974792 -315.57144165]
[-32.76161194 -329.19064331]
[-22.47929001 -340.27059937]
[-9.38707829 -347.82608032]
[5.35087252 -351.18527222]
[20.42407417 -350.04949951]
[34.49222565 -344.51971436]
[46.30440140 -335.08764648]
[54.81026459 -322.59197998]
[59.25348282 -308.14379883]
[59.23896790 -293.02789307]
[54.76801300 -278.58828735]
[46.23816681 -266.10897827]
[34.40790176 -256.69961548]
[20.32915497 -251.19685364]
[21.44480515 -236.23840332]
[22.56045341 -221.27995300]
[23.67610168 -206.32150269]
[24.79174995 -191.36303711]
[25.90739822 -176.40458679]
[28.68301010 -161.66362000]
[33.08400726 -147.32377625]
[37.48500443 -132.98393250]
[48.61596680 -123.08691406]
[45.26815414 -107.62397003]
[49.66915131 -93.28411865]
[54.07015228 -78.94427490]
[58.47114944 -64.60442352]
[62.87214661 -50.26457596]
[76.11016083 -43.53474426]
[80.77767181 -29.05479622]
[73.62905121 -15.21518135]
[78.03004456 -0.87533408]
[82.43104553 13.46451283]
[92.96726227 19.40712547]
[96.75116730 31.31787109]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[113.52678680 94.91159058]
[120.59954834 81.68373871]
[131.21473694 71.08572388]
[144.45401001 64.03437805]
[159.17205811 61.13971329]
[174.09561157 62.65214539]
[187.93363953 68.44083405]
[199.48901367 78.00500488]
[207.76208496 90.51725769]
[212.03712463 104.89515686]
[211.94433594 119.89486694]
[207.49171448 134.21876526]
[199.06446838 146.62770081]
[187.39164734 156.04817200]
[173.48304749 161.66519165]
[158.54193115 162.99287415]
[143.86082458 159.91632080]
[130.70979309 152.70170593]
[120.22655487 141.97315979]
[113.31914520 128.66213989]
[113.31914520 143.66213989]
[113.31914520 158.66213989]
[113.31914520 173.66213989]
[113.31914520 188.66213989]
[127.63439941 191.58279419]
[141.09696960 197.24586487]
[153.18727112 205.43066406]
[163.43905640 215.81921387]
[171.45744324 228.00860596]
[176.93414307 241.52661133]
[179.65927124 255.85000610]
[179.52938843 270.42477417]
[176.55146790 284.68759155]
[170.84252930 298.08755493]
[162.62501526 310.10748291]
[152.21815491 320.28387451]
[140.02558899 328.22476196]
[126.51962280 333.62484741]
[112.22303772 336.27722168]
[111.99971008 351.27557373]
[111.77638245 366.27389526]
[111.55305481 381.27224731]
[111.32972717 396.27056885]
[111.10639954 411.26892090]
[110.88307190 426.26727295]
[118.41405487 440.18109131]
[110.48812103 452.79174805]
[110.26479340 467.79010010]
[110.04146576 482.78845215]
[124.89343262 485.05401611]
[139.29855347 489.32089233]
[152.98846436 495.50958252]
[165.70814514 503.50482178]
[177.22061157 513.15759277]
[187.31141663 524.28820801]
[195.79255676 536.68914795]
[202.50605774 550.12951660]
[207.32682800 564.35882568]
[210.16505432 579.11206055]
[210.96789551 594.11437988]
[209.72036743 609.08624268]
[206.44570923 623.74884033]
[201.20494080 637.82885742]
[194.09568787 651.06414795]
[185.25039673 663.20806885]
[174.83384705 674.03436279]
[163.04008484 683.34143066]
[150.08882141 690.95574951]
[136.22134399 696.73565674]
[121.69597626 700.57330322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 189]
[24 188]
[25 187]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 140]
[54 138]
[55 137]
[56 136]
[57 135]
[59 132]
[60 131]
[61 130]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[70 121]
[71 120]
[72 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
