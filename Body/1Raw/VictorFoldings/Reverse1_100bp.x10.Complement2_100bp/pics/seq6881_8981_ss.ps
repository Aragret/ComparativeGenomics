%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[66.38129425 589.59912109]
[52.11653519 594.31079102]
[37.35103607 597.07910156]
[22.34830093 597.85455322]
[7.37607145 596.62341309]
[-7.29845428 593.40753174]
[-21.41339302 588.26440430]
[-34.71684647 581.28576660]
[-46.97139740 572.59613037]
[-57.95835114 562.35064697]
[-67.48162842 550.73205566]
[-75.37128448 537.94781494]
[-81.48651123 524.22607422]
[-85.71817780 509.81158447]
[-87.99076080 494.96173096]
[-88.26371002 479.94143677]
[-86.53215027 465.01879883]
[-82.82698822 450.46011353]
[-77.21434021 436.52520752]
[-69.79437256 423.46276855]
[-60.69950485 411.50588989]
[-50.09204483 400.86798096]
[-38.16129303 391.73886108]
[-25.12017441 384.28146362]
[-11.20141602 378.62890625]
[3.34658217 374.88201904]
[18.26419449 373.10766602]
[33.28520203 373.33755493]
[35.51031876 358.50350952]
[37.73543549 343.66946411]
[31.97171593 329.93524170]
[41.67054749 317.43551636]
[43.89566422 302.60147095]
[46.12078094 287.76742554]
[48.34589767 272.93338013]
[38.68456650 284.40765381]
[25.22728729 291.03347778]
[10.24185085 291.69430542]
[-3.74643421 286.27880859]
[-14.38029575 275.69952393]
[-19.86774254 261.73928833]
[-19.28404236 246.75065613]
[-12.72755814 233.25946045]
[-1.30317497 223.53919983]
[13.06389904 219.22790527]
[27.95256042 221.05212402]
[40.85380554 228.70443726]
[49.59355164 240.89529419]
[52.69900131 255.57196045]
[57.31300735 241.29924011]
[61.50001907 226.89544678]
[65.68703461 212.49166870]
[69.55133820 197.99797058]
[73.09101105 183.42160034]
[76.63068390 168.84523010]
[80.17035675 154.26884460]
[83.60141754 139.66653442]
[86.92367554 125.03907013]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[100.84769440 57.05265427]
[102.85170746 42.18712616]
[104.85572052 27.32159615]
[102.90087891 18.39879227]
[107.00183105 12.25029564]
[109.22694397 -2.58374858]
[111.45206451 -17.41779137]
[113.67717743 -32.25183487]
[115.90229797 -47.08588028]
[118.12741089 -61.91992188]
[120.35253143 -76.75396729]
[106.14683533 -81.69709015]
[93.09484863 -89.16446686]
[81.64033508 -98.90051270]
[72.17246246 -110.57252502]
[65.01254272 -123.78206635]
[60.40312576 -138.07856750]
[58.49979782 -152.97468567]
[59.36592865 -167.96292114]
[62.97055817 -182.53288269]
[69.18949890 -196.18875122]
[77.80962372 -208.46601868]
[88.53615570 -218.94743347]
[101.00275421 -227.27706909]
[114.78403473 -233.17245483]
[129.41007996 -236.43415833]
[144.38243103 -236.95254517]
[146.60754395 -251.78659058]
[141.00299072 -266.58184814]
[150.54266357 -278.02053833]
[144.93809509 -292.81579590]
[154.47776794 -304.25448608]
[156.70288086 -319.08853149]
[157.70715332 -334.05487061]
[157.48382568 -349.05322266]
[157.26049805 -364.05154419]
[143.24096680 -369.99905396]
[132.85731506 -381.13906860]
[127.90856934 -395.54147339]
[129.25212097 -410.71102905]
[136.65519714 -424.01943970]
[148.83517456 -433.16101074]
[163.68177795 -436.55187988]
[178.62277222 -433.60455322]
[191.06951904 -424.82968140]
[198.86555481 -411.74758911]
[200.66017151 -396.62478638]
[196.14242554 -382.08139038]
[186.09506226 -370.63717651]
[172.25883484 -364.27487183]
[172.48216248 -349.27655029]
[172.70549011 -334.27819824]
[180.97802734 -346.79080200]
[194.07312012 -354.10644531]
[209.06529236 -354.59075928]
[222.60527039 -348.13558960]
[231.66816711 -336.18301392]
[234.22930908 -321.40328979]
[229.71655273 -307.09823608]
[219.13803101 -296.46362305]
[204.85702515 -291.87524414]
[190.06396484 -294.35818481]
[178.06362915 -303.35775757]
[171.53692627 -316.86340332]
[169.31181335 -302.02935791]
[175.07553101 -288.29513550]
[165.37670898 -275.79541016]
[171.14042664 -262.06118774]
[161.44158936 -249.56146240]
[159.21647644 -234.72741699]
[173.37780762 -229.83897400]
[186.40316772 -222.42953491]
[197.84822083 -212.75018311]
[207.32225037 -201.12944031]
[214.50146484 -187.96215820]
[219.14006042 -173.69606018]
[221.07867432 -158.81655884]
[220.24983215 -143.83021545]
[216.68031311 -129.24749756]
[210.49021912 -115.56539917]
[201.88908386 -103.25048828]
[191.16857910 -92.72302246]
[178.69282532 -84.34256744]
[164.88587952 -78.39575958]
[150.21737671 -75.08647919]
[135.18656921 -74.52884674]
[132.96145630 -59.69480515]
[130.73634338 -44.86076355]
[128.51121521 -30.02671814]
[126.28610229 -15.19267464]
[124.06098938 -0.35863131]
[121.83586884 14.47541237]
[119.72124481 29.32560921]
[117.71723175 44.19113922]
[115.71321869 59.05666733]
[129.04251099 52.17699051]
[142.79367065 58.16913223]
[146.82984924 72.61590576]
[138.17572021 84.86769104]
[123.21080017 85.89292145]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[106.09803009 122.53487396]
[101.55113220 128.36132812]
[98.22887421 142.98878479]
[99.37986755 152.05041504]
[94.74672699 157.80851746]
[91.20705414 172.38490295]
[87.66738129 186.96127319]
[84.12770844 201.53764343]
[85.59888458 206.54591370]
[85.05613708 211.15663147]
[82.98814392 214.66925049]
[80.09081268 216.67868042]
[75.90380096 231.08245850]
[71.71678925 245.48625183]
[72.90139008 249.66365051]
[72.71392059 253.60438538]
[71.39726257 256.90615845]
[69.29999542 259.28695679]
[66.82802582 260.60888672]
[63.17994308 275.15850830]
[60.95482254 289.99255371]
[58.72970581 304.82659912]
[56.50458908 319.66064453]
[62.10915375 334.45587158]
[52.56947708 345.89459229]
[50.34436035 360.72863770]
[48.11924362 375.56268311]
[62.54661942 379.75006104]
[76.28711700 385.82315063]
[89.09552002 393.67352295]
[100.74324036 403.16107178]
[111.02242279 414.11651611]
[119.74961853 426.34432983]
[126.76908112 439.62631226]
[131.95553589 453.72540283]
[135.21643066 468.38998413]
[136.49356079 483.35836792]
[135.76414490 498.36340332]
[133.04119873 513.13732910]
[128.37330627 527.41650391]
[121.84379578 540.94604492]
[113.56916809 553.48455811]
[103.69709778 564.80822754]
[92.40377808 574.71502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 193]
[29 192]
[30 191]
[32 189]
[33 188]
[34 187]
[35 186]
[49 185]
[50 180]
[51 179]
[52 178]
[53 174]
[54 173]
[55 172]
[56 171]
[57 169]
[58 168]
[59 166]
[61 164]
[62 163]
[63 157]
[64 156]
[65 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[89 132]
[90 131]
[92 129]
[94 127]
[95 126]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
