%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[141.93040466 538.48901367]
[131.49427795 549.39727783]
[118.50154877 557.08435059]
[103.91637421 560.97991943]
[88.82106018 560.79479980]
[74.33579254 556.54278564]
[61.53546906 548.53942871]
[51.36995316 537.37854004]
[44.59359741 523.88842773]
[41.70925522 509.07006836]
[42.93095779 494.02316284]
[48.16805267 479.86422729]
[57.03190613 467.64395142]
[68.86476898 458.26922607]
[82.78855896 452.43563843]
[97.77004242 450.57611084]
[99.99515533 435.74206543]
[102.22027588 420.90802002]
[104.44538879 406.07397461]
[106.56001282 391.22378540]
[108.56402588 376.35824585]
[109.34535217 361.37863159]
[108.89874268 346.38528442]
[100.31229401 337.86474609]
[99.81751251 325.37719727]
[108.22463226 315.59542847]
[108.00130463 300.59707642]
[107.77797699 285.59875488]
[99.85204315 272.98806763]
[107.38301849 259.07424927]
[107.15969086 244.07589722]
[106.93636322 229.07756042]
[106.04354858 214.10415649]
[104.37200928 199.19758606]
[102.58954620 184.30386353]
[100.80707550 169.41014099]
[88.97582245 160.43478394]
[86.95598602 145.35583496]
[96.45037842 133.00698853]
[87.25550842 121.28932190]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[86.33817291 31.54392242]
[84.99993896 16.60373878]
[70.14843750 13.98303032]
[56.49201202 7.61219168]
[44.95904541 -2.06905580]
[36.33183289 -14.39617443]
[31.19354057 -28.52542305]
[29.88878632 -43.49160385]
[32.50052643 -58.27400589]
[38.84481812 -71.86599731]
[48.48374176 -83.34361267]
[60.75564957 -91.92831421]
[74.82056427 -97.03984070]
[73.48233032 -111.98002625]
[72.14409637 -126.92021179]
[70.80586243 -141.86039734]
[69.02339172 -156.75410461]
[66.79827881 -171.58815002]
[64.57315826 -186.42219543]
[62.34804153 -201.25624084]
[60.12292480 -216.09028625]
[47.69740677 -225.48413086]
[45.65213776 -240.55966187]
[54.68430328 -252.34759521]
[52.45918655 -267.18164062]
[50.23406982 -282.01568604]
[48.00895309 -296.84973145]
[38.31012344 -309.34945679]
[44.07384109 -323.08367920]
[41.84872437 -337.91772461]
[38.59569931 -342.00000000]
[37.35765076 -346.47442627]
[37.94653702 -350.50781250]
[39.87086868 -353.46234131]
[38.31034851 -368.38095093]
[26.98094749 -358.55014038]
[12.20413399 -361.12808228]
[4.87282372 -374.21441650]
[10.39138508 -388.16238403]
[24.69174004 -392.69003296]
[37.23134232 -384.46121216]
[36.78473663 -399.45455933]
[36.33813095 -414.44790649]
[32.95460129 -422.93258667]
[35.99816513 -429.66744995]
[35.77483749 -444.66580200]
[27.83293152 -458.34924316]
[35.37988281 -471.19030762]
[35.15655518 -486.18862915]
[34.93322754 -501.18698120]
[34.70989990 -516.18530273]
[20.69038010 -522.13281250]
[10.30672932 -533.27282715]
[5.35797930 -547.67523193]
[6.70153093 -562.84478760]
[14.10460663 -576.15319824]
[26.28457832 -585.29479980]
[41.13119125 -588.68566895]
[56.07218170 -585.73834229]
[68.51892853 -576.96343994]
[76.31496429 -563.88134766]
[78.10957336 -548.75854492]
[73.59183502 -534.21514893]
[63.54446411 -522.77093506]
[49.70824051 -516.40863037]
[49.93156815 -501.41030884]
[50.15489578 -486.41195679]
[50.37822342 -471.41363525]
[58.30415344 -458.80294800]
[50.77317429 -444.88912964]
[50.99650574 -429.89077759]
[51.33147812 -414.89453125]
[51.77808762 -399.90118408]
[52.22469330 -384.90783691]
[53.22895050 -369.94146729]
[54.78947449 -355.02288818]
[56.68276596 -340.14285278]
[58.90788269 -325.30880737]
[68.44755554 -313.87008667]
[62.84299469 -299.07485962]
[65.06811523 -284.24081421]
[67.29322815 -269.40676880]
[69.51834869 -254.57270813]
[81.61158752 -245.95359802]
[84.07949066 -230.94146729]
[74.95697021 -218.31539917]
[77.18208313 -203.48135376]
[79.40720367 -188.64732361]
[81.63232422 -173.81327820]
[83.85743713 -158.97923279]
[86.02896118 -157.20648193]
[87.62912750 -154.46676636]
[88.28609467 -150.97337341]
[87.71205902 -147.07015991]
[85.74604797 -143.19862366]
[87.08428192 -128.25843811]
[88.42251587 -113.31826019]
[89.76074982 -98.37807465]
[104.51018524 -95.84753418]
[118.11240387 -89.58045197]
[129.63769531 -79.99857330]
[138.29655457 -67.75045013]
[143.49383545 -53.66752625]
[144.86964417 -38.70771027]
[142.32418823 -23.89020729]
[136.02508545 -10.22609520]
[126.39625549 1.35067320]
[114.08945465 10.04711056]
[99.94012451 15.26550388]
[101.27835846 30.20568848]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[117.51418304 117.66799164]
[111.34410095 131.22451782]
[123.48442078 140.98414612]
[125.07992554 156.11389160]
[115.70079803 167.62768555]
[117.48326111 182.52139282]
[119.26572418 197.41511536]
[123.39273071 205.56408691]
[120.96215820 212.54364014]
[131.22448730 201.60359192]
[146.21179199 200.98657227]
[157.33865356 211.04603577]
[158.23110962 226.01945496]
[148.37792969 237.32939148]
[133.42343140 238.49699402]
[121.93470764 228.85423279]
[122.15803528 243.85256958]
[122.38136292 258.85092163]
[130.32327271 272.53436279]
[122.77631378 285.37542725]
[122.99964142 300.37374878]
[123.22296906 315.37210083]
[133.03077698 330.95697021]
[123.89209747 345.93865967]
[124.33869934 360.93200684]
[132.42402649 348.29763794]
[145.40875244 340.78784180]
[160.39205933 340.08035278]
[174.02664185 346.33322144]
[183.26647949 358.14953613]
[186.04739380 372.88949585]
[181.74810791 387.26016235]
[171.32910156 398.05111694]
[157.11799622 402.85159302]
[142.28959656 400.58914185]
[130.15660095 391.76925659]
[123.42955780 378.36227417]
[121.42554474 393.22781372]
[123.38037872 402.15060425]
[119.27943420 408.29910278]
[117.05432129 423.13314819]
[114.82920074 437.96719360]
[112.60408020 452.80123901]
[126.38064575 458.97448730]
[137.98007202 468.63656616]
[146.54162598 481.07049561]
[151.42994690 495.35357666]
[152.28233337 510.42593384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 203]
[19 202]
[20 200]
[21 199]
[22 187]
[23 186]
[26 184]
[27 183]
[28 182]
[30 180]
[31 179]
[32 178]
[33 171]
[34 169]
[35 168]
[36 167]
[39 164]
[41 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[60 145]
[61 144]
[62 143]
[63 142]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[71 130]
[72 129]
[73 128]
[74 127]
[76 125]
[77 124]
[81 123]
[82 122]
[88 121]
[89 120]
[90 119]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
