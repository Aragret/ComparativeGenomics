%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[81.63822174 703.87286377]
[66.59862518 704.50183105]
[51.74034500 702.09014893]
[37.67179871 696.73651123]
[24.96909904 688.66027832]
[14.15240383 678.19201660]
[5.66465473 665.76049805]
[-0.14658177 651.87469482]
[-3.04333854 637.10333252]
[-2.90699553 622.05120850]
[0.25686416 607.33471680]
[6.31868267 593.55651855]
[15.03023148 581.28076172]
[26.03478050 571.01019287]
[38.88169479 563.16534424]
[53.04491043 558.06750488]
[67.94444275 555.92535400]
[68.83725739 540.95196533]
[69.73007202 525.97851562]
[70.62289429 511.00512695]
[56.88441086 505.12811279]
[45.96512985 494.88610840]
[39.19614029 481.50122070]
[37.41163635 466.58020020]
[40.84616470 451.92160034]
[49.10399246 439.29907227]
[61.20460129 430.24661255]
[75.69908905 425.87222290]
[76.59191132 410.89880371]
[77.48472595 395.92541504]
[78.04293060 380.93579102]
[78.26626587 365.93746948]
[78.48959351 350.93911743]
[78.71292114 335.94079590]
[78.93624878 320.94244385]
[79.04791260 305.94287109]
[71.31061554 293.21560669]
[79.04791260 279.41543579]
[79.04791260 264.41543579]
[68.36704254 254.09774780]
[68.15335846 238.88560486]
[79.04791260 227.75248718]
[79.04791260 212.75248718]
[79.04791260 197.75248718]
[69.73155212 209.50856018]
[55.57311249 214.46221924]
[40.95974731 211.07849121]
[30.41956329 200.40588379]
[27.21855354 185.75141907]
[32.34858322 171.65592957]
[44.22005844 162.48706055]
[59.15447235 161.08589172]
[72.52423096 167.88659668]
[80.18664551 180.78213501]
[82.19065857 165.91659546]
[84.19467163 151.05107117]
[82.06284332 146.77738953]
[82.59308624 141.11912537]
[86.48604584 135.77531433]
[88.93177032 120.97604370]
[91.37750244 106.17677307]
[93.27079010 91.29673767]
[94.60902405 76.35655212]
[95.27880859 61.37151337]
[95.27880859 46.37151337]
[95.27880859 31.37151337]
[92.14940643 22.78986931]
[95.39214325 16.14860153]
[92.39084625 7.52131605]
[95.73210907 0.92906368]
[96.17871094 -14.06428623]
[96.62532043 -29.05763626]
[97.07192230 -44.05098724]
[95.95627594 -59.00944138]
[93.29048157 -73.77066040]
[90.62468719 -88.53187561]
[80.55799103 -100.73728943]
[85.91023254 -114.63703156]
[83.24443817 -129.39825439]
[73.17774200 -141.60366821]
[78.52999115 -155.50340271]
[75.86419678 -170.26461792]
[73.19839478 -185.02584839]
[70.53260040 -199.78706360]
[67.86680603 -214.54827881]
[59.38630676 -202.17567444]
[44.97118759 -198.02787781]
[31.21184158 -204.00119019]
[24.39886093 -217.36470032]
[27.64704895 -232.00878906]
[39.47137451 -241.23837280]
[54.46591949 -240.83381653]
[65.77627563 -230.97845459]
[64.66062927 -245.93690491]
[63.54498291 -260.89535522]
[49.01504135 -265.28231812]
[37.05342484 -274.62490845]
[29.27784729 -287.65966797]
[26.73989105 -302.62371826]
[29.78279114 -317.49331665]
[37.99502182 -330.25747681]
[50.26594543 -339.18994141]
[64.93602753 -343.08267212]
[80.02124786 -341.40917969]
[93.48146057 -334.39584351]
[103.49628448 -322.99111938]
[108.71128845 -308.73739624]
[108.42119598 -293.56240845]
[102.66523743 -279.51843262]
[92.22185516 -268.50479126]
[78.50343323 -262.01101685]
[79.61908722 -247.05256653]
[80.73473358 -232.09410095]
[82.62802124 -217.21406555]
[85.29382324 -202.45285034]
[87.95961761 -187.69163513]
[90.62541199 -172.93041992]
[93.29120636 -158.16920471]
[103.16722107 -147.01960754]
[98.00565338 -132.06404114]
[100.67144775 -117.30282593]
[110.54747009 -106.15322876]
[105.38590240 -91.19766998]
[108.05169678 -76.43645477]
[110.71749115 -61.67523575]
[115.91926575 -75.74440765]
[126.05258179 -86.80405426]
[139.61422729 -93.21354675]
[154.59242249 -94.02207184]
[168.76524353 -89.10969543]
[180.03021240 -79.20513153]
[186.71624756 -65.77766418]
[187.83154297 -50.81918335]
[183.21061707 -36.54869080]
[173.53895569 -25.08312225]
[160.25132751 -18.12333298]
[145.31883240 -16.70176506]
[130.95664978 -21.02929688]
[119.29530334 -30.46396828]
[112.06526947 -43.60438156]
[111.61866760 -28.61103058]
[111.17205811 -13.61768055]
[110.72545624 1.37566960]
[110.39048004 16.37192917]
[110.27880859 31.37151337]
[110.27880859 46.37151337]
[110.27880859 61.37151337]
[121.62360382 51.55847549]
[136.59376526 52.50400543]
[146.61372375 63.66646576]
[145.94358826 78.65148926]
[134.96722412 88.87497711]
[119.97241974 88.48044586]
[109.54920959 77.69478607]
[108.21097565 92.63497162]
[121.21977997 85.16697693]
[135.22479248 90.53911591]
[139.90202332 104.79125977]
[131.80360413 117.41724396]
[116.89938354 119.10967255]
[106.17677307 108.62249756]
[103.73104095 123.42176819]
[101.28531647 138.22103882]
[99.06019592 153.05508423]
[97.05618286 167.92060852]
[95.05216980 182.78614807]
[94.04791260 197.75248718]
[94.04791260 212.75248718]
[94.04791260 227.75248718]
[104.94246674 238.88560486]
[104.72878265 254.09774780]
[94.04791260 264.41543579]
[94.04791260 279.41543579]
[101.78520966 293.21560669]
[94.04791260 305.94287109]
[97.17732239 314.52450562]
[93.93458557 321.16577148]
[93.71125793 336.16412354]
[93.48793030 351.16244507]
[93.26460266 366.16079712]
[93.04127502 381.15911865]
[95.58515167 385.71716309]
[96.07708740 390.33358765]
[94.83844757 394.21697998]
[92.45812988 396.81823730]
[91.56531525 411.79162598]
[90.67250061 426.76504517]
[104.54447174 432.83081055]
[115.48362732 443.25708008]
[122.18299866 456.77145386]
[123.85129547 471.73431396]
[120.30635834 486.33755493]
[111.99478912 498.82324219]
[99.93580627 507.69512939]
[85.59629822 511.89794922]
[84.70348358 526.87133789]
[83.81066895 541.84472656]
[82.91784668 556.81817627]
[97.45726013 560.71563721]
[110.91433716 567.46044922]
[122.73801422 576.77630615]
[132.44412231 588.28179932]
[139.63520813 601.50573730]
[144.01679993 615.90667725]
[145.40945435 630.89483643]
[143.75617981 645.85650635]
[139.12464905 660.17901611]
[131.70452881 673.27581787]
[121.79966736 684.61065674]
[109.81565857 693.71936035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 198]
[18 197]
[19 196]
[20 195]
[28 187]
[29 186]
[30 185]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 175]
[38 173]
[39 172]
[42 169]
[43 168]
[44 167]
[54 166]
[55 165]
[56 164]
[59 163]
[60 162]
[61 161]
[62 155]
[63 154]
[64 147]
[65 146]
[66 145]
[68 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 125]
[75 124]
[76 123]
[78 121]
[79 120]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
