%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[59.27621460 664.41723633]
[55.47727203 679.16467285]
[46.00334167 691.08795166]
[32.49584579 698.12127686]
[17.29503441 699.04608154]
[3.03453970 693.70208740]
[-7.81491947 683.01519775]
[-13.37360859 668.83703613]
[-12.67845249 653.62396240]
[-5.84989071 640.01184082]
[5.92898750 630.35894775]
[20.61742020 626.33776855]
[22.84253693 611.50372314]
[25.06765366 596.66967773]
[27.29277229 581.83563232]
[21.52905273 568.10144043]
[31.22788239 555.60168457]
[33.45299911 540.76763916]
[35.67811584 525.93359375]
[37.90323639 511.09957886]
[40.12835312 496.26553345]
[38.01185608 489.18441772]
[42.49861145 481.22784424]
[44.94433975 466.42858887]
[31.41612053 472.90835571]
[17.84947205 466.50942993]
[14.24521923 451.94888306]
[23.26028442 439.96020508]
[38.24909973 439.38098145]
[48.16201019 450.63662720]
[51.70168304 436.06024170]
[55.24135208 421.48388672]
[58.78102493 406.90750122]
[62.32069778 392.33111572]
[65.86037445 377.75476074]
[59.83673477 367.26464844]
[62.66639709 355.09185791]
[73.36367798 347.88552856]
[77.11997223 333.36346436]
[79.45545959 318.54641724]
[80.34827423 303.57299805]
[81.24109650 288.59960938]
[82.13391113 273.62619019]
[68.66865540 267.17514038]
[58.67202377 256.03005981]
[53.69052887 241.86849976]
[54.51264954 226.83813477]
[61.04419708 213.23106384]
[72.31794739 203.13424683]
[86.63672638 198.10949707]
[87.52954102 183.13607788]
[88.42235565 168.16267395]
[81.45631409 154.99743652]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[83.91989899 60.63648224]
[85.03864288 45.46403885]
[96.31469727 35.80038452]
[89.41251373 21.56414795]
[97.89363861 9.31997299]
[98.78645325 -5.65343285]
[99.67926788 -20.62683868]
[100.57208252 -35.60024261]
[101.46489716 -50.57365036]
[101.68822479 -65.57199097]
[101.24162292 -80.56533813]
[100.79501343 -95.55868530]
[100.34841156 -110.55204010]
[98.89899445 -125.48184967]
[96.45326233 -140.28111267]
[94.00753784 -155.08038330]
[91.56180573 -169.87965393]
[89.11608124 -184.67892456]
[86.67035675 -199.47819519]
[83.79747772 -202.73405457]
[82.26428986 -206.36914062]
[82.02551270 -209.91574097]
[82.88860321 -212.96888733]
[84.54700470 -215.22892761]
[82.98648071 -230.14753723]
[81.42596436 -245.06614685]
[72.29494476 -257.98648071]
[78.66618347 -271.44964600]
[77.10565948 -286.36825562]
[75.54513550 -301.28683472]
[73.98461151 -316.20544434]
[64.85359955 -329.12579346]
[71.22483063 -342.58895874]
[69.66430664 -357.50756836]
[54.90426254 -360.88687134]
[42.04252625 -368.87774658]
[32.47425079 -380.61346436]
[27.23733139 -394.82098389]
[26.89982605 -409.95916748]
[31.49834633 -424.38595581]
[40.53408051 -436.53643799]
[53.02689743 -445.09262085]
[67.62167358 -449.12640381]
[82.73527527 -448.20019531]
[96.72828674 -442.41448975]
[108.08285522 -432.39688110]
[115.56732178 -419.23400879]
[118.36983490 -404.35366821]
[116.18638611 -389.36996460]
[109.25382233 -375.90823364]
[98.32414246 -365.42868042]
[84.58291626 -359.06808472]
[86.14344025 -344.14947510]
[95.16283417 -332.29620361]
[88.90321350 -317.76599121]
[90.46373749 -302.84738159]
[92.02426147 -287.92877197]
[93.58478546 -273.01016235]
[102.60417938 -261.15689087]
[96.34456635 -246.62666321]
[97.90509033 -231.70805359]
[99.46561432 -216.78945923]
[101.46962738 -201.92393494]
[103.91535187 -187.12466431]
[106.36107635 -172.32539368]
[108.80680847 -157.52610779]
[111.25253296 -142.72683716]
[113.69826508 -127.92757416]
[120.97314453 -141.04534912]
[134.13442993 -148.24122620]
[149.10394287 -147.28547668]
[161.24324036 -138.47424316]
[166.79080200 -124.53780365]
[164.02766418 -109.79449463]
[153.81002808 -98.81269836]
[139.30392456 -94.99524689]
[125.00422668 -99.52501678]
[115.34175873 -110.99864197]
[115.78836823 -96.00529480]
[116.23497009 -81.01194000]
[116.68157959 -66.01859283]
[127.72917175 -76.16506195]
[142.72085571 -75.66566467]
[153.06871033 -64.80648041]
[152.84503174 -49.80815125]
[142.17793274 -39.26239395]
[127.17801666 -39.21029663]
[116.43830872 -49.68083572]
[115.54548645 -34.70742798]
[114.65267181 -19.73402214]
[113.75985718 -4.76061726]
[112.86704254 10.21278858]
[119.83308411 23.37802887]
[111.28810120 36.69320297]
[121.33591461 47.62832642]
[120.64377594 62.82620621]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[111.87688446 156.81132507]
[103.39576721 169.05549622]
[102.50294495 184.02890015]
[101.61013031 199.00230408]
[115.23036194 205.69297791]
[125.22441101 217.05792236]
[130.09274292 231.34474182]
[129.12295532 246.36628723]
[122.49392700 259.83554077]
[111.24375153 269.71374512]
[97.10731506 274.51901245]
[96.21450043 289.49240112]
[95.32168579 304.46582031]
[94.42887115 319.43920898]
[103.02799225 307.14877319]
[115.84047699 299.34875488]
[130.70719910 297.35363770]
[145.12284851 301.49957275]
[156.65814209 311.08795166]
[163.36918640 324.50296021]
[164.12503052 339.48388672]
[158.79832458 353.50625610]
[148.28669739 364.20697021]
[134.36154175 369.78283691]
[119.36949921 369.29418945]
[105.83699799 362.82339478]
[96.04448700 351.46087646]
[91.64203644 337.11978149]
[87.88573456 351.64184570]
[93.21644592 369.26751709]
[80.43674469 381.29443359]
[76.89707184 395.87078857]
[73.35739899 410.44717407]
[69.81772614 425.02355957]
[66.27805328 439.59991455]
[62.73838425 454.17630005]
[59.74361038 468.87429810]
[57.29788208 483.67358398]
[54.96239471 498.49063110]
[52.73727798 513.32470703]
[50.51216125 528.15875244]
[48.28704453 542.99279785]
[46.06192780 557.82684326]
[51.66648865 572.62207031]
[42.12681580 584.06079102]
[39.90169907 598.89483643]
[37.67658234 613.72888184]
[35.45146561 628.56292725]
[48.31364441 636.71667480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[15 206]
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[23 199]
[24 198]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[38 190]
[39 189]
[40 175]
[41 174]
[42 173]
[43 172]
[50 165]
[51 164]
[52 163]
[54 161]
[55 160]
[56 159]
[58 157]
[59 156]
[62 153]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 140]
[70 139]
[71 138]
[72 137]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[83 121]
[84 120]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
