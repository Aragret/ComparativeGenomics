%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[123.87565613 664.47943115]
[118.05136108 650.32537842]
[119.48345947 635.08703613]
[127.84284973 622.26599121]
[141.20861816 614.80847168]
[140.76200867 599.81512451]
[140.31539917 584.82177734]
[139.86878967 569.82843018]
[128.88546753 559.83331299]
[128.21894836 544.63427734]
[138.77720642 533.18170166]
[138.33059692 518.18835449]
[137.88398743 503.19503784]
[137.43739319 488.20166016]
[136.99078369 473.20831299]
[136.54417419 458.21496582]
[136.09756470 443.22161865]
[134.75933838 428.28143311]
[132.53421021 413.44738770]
[130.30909729 398.61334229]
[128.08398438 383.77929688]
[125.91246033 382.00656128]
[124.31229401 379.26684570]
[123.65532684 375.77343750]
[124.22936249 371.87023926]
[126.19537354 367.99871826]
[124.85713959 353.05853271]
[123.51890564 338.11834717]
[122.18067169 323.17816162]
[120.50913239 308.27157593]
[118.50511932 293.40603638]
[116.50110626 278.54052734]
[114.49709320 263.67498779]
[102.53351593 254.87678528]
[100.28939819 239.82957458]
[109.59889221 227.34072876]
[107.59487915 212.47520447]
[98.22656250 200.89573669]
[104.05078125 186.18556213]
[102.04676819 171.32003784]
[100.04275513 156.45451355]
[90.67444611 144.87504578]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[83.14687347 48.63037109]
[85.57744598 41.65082169]
[84.01692200 26.73221779]
[82.45639801 11.81361389]
[80.78485870 -3.09296060]
[79.00238800 -17.98667717]
[77.21992493 -32.88039398]
[65.84396362 -47.36034775]
[73.37444305 -63.21149826]
[71.37042999 -78.07702637]
[69.36641693 -92.94255066]
[67.25179291 -107.79274750]
[65.02667236 -122.62679291]
[62.80155563 -137.46083069]
[55.84674454 -124.17059326]
[43.23178101 -116.05500793]
[28.25418663 -115.23548126]
[14.82906628 -121.92623138]
[6.46571445 -134.37831116]
[5.35029221 -149.33677673]
[11.77436733 -162.89152527]
[24.05870247 -171.49938965]
[38.99220276 -172.91026306]
[52.67128754 -166.75537109]
[61.51995087 -154.64440918]
[61.51995087 -169.64440918]
[50.96287537 -178.00878906]
[47.20560455 -190.74037170]
[51.40492249 -203.12777710]
[61.81552505 -210.72045898]
[62.03885269 -225.71879578]
[62.26218033 -240.71714783]
[62.48550797 -255.71548462]
[62.70883560 -270.71380615]
[62.93216324 -285.71215820]
[63.15549088 -300.71047974]
[63.37881851 -315.70883179]
[63.60214615 -330.70715332]
[63.04393768 -345.69677734]
[61.70570374 -360.63696289]
[60.36746979 -375.57714844]
[59.02923203 -390.51733398]
[44.16276169 -393.09616089]
[30.47070694 -399.43572998]
[18.88662338 -409.10379028]
[10.20033073 -421.44116211]
[5.00407410 -435.60665894]
[3.65214276 -450.63446045]
[6.23671436 -465.49993896]
[12.58156872 -479.18954468]
[22.25410271 -490.76989746]
[34.59482574 -499.45141602]
[48.76232910 -504.64221191]
[63.79064941 -505.98834229]
[78.65512848 -503.39801025]
[92.34227753 -497.04788208]
[103.91889191 -487.37088013]
[112.59565735 -475.02679443]
[117.78097534 -460.85729980]
[119.12129974 -445.82846069]
[116.52524567 -430.96499634]
[110.16982269 -417.28027344]
[100.48834991 -405.70739746]
[88.14092255 -397.03540039]
[73.96942139 -391.85556030]
[75.30765533 -376.91537476]
[76.64588928 -361.97518921]
[77.98412323 -347.03500366]
[87.53462982 -358.60168457]
[102.26232147 -361.44686890]
[115.43388367 -354.26983643]
[121.02746582 -340.35180664]
[116.48574829 -326.05590820]
[103.88514709 -317.91802979]
[88.98648834 -319.65872192]
[78.60048676 -330.48382568]
[78.37715912 -315.48550415]
[78.15383148 -300.48715210]
[77.93050385 -285.48883057]
[77.70717621 -270.49047852]
[77.48384857 -255.49215698]
[77.26052094 -240.49382019]
[77.03719330 -225.49546814]
[76.81386566 -210.49713135]
[89.03241730 -198.94094849]
[89.11409760 -181.78552246]
[76.51995087 -169.64440918]
[76.51995087 -154.64440918]
[77.63559723 -139.68595886]
[79.86071777 -124.85191345]
[82.08583069 -110.01786804]
[86.18678284 -103.86936951]
[84.23194122 -94.94656372]
[86.23595428 -80.08103943]
[88.23996735 -65.21550751]
[97.66625977 -57.63450623]
[99.45749664 -45.26618958]
[92.11363983 -34.66286087]
[93.89611053 -19.76914406]
[95.67857361 -4.87542677]
[99.59464264 1.39244568]
[97.37500000 10.25309086]
[98.93552399 25.17169571]
[100.49604797 40.09030151]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[120.87584686 140.80361938]
[114.90828705 154.45050049]
[116.91230011 169.31602478]
[118.91631317 184.18154907]
[128.42796326 196.82429504]
[122.46040344 210.47119141]
[124.46441650 225.33671570]
[136.74870300 234.91450500]
[138.56929016 250.01881409]
[129.36262512 261.67098999]
[131.36663818 276.53649902]
[133.37065125 291.40203857]
[135.37466431 306.26757812]
[138.56654358 310.39782715]
[139.73783875 314.89016724]
[139.08897400 318.91436768]
[137.12086487 321.83990479]
[138.45909119 336.78009033]
[139.79733276 351.72027588]
[141.13555908 366.66046143]
[142.91802979 381.55419922]
[145.14314270 396.38824463]
[147.36825562 411.22229004]
[149.59338379 426.05633545]
[157.68426514 413.42550659]
[171.61172485 407.85540771]
[186.18115234 411.42355347]
[195.95852661 422.79910278]
[197.29711914 437.73925781]
[189.69766235 450.67169189]
[175.99458313 456.77297974]
[161.29876709 453.76742554]
[151.09091187 442.77502441]
[151.53752136 457.76837158]
[151.98413086 472.76171875]
[152.43074036 487.75506592]
[152.87734985 502.74841309]
[153.32394409 517.74176025]
[153.77055359 532.73510742]
[164.99174500 543.53894043]
[165.23109436 558.75067139]
[154.86215210 569.38177490]
[155.30874634 584.37518311]
[155.75535583 599.36853027]
[156.20196533 614.36187744]
[169.98791504 621.01062012]
[179.09561157 633.31140137]
[181.43215942 648.43750000]
[176.46066284 662.91308594]
[165.32351685 673.41174316]
[150.57995605 677.52105713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 183]
[19 182]
[20 181]
[21 180]
[26 179]
[27 178]
[28 177]
[29 176]
[30 172]
[31 171]
[32 170]
[33 169]
[36 166]
[37 165]
[39 163]
[40 162]
[41 161]
[43 159]
[44 158]
[47 156]
[48 155]
[49 154]
[51 153]
[52 152]
[53 151]
[54 149]
[55 148]
[56 147]
[58 144]
[59 143]
[60 142]
[61 140]
[62 139]
[63 138]
[74 137]
[75 136]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
