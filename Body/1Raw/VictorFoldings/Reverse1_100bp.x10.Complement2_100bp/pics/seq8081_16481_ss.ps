%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[66.14107513 428.46536255]
[64.85086060 443.58819580]
[58.18127060 457.22201538]
[47.03430176 467.52294922]
[32.91749573 473.09793091]
[17.74003029 473.19293213]
[3.55453706 467.79513550]
[-7.72051430 457.63455200]
[-14.56026554 444.08529663]
[-16.03969765 428.97979736]
[-11.95872688 414.36096191]
[-2.86927342 402.20587158]
[9.99938965 394.15841675]
[24.90688133 391.30688477]
[27.57267761 376.54568481]
[30.23847198 361.78445435]
[32.90426636 347.02322388]
[35.46010208 332.24258423]
[37.90582657 317.44329834]
[40.35155487 302.64404297]
[38.34791565 298.30877686]
[39.04639053 292.66882324]
[43.09672928 287.44326782]
[45.98200226 272.72338867]
[44.53184128 270.32440186]
[43.94458008 267.20642090]
[44.49882126 263.69525146]
[46.35020065 260.21145630]
[49.50209427 257.22488403]
[53.25839615 242.70283508]
[47.39160538 232.12420654]
[50.40219498 219.99490356]
[61.20557404 212.94863892]
[65.17767334 198.48411560]
[69.14976501 184.01959229]
[73.12186432 169.55506897]
[77.09395599 155.09054565]
[69.52656555 142.31283569]
[73.34878540 127.58715820]
[86.80254364 119.73641968]
[90.77463531 105.27189636]
[93.76940918 90.57389069]
[95.77342224 75.70836639]
[89.94920349 60.99819565]
[99.31751251 49.41873169]
[101.32153320 34.55320358]
[103.32554626 19.68767548]
[97.50131989 4.97750807]
[106.86963654 -6.60195589]
[108.87364960 -21.46748352]
[110.87766266 -36.33301163]
[108.89344025 -41.16104889]
[108.95356750 -45.80321503]
[110.64490509 -49.51190948]
[113.31745911 -51.81186295]
[115.98325348 -66.57308197]
[118.64904785 -81.33429718]
[120.87416840 -96.16834259]
[122.65663147 -111.06205750]
[124.43910217 -125.95577240]
[126.22156525 -140.84948730]
[128.00402832 -155.74320984]
[129.78649902 -170.63693237]
[128.55952454 -185.58665466]
[124.37251282 -199.99044800]
[120.18550110 -214.39422607]
[115.99848938 -228.79800415]
[104.71662903 -239.88990784]
[108.59377289 -254.27104187]
[93.79040527 -251.74954224]
[78.79608917 -250.93197632]
[63.80632401 -251.82899475]
[49.01652145 -254.42890930]
[34.61950302 -258.69781494]
[20.80295753 -264.58004761]
[7.74701405 -271.99896240]
[-4.37811470 -280.85778809]
[-15.41435337 -291.04107666]
[-25.21782303 -302.41604614]
[-33.66071320 -314.83438110]
[-40.63295746 -328.13421631]
[-46.04365540 -342.14215088]
[-49.82226562 -356.67556763]
[-51.91952896 -371.54495239]
[-52.30810547 -386.55651855]
[-50.98292160 -401.51452637]
[-47.96126175 -416.22393799]
[-43.28251648 -430.49304199]
[-37.00768280 -444.13577271]
[-29.21856689 -456.97430420]
[-20.01671219 -468.84121704]
[-9.52208900 -479.58181763]
[2.12848687 -489.05609131]
[14.78312588 -497.14050293]
[28.27684784 -503.72967529]
[42.43373489 -508.73770142]
[57.06922531 -512.09930420]
[71.99250793 -513.77062988]
[87.00904083 -513.72985840]
[101.92303467 -511.97760010]
[116.54006958 -508.53668213]
[130.66957092 -503.45190430]
[144.12734985 -496.78961182]
[156.73794556 -488.63665771]
[168.33694458 -479.09930420]
[178.77313232 -468.30191040]
[187.91046143 -456.38525391]
[195.62980652 -443.50466919]
[201.83053589 -429.82809448]
[206.43179321 -415.53381348]
[209.37359619 -400.80819702]
[210.61759949 -385.84323120]
[210.14758301 -370.83401489]
[207.96968079 -355.97619629]
[204.11225891 -341.46353149]
[198.62564087 -327.48513794]
[191.58134460 -314.22332764]
[183.07119751 -301.85098267]
[173.20616150 -290.52938843]
[162.11483765 -280.40612793]
[149.94181824 -271.61322021]
[136.84580994 -264.26525879]
[122.99755859 -258.45803833]
[133.97993469 -248.39640808]
[130.40226746 -232.98501587]
[134.58927917 -218.58123779]
[138.77629089 -204.17745972]
[142.96330261 -189.77366638]
[145.57121277 -204.54522705]
[151.25247192 -218.42770386]
[159.74864197 -230.78955078]
[170.67320251 -241.06837463]
[183.52912903 -248.79655457]
[197.73159790 -253.62252808]
[212.63447571 -255.32673645]
[227.55976868 -253.83164978]
[241.82850647 -249.20527649]
[254.79153442 -241.65809631]
[265.85913086 -231.53344727]
[274.52777100 -219.29194641]
[280.40313721 -205.49049377]
[283.21789551 -190.75695801]
[282.84399414 -175.76161194]
[279.29849243 -161.18666077]
[272.74261475 -147.69515991]
[263.47467041 -135.90087891]
[251.91625977 -126.34037781]
[238.59321594 -119.44860077]
[224.11164856 -115.53907776]
[209.13038635 -114.78966522]
[194.33096313 -117.23445129]
[180.38665771 -122.76222229]
[167.93183899 -131.12150574]
[157.53311157 -141.93199158]
[149.66357422 -154.70188904]
[144.68022156 -168.85446167]
[142.89775085 -153.96073914]
[141.11528015 -139.06703186]
[139.33280945 -124.17330933]
[137.55035400 -109.27959442]
[135.76788330 -94.38587189]
[137.39245605 -92.10137939]
[138.20999146 -89.03572845]
[137.91844177 -85.49307251]
[136.33129883 -81.88121796]
[133.41026306 -78.66850281]
[130.74447632 -63.90728378]
[128.07867432 -49.14606857]
[125.74318695 -34.32899857]
[123.73917389 -19.46347046]
[121.73516083 -4.59794235]
[127.70272064 9.04894257]
[118.19107056 21.69168854]
[116.18705750 36.55721664]
[114.18304443 51.42274475]
[120.15060425 65.06963348]
[110.63895416 77.71237946]
[108.63494110 92.57790375]
[119.43840790 82.17189026]
[134.13172913 79.15422821]
[148.16201782 84.45997620]
[157.18183899 96.44508362]
[158.39630127 111.39583588]
[151.42909241 124.67958832]
[138.43907166 132.18020630]
[123.45134735 131.57356262]
[111.11002350 123.04763031]
[105.23915863 109.24398804]
[101.26706696 123.70851898]
[108.82457733 137.32914734]
[104.59025574 151.94165039]
[91.55848694 159.06265259]
[87.58638763 173.52717590]
[83.61428833 187.99169922]
[79.64219666 202.45622253]
[75.67009735 216.92074585]
[80.73780060 234.62384033]
[67.78045654 246.45913696]
[64.02415466 260.98120117]
[60.70189285 275.60867310]
[57.81661987 290.32855225]
[55.15082550 305.08978271]
[52.70509720 319.88903809]
[50.25937271 334.68832397]
[51.94767761 343.66537476]
[47.66548538 349.68902588]
[44.99969101 364.45025635]
[42.33389282 379.21145630]
[39.66809845 393.97268677]
[52.63649750 401.85842896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[16 207]
[17 206]
[18 204]
[19 203]
[20 202]
[23 201]
[24 200]
[29 199]
[30 198]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[40 189]
[41 188]
[42 178]
[43 177]
[45 175]
[46 174]
[47 173]
[49 171]
[50 170]
[51 169]
[55 168]
[56 167]
[57 166]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 128]
[65 127]
[66 126]
[67 125]
[69 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
