%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-5.97468138 542.94134521]
[-0.48633847 556.95788574]
[2.06781101 571.79235840]
[1.58317626 586.83728027]
[-1.92039740 601.47662354]
[-8.29944038 615.11083984]
[-17.29273605 627.18170166]
[-28.53201294 637.19488525]
[-41.55702972 644.74029541]
[-55.83442307 649.50903320]
[-70.77954102 651.30584717]
[-85.78038788 650.05706787]
[-100.22268677 645.81384277]
[-113.51504517 638.75000000]
[-125.11313629 629.15472412]
[-134.54203796 617.42095947]
[-141.41563416 604.02923584]
[-145.45245361 589.52789307]
[-146.48719788 574.51074219]
[-144.47749329 559.59277344]
[-139.50563049 545.38482666]
[-131.77522278 532.46875000]
[-121.60279083 521.37341309]
[-109.40492249 512.55316162]
[-95.68109131 506.36920166]
[-80.99329376 503.07473755]
[-65.94297791 502.80468750]
[-51.14645004 505.57012939]
[-45.48366547 491.68008423]
[-39.82087708 477.79006958]
[-34.15809250 463.90005493]
[-28.49530411 450.01000977]
[-22.83251762 436.11999512]
[-17.16973114 422.22994995]
[-11.50694561 408.33993530]
[-12.53007984 404.96569824]
[-11.96969986 400.92822266]
[-9.53189468 396.97723389]
[-5.26867151 393.96527100]
[1.00868905 380.34194946]
[7.28604984 366.71862793]
[13.56341076 353.09530640]
[19.12263680 339.16351318]
[23.94863319 324.96105957]
[28.77463150 310.75860596]
[23.71089554 299.77291870]
[27.61528015 287.90112305]
[38.91281509 281.67788696]
[43.52682495 267.40518188]
[47.71383667 253.00138855]
[51.90084839 238.59761047]
[56.08785629 224.19381714]
[60.27486801 209.79003906]
[64.46188354 195.38626099]
[68.64889526 180.98246765]
[61.27257919 168.09350586]
[65.31361389 153.42637634]
[78.88276672 145.77680969]
[83.06977844 131.37303162]
[71.09938812 120.87232208]
[64.89491272 106.20742035]
[65.69419098 90.30407715]
[73.33776855 76.33515930]
[86.30068207 67.08757019]
[101.99671936 64.40628815]
[105.96881866 49.94176483]
[109.94091797 35.47724152]
[113.91300964 21.01271629]
[104.98350525 5.97000360]
[109.60512543 -10.55136013]
[124.44765472 -18.45946503]
[128.20394897 -32.98152542]
[131.96025085 -47.50358582]
[134.51608276 -62.28423691]
[135.85432434 -77.22442627]
[137.19255066 -92.16460419]
[127.33469391 -104.22530365]
[128.90467834 -119.35771179]
[140.46347046 -128.68135071]
[141.80169678 -143.62153625]
[143.13993835 -158.56172180]
[144.47816467 -173.50190735]
[133.02406311 -163.81668091]
[118.02517700 -163.63417053]
[106.33879089 -173.03779602]
[103.30776215 -187.72837830]
[110.31784058 -200.98954773]
[124.16411591 -206.75849915]
[138.51625061 -202.39773560]
[146.81307983 -189.89913940]
[149.69836426 -204.61903381]
[152.58363342 -219.33892822]
[144.03399658 -232.35972595]
[147.16975403 -247.24668884]
[159.63580322 -255.31721497]
[162.52107239 -270.03710938]
[165.40634155 -284.75698853]
[151.51799011 -290.56204224]
[139.08265686 -299.04421997]
[128.60958862 -309.85623169]
[120.52763367 -322.55532837]
[115.16774750 -336.62149048]
[112.74942017 -351.47866821]
[113.37167358 -366.51855469]
[117.00902557 -381.12521362]
[123.51253510 -394.70053101]
[132.61587524 -406.68859863]
[143.94628906 -416.59854126]
[157.03979492 -424.02450562]
[171.36021423 -428.66244507]
[186.32115173 -430.32241821]
[201.30993652 -428.93643188]
[215.71281433 -424.56130981]
[228.94000244 -417.37612915]
[240.44982910 -407.67517090]
[249.77098083 -395.85565186]
[256.52178955 -382.40158081]
[260.42578125 -367.86392212]
[261.32308960 -352.83795166]
[259.17697144 -337.93899536]
[254.07534790 -323.77713013]
[246.22709656 -310.93228149]
[235.95359802 -299.93048096]
[223.67553711 -291.22219849]
[209.89572144 -285.16403198]
[195.17839050 -282.00408936]
[180.12623596 -281.87173462]
[177.24096680 -267.15182495]
[174.35569763 -252.43194580]
[182.85249329 -240.25245667]
[180.13610840 -225.28329468]
[167.30352783 -216.45364380]
[164.41824341 -201.73376465]
[161.53297424 -187.01387024]
[159.41835022 -172.16366577]
[158.08012390 -157.22348022]
[156.74188232 -142.28329468]
[155.40365601 -127.34311676]
[165.12142944 -116.11367798]
[163.97709656 -100.94313812]
[152.13273621 -90.82637024]
[150.79450989 -75.88619232]
[149.45626831 -60.94600296]
[158.98567200 -72.53007507]
[172.77078247 -78.44365692]
[187.73199463 -77.36565399]
[200.52693176 -69.53688049]
[208.29716492 -56.70631409]
[209.30680847 -41.74032974]
[203.33030701 -27.98237228]
[191.70281982 -18.50600052]
[177.02197266 -15.42826271]
[162.56748962 -19.43673134]
[151.56854248 -29.63590431]
[146.48231506 -43.74728394]
[142.72601318 -29.22522354]
[138.96971130 -14.70316505]
[146.99807739 -4.62473202]
[147.76722717 8.43246937]
[140.77267456 19.71461105]
[128.37753296 24.98481178]
[124.40544128 39.44933701]
[120.43334198 53.91386032]
[116.46125031 68.37838745]
[127.25571442 77.02119446]
[133.94929504 89.12138367]
[135.53489685 102.85836029]
[131.77394104 116.16526794]
[123.23229218 127.03996277]
[111.19513702 133.84623718]
[97.47356415 135.56004333]
[93.28655243 149.96382141]
[100.64043427 163.69546509]
[96.18901825 178.24330139]
[83.05267334 185.16947937]
[78.86566162 199.57327271]
[74.67864990 213.97705078]
[70.49163818 228.38082886]
[66.30462646 242.78462219]
[62.11761856 257.18838501]
[57.93060684 271.59219360]
[59.11520767 275.76959229]
[58.92773819 279.71032715]
[57.61107635 283.01211548]
[55.51380920 285.39288330]
[53.04184341 286.71481323]
[56.77881241 304.74581909]
[42.97708893 315.58459473]
[38.15108871 329.78704834]
[33.32509232 343.98950195]
[46.74121094 337.28073120]
[61.35957718 340.64279175]
[70.49687195 352.53857422]
[69.97563934 367.52951050]
[60.03418732 378.76193237]
[45.21761322 381.10055542]
[32.29985046 373.47616577]
[27.18672752 359.37268066]
[20.90936661 372.99597168]
[14.63200569 386.61929321]
[8.35464478 400.24261475]
[2.38308167 414.00271606]
[-3.27970481 427.89276123]
[-8.94249153 441.78277588]
[-14.60527802 455.67279053]
[-20.26806450 469.56283569]
[-25.93085098 483.45285034]
[-31.59363747 497.34289551]
[-37.25642395 511.23291016]
[-24.74402046 519.60095215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[39 201]
[40 200]
[41 199]
[42 198]
[43 190]
[44 189]
[45 188]
[48 186]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[58 172]
[59 171]
[65 164]
[66 163]
[67 162]
[68 161]
[71 157]
[72 156]
[73 155]
[74 143]
[75 142]
[76 141]
[79 138]
[80 137]
[81 136]
[82 135]
[90 134]
[91 133]
[92 132]
[95 129]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
