%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[118.24437714 879.80633545]
[103.56884003 876.67932129]
[89.11861420 872.63702393]
[74.95072174 867.69531250]
[61.12108231 861.87377930]
[47.68426895 855.19531250]
[34.69331360 847.68634033]
[22.19948769 839.37652588]
[10.25209713 830.29852295]
[-1.10170591 820.48834229]
[-11.81711292 809.98455811]
[-21.85183525 798.82867432]
[-31.16626930 787.06469727]
[-39.72365570 774.73907471]
[-47.49022293 761.90045166]
[-54.43531799 748.59954834]
[-60.53153229 734.88873291]
[-65.75480652 720.82220459]
[-70.08452606 706.45550537]
[-73.50360870 691.84521484]
[-75.99855042 677.04913330]
[-77.55951691 662.12554932]
[-78.18033600 647.13342285]
[-77.85856628 632.13189697]
[-76.59547424 617.18017578]
[-74.39604950 602.33728027]
[-71.26895905 587.66174316]
[-67.22655487 573.21154785]
[-62.28479004 559.04370117]
[-56.46316910 545.21405029]
[-49.78466034 531.77728271]
[-42.27562714 518.78637695]
[-33.96570206 506.29260254]
[-24.88767815 494.34524536]
[-15.07738876 482.99148560]
[-4.57354641 472.27615356]
[6.58239365 462.24148560]
[18.34640312 452.92709351]
[30.67205620 444.36978149]
[43.51070786 436.60327148]
[56.81168747 429.65826416]
[70.52250671 423.56210327]
[84.58905029 418.33889771]
[98.95580292 414.00927734]
[113.56607056 410.59027100]
[128.36218262 408.09539795]
[126.80166626 393.17678833]
[125.24114227 378.25817871]
[123.68061829 363.33956909]
[122.12009430 348.42095947]
[120.55957031 333.50238037]
[106.22267151 329.33312988]
[94.54262543 319.96713257]
[87.31877899 306.80731201]
[85.67921448 291.84402466]
[89.90474701 277.35409546]
[99.38136292 265.55422974]
[112.68924713 258.26205444]
[111.12872314 243.34344482]
[109.56820679 228.42485046]
[107.89665985 213.51826477]
[106.11419678 198.62455750]
[104.33173370 183.73083496]
[89.28588867 173.30307007]
[86.59410095 154.87300110]
[98.42790985 140.07856750]
[96.20278931 125.24452972]
[93.97767639 110.41048431]
[91.53194427 95.61121368]
[88.86614990 80.84999847]
[86.20035553 66.08877563]
[83.53456116 51.32756042]
[80.75894928 36.58659744]
[77.87367249 21.86670685]
[74.98840332 7.14681530]
[71.55634308 3.21387267]
[70.11973572 -1.20081389]
[70.52793121 -5.25647974]
[72.31842041 -8.29399395]
[70.09329987 -23.12803841]
[67.86818695 -37.96208191]
[65.64306641 -52.79612350]
[63.41794968 -67.63016510]
[61.19283295 -82.46421051]
[58.96771622 -97.29825592]
[56.74259949 -112.13230133]
[52.92963028 -117.53348541]
[52.48369217 -123.19901276]
[54.67891312 -127.44048309]
[52.89644623 -142.33419800]
[51.11397934 -157.22792053]
[49.33151245 -172.12162781]
[34.48687363 -175.03572083]
[21.27027130 -182.39619446]
[10.97653389 -193.48194885]
[4.61413479 -207.20693970]
[2.80639839 -222.22650146]
[5.73042870 -237.06918335]
[13.09975815 -250.28085327]
[24.19241524 -260.56716919]
[37.92165756 -266.92034912]
[52.94242859 -268.71801758]
[67.78314972 -265.78405762]
[80.98987579 -258.40588379]
[91.26874542 -247.30632019]
[97.61274719 -233.57283020]
[99.40035248 -218.55085754]
[96.45643616 -203.71211243]
[89.06940460 -190.51033020]
[77.96297455 -180.23889160]
[64.22522736 -173.90409851]
[66.00769806 -159.01037598]
[67.79016113 -144.11666870]
[69.57263184 -129.22294617]
[71.57664490 -114.35741425]
[73.80175781 -99.52337646]
[76.02687836 -84.68933105]
[78.25199127 -69.85528564]
[80.47711182 -55.02124405]
[82.70222473 -40.18719864]
[84.92734528 -25.35315514]
[87.15246582 -10.51911068]
[89.70829773 4.26154280]
[92.59356689 18.98143387]
[95.47884369 33.70132446]
[99.85024261 39.66057205]
[98.29577637 48.66176605]
[100.96157074 63.42298126]
[103.62736511 78.18419647]
[106.29316711 92.94541931]
[109.81336212 96.83413696]
[110.90419769 102.41835022]
[108.81171417 108.18536377]
[111.03683472 123.01940918]
[113.26195526 137.85345459]
[124.01499176 142.92382812]
[130.91464233 152.45774841]
[132.34059143 164.01892090]
[128.05335999 174.72103882]
[119.22544861 181.94836426]
[121.00791168 196.84208679]
[122.79038239 211.73580933]
[126.91738129 219.88476562]
[124.48680878 226.86431885]
[126.04733276 241.78292847]
[127.60785675 256.70153809]
[142.13671875 261.08190918]
[153.85006714 270.66525269]
[160.98269653 283.96710205]
[162.47512817 298.94577026]
[158.13095093 313.31564331]
[148.64195251 324.89596558]
[135.47817993 331.94183350]
[137.03869629 346.86044312]
[138.59922791 361.77905273]
[140.15974426 376.69766235]
[141.72027588 391.61627197]
[143.28079224 406.53488159]
[158.27291870 405.91381836]
[173.27445984 406.23535156]
[188.22619629 407.49819946]
[203.06913757 409.69741821]
[217.74470520 412.82424927]
[232.19497681 416.86642456]
[246.36291504 421.80798340]
[260.19262695 427.62939453]
[273.62951660 434.30767822]
[286.62054443 441.81652832]
[299.11444092 450.12625122]
[311.06195068 459.20407104]
[322.41583252 469.01419067]
[333.13134766 479.51788330]
[343.16619873 490.67364502]
[352.48074341 502.43753052]
[361.03826904 514.76306152]
[368.80496216 527.60156250]
[375.75021362 540.90246582]
[381.84655762 554.61315918]
[387.06997681 568.67962646]
[391.39984131 583.04632568]
[394.81909180 597.65649414]
[397.31417847 612.45257568]
[398.87530518 627.37615967]
[399.49627686 642.36828613]
[399.17468262 657.36981201]
[397.91174316 672.32153320]
[395.71246338 687.16448975]
[392.58551025 701.84002686]
[388.54327393 716.29028320]
[383.60165405 730.45819092]
[377.78018188 744.28784180]
[371.10180664 757.72473145]
[363.59289551 770.71569824]
[355.28311157 783.20959473]
[346.20523071 795.15704346]
[336.39505005 806.51086426]
[325.89132690 817.22631836]
[314.73547363 827.26110840]
[302.97155762 836.57562256]
[290.64599609 845.13305664]
[277.80743408 852.89971924]
[264.50653076 859.84484863]
[250.79577637 865.94116211]
[236.72927856 871.16448975]
[222.36257935 875.49432373]
[207.75234985 878.91345215]
[192.95625305 881.40844727]
[178.03269958 882.96948242]
[163.04055786 883.59039307]
[148.03903198 883.26873779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[58 146]
[59 145]
[60 144]
[61 142]
[62 141]
[63 140]
[66 135]
[67 134]
[68 133]
[69 130]
[70 129]
[71 128]
[72 127]
[73 125]
[74 124]
[75 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
