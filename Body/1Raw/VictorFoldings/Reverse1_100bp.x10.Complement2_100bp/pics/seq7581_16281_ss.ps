%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[52.45122147 403.74319458]
[48.54972839 418.37390137]
[40.10697937 430.94366455]
[28.03878212 440.08898926]
[13.65420628 444.81793213]
[-1.48641908 444.61746216]
[-15.74075127 439.50933838]
[-27.56258774 430.04769897]
[-35.66958237 417.25881958]
[-39.18235016 402.52996826]
[-37.71985245 387.45880127]
[-31.44073105 373.68014526]
[-21.02609634 362.68859863]
[-7.60565090 355.67645264]
[7.36485672 353.40429688]
[10.03065205 338.64309692]
[12.69644737 323.88186646]
[7.34420347 309.98211670]
[17.41089630 297.77670288]
[20.07669258 283.01550293]
[8.34836864 271.52969360]
[5.75122023 255.15235901]
[13.50443363 240.30685425]
[28.72805786 232.93547058]
[31.17378426 218.13619995]
[33.61951065 203.33692932]
[24.88514709 215.53163147]
[13.68666172 225.51130676]
[0.57045513 232.78903198]
[-13.82350349 237.00968933]
[-28.79290199 237.96734619]
[-43.60734940 235.61529541]
[-57.54401398 230.06828308]
[-69.92289734 221.59696960]
[-80.14001465 210.61468506]
[-87.69683075 197.65727234]
[-92.22464752 183.35696411]
[-93.50254059 168.41148376]
[-91.46814728 153.55009460]
[-86.22074890 139.49787903]
[-78.01635742 126.94048309]
[-67.25530243 116.49062347]
[-54.46262741 108.65815735]
[-40.26251984 103.82525635]
[-25.34783173 102.22772980]
[-10.44628620 103.94351959]
[3.71503854 108.88890839]
[16.44517899 116.82260132]
[27.12300491 127.35749817]
[35.22751999 139.97958374]
[40.36328888 154.07298279]
[42.27972412 168.95004272]
[40.88465881 183.87843323]
[48.73641205 171.09757996]
[56.58816910 158.31674194]
[64.43992615 145.53590393]
[72.29167938 132.75505066]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[107.19889832 56.85313034]
[120.24544525 49.66724396]
[106.91937256 56.55315781]
[91.92799377 57.06171036]
[78.16590881 51.09470749]
[68.29036713 39.80428314]
[64.20817566 25.37044716]
[66.70754242 10.58013916]
[75.30587769 -1.71085906]
[88.34297180 -9.12934971]
[103.30158234 -10.24293900]
[117.29341888 -4.83660984]
[127.61688995 6.04576063]
[132.27868652 20.30295753]
[130.37826538 35.18333817]
[140.03906250 23.70863724]
[149.69987488 12.23393631]
[159.36068726 0.75923622]
[169.02149963 -10.71546364]
[168.69821167 -23.60958290]
[176.98094177 -32.96799850]
[189.02104187 -34.13528442]
[198.85162354 -45.46487808]
[208.68220520 -56.79446793]
[211.75885010 -74.94979095]
[228.55738831 -80.02678680]
[238.21820068 -91.50148773]
[247.87901306 -102.97618866]
[257.53982544 -114.45088959]
[267.20062256 -125.92558289]
[276.86145020 -137.40028381]
[286.52224731 -148.87498474]
[296.18307495 -160.34968567]
[305.84387207 -171.82438660]
[295.31607056 -182.52484131]
[285.83654785 -194.16413879]
[277.48861694 -206.63996887]
[270.34561157 -219.84269714]
[264.47033691 -233.65631104]
[259.91442871 -247.95938110]
[256.71792603 -262.62625122]
[254.90890503 -277.52798462]
[254.50326538 -292.53366089]
[255.50457764 -307.51135254]
[257.90405273 -322.32949829]
[261.68057251 -336.85781860]
[266.80096436 -350.96865845]
[273.22024536 -364.53802490]
[280.88198853 -377.44662476]
[289.71884155 -389.58105469]
[299.65316772 -400.83465576]
[310.59768677 -411.10852051]
[322.45614624 -420.31237793]
[335.12438965 -428.36535645]
[348.49108887 -435.19662476]
[362.43872070 -440.74621582]
[376.84475708 -444.96530151]
[391.58255005 -447.81686401]
[406.52264404 -449.27578735]
[421.53369141 -449.32925415]
[436.48379517 -447.97683716]
[451.24154663 -445.23040771]
[465.67727661 -441.11407471]
[479.66412354 -435.66406250]
[493.07913208 -428.92819214]
[505.80444336 -420.96572876]
[517.72821045 -411.84661865]
[528.74566650 -401.65100098]
[538.75994873 -390.46850586]
[547.68304443 -378.39736938]
[555.43658447 -365.54367065]
[561.95239258 -352.02041626]
[567.17327881 -337.94641113]
[571.05322266 -323.44537354]
[573.55822754 -308.64471436]
[574.66625977 -293.67453003]
[574.36755371 -278.66635132]
[572.66479492 -263.75210571]
[569.57287598 -249.06282043]
[565.11901855 -234.72764587]
[559.34234619 -220.87251282]
[552.29364014 -207.61920166]
[544.03485107 -195.08419800]
[534.63848877 -183.37765503]
[524.18719482 -172.60243225]
[512.77282715 -162.85325623]
[500.49569702 -154.21577454]
[487.46365356 -146.76591492]
[473.79125977 -140.56915283]
[459.59863281 -135.67993164]
[445.01055908 -132.14123535]
[430.15521240 -129.98414612]
[415.16314697 -129.22761536]
[400.16610718 -129.87832642]
[385.29589844 -131.93052673]
[370.68322754 -135.36619568]
[356.45645142 -140.15513611]
[342.74066162 -146.25524902]
[329.65637207 -153.61296082]
[317.31857300 -162.16357422]
[307.65777588 -150.68887329]
[297.99694824 -139.21417236]
[288.33615112 -127.73947906]
[278.67532349 -116.26477814]
[269.01452637 -104.79007721]
[259.35369873 -93.31537628]
[249.69290161 -81.84067535]
[240.03208923 -70.36597443]
[240.75367737 -58.29096603]
[232.79901123 -48.65213776]
[220.01179504 -46.96389008]
[210.18121338 -35.63429642]
[200.35063171 -24.30470276]
[197.95108032 -6.92054129]
[180.49620056 -1.05465353]
[170.83538818 10.42004681]
[161.17457581 21.89474678]
[151.51376343 33.36944580]
[141.85296631 44.84414673]
[133.25439453 57.13498306]
[133.62840271 72.02489471]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[92.59580231 133.92784119]
[89.42709351 138.64549255]
[85.07252502 140.60681152]
[77.22076416 153.38764954]
[69.36901093 166.16850281]
[61.51725769 178.94934082]
[53.66550064 191.73017883]
[48.41878128 205.78265381]
[45.97305679 220.58192444]
[43.52732849 235.38119507]
[53.91157532 244.44531250]
[58.42527008 257.35443115]
[55.99039841 270.70135498]
[47.34815216 281.01910400]
[34.83790970 285.68127441]
[32.17211533 300.44250488]
[37.33368301 315.39807129]
[27.45766449 326.54766846]
[24.79187012 341.30886841]
[22.12607384 356.07009888]
[35.35616302 363.43511963]
[45.47613907 374.69854736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[19 204]
[20 203]
[24 198]
[25 197]
[26 196]
[53 195]
[54 194]
[55 193]
[56 192]
[57 191]
[58 188]
[59 187]
[61 185]
[62 184]
[64 182]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[84 175]
[85 174]
[86 173]
[88 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
