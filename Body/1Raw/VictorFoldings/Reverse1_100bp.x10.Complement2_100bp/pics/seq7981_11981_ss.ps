%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[34.68758392 689.63592529]
[24.29869461 678.67016602]
[17.42126274 665.22113037]
[14.61281395 650.37896729]
[16.10101509 635.34692383]
[21.76522446 621.34362793]
[31.14627075 609.50415039]
[43.48367310 600.78833008]
[57.77729797 595.90277100]
[57.10751343 580.91772461]
[56.43772507 565.93267822]
[55.76794052 550.94763184]
[55.09815598 535.96258545]
[54.42837143 520.97753906]
[46.13048553 508.60845947]
[53.24385834 494.47656250]
[52.57407379 479.49154663]
[40.80009842 474.90985107]
[31.59960747 466.18334961]
[26.36371803 454.58279419]
[25.90246773 441.81695557]
[30.31969261 429.78103638]
[38.99235153 420.27526855]
[50.65816879 414.73553467]
[50.43484116 399.73721313]
[50.21151352 384.73886108]
[42.28557968 372.12820435]
[49.81655884 358.21438599]
[49.59323120 343.21603394]
[49.36990356 328.21768188]
[41.94378662 341.25045776]
[30.14280891 350.50988770]
[15.71757984 354.62240601]
[0.80799496 352.97793579]
[-12.37419796 345.82043457]
[-21.87349892 334.21166992]
[-26.28074455 319.87374878]
[-24.94214439 304.93359375]
[-18.05627060 291.60751343]
[-6.64460468 281.87231445]
[7.60000229 277.17218018]
[22.56444740 278.20434570]
[36.02884293 284.81570435]
[45.99583054 296.02551270]
[50.98658371 310.16891479]
[53.87185669 295.44900513]
[56.75712967 280.72912598]
[59.64239883 266.00924683]
[62.52767181 251.28935242]
[65.41294861 236.56945801]
[60.26824188 222.59156799]
[70.51554108 210.53738403]
[73.40081024 195.81748962]
[76.28608704 181.09759521]
[79.17135620 166.37770081]
[82.05663300 151.65782166]
[84.94190216 136.93792725]
[87.82717896 122.21803284]
[90.71244812 107.49813843]
[80.92087555 118.86146545]
[67.72006226 125.98455048]
[52.84678268 127.93023682]
[38.25788879 124.44252777]
[25.87279129 115.98029327]
[17.32096672 103.65689087]
[13.72755432 89.09366608]
[15.56532860 74.20667267]
[22.59249878 60.95454788]
[33.88451767 51.08083344]
[47.95573044 45.88458633]
[62.95482635 46.04946136]
[76.90840912 51.55377197]
[87.98065948 61.67332840]
[94.71481323 75.07672882]
[96.22470093 90.00289154]
[102.29853821 76.28762817]
[102.91205597 67.17382050]
[108.56625366 62.41442871]
[114.84361267 48.79111481]
[121.12097168 35.16779709]
[127.39833832 21.54448128]
[133.67568970 7.92116451]
[139.95306396 -5.70215130]
[146.23042297 -19.32546806]
[152.50778198 -32.94878387]
[158.78514099 -46.57210159]
[165.06250000 -60.19541550]
[163.81056213 -75.96701050]
[176.16398621 -84.28820038]
[174.91204834 -100.05979919]
[187.26547241 -108.38098145]
[193.54284668 -122.00430298]
[199.51440430 -135.76440430]
[205.17718506 -149.65443420]
[210.83998108 -163.54446411]
[207.91186523 -181.72431946]
[222.18379211 -191.93601990]
[227.63916016 -205.90882874]
[214.63583374 -213.44633484]
[202.93556213 -222.88053894]
[192.81263733 -233.99029541]
[184.50431824 -246.51516724]
[178.20539856 -260.16156006]
[174.06350708 -274.60955811]
[172.17576599 -289.52053833]
[172.58639526 -304.54492188]
[175.28578186 -319.33050537]
[180.21066284 -333.53070068]
[187.24555969 -346.81268311]
[196.22558594 -358.86505127]
[206.94024658 -369.40527344]
[219.13835144 -378.18630981]
[232.53396606 -385.00231934]
[246.81309509 -389.69348145]
[261.64099121 -392.14987183]
[276.67007446 -392.31390381]
[291.54806519 -390.18170166]
[305.92614746 -385.80328369]
[319.46734619 -379.28128052]
[331.85418701 -370.76852417]
[342.79632568 -360.46466064]
[352.03726196 -348.61114502]
[359.36035156 -335.48587036]
[364.59396362 -321.39651489]
[367.61538696 -306.67337036]
[368.35382080 -291.66152954]
[366.79196167 -276.71292114]
[362.96636963 -262.17794800]
[356.96679688 -248.39733887]
[348.93380737 -235.69412231]
[339.05575562 -224.36608887]
[327.56414795 -214.67877197]
[314.72842407 -206.85928345]
[300.84945679 -201.09088135]
[286.25256348 -197.50881958]
[271.27993774 -196.19705200]
[256.28253174 -197.18632507]
[241.61195374 -200.45346069]
[236.15660095 -186.48066711]
[240.72474670 -175.27984619]
[236.29414368 -163.59422302]
[224.72999573 -157.88166809]
[219.06721497 -143.99163818]
[213.40443420 -130.10162354]
[214.42756653 -126.72737122]
[213.86718750 -122.68991852]
[211.42938232 -118.73891449]
[207.16615295 -115.72693634]
[200.88879395 -102.10362244]
[202.58972168 -87.30645752]
[189.78730774 -78.01084137]
[191.48823547 -63.21367264]
[178.68582153 -53.91805649]
[172.40846252 -40.29473877]
[166.13108826 -26.67142296]
[159.85372925 -13.04810715]
[153.57637024 0.57520926]
[147.29901123 14.19852543]
[141.02165222 27.82184219]
[134.74429321 41.44515610]
[128.46693420 55.06847382]
[122.18956757 68.69178772]
[116.01380157 82.36145782]
[109.93996429 96.07672882]
[105.43234253 110.38341522]
[102.54706573 125.10330200]
[99.66179657 139.82319641]
[96.77651978 154.54309082]
[93.89125061 169.26298523]
[91.00597382 183.98286438]
[88.12070465 198.70275879]
[85.23542786 213.42265320]
[90.17375946 228.45339966]
[80.13283539 239.45472717]
[77.24756622 254.17462158]
[74.36228943 268.89450073]
[71.47702026 283.61441040]
[68.59174347 298.33428955]
[65.70647430 313.05416870]
[64.36824036 327.99435425]
[64.59156799 342.99270630]
[64.81489563 357.99102783]
[72.75680542 371.67449951]
[65.20984650 384.51553345]
[65.43317413 399.51388550]
[65.65650177 414.51220703]
[81.20118713 422.70953369]
[90.40607452 437.57495117]
[90.81201935 454.96572876]
[82.39736938 470.08880615]
[67.55911255 478.82174683]
[68.22889709 493.80679321]
[76.57469177 507.24771118]
[69.41340637 520.30780029]
[70.08319855 535.29278564]
[70.75298309 550.27783203]
[71.42276764 565.26287842]
[72.09255219 580.24792480]
[72.76233673 595.23297119]
[87.43482971 598.82385254]
[100.50062561 606.40423584]
[110.90052795 617.35949707]
[117.79146576 630.80169678]
[120.61482239 645.64099121]
[119.14172363 660.67449951]
[113.49158478 674.68353271]
[104.12243652 686.53240967]
[91.79379272 695.26062012]
[77.50508881 700.16052246]
[62.41463470 700.83502197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[16 192]
[17 191]
[24 186]
[25 185]
[26 184]
[28 182]
[29 181]
[30 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 165]
[75 164]
[76 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[89 151]
[91 149]
[92 148]
[93 144]
[94 143]
[95 142]
[97 139]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
