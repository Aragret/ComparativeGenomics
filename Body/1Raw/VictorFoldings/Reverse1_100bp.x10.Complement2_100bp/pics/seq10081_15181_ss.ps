%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[96.10097504 496.61682129]
[82.53783417 503.42898560]
[67.42936707 504.87768555]
[52.81887436 500.76699829]
[40.68230057 491.65283203]
[32.66101837 478.76782227]
[29.83984184 463.85455322]
[32.60031128 448.92993164]
[40.56909561 436.01239014]
[52.66847992 426.84890747]
[67.26212311 422.67880249]
[68.60035706 407.73861694]
[69.93859100 392.79843140]
[71.27683258 377.85824585]
[72.61506653 362.91806030]
[66.04409027 349.55123901]
[74.98172760 336.49639893]
[76.20870209 321.54666138]
[77.32434845 306.58819580]
[78.43999481 291.62976074]
[79.55564880 276.67129517]
[80.67129517 261.71282959]
[81.78694153 246.75439453]
[82.90259552 231.79592896]
[73.01869965 220.71241760]
[73.93703461 205.52653503]
[85.62945557 195.23454285]
[78.86019897 181.96704102]
[87.60247803 168.78057861]
[88.71812439 153.82211304]
[89.83377838 138.86366272]
[90.94942474 123.90521240]
[91.95368195 108.93886566]
[92.62346649 93.95382690]
[93.07007599 78.96047974]
[93.51667786 63.96712875]
[93.96328735 48.97378159]
[94.40988922 33.98043060]
[94.85649872 18.98707962]
[94.63317108 3.98874235]
[93.18375397 -10.94106579]
[91.17974091 -25.80659485]
[89.17572784 -40.67212296]
[87.17170715 -55.53765106]
[73.97371674 -60.17184448]
[64.10705566 -69.99350739]
[59.45700073 -83.04553223]
[60.87731934 -96.76164246]
[68.03413391 -108.47099304]
[79.48211670 -115.91818237]
[77.69965363 -130.81190491]
[75.91719055 -145.70561218]
[64.54122925 -160.18557739]
[72.07170105 -176.03671265]
[70.06768799 -190.90225220]
[68.06367493 -205.76777649]
[55.77939606 -215.34556580]
[53.95880508 -230.44987488]
[63.16547394 -242.10203552]
[61.16146088 -256.96755981]
[59.15744781 -271.83309937]
[57.15343475 -286.69863892]
[55.14942169 -301.56414795]
[53.14540482 -316.42968750]
[37.64094543 -318.06140137]
[22.98311234 -323.34597778]
[10.01888561 -331.97360229]
[-0.50367260 -343.44140625]
[-7.97858858 -357.08285522]
[-11.97686958 -372.10635376]
[-12.27112484 -387.64129639]
[-8.84849072 -402.78842163]
[-1.91113675 -416.67190552]
[8.13567448 -428.49008179]
[20.70725441 -437.56161499]
[35.07352066 -443.36477661]
[32.84840393 -458.19882202]
[30.62328720 -473.03286743]
[28.39817047 -487.86691284]
[26.17305374 -502.70095825]
[23.94793701 -517.53497314]
[21.72282028 -532.36901855]
[6.68985558 -532.61370850]
[-8.09778023 -535.32952881]
[-22.23666954 -540.44238281]
[-35.34109497 -547.81286621]
[-47.05355835 -557.23986816]
[-57.05453110 -568.46618652]
[-65.07118225 -581.18560791]
[-70.88481140 -595.05108643]
[-74.33682251 -609.68438721]
[-75.33303833 -624.68627930]
[-73.84627533 -639.64758301]
[-69.91710663 -654.16003418]
[-63.65270996 -667.82775879]
[-55.22399139 -680.27795410]
[-44.86088943 -691.17083740]
[-32.84611893 -700.20941162]
[-19.50744820 -707.14697266]
[-5.20876789 -711.79425049]
[9.65984344 -714.02459717]
[24.69276047 -713.77703857]
[39.47987366 -711.05834961]
[53.61777496 -705.94274902]
[66.72077942 -698.56970215]
[78.43142700 -689.14050293]
[88.43023682 -677.91223145]
[96.44444275 -665.19128418]
[102.25540161 -651.32470703]
[105.70458984 -636.69073486]
[106.69791412 -621.68859863]
[105.20826721 -606.72766113]
[101.27630615 -592.21594238]
[95.00927734 -578.54937744]
[86.57815552 -566.10089111]
[76.21295929 -555.20989990]
[64.19644165 -546.17370605]
[50.85643768 -539.23870850]
[36.55686188 -534.59417725]
[38.78197861 -519.76013184]
[41.00709915 -504.92605591]
[43.23221588 -490.09201050]
[45.45733261 -475.25796509]
[47.68244934 -460.42391968]
[49.90756607 -445.58987427]
[64.31725311 -444.46347046]
[78.11999512 -440.14959717]
[90.61955261 -432.86236572]
[101.18463135 -422.96594238]
[109.28079224 -410.95635986]
[114.49743652 -397.43667603]
[116.56867981 -383.08663940]
[115.38688660 -368.62860107]
[111.00822449 -354.79110718]
[103.65006256 -342.27209473]
[93.68013763 -331.70391846]
[81.59819794 -323.62112427]
[68.01093292 -318.43368530]
[70.01494598 -303.56817627]
[72.01895905 -288.70263672]
[74.02297211 -273.83709717]
[76.02699280 -258.97158813]
[78.03100586 -244.10604858]
[89.99457550 -235.30784607]
[92.23869324 -220.26063538]
[82.92920685 -207.77178955]
[84.93321991 -192.90626526]
[86.93723297 -178.04072571]
[96.36352539 -170.45973206]
[98.15476227 -158.09141541]
[90.81090546 -147.48808289]
[92.59336853 -132.59436035]
[94.37583923 -117.70064545]
[109.38187408 -111.70637512]
[119.37490082 -98.88860321]
[121.55275726 -82.68755341]
[115.22718048 -67.51248932]
[102.03723907 -57.54166412]
[104.04125214 -42.67613602]
[106.04526520 -27.81060791]
[108.04927826 -12.94507980]
[119.08095551 -23.10884476]
[133.92797852 -20.97200775]
[141.64566040 -8.10976505]
[136.54483032 5.99631596]
[122.38562012 10.94775772]
[109.60657501 3.09592652]
[120.34716797 -7.37496805]
[135.34707642 -7.32215261]
[146.01367188 3.22411799]
[146.23663330 18.22245979]
[135.88825989 29.08114433]
[120.89654541 29.57982063]
[109.84984589 19.43368530]
[109.40324402 34.42703629]
[108.95663452 49.42038727]
[108.51003265 64.41373444]
[108.06342316 79.40708923]
[107.61682129 94.40043640]
[110.25608063 98.93345642]
[110.16770172 104.62252045]
[106.92708588 109.83168793]
[109.54016113 118.58438110]
[105.90787506 125.02085876]
[104.79222870 139.97930908]
[103.67658234 154.93777466]
[102.56092834 169.89622498]
[109.25038910 184.23364258]
[100.58791351 196.35018921]
[110.62424469 208.26277161]
[109.27973175 223.41688538]
[97.86104584 232.91157532]
[96.74539948 247.87004089]
[95.62974548 262.82849121]
[94.51409912 277.78695679]
[93.39845276 292.74539185]
[92.28280640 307.70385742]
[91.16715240 322.66229248]
[93.64962006 331.45294189]
[89.92191315 337.83462524]
[96.39716339 352.27005005]
[87.55524445 364.25628662]
[86.21701050 379.19647217]
[84.87877655 394.13665771]
[83.54054260 409.07684326]
[82.20230865 424.01702881]
[95.82253265 430.71435547]
[106.10077667 441.88223267]
[111.64700317 456.01037598]
[111.71113586 471.18798828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[17 200]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[27 189]
[29 187]
[30 186]
[31 185]
[32 184]
[33 182]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 167]
[41 161]
[42 160]
[43 159]
[44 158]
[50 153]
[51 152]
[52 151]
[54 148]
[55 147]
[56 146]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
