%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-25.59420586 378.58413696]
[-17.68697166 391.37185669]
[-11.99251175 405.28668213]
[-8.66617393 419.94906616]
[-7.79870319 434.95898438]
[-9.41376495 449.90692139]
[-13.46729946 464.38516235]
[-19.84872246 477.99865723]
[-28.38394547 490.37603760]
[-38.84011841 501.17965698]
[-50.93199539 510.11477661]
[-64.32969666 516.93768311]
[-78.66771698 521.46215820]
[-93.55491638 523.56481934]
[-108.58515930 523.18829346]
[-123.34839630 520.34283447]
[-137.44189453 515.10614014]
[-150.48115540 507.62097168]
[-162.11047363 498.09161377]
[-172.01258850 486.77798462]
[-179.91735840 473.98873901]
[-185.60914612 460.07281494]
[-188.93264771 445.40979004]
[-189.79724121 430.39971924]
[-188.17929077 415.45205688]
[-184.12297058 400.97463989]
[-177.73892212 387.36236572]
[-169.20130920 374.98660278]
[-158.74305725 364.18499756]
[-146.64945984 355.25219727]
[-133.25045776 348.43191528]
[-118.91155243 343.91021729]
[-104.02394867 341.81042480]
[-88.99378204 342.18984985]
[-74.23108673 345.03811646]
[-60.13860321 350.27755737]
[-52.67086411 337.26861572]
[-45.20312119 324.25964355]
[-37.73537827 311.25070190]
[-37.13160324 303.88473511]
[-30.05837631 298.10482788]
[-33.97200394 283.77935791]
[-26.38678169 270.59152222]
[-11.33437443 266.58367920]
[-3.67377687 253.68736267]
[-3.82605982 238.79353333]
[9.87396145 230.88026428]
[17.53455925 217.98393250]
[25.19515610 205.08760071]
[32.85575485 192.19128418]
[32.56601715 187.42419434]
[35.26786041 182.42448425]
[40.94131088 179.02986145]
[48.98248291 166.36734009]
[43.34080124 152.60835266]
[46.92516327 137.99273682]
[58.56451797 128.17547607]
[73.93037415 127.08161163]
[81.97154999 114.41908264]
[90.01272583 101.75656128]
[91.33192444 93.80468750]
[98.26906586 88.96661377]
[106.49787140 76.42520905]
[114.63308716 63.82289886]
[122.67426300 51.16037369]
[130.71543884 38.49784851]
[138.75660706 25.83532524]
[128.57640076 14.70883846]
[121.62865448 1.33669686]
[118.38162231 -13.36679649]
[119.05079651 -28.39805984]
[123.58454895 -42.73273087]
[131.66810608 -55.39546967]
[142.74539185 -65.52633667]
[156.05722046 -72.43917847]
[170.69343567 -75.66809845]
[185.65501404 -74.99885559]
[199.92236328 -70.48307037]
[207.96353149 -83.14559174]
[216.00469971 -95.80812073]
[224.04588318 -108.47064209]
[220.81726074 -123.70920563]
[229.15254211 -136.43626404]
[243.70007324 -139.42033386]
[251.74125671 -152.08285522]
[259.78244019 -164.74539185]
[267.82360840 -177.40791321]
[275.86477661 -190.07043457]
[283.90594482 -202.73295593]
[291.47033691 -215.68595886]
[290.44943237 -234.07180786]
[305.70629883 -242.74331665]
[312.58572388 -256.07275391]
[319.46511841 -269.40216064]
[326.34454346 -282.73159790]
[333.22393799 -296.06103516]
[340.10336304 -309.39047241]
[327.72399902 -317.89663696]
[316.50842285 -327.88729858]
[306.63345337 -339.20492554]
[298.25488281 -351.67098999]
[291.50482178 -365.08889771]
[286.48977661 -379.24700928]
[283.28878784 -393.92205811]
[281.95236206 -408.88256836]
[282.50155640 -423.89260864]
[284.92773438 -438.71545410]
[289.19265747 -453.11734009]
[295.22900391 -466.87109375]
[302.94158936 -479.75979614]
[312.20880127 -491.58023071]
[322.88446045 -502.14590454]
[334.80020142 -511.29022217]
[347.76809692 -518.86895752]
[361.58361816 -524.76251221]
[376.02886963 -528.87811279]
[390.87603760 -531.15063477]
[405.89099121 -531.54443359]
[420.83685303 -530.05316162]
[435.47796631 -526.70037842]
[449.58340454 -521.53894043]
[462.93069458 -514.65032959]
[475.30932617 -506.14312744]
[486.52407837 -496.15148926]
[496.39807129 -484.83306885]
[504.77560425 -472.36627197]
[511.52453613 -458.94781494]
[516.53839111 -444.78927612]
[519.73815918 -430.11395264]
[521.07330322 -415.15332031]
[520.52282715 -400.14334106]
[518.09539795 -385.32067871]
[513.82928467 -370.91915894]
[507.79180908 -357.16592407]
[500.07812500 -344.27786255]
[490.80990601 -332.45822144]
[480.13336182 -321.89343262]
[468.21685791 -312.75012207]
[455.24832153 -305.17251587]
[441.43231201 -299.28005981]
[426.98669434 -295.16574097]
[412.13934326 -292.89440918]
[397.12435913 -292.50192261]
[382.17861938 -293.99444580]
[367.53778076 -297.34844971]
[353.43280029 -302.51104736]
[346.55337524 -289.18161011]
[339.67398071 -275.85220337]
[332.79455566 -262.52276611]
[325.91513062 -249.19332886]
[319.03573608 -235.86390686]
[322.41381836 -224.24861145]
[316.79156494 -213.08734131]
[304.69586182 -208.60885620]
[319.58953857 -210.39161682]
[330.37609863 -199.96809387]
[329.10412598 -185.02212524]
[316.71121216 -176.57131958]
[302.33300781 -180.84529114]
[296.56848145 -194.69178772]
[288.52728271 -182.02926636]
[280.48611450 -169.36674500]
[272.44494629 -156.70420837]
[264.40377808 -144.04168701]
[256.36260986 -131.37916565]
[259.84796143 -116.94351959]
[251.87345886 -103.98737335]
[236.70840454 -100.42947388]
[228.66723633 -87.76694489]
[220.62605286 -75.10442352]
[212.58488464 -62.44189835]
[222.73908997 -51.44909668]
[229.70707703 -38.19224930]
[233.00854492 -23.57223701]
[232.41259766 -8.58433437]
[227.95385742 5.74954557]
[219.93051147 18.45052719]
[208.88441467 28.64962006]
[195.56446838 35.64717102]
[180.87585449 38.96086884]
[165.81852722 38.35896683]
[151.41912842 33.87649918]
[143.37796021 46.53902435]
[135.33679199 59.20154572]
[127.29560852 71.86407471]
[126.36353302 79.19571686]
[119.03926849 84.65402222]
[110.81046295 97.19541931]
[102.67524719 109.79772949]
[94.63407135 122.46025848]
[86.59290314 135.12278748]
[92.13705444 149.49526978]
[88.20115662 164.20452881]
[76.49706268 173.66381836]
[61.64500809 174.40850830]
[53.60383606 187.07102966]
[45.75207901 199.85186768]
[38.09148407 212.74819946]
[30.43088531 225.64453125]
[22.77028847 238.54086304]
[22.37463379 254.35711670]
[9.22255039 261.34796143]
[1.56195271 274.24429321]
[5.24284124 289.37997437]
[-2.70980668 302.34954834]
[-17.16204834 305.76544189]
[-24.72642708 318.71844482]
[-32.19416809 331.72738647]
[-39.66191101 344.73632812]
[-47.12965012 357.74530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 210]
[37 209]
[38 208]
[39 207]
[41 206]
[44 203]
[45 202]
[47 200]
[48 199]
[49 198]
[50 197]
[53 196]
[54 195]
[58 191]
[59 190]
[60 189]
[62 188]
[63 187]
[64 185]
[65 184]
[66 183]
[67 182]
[78 171]
[79 170]
[80 169]
[81 168]
[84 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[90 154]
[92 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
