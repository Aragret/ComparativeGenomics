%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-47.33638000 542.72979736]
[-40.05828476 555.93182373]
[-36.15179825 570.49212646]
[-35.84403992 585.56427002]
[-39.15290833 600.27191162]
[-45.88602448 613.76000977]
[-55.65193558 625.24432373]
[-67.88286591 634.05731201]
[-81.86772156 639.68640137]
[-96.79344177 641.80450439]
[-111.79226685 640.28839111]
[-125.99218750 635.22619629]
[-138.56762695 626.91223145]
[-148.78749084 615.82989502]
[-156.05758667 602.62353516]
[-159.95523071 588.06085205]
[-160.25386047 572.98852539]
[-156.93606567 558.28289795]
[-150.19477844 544.79888916]
[-140.42190552 533.32043457]
[-128.18563843 524.51495361]
[-114.19737244 518.89428711]
[-99.27037048 516.78521729]
[-84.27246857 518.31048584]
[-79.23554993 504.18142700]
[-74.19863129 490.05239868]
[-69.16172028 475.92337036]
[-72.17601013 461.33697510]
[-60.25394821 450.93624878]
[-55.21703339 436.80722046]
[-50.18011856 422.67819214]
[-45.14319992 408.54916382]
[-40.10628510 394.42013550]
[-46.70235443 381.11495972]
[-41.79547882 366.71435547]
[-27.79507446 359.88601685]
[-22.75815964 345.75698853]
[-17.72124290 331.62796021]
[-30.81430054 338.94723511]
[-45.72217178 337.28732300]
[-56.88459396 327.26730347]
[-60.13825607 312.62445068]
[-54.26962662 298.82012939]
[-41.46755219 291.00305176]
[-26.50689697 292.08874512]
[-14.96761131 301.67233276]
[-11.15362835 316.18048096]
[-4.47343349 302.75012207]
[2.20676088 289.31973267]
[8.88695526 275.88937378]
[15.56715012 262.45898438]
[15.73142815 255.07015991]
[22.44808769 248.87950134]
[29.32750130 235.55006409]
[36.20691299 222.22064209]
[43.08632660 208.89120483]
[49.56582260 195.36286926]
[55.63965607 181.64759827]
[50.05144882 167.88868713]
[56.01580048 153.89292908]
[70.48529816 148.12480164]
[68.56423950 133.35459900]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[83.76766205 99.05642700]
[88.56274414 88.44283295]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[111.78049469 56.51207352]
[114.99376678 41.86028671]
[114.99376678 26.86028671]
[114.99376678 11.86028671]
[114.77043915 -3.13805103]
[114.32383728 -18.13140106]
[113.87722778 -33.12475204]
[113.43062592 -48.11809921]
[100.48057556 -59.87886429]
[100.05143738 -77.02910614]
[111.92050171 -88.94396973]
[111.25071716 -103.92900848]
[110.58093262 -118.91404724]
[101.60649872 -128.17808533]
[101.35712433 -140.67294312]
[109.42120361 -149.68943787]
[108.97460175 -164.68278503]
[108.52799225 -179.67613220]
[107.74667358 -194.65577698]
[106.63101959 -209.61422729]
[105.51537323 -224.57267761]
[96.77309418 -237.75915527]
[103.54235077 -251.02665710]
[102.42670441 -265.98510742]
[93.68442535 -279.17156982]
[100.45368195 -292.43908691]
[99.33803558 -307.39752197]
[84.80809021 -311.78445435]
[72.84648132 -321.12707520]
[65.07089996 -334.16183472]
[62.53294373 -349.12588501]
[65.57584381 -363.99548340]
[73.78807831 -376.75964355]
[86.05899811 -385.69210815]
[100.72908020 -389.58483887]
[115.81430054 -387.91134644]
[129.27450562 -380.89801025]
[139.28933716 -369.49328613]
[144.50434875 -355.23956299]
[144.21424866 -340.06457520]
[138.45829773 -326.02059937]
[128.01490784 -315.00695801]
[114.29648590 -308.51318359]
[115.41213989 -293.55471802]
[124.07461548 -281.43817139]
[117.38515472 -267.10073853]
[118.50080872 -252.14230347]
[127.16328430 -240.02575684]
[120.47382355 -225.68832397]
[121.58947754 -210.72987366]
[122.70512390 -195.77142334]
[125.12390137 -193.20591736]
[126.42022705 -189.34138489]
[125.99708557 -184.71815491]
[123.52133942 -180.12274170]
[123.96794891 -165.12939453]
[124.41455841 -150.13604736]
[134.42875671 -135.72485352]
[125.56597137 -119.58383179]
[126.23575592 -104.59879303]
[126.90554047 -89.61375427]
[137.53758240 -82.33439636]
[142.10386658 -70.07751465]
[138.72732544 -57.23970032]
[128.42396545 -48.56470871]
[128.87057495 -33.57135773]
[129.31718445 -18.57800674]
[129.76379395 -3.58465695]
[132.56390381 0.28424364]
[132.96333313 5.95323706]
[129.99377441 11.86028671]
[129.99377441 26.86028671]
[129.99377441 41.86028671]
[136.63780212 28.41198730]
[145.82006836 16.55086708]
[157.17480469 6.74934626]
[170.24978638 -0.60218269]
[184.52421570 -5.21091127]
[199.42958069 -6.89327574]
[214.37217712 -5.58226776]
[228.75686646 -1.33010507]
[242.01069641 5.69385099]
[253.60577393 15.20983887]
[263.08029175 26.83884048]
[270.05685425 40.11767578]
[274.25759888 54.51745605]
[275.51522827 69.46464539]
[273.77963257 84.36389160]
[269.11996460 98.62178040]
[261.72177124 111.67041779]
[251.87974548 122.99007416]
[239.98590088 132.12989807]
[226.51396179 138.72586060]
[212.00050354 142.51524353]
[197.02357483 143.34710693]
[182.17973328 141.18833923]
[168.06019592 136.12489319]
[155.22732544 128.35847473]
[144.19224548 118.19838715]
[135.39450073 106.04933167]
[129.18447876 92.39518738]
[125.80954742 77.77978516]
[125.40380859 62.78943253]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[114.81768036 106.69442749]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[96.42872620 145.69444275]
[84.20056152 154.19863892]
[89.65396118 168.78965759]
[83.29885101 182.61236572]
[69.35491943 187.72143555]
[63.28108978 201.43669128]
[63.89696503 205.73490906]
[63.18469238 209.61528015]
[61.43871307 212.71156311]
[59.04217148 214.79078674]
[56.41575623 215.77061462]
[49.53634262 229.10005188]
[42.65692902 242.42947388]
[35.77751923 255.75891113]
[28.99752617 269.13919067]
[22.31733131 282.56954956]
[15.63713741 295.99993896]
[8.95694256 309.43029785]
[2.27674770 322.86068726]
[-3.59221315 336.66485596]
[-8.62912941 350.79388428]
[-13.66604519 364.92291260]
[-7.14252234 379.06793213]
[-12.45194530 393.32504272]
[-25.97725487 399.45703125]
[-31.01417160 413.58605957]
[-36.05108643 427.71508789]
[-41.08800507 441.84411621]
[-46.12491989 455.97314453]
[-43.47090530 471.57015991]
[-55.03268814 480.96029663]
[-60.06960297 495.08932495]
[-65.10652161 509.21835327]
[-70.14344025 523.34741211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[36 198]
[37 197]
[38 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 182]
[58 181]
[61 178]
[63 176]
[64 175]
[67 173]
[68 172]
[69 171]
[70 141]
[71 140]
[72 139]
[73 136]
[74 135]
[75 134]
[76 133]
[79 129]
[80 128]
[81 127]
[84 125]
[85 124]
[86 123]
[87 119]
[88 118]
[89 117]
[91 115]
[92 114]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
