%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[253.24758911 256.67666626]
[242.44543457 246.26927185]
[231.64326477 235.86190796]
[220.84111023 225.45452881]
[210.03895569 215.04716492]
[199.23680115 204.63978577]
[188.35746765 194.31311035]
[177.40156555 184.06771851]
[166.44564819 173.82234192]
[155.48974609 163.57695007]
[143.39353943 163.66857910]
[134.18214417 155.22264099]
[133.16224670 142.36485291]
[122.36008453 131.95748901]
[111.55792999 121.55010986]
[100.75577545 111.14273834]
[89.87643433 100.81607056]
[78.92052460 90.57067871]
[76.80619812 105.42091370]
[63.95566559 113.15809631]
[49.84187317 108.07864380]
[44.86897278 93.92695618]
[52.70281219 81.13512421]
[67.56699371 79.13230896]
[57.40344620 68.10042572]
[47.23990250 57.06855392]
[37.07635498 46.03667450]
[23.04878235 53.87957764]
[7.56471395 58.15238190]
[-8.48304749 58.61288452]
[-24.17018700 55.23857498]
[-38.59412003 48.22770309]
[-50.92591476 37.98764420]
[-60.45794296 25.11121178]
[-66.64447784 10.34235764]
[-69.13292694 -5.46682262]
[-67.78395081 -21.40524483]
[-62.67923355 -36.55534363]
[-54.11656570 -50.04590225]
[-64.60406494 -60.77028275]
[-79.78453827 -65.22717285]
[-83.15117645 -79.73630524]
[-93.63867188 -90.46068573]
[-104.12617493 -101.18506622]
[-114.61367798 -111.90944672]
[-125.10118103 -122.63382721]
[-136.75556946 -113.17339325]
[-149.23315430 -104.82865143]
[-162.42745972 -97.67081451]
[-176.22593689 -91.76094055]
[-190.51086426 -87.14945221]
[-205.16033936 -83.87569427]
[-220.04939270 -81.96760559]
[-235.05097961 -81.44145203]
[-250.03712463 -82.30173492]
[-264.87997437 -84.54110718]
[-279.45285034 -88.14046478]
[-293.63146973 -93.06909943]
[-307.29486084 -99.28496552]
[-320.32638550 -106.73502350]
[-332.61492920 -115.35570526]
[-344.05563354 -125.07347870]
[-354.55087280 -135.80541992]
[-364.01113892 -147.45996094]
[-372.35565186 -159.93768311]
[-379.51327515 -173.13211060]
[-385.42291260 -186.93069458]
[-390.03417969 -201.21568298]
[-393.30767822 -215.86521912]
[-395.21551514 -230.75430298]
[-395.74142456 -245.75590515]
[-394.88088989 -260.74203491]
[-392.64126587 -275.58483887]
[-389.04168701 -290.15768433]
[-384.11279297 -304.33621216]
[-377.89672852 -317.99948120]
[-370.44644165 -331.03088379]
[-361.82556152 -343.31930542]
[-352.10757446 -354.75982666]
[-341.37548828 -365.25491333]
[-329.72076416 -374.71496582]
[-317.24291992 -383.05926514]
[-304.04837036 -390.21667480]
[-290.24969482 -396.12609863]
[-275.96459961 -400.73709106]
[-261.31503296 -404.01037598]
[-246.42591858 -405.91796875]
[-231.42430115 -406.44360352]
[-216.43818665 -405.58282471]
[-201.59542847 -403.34295654]
[-187.02264404 -399.74313354]
[-172.84419250 -394.81402588]
[-159.18103027 -388.59768677]
[-146.14973450 -381.14721680]
[-133.86146545 -372.52612305]
[-122.42108917 -362.80795288]
[-111.92620850 -352.07568359]
[-102.46635437 -340.42080688]
[-94.12223816 -327.94281006]
[-86.96505737 -314.74813843]
[-81.05587006 -300.94937134]
[-76.44509888 -286.66421509]
[-73.17207336 -272.01458740]
[-71.26472473 -257.12542725]
[-70.73932648 -242.12380981]
[-71.60035706 -227.13771057]
[-73.84046936 -212.29498291]
[-77.44055939 -197.72227478]
[-82.36990356 -183.54389954]
[-88.58644867 -169.88084412]
[-96.03715515 -156.84965515]
[-104.65845490 -144.56153870]
[-114.37680054 -133.12132263]
[-103.88929749 -122.39694977]
[-93.40179443 -111.67256927]
[-82.91429138 -100.94818878]
[-72.42679596 -90.22380829]
[-57.99645996 -86.53399658]
[-53.87968826 -71.25778198]
[-43.39218521 -60.53340149]
[-31.52950478 -67.94158936]
[-18.37504768 -72.71038818]
[-4.50835896 -74.62689209]
[9.45905304 -73.60393524]
[22.91067886 -69.68400574]
[35.25222397 -63.03754044]
[45.93786240 -53.95549393]
[54.49437714 -42.83660126]
[60.54212189 -30.16987801]
[63.81184769 -16.51310539]
[64.15671539 -2.46828008]
[61.55886841 11.34493256]
[56.13034058 24.31653404]
[48.10823059 35.87312698]
[58.27177811 46.90500641]
[68.43532562 57.93688202]
[78.59886932 68.96875763]
[89.16591644 79.61476898]
[100.12182617 89.86016083]
[107.69226837 92.62799835]
[111.16314697 100.34058380]
[121.96530151 110.74795532]
[132.76745605 121.15532684]
[143.56961060 131.56269836]
[161.54003906 135.58084106]
[165.73513794 152.62103271]
[176.69104004 162.86642456]
[187.64694214 173.11181641]
[198.60285950 183.35720825]
[207.00830078 186.93299866]
[209.64418030 193.83763123]
[220.44633484 204.24501038]
[231.24848938 214.65237427]
[242.05064392 225.05975342]
[252.85279846 235.46711731]
[263.65496826 245.87449646]
[275.19882202 236.27229309]
[287.72897339 227.99832153]
[301.09329224 221.15301514]
[315.12954712 215.81945801]
[329.66735840 212.06242371]
[344.53024292 209.92747498]
[359.53778076 209.44056702]
[374.50778198 210.60760498]
[389.25854492 213.41439819]
[403.61099243 217.82688904]
[417.39093018 223.79151917]
[430.43106079 231.23588562]
[442.57305908 240.06961060]
[453.66958618 250.18545532]
[463.58590698 261.46063232]
[472.20166016 273.75830078]
[479.41223145 286.92910767]
[485.13012695 300.81323242]
[489.28594971 315.24209595]
[491.82919312 330.04058838]
[492.72900391 345.02902222]
[491.97451782 360.02551270]
[489.57479858 374.84793091]
[485.55905151 389.31640625]
[479.97601318 403.25531006]
[472.89340210 416.49539185]
[464.39724731 428.87597656]
[454.59069824 440.24673462]
[443.59274292 450.46966553]
[431.53692627 459.42068481]
[418.56958008 466.99108887]
[404.84811401 473.08898926]
[390.53909302 477.64038086]
[375.81622314 480.59002686]
[360.85821533 481.90209961]
[345.84667969 481.56066895]
[330.96380615 479.56988525]
[316.39025879 475.95391846]
[302.30297852 470.75668335]
[288.87292480 464.04122925]
[276.26318359 455.88909912]
[264.62677002 446.39923096]
[254.10498047 435.68685913]
[244.82553101 423.88198853]
[236.90104675 411.12792969]
[230.42773438 397.57952881]
[225.48419189 383.40121460]
[222.13040161 368.76510620]
[220.40708923 353.84890747]
[220.33515930 338.83364868]
[221.91551208 323.90161133]
[225.12895203 309.23406982]
[229.93646240 295.00903320]
[236.27969360 281.39923096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 149]
[8 148]
[9 147]
[10 146]
[13 144]
[14 143]
[15 142]
[16 141]
[17 139]
[18 138]
[24 137]
[25 136]
[26 135]
[27 134]
[39 120]
[40 119]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
