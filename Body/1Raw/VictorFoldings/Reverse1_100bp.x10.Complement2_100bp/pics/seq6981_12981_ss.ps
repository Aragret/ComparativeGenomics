%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[168.22052002 534.09838867]
[179.04707336 523.64941406]
[191.65560913 515.43835449]
[185.99282837 501.54830933]
[180.33003235 487.65829468]
[174.66725159 473.76828003]
[169.00447083 459.87823486]
[163.34167480 445.98822021]
[157.67889404 432.09817505]
[152.01609802 418.20816040]
[148.92544556 416.51104736]
[146.50323486 413.23263550]
[145.48376465 408.70339966]
[146.42591858 403.56927490]
[141.38900757 389.44024658]
[136.35208130 375.31121826]
[131.31517029 361.18218994]
[128.70013428 375.95248413]
[120.98847198 388.81832886]
[109.19477081 398.08700562]
[94.87069702 402.53909302]
[79.90083313 401.58877563]
[66.25471497 395.36114502]
[55.72772980 384.67553711]
[49.70487976 370.93780518]
[48.97857666 355.95538330]
[53.64437866 341.69949341]
[63.08842087 330.04574585]
[76.06816864 322.52737427]
[90.87592316 320.13354492]
[105.56346893 323.17919922]
[118.19839478 331.26367188]
[127.11942291 343.32540894]
[125.33695221 328.43170166]
[123.55448914 313.53796387]
[114.35961151 301.82031250]
[120.40220642 287.19848633]
[118.61973572 272.30477905]
[116.83727264 257.41104126]
[115.05480194 242.51733398]
[113.05078888 227.65180969]
[110.82567596 212.81776428]
[99.16992188 199.69868469]
[106.05186462 182.61885071]
[103.60614014 167.81958008]
[101.16040802 153.02030945]
[98.71468353 138.22103882]
[96.26895905 123.42176819]
[93.82322693 108.62249756]
[90.71911621 93.94719696]
[79.77250671 82.52430725]
[84.07611084 68.26499176]
[80.31981659 53.74293137]
[76.56351471 39.22087097]
[72.80721283 24.69881058]
[69.05091095 10.17675209]
[65.29460907 -4.34530687]
[62.24624252 10.34167576]
[56.04788971 24.00111961]
[47.00197983 35.96654892]
[35.54988480 45.65414810]
[22.25037956 52.59123230]
[7.75237417 56.43932724]
[-7.23674059 57.01068115]
[-21.98561287 54.27740860]
[-35.77461243 48.37287521]
[-47.93094254 39.58517838]
[-57.86146927 28.34308815]
[-65.08166504 15.19512844]
[-69.23922729 0.78282052]
[-70.13131714 -14.19062901]
[-67.71439362 -28.99463081]
[-62.10639191 -42.90686798]
[-53.58093262 -55.24852753]
[-42.55399704 -65.41743469]
[-29.56361008 -72.91742706]
[-15.24360466 -77.38256073]
[-0.29268289 -78.59497070]
[14.55966568 -76.49550629]
[28.58876038 -71.18659973]
[41.11009216 -62.92728806]
[51.51271820 -52.12055969]
[59.28907394 -39.29370117]
[64.05832672 -25.07902718]
[66.06233978 -39.94455719]
[66.73212433 -54.92959595]
[66.06233978 -69.91463470]
[62.55286026 -78.34798431]
[65.49581909 -85.12741852]
[65.04920959 -100.12077332]
[64.60260773 -115.11412048]
[64.15599823 -130.10746765]
[60.77247238 -138.59213257]
[63.81603622 -145.32701111]
[63.59270859 -160.32534790]
[55.65080261 -174.00878906]
[63.19775391 -186.84985352]
[62.97442627 -201.84819031]
[62.75109863 -216.84652710]
[49.06567001 -223.69981384]
[40.14212418 -236.13481140]
[38.03103256 -251.29402161]
[43.21750259 -265.69400024]
[54.50972748 -276.02569580]
[69.31282806 -279.91500854]
[84.22517395 -276.46817017]
[95.81999969 -266.47726440]
[101.43291473 -252.23808289]
[99.77410126 -237.02273560]
[91.22475433 -224.32757568]
[77.74943542 -217.06985474]
[77.97276306 -202.07151794]
[78.19609070 -187.07318115]
[86.12202454 -174.46250916]
[78.59104919 -160.54867554]
[78.81437683 -145.55033875]
[79.14935303 -130.55407715]
[79.59595490 -115.56072998]
[80.04256439 -100.56737518]
[80.48916626 -85.57402802]
[81.04737854 -70.58441925]
[81.71716309 -55.59938049]
[89.27522278 -68.55606842]
[101.65784454 -77.02191925]
[116.47413635 -79.36231995]
[130.86331177 -75.12536621]
[142.04702759 -65.12915039]
[147.86590576 -51.30378723]
[147.19641113 -36.31873322]
[140.16778564 -23.06737518]
[128.13717651 -14.10833454]
[113.42749023 -11.17146587]
[98.87894440 -14.82383156]
[87.30063629 -24.36021805]
[80.92787170 -37.94054031]
[78.92385101 -23.07501411]
[79.81667328 -8.10160732]
[83.57296753 6.42045164]
[87.32926941 20.94251060]
[91.08557129 35.46456909]
[94.84187317 49.98662949]
[98.59817505 64.50868988]
[109.27610779 74.89286041]
[105.24118042 90.19089508]
[113.76711273 77.84956360]
[128.49707031 75.01613617]
[140.99307251 83.31373596]
[144.09681702 97.98911285]
[136.03036499 110.63554382]
[121.41453552 114.00859070]
[108.62249756 106.17677307]
[111.06822968 120.97604370]
[113.51395416 135.77531433]
[115.95967865 150.57458496]
[118.40541077 165.37385559]
[120.85113525 180.17312622]
[130.86283875 188.30508423]
[132.59521484 200.68177795]
[125.65972137 210.59265137]
[127.88483429 225.42669678]
[131.69779968 230.82788086]
[132.14373779 236.49340820]
[129.94851685 240.73486328]
[131.73098755 255.62858582]
[133.51345825 270.52230835]
[135.29591370 285.41601562]
[144.61828613 298.19897461]
[138.44821167 311.75549316]
[140.23066711 326.64923096]
[142.01313782 341.54293823]
[145.44419861 356.14526367]
[150.48110962 370.27429199]
[155.51803589 384.40332031]
[160.55494690 398.53234863]
[165.90612793 412.54537964]
[171.56892395 426.43539429]
[177.23170471 440.32543945]
[182.89448547 454.21545410]
[188.55728149 468.10546875]
[194.22006226 481.99551392]
[199.88285828 495.88552856]
[205.54563904 509.77557373]
[220.30111694 506.83062744]
[235.34725952 506.73168945]
[250.14018250 509.48229980]
[264.14514160 514.98303223]
[276.85580444 523.03503418]
[287.81277466 533.34729004]
[296.61990356 545.54687500]
[302.95883179 559.19293213]
[306.60043335 573.79211426]
[307.41302490 588.81658936]
[305.36727905 603.72338867]
[300.53710938 617.97351074]
[293.09716797 631.05187988]
[283.31634521 642.48565674]
[271.54824829 651.86163330]
[258.21829224 658.84075928]
[243.80831909 663.17083740]
[228.83926392 664.69525146]
[213.85224915 663.35900879]
[199.38902283 659.21026611]
[185.97244263 652.39910889]
[174.08750916 643.17175293]
[164.16384888 631.86169434]
[156.56019592 618.87780762]
[151.55140686 604.68945312]
[149.31857300 589.80957031]
[149.94238281 574.77606201]
[153.40029907 560.13232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[14 174]
[15 173]
[16 172]
[17 171]
[33 170]
[34 169]
[35 168]
[37 166]
[38 165]
[39 164]
[40 163]
[41 160]
[42 159]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 144]
[52 142]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[84 136]
[85 135]
[86 122]
[87 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 116]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
