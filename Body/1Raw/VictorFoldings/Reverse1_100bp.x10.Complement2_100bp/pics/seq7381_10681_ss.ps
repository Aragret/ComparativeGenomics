%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[73.41182709 552.17504883]
[78.30907440 537.90344238]
[86.73403168 525.38610840]
[98.11226654 515.47662354]
[111.66798401 508.85055542]
[108.78271484 494.13067627]
[105.89743805 479.41079712]
[95.85651398 468.40945435]
[100.79484558 453.37872314]
[97.90957642 438.65881348]
[95.02429962 423.93893433]
[92.13903046 409.21902466]
[89.14425659 394.52102661]
[76.72830963 382.11895752]
[82.58143616 364.65982056]
[79.25917816 350.03234863]
[75.93692017 335.40487671]
[72.61466217 320.77743530]
[68.91046906 335.31286621]
[61.31082916 348.24520874]
[50.41508102 358.55456543]
[37.08250427 365.42785645]
[22.36456871 368.32308960]
[7.42198610 367.01190186]
[-6.56680632 361.59768677]
[-18.49859428 352.50744629]
[-27.43238831 340.45806885]
[-32.66363144 326.39984131]
[-33.77976608 311.44140625]
[-30.69277000 296.76251221]
[-23.64609528 283.52075195]
[-13.19547176 272.76043701]
[-0.16508016 265.33016968]
[14.41744804 261.81591797]
[29.40207481 262.49487305]
[43.60704803 267.31344604]
[55.91210938 275.89163208]
[65.34682465 287.55294800]
[71.16801453 301.38107300]
[72.28366852 286.42260742]
[73.39931488 271.46417236]
[74.51496124 256.50570679]
[72.13254547 252.36648560]
[72.32505798 246.68670654]
[75.89304352 241.12065125]
[77.45356750 226.20204163]
[79.01409149 211.28343201]
[80.57461548 196.36483765]
[82.13513947 181.44622803]
[83.69566345 166.52761841]
[81.43753815 162.31930542]
[81.79907990 156.64776611]
[85.53120422 151.19041443]
[87.53521729 136.32489014]
[89.53923035 121.45935822]
[78.95397949 111.26928711]
[76.34077454 96.81051636]
[82.68946838 83.55989075]
[95.59523773 76.53662872]
[97.59925079 61.67110062]
[99.60326385 46.80557251]
[92.41809845 36.09407806]
[94.39328003 23.75380325]
[103.93139648 16.31398392]
[106.15650940 1.47993982]
[107.93898010 -13.41377735]
[109.27721405 -28.35396194]
[110.61544800 -43.29414749]
[111.95368195 -58.23433304]
[113.29191589 -73.17451477]
[114.63014984 -88.11470032]
[115.85712433 -103.06443787]
[116.97277069 -118.02288818]
[116.63779449 -133.01914978]
[114.85533142 -147.91287231]
[113.07286835 -162.80657959]
[111.29039764 -177.70030212]
[109.50793457 -192.59402466]
[97.88507843 -197.19587708]
[89.37107849 -206.25016785]
[85.53694153 -217.99661255]
[87.05195618 -230.18701172]
[93.56770325 -240.51551819]
[103.79576111 -247.05477905]
[102.45752716 -261.99496460]
[101.11929321 -276.93515015]
[97.63457489 -282.55371094]
[97.52664185 -288.23571777]
[99.97042847 -292.33901978]
[99.07761383 -307.31243896]
[98.18479156 -322.28582764]
[83.35728455 -325.00765991]
[69.61229706 -331.19949341]
[57.74895477 -340.50134277]
[48.45697403 -352.37243652]
[42.27657318 -366.12255859]
[39.56708145 -380.95233154]
[40.48601532 -395.99954224]
[44.97995758 -410.38940430]
[52.78763199 -423.28527832]
[63.45511246 -433.93743896]
[76.36220551 -441.72656250]
[90.75850677 -446.19979858]
[105.80703735 -447.09710693]
[120.63289642 -444.36627197]
[134.37413025 -438.16610718]
[146.23182678 -428.85705566]
[155.51661682 -416.98034668]
[161.68867493 -403.22647095]
[164.38917542 -388.39508057]
[163.46112061 -373.34838867]
[158.95845032 -358.96127319]
[151.14295959 -346.07012939]
[140.46902466 -335.42446899]
[127.55721283 -327.64315796]
[113.15820312 -323.17864990]
[114.05101776 -308.20523071]
[114.94383240 -293.23184204]
[116.05947876 -278.27337646]
[117.39771271 -263.33319092]
[118.73594666 -248.39300537]
[134.29724121 -240.04328918]
[141.79724121 -223.88157654]
[138.06169128 -206.29962158]
[124.40164948 -194.37648010]
[126.18412018 -179.48277283]
[127.96658325 -164.58905029]
[129.74905396 -149.69532776]
[131.53150940 -134.80162048]
[137.80949402 -148.42465210]
[149.03179932 -158.37751770]
[163.30729675 -162.98300171]
[178.23028564 -161.46499634]
[191.28599548 -154.07929993]
[200.27430725 -142.07054138]
[203.68052673 -127.46240997]
[200.93066406 -112.71662140]
[192.48809814 -100.31810760]
[179.77555847 -92.35623932]
[164.93533325 -90.17272186]
[150.46826172 -94.13552094]
[138.81228638 -103.57683563]
[131.93122864 -116.90724182]
[130.81558228 -101.94878387]
[133.45288086 -95.04470062]
[129.57032776 -86.77646637]
[128.23210144 -71.83628082]
[126.89386749 -56.89609909]
[125.55563354 -41.95591354]
[124.21739960 -27.01572800]
[122.87916565 -12.07554340]
[124.57102966 -9.84043312]
[125.47948456 -6.80047846]
[125.29353333 -3.25071430]
[123.81464386 0.40679729]
[120.99055481 3.70505691]
[118.76544189 18.53910065]
[126.05908203 34.50061035]
[114.46879578 48.80958557]
[112.46478271 63.67511368]
[110.46076965 78.54064178]
[121.04602051 88.73071289]
[123.65922546 103.18948364]
[117.31053162 116.44010925]
[104.40476227 123.46337128]
[102.40074921 138.32890320]
[100.39673615 153.19442749]
[98.61426544 168.08815002]
[97.05374146 183.00674438]
[95.49321747 197.92535400]
[93.93270111 212.84396362]
[92.37217712 227.76255798]
[90.81165314 242.68116760]
[89.47341919 257.62133789]
[88.35776520 272.57980347]
[87.24211884 287.53826904]
[86.12647247 302.49670410]
[87.24211884 317.45516968]
[90.56437683 332.08264160]
[93.88664246 346.71008301]
[97.20890045 361.33755493]
[107.68687439 368.85916138]
[110.15285492 381.11080933]
[103.81955719 391.41693115]
[108.65711975 399.16519165]
[106.85892487 406.33377075]
[109.74419403 421.05364990]
[112.62946320 435.77355957]
[115.51473999 450.49343872]
[125.76203918 462.54763794]
[120.61733246 476.52551270]
[123.50260162 491.24539185]
[126.38787842 505.96530151]
[141.44197083 506.98348999]
[155.71925354 511.86422729]
[168.24630737 520.27465820]
[178.16897583 531.64141846]
[184.81074524 545.18945312]
[187.71875000 559.99505615]
[186.69473267 575.04876709]
[181.80850220 589.32415771]
[173.39321899 601.84796143]
[162.02264404 611.76623535]
[148.47203064 618.40277100]
[133.66531372 621.30505371]
[118.61200714 620.27520752]
[104.33849335 615.38348389]
[91.81795502 606.96337891]
[81.90406036 595.58898926]
[75.27275848 582.03582764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[9 189]
[10 188]
[11 187]
[12 186]
[13 184]
[15 181]
[16 180]
[17 179]
[18 178]
[39 177]
[40 176]
[41 175]
[42 174]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[53 167]
[54 166]
[55 165]
[59 161]
[60 160]
[61 159]
[64 157]
[65 156]
[66 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 144]
[73 143]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[84 121]
[85 120]
[86 119]
[89 118]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
