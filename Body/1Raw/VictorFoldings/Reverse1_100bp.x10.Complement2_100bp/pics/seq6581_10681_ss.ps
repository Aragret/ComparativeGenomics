%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[65.63757324 656.05279541]
[61.83863068 670.80029297]
[52.36470032 682.72357178]
[38.85720444 689.75689697]
[23.65639114 690.68164062]
[9.39589787 685.33764648]
[-1.45356143 674.65075684]
[-7.01225138 660.47259521]
[-6.31709480 645.25958252]
[0.51146704 631.64739990]
[12.29034519 621.99456787]
[26.97877884 617.97338867]
[29.20389557 603.13934326]
[31.42901230 588.30529785]
[33.65412903 573.47125244]
[35.87924576 558.63720703]
[37.99386978 543.78698730]
[39.99788284 528.92144775]
[42.00189972 514.05590820]
[44.00591278 499.19039917]
[46.00992584 484.32489014]
[34.06523895 477.26849365]
[25.68576431 466.15740967]
[22.16299438 452.64926147]
[24.06073952 438.77523804]
[31.12519264 426.63442993]
[42.31830978 418.07647705]
[55.97021484 414.41970825]
[58.19533157 399.58566284]
[60.42044830 384.75161743]
[53.12681198 368.79010010]
[64.71709442 354.48110962]
[66.72110748 339.61560059]
[68.72512054 324.75006104]
[70.50758362 309.85635376]
[72.06810760 294.93774414]
[73.62863159 280.01913452]
[75.18915558 265.10052490]
[68.81792450 251.63737488]
[77.94893646 238.71704102]
[71.57769775 225.25387573]
[80.70871735 212.33354187]
[82.26923370 197.41493225]
[83.82975769 182.49632263]
[77.45852661 169.03317261]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[87.86990356 61.67103958]
[89.47679901 49.27742386]
[98.78916931 41.55691910]
[100.57164001 26.66320229]
[102.35410309 11.76948357]
[89.79319000 0.44166180]
[86.49203491 -15.97795105]
[93.55742645 -30.97935295]
[108.02565002 -38.73485565]
[109.58617401 -53.65346146]
[111.14669800 -68.57206726]
[112.70722198 -83.49066925]
[103.00641632 -72.04976654]
[89.13478088 -66.34207153]
[74.19127655 -67.64271545]
[61.51431656 -75.66110992]
[53.93597031 -88.60594177]
[53.14926147 -103.58530426]
[59.32993698 -117.25275421]
[71.09722137 -126.55495453]
[85.82227325 -129.41377258]
[100.21547699 -125.19055176]
[111.06135559 -114.82875061]
[115.93691254 -100.64320374]
[119.90901184 -115.10772705]
[123.88110352 -129.57225037]
[120.07438660 -144.92866516]
[130.90574646 -155.15270996]
[134.87783813 -169.61723328]
[138.84992981 -184.08175659]
[142.82203674 -198.54627991]
[146.79412842 -213.01080322]
[150.76622009 -227.47532654]
[154.73832703 -241.93984985]
[153.41691589 -246.98970032]
[154.09671021 -251.58221436]
[156.26835632 -255.03170776]
[159.22422791 -256.95397949]
[163.83824158 -271.22671509]
[168.45225525 -285.49945068]
[165.33503723 -301.01052856]
[176.61210632 -310.74072266]
[181.22612000 -325.01345825]
[184.87420654 -339.56307983]
[187.54000854 -354.32427979]
[190.20579529 -369.08551025]
[176.34562683 -374.98831177]
[164.14675903 -383.82775879]
[154.22108459 -395.16040039]
[147.06648254 -408.41781616]
[143.04180908 -422.93502808]
[142.34896851 -437.98388672]
[145.02268982 -452.80950928]
[150.92884827 -466.66824341]
[159.77122498 -478.86499023]
[171.10627747 -488.78790283]
[184.36543274 -495.93930054]
[198.88363647 -499.96044922]
[213.93264771 -500.64962769]
[228.75761414 -497.97232056]
[242.61492920 -492.06280518]
[254.80952454 -483.21746826]
[264.72970581 -471.88003540]
[271.87786865 -458.61914062]
[275.89550781 -444.09994507]
[276.58105469 -429.05078125]
[273.90014648 -414.22644043]
[267.98727417 -400.37057495]
[259.13897705 -388.17813110]
[247.79913330 -378.26071167]
[234.53651428 -371.11572266]
[220.01635742 -367.10162354]
[204.96701050 -366.41970825]
[202.30122375 -351.65850830]
[199.63542175 -336.89727783]
[210.89277649 -346.81051636]
[225.70617676 -349.16906738]
[239.48556519 -343.24212646]
[247.96122742 -330.86624146]
[248.50689697 -315.87615967]
[240.95347595 -302.91674805]
[227.64149475 -296.00366211]
[212.69581604 -297.27893066]
[200.74749756 -306.34744263]
[195.49885559 -320.39944458]
[190.88484192 -306.12670898]
[194.33209229 -291.63650513]
[182.72499084 -280.88543701]
[178.11097717 -266.61270142]
[173.49696350 -252.33996582]
[169.20285034 -237.96775818]
[165.23074341 -223.50323486]
[161.25865173 -209.03871155]
[157.28656006 -194.57418823]
[153.31445312 -180.10966492]
[149.34236145 -165.64514160]
[145.37026978 -151.18061829]
[149.46109009 -136.85879517]
[138.34562683 -125.60015869]
[134.37353516 -111.13563538]
[130.40144348 -96.67111206]
[127.62582397 -81.93014526]
[126.06529999 -67.01154327]
[124.50478363 -52.09293747]
[122.94425964 -37.17433167]
[133.65586853 -29.20542908]
[139.07456970 -16.88545227]
[137.68707275 -3.38936138]
[129.74942017 7.74670935]
[117.24781799 13.55194950]
[115.46535492 28.44566727]
[113.68289185 43.33938599]
[121.44852448 59.07665634]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[107.76776123 172.20359802]
[98.74836731 184.05685425]
[97.18784332 198.97546387]
[95.62731934 213.89405823]
[101.88693237 228.42430115]
[92.86753845 240.27755737]
[99.12715912 254.80780029]
[90.10775757 266.66104126]
[88.54724121 281.57965088]
[86.98671722 296.49826050]
[85.42619324 311.41687012]
[87.76509857 317.60079956]
[86.77806854 323.19747925]
[83.59065247 326.75408936]
[81.58663177 341.61959839]
[79.58261871 356.48513794]
[86.76779175 367.19662476]
[84.79261017 379.53689575]
[75.25449371 386.97671509]
[73.02937317 401.81076050]
[70.80426025 416.64480591]
[84.32733154 425.69247437]
[92.52164459 439.68164062]
[93.79047394 455.78601074]
[87.93038940 470.77743530]
[76.16185760 481.67309570]
[60.87545395 486.32888794]
[58.87144089 501.19442749]
[56.86742783 516.05993652]
[54.86341095 530.92547607]
[52.85939789 545.79101562]
[54.81423950 554.71380615]
[50.71329117 560.86230469]
[48.48817444 575.69635010]
[46.26305771 590.53039551]
[44.03793716 605.36444092]
[41.81282043 620.19848633]
[54.67500305 628.35229492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[28 193]
[29 192]
[30 191]
[32 188]
[33 187]
[34 186]
[35 183]
[36 182]
[37 181]
[38 180]
[40 178]
[42 176]
[43 175]
[44 174]
[46 172]
[47 171]
[48 170]
[49 169]
[51 167]
[52 166]
[55 164]
[56 163]
[57 162]
[61 157]
[62 156]
[63 155]
[64 154]
[76 153]
[77 152]
[78 151]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[90 142]
[91 141]
[92 140]
[94 138]
[95 137]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
