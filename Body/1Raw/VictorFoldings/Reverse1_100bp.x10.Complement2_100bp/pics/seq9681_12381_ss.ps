%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[242.64852905 407.66949463]
[238.03451538 393.39675903]
[233.42050171 379.12402344]
[228.80650330 364.85131836]
[211.78234863 360.15554810]
[200.88906860 346.05633545]
[200.63772583 328.08367920]
[211.31771851 313.43118286]
[206.28079224 299.30215454]
[201.24388123 285.17312622]
[196.20697021 271.04409790]
[190.33799744 257.23992920]
[183.65780640 243.80955505]
[176.97761536 230.37918091]
[170.29742432 216.94880676]
[163.61723328 203.51841736]
[151.02153015 195.56872559]
[151.80332947 179.76686096]
[145.12313843 166.33647156]
[136.80119324 153.85668945]
[126.97060394 142.52708435]
[117.14002991 131.19749451]
[107.30944824 119.86790466]
[90.82478333 119.07818604]
[79.91630554 106.69380188]
[81.21358490 90.24129486]
[71.21541595 79.05931854]
[73.55812836 93.87525177]
[69.32342529 108.26508331]
[59.32896042 119.45037079]
[45.50450516 125.27140808]
[30.51935005 124.60424805]
[17.26689148 117.57769775]
[8.30597019 105.54849243]
[5.36680126 90.83926392]
[9.01689243 76.29014587]
[18.55146790 64.71034241]
[32.12955093 58.33573151]
[47.12942505 58.39714813]
[60.65584946 64.88352966]
[52.80409622 52.10268402]
[44.95233917 39.32184219]
[37.10058212 26.54100037]
[23.28426361 18.83257103]
[23.21478271 3.93812680]
[9.39846325 -3.77030230]
[9.32898331 -18.66474533]
[1.47722745 -31.44558907]
[-6.37452793 -44.22642899]
[-14.32121277 -56.94846725]
[-22.36238480 -69.61099243]
[-30.40355873 -82.27351379]
[-38.53877258 -94.87583160]
[-46.76758194 -107.41722870]
[-54.99639130 -119.95862579]
[-68.30569458 -113.01305389]
[-82.24042511 -107.42719269]
[-96.66209412 -103.25656128]
[-111.42736053 -100.54260254]
[-126.38947296 -99.31230164]
[-141.39973450 -99.57788086]
[-156.30897522 -101.33669281]
[-170.96899414 -104.57127380]
[-185.23410034 -109.24945831]
[-198.96250916 -115.32476044]
[-212.01777649 -122.73680115]
[-224.27017212 -131.41191101]
[-235.59790039 -141.26387024]
[-245.88838196 -152.19477844]
[-255.03935242 -164.09596252]
[-262.95986938 -176.84916687]
[-269.57116699 -190.32763672]
[-274.80758667 -204.39741516]
[-278.61709595 -218.91865540]
[-280.96176147 -233.74703979]
[-281.81835938 -248.73519897]
[-281.17834473 -263.73416138]
[-279.04803467 -278.59487915]
[-275.44866943 -293.16961670]
[-270.41601562 -307.31353760]
[-264.00003052 -320.88607788]
[-256.26455688 -333.75234985]
[-247.28642273 -345.78445435]
[-237.15487671 -356.86285400]
[-225.97061157 -366.87738037]
[-213.84480286 -375.72854614]
[-200.89793396 -383.32836914]
[-187.25869751 -389.60131836]
[-173.06263733 -394.48501587]
[-158.45086670 -397.93099976]
[-143.56858826 -399.90496826]
[-128.56373596 -400.38729858]
[-113.58540344 -399.37319946]
[-98.78248596 -396.87277222]
[-84.30208588 -392.91085815]
[-70.28813171 -387.52685547]
[-56.87990570 -380.77420044]
[-44.21065903 -372.72009277]
[-32.40631485 -363.44451904]
[-21.58418846 -353.03970337]
[-11.85184097 -341.60903931]
[-3.30599880 -329.26614380]
[3.96840405 -316.13369751]
[9.89906883 -302.34216309]
[14.42705250 -288.02868652]
[17.50735283 -273.33547974]
[19.10935593 -258.40856934]
[19.21713829 -243.39634705]
[17.82963181 -228.44799805]
[14.96062374 -213.71206665]
[10.63862896 -199.33503723]
[4.90660286 -185.45979309]
[-2.17848539 -172.22422791]
[-10.54621983 -159.75990295]
[-20.11343575 -148.19067383]
[-30.78504562 -137.63153076]
[-42.45499039 -128.18743896]
[-34.22618103 -115.64603424]
[-25.99737358 -103.10463715]
[-19.69971848 -99.23664856]
[-17.74103355 -90.31468964]
[-9.69986057 -77.65216827]
[-1.65868747 -64.98963928]
[4.58068180 -61.02832031]
[6.40631437 -52.07818604]
[14.25806999 -39.29734421]
[22.10982513 -26.51650047]
[35.36453629 -19.72224236]
[35.99562454 -3.91362858]
[49.25033569 2.88062930]
[49.88142776 18.68924332]
[57.73318100 31.47008705]
[65.58493805 44.25093079]
[73.43669128 57.03177261]
[82.39739227 69.06114960]
[92.39556122 80.24312592]
[105.04502106 79.44010162]
[115.88597107 86.00723267]
[121.03224945 97.59039307]
[118.63903809 110.03732300]
[128.46961975 121.36692047]
[138.30020142 132.69651794]
[148.13078308 144.02610779]
[144.85580444 129.38798523]
[146.44580078 114.47248840]
[152.73295593 100.85369110]
[163.05377197 89.96881104]
[176.31907654 82.96655273]
[191.12896729 80.58589172]
[205.92048645 83.07805634]
[219.13265991 90.18004608]
[229.37120056 101.14236450]
[235.55557251 114.80814362]
[237.03315735 129.73518372]
[233.64801025 144.34822083]
[225.75735474 157.10508728]
[214.19393921 166.65953064]
[200.17807007 172.00325012]
[185.18887329 172.57229614]
[170.80818176 168.30664062]
[158.55351257 159.65628052]
[165.23370361 173.08665466]
[178.30722046 181.99697876]
[177.04760742 196.83822632]
[183.72779846 210.26860046]
[190.40798950 223.69897461]
[197.08818054 237.12936401]
[203.76838684 250.55973816]
[207.58174133 236.05255127]
[219.12055969 226.46842957]
[234.08117676 225.38200378]
[246.88362122 233.19848633]
[252.75289917 247.00251770]
[249.49993896 261.64553833]
[238.33799744 271.66607666]
[223.43019104 273.32669067]
[210.33599854 266.00720215]
[215.37290955 280.13623047]
[220.40982056 294.26525879]
[225.44674683 308.39428711]
[237.80017090 310.30755615]
[248.10809326 317.25128174]
[254.44865417 327.85678101]
[255.67124939 340.07995605]
[251.60491943 351.59509277]
[243.07922363 360.23730469]
[247.69323730 374.51004028]
[252.30725098 388.78277588]
[256.92126465 403.05548096]
[271.98968506 402.27758789]
[286.74578857 405.42715454]
[300.18350220 412.28939819]
[311.38656616 422.39648438]
[319.59121704 435.05929565]
[324.23797607 449.41442871]
[325.01007080 464.48312378]
[321.85482788 479.23803711]
[314.98736572 492.67309570]
[304.87597656 503.87225342]
[292.20999146 512.07202148]
[277.85308838 516.71325684]
[262.78405762 517.47949219]
[248.03038025 514.31854248]
[234.59799194 507.44592285]
[223.40270996 497.33020020]
[215.20785522 484.66107178]
[210.57217407 470.30233765]
[209.81172180 455.23303223]
[212.97836304 440.48059082]
[219.85617065 427.05084229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[8 180]
[9 179]
[10 178]
[11 177]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[18 162]
[19 161]
[20 143]
[21 142]
[22 141]
[23 140]
[26 136]
[27 135]
[40 134]
[41 133]
[42 132]
[43 131]
[45 129]
[47 127]
[48 126]
[49 125]
[50 123]
[51 122]
[52 121]
[53 119]
[54 118]
[55 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
