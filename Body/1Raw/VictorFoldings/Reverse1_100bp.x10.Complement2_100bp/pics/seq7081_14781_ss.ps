%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[78.58293152 596.31652832]
[64.89854431 590.09692383]
[52.35567856 581.81298828]
[41.26320648 571.66888428]
[31.89429283 559.91430664]
[24.47965240 546.83874512]
[19.20187759 532.76428223]
[16.19094086 518.03735352]
[15.52098656 503.02081299]
[17.20851517 488.08432007]
[21.21196938 473.59573364]
[27.43276024 459.91186523]
[35.71769333 447.36968994]
[45.86274719 436.27804565]
[57.61809158 426.91009521]
[70.69423676 419.49655151]
[84.76917267 414.21994019]
[99.49629211 411.21020508]
[98.82650757 396.22515869]
[98.15672302 381.24014282]
[97.48693848 366.25509644]
[89.18904877 353.88598633]
[96.30242157 339.75411987]
[88.00453949 327.38500977]
[95.11791229 313.25311279]
[94.44812775 298.26806641]
[93.77834320 283.28305054]
[90.92093658 279.45626831]
[90.43714905 273.79385376]
[93.31843567 267.84323120]
[93.09510803 252.84489441]
[92.87178040 237.84655762]
[81.28910828 231.20698547]
[74.44480896 219.61822510]
[74.21871948 206.05287170]
[80.77682495 194.05247498]
[92.50000000 186.80278015]
[92.50000000 171.80278015]
[92.50000000 156.80278015]
[78.05754089 152.92764282]
[65.10964203 145.44743347]
[54.53823090 134.87167358]
[47.06335068 121.92070770]
[43.19413757 107.47665405]
[43.19413757 92.52334595]
[47.06335068 78.07929230]
[54.53823090 65.12832642]
[65.10964203 54.55256653]
[78.05754089 47.07236481]
[92.50000000 43.19721603]
[92.50000000 28.19721603]
[92.50000000 13.19721508]
[84.76270294 -0.60295701]
[92.50000000 -13.33022881]
[92.50000000 -28.33022881]
[79.90585327 -40.47134781]
[79.98753357 -57.62676239]
[92.20608521 -69.18296051]
[91.98275757 -84.18129730]
[91.75942993 -99.17963409]
[91.53610229 -114.17797089]
[82.84146881 -123.70510101]
[82.96423340 -136.20184326]
[91.29319000 -144.97424316]
[91.29319000 -159.97424316]
[91.29319000 -174.97424316]
[91.29319000 -189.97424316]
[91.29319000 -204.97424316]
[91.29319000 -219.97424316]
[83.67385864 -207.05349731]
[71.73632812 -197.97079468]
[57.25146866 -194.07351685]
[42.36802292 -195.93977356]
[29.29385376 -203.29273987]
[19.96844292 -215.04164124]
[15.77515697 -229.44360352]
[17.33604622 -244.36216736]
[24.41956139 -257.58425903]
[35.97490311 -267.14846802]
[50.28791046 -271.63598633]
[65.23532867 -270.38113403]
[78.59980011 -263.57003784]
[88.39878082 -252.21311951]
[93.17841339 -237.99696350]
[96.28251648 -252.67227173]
[99.38662720 -267.34756470]
[102.49073792 -282.02285767]
[105.59484863 -296.69818115]
[108.69895935 -311.37347412]
[111.80307007 -326.04876709]
[114.90718079 -340.72409058]
[118.01129150 -355.39938354]
[121.11540222 -370.07467651]
[116.40140533 -385.17730713]
[126.60501099 -396.02789307]
[129.70912170 -410.70321655]
[132.81323242 -425.37850952]
[135.91734314 -440.05380249]
[139.02145386 -454.72912598]
[142.12556458 -469.40441895]
[128.54812622 -475.95550537]
[116.93344879 -485.56607056]
[107.95680237 -497.67733765]
[102.14006805 -511.58520508]
[99.82141876 -526.48107910]
[101.13566589 -541.49896240]
[106.00640106 -555.76568604]
[114.15044403 -568.45184326]
[125.09430695 -578.81982422]
[138.20173645 -586.26690674]
[152.71067810 -590.36004639]
[167.77758789 -590.86138916]
[182.52651978 -587.74169922]
[196.09999084 -581.18237305]
[207.70883179 -571.56475830]
[216.67813110 -559.44805908]
[222.48643494 -545.53668213]
[224.79605103 -530.63940430]
[223.47270203 -515.62231445]
[218.59332275 -501.35855103]
[210.44158936 -488.67733765]
[199.49143982 -478.31600952]
[186.37950134 -470.87686157]
[171.86808777 -466.79248047]
[156.80085754 -466.30029297]
[153.69674683 -451.62500000]
[150.59263611 -436.94970703]
[147.48852539 -422.27438354]
[144.38441467 -407.59909058]
[141.28030396 -392.92379761]
[146.21633911 -378.87084961]
[135.79071045 -366.97058105]
[132.68659973 -352.29525757]
[129.58248901 -337.61996460]
[126.47837067 -322.94467163]
[123.37425995 -308.26937866]
[120.27014923 -293.59405518]
[117.16604614 -278.91876221]
[114.06193542 -264.24346924]
[110.95782471 -249.56816101]
[107.85371399 -234.89285278]
[106.29319000 -219.97424316]
[106.29319000 -204.97424316]
[106.29319000 -189.97424316]
[106.29319000 -174.97424316]
[106.29319000 -159.97424316]
[106.29319000 -144.97424316]
[115.87388611 -130.27128601]
[106.53443909 -114.40129852]
[106.75776672 -99.40296173]
[106.98109436 -84.40462494]
[107.20442200 -69.40628815]
[117.61502838 -61.81359863]
[121.81434631 -49.42619324]
[118.05707550 -36.69460678]
[107.50000000 -28.33022881]
[107.50000000 -13.33022881]
[115.23729706 -0.60295701]
[107.50000000 13.19721508]
[107.50000000 28.19721603]
[107.50000000 43.19721603]
[121.94245911 47.07236481]
[134.89035034 54.55256653]
[145.46177673 65.12832642]
[152.93664551 78.07929230]
[156.80586243 92.52334595]
[156.80586243 107.47665405]
[152.93664551 121.92070770]
[145.46177673 134.87167358]
[134.89035034 145.44743347]
[121.94245911 152.92764282]
[107.50000000 156.80278015]
[107.50000000 171.80278015]
[107.50000000 186.80278015]
[121.31800842 196.55772400]
[126.54692841 212.46870422]
[121.31423950 228.20339966]
[107.87011719 237.62322998]
[108.09344482 252.62156677]
[108.31677246 267.61990356]
[108.76338196 282.61325073]
[109.43316650 297.59829712]
[110.10295105 312.58334351]
[118.44874573 326.02426147]
[111.28746033 339.08432007]
[119.63325500 352.52523804]
[112.47197723 365.58529663]
[113.14176178 380.57034302]
[113.81154633 395.55538940]
[114.48133087 410.54043579]
[129.41824341 412.22424316]
[143.90780640 416.22412109]
[157.59321594 422.44152832]
[170.13745117 430.72335815]
[181.23159790 440.86566162]
[190.60244751 452.61868286]
[198.01924133 465.69299316]
[203.29934692 479.76663208]
[206.31271362 494.49301147]
[206.98513794 509.50946045]
[205.30007935 524.44622803]
[201.29901123 538.93548584]
[195.08049011 552.62036133]
[186.79762268 565.16394043]
[176.65440369 576.25720215]
[164.90060425 585.62713623]
[151.82568359 593.04284668]
[137.75161743 598.32177734]
[123.02498627 601.33392334]
[108.00846100 602.00512695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 190]
[19 189]
[20 188]
[21 187]
[23 185]
[25 183]
[26 182]
[27 181]
[30 180]
[31 179]
[32 178]
[37 174]
[38 173]
[39 172]
[50 161]
[51 160]
[52 159]
[54 157]
[55 156]
[58 152]
[59 151]
[60 150]
[61 149]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
