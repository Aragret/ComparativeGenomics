%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[65.52400208 587.67126465]
[54.57640457 576.27276611]
[54.97876740 560.47363281]
[66.49237061 549.64715576]
[66.71569824 534.64880371]
[66.93902588 519.65045166]
[67.16235352 504.65213013]
[59.61540604 491.81106567]
[67.55731201 478.12762451]
[67.78063965 463.12930298]
[68.00396729 448.13095093]
[68.22729492 433.13262939]
[60.68034363 420.29156494]
[68.62224579 406.60812378]
[68.84557343 391.60977173]
[66.66532135 388.83871460]
[65.71894836 384.87393188]
[66.55287170 380.30688477]
[69.42871857 375.95068359]
[70.32153320 360.97726440]
[67.58173370 354.11322021]
[71.34074402 345.78808594]
[72.45639801 330.82965088]
[73.57204437 315.87118530]
[74.68769073 300.91271973]
[75.80334473 285.95428467]
[76.91899109 270.99581909]
[78.03463745 256.03738403]
[79.15029144 241.07891846]
[80.26593781 226.12046814]
[81.38158417 211.16201782]
[82.49723053 196.20356750]
[83.61288452 181.24510193]
[81.23046112 177.10589600]
[81.42298126 171.42610168]
[84.99096680 165.86004639]
[86.55149078 150.94143677]
[88.11201477 136.02284241]
[81.74077606 122.55967712]
[90.87178802 109.63934326]
[82.88031769 122.33329010]
[72.37855530 133.04370117]
[59.84425735 141.28332520]
[45.84765244 146.67730713]
[31.02549362 148.98027039]
[16.05208969 148.08741760]
[1.60863042 144.03939819]
[-11.64780331 137.02035522]
[-23.11413193 127.34960938]
[-32.26871490 115.46711731]
[-38.69507599 101.91345215]
[-42.10086441 87.30521393]
[-42.33113480 72.30698395]
[-39.37541580 57.60107803]
[-33.36816788 43.85651398]
[-24.58268356 31.69858360]
[-13.41864395 21.68038940]
[-0.38393784 14.25769234]
[13.92844296 9.76817513]
[28.86738014 8.41608143]
[43.75325012 10.26292229]
[57.90885162 15.22467899]
[70.69019318 23.07562447]
[81.51580811 33.45859146]
[89.89320374 45.90122986]
[95.44126892 59.83747482]
[97.90760040 74.63332367]
[97.17932892 89.61994934]
[104.45256042 76.50125122]
[111.72579193 63.38256073]
[118.99901581 50.26386642]
[126.27224731 37.14517212]
[132.54960632 23.52185631]
[137.79632568 9.46938515]
[143.04304504 -4.58308601]
[148.28976440 -18.63555717]
[153.53648376 -32.68803024]
[158.78320312 -46.74050140]
[163.18420410 -61.08034897]
[166.72387695 -75.65672302]
[162.46162415 -90.89299011]
[172.98376465 -101.43498993]
[176.52343750 -116.01136017]
[180.06311035 -130.58773804]
[178.57135010 -137.02871704]
[180.29725647 -142.44335938]
[183.93125916 -145.54222107]
[187.90336609 -160.00674438]
[191.87545776 -174.47126770]
[195.84754944 -188.93579102]
[199.81965637 -203.40031433]
[203.79174805 -217.86483765]
[207.76383972 -232.32936096]
[210.20956421 -247.12863159]
[211.10238647 -262.10205078]
[211.99520874 -277.07543945]
[212.77651978 -292.05508423]
[213.44630432 -307.04013062]
[214.11608887 -322.02517700]
[200.21040344 -328.10763550]
[189.44374084 -338.80545044]
[183.27218628 -352.67181396]
[182.53041077 -367.83145142]
[187.31872559 -382.23410034]
[196.98954773 -393.93194580]
[210.23497009 -401.34295654]
[225.26368713 -403.46481323]
[240.04315186 -400.01062012]
[252.57460022 -391.44747925]
[261.16320801 -378.93347168]
[264.64749146 -364.16107178]
[262.55621338 -349.12808228]
[255.17216492 -335.86758423]
[243.49401855 -326.17297363]
[229.10113525 -321.35537720]
[228.43135071 -306.37033081]
[227.76156616 -291.38531494]
[230.60325623 -284.56280518]
[226.96861267 -276.18261719]
[226.07579041 -261.20922852]
[225.18296814 -246.23582458]
[233.55786133 -258.68014526]
[246.01483154 -267.03622437]
[260.70599365 -270.06445312]
[275.45196533 -267.31561279]
[288.06527710 -259.19747925]
[296.67486572 -246.91435242]
[300.00347900 -232.28834534]
[297.55740356 -217.48913574]
[289.69946289 -204.71209717]
[277.59533691 -195.85263062]
[263.04058838 -192.22499084]
[248.19436646 -194.36730957]
[235.25898743 -201.96179199]
[226.15335083 -213.88183594]
[222.22836304 -228.35726929]
[218.25627136 -213.89274597]
[214.28417969 -199.42822266]
[210.31207275 -184.96369934]
[206.33998108 -170.49917603]
[202.36788940 -156.03465271]
[198.39578247 -141.57012939]
[194.63948059 -127.04806519]
[191.09982300 -112.47168732]
[187.56015015 -97.89531708]
[192.07557678 -83.70165253]
[181.30024719 -72.11705017]
[177.76057434 -57.54067612]
[190.02111816 -66.18237305]
[205.02078247 -66.08240509]
[217.16506958 -57.27806091]
[221.92443848 -43.05314255]
[217.52378845 -28.71319008]
[205.60443115 -19.60665321]
[190.61201477 -19.13004494]
[178.13832092 -27.46112823]
[172.83567810 -41.49378204]
[167.58895874 -27.44131088]
[162.34223938 -13.38883972]
[157.09552002 0.66363198]
[151.84880066 14.71610355]
[146.60208130 28.76857376]
[159.12881470 20.51745796]
[174.09671021 19.53650093]
[187.59318542 26.08212471]
[196.09028625 38.44331741]
[197.36691284 53.38889313]
[191.08935547 67.01211548]
[178.89852905 75.75189972]
[163.98110962 77.32369995]
[150.23646545 71.31664276]
[141.25741577 59.30096054]
[139.39094543 44.41840363]
[132.11770630 57.53709412]
[124.84448242 70.65579224]
[117.57125092 83.77448273]
[110.29802704 96.89318085]
[105.79039764 111.19986725]
[112.05001068 125.73010254]
[103.03061676 137.58335876]
[101.47009277 152.50196838]
[99.90956879 167.42057800]
[98.57133484 182.36076355]
[97.45568848 197.31921387]
[96.34004211 212.27766418]
[95.22438812 227.23611450]
[94.10874176 242.19456482]
[92.99309540 257.15301514]
[91.87744141 272.11148071]
[90.76179504 287.06991577]
[89.64614868 302.02838135]
[88.53049469 316.98684692]
[87.41484833 331.94528198]
[86.29920197 346.90374756]
[85.29493713 361.87008667]
[84.40212250 376.84350586]
[83.84391022 391.83309937]
[83.62058258 406.83145142]
[91.15156555 420.74526978]
[83.22563171 433.35595703]
[83.00230408 448.35427856]
[82.77897644 463.35263062]
[82.55564880 478.35095215]
[90.08662415 492.26480103]
[82.16069794 504.87545776]
[81.93737030 519.87377930]
[81.71404266 534.87213135]
[81.49071503 549.87048340]
[92.67686462 561.03497314]
[92.60865021 576.83911133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[9 203]
[10 202]
[11 201]
[12 200]
[14 198]
[15 197]
[19 196]
[20 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[36 182]
[37 181]
[38 180]
[40 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 162]
[74 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 148]
[80 147]
[82 145]
[83 144]
[84 143]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 121]
[95 120]
[96 119]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
