%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[88.60636902 428.49237061]
[90.69238281 443.57772827]
[86.45603180 458.20556641]
[76.63130951 469.84149170]
[62.92038727 476.46951294]
[47.69878387 476.94128418]
[33.60372162 471.17507935]
[23.07725906 460.16992188]
[17.94317245 445.83251953]
[19.09096909 430.64691162]
[26.32178879 417.24411011]
[38.38284683 407.94622803]
[53.18449402 404.36416626]
[55.85028839 389.60293579]
[58.51608276 374.84173584]
[61.18187714 360.08050537]
[55.82963562 346.18075562]
[65.89633179 333.97534180]
[68.56212616 319.21414185]
[66.65739441 312.07315063]
[71.37905884 304.25369263]
[74.26433563 289.53381348]
[77.14960480 274.81390381]
[79.15361786 259.94839478]
[80.26926422 244.98992920]
[81.38491821 230.03147888]
[82.50056458 215.07302856]
[83.61621094 200.11456299]
[80.97891235 193.21047974]
[84.86145782 184.94224548]
[86.19969177 170.00205994]
[79.62871552 156.63525391]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[98.72314453 40.11552811]
[99.95011902 25.16579628]
[100.84293365 10.19239044]
[101.73574829 -4.78101540]
[94.83357239 -19.01725388]
[103.31468964 -31.26142693]
[104.20751190 -46.23483276]
[103.98418427 -61.23316956]
[102.64595032 -76.17335510]
[101.30771637 -91.11354065]
[90.36791992 -105.92578125]
[98.36700439 -121.54569244]
[96.80648041 -136.46429443]
[95.24595642 -151.38290405]
[93.68543243 -166.30149841]
[92.12490845 -181.22010803]
[88.26060486 -195.71380615]
[82.18676758 -209.42906189]
[76.11293793 -223.14433289]
[70.03910065 -236.85960388]
[63.35890961 -250.28997803]
[56.08567810 -263.40866089]
[48.81245041 -276.52737427]
[41.53921890 -289.64605713]
[34.26599121 -302.76473999]
[20.29038620 -297.25680542]
[5.71539736 -293.62023926]
[-9.20957565 -291.91723633]
[-24.22914696 -292.17697144]
[-39.08631516 -294.39498901]
[-53.52685165 -298.53332520]
[-67.30365753 -304.52120972]
[-80.18099976 -312.25613403]
[-91.93852997 -321.60574341]
[-102.37505341 -332.41009521]
[-111.31199646 -344.48428345]
[-118.59642792 -357.62173462]
[-124.10371399 -371.59759521]
[-127.73960114 -386.17276001]
[-129.44187927 -401.09780884]
[-129.18144226 -416.11737061]
[-126.96271515 -430.97442627]
[-122.82367706 -445.41476440]
[-116.83515167 -459.19128418]
[-109.09961700 -472.06826782]
[-99.74942780 -483.82534790]
[-88.94458008 -494.26135254]
[-76.86996460 -503.19772339]
[-63.73218918 -510.48153687]
[-49.75605774 -515.98815918]
[-35.18072510 -519.62335205]
[-20.25558853 -521.32489014]
[-5.23604202 -521.06378174]
[9.62091446 -518.84429932]
[24.06105614 -514.70458984]
[37.83729553 -508.71542358]
[50.71390152 -500.97927856]
[62.47053909 -491.62850952]
[72.90603638 -480.82318115]
[81.84182739 -468.74813843]
[89.12500763 -455.61001587]
[94.63095856 -441.63360596]
[98.26546478 -427.05810547]
[99.96632385 -412.13290405]
[99.70445251 -397.11337280]
[97.48430634 -382.25650024]
[93.34390259 -367.81655884]
[87.35406494 -354.04061890]
[79.61730194 -341.16436768]
[70.26599121 -329.40817261]
[59.46015167 -318.97320557]
[47.38468552 -310.03799438]
[54.65791321 -296.91928101]
[61.93114471 -283.80059814]
[69.20437622 -270.68191528]
[76.47760010 -257.56320190]
[81.64135742 -271.64636230]
[95.19243622 -278.07818604]
[109.36815643 -273.17422485]
[116.04803467 -259.74368286]
[111.40551758 -245.48020935]
[98.10006714 -238.55455017]
[83.75437164 -242.93344116]
[89.82820129 -229.21817017]
[95.90203857 -215.50289917]
[101.97587585 -201.78764343]
[102.74488831 -216.76791382]
[107.47462463 -231.00271606]
[115.82361603 -243.46443176]
[127.18915558 -253.25343323]
[140.75074768 -259.66302490]
[155.52938843 -262.23052979]
[170.45816040 -260.77059937]
[184.45938110 -255.38856506]
[196.52226257 -246.47303772]
[205.77598572 -234.66758728]
[211.55250549 -220.82447815]
[213.43482971 -205.94303894]
[211.28706360 -191.09761047]
[205.26425171 -177.35986328]
[195.80117798 -165.72154236]
[183.58100891 -157.02284241]
[169.48593140 -151.89170837]
[154.53344727 -150.69859314]
[139.80302429 -153.52958679]
[126.35805511 -160.18035889]
[115.16913605 -170.17076111]
[107.04351807 -182.78063965]
[108.60404205 -167.86203003]
[110.16455841 -152.94342041]
[111.72508240 -138.02481079]
[113.28560638 -123.10621643]
[122.48200226 -115.24791718]
[123.90419769 -102.83174896]
[116.24789429 -92.45177460]
[117.58612823 -77.51158905]
[118.92436981 -62.57140350]
[126.65789795 -75.42413330]
[139.73353577 -82.77446747]
[154.73335266 -82.70106506]
[167.73643494 -75.22309875]
[175.34379578 -62.29529953]
[175.56689453 -47.29695892]
[168.34742737 -34.14860535]
[155.57252502 -26.28719330]
[140.58151245 -25.76767349]
[127.29302979 -32.72584534]
[119.18091583 -45.34201813]
[118.28810120 -30.36861229]
[125.25414276 -17.20337296]
[116.70915985 -3.88819957]
[115.81633759 11.08520603]
[114.92352295 26.05861282]
[116.97786713 28.92427444]
[117.74626160 32.92734909]
[116.70924377 37.45259857]
[113.64174652 41.67605209]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[109.98179626 159.35406494]
[101.13987732 171.34030151]
[99.80164337 186.28048706]
[98.57466888 201.23022461]
[97.45902252 216.18867493]
[96.34336853 231.14712524]
[95.22772217 246.10557556]
[94.11207581 261.06402588]
[104.79953766 250.53890991]
[119.61477661 248.19186401]
[133.03207397 254.89828491]
[140.04711914 268.15682983]
[138.04345703 283.02243042]
[127.76841736 293.95053101]
[113.05432892 296.86523438]
[99.38918304 290.67947388]
[91.86949921 277.69918823]
[88.98422241 292.41906738]
[86.09895325 307.13897705]
[83.32334137 321.87994385]
[80.65754700 336.64114380]
[85.81911469 351.59671021]
[75.94309235 362.74630737]
[73.27729797 377.50750732]
[70.61150360 392.26873779]
[67.94570923 407.02996826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[18 205]
[19 204]
[21 203]
[22 202]
[23 201]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[30 187]
[31 186]
[33 184]
[34 183]
[35 182]
[38 180]
[39 179]
[40 178]
[41 177]
[42 173]
[43 172]
[44 171]
[46 169]
[47 168]
[48 157]
[49 156]
[50 155]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 126]
[58 125]
[59 124]
[60 123]
[61 116]
[62 115]
[63 114]
[64 113]
[65 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
