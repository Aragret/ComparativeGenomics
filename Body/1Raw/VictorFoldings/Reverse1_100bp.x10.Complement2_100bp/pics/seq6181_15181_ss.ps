%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[118.93722534 482.03707886]
[122.30964661 467.35461426]
[128.86514282 453.79095459]
[138.27488708 442.02639771]
[150.06687927 432.65109253]
[163.64965820 426.13528442]
[160.32740784 411.50781250]
[157.00514221 396.88034058]
[153.68287659 382.25289917]
[150.25181580 367.65057373]
[139.72967529 357.10858154]
[143.99192810 341.87231445]
[140.45225525 327.29592896]
[136.91258240 312.71954346]
[123.58285522 309.74707031]
[112.78242493 301.28070068]
[106.65418243 288.92782593]
[106.44514465 275.07379150]
[112.25311279 262.42135620]
[122.99645233 253.46350098]
[119.67419434 238.83602905]
[116.35193634 224.20857239]
[113.02967834 209.58111572]
[109.70741272 194.95365906]
[106.38515472 180.32620239]
[96.02113342 169.62870789]
[100.50975037 154.45758057]
[91.62015533 166.53959656]
[76.81236267 168.93319702]
[64.56895447 160.26722717]
[61.90351486 145.50595093]
[70.34292603 133.10528564]
[85.05270386 130.16891479]
[97.60588837 138.37812805]
[95.60187531 123.51259613]
[93.59786224 108.64706421]
[88.56094360 94.51803589]
[80.70919037 81.73719788]
[66.89286804 74.02876282]
[66.82338715 59.13432312]
[58.97163391 46.35348129]
[50.93046188 33.69095612]
[42.70165253 21.14955521]
[35.37739563 15.69125271]
[34.44531250 8.35960865]
[26.40414047 -4.30291653]
[18.36296844 -16.96544075]
[11.12078762 -22.53218651]
[10.29796600 -29.87689590]
[2.44621015 -42.65773773]
[2.11854887 -27.66131783]
[-4.60609961 -14.25314426]
[-16.42930984 -5.02212667]
[-31.06820869 -1.75063038]
[-45.69625092 -5.07032919]
[-57.48899078 -14.34024239]
[-64.16943359 -27.77049255]
[-64.44769287 -42.76791382]
[-58.27004623 -56.43673325]
[-46.82929230 -66.13771820]
[-32.33446121 -69.99776459]
[-17.58428383 -67.27154541]
[-5.42594004 -58.48451233]
[-10.88129711 -72.45731354]
[-16.33665466 -86.43010712]
[-21.79201126 -100.40290833]
[-27.24736786 -114.37570190]
[-41.78435516 -110.60577393]
[-56.66519547 -108.58168030]
[-71.68098450 -108.33183289]
[-86.62092590 -109.85974884]
[-101.27528381 -113.14396667]
[-115.43833923 -118.13839722]
[-128.91125488 -124.77291107]
[-141.50489807 -132.95437622]
[-153.04248047 -142.56794739]
[-163.36203003 -153.47865295]
[-172.31866455 -165.53330994]
[-179.78665161 -178.56272888]
[-185.66116333 -192.38395691]
[-189.85971069 -206.80299377]
[-192.32337952 -221.61740112]
[-193.01756287 -236.61921692]
[-191.93251038 -251.59783936]
[-189.08348083 -266.34298706]
[-184.51045227 -280.64764404]
[-178.27761841 -294.31103516]
[-170.47250366 -307.14132690]
[-161.20463562 -318.95840454]
[-150.60417175 -329.59637451]
[-138.81988525 -338.90588379]
[-126.01722717 -346.75625610]
[-112.37592316 -353.03729248]
[-98.08748627 -357.66079712]
[-83.35248566 -360.56185913]
[-68.37779236 -361.69976807]
[-53.37361908 -361.05856323]
[-38.55060196 -358.64718628]
[-24.11683846 -354.49957275]
[-10.27495289 -348.67388916]
[2.78073740 -341.25195312]
[14.86695004 -332.33792114]
[25.81401253 -322.05697632]
[35.46824646 -310.55340576]
[43.69412231 -297.98870850]
[50.37615967 -284.53930664]
[55.42055511 -270.39395142]
[58.75648880 -255.75128174]
[60.33713531 -240.81683350]
[60.14030075 -225.80024719]
[58.16875076 -210.91235352]
[54.45016479 -196.36215210]
[49.03673935 -182.35389709]
[42.00447464 -169.08424377]
[33.45209122 -156.73948669]
[23.49965477 -145.49291992]
[12.28687763 -135.50242615]
[-0.02882862 -126.90825653]
[-13.27457047 -119.83106232]
[-7.81921291 -105.85826111]
[-2.36385608 -91.88546753]
[3.09150100 -77.91266632]
[8.54685783 -63.93986893]
[15.22705269 -50.50949478]
[23.07880783 -37.72864914]
[31.02549171 -25.00661469]
[39.06666565 -12.34408951]
[47.10783768 0.31843528]
[55.24305344 12.92074680]
[63.47186279 25.46214676]
[67.88289642 27.29294586]
[71.19066620 31.91416740]
[71.75247955 38.50172424]
[79.60423279 51.28256607]
[92.85894012 58.07682419]
[93.49003601 73.88543701]
[101.34178925 86.66628265]
[99.95079041 71.73091888]
[101.65270233 56.82778168]
[106.37516022 42.59056091]
[113.91735077 29.62462997]
[123.95858765 18.48130989]
[136.07189941 9.63441753]
[149.74224854 3.46012831]
[164.38833618 0.22097522]
[179.38740540 0.05468922]
[194.10171509 2.96834087]
[207.90557861 8.83804035]
[220.21205139 17.41420364]
[230.49786377 28.33217049]
[238.32566833 41.12770081]
[243.36259460 55.25672531]
[245.39450073 70.11846924]
[244.33496094 85.08100128]
[240.22904968 99.50811005]
[233.25132751 112.78634644]
[223.69853210 124.35111237]
[211.97680664 133.71066284]
[198.58459473 140.46704102]
[184.09132385 144.33294678]
[169.11326599 145.14401245]
[154.28729248 142.86573792]
[140.24382019 137.59500122]
[127.57996368 129.55592346]
[116.83420563 119.09032440]
[108.46339417 106.64305115]
[110.46740723 121.50858307]
[112.47142029 136.37411499]
[115.13721466 151.13533020]
[125.73886871 162.87907410]
[121.01261902 177.00393677]
[124.33487701 191.63139343]
[127.65713501 206.25885010]
[130.97940063 220.88632202]
[134.30165100 235.51377869]
[137.62391663 250.14123535]
[153.46827698 254.86862183]
[164.70222473 266.87252808]
[168.32876587 282.81195068]
[163.45039368 298.31542969]
[151.48895264 309.17987061]
[155.02862549 323.75625610]
[158.56829834 338.33264160]
[169.34362793 349.91723633]
[164.82820129 364.11090088]
[169.89430237 371.71170044]
[168.31034851 378.93063354]
[171.63259888 393.55807495]
[174.95486450 408.18554688]
[178.27711487 422.81301880]
[193.34190369 422.82226562]
[208.02680969 426.18399048]
[221.59524536 432.72964478]
[233.36662292 442.13082886]
[242.75050354 453.91601562]
[249.27619934 467.49404907]
[252.61636353 482.18386841]
[252.60346985 497.24865723]
[249.23815918 511.93273926]
[242.68923950 525.49957275]
[233.28520203 537.26867676]
[221.49774170 546.64971924]
[207.91812134 553.17211914]
[193.22749329 556.50872803]
[178.16271973 556.49218750]
[163.47944641 553.12329102]
[149.91418457 546.57110596]
[138.14735413 537.16424561]
[128.76919556 525.37451172]
[122.25008392 511.79327393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 185]
[12 183]
[13 182]
[14 181]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[27 169]
[34 168]
[35 167]
[36 166]
[37 137]
[38 136]
[40 134]
[41 133]
[42 130]
[43 129]
[45 128]
[46 127]
[47 126]
[49 125]
[50 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
