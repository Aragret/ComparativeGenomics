%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[211.00210571 178.21102905]
[216.50737000 164.24943542]
[203.02764893 157.66940308]
[189.54791260 151.08937073]
[176.06817627 144.50935364]
[162.58843994 137.92932129]
[145.17288208 140.08927917]
[135.00825500 124.73473358]
[121.43205261 118.35613251]
[107.85585022 111.97752380]
[93.90888214 112.96432495]
[85.76554871 101.59868622]
[72.18933868 95.22007751]
[58.61313629 88.84147644]
[45.03692627 82.46286774]
[40.72602844 82.98260498]
[36.86254501 82.18385315]
[33.80602264 80.36916351]
[31.78083038 77.92678833]
[30.85989189 75.27914429]
[17.68741608 68.10378265]
[4.51494122 60.92841339]
[-8.65753460 53.75304794]
[-21.83001137 46.57767868]
[-35.00248718 39.40231323]
[-48.17496109 32.22694778]
[-61.34743881 25.05158234]
[-74.51991272 17.87621498]
[-82.66321564 30.48172379]
[-91.72576904 42.44342804]
[-101.65687561 53.69443893]
[-112.40101624 64.17182922]
[-123.89808655 73.81700897]
[-136.08380127 82.57604218]
[-148.89001465 90.39993286]
[-162.24508667 97.24492645]
[-176.07435608 103.07275391]
[-190.30047607 107.85081482]
[-204.84387207 111.55239105]
[-219.62322998 114.15678406]
[-234.55589294 115.64942169]
[-249.55833435 116.02196503]
[-264.54666138 115.27232361]
[-279.43707275 113.40468597]
[-294.14627075 110.42951202]
[-308.59201050 106.36342621]
[-322.69348145 101.22917938]
[-336.37185669 95.05547333]
[-349.55059814 87.87683868]
[-362.15603638 79.73342133]
[-374.11767578 70.67076874]
[-385.36859131 60.73955917]
[-395.84588623 49.99533081]
[-405.49096680 38.49816895]
[-414.24987793 26.31237793]
[-422.07366943 13.50610161]
[-428.91854858 0.15095973]
[-434.74624634 -13.67835999]
[-439.52416992 -27.90451622]
[-443.22561646 -42.44795227]
[-445.82989502 -57.22732925]
[-447.32238770 -72.15999603]
[-447.69479370 -87.16245270]
[-446.94503784 -102.15077972]
[-445.07727051 -117.04116821]
[-442.10195923 -131.75033569]
[-438.03573608 -146.19604492]
[-432.90136719 -160.29747009]
[-426.72753906 -173.97578430]
[-419.54879761 -187.15446472]
[-411.40527344 -199.75982666]
[-402.34249878 -211.72137451]
[-392.41119385 -222.97221375]
[-381.66687012 -233.44941711]
[-370.16964722 -243.09439087]
[-357.98376465 -251.85319519]
[-345.17742920 -259.67687988]
[-331.82220459 -266.52163696]
[-317.99285889 -272.34921265]
[-303.76666260 -277.12701416]
[-289.22317505 -280.82833862]
[-274.44378662 -283.43246460]
[-259.51110840 -284.92486572]
[-244.50863647 -285.29711914]
[-229.52032471 -284.54721069]
[-214.62994385 -282.67932129]
[-199.92080688 -279.70388794]
[-185.47514343 -275.63754272]
[-171.37374878 -270.50305176]
[-157.69549561 -264.32910156]
[-144.51687622 -257.15023804]
[-131.91159058 -249.00660706]
[-119.95011902 -239.94374084]
[-108.69937134 -230.01232910]
[-98.22226715 -219.26791382]
[-88.57738495 -207.77058411]
[-79.81867981 -195.58464050]
[-71.99513245 -182.77822876]
[-65.15048218 -169.42295837]
[-59.32302475 -155.59353638]
[-54.54533768 -141.36729431]
[-50.84414673 -126.82379913]
[-48.24014664 -112.04437256]
[-46.74790192 -97.11167908]
[-46.37575912 -82.10921478]
[-47.12579727 -67.12090302]
[-48.99382401 -52.23054504]
[-51.96939087 -37.52142715]
[-56.03585434 -23.07579994]
[-61.17047882 -8.97445869]
[-67.34455109 4.70373964]
[-54.17207336 11.87910557]
[-40.99959564 19.05447197]
[-27.82711983 26.22983742]
[-14.65464401 33.40520477]
[-1.48216832 40.58057022]
[11.69030762 47.75593567]
[24.86278343 54.93130493]
[38.03525925 62.10667038]
[51.41553116 68.88665771]
[64.99173737 75.26526642]
[78.56794739 81.64386749]
[92.14414978 88.02247620]
[106.09111786 87.03567505]
[114.23445129 98.40131378]
[127.81066132 104.77992249]
[141.38687134 111.15852356]
[153.76246643 107.52435303]
[164.93881226 113.11660767]
[169.16847229 124.44959259]
[182.64820862 131.02961731]
[196.12792969 137.60964966]
[209.60766602 144.18966675]
[223.08740234 150.76969910]
[230.70846558 137.84091187]
[239.32040405 125.54991913]
[248.87016296 113.97251129]
[259.29882812 103.18006134]
[270.54211426 93.23911285]
[282.53070068 84.21094513]
[295.19070435 76.15123749]
[308.44400024 69.10967255]
[322.20895386 63.12965775]
[336.40063477 58.24807358]
[350.93161011 54.49501419]
[365.71221924 51.89361572]
[380.65139771 50.45991898]
[395.65698242 50.20276260]
[410.63650513 51.12372971]
[425.49758911 53.21714783]
[440.14859009 56.47010803]
[454.49923706 60.86254883]
[468.46099854 66.36740112]
[481.94778442 72.95070648]
[494.87649536 80.57189941]
[507.16741943 89.18397522]
[518.74475098 98.73384094]
[529.53704834 109.16261292]
[539.47790527 120.40600586]
[548.50592041 132.39469910]
[556.56555176 145.05476379]
[563.60693359 158.30815125]
[569.58685303 172.07315063]
[574.46826172 186.26489258]
[578.22119141 200.79588318]
[580.82244873 215.57653809]
[582.25598145 230.51571655]
[582.51300049 245.52131653]
[581.59185791 260.50082397]
[579.49829102 275.36187744]
[576.24517822 290.01287842]
[571.85260010 304.36346436]
[566.34759521 318.32516479]
[559.76416016 331.81188965]
[552.14282227 344.74053955]
[543.53063965 357.03134155]
[533.98065186 368.60855103]
[523.55175781 379.40078735]
[512.30828857 389.34152222]
[500.31948853 398.36944580]
[487.65933228 406.42889404]
[474.40588379 413.47018433]
[460.64080811 419.44992065]
[446.44900513 424.33120728]
[431.91796875 428.08398438]
[417.13729858 430.68505859]
[402.19812012 432.11846924]
[387.19250488 432.37530518]
[372.21301270 431.45404053]
[357.35198975 429.36032104]
[342.70101929 426.10705566]
[328.35049438 421.71432495]
[314.38882446 416.20919800]
[300.90216064 409.62561035]
[287.97360229 402.00415039]
[275.68289185 393.39181519]
[264.10577393 383.84170532]
[253.31362915 373.41271973]
[243.37303162 362.16912842]
[234.34523010 350.18026733]
[226.28590393 337.52001953]
[219.24475098 324.26647949]
[213.26515198 310.50137329]
[208.38400269 296.30953979]
[204.63139343 281.77844238]
[202.03044128 266.99774170]
[200.59721375 252.05854797]
[200.34051514 237.05294800]
[201.26193237 222.07345581]
[203.35580444 207.21243286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[8 127]
[9 126]
[10 125]
[12 123]
[13 122]
[14 121]
[15 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[27 112]
[28 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
