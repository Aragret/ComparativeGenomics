%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[212.78108215 643.97125244]
[221.35319519 631.57708740]
[232.55293274 621.49432373]
[245.77633667 614.26666260]
[241.80422974 599.80218506]
[237.83213806 585.33764648]
[233.86004639 570.87310791]
[229.05752563 565.25549316]
[229.93820190 556.16363525]
[226.18190002 541.64154053]
[222.20980835 527.17706299]
[218.02279663 512.77325439]
[204.88644409 505.84707642]
[200.43502808 491.29925537]
[207.78890991 477.56759644]
[203.60191345 463.16381836]
[199.41490173 448.76004028]
[195.22789001 434.35626221]
[178.92573547 434.11532593]
[163.47662354 428.84735107]
[150.39355469 419.05612183]
[140.96151733 405.68896484]
[136.11137390 390.04507446]
[136.32794189 373.64938354]
[141.60157776 358.10375977]
[151.42796326 344.93063354]
[164.85636902 335.42376709]
[160.24237061 321.15103149]
[155.62835693 306.87829590]
[151.01434326 292.60556030]
[140.39082336 286.82046509]
[136.43000793 274.96737671]
[141.77252197 263.22769165]
[137.37153625 248.88786316]
[132.97053528 234.54800415]
[121.83957672 224.65098572]
[125.18738556 209.18804932]
[120.78638458 194.84819031]
[107.54837799 188.11836243]
[102.88085938 173.63841248]
[110.02948761 159.79879761]
[105.62848663 145.45895386]
[95.09226990 139.51634216]
[91.30836487 127.60559845]
[96.82508850 115.94675446]
[86.97487640 109.73268890]
[83.80728149 98.52520752]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[81.00326538 59.14533234]
[69.88780212 47.88668823]
[73.97863007 33.56487274]
[70.00653839 19.10034943]
[66.03443909 4.63582659]
[62.06234360 -9.82869720]
[56.77217484 -17.27530289]
[58.14050293 -24.53818703]
[54.38420105 -39.06024551]
[50.62789917 -53.58230591]
[46.87160110 -68.10436249]
[41.69288635 -75.62890625]
[43.16919708 -82.87061310]
[36.23744202 -69.56832886]
[22.86246109 -62.77790070]
[8.03279209 -65.03199005]
[-2.72046542 -75.48988342]
[-5.38661194 -90.25103760]
[1.02875865 -103.80990601]
[14.13287163 -111.10937500]
[29.03821754 -109.42691803]
[40.18605804 -99.38903809]
[38.40359116 -114.28275299]
[34.27659225 -122.43172455]
[36.70716476 -129.41127014]
[35.14664078 -144.32987976]
[33.58611679 -159.24847412]
[32.02559662 -174.16708374]
[30.46507263 -189.08569336]
[28.90454865 -204.00428772]
[22.13108444 -190.62071228]
[10.27431393 -181.43284607]
[-4.37640762 -178.21472168]
[-18.99225426 -181.58769226]
[-30.75113678 -190.90052795]
[-37.38259506 -204.35502625]
[-37.60620499 -219.35336304]
[-31.37878418 -232.99957275]
[-19.90275574 -242.65881348]
[-5.39395618 -246.46600342]
[9.34619045 -243.68606567]
[21.47159195 -234.85574341]
[28.64137268 -221.67880249]
[29.75702095 -236.63725281]
[30.64983749 -251.61065674]
[31.31962204 -266.59570312]
[31.98940849 -281.58074951]
[32.32438278 -296.57699585]
[32.32438278 -311.57699585]
[32.32438278 -326.57699585]
[32.32438278 -341.57699585]
[18.98325539 -349.18685913]
[11.24828625 -362.45584106]
[11.20014381 -377.81463623]
[18.85177803 -391.13186646]
[32.14493942 -398.82519531]
[47.50382996 -398.82519531]
[60.79698944 -391.13186646]
[68.44862366 -377.81463623]
[68.40048218 -362.45584106]
[60.66551208 -349.18685913]
[47.32438278 -341.57699585]
[47.32438278 -326.57699585]
[47.32438278 -311.57699585]
[47.32438278 -296.57699585]
[49.54565048 -293.83868408]
[50.55095291 -289.88845825]
[49.78511810 -285.30950928]
[46.97444534 -280.91094971]
[46.30466080 -265.92590332]
[45.63487625 -250.94087219]
[48.13948059 -246.87443542]
[48.11615753 -241.19143677]
[44.71547318 -235.52160645]
[43.59982681 -220.56315613]
[43.82315445 -205.56481934]
[45.38367844 -190.64620972]
[46.94419861 -175.72761536]
[48.50472260 -160.80900574]
[50.06524658 -145.89039612]
[51.62577057 -130.97178650]
[53.29730988 -116.06521606]
[55.07977676 -101.17150116]
[57.74557114 -86.41028595]
[61.39365768 -71.86066437]
[65.14995575 -57.33860397]
[68.90625763 -42.81654739]
[72.66255951 -28.29448700]
[76.52686310 -13.80079365]
[80.49896240 0.66373020]
[84.47106171 15.12825394]
[88.44315338 29.59277725]
[99.27450562 39.81681824]
[95.46778870 55.17323303]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[115.64680481 95.57771301]
[111.22886658 111.75974274]
[124.81352997 124.19109344]
[119.96833038 141.05795288]
[124.36933136 155.39779663]
[138.05087280 162.84449768]
[142.30982971 177.44982910]
[135.12623596 190.44720459]
[139.52723694 204.78704834]
[150.97297668 215.70974731]
[147.31037903 230.14701843]
[151.71138000 244.48686218]
[156.11238098 258.82672119]
[169.88061523 271.05441284]
[165.28707886 287.99154663]
[169.90109253 302.26428223]
[174.51509094 316.53701782]
[179.12910461 330.80975342]
[192.88450623 330.32568359]
[206.28282166 333.42071533]
[218.40971375 339.87683105]
[228.43939209 349.24694824]
[235.69078064 360.88568115]
[239.67384338 373.99401855]
[240.12261963 387.67404175]
[237.01307678 400.99041748]
[230.56419373 413.03442383]
[221.22261047 422.98593140]
[209.63166809 430.16925049]
[213.81867981 444.57302856]
[218.00569153 458.97680664]
[222.19270325 473.38058472]
[235.76185608 481.03015137]
[239.80288696 495.69729614]
[232.42657471 508.58624268]
[236.61358643 522.99005127]
[241.11396790 527.83337402]
[242.31283569 533.38854980]
[240.70396423 537.88525391]
[244.46026611 552.40734863]
[248.32456970 566.90100098]
[252.29666138 581.36553955]
[256.26876831 595.83007812]
[260.24084473 610.29461670]
[275.30093384 609.75531006]
[290.07931519 612.70422363]
[303.77902222 618.98236084]
[315.66122437 628.25109863]
[325.08517456 640.01062012]
[331.54260254 653.62670898]
[334.68530273 668.36511230]
[334.34378052 683.43096924]
[330.53646851 698.01184082]
[323.46865845 711.32135010]
[313.52154541 722.64172363]
[301.23150635 731.36248779]
[287.26141357 737.01342773]
[272.36456299 739.28967285]
[257.34439087 738.06848145]
[243.01091003 733.41577148]
[230.13708496 725.58245850]
[219.41717529 714.99090576]
[211.42932129 702.21240234]
[206.60427856 687.93597412]
[205.20227051 672.93164062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[9 185]
[10 184]
[11 181]
[12 180]
[15 177]
[16 176]
[17 175]
[18 174]
[27 163]
[28 162]
[29 161]
[30 160]
[33 158]
[34 157]
[35 156]
[37 154]
[38 153]
[41 150]
[42 149]
[45 147]
[48 145]
[49 144]
[50 143]
[52 141]
[53 140]
[54 139]
[55 138]
[57 137]
[58 136]
[59 135]
[60 134]
[62 133]
[71 132]
[72 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[92 124]
[93 123]
[94 120]
[95 119]
[96 118]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
