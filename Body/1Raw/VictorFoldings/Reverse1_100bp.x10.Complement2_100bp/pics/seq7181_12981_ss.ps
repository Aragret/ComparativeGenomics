%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[-18.36176682 438.72488403]
[-12.34943676 452.50976562]
[-8.82235050 467.12930298]
[-7.88769436 482.13919067]
[-9.57386971 497.08337402]
[-13.82963657 511.50762939]
[-20.52566719 524.97369385]
[-29.45847511 537.07226562]
[-40.35660553 547.43579102]
[-52.88887405 555.74920654]
[-66.67443848 561.75994873]
[-81.29437256 565.28540039]
[-96.30438995 566.21838379]
[-111.24835968 564.53045654]
[-125.67214966 560.27307129]
[-139.13743591 553.57550049]
[-151.23501587 544.64135742]
[-161.59727478 533.74206543]
[-169.90928650 521.20880127]
[-175.91850281 507.42257690]
[-179.44226074 492.80224609]
[-180.37351990 477.79211426]
[-178.68395996 462.84835815]
[-174.42491150 448.42504883]
[-167.72583008 434.96051025]
[-158.79028320 422.86395264]
[-147.88980103 412.50292969]
[-135.35565186 404.19232178]
[-121.56871796 398.18469238]
[-106.94798279 394.66256714]
[-91.93775177 393.73303223]
[-76.99416351 395.42428589]
[-62.57134628 399.68496704]
[-55.89115143 386.25457764]
[-49.21095657 372.82421875]
[-42.53076172 359.39382935]
[-43.79037476 344.55258179]
[-30.71686172 335.64227295]
[-24.03666687 322.21188354]
[-17.35647202 308.78152466]
[-19.38671494 291.35037231]
[-3.95692921 281.30032349]
[2.52256656 267.77197266]
[2.57681775 260.38153076]
[9.20056343 254.09153748]
[15.37633228 240.42187500]
[21.03911972 226.53184509]
[26.70190620 212.64181519]
[32.36469269 198.75178528]
[38.02747726 184.86177063]
[43.69026566 170.97174072]
[31.89579010 180.23944092]
[17.57134438 184.69032288]
[2.60155702 183.73876953]
[-11.04404068 177.50999451]
[-21.57013702 166.82348633]
[-27.59183884 153.08525085]
[-28.31689072 138.10278320]
[-23.64990044 123.84729004]
[-14.20488834 112.19432068]
[-1.22450972 104.67702484]
[13.58344364 102.28443146]
[28.27073097 105.33132935]
[40.90498734 113.41683960]
[49.82395935 125.47718811]
[53.85420227 139.92561340]
[52.46482086 154.86347961]
[61.06338501 142.57264709]
[69.66194916 130.28181458]
[78.26051331 117.99097443]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[109.44864655 73.41046143]
[118.04721069 61.11962509]
[126.64577484 48.82878876]
[127.59869385 42.28635025]
[131.17565918 37.87020493]
[135.68783569 36.30520248]
[144.64854431 24.27582359]
[147.26538086 15.52425480]
[153.83328247 12.13537979]
[162.97209167 0.24074711]
[172.11088562 -11.65388584]
[181.24969482 -23.54851913]
[190.38848877 -35.44315338]
[199.52729797 -47.33778381]
[208.66609192 -59.23241806]
[206.07626343 -76.53305817]
[216.59303284 -90.08712006]
[233.32269287 -91.80670166]
[242.28340149 -103.83607483]
[251.24409485 -115.86545563]
[260.02468872 -128.02691650]
[257.47973633 -143.39443970]
[266.37500000 -155.73660278]
[281.04125977 -158.06813049]
[289.63983154 -170.35896301]
[298.23840332 -182.64979553]
[306.83697510 -194.94064331]
[295.63537598 -204.94366455]
[285.69549561 -216.20137024]
[277.15695190 -228.55567932]
[270.13952637 -241.83319092]
[264.74176025 -255.84748840]
[261.03945923 -270.40185547]
[259.08456421 -285.29193115]
[258.90451050 -300.30871582]
[260.50186157 -315.24139404]
[263.85415649 -329.88034058]
[268.91436768 -344.02001953]
[275.61145020 -357.46194458]
[283.85137939 -370.01742554]
[293.51846313 -381.51019287]
[304.47702026 -391.77890015]
[316.57321167 -400.67941284]
[329.63717651 -408.08673096]
[343.48556519 -413.89694214]
[357.92398071 -418.02841187]
[372.74966431 -420.42318726]
[387.75454712 -421.04763794]
[402.72796631 -419.89297485]
[417.45971680 -416.97543335]
[431.74298096 -412.33593750]
[445.37722778 -406.03967285]
[458.17111206 -398.17498779]
[469.94497681 -388.85229492]
[480.53353882 -378.20248413]
[489.78817749 -366.37506104]
[497.57894897 -353.53604126]
[503.79650879 -339.86569214]
[508.35351562 -325.55590820]
[511.18606567 -310.80758667]
[512.25433350 -295.82775879]
[511.54339600 -280.82672119]
[509.06317139 -266.01507568]
[504.84848022 -251.60075378]
[498.95852661 -237.78610229]
[491.47598267 -224.76506042]
[482.50585938 -212.72041321]
[472.17413330 -201.82125854]
[460.62579346 -192.22059631]
[448.02301025 -184.05322266]
[434.54266357 -177.43377686]
[420.37405396 -172.45520020]
[405.71603394 -169.18736267]
[390.77438354 -167.67616272]
[375.75888062 -167.94279480]
[360.88031006 -169.98353577]
[346.34756470 -173.76971436]
[332.36462402 -179.24819946]
[319.12780762 -186.34207153]
[310.52923584 -174.05123901]
[301.93066406 -161.76040649]
[293.33209229 -149.46955872]
[296.16940308 -134.89268494]
[287.62432861 -122.30554199]
[272.31552124 -119.42834473]
[272.24990845 -114.65291595]
[269.18368530 -109.86801147]
[263.27346802 -106.90476227]
[254.31277466 -94.87538147]
[245.35208130 -82.84600067]
[248.98155212 -70.48249054]
[244.76445007 -58.10113525]
[234.02825928 -50.29442596]
[220.56072998 -50.09361649]
[211.42192078 -38.19898224]
[202.28312683 -26.30434990]
[193.14431763 -14.40971661]
[184.00552368 -2.51508331]
[174.86671448 9.37954903]
[165.72792053 21.27418327]
[156.67791748 33.23651886]
[147.71722412 45.26589584]
[138.93661499 57.42735291]
[130.33805847 69.71819305]
[121.73948669 82.00902557]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[90.55135345 126.58953857]
[81.95278931 138.88037109]
[73.35422516 151.17121887]
[64.75566101 163.46205139]
[57.58029175 176.63452148]
[51.91750717 190.52455139]
[46.25471878 204.41458130]
[40.59193420 218.30461121]
[34.92914581 232.19462585]
[29.26635933 246.08465576]
[43.89375305 242.76211548]
[55.70620728 252.00689697]
[55.99601746 267.00408936]
[44.54954910 276.69833374]
[29.80471039 273.94338989]
[22.63093948 260.77172852]
[16.05091286 274.25146484]
[9.57141685 287.77981567]
[13.11335754 300.18212891]
[7.43806171 311.31652832]
[-3.92609668 315.46170044]
[-10.60629082 328.89208984]
[-17.28648567 342.32244873]
[-16.50468445 358.12432861]
[-29.10038567 366.07403564]
[-35.78057861 379.50439453]
[-42.46077347 392.93478394]
[-49.14096832 406.36514282]
[-37.04135895 415.29660034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 209]
[34 208]
[35 207]
[36 206]
[38 204]
[39 203]
[40 202]
[42 199]
[43 198]
[45 197]
[46 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[67 185]
[68 184]
[69 183]
[70 182]
[71 181]
[73 179]
[74 178]
[75 177]
[76 176]
[79 175]
[80 174]
[82 173]
[83 172]
[84 171]
[85 170]
[86 169]
[87 168]
[88 167]
[91 163]
[92 162]
[93 161]
[94 158]
[97 155]
[98 154]
[99 153]
[100 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
