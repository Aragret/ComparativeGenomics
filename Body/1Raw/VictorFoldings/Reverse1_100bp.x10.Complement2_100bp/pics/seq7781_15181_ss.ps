%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[127.69642639 466.43960571]
[113.38072968 461.54919434]
[101.27812958 452.47271729]
[92.57431793 440.09942627]
[88.12199402 425.64147949]
[88.35736084 410.51535034]
[93.25736237 396.20294189]
[102.34193420 384.10641479]
[114.72107697 375.41088867]
[129.18199158 370.96826172]
[129.40531921 355.96994019]
[129.62864685 340.97158813]
[129.85197449 325.97326660]
[130.07530212 310.97491455]
[130.29862976 295.97659302]
[130.52195740 280.97824097]
[122.97501373 268.13717651]
[130.91691589 254.45373535]
[131.14024353 239.45539856]
[131.36357117 224.45706177]
[131.58689880 209.45872498]
[128.92109680 194.69750977]
[123.46574402 180.72471619]
[111.62950897 171.68298340]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[68.48038483 66.21726227]
[71.80147552 48.98539352]
[66.13868713 35.09536743]
[60.47590256 21.20534134]
[54.81311417 7.31531382]
[49.15032959 -6.57471275]
[43.48754120 -20.46474075]
[25.79179955 -32.55083084]
[29.46724510 -52.85984039]
[23.18988419 -66.48315430]
[16.91252327 -80.10647583]
[10.63516235 -93.72978973]
[4.35780144 -107.35310364]
[3.07094312 -92.40840912]
[-3.46213603 -78.90586090]
[-14.38189697 -68.62194824]
[-28.25165749 -62.90970230]
[-43.24661255 -62.52066422]
[-57.39391708 -67.50601959]
[-68.83224487 -77.20986176]
[-76.05670166 -90.35548401]
[-78.11676788 -105.21334839]
[-74.74142456 -119.82864380]
[-66.37474060 -132.27848816]
[-54.11750412 -140.92488098]
[-39.58236313 -144.63024902]
[-24.68166924 -142.90708923]
[-11.37586212 -135.98208618]
[-1.41431904 -124.76434326]
[-4.51842928 -139.43965149]
[-7.62253904 -154.11494446]
[-10.72664928 -168.79025269]
[-13.83075905 -183.46556091]
[-17.68316078 -168.96868896]
[-25.25626755 -156.02079773]
[-36.00337219 -145.55657959]
[-49.14862823 -138.33148193]
[-63.74307632 -134.86706543]
[-78.73312378 -135.41343689]
[-93.03662109 -139.93115234]
[-105.62100220 -148.09408569]
[-115.57777405 -159.31294250]
[-122.18815613 -172.77781677]
[-124.97494507 -187.51666260]
[-123.73694611 -202.46548462]
[-118.56354523 -216.54512024]
[-109.82820129 -228.73912048]
[-98.16153717 -238.16722107]
[-84.40577698 -244.14877319]
[-69.55395508 -246.25198364]
[-54.67824936 -244.32501221]
[-40.85253525 -238.50695801]
[-29.07491302 -229.21784973]
[-20.19561577 -217.12826538]
[-14.85538387 -203.10983276]
[-13.29486084 -218.02842712]
[-11.73433781 -232.94703674]
[-10.17381477 -247.86564636]
[-8.61329174 -262.78424072]
[-7.05276918 -277.70285034]
[-21.52936935 -281.76931763]
[-35.11042786 -288.22396851]
[-47.40519333 -296.88116455]
[-58.05992126 -307.49176025]
[-66.76805115 -319.75048828]
[-73.27902985 -333.30465698]
[-77.40553284 -347.76425171]
[-79.02883148 -362.71325684]
[-78.10220337 -377.72155762]
[-74.65232849 -392.35736084]
[-68.77846527 -406.19952393]
[-60.64960480 -418.84982300]
[-50.49963760 -429.94424438]
[-38.62060165 -439.16357422]
[-25.35427284 -446.24261475]
[-11.08235550 -450.97763062]
[3.78452039 -453.23239136]
[18.81860542 -452.94204712]
[33.58733749 -450.11495972]
[47.66579437 -444.83242798]
[60.64890671 -437.24645996]
[72.16312408 -427.57531738]
[81.87716675 -416.09729004]
[89.51153564 -403.14257812]
[94.84657288 -389.08395386]
[97.72878265 -374.32586670]
[98.07524109 -359.29296875]
[95.87597656 -344.41778564]
[91.19425964 -330.12829590]
[84.16480255 -316.83563232]
[74.98986053 -304.92227173]
[63.93339920 -294.73095703]
[51.31354523 -286.55493164]
[37.49339676 -280.62942505]
[22.87058258 -277.12496948]
[7.86583567 -276.14233398]
[6.30531263 -261.22372437]
[4.74478960 -246.30511475]
[3.18426681 -231.38650513]
[1.62374377 -216.46791077]
[0.06322072 -201.54930115]
[0.84454286 -186.56967163]
[3.94865298 -171.89436340]
[7.05276299 -157.21905518]
[10.15687370 -142.54376221]
[13.26098347 -127.86845398]
[17.98111725 -113.63047028]
[24.25847816 -100.00714874]
[30.53583908 -86.38383484]
[36.81319809 -72.76052094]
[43.09056091 -59.13720322]
[51.80955887 -57.46027756]
[58.88700485 -51.87417603]
[62.65700150 -43.53262711]
[62.15870285 -34.25450897]
[57.37756729 -26.12752724]
[63.04035568 -12.23749924]
[68.70314026 1.65252745]
[74.36592865 15.54255390]
[80.02871704 29.43258095]
[85.69149780 43.32260895]
[96.71588135 48.30152893]
[101.54731750 59.82719421]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[140.01721191 160.59967041]
[137.43853760 175.26936340]
[142.89390564 189.24215698]
[144.17539978 174.29699707]
[148.70666504 159.99778748]
[156.26661682 147.04219055]
[166.48638916 136.06237793]
[178.86730957 127.59404755]
[192.80531311 122.05040741]
[207.62033081 119.70192719]
[222.58950806 120.66320801]
[236.98243713 124.88734436]
[250.09689331 132.16822815]
[261.29296875 142.15060425]
[270.02438354 154.34742737]
[275.86511230 168.16355896]
[278.53021240 182.92491150]
[277.88958740 197.91122437]
[273.97451782 212.39129639]
[266.97604370 225.65859985]
[257.23562622 237.06579590]
[245.22850037 246.05630493]
[231.54055786 252.19145203]
[216.83964539 255.17192078]
[201.84304810 254.85224915]
[187.28250122 251.24804688]
[173.86842346 244.53518677]
[162.25532532 235.04118347]
[153.00984192 223.22927856]
[146.58523560 209.68205261]
[146.36190796 224.68038940]
[146.13858032 239.67872620]
[145.91525269 254.67706299]
[153.44622803 268.59091187]
[145.52029419 281.20156860]
[145.29696655 296.19992065]
[145.07363892 311.19824219]
[144.85031128 326.19659424]
[144.62698364 341.19491577]
[144.40365601 356.19326782]
[144.18032837 371.19158936]
[158.50256348 376.06280518]
[170.61732483 385.12304688]
[179.33770752 397.48468018]
[183.80940247 411.93664551]
[183.59429932 427.06307983]
[178.71348572 441.38204956]
[169.64514160 453.49072266]
[157.27766418 462.20281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[18 194]
[19 193]
[20 192]
[21 191]
[22 164]
[23 163]
[25 161]
[26 160]
[27 159]
[28 158]
[30 156]
[31 155]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
