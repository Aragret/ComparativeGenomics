%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[80.54123688 544.02856445]
[68.70100403 553.26196289]
[55.93185043 561.16107178]
[42.38349915 567.63330078]
[28.21478844 572.60272217]
[13.59184456 576.01104736]
[-1.31388819 577.81835938]
[-16.32764816 578.00341797]
[-31.27340508 576.56414795]
[-45.97592926 573.51733398]
[-60.26284027 568.89874268]
[-73.96663666 562.76251221]
[-86.92663574 555.18060303]
[-98.99089813 546.24188232]
[-110.01797485 536.05114746]
[-119.87857819 524.72790527]
[-128.45710754 512.40490723]
[-135.65295410 499.22662354]
[-141.38179016 485.34759521]
[-145.57641602 470.93051147]
[-148.18766785 456.14440918]
[-149.18493652 441.16265869]
[-148.55650330 426.16091919]
[-146.30976868 411.31506348]
[-142.47105408 396.79916382]
[-137.08535767 382.78338623]
[-130.21585083 369.43209839]
[-121.94305420 356.90182495]
[-112.36397552 345.33944702]
[-101.59091187 334.88055420]
[-89.75018311 325.64776611]
[-76.98060608 317.74932861]
[-63.43190384 311.27786255]
[-49.26292801 306.30923462]
[-34.63980103 302.90167236]
[-19.73397064 301.09518433]
[-4.72020102 300.91088867]
[10.22547913 302.35098267]
[24.92783928 305.39859009]
[29.54184914 291.12585449]
[34.15585709 276.85311890]
[30.70861435 262.36291504]
[42.31571579 251.61184692]
[46.92972565 237.33911133]
[51.54373550 223.06637573]
[44.55444336 209.96350098]
[49.03038406 195.42318726]
[62.82127762 188.18101501]
[67.43528748 173.90829468]
[72.04929352 159.63555908]
[71.11569214 152.30410767]
[76.83970642 145.18557739]
[81.66570282 130.98312378]
[86.49170685 116.78067017]
[91.31770325 102.57820892]
[90.12055969 98.91225433]
[90.54512024 94.73641968]
[92.78288269 90.78680420]
[96.68931580 87.85771179]
[102.14467621 73.88491058]
[107.60003662 59.91211319]
[113.05538940 45.93931580]
[118.51074982 31.96651840]
[116.32228851 16.29740143]
[128.15852356 7.25567818]
[115.20457458 14.81842613]
[100.21411133 14.28356171]
[87.83209991 5.81681776]
[81.89523315 -7.95829153]
[84.24312592 -22.77339935]
[94.14823914 -34.03788376]
[108.54138947 -38.26132202]
[122.96268463 -34.13503265]
[132.94352722 -22.93759727]
[135.39123535 -8.13840103]
[142.66445923 -21.25709534]
[149.93769836 -34.37578964]
[157.21092224 -47.49448395]
[164.48414612 -60.61317825]
[154.44401550 -76.10583496]
[153.66186523 -94.46556091]
[162.26789856 -110.60575104]
[177.80328369 -120.09864044]
[195.92193604 -120.38983154]
[202.60212708 -133.82020569]
[209.28233337 -147.25057983]
[215.96252441 -160.68096924]
[222.64271545 -174.11134338]
[229.32290649 -187.54171753]
[228.54110718 -203.34359741]
[241.13681030 -211.29328918]
[228.45274353 -219.32563782]
[216.66181946 -228.61961365]
[205.88902283 -239.07670593]
[196.24855042 -250.58605957]
[187.84259033 -263.02566528]
[180.76025391 -276.26367188]
[175.07662964 -290.15972900]
[170.85194397 -304.56652832]
[168.13101196 -319.33139038]
[166.94264221 -334.29772949]
[167.29945374 -349.30694580]
[169.19766235 -364.19992065]
[172.61715698 -378.81878662]
[177.52165222 -393.00857544]
[183.85919189 -406.61886597]
[191.56259155 -419.50534058]
[200.55017090 -431.53146362]
[210.72666931 -442.56970215]
[221.98420715 -452.50308228]
[234.20346069 -461.22625732]
[247.25488281 -468.64678955]
[261.00012207 -474.68603516]
[275.29348755 -479.27993774]
[289.98342896 -482.37979126]
[304.91427612 -483.95278931]
[319.92770386 -483.98220825]
[334.86459351 -482.46774292]
[349.56658936 -479.42547607]
[363.87783813 -474.88760376]
[377.64663696 -468.90231323]
[390.72705078 -461.53295898]
[402.98037720 -452.85772705]
[414.27676392 -442.96856689]
[424.49645996 -431.97027588]
[433.53109741 -419.97949219]
[441.28494263 -407.12326050]
[447.67575073 -393.53793335]
[452.63583374 -379.36749268]
[456.11257935 -364.76214600]
[458.06915283 -349.87670898]
[458.48477173 -334.86901855]
[457.35507202 -319.89810181]
[454.69201660 -305.12271118]
[450.52383423 -290.69946289]
[444.89468384 -276.78125000]
[437.86428833 -263.51559448]
[429.50714111 -251.04313660]
[419.91186523 -239.49607849]
[409.18011475 -228.99685669]
[397.42572021 -219.65673828]
[384.77322388 -211.57473755]
[371.35678101 -204.83653259]
[357.31863403 -199.51356506]
[342.80755615 -195.66224670]
[327.97738647 -193.32341003]
[312.98532104 -192.52183533]
[297.99032593 -193.26603699]
[283.15133667 -195.54811096]
[268.62561035 -199.34387207]
[254.56718445 -204.61308289]
[255.82679749 -189.77183533]
[242.75328064 -180.86152649]
[236.07308960 -167.43113708]
[229.39289856 -154.00076294]
[222.71270752 -140.57038879]
[216.03251648 -127.14001465]
[209.35231018 -113.70964050]
[217.16775513 -104.90039062]
[221.56793213 -93.93961334]
[222.01576233 -82.10244751]
[218.43548584 -70.77453613]
[211.22422791 -61.28975677]
[201.20805359 -54.77319717]
[189.54743958 -52.00771713]
[177.60284424 -53.33994675]
[170.32962036 -40.22125244]
[163.05638123 -27.10256004]
[155.78315735 -13.98386574]
[148.50993347 -0.86517179]
[142.13131714 12.71103477]
[144.70999146 27.38072395]
[132.48355103 37.42187500]
[127.02819061 51.39467239]
[121.57283020 65.36746979]
[116.11747742 79.34027100]
[110.66211700 93.31306458]
[105.52015686 107.40420532]
[100.69416046 121.60666656]
[95.86816406 135.80911255]
[91.04216766 150.01158142]
[86.32202911 164.24955750]
[81.70802307 178.52229309]
[77.09400940 192.79502869]
[84.03578949 206.73954773]
[79.15321350 221.14839172]
[65.81646729 227.68038940]
[61.20245743 241.95312500]
[56.58845139 256.22586060]
[59.70566940 271.73693848]
[48.42859268 281.46713257]
[43.81458282 295.73986816]
[39.20057297 310.01260376]
[52.90469360 316.14810181]
[65.86510468 323.72930908]
[77.92984772 332.66738892]
[88.95747375 342.85751343]
[98.81868744 354.18023682]
[107.39787292 366.50277710]
[114.59444427 379.68063354]
[120.32401276 393.55938721]
[124.51942444 407.97622681]
[127.13146973 422.76220703]
[128.12953186 437.74389648]
[127.50192261 452.74566650]
[125.25597382 467.59164429]
[121.41803741 482.10775757]
[116.03310394 496.12380981]
[109.16431427 509.47546387]
[100.89219666 522.00622559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 193]
[40 192]
[41 191]
[43 189]
[44 188]
[45 187]
[48 184]
[49 183]
[50 182]
[52 181]
[53 180]
[54 179]
[55 178]
[59 177]
[60 176]
[61 175]
[62 174]
[63 173]
[65 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[91 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
