%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[245.43383789 746.86145020]
[257.91088867 737.90490723]
[256.35037231 722.98632812]
[254.78984070 708.06774902]
[253.22932434 693.14910889]
[251.66879272 678.23052979]
[250.10827637 663.31188965]
[248.54774475 648.39331055]
[246.98722839 633.47467041]
[245.42669678 618.55609131]
[243.86618042 603.63751221]
[241.42045593 588.83819580]
[238.09819031 574.21075439]
[234.77593994 559.58331299]
[231.45367432 544.95581055]
[228.13140869 530.32836914]
[224.80915833 515.70092773]
[220.72949219 501.26635742]
[215.90348816 487.06390381]
[211.07749939 472.86145020]
[200.36900330 467.23516846]
[196.23216248 455.44238281]
[201.39930725 443.62445068]
[196.78529358 429.35171509]
[192.17129517 415.07897949]
[187.55728149 400.80624390]
[182.83714294 386.56826782]
[178.01115417 372.36581421]
[173.18515015 358.16336060]
[168.35914612 343.96087646]
[156.93846130 334.39965820]
[159.82438660 318.84390259]
[154.99839783 304.64144897]
[150.17239380 290.43899536]
[145.04402161 285.11718750]
[145.38198853 275.98901367]
[140.76797485 261.71627808]
[136.15396118 247.44354248]
[123.58705139 246.14324951]
[112.40416718 240.16462708]
[104.28327942 230.36466980]
[100.45802307 218.17669678]
[101.53037262 205.40074158]
[107.37624359 193.93771362]
[117.15865326 185.50659180]
[112.97164154 171.10281372]
[108.78462982 156.69902039]
[95.64828491 149.77284241]
[91.19687653 135.22500610]
[98.55075836 121.49336243]
[94.36374664 107.08957672]
[91.28135681 104.77198029]
[89.23548889 101.10697174]
[88.80502319 96.58792877]
[90.32684326 91.94854736]
[86.78717804 77.37216949]
[83.24750519 62.79579544]
[79.64324951 59.02002335]
[78.01094818 54.67388916]
[78.23764038 50.60404205]
[79.89070892 47.48960876]
[77.00543976 32.76971817]
[74.12017059 18.04982567]
[71.23489380 3.32993412]
[68.34962463 -11.38995743]
[63.35789871 2.75510144]
[53.39036179 13.96439362]
[39.92564011 20.57508850]
[24.96114540 21.60652924]
[10.71676922 16.90570450]
[-0.69441968 7.16995764]
[-7.57963848 -6.15647316]
[-8.91750622 -21.09669113]
[-4.50955772 -35.43440247]
[4.99031353 -47.04269409]
[18.17285728 -54.19954681]
[33.08252335 -55.84328079]
[47.50754929 -51.73005676]
[59.30807114 -42.47005463]
[66.73294067 -29.43874359]
[66.95626831 -44.43708038]
[57.61682892 -60.30706406]
[67.19752502 -75.01003265]
[67.19752502 -90.01003265]
[64.06811523 -98.59167480]
[67.31085205 -105.23294067]
[67.42251587 -120.23252869]
[67.31085205 -135.23211670]
[67.08752441 -150.23045349]
[66.86419678 -165.22879028]
[66.52922058 -180.22505188]
[66.08261108 -195.21839905]
[65.63600922 -210.21174622]
[62.89113235 -214.65165710]
[62.19355774 -219.24150085]
[63.25756454 -223.17633057]
[65.51935577 -225.88125610]
[65.74268341 -240.87959290]
[65.96601105 -255.87794495]
[52.12978363 -262.24023438]
[42.08241272 -273.68444824]
[37.56467056 -288.22784424]
[39.35928345 -303.35064697]
[47.15531540 -316.43273926]
[59.60206604 -325.20761108]
[74.54305267 -328.15493774]
[89.38967133 -324.76406860]
[101.56964111 -315.62252808]
[108.97271729 -302.31408691]
[110.31626892 -287.14456177]
[105.36751556 -272.74212646]
[94.98386383 -261.60211182]
[80.96434784 -255.65461731]
[80.74102020 -240.65626526]
[80.51769257 -225.65792847]
[80.62935638 -210.65835571]
[81.07596588 -195.66499329]
[81.52256775 -180.67164612]
[84.86383057 -174.07939148]
[81.86253357 -165.45211792]
[82.08586121 -150.45378113]
[82.30918884 -135.45544434]
[85.55192566 -128.81416321]
[82.42251587 -120.23252869]
[85.56601715 -113.54371643]
[82.30918884 -105.00961304]
[82.19752502 -90.01003265]
[82.19752502 -75.01003265]
[90.52648163 -66.23762512]
[90.64923859 -53.74087906]
[81.95460510 -44.21375275]
[81.73127747 -29.21541405]
[83.06951141 -14.27523041]
[85.95478821 0.44466144]
[88.84005737 15.16455269]
[91.72533417 29.88444328]
[94.61060333 44.60433578]
[97.82387543 59.25612259]
[101.36354828 73.83249664]
[104.90322113 88.40887451]
[108.76752472 102.90256500]
[112.95453644 117.30635071]
[126.52368927 124.95591736]
[130.56472778 139.62304688]
[123.18841553 152.51200867]
[127.37542725 166.91580200]
[131.56243896 181.31958008]
[148.72290039 185.10792542]
[161.53564453 197.00515747]
[166.53228760 213.66761780]
[162.42271423 230.47906494]
[150.42669678 242.82952881]
[155.04071045 257.10226440]
[159.65472412 271.37500000]
[164.37484741 285.61297607]
[169.20085144 299.81546021]
[174.02685547 314.01791382]
[185.79273987 324.59497070]
[182.56159973 339.13488770]
[187.38760376 353.33734131]
[192.21360779 367.53979492]
[197.03959656 381.74224854]
[202.76362610 388.86077881]
[201.83001709 396.19223022]
[206.44401550 410.46496582]
[211.05802917 424.73770142]
[215.67204285 439.01043701]
[229.62080383 451.03179932]
[225.27995300 468.03546143]
[230.10594177 482.23791504]
[234.93194580 496.44036865]
[241.48324585 482.94665527]
[255.12359619 476.70639038]
[269.61679077 480.57254028]
[278.33676147 492.77752686]
[277.29684448 507.74145508]
[266.97244263 518.62292480]
[252.08380127 520.44720459]
[239.43661499 512.37866211]
[242.75888062 527.00610352]
[246.08113098 541.63360596]
[249.40339661 556.26104736]
[252.72564697 570.88848877]
[256.04791260 585.51593018]
[263.17694092 572.31835938]
[276.65155029 565.72778320]
[291.44601440 568.20245361]
[302.04238892 578.81927490]
[304.48846436 593.61846924]
[297.87191772 607.08032227]
[284.66058350 614.18389893]
[269.78195190 612.27972412]
[258.78479004 602.07696533]
[260.34530640 616.99554443]
[261.90582275 631.91418457]
[263.46633911 646.83276367]
[265.02688599 661.75140381]
[266.58740234 676.66998291]
[268.14791870 691.58862305]
[269.70843506 706.50720215]
[271.26898193 721.42578125]
[272.82949829 736.34442139]
[286.88992310 742.52502441]
[295.96334839 754.91729736]
[297.60906982 770.18774414]
[291.38442993 784.22875977]
[278.96377563 793.26330566]
[263.68823242 794.86114502]
[249.66682434 788.59252930]
[240.67124939 776.14361572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 171]
[19 170]
[20 169]
[23 167]
[24 166]
[25 165]
[26 164]
[27 162]
[28 161]
[29 160]
[30 159]
[32 157]
[33 156]
[34 155]
[36 154]
[37 153]
[38 152]
[45 147]
[46 146]
[47 145]
[50 142]
[51 141]
[55 140]
[56 139]
[57 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[80 132]
[81 131]
[83 128]
[84 127]
[86 126]
[87 124]
[88 122]
[89 121]
[90 120]
[91 118]
[92 117]
[93 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
