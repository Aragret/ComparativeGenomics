%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[14.05727005 432.81942749]
[20.12338448 446.57843018]
[23.77679825 461.16473389]
[24.91238976 476.15869141]
[23.49748993 491.12887573]
[19.57280731 505.64453125]
[13.25126076 519.28808594]
[4.71473694 531.66693115]
[-5.79115343 542.42492676]
[-17.96413422 551.25250244]
[-31.45396423 557.89575195]
[-45.87251663 562.16345215]
[-60.80493546 563.93286133]
[-75.82159424 563.15307617]
[-90.49041748 559.84649658]
[-104.38937378 554.10827637]
[-117.11855316 546.10351562]
[-128.31170654 536.06256104]
[-137.64678955 524.27423096]
[-144.85522461 511.07778931]
[-149.72958374 496.85284424]
[-152.12965393 482.00872803]
[-151.98634338 466.97253418]
[-149.30381775 452.17684937]
[-144.15922546 438.04742432]
[-136.70060730 424.99072266]
[-127.14253998 413.38247681]
[-115.76004791 403.55664062]
[-102.88062286 395.79595947]
[-88.87483215 390.32366943]
[-74.14564514 387.29727173]
[-59.11685562 386.80383301]
[-44.22087097 388.85751343]
[-29.88627625 393.39923096]
[-23.00686455 380.06982422]
[-22.73259544 372.68426514]
[-15.92451000 366.59426880]
[-8.84740448 353.36874390]
[-1.77029932 340.14321899]
[5.30680609 326.91769409]
[12.38391113 313.69216919]
[19.46101761 300.46664429]
[18.64384079 285.59448242]
[31.97685242 277.07733154]
[39.05395889 263.85180664]
[46.13106155 250.62628174]
[53.20816803 237.40075684]
[59.07712936 223.59658813]
[63.69113922 209.32385254]
[60.24389267 194.83364868]
[71.85099792 184.08258057]
[76.46500397 169.80984497]
[81.07901764 155.53710938]
[85.69302368 141.26437378]
[90.09402466 126.92453003]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[92.57087708 57.69159317]
[91.67806244 42.71818542]
[81.18412781 27.58679581]
[89.64472961 12.21197319]
[88.52908325 -2.74647975]
[87.41343689 -17.70493317]
[86.29778290 -32.66338730]
[85.18213654 -47.62184143]
[84.06649017 -62.58029175]
[82.95083618 -77.53874969]
[81.83518982 -92.49720001]
[80.71954346 -107.45565033]
[71.97726440 -120.64212799]
[78.74652100 -133.90962219]
[77.63087463 -148.86807251]
[75.40575409 -163.70211792]
[72.08349609 -178.32957458]
[68.76123810 -192.95704651]
[58.28326035 -200.47866821]
[55.81727982 -212.73030090]
[62.15057755 -223.03642273]
[59.04646683 -237.71171570]
[53.33522797 -223.84153748]
[41.89184189 -214.14366150]
[27.27278519 -210.78460693]
[12.74399853 -214.51480103]
[1.55124724 -224.50091553]
[-3.80497956 -238.51200867]
[-2.12808657 -253.41798401]
[6.20730352 -265.88879395]
[19.33904457 -273.13845825]
[34.33346939 -273.54733276]
[47.84078979 -267.02410889]
[56.84343719 -255.02607727]
[56.17365265 -270.01110840]
[55.50386810 -284.99615479]
[54.83408356 -299.98120117]
[40.44120026 -304.79879761]
[28.76305199 -314.49340820]
[21.37901497 -327.75387573]
[19.28771782 -342.78689575]
[22.77199364 -357.55929565]
[31.36062050 -370.07327271]
[43.89205933 -378.63644409]
[58.67153168 -382.09063721]
[73.70024109 -379.96878052]
[86.94567108 -372.55776978]
[96.61649323 -360.85992432]
[101.40480804 -346.45727539]
[100.66302490 -331.29763794]
[94.49147797 -317.43127441]
[83.72480774 -306.73345947]
[69.81912231 -300.65097046]
[70.48890686 -285.66595459]
[71.15869141 -270.68090820]
[71.82847595 -255.69586182]
[73.72177124 -240.81582642]
[76.82588196 -226.14053345]
[89.24182892 -213.73846436]
[83.38869476 -196.27929688]
[86.71095276 -181.65184021]
[90.03321838 -167.02438354]
[95.98027802 -180.79508972]
[107.95668793 -189.82644653]
[122.83184814 -191.75769043]
[136.71742249 -186.08398438]
[145.98374939 -174.28843689]
[148.20864868 -159.45436096]
[142.81051636 -145.45935059]
[131.20042419 -135.96166992]
[116.41323090 -133.44400024]
[102.31425476 -138.56443787]
[92.58932495 -149.98371887]
[93.70497131 -135.02526855]
[102.36745453 -122.90872192]
[95.67799377 -108.57130432]
[96.79364777 -93.61284637]
[97.90929413 -78.65439606]
[99.02494049 -63.69594193]
[100.14058685 -48.73748779]
[101.25624084 -33.77903366]
[102.37188721 -18.82058144]
[103.48753357 -3.86212850]
[104.60318756 11.09632492]
[113.56153107 19.22495079]
[114.61341858 31.67795372]
[106.65146637 41.82537079]
[107.54428101 56.79877853]
[119.30134583 47.48366165]
[133.94831848 50.71885300]
[140.68797302 64.11948395]
[134.55210876 77.80711365]
[120.06384277 81.69172668]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.51879883 99.15550995]
[125.39059448 88.82089996]
[138.89662170 82.29501343]
[153.74957275 80.19985199]
[168.53376770 82.73511505]
[181.84007263 89.65915680]
[192.40020752 100.31202698]
[199.20764160 113.67835999]
[201.61354065 128.48416138]
[199.38859558 143.31822205]
[192.74487305 156.76667786]
[182.31561279 167.54769897]
[169.09484863 174.63369751]
[154.34271240 177.34928894]
[139.46527100 175.43565369]
[125.88056946 169.07514954]
[114.88339996 158.87406921]
[107.52194977 145.80467224]
[104.49780273 131.11154175]
[105.70047760 137.61270142]
[103.73451996 142.94487000]
[99.96575928 145.87838745]
[95.35174561 160.15112305]
[90.73773956 174.42384338]
[86.12372589 188.69657898]
[89.24095154 204.20765686]
[77.96387482 213.93786621]
[73.34986115 228.21058655]
[84.96249390 218.71603394]
[99.52412415 215.11616516]
[114.22311401 218.10606384]
[126.22133636 227.10842896]
[133.20211792 240.38505554]
[133.81756592 255.37242126]
[127.94886780 269.17672729]
[116.72915649 279.13253784]
[102.32479858 283.31756592]
[87.51704407 280.92373657]
[75.16503906 272.41326904]
[67.65376282 259.42941284]
[66.43369293 244.47785950]
[59.35659027 257.70339966]
[52.27948380 270.92892456]
[45.20237732 284.15444946]
[45.51335144 299.97259521]
[32.68654633 307.54373169]
[25.60943985 320.76928711]
[18.53233337 333.99481201]
[11.45522785 347.22033691]
[4.37812281 360.44586182]
[-2.69898272 373.67138672]
[-9.67743492 386.94921875]
[-16.55684662 400.27865601]
[-4.55053854 409.33163452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 209]
[35 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[44 200]
[45 199]
[46 198]
[47 197]
[48 184]
[49 183]
[51 181]
[52 180]
[53 179]
[54 178]
[55 175]
[56 156]
[58 154]
[59 153]
[60 147]
[61 146]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[73 133]
[74 132]
[75 121]
[76 120]
[77 119]
[80 117]
[81 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
