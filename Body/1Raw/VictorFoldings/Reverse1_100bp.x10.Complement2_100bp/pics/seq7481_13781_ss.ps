%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[8.20585537 668.90509033]
[1.96311355 683.11102295]
[-11.45433617 690.90533447]
[-26.88721085 689.29107666]
[-38.40125275 678.88879395]
[-41.56908417 663.69854736]
[-35.17259979 649.56121826]
[-21.67138672 641.91284180]
[-20.11086464 626.99426270]
[-18.55034065 612.07568359]
[-16.98981857 597.15704346]
[-15.42929554 582.23846436]
[-13.86877251 567.31982422]
[-15.52717686 565.05981445]
[-16.39026833 562.00665283]
[-16.15148926 558.46002197]
[-14.61830139 554.82495117]
[-11.74542427 551.56909180]
[-9.29969692 536.76983643]
[-6.85396957 521.97058105]
[-8.85760784 517.63531494]
[-8.15913391 511.99536133]
[-4.10879469 506.76980591]
[-1.22352207 492.04992676]
[1.66175056 477.33001709]
[4.54702330 462.61013794]
[7.43229580 447.89022827]
[2.28759098 433.91235352]
[12.53488922 421.85815430]
[15.42016220 407.13827515]
[18.30543518 392.41839600]
[21.19070816 377.69848633]
[16.04600334 363.72061157]
[26.29330063 351.66641235]
[24.41962814 347.27343750]
[25.28571510 341.65676880]
[29.48984337 336.55413818]
[32.81210327 321.92666626]
[36.13436127 307.29922485]
[39.45662308 292.67175293]
[42.77888107 278.04428101]
[29.54241943 285.10092163]
[15.15346813 280.86322021]
[7.85467434 267.75872803]
[11.82711697 253.29431152]
[24.79520035 245.75581360]
[39.33021927 249.46165466]
[47.10570526 262.28802490]
[51.71971130 248.01528931]
[56.33372116 233.74255371]
[51.74018478 216.80541992]
[65.50842285 204.57769775]
[69.90942383 190.23785400]
[73.88152313 175.77333069]
[77.42119598 161.19696045]
[80.96086121 146.62057495]
[84.50053406 132.04420471]
[88.04020691 117.46782684]
[80.20503235 107.50472260]
[79.46580505 94.85137177]
[86.08751678 84.04367065]
[97.69647217 78.95587158]
[101.45277405 64.43380737]
[97.41784668 49.13577271]
[108.09577942 38.75160217]
[111.85208130 24.22954369]
[107.81715393 8.93150711]
[118.49508667 -1.45266461]
[122.25138855 -15.97472382]
[126.00768280 -30.49678230]
[128.89295959 -45.21667480]
[130.89697266 -60.08220291]
[132.90098572 -74.94773102]
[134.90499878 -89.81326294]
[136.90901184 -104.67878723]
[131.08479309 -119.38895416]
[140.45310974 -130.96841431]
[133.06568909 -147.83576965]
[144.32566833 -161.29608154]
[145.99720764 -176.20265198]
[147.55772400 -191.12126160]
[149.11825562 -206.03985596]
[150.67877197 -220.95846558]
[144.41915894 -235.48869324]
[153.43855286 -247.34196472]
[153.21522522 -262.34030151]
[143.70356750 -274.98303223]
[149.67112732 -288.62994385]
[147.66711426 -303.49545288]
[145.66310120 -318.36099243]
[143.65908813 -333.22650146]
[128.74635315 -335.69668579]
[115.22499847 -342.45422363]
[104.29731750 -352.89822388]
[96.93499756 -366.10003662]
[93.79270172 -380.88574219]
[95.14982605 -395.94064331]
[100.88570404 -409.92602539]
[110.49031067 -421.59832764]
[123.10959625 -429.91967773]
[137.62147522 -434.15014648]
[152.73554993 -433.91354370]
[167.10791016 -429.23092651]
[179.46054077 -420.51864624]
[188.69508362 -408.55142212]
[193.99038696 -394.39334106]
[194.87562561 -379.30334473]
[191.27204895 -364.62322998]
[183.50010681 -351.65835571]
[172.25086975 -341.56152344]
[158.52462769 -335.23052979]
[160.52864075 -320.36499023]
[162.53265381 -305.49948120]
[164.53666687 -290.63394165]
[173.90496826 -279.05447388]
[168.08074951 -264.34429932]
[173.51989746 -278.32342529]
[183.36003113 -289.64471436]
[196.44514465 -296.97817993]
[211.23802185 -299.46228027]
[226.00080872 -296.80517578]
[238.99919128 -289.31903076]
[248.70611572 -277.88333130]
[253.98123169 -263.84149170]
[254.20483398 -248.84315491]
[249.35063171 -234.65031433]
[239.98890686 -222.93032837]
[227.21948242 -215.06004333]
[212.54244995 -211.96405029]
[197.68209839 -214.00607300]
[184.38418579 -220.94621277]
[174.21095276 -231.96914673]
[168.35716248 -245.78143311]
[174.72839355 -232.31828308]
[165.59738159 -219.39793396]
[164.03684998 -204.47933960]
[162.47633362 -189.56072998]
[160.91580200 -174.64212036]
[163.34637451 -167.66258240]
[159.21937561 -159.51361084]
[166.44688416 -149.81362915]
[165.08377075 -137.39083862]
[155.31863403 -128.96440125]
[161.28619385 -115.31752014]
[151.77453613 -102.67477417]
[149.77052307 -87.80924225]
[147.76651001 -72.94371796]
[145.76249695 -58.07818985]
[143.75848389 -43.21266174]
[155.05346680 -53.08298874]
[169.98214722 -54.54405594]
[182.97648621 -47.05091476]
[189.18991089 -33.39832687]
[186.30499268 -18.67836571]
[175.39772034 -8.38121510]
[160.53622437 -6.34745836]
[147.26350403 -13.33563519]
[140.52973938 -26.74048233]
[136.77343750 -12.21842289]
[133.01715088 2.30363607]
[137.32075500 16.56295776]
[126.37413788 27.98584366]
[122.61783600 42.50790405]
[126.92144775 56.76722336]
[115.97483826 68.19010925]
[112.21853638 82.71217346]
[120.91690063 96.73736572]
[116.90313721 112.74541473]
[102.61658478 121.00749969]
[99.07691193 135.58387756]
[95.53723907 150.16024780]
[91.99756622 164.73663330]
[88.45789337 179.31300354]
[89.82784271 183.43334961]
[89.81652832 187.37852478]
[88.64861298 190.73580933]
[86.65974426 193.20785522]
[84.24926758 194.63885498]
[79.84827423 208.97869873]
[85.19080353 220.71838379]
[81.22998047 232.57147217]
[70.60645294 238.35655212]
[65.99244690 252.62928772]
[61.37843704 266.90203857]
[57.40634155 281.36654663]
[54.08407974 295.99401855]
[50.76182175 310.62145996]
[47.43956375 325.24893188]
[44.11730194 339.87640381]
[41.01319122 354.55169678]
[45.95152283 369.58242798]
[35.91059875 380.58377075]
[33.02532578 395.30364990]
[30.14005280 410.02355957]
[27.25478172 424.74343872]
[32.19311142 439.77420044]
[22.15218735 450.77551270]
[19.26691437 465.49539185]
[16.38164139 480.21530151]
[13.49636936 494.93518066]
[10.61109638 509.65509033]
[7.94530106 524.41632080]
[5.49957371 539.21557617]
[3.05384636 554.01483154]
[1.04983270 568.88037109]
[-0.51069033 583.79895020]
[-2.07121325 598.71759033]
[-3.63173628 613.63616943]
[-5.19225931 628.55480957]
[-6.75278234 643.47338867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[18 204]
[19 203]
[20 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[29 195]
[30 194]
[31 193]
[32 192]
[34 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[48 184]
[49 183]
[50 182]
[52 179]
[53 178]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[62 166]
[63 165]
[65 163]
[66 162]
[68 160]
[69 159]
[70 158]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[77 143]
[79 140]
[80 138]
[81 137]
[82 136]
[83 135]
[85 133]
[86 116]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
