%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[65.61396027 401.01055908]
[58.55242920 414.25244141]
[50.52106857 426.92956543]
[41.56480026 438.97103882]
[31.73370743 450.30957031]
[21.08277321 460.88168335]
[9.67156124 470.62829590]
[-2.43611240 479.49487305]
[-15.17253494 487.43188477]
[-28.46647835 494.39486694]
[-42.24359894 500.34494019]
[-56.42684174 505.24877930]
[-70.93689728 509.07897949]
[-85.69261169 511.81414795]
[-100.61146545 513.43896484]
[-115.61002350 513.94433594]
[-130.60441589 513.32745361]
[-145.51077271 511.59176636]
[-160.24574280 508.74694824]
[-174.72691345 504.80895996]
[-188.87330627 499.79977417]
[-202.60580444 493.74743652]
[-215.84759521 486.68579102]
[-228.52465820 478.65432739]
[-240.56605530 469.69793701]
[-251.90447998 459.86676025]
[-262.47650146 449.21572876]
[-272.22302246 437.80441284]
[-281.08950806 425.69665527]
[-289.02639771 412.96017456]
[-295.98925781 399.66616821]
[-301.93920898 385.88900757]
[-306.84292603 371.70571899]
[-310.67300415 357.19561768]
[-313.40805054 342.43988037]
[-315.03274536 327.52102661]
[-315.53796387 312.52246094]
[-314.92095947 297.52807617]
[-313.18511963 282.62173462]
[-310.34017944 267.88677979]
[-306.40206909 253.40565491]
[-301.39276123 239.25930786]
[-295.34030151 225.52685547]
[-288.27853394 212.28512573]
[-280.24694824 199.60813904]
[-271.29046631 187.56680298]
[-261.45916748 176.22846985]
[-250.80805969 165.65653992]
[-239.39666748 155.91012573]
[-227.28884888 147.04374695]
[-214.55227661 139.10697937]
[-201.25820923 132.14422607]
[-187.48098755 126.19440460]
[-173.29765320 121.29080200]
[-158.78753662 117.46084595]
[-144.03176880 114.72593689]
[-129.11289978 113.10138702]
[-114.11432648 112.59627533]
[-99.11994934 113.21342468]
[-84.21361542 114.94939423]
[-69.47869873 117.79445648]
[-54.99759674 121.73271942]
[-40.85129547 126.74214172]
[-27.11890602 132.79472351]
[-13.87722874 139.85659790]
[-1.20031703 147.88830566]
[10.84093475 156.84489441]
[22.17918587 166.67628479]
[32.82519531 156.10923767]
[43.47120285 145.54219055]
[54.11721420 134.97514343]
[64.76322174 124.40808868]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[114.02371979 75.51294708]
[124.66973114 64.94589996]
[135.31573486 54.37885666]
[145.96174622 43.81180573]
[155.01174927 31.84947014]
[162.28497314 18.73077583]
[169.55821228 5.61208248]
[176.83143616 -7.50661135]
[184.10466003 -20.62530518]
[171.62400818 -28.96154022]
[159.87438965 -38.29995346]
[148.93606567 -48.57675552]
[138.88377380 -59.72174454]
[129.78614807 -71.65878296]
[121.70536804 -84.30632782]
[114.69661713 -97.57799530]
[108.80778503 -111.38310242]
[104.07908630 -125.62736511]
[100.54283142 -140.21347046]
[98.22317505 -155.04177856]
[97.13596344 -170.01100159]
[97.28862762 -185.01887512]
[98.68011475 -199.96287537]
[101.30091858 -214.74093628]
[105.13314819 -229.25207520]
[110.15061951 -243.39720154]
[116.31906128 -257.07968140]
[123.59632874 -270.20602417]
[131.93270874 -282.68658447]
[141.27127075 -294.43606567]
[151.54820251 -305.37426758]
[162.69329834 -315.42645264]
[174.63044739 -324.52392578]
[187.27809143 -332.60455322]
[200.54983521 -339.61315918]
[214.35502625 -345.50183105]
[228.59933472 -350.23034668]
[243.18548584 -353.76641846]
[258.01382446 -356.08590698]
[272.98306274 -357.17294312]
[287.99093628 -357.02011108]
[302.93490601 -355.62844849]
[317.71295166 -353.00744629]
[332.22402954 -349.17504883]
[346.36911011 -344.15740967]
[360.05151367 -337.98880005]
[373.17776489 -330.71139526]
[385.65820312 -322.37484741]
[397.40762329 -313.03616333]
[408.34570312 -302.75909424]
[418.39773560 -291.61386108]
[427.49505615 -279.67660522]
[435.57553101 -267.02886963]
[442.58398438 -253.75704956]
[448.47247314 -239.95178223]
[453.20083618 -225.70741272]
[456.73675537 -211.12123108]
[459.05603027 -196.29286194]
[460.14291382 -181.32362366]
[459.98989868 -166.31575012]
[458.59805298 -151.37178040]
[455.97686768 -136.59378052]
[452.14431763 -122.08272552]
[447.12649536 -107.93772125]
[440.95773315 -94.25540161]
[433.68014526 -81.12922668]
[425.34347534 -68.64887238]
[416.00463867 -56.89958954]
[405.72744751 -45.96163177]
[394.58209229 -35.90972900]
[382.64474487 -26.81253815]
[369.99688721 -18.73220825]
[356.72497559 -11.72393417]
[342.91964722 -5.83559227]
[328.67523193 -1.10740507]
[314.08898926 2.42832804]
[299.26062012 4.74745417]
[284.29135132 5.83413124]
[269.28347778 5.68093586]
[254.33952332 4.28891420]
[239.56156921 1.66757596]
[225.05055237 -2.16517258]
[210.90560913 -7.18314934]
[197.22335815 -13.35207653]
[189.95013428 -0.23338206]
[182.67689514 12.88531208]
[175.40367126 26.00400543]
[168.13044739 39.12269974]
[180.62898254 30.82893944]
[194.99978638 26.53009987]
[209.99963379 26.59807205]
[224.33088684 31.02697563]
[236.75375366 39.43367004]
[246.19351196 51.09088898]
[251.83355713 64.99016571]
[253.18595886 79.92907715]
[250.13371277 94.61524963]
[242.94087219 107.77819824]
[232.22969055 118.27917480]
[218.92680359 125.20976257]
[204.18302917 127.97038269]
[189.27384949 126.32221222]
[175.48905945 120.40783691]
[164.02119446 110.73892212]
[155.86233521 98.15190887]
[151.71829224 83.73570251]
[151.94757080 68.73745728]
[156.52879333 54.45781708]
[145.88278198 65.02486420]
[135.23678589 75.59191132]
[124.59076691 86.15895844]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.33026886 135.05409241]
[64.68425751 145.62113953]
[54.03824997 156.18818665]
[43.39224243 166.75523376]
[32.74623489 177.32228088]
[42.49294662 188.73341370]
[51.35964584 200.84100342]
[59.29674530 213.57736206]
[66.25985718 226.87124634]
[72.21003723 240.64831543]
[77.11401367 254.83151245]
[80.94435883 269.34152222]
[83.67964935 284.09722900]
[85.30459595 299.01605225]
[85.81010437 314.01461792]
[85.19335175 329.00900269]
[83.45778656 343.91537476]
[80.61310577 358.65039062]
[76.67523193 373.13159180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 196]
[69 195]
[70 194]
[71 193]
[72 192]
[73 191]
[74 190]
[76 188]
[77 187]
[78 186]
[79 185]
[80 184]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
