%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[112.78506470 390.61703491]
[111.66941071 375.65859985]
[110.55376434 360.70013428]
[109.43811798 345.74166870]
[95.96160889 339.39746094]
[87.41321564 327.07751465]
[86.17101288 312.03344727]
[92.66841125 298.29736328]
[105.25096893 289.60101318]
[104.13532257 274.64254761]
[103.01966858 259.68408203]
[101.90402222 244.72564697]
[100.78837585 229.76719666]
[99.67272186 214.80873108]
[98.55707550 199.85028076]
[97.44142914 184.89183044]
[93.80914307 178.45535278]
[96.42221069 169.70265198]
[95.52939606 154.72924805]
[94.63658142 139.75584412]
[93.74376678 124.78243256]
[92.85095215 109.80902863]
[86.52960205 123.41198730]
[76.18145752 134.27090454]
[62.89860153 141.23980713]
[48.08279037 143.58325195]
[33.29757690 141.05393982]
[20.10327721 133.91877747]
[9.89232254 122.93076324]
[3.74229527 109.24948883]
[2.30222344 94.31877899]
[5.72408152 79.71429443]
[13.64675236 66.97729492]
[25.23413658 57.45193100]
[39.26339340 52.14344788]
[54.25397873 51.61205673]
[68.62390137 55.91384125]
[80.85666656 64.59482574]
[89.66132355 76.73887634]
[94.10872650 91.06459808]
[96.99399567 76.34470367]
[99.87927246 61.62481308]
[102.76454163 46.90492249]
[105.64981842 32.18503189]
[100.71148682 17.15427971]
[110.75241089 6.15295744]
[101.53502655 17.98680115]
[89.49961090 26.93938828]
[75.51501465 32.36442184]
[60.59078979 33.87026596]
[45.80433655 31.34821320]
[32.22309494 24.98032951]
[20.82751274 15.22632122]
[12.44024372 2.79033685]
[7.66677189 -11.42985916]
[6.85169888 -26.40769768]
[10.05386543 -41.06191635]
[17.04210472 -54.33461380]
[27.31192780 -65.26762390]
[40.12195206 -73.07168579]
[54.54740524 -77.18341064]
[69.54690552 -77.30596924]
[84.03762054 -73.43052673]
[96.97345734 -65.83683777]
[107.42057037 -55.07310867]
[114.62477112 -41.91637802]
[118.06597900 -27.31644440]
[117.49556732 -12.32614040]
[124.76879883 -25.44483376]
[132.04202271 -38.56352997]
[139.31526184 -51.68222427]
[146.58848572 -64.80091858]
[153.86170959 -77.91960907]
[161.13494873 -91.03830719]
[168.40817261 -104.15699768]
[158.13415527 -115.24311829]
[151.79835510 -128.94348145]
[150.00982666 -143.91110229]
[152.93124390 -158.67864990]
[160.26414490 -171.80233765]
[171.27941895 -182.00305176]
[184.88975525 -188.29104614]
[199.75697327 -190.06195068]
[214.42358398 -187.15481567]
[221.69682312 -200.27349854]
[228.97004700 -213.39219666]
[236.24327087 -226.51089478]
[243.51651001 -239.62959290]
[250.78973389 -252.74827576]
[238.38888550 -261.20663452]
[226.82138062 -270.77310181]
[216.18591309 -281.36608887]
[206.57321167 -292.89520264]
[198.06532288 -305.26211548]
[190.73480225 -318.36129761]
[184.64419556 -332.08096313]
[179.84548950 -346.30407715]
[176.37960815 -360.90927124]
[174.27612305 -375.77200317]
[173.55299377 -390.76538086]
[174.21636963 -405.76153564]
[176.26060486 -420.63250732]
[179.66825867 -435.25140381]
[184.41023254 -449.49353027]
[190.44610596 -463.23736572]
[197.72436523 -476.36566162]
[206.18290710 -488.76635742]
[215.74957275 -500.33370972]
[226.34274292 -510.96899414]
[237.87203979 -520.58148193]
[250.23907471 -529.08917236]
[263.33837891 -536.41949463]
[277.05813599 -542.50982666]
[291.28134155 -547.30834961]
[305.88659668 -550.77398682]
[320.74935913 -552.87719727]
[335.74273682 -553.60009766]
[350.73889160 -552.93646240]
[365.60983276 -550.89196777]
[380.22866821 -547.48406982]
[394.47073364 -542.74188232]
[408.21444702 -536.70574951]
[421.34262085 -529.42730713]
[433.74319458 -520.96856689]
[445.31036377 -511.40167236]
[455.94549561 -500.80834961]
[465.55780029 -489.27890015]
[474.06527710 -476.91171265]
[481.39535522 -463.81228638]
[487.48550415 -450.09240723]
[492.28375244 -435.86914062]
[495.74914551 -421.26382446]
[497.85211182 -406.40103149]
[498.57476807 -391.40762329]
[497.91088867 -376.41149902]
[495.86614990 -361.54058838]
[492.45800781 -346.92178345]
[487.71554565 -332.67980957]
[481.67922974 -318.93618774]
[474.40054321 -305.80816650]
[465.94158936 -293.40771484]
[456.37451172 -281.84069824]
[445.78100586 -271.20574951]
[434.25140381 -261.59365845]
[421.88406372 -253.08636475]
[408.78451538 -245.75650024]
[395.06454468 -239.66659546]
[380.84118652 -234.86859131]
[366.23580933 -231.40344238]
[351.37301636 -229.30070496]
[336.37957764 -228.57830811]
[321.38345337 -229.24244690]
[306.51260376 -231.28741455]
[291.89385986 -234.69580078]
[277.65194702 -239.43849182]
[263.90841675 -245.47505188]
[256.63519287 -232.35635376]
[249.36196899 -219.23767090]
[242.08874512 -206.11897278]
[234.81550598 -193.00027466]
[227.54228210 -179.88157654]
[237.77798462 -168.98243713]
[244.15237427 -155.43484497]
[246.02975464 -140.56018066]
[243.21382141 -125.81360626]
[235.96797180 -112.64166260]
[224.99079895 -102.34037018]
[211.34870911 -95.92774963]
[196.37236023 -94.04320526]
[181.52687073 -96.88376617]
[174.25363159 -83.76507568]
[166.98040771 -70.64637756]
[159.70718384 -57.52768707]
[152.43394470 -44.40899277]
[145.16072083 -31.29029846]
[137.88749695 -18.17160416]
[130.61425781 -5.05291080]
[125.47229767 9.03822994]
[130.61700439 23.01611519]
[120.36970520 35.07030487]
[117.48443604 49.79019547]
[114.59915924 64.51008606]
[111.71389008 79.22998047]
[108.82861328 93.94986725]
[107.82435608 108.91621399]
[108.71717072 123.88961792]
[109.60998535 138.86302185]
[110.50280762 153.83642578]
[111.39562225 168.80982971]
[112.39987946 183.77618408]
[113.51552582 198.73463440]
[114.63117981 213.69308472]
[115.74682617 228.65153503]
[116.86247253 243.61000061]
[117.97812653 258.56845093]
[119.09377289 273.52688599]
[120.20941925 288.48535156]
[133.94279480 295.21899414]
[142.40592957 307.83929443]
[143.40913391 322.90115356]
[136.78286743 336.35287476]
[124.39656830 344.62603760]
[125.51222229 359.58447266]
[126.62786865 374.54293823]
[127.74351501 389.50140381]
[139.88110352 399.62335205]
[141.22314453 415.37057495]
[130.97340393 427.40048218]
[115.21289825 428.57592773]
[103.29203033 418.19958496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[46 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[84 161]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
