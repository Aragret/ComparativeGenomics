%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[108.51059723 545.10382080]
[106.04251099 530.07623291]
[109.90634918 515.34564209]
[119.43268585 503.46417236]
[132.97102356 496.49041748]
[132.07820129 481.51699829]
[131.18539429 466.54360962]
[122.34905243 458.28250122]
[121.48269653 445.81521606]
[129.59484863 435.78747559]
[128.92506409 420.80242920]
[128.25527954 405.81738281]
[124.81623840 399.27560425]
[127.68875122 390.60461426]
[127.24214935 375.61123657]
[119.12934113 363.11999512]
[126.45232391 349.09558105]
[126.00572205 334.10220337]
[125.55911255 319.10885620]
[124.22087860 304.16867065]
[121.99576569 289.33462524]
[119.77064514 274.50057983]
[117.54553223 259.66656494]
[115.32041168 244.83250427]
[113.09529114 229.99845886]
[110.87017822 215.16441345]
[99.21442413 202.04533386]
[106.09636688 184.96551514]
[103.65064240 170.16624451]
[101.20491028 155.36697388]
[98.75918579 140.56770325]
[96.31346130 125.76842499]
[93.86772919 110.96915436]
[89.37185669 125.27954102]
[81.22814941 137.87635803]
[70.02450562 147.85025024]
[56.56974411 154.48118591]
[41.83516312 157.29048157]
[26.88446426 156.07530212]
[12.79695511 150.92340088]
[0.58962369 142.20669556]
[-8.85627174 130.55444336]
[-14.85882473 116.80782318]
[-16.98470497 101.95923615]
[-15.08044434 87.08059692]
[-9.28351116 73.24602509]
[-0.01239298 61.45423126]
[12.06362152 52.55648422]
[26.07275391 47.19511795]
[41.00366974 45.75717926]
[55.77849960 48.34646988]
[69.33063507 54.77606583]
[80.68172455 64.58181000]
[89.01234436 77.05581665]
[93.72129059 91.29872894]
[95.94641113 76.46468353]
[98.17152405 61.63063812]
[99.50975800 46.69045258]
[99.95636749 31.69710350]
[100.40296936 16.70375252]
[100.84957886 1.71040285]
[101.29618073 -13.28294754]
[101.74279022 -28.27629662]
[87.69636536 -33.92636108]
[76.45162964 -44.02229691]
[69.35285950 -57.33123016]
[67.23979950 -72.23777771]
[70.34837341 -86.94009399]
[78.28451538 -99.66770935]
[90.07399750 -108.89469147]
[104.28201294 -113.52259827]
[104.72862244 -128.51594543]
[105.17522430 -143.50929260]
[105.62183380 -158.50263977]
[94.11970520 -166.09815979]
[87.92180634 -178.28851318]
[88.55168915 -191.84109497]
[95.73799133 -203.22096252]
[107.51321411 -209.51272583]
[108.18299866 -224.49775696]
[108.85278320 -239.48280334]
[106.44573975 -244.11456299]
[106.09147644 -248.74357605]
[107.44519043 -252.58837891]
[109.90190125 -255.11759949]
[111.24013519 -270.05776978]
[112.57836914 -284.99795532]
[113.91660309 -299.93814087]
[114.13993073 -314.93649292]
[113.24711609 -329.90988159]
[112.35429382 -344.88330078]
[97.52678680 -347.60513306]
[83.78179932 -353.79696655]
[71.91845703 -363.09881592]
[62.62647247 -374.96990967]
[56.44607544 -388.72003174]
[53.73657990 -403.54980469]
[54.65551758 -418.59701538]
[59.14945984 -432.98687744]
[66.95713806 -445.88275146]
[77.62461853 -456.53491211]
[90.53170776 -464.32403564]
[104.92800903 -468.79727173]
[119.97653961 -469.69454956]
[134.80239868 -466.96374512]
[148.54362488 -460.76358032]
[160.40133667 -451.45452881]
[169.68611145 -439.57781982]
[175.85816956 -425.82394409]
[178.55868530 -410.99252319]
[177.63061523 -395.94586182]
[173.12796021 -381.55874634]
[165.31246948 -368.66760254]
[154.63853455 -358.02191162]
[141.72671509 -350.24063110]
[127.32770538 -345.77612305]
[128.22052002 -330.80270386]
[129.11332703 -315.82931519]
[137.22610474 -328.44607544]
[150.51480103 -335.40383911]
[165.50578308 -334.88388062]
[178.28045654 -327.02206421]
[185.49954224 -313.87350464]
[185.27598572 -298.87515259]
[177.66822815 -285.94760132]
[164.66491699 -278.47003174]
[149.66510010 -278.39706421]
[136.58967590 -285.74780273]
[128.85678101 -298.59991455]
[127.51855469 -283.65972900]
[126.18032074 -268.71954346]
[124.84208679 -253.77935791]
[123.83782196 -238.81301880]
[123.16803741 -223.82797241]
[122.49825287 -208.84294128]
[135.65594482 -199.02700806]
[140.41784668 -183.14349365]
[134.71749878 -167.39523315]
[120.61518097 -158.05604553]
[120.16857910 -143.06268311]
[119.72196960 -128.06933594]
[119.27536774 -113.07598877]
[133.18273926 -107.61061096]
[144.40211487 -97.69827271]
[151.56661987 -84.52085114]
[153.79458618 -69.65957642]
[150.79801941 -54.90522766]
[142.91967773 -42.04241943]
[131.09396362 -32.63367844]
[116.73613739 -27.82969093]
[116.28953552 -12.83634090]
[115.84292603 2.15700889]
[115.39632416 17.15035820]
[114.94971466 32.14370728]
[114.50311279 47.13705826]
[124.70994568 36.14521790]
[139.40560913 33.13897705]
[153.10897827 39.23959351]
[160.70904541 52.17168427]
[159.37117004 67.11190033]
[149.59434509 78.48791504]
[135.02507019 82.05674744]
[121.09735107 76.48731995]
[113.00556946 63.85575485]
[110.78044891 78.68979645]
[108.55533600 93.52384186]
[108.66699982 108.52342987]
[111.11273193 123.32270050]
[113.55845642 138.12196350]
[116.00418091 152.92123413]
[118.44991302 167.72050476]
[120.89563751 182.51977539]
[130.90734863 190.65173340]
[132.63972473 203.02842712]
[125.70422363 212.93930054]
[127.92933655 227.77334595]
[130.15444946 242.60739136]
[132.37957764 257.44143677]
[134.60469055 272.27548218]
[136.82980347 287.10952759]
[139.05491638 301.94357300]
[147.14581299 289.31274414]
[161.07327271 283.74264526]
[175.64270020 287.31079102]
[185.42007446 298.68634033]
[186.75865173 313.62649536]
[179.15921021 326.55895996]
[165.45611572 332.66021729]
[150.76031494 329.65466309]
[140.55245972 318.66226196]
[140.99906921 333.65560913]
[141.44567871 348.64895630]
[149.59042358 362.21264648]
[142.23550415 375.16464233]
[142.68209839 390.15798950]
[143.24031067 405.14761353]
[143.91009521 420.13262939]
[144.57987976 435.11767578]
[154.84736633 450.40362549]
[146.15879822 465.65078735]
[147.05160522 480.62420654]
[147.94442749 495.59759521]
[162.21553040 500.91317749]
[173.08625793 511.57839966]
[178.67317200 525.74548340]
[178.00831604 540.95989990]
[171.20687866 554.58563232]
[159.44725037 564.26190186]
[144.76684570 568.31231689]
[129.70915222 566.03509521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[10 198]
[11 197]
[12 196]
[14 195]
[15 194]
[17 192]
[18 191]
[19 190]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[55 166]
[56 165]
[57 164]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[71 142]
[72 141]
[73 140]
[74 139]
[79 135]
[80 134]
[81 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 118]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
