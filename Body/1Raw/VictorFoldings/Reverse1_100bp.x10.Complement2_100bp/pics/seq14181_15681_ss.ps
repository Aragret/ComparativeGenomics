%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[189.80207825 449.99334717]
[202.51432800 441.90963745]
[197.47741699 427.78060913]
[192.44049072 413.65158081]
[187.40357971 399.52255249]
[182.36666870 385.39352417]
[177.15962219 380.14868164]
[177.36164856 371.01647949]
[172.53564453 356.81402588]
[167.60404968 342.64788818]
[162.56713867 328.51885986]
[151.77607727 323.05264282]
[147.46411133 311.32272339]
[152.45472717 299.42919922]
[147.62873840 285.22674561]
[142.69714355 271.06060791]
[137.66021729 256.93157959]
[132.62330627 242.80253601]
[127.58638763 228.67350769]
[122.54947662 214.54447937]
[117.34243011 209.29962158]
[117.54445648 200.16743469]
[112.71845245 185.96496582]
[106.16714478 199.45869446]
[92.52680206 205.69895935]
[78.03359985 201.83280945]
[69.31363678 189.62779236]
[70.35356903 174.66389465]
[80.67794800 163.78237915]
[95.56660461 161.95814514]
[108.21378326 170.02668762]
[104.89152527 155.39921570]
[101.56926727 140.77175903]
[98.24700928 126.14430237]
[94.92474365 111.51683807]
[91.27665710 96.96721649]
[87.30456543 82.50269318]
[81.53852844 68.65521240]
[74.07078552 55.64625931]
[66.60305023 42.63730621]
[59.13530731 29.62835312]
[45.55461884 21.51197815]
[45.92863464 6.62206888]
[38.46089172 -6.38688326]
[35.51778030 8.32155228]
[24.56986618 18.57548714]
[9.70045185 20.55045700]
[-3.54453993 13.50984669]
[-10.22505379 0.07962967]
[-7.84942389 -14.73105526]
[2.69629884 -25.39818764]
[17.47882080 -27.94319344]
[30.98547363 -21.41604042]
[25.11651230 -35.22021484]
[19.24755096 -49.02439499]
[13.37859058 -62.82857132]
[7.50962973 -76.63274384]
[-9.02354050 -80.20351410]
[-20.06100464 -92.80016327]
[-21.40189362 -109.32783508]
[-12.71519756 -123.25689697]
[-18.78903198 -136.97216797]
[-24.86286545 -150.68742371]
[-30.93669891 -164.40269470]
[-31.65066910 -149.41969299]
[-36.16754150 -135.11592102]
[-44.18773651 -122.44010162]
[-55.17929459 -112.23296356]
[-68.41318512 -105.17151642]
[-83.01166534 -101.72412872]
[-98.00645447 -102.11943054]
[-112.40300751 -106.33123016]
[-125.24645996 -114.08015442]
[-135.68493652 -124.85224915]
[-143.02610779 -137.93304443]
[-146.78305054 -152.45494080]
[-146.70657349 -167.45474243]
[-142.80175781 -181.93757629]
[-135.32760620 -194.94285583]
[-124.77983856 -205.60795593]
[-111.85804749 -213.22552490]
[-97.41929626 -217.29031372]
[-82.42125702 -217.53271484]
[-67.85868835 -213.93666077]
[-54.69748306 -206.74064636]
[-43.81056595 -196.42196655]
[-35.91791916 -183.66035461]
[-37.25615311 -198.60054016]
[-38.70557022 -213.53034973]
[-40.26609421 -228.44895935]
[-41.82661819 -243.36755371]
[-43.38714218 -258.28616333]
[-44.94766235 -273.20477295]
[-59.70771408 -276.58407593]
[-72.56944275 -284.57498169]
[-82.13771820 -296.31066895]
[-87.37464142 -310.51818848]
[-87.71215057 -325.65637207]
[-83.11362457 -340.08316040]
[-74.07789612 -352.23364258]
[-61.58507538 -360.78982544]
[-46.99030304 -364.82360840]
[-31.87670326 -363.89739990]
[-17.88368797 -358.11172485]
[-6.52911806 -348.09411621]
[0.95535094 -334.93121338]
[3.75785875 -320.05087280]
[1.57441068 -305.06716919]
[-5.35814953 -291.60543823]
[-16.28782845 -281.12588501]
[-30.02905846 -274.76528931]
[-28.46853638 -259.84667969]
[-26.90801239 -244.92808533]
[-25.34749031 -230.00947571]
[-23.78696632 -215.09086609]
[-19.96465492 -208.76539612]
[-22.31596756 -199.93876648]
[-20.97773361 -184.99859619]
[-17.22143364 -170.47653198]
[-11.14759922 -156.76126099]
[-5.07376528 -143.04598999]
[1.00006878 -129.33073425]
[14.25717545 -127.75235748]
[25.09010887 -119.76538849]
[30.60580635 -107.36996460]
[29.26585197 -93.76029205]
[21.31380653 -82.50170898]
[27.18276787 -68.69753265]
[33.05172729 -54.89335251]
[38.92068863 -41.08917618]
[44.78964996 -27.28499985]
[51.46984482 -13.85462475]
[58.93758392 -0.84567225]
[71.98413086 6.34021568]
[72.14425659 22.16061211]
[79.61199951 35.16956329]
[87.07974243 48.17851639]
[94.54747772 61.18746948]
[94.14933014 46.19275284]
[98.57864380 31.86162758]
[107.36798859 19.70648956]
[119.58980560 11.01009750]
[133.95429993 6.69020462]
[148.94554138 7.20269871]
[162.98147583 12.49349499]
[174.58085632 22.00424385]
[182.51957703 34.73125458]
[185.95983887 49.33140945]
[184.53858948 64.26392365]
[178.40580750 77.95293427]
[168.20870972 88.95381165]
[155.02340698 96.10559845]
[140.24139404 98.65354919]
[125.42264557 96.32878113]
[112.13101196 89.37662506]
[101.76908875 78.53060150]
[105.74118042 92.99512482]
[108.78872681 95.35835266]
[110.77979279 99.05342102]
[111.14293671 103.57836914]
[109.55220795 108.19458008]
[112.87446594 122.82204437]
[116.19672394 137.44949341]
[119.51898193 152.07696533]
[122.84124756 166.70442200]
[126.92091370 181.13897705]
[131.74690247 195.34143066]
[136.67849731 209.50756836]
[141.71542358 223.63659668]
[146.75233459 237.76562500]
[151.78924561 251.89465332]
[156.82617188 266.02368164]
[162.65553284 273.05621338]
[161.83119202 280.40072632]
[166.65718079 294.60317993]
[180.78338623 306.41555786]
[176.69616699 323.48193359]
[181.73307800 337.61096191]
[187.56245422 344.64349365]
[186.73809814 351.98803711]
[191.56410217 366.19049072]
[196.49569702 380.35662842]
[201.53260803 394.48565674]
[206.56951904 408.61468506]
[211.60644531 422.74371338]
[216.64335632 436.87274170]
[231.60249329 435.09173584]
[246.58282471 436.68466187]
[260.83294678 441.57156372]
[273.63809204 449.50732422]
[284.35592651 460.09390259]
[292.44885254 472.80029297]
[297.51095581 486.98910522]
[299.28833008 501.94866943]
[297.69180298 516.92864990]
[292.80145264 531.17755127]
[284.86257935 543.98077393]
[274.27340698 554.69604492]
[261.56506348 562.78588867]
[247.37500000 567.84454346]
[232.41500854 569.61828613]
[217.43544006 568.01812744]
[203.18768311 563.12432861]
[190.38641357 555.18237305]
[179.67370605 544.59057617]
[171.58691406 531.88031006]
[166.53169250 517.68902588]
[164.76158142 502.72857666]
[166.36537170 487.74942017]
[171.26263428 473.50283813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[8 181]
[9 180]
[10 178]
[11 177]
[14 175]
[15 174]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[22 167]
[23 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 157]
[37 156]
[38 138]
[39 137]
[40 136]
[41 135]
[43 133]
[44 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[61 122]
[62 121]
[63 120]
[64 119]
[87 118]
[88 117]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
