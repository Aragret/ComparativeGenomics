%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[24.51168251 375.28454590]
[27.45418930 390.01843262]
[28.31742287 405.01846313]
[27.08457565 419.99264526]
[23.77964783 434.64950562]
[18.46697044 448.70373535]
[11.24995613 461.88180542]
[2.26908588 473.92712402]
[-8.30082417 484.60528564]
[-20.25402832 493.70843506]
[-33.35785294 501.05932617]
[-47.35723114 506.51492310]
[-61.97966003 509.96902466]
[-76.94050598 511.35437012]
[-91.94855499 510.64404297]
[-106.71166992 507.85180664]
[-120.94248199 503.03204346]
[-134.36398315 496.27856445]
[-146.71493530 487.72283936]
[-157.75489807 477.53140259]
[-167.26898193 465.90264893]
[-175.07200623 453.06289673]
[-181.01206970 439.26211548]
[-184.97355652 424.76892090]
[-186.87934875 409.86541748]
[-186.69235229 394.84173584]
[-184.41621399 379.99029541]
[-180.09523010 365.60018921]
[-173.81350708 351.95153809]
[-165.69331360 339.30996704]
[-155.89273071 327.92163086]
[-144.60253906 318.00811768]
[-132.04246521 309.76245117]
[-118.45703125 303.34515381]
[-104.11066437 298.88107300]
[-89.28262329 296.45715332]
[-74.26154327 296.12057495]
[-59.33981323 297.87786865]
[-44.80788803 301.69482422]
[-30.94863510 307.49719238]
[-23.28803825 294.60086060]
[-15.62744045 281.70452881]
[-7.96684265 268.80819702]
[-0.30624521 255.91188049]
[7.35435200 243.01554871]
[2.45832872 231.09672546]
[5.36446524 218.34382629]
[15.23022652 209.46253967]
[28.60378265 207.86172485]
[36.45553589 195.08087158]
[44.30729294 182.30003357]
[52.15904999 169.51919556]
[52.22853088 154.62475586]
[66.04484558 146.91632080]
[73.89660645 134.13548279]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[105.39978790 72.30302429]
[112.07998657 58.87264633]
[118.76017761 45.44226837]
[106.18393707 53.61772919]
[91.45062256 56.43366623]
[76.74584198 53.47235870]
[64.25095367 45.17309570]
[55.81950760 32.76702118]
[52.70225143 18.09450340]
[55.36161423 3.33212686]
[63.40309906 -9.33020115]
[75.63379669 -18.01409721]
[90.23935699 -21.43136024]
[105.05312347 -19.07505608]
[117.87757874 -11.29473114]
[126.81027222 0.75545162]
[130.52610779 15.28791809]
[128.47447205 30.14505577]
[137.78935242 18.38780403]
[147.10424805 6.63055325]
[145.47850037 -8.86120892]
[155.09259033 -20.65203857]
[169.87164307 -22.10647202]
[179.18652344 -33.86372375]
[188.50140381 -45.62097549]
[197.81628418 -57.37822723]
[207.13117981 -69.13547516]
[205.50541687 -84.62724304]
[215.11952209 -96.41806793]
[229.89857483 -97.87250519]
[239.21345520 -109.62975311]
[248.52833557 -121.38700867]
[257.84323120 -133.14425659]
[267.15811157 -144.90150452]
[276.47299194 -156.65876770]
[285.78787231 -168.41601562]
[288.29302979 -184.03762817]
[302.26119995 -189.20866394]
[311.57608032 -200.96591187]
[320.89096069 -212.72317505]
[310.17965698 -223.24456787]
[300.64736938 -234.84490967]
[292.40219116 -247.39276123]
[285.53747559 -260.74597168]
[280.13104248 -274.75320435]
[276.24414062 -289.25573730]
[273.92080688 -304.08929443]
[273.18734741 -319.08575439]
[274.05212402 -334.07522583]
[276.50531006 -348.88787842]
[280.51910400 -363.35580444]
[286.04803467 -377.31515503]
[293.02944946 -390.60769653]
[301.38424683 -403.08285522]
[311.01776123 -414.59927368]
[321.82083130 -425.02642822]
[333.67105103 -434.24618530]
[346.43417358 -442.15411377]
[359.96554565 -448.66055298]
[374.11187744 -453.69183350]
[388.71286011 -457.19091797]
[403.60302734 -459.11816406]
[418.61373901 -459.45175171]
[433.57482910 -458.18786621]
[448.31683350 -455.34085083]
[462.67269897 -450.94296265]
[476.47973633 -445.04403687]
[489.58154297 -437.71087646]
[501.82965088 -429.02664185]
[513.08526611 -419.08966064]
[523.22082520 -408.01257324]
[532.12158203 -395.92089844]
[539.68658447 -382.95159912]
[545.83020020 -369.25164795]
[550.48272705 -354.97628784]
[553.59149170 -340.28726196]
[555.12127686 -325.35101318]
[555.05474854 -310.33676147]
[553.39263916 -295.41464233]
[550.15380859 -280.75372314]
[545.37500000 -266.52017212]
[539.11022949 -252.87519836]
[531.43060303 -239.97344971]
[522.42303467 -227.96110535]
[512.18969727 -216.97427368]
[500.84646606 -207.13745117]
[488.52188110 -198.56207275]
[475.35562134 -191.34533691]
[461.49682617 -185.56898499]
[447.10253906 -181.29849243]
[432.33590698 -178.58222961]
[417.36419678 -177.45097351]
[402.35702515 -177.91755676]
[387.48449707 -179.97668457]
[372.91510010 -183.60502625]
[358.81393433 -188.76145935]
[345.34075928 -195.38757324]
[332.64822388 -203.40827942]
[323.33334351 -191.65103149]
[314.01846313 -179.89378357]
[312.17953491 -165.11312866]
[297.54510498 -159.10113525]
[288.23022461 -147.34387207]
[278.91534424 -135.58662415]
[269.60046387 -123.82937622]
[260.28558350 -112.07212067]
[250.97070312 -100.31487274]
[241.65582275 -88.55762482]
[243.62046814 -73.83770752]
[234.34133911 -61.78149414]
[218.88842773 -59.82059479]
[209.57354736 -48.06334305]
[200.25865173 -36.30609131]
[190.94377136 -24.54884148]
[181.62889099 -12.79158974]
[183.59353638 1.92832005]
[174.31440735 13.98453903]
[158.86149597 15.94543648]
[149.54661560 27.70268822]
[140.23173523 39.45993805]
[132.19055176 52.12246323]
[125.51036072 65.55284119]
[118.83016968 78.98321533]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[109.12806702 123.96315002]
[122.11064148 131.47665405]
[126.11093140 145.93341064]
[118.83738708 159.05192566]
[104.45662689 163.31732178]
[91.20659637 156.28619385]
[86.67744446 141.98722839]
[78.82569122 154.76808167]
[78.19460297 170.57669067]
[64.93988800 177.37095642]
[57.08813477 190.15179443]
[49.23638153 202.93263245]
[41.38462448 215.71347046]
[45.76026917 232.65080261]
[36.71067047 247.22541809]
[20.25067902 250.67614746]
[12.59008121 263.57247925]
[4.92948437 276.46881104]
[-2.73111320 289.36511230]
[-10.39171028 302.26144409]
[-18.05230713 315.15777588]
[-6.32720661 324.55288696]
[3.97618341 335.48843384]
[12.65730381 347.75155640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 207]
[41 206]
[42 205]
[43 204]
[44 203]
[45 202]
[49 199]
[50 198]
[51 197]
[52 196]
[54 194]
[55 193]
[56 186]
[57 185]
[59 183]
[60 182]
[61 181]
[62 180]
[77 179]
[78 178]
[79 177]
[82 174]
[83 173]
[84 172]
[85 171]
[86 170]
[89 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[97 159]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
