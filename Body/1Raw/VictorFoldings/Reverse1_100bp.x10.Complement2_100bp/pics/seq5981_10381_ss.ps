%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[134.45130920 749.05139160]
[119.92901611 745.28448486]
[105.60402679 740.82556152]
[91.50930023 735.68499756]
[77.67723846 729.87457275]
[64.13966370 723.40765381]
[50.92771530 716.29913330]
[38.07177734 708.56530762]
[25.60142326 700.22406006]
[13.54533195 691.29443359]
[1.93123436 681.79711914]
[-9.21415710 671.75384521]
[-19.86520767 661.18774414]
[-29.99741936 650.12316895]
[-39.58748627 638.58551025]
[-48.61335373 626.60131836]
[-57.05426025 614.19818115]
[-64.89079285 601.40460205]
[-72.10492706 588.25000000]
[-78.68006897 574.76464844]
[-84.60108948 560.97961426]
[-89.85438538 546.92645264]
[-94.42785645 532.63769531]
[-98.31099701 518.14599609]
[-101.49486542 503.48483276]
[-103.97214508 488.68786621]
[-105.73713684 473.78915405]
[-106.78578186 458.82296753]
[-107.11566925 443.82369995]
[-106.72603607 428.82586670]
[-105.61778259 413.86395264]
[-103.79345703 398.97238159]
[-101.25724792 384.18539429]
[-98.01499939 369.53704834]
[-94.07416534 355.06097412]
[-89.44380951 340.79046631]
[-84.13458252 326.75842285]
[-78.15869141 312.99703979]
[-71.52988434 299.53799438]
[-64.26340485 286.41223145]
[-56.37597275 273.64996338]
[-47.88572311 261.28054810]
[-38.81219101 249.33242798]
[-29.17623711 237.83305359]
[-19.00003052 226.80891418]
[-8.30697441 216.28535461]
[2.87833595 206.28656006]
[14.53017426 196.83555603]
[26.62174034 187.95405579]
[39.12522507 179.66250610]
[52.01186752 171.97998047]
[65.25202942 164.92411804]
[78.81525421 158.51118469]
[92.67034912 152.75590515]
[106.78544617 147.67152405]
[102.38445282 133.33168030]
[97.98345184 118.99183655]
[85.23217010 112.11063385]
[80.98094177 98.25879669]
[87.67669678 85.40916443]
[83.27570343 71.06931305]
[78.87470245 56.72946930]
[74.47370911 42.38962173]
[70.07270813 28.04977417]
[65.67170715 13.70992756]
[61.27070999 -0.62991989]
[46.53586578 2.25140905]
[31.58055687 3.57671881]
[16.56864357 3.33148861]
[1.66460204 1.51840544]
[-12.96826935 -1.84266579]
[-27.16964340 -6.71489906]
[-40.78392410 -13.04491138]
[-53.66194534 -20.76334953]
[-65.66261292 -29.78564262]
[-76.65442657 -40.01293945]
[-86.51697540 -51.33318710]
[-95.14218140 -63.62234879]
[-102.43554688 -76.74578094]
[-108.31716919 -90.55969238]
[-112.72260284 -104.91274261]
[-115.60356903 -119.64765167]
[-116.92852020 -134.60299683]
[-116.68292236 -149.61489868]
[-114.86947632 -164.51890564]
[-111.50804901 -179.15168762]
[-106.63547516 -193.35295105]
[-100.30513000 -206.96707153]
[-92.58638000 -219.84490967]
[-83.56379700 -231.84535217]
[-73.33622742 -242.83692932]
[-62.01574326 -252.69918823]
[-49.72637177 -261.32409668]
[-36.60276413 -268.61715698]
[-22.78870583 -274.49844360]
[-8.43555355 -278.90350342]
[6.29943085 -281.78411865]
[21.25480461 -283.10870361]
[36.26670837 -282.86276245]
[51.17065811 -281.04895020]
[65.80336761 -277.68716431]
[80.00450897 -272.81423950]
[93.61847687 -266.48358154]
[106.49612427 -258.76449585]
[118.49635315 -249.74162292]
[129.48767090 -239.51379395]
[139.34967041 -228.19306946]
[147.97427368 -215.90348816]
[155.26701355 -202.77970886]
[161.14796448 -188.96549988]
[165.55268860 -174.61224365]
[168.43295288 -159.87719727]
[169.75717163 -144.92178345]
[169.51084900 -129.90988159]
[167.69667053 -115.00598145]
[164.33453369 -100.37335205]
[159.46127319 -86.17233276]
[153.13026428 -72.55851746]
[145.41088867 -59.68105698]
[136.38772583 -47.68104935]
[126.15962219 -36.68997574]
[114.83865356 -26.82825661]
[102.54886627 -18.20394516]
[89.42490387 -10.91153240]
[75.61055756 -5.03091812]
[80.01155853 9.30892944]
[84.41255188 23.64877701]
[88.81355286 37.98862457]
[93.21455383 52.32847214]
[97.61554718 66.66831970]
[102.01654816 81.00816345]
[114.76782990 87.88936615]
[119.01905823 101.74120331]
[112.32330322 114.59083557]
[116.72429657 128.93067932]
[121.12529755 143.27053833]
[135.66244507 139.56134033]
[150.36071777 136.55339050]
[165.18629456 134.25360107]
[180.10510254 132.66728210]
[195.08279419 131.79804993]
[210.08494568 131.64793396]
[225.07702637 132.21726990]
[240.02458191 133.50474548]
[254.89321899 135.50740051]
[269.64874268 138.22062683]
[284.25720215 141.63816833]
[298.68499756 145.75219727]
[312.89898682 150.55323792]
[326.86642456 156.03024292]
[340.55520630 162.17060852]
[353.93383789 168.96023560]
[366.97155762 176.38348389]
[379.63839722 184.42327881]
[391.90518188 193.06115723]
[403.74371338 202.27722168]
[415.12677002 212.05027771]
[426.02819824 222.35786438]
[436.42285156 233.17626953]
[446.28689575 244.48059082]
[455.59759521 256.24484253]
[464.33352661 268.44198608]
[472.47467041 281.04394531]
[480.00222778 294.02172852]
[486.89889526 307.34548950]
[493.14883423 320.98458862]
[498.73767090 334.90765381]
[503.65252686 349.08267212]
[507.88211060 363.47702026]
[511.41671753 378.05761719]
[514.24816895 392.79089355]
[516.36999512 407.64300537]
[517.77728271 422.57974243]
[518.46679688 437.56680298]
[518.43701172 452.56964111]
[517.68792725 467.55383301]
[516.22125244 482.48486328]
[514.04046631 497.32843018]
[511.15045166 512.05035400]
[507.55795288 526.61676025]
[503.27117920 540.99420166]
[498.30001831 555.14959717]
[492.65591431 569.05029297]
[486.35180664 582.66448975]
[479.40222168 595.96075439]
[471.82315063 608.90850830]
[463.63201904 621.47796631]
[454.84765625 633.64031982]
[445.49026489 645.36749268]
[435.58139038 656.63250732]
[425.14379883 667.40948486]
[414.20153809 677.67370605]
[402.77972412 687.40142822]
[390.90463257 696.57037354]
[378.60360718 705.15942383]
[365.90493774 713.14880371]
[352.83782959 720.52020264]
[339.43231201 727.25659180]
[325.71923828 733.34252930]
[311.73013306 738.76397705]
[297.49719238 743.50848389]
[283.05313110 747.56512451]
[268.43121338 750.92462158]
[253.66502380 753.57916260]
[238.78855896 755.52270508]
[223.83599854 756.75073242]
[208.84176636 757.26049805]
[193.84033203 757.05078125]
[178.86621094 756.12200928]
[163.95384216 754.47644043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 136]
[56 135]
[57 134]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
