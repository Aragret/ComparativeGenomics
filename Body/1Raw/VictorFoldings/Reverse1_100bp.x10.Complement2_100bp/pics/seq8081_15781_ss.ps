%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[33.59307861 712.58386230]
[19.67746353 718.21832275]
[5.26321554 722.41595459]
[-9.50175285 725.13378906]
[-24.46592903 726.34393311]
[-39.47575760 726.03393555]
[-54.37720871 724.20703125]
[-69.01737213 720.88189697]
[-83.24601746 716.09265137]
[-96.91713715 709.88848877]
[-109.89043427 702.33306885]
[-122.03278351 693.50390625]
[-133.21958923 683.49157715]
[-143.33605957 672.39886475]
[-152.27838135 660.33959961]
[-159.95477295 647.43750000]
[-166.28649902 633.82501221]
[-171.20854187 619.64178467]
[-174.67042542 605.03332520]
[-176.63662720 590.14959717]
[-177.08694458 575.14331055]
[-176.01676941 560.16851807]
[-173.43708801 545.37878418]
[-169.37437439 530.92590332]
[-163.87031555 516.95819092]
[-156.98138428 503.61901855]
[-148.77827454 491.04525757]
[-139.34516907 479.36587524]
[-128.77885437 468.70077515]
[-117.18778992 459.15939331]
[-104.69088745 450.83963013]
[-91.41639709 443.82687378]
[-77.50053406 438.19305420]
[-63.08610153 433.99603271]
[-48.32101059 431.27883911]
[-33.35678101 430.06933594]
[-18.34696770 430.38000488]
[-3.44559598 432.20761108]
[-0.12333654 417.58013916]
[3.19892287 402.95266724]
[1.61495900 395.73376465]
[6.68106890 388.13293457]
[10.22074127 373.55657959]
[5.70531321 359.36288452]
[16.48063850 347.77828979]
[20.02031136 333.20193481]
[15.50488281 319.00827026]
[26.28020859 307.42364502]
[29.81988144 292.84729004]
[33.35955429 278.27090454]
[32.01795959 275.80953979]
[31.57050896 272.66845703]
[32.28097916 269.18557739]
[34.28607178 265.78790283]
[37.56817627 262.94506836]
[41.96917725 248.60520935]
[46.37017441 234.26536560]
[50.77117157 219.92552185]
[55.06529617 205.55329895]
[59.25230789 191.14952087]
[63.43931961 176.74574280]
[67.62632751 162.34196472]
[71.81333923 147.93817139]
[59.58576202 156.62646484]
[44.60735703 157.43110657]
[31.51935387 150.10279846]
[24.37721062 136.91227722]
[25.39399529 121.94678497]
[34.25465012 109.84352875]
[48.21360016 104.35283661]
[62.94551849 107.17607117]
[73.88555145 117.43840790]
[77.64381409 131.96022034]
[83.71765137 118.24494934]
[89.79148102 104.52967834]
[95.76304626 90.76957703]
[94.04208374 75.04225159]
[106.14228058 66.35694122]
[112.01124573 52.55276489]
[112.48900604 43.43083572]
[118.07171631 38.58778763]
[124.14554596 24.87252045]
[130.21939087 11.15725422]
[136.29321289 -2.55801201]
[134.80661011 -18.30921936]
[147.03477478 -26.81340981]
[145.54815674 -42.56461716]
[157.77632141 -51.06880951]
[163.85015869 -64.78407288]
[169.92399597 -78.49934387]
[173.78829956 -92.99303436]
[175.34881592 -107.91163635]
[173.12918091 -116.77228546]
[177.04524231 -123.04015350]
[178.82771301 -137.93386841]
[180.61018372 -152.82759094]
[182.39263916 -167.72131348]
[184.06419373 -182.62788391]
[185.62471008 -197.54649353]
[187.18522644 -212.46508789]
[173.44400024 -218.82569885]
[162.51432800 -229.30523682]
[155.58175659 -242.76698303]
[153.39831543 -257.75067139]
[156.20082092 -272.63101196]
[163.68528748 -285.79391479]
[175.03985596 -295.81152344]
[189.03288269 -301.59719849]
[204.14646912 -302.52340698]
[218.74125671 -298.48965454]
[231.23406982 -289.93347168]
[240.26980591 -277.78298950]
[244.86831665 -263.35617065]
[244.53082275 -248.21798706]
[239.29389954 -234.01048279]
[229.72561646 -222.27478027]
[216.86389160 -214.28387451]
[202.10383606 -210.90457153]
[200.54331970 -195.98596191]
[198.98278809 -181.06735229]
[201.41336060 -174.08781433]
[197.28636169 -165.93884277]
[195.50389099 -151.04512024]
[193.72143555 -136.15141296]
[191.93896484 -121.25769043]
[190.26742554 -106.35112000]
[188.70689392 -91.43251038]
[196.83177185 -104.04150391]
[208.02047729 -114.03213501]
[221.46531677 -120.68318176]
[236.19567871 -123.51449585]
[251.14817810 -122.32167816]
[265.24337769 -117.19084930]
[277.46371460 -108.49240112]
[286.92703247 -96.85427856]
[292.95013428 -83.11666107]
[295.09820557 -68.27126312]
[293.21618652 -53.38979721]
[287.43997192 -39.54656601]
[278.18649292 -27.74092484]
[266.12377930 -18.82513237]
[252.12268066 -13.44282818]
[237.19393921 -11.98256397]
[222.41525269 -14.54975891]
[208.85351562 -20.95908546]
[197.48777771 -30.74784660]
[189.13851929 -43.20938492]
[184.40849304 -57.44409180]
[183.63925171 -72.42550659]
[177.56542969 -58.71023941]
[171.49159241 -44.99497604]
[173.41264343 -30.22477341]
[160.75003052 -20.73957634]
[162.67109680 -5.96937609]
[150.00848389 3.51582193]
[143.93464661 17.23108864]
[137.86080933 30.94635582]
[131.78698730 44.66162109]
[125.81542206 58.42172623]
[119.94645691 72.22589874]
[122.08720398 86.96586609]
[109.56722260 96.63853455]
[109.56221771 104.69908905]
[103.50675201 110.60351562]
[97.43291473 124.31877899]
[91.35908508 138.03404236]
[86.21712494 152.12518311]
[82.03011322 166.52897644]
[77.84310150 180.93275452]
[73.65608978 195.33653259]
[69.46907806 209.74031067]
[70.07866669 218.85438538]
[65.11102295 224.32652283]
[60.71002197 238.66636658]
[56.30902481 253.00621033]
[51.90802383 267.34606934]
[47.93592834 281.81057739]
[44.39625549 296.38696289]
[40.85658264 310.96331787]
[45.11883163 326.19958496]
[34.59668732 336.74160767]
[31.05701447 351.31796265]
[35.31925964 366.55422974]
[24.79711723 377.09625244]
[21.25744438 391.67260742]
[17.82638359 406.27493286]
[14.50412369 420.90240479]
[11.18186378 435.52984619]
[25.41071892 440.31845093]
[39.08210754 446.52200317]
[52.05573654 454.07687378]
[64.19847870 462.90551758]
[75.38572693 472.91732788]
[85.50268555 484.00958252]
[94.44553375 496.06848145]
[102.12249756 508.97021484]
[108.45481110 522.58245850]
[113.37749481 536.76550293]
[116.84001923 551.37377930]
[118.80686188 566.25738525]
[119.25784302 581.26367188]
[118.18833160 596.23852539]
[115.60930634 611.02838135]
[111.54722595 625.48144531]
[106.04376984 639.44934082]
[99.15542603 652.78881836]
[90.95287323 665.36297607]
[81.52028656 677.04272461]
[70.95445251 687.70831299]
[59.36379623 697.25018311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 188]
[39 187]
[40 186]
[42 185]
[43 184]
[45 182]
[46 181]
[48 179]
[49 178]
[50 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[73 166]
[74 165]
[75 164]
[76 162]
[78 160]
[79 159]
[81 158]
[82 157]
[83 156]
[84 155]
[86 153]
[88 151]
[89 150]
[90 149]
[91 127]
[92 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
