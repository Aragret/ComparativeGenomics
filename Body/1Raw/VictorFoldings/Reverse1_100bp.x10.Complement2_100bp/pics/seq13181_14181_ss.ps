%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[66.24845886 593.01184082]
[58.33773041 580.19122314]
[53.47868347 565.93157959]
[51.91505051 550.94818115]
[53.72526169 535.99255371]
[58.81851959 521.81488037]
[66.93934631 509.12628174]
[77.68041229 498.56326294]
[90.50293732 490.65563965]
[104.76375580 485.80004883]
[103.20323181 470.88143921]
[101.64270782 455.96282959]
[99.86024475 441.06912231]
[97.85623169 426.20358276]
[95.85221863 411.33807373]
[93.84820557 396.47253418]
[91.84419250 381.60699463]
[81.91213226 392.84774780]
[66.94984436 393.91073608]
[55.52840042 384.18701172]
[54.19052505 369.24679565]
[63.70261383 357.64849854]
[78.61570740 356.03619385]
[90.38644409 365.33261108]
[89.71665955 350.34756470]
[89.04687500 335.36251831]
[86.18946838 331.53573608]
[85.70568085 325.87332153]
[88.58696747 319.92269897]
[88.36363983 304.92437744]
[88.14031219 289.92602539]
[79.68167114 281.27862549]
[79.37287140 268.78506470]
[87.92469025 259.12954712]
[87.92469025 244.12956238]
[87.92469025 229.12956238]
[87.92469025 214.12956238]
[87.92469025 199.12956238]
[87.92469025 184.12956238]
[87.92469025 169.12956238]
[75.63402557 177.72836304]
[61.20558929 173.62710571]
[55.27549362 159.84907532]
[62.21518326 146.55093384]
[76.90897369 143.53556824]
[88.52445221 153.02429199]
[89.64009857 138.06584167]
[82.87084198 124.79834747]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[87.41950226 54.12178040]
[73.72396088 60.23995209]
[58.74835587 59.38481140]
[45.83827972 51.74740601]
[37.87788010 39.03395081]
[36.64552689 24.08465767]
[42.41653061 10.23924351]
[53.90163803 0.59080696]
[68.53504181 -2.70516682]
[83.04760742 1.08765149]
[94.19718933 11.12193680]
[99.49293518 25.15602493]
[103.03260803 10.57964993]
[98.77036285 -4.65661669]
[109.29251099 -15.19861603]
[112.83218384 -29.77499008]
[116.37185669 -44.35136795]
[119.91152954 -58.92774200]
[123.45120239 -73.50411987]
[126.99086761 -88.08049011]
[129.32635498 -102.89756012]
[130.44200134 -117.85601044]
[131.33482361 -132.82942200]
[132.00460815 -147.81445312]
[132.67439270 -162.79949951]
[133.34417725 -177.78453064]
[123.17112732 -186.61196899]
[119.98609161 -199.49862671]
[124.73435211 -211.68617249]
[135.47360229 -218.80642700]
[136.36640930 -233.77983093]
[137.25923157 -248.75323486]
[138.15205383 -263.72665405]
[139.04486084 -278.70004272]
[139.93768311 -293.67346191]
[129.72509766 -305.43530273]
[130.84384155 -320.60772705]
[142.11990356 -330.27139282]
[143.01271057 -345.24481201]
[143.34768677 -360.24105835]
[143.12435913 -375.23937988]
[142.90103149 -390.23773193]
[142.67770386 -405.23608398]
[128.43464661 -410.48007202]
[117.05031586 -420.51806641]
[110.06436920 -433.99252319]
[108.42158508 -449.08111572]
[112.34414673 -463.74325562]
[121.30155182 -475.99597168]
[134.08239746 -484.18222046]
[148.95816040 -487.19485474]
[163.91702271 -484.62646484]
[176.93592834 -476.82437134]
[186.25418091 -464.84378052]
[190.61154175 -450.30493164]
[189.41873169 -435.17413330]
[182.83706665 -421.49765015]
[171.75666809 -411.12515259]
[157.67604065 -405.45941162]
[157.89936829 -390.46105957]
[158.12269592 -375.46270752]
[158.34602356 -360.46438599]
[170.50730896 -369.24523926]
[184.99520874 -365.35925293]
[191.12977600 -351.67105103]
[184.38883972 -338.27102661]
[169.74157715 -335.03723145]
[157.98611450 -344.35198975]
[157.09330750 -329.37857056]
[167.14111328 -318.44345093]
[166.44897461 -303.24557495]
[154.91108704 -292.78063965]
[154.01826477 -277.80722046]
[153.12545776 -262.83383179]
[152.23263550 -247.86042786]
[151.33982849 -232.88700867]
[150.44700623 -217.91360474]
[162.13735962 -205.82334900]
[161.45292664 -188.68139648]
[148.32922363 -177.11474609]
[147.65943909 -162.12971497]
[146.98963928 -147.14466858]
[146.31985474 -132.15963745]
[148.82446289 -128.09318542]
[148.80114746 -122.41018677]
[145.40046692 -116.74036407]
[144.28480530 -101.78191376]
[153.64068604 -113.50657654]
[167.33622742 -119.62474823]
[182.31182861 -118.76960754]
[195.22190857 -111.13220215]
[203.18231201 -98.41874695]
[204.41465759 -83.46945190]
[198.64366150 -69.62403870]
[187.15855408 -59.97560120]
[172.52514648 -56.67962646]
[158.01257324 -60.47244644]
[146.86300659 -70.50672913]
[141.56724548 -84.54081726]
[138.02757263 -69.96444702]
[134.48789978 -55.38806915]
[130.94822693 -40.81169510]
[127.40855408 -26.23531914]
[123.86888123 -11.65894318]
[128.38430786 2.53472352]
[117.60898590 14.11932278]
[114.06931305 28.69569778]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[113.26103210 127.06494904]
[104.59854889 139.18148804]
[103.48290253 154.13993835]
[102.92469025 169.12956238]
[102.92469025 184.12956238]
[102.92469025 199.12956238]
[102.92469025 214.12956238]
[102.92469025 229.12956238]
[102.92469025 244.12956238]
[102.92469025 259.12954712]
[112.49938202 274.85873413]
[103.13864899 289.70269775]
[103.36197662 304.70104980]
[103.58530426 319.69937134]
[104.03191376 334.69271851]
[104.70169830 349.67776489]
[105.37148285 364.66281128]
[106.70971680 379.60299683]
[108.71372986 394.46853638]
[110.71774292 409.33404541]
[112.72175598 424.19958496]
[114.72577667 439.06509399]
[118.45790100 444.52246094]
[118.81944275 450.19400024]
[116.56131744 454.40231323]
[118.12184143 469.32092285]
[119.68235779 484.23953247]
[134.63929749 486.03887939]
[148.82067871 491.12182617]
[161.51515198 499.23342896]
[172.08596802 509.96679688]
[180.00291443 522.78356934]
[184.86886597 537.04083252]
[186.43977356 552.02349854]
[184.63679504 566.98004150]
[179.55041504 581.16015625]
[171.43572998 593.85266113]
[160.69979858 604.42089844]
[147.88110352 612.33471680]
[133.62263489 617.19726562]
[118.63959503 618.76452637]
[103.68353271 616.95788574]
[89.50462341 611.86810303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[24 184]
[25 183]
[26 182]
[29 181]
[30 180]
[31 179]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[46 170]
[47 169]
[49 167]
[51 165]
[52 164]
[53 163]
[54 162]
[66 161]
[67 160]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 141]
[76 140]
[77 137]
[78 136]
[79 135]
[80 134]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[92 123]
[93 122]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
