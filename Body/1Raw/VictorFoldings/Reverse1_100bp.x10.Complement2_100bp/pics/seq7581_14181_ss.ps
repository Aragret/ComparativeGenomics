%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[233.14891052 576.39202881]
[240.11781311 563.08734131]
[248.66893005 550.73992920]
[258.67260742 539.53698730]
[269.97723389 529.64837646]
[261.56259155 517.23083496]
[253.14797974 504.81335449]
[244.73336792 492.39587402]
[236.31874084 479.97836304]
[227.90412903 467.56088257]
[219.48951721 455.14337158]
[211.07489014 442.72589111]
[206.63708496 440.96096802]
[203.26087952 436.38949585]
[202.60105896 429.81103516]
[194.55987549 417.14852905]
[186.51870728 404.48599243]
[178.47753906 391.82345581]
[170.43635559 379.16094971]
[162.39518738 366.49841309]
[162.29083252 381.49804688]
[155.76657104 395.00485229]
[144.08209229 404.41088867]
[129.49353027 407.89996338]
[114.81768799 404.79843140]
[102.88823700 395.70510864]
[96.00857544 382.37582397]
[95.50705719 367.38421631]
[101.48051453 353.62490845]
[112.77556610 343.75466919]
[127.21131897 339.67926025]
[142.00045776 342.18554688]
[154.28826904 350.79058838]
[148.62548828 336.90057373]
[142.96270752 323.01055908]
[137.29991150 309.12051392]
[125.33037567 300.25601196]
[127.28530121 284.55606079]
[121.62251282 270.66604614]
[115.95972443 256.77600098]
[114.35099792 271.68948364]
[108.04674530 285.30038452]
[97.71225739 296.17227173]
[84.43815613 303.15786743]
[69.62530518 305.51992798]
[54.83692169 303.00918579]
[41.63367462 295.89059448]
[31.40892220 284.91543579]
[25.24171257 271.24188232]
[23.78288460 256.31298828]
[27.18639374 241.70423889]
[35.09305573 228.95729065]
[46.66846848 219.41737366]
[60.69104385 214.09127808]
[75.68094635 213.54104614]
[90.05625916 217.82478333]
[102.29992676 226.49038696]
[111.11991882 238.62353516]
[109.11590576 223.75801086]
[107.11189270 208.89248657]
[105.10787964 194.02694702]
[103.10386658 179.16142273]
[101.09985352 164.29589844]
[89.13627625 155.49768066]
[86.89215851 140.45046997]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[79.42117310 61.39963531]
[85.38873291 47.75275040]
[83.38471985 32.88722229]
[80.19283295 28.75697136]
[79.02154541 24.26460457]
[79.67041016 20.24042511]
[81.63851929 17.31486702]
[80.30028534 2.37468266]
[78.85086823 -12.55512619]
[77.29034424 -27.47373009]
[75.72982025 -42.39233398]
[74.16929626 -57.31093979]
[64.65937042 -66.02438354]
[63.66673660 -78.48224640]
[71.17984772 -87.96273804]
[69.84161377 -102.90292358]
[68.50337982 -117.84310913]
[56.65901947 -127.95987701]
[55.51468658 -143.13041687]
[65.23246765 -154.35984802]
[63.89423752 -169.30003357]
[62.55600357 -184.24021912]
[61.21776581 -199.18040466]
[46.46647263 -202.53517151]
[33.47488022 -210.28590393]
[23.51576805 -221.67323303]
[17.56483269 -235.58155823]
[16.20508766 -250.64828491]
[19.56974220 -265.39733887]
[27.32916641 -278.38372803]
[38.72316742 -288.33520508]
[52.63547897 -294.27682495]
[67.70311737 -295.62646484]
[82.44989777 -292.25192261]
[95.43109894 -284.48379517]
[105.37493896 -273.08312988]
[111.30722809 -259.16683960]
[112.64678192 -244.09831238]
[109.26235962 -229.35379028]
[101.48554230 -216.37780762]
[90.07821655 -206.44160461]
[76.15795135 -200.51864624]
[77.49618530 -185.57846069]
[78.83441925 -170.63827515]
[80.17265320 -155.69808960]
[91.73143768 -146.37445068]
[93.30142212 -131.24203491]
[83.44356537 -119.18134308]
[84.78179932 -104.24115753]
[86.12003326 -89.30097198]
[96.97425079 -75.51138306]
[89.08790588 -58.87146378]
[90.64842987 -43.95285797]
[92.20895386 -29.03425407]
[93.76947021 -14.11564922]
[97.59178925 -7.79016685]
[95.24047089 1.03644860]
[96.57870483 15.97663403]
[98.25024414 30.88320732]
[100.25426483 45.74873734]
[109.62257385 57.32820129]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[123.35145569 135.53541565]
[125.17205048 150.63972473]
[115.96537781 162.29188538]
[117.96939087 177.15740967]
[119.97340393 192.02293396]
[121.97741699 206.88847351]
[123.98143005 221.75399780]
[125.98544312 236.61952209]
[129.84974670 251.11322021]
[135.51254272 265.00323486]
[141.17532349 278.89328003]
[153.54991150 288.75128174]
[151.18994141 303.45773315]
[156.85272217 317.34774780]
[162.51551819 331.23779297]
[168.17829895 345.12780762]
[175.05770874 358.45724487]
[183.09889221 371.11978149]
[191.14006042 383.78228760]
[199.18122864 396.44482422]
[207.22241211 409.10733032]
[215.26358032 421.76986694]
[223.49238586 434.31127930]
[231.90701294 446.72875977]
[240.32162476 459.14627075]
[248.73623657 471.56375122]
[257.15084839 483.98126221]
[265.56549072 496.39874268]
[273.98010254 508.81625366]
[282.39471436 521.23376465]
[295.76882935 514.39904785]
[309.88146973 509.25973511]
[324.51873779 505.89370728]
[339.45870972 504.35198975]
[354.47491455 504.65795898]
[369.33969116 506.80694580]
[383.82769775 510.76638794]
[397.71929932 516.47631836]
[410.80389404 523.85009766]
[422.88314819 532.77593994]
[433.77395630 543.11859131]
[443.31115723 554.72125244]
[451.35021973 567.40795898]
[457.76925659 580.98645020]
[462.47094727 595.25091553]
[465.38403320 609.98498535]
[466.46432495 624.96539307]
[465.69549561 639.96502686]
[463.08914185 654.75646973]
[458.68484497 669.11547852]
[452.54928589 682.82440186]
[444.77554321 695.67541504]
[435.48147583 707.47369385]
[424.80789185 718.04040527]
[412.91671753 727.21527100]
[399.98812866 734.85931396]
[386.21813965 740.85656738]
[371.81552124 745.11621094]
[356.99859619 747.57354736]
[341.99200439 748.19146729]
[327.02322388 746.96044922]
[312.31921387 743.89923096]
[298.10281372 739.05426025]
[284.58959961 732.49890137]
[271.98440552 724.33258057]
[260.47830200 714.67913818]
[250.24577332 703.68481445]
[241.44190979 691.51635742]
[234.20016479 678.35821533]
[228.63034058 664.40985107]
[224.81686401 649.88275146]
[222.81756592 634.99707031]
[222.66271973 619.97857666]
[224.35470581 605.05487061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[33 152]
[34 151]
[35 150]
[36 149]
[38 147]
[39 146]
[40 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[66 136]
[67 135]
[69 133]
[70 132]
[72 130]
[73 129]
[77 128]
[78 127]
[79 125]
[80 124]
[81 123]
[82 122]
[85 120]
[86 119]
[87 118]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
