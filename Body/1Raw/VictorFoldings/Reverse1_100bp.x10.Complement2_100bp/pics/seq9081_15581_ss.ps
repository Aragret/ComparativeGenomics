%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[40.38308334 437.56921387]
[45.02004623 451.90780640]
[46.22470856 466.92932129]
[43.93210602 481.82363892]
[38.26587677 495.78753662]
[29.53158951 508.06796265]
[18.20027733 518.00268555]
[4.88302135 525.05584717]
[-9.70199394 528.84716797]
[-24.76821899 529.17211914]
[-39.50314713 526.01324463]
[-53.11214828 519.54083252]
[-64.86130524 510.10400391]
[-74.11699677 498.21163940]
[-80.38007355 484.50503540]
[-83.31278229 469.72341919]
[-82.75695801 454.66394043]
[-78.74258423 440.13876343]
[-71.48615265 426.93115234]
[-61.37897873 415.75341797]
[-48.96614456 407.20834351]
[-34.91704941 401.75677490]
[-19.98934746 399.69268799]
[-4.98807096 401.12738037]
[-0.16207333 386.92492676]
[4.66392422 372.72247314]
[9.48992157 358.52001953]
[14.31591988 344.31756592]
[19.14191818 330.11511230]
[23.96791458 315.91265869]
[28.79391289 301.71020508]
[33.51404572 287.47222900]
[38.12805557 273.19949341]
[34.68081284 258.70928955]
[46.28791428 247.95820618]
[50.90192413 233.68547058]
[46.30838776 216.74833679]
[60.07662582 204.52062988]
[64.47762299 190.18077087]
[68.87862396 175.84092712]
[73.27961731 161.50108337]
[77.68061829 147.16123962]
[74.01802063 132.72396851]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[93.66580200 63.20677567]
[104.34373474 52.82260132]
[108.10003662 38.30054474]
[111.85633850 23.77848434]
[115.61264038 9.25642490]
[119.36894226 -5.26563406]
[123.12524414 -19.78769302]
[113.21983337 -8.52345943]
[100.67288971 -0.30310565]
[86.39018250 4.27993250]
[71.40279388 4.89480162]
[56.79266739 1.49711382]
[43.61453247 -5.66784859]
[32.81972122 -16.08284187]
[25.18752480 -28.99599648]
[21.26891708 -43.47510147]
[21.34678459 -58.47489929]
[25.41550827 -72.91254425]
[33.18136215 -85.74575806]
[44.08372498 -96.04811859]
[57.33554077 -103.07587433]
[71.98015594 -106.32168579]
[86.96035004 -105.55124664]
[101.19470978 -100.82016754]
[113.65563202 -92.46999359]
[123.44355011 -81.10352325]
[129.85186768 -67.54132080]
[132.41796875 -52.76244354]
[130.95634460 -37.83266830]
[138.99751282 -50.49519348]
[147.03868103 -63.15771866]
[155.07984924 -75.82024384]
[163.12103271 -88.48276520]
[171.16220093 -101.14529419]
[179.20336914 -113.80781555]
[187.24455261 -126.47034454]
[195.28572083 -139.13287354]
[192.05711365 -154.37142944]
[200.39237976 -167.09848022]
[214.93992615 -170.08256531]
[222.98109436 -182.74508667]
[231.02226257 -195.40760803]
[231.37168884 -213.81846619]
[247.23124695 -221.33119202]
[255.08300781 -234.11204529]
[262.93475342 -246.89288330]
[268.39010620 -260.86569214]
[271.27539062 -275.58557129]
[274.16067505 -290.30545044]
[277.04592896 -305.02536011]
[279.93121338 -319.74523926]
[266.11791992 -325.74588013]
[253.91783142 -334.57601929]
[243.90150452 -345.82266235]
[236.53746033 -358.95983887]
[232.17010498 -373.37301636]
[231.00372314 -388.38815308]
[233.09288025 -403.30288696]
[238.33982849 -417.41967773]
[246.49919128 -430.07821655]
[257.18930054 -440.68649292]
[269.91021729 -448.74829102]
[284.06692505 -453.88656616]
[298.99728394 -455.86099243]
[314.00299072 -454.57922363]
[328.38217163 -450.10119629]
[341.46234131 -442.63638306]
[352.63168335 -432.53390503]
[361.36776733 -420.26626587]
[367.26202393 -406.40728760]
[370.03875732 -391.60513306]
[369.56808472 -376.55212402]
[365.87203979 -361.95236206]
[359.12347412 -348.48867798]
[349.63806152 -336.79077148]
[337.85940552 -327.40582275]
[324.33843994 -320.77273560]
[309.70758057 -317.20178223]
[294.65109253 -316.85998535]
[291.76583862 -302.14007568]
[288.88055420 -287.42019653]
[285.99526978 -272.70028687]
[283.11001587 -257.98040771]
[292.22705078 -269.89172363]
[303.89886475 -279.31344604]
[317.46533203 -285.71273804]
[332.15921021 -288.72769165]
[347.14950562 -288.18777466]
[361.58840942 -284.12356567]
[374.65936279 -276.76486206]
[385.62310791 -266.52786255]
[393.85961914 -253.99153137]
[398.90307617 -239.86483765]
[400.46826172 -224.94673157]
[398.46661377 -210.08087158]
[393.01138306 -196.10803223]
[384.41107178 -183.81842041]
[373.15203857 -173.90708923]
[359.87109375 -166.93457031]
[345.31927490 -163.29518127]
[330.31964111 -163.19474792]
[315.72039795 -166.63896179]
[302.34725952 -173.43304443]
[290.95654297 -183.19273376]
[282.19244385 -195.36607361]
[276.55059814 -209.26461792]
[274.35009766 -224.10234070]
[275.71560669 -239.04112244]
[267.86386108 -226.26028442]
[260.01208496 -213.47944641]
[262.51690674 -201.64506531]
[256.08007812 -190.93287659]
[243.68479919 -187.36643982]
[235.64361572 -174.70391846]
[227.60244751 -162.04138184]
[231.08781433 -147.60574341]
[223.11331177 -134.64959717]
[207.94824219 -131.09169006]
[199.90707397 -118.42916870]
[191.86590576 -105.76664734]
[183.82472229 -93.10411835]
[175.78355408 -80.44159698]
[167.74238586 -67.77906799]
[159.70120239 -55.11654663]
[151.66003418 -42.45402145]
[143.61886597 -29.79149628]
[137.64729309 -16.03139305]
[133.89100647 -1.50933361]
[130.13470459 13.01272583]
[126.37839508 27.53478432]
[122.62210083 42.05684280]
[118.86579895 56.57890320]
[123.16940308 70.83822632]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[103.15142822 141.66522217]
[92.02046967 151.56224060]
[87.61946869 165.90208435]
[83.21846771 180.24192810]
[78.81747437 194.58177185]
[74.41647339 208.92161560]
[79.75900269 220.66130066]
[75.79818726 232.51438904]
[65.17465973 238.29948425]
[60.56064606 252.57221985]
[63.67786789 268.08328247]
[52.40079117 277.81347656]
[47.78678131 292.08621216]
[48.12474060 301.21438599]
[42.99636841 306.53619385]
[38.17037201 320.73864746]
[33.34437180 334.94110107]
[28.51837540 349.14355469]
[23.69237709 363.34603882]
[18.86638069 377.54849243]
[14.04038239 391.75094604]
[9.21438503 405.95339966]
[21.98413658 413.95526123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 200]
[33 199]
[35 197]
[36 196]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[44 187]
[45 186]
[46 182]
[47 181]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[87 162]
[88 161]
[89 160]
[91 157]
[92 156]
[93 155]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
