%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[95.33996582 816.82684326]
[80.43541718 815.08996582]
[65.67638397 812.38201904]
[51.12606049 808.71453857]
[36.84675598 804.10327148]
[22.89961815 798.56793213]
[9.34436989 792.13232422]
[-3.76094389 784.82391357]
[-16.36020279 776.67401123]
[-28.39945412 767.71752930]
[-39.82714081 757.99279785]
[-50.59433365 747.54150391]
[-60.65492249 736.40832520]
[-69.96582031 724.64105225]
[-78.48716736 712.28997803]
[-86.18246460 699.40802002]
[-93.01876831 686.05035400]
[-98.96679688 672.27416992]
[-104.00107574 658.13842773]
[-108.10005188 643.70373535]
[-111.24617767 629.03186035]
[-113.42597961 614.18560791]
[-114.63011169 599.22863770]
[-114.85343170 584.22485352]
[-114.09497833 569.23864746]
[-112.35800171 554.33410645]
[-109.64993286 539.57507324]
[-105.98237610 525.02478027]
[-101.37102509 510.74551392]
[-95.83563995 496.79840088]
[-89.39992523 483.24319458]
[-82.09142303 470.13793945]
[-73.94144440 457.53872681]
[-64.98488617 445.49951172]
[-55.26009750 434.07189941]
[-44.80872726 423.30474854]
[-33.67552567 413.24423218]
[-21.90817261 403.93341064]
[-9.55705166 395.41213989]
[3.32494330 387.71691895]
[16.68265152 380.88067627]
[30.45886993 374.93273926]
[44.59460831 369.89852905]
[59.02933502 365.79965210]
[73.70123291 362.65359497]
[88.54748535 360.47390747]
[103.50450897 359.26983643]
[103.28118134 344.27151489]
[103.05785370 329.27316284]
[102.83452606 314.27484131]
[102.61119843 299.27648926]
[91.77789307 289.11898804]
[91.33775330 273.91171265]
[102.06533813 262.61761475]
[101.84201050 247.61929321]
[101.61868286 232.62095642]
[101.17208099 217.62759399]
[100.50229645 202.64256287]
[99.83251190 187.65751648]
[99.16271973 172.67248535]
[98.15846252 157.70614624]
[96.82022858 142.76596069]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[76.99095154 44.15805435]
[84.75659180 28.42078018]
[82.97412109 13.52706242]
[81.08083344 -1.35297263]
[79.07682037 -16.21850014]
[66.79253387 -25.79629707]
[64.97194672 -40.90060425]
[74.17861176 -52.55276489]
[72.17459869 -67.41829681]
[70.17058563 -82.28382111]
[68.16657257 -97.14935303]
[61.79459000 -83.57003021]
[50.21663284 -74.03321838]
[35.66822433 -70.38030243]
[20.95842934 -73.31662750]
[8.92748356 -82.27521515]
[1.89837265 -95.52631378]
[1.22830760 -110.51133728]
[7.04666758 -124.33692169]
[18.23001862 -134.33355713]
[32.61903000 -138.57104492]
[47.43540955 -136.23120117]
[59.81834793 -127.76580811]
[67.37728119 -114.80818939]
[68.04706573 -129.79322815]
[68.71685028 -144.77825928]
[69.38663483 -159.76330566]
[69.94484711 -174.75291443]
[70.39144897 -189.74626160]
[70.83805847 -204.73960876]
[71.28466034 -219.73295593]
[71.73126984 -234.72631836]
[58.15929794 -241.70945740]
[48.96810150 -253.89488220]
[45.98260117 -268.86315918]
[49.79556656 -283.64236450]
[59.64993286 -295.29800415]
[73.58911133 -301.51589966]
[88.84545898 -301.06146240]
[102.38982391 -294.02490234]
[111.53296661 -281.80337524]
[114.45949554 -266.82345581]
[110.58836365 -252.05941772]
[100.68817139 -240.44265747]
[86.72461700 -234.27970886]
[86.27801514 -219.28636169]
[85.83140564 -204.29301453]
[85.38480377 -189.29965210]
[84.93819427 -174.30630493]
[87.88114929 -167.52687073]
[84.37167358 -159.09352112]
[83.70188904 -144.10847473]
[83.03210449 -129.12344360]
[82.36231995 -114.13840485]
[83.03210449 -99.15336609]
[85.03611755 -84.28783417]
[87.04013062 -69.42230988]
[89.04414368 -54.55677795]
[101.00771332 -45.75856781]
[103.25183868 -30.71135521]
[93.94234467 -18.22251511]
[95.94635773 -3.35698628]
[99.95530701 2.85188675]
[97.86784363 11.74459648]
[99.65030670 26.63831329]
[108.96268463 34.35882187]
[110.56957245 46.75243378]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[114.29463196 134.48513794]
[111.76041412 141.42771912]
[113.09864807 156.36790466]
[116.10292053 160.63656616]
[117.07245636 165.17674255]
[116.24454498 169.16793823]
[114.14775848 172.00270081]
[114.81755066 186.98773193]
[115.48733521 201.97277832]
[116.15711975 216.95780945]
[119.38748169 222.72637939]
[119.24159241 228.40754700]
[116.61701965 232.39762878]
[116.84034729 247.39596558]
[117.06367493 262.39428711]
[128.12277222 273.36398315]
[128.13560486 288.57760620]
[117.60953522 299.05316162]
[117.83286285 314.05151367]
[118.05619049 329.04983521]
[118.27951813 344.04818726]
[118.50284576 359.04650879]
[133.48908997 359.80471802]
[148.39364624 361.54141235]
[163.15270996 364.24923706]
[177.70307922 367.91653442]
[191.98243713 372.52761841]
[205.92964172 378.06277466]
[219.48497009 384.49826050]
[232.59037781 391.80651855]
[245.18972778 399.95626831]
[257.22909546 408.91262817]
[268.65689087 418.63720703]
[279.42419434 429.08837891]
[289.48492432 440.22140503]
[298.79595947 451.98858643]
[307.31744385 464.33956909]
[315.01290894 477.22143555]
[321.84936523 490.57901001]
[327.79754639 504.35513306]
[332.83200073 518.49078369]
[336.93115234 532.92541504]
[340.07745361 547.59729004]
[342.25741577 562.44348145]
[343.46173096 577.40051270]
[343.68524170 592.40423584]
[342.92694092 607.39044189]
[341.19015503 622.29504395]
[338.48223877 637.05407715]
[334.81484985 651.60443115]
[330.20367432 665.88372803]
[324.66845703 679.83093262]
[318.23291016 693.38623047]
[310.92456055 706.49157715]
[302.77471924 719.09088135]
[293.81832886 731.13018799]
[284.09365845 742.55792236]
[273.64242554 753.32519531]
[262.50933838 763.38580322]
[250.74209595 772.69677734]
[238.39106750 781.21820068]
[225.50917053 788.91357422]
[212.15153503 795.74993896]
[198.37539673 801.69805908]
[184.23971558 806.73242188]
[169.80503845 810.83148193]
[155.13317871 813.97772217]
[140.28694153 816.15759277]
[125.32994080 817.36181641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[54 156]
[55 155]
[56 154]
[57 151]
[58 150]
[59 149]
[60 148]
[61 144]
[62 143]
[63 141]
[64 140]
[66 138]
[67 137]
[68 136]
[70 133]
[71 132]
[72 130]
[73 129]
[76 126]
[77 125]
[78 124]
[79 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
