%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[22.34006500 638.80419922]
[13.74099636 651.11352539]
[3.83997130 662.40216064]
[-7.24282217 672.53302002]
[-19.37284851 681.38323975]
[-32.40286255 688.84527588]
[-46.17469025 694.82855225]
[-60.52115250 699.26049805]
[-75.26809692 702.08728027]
[-90.23651123 703.27465820]
[-105.24469757 702.80804443]
[-120.11045837 700.69329834]
[-134.65335083 696.95593262]
[-148.69682312 691.64141846]
[-162.07040405 684.81427002]
[-174.61175537 676.55725098]
[-186.16864014 666.97076416]
[-196.60075378 656.17102051]
[-205.78147888 644.28918457]
[-213.59934998 631.46954346]
[-219.95948792 617.86761475]
[-224.78465271 603.64855957]
[-228.01631165 588.98504639]
[-229.61521912 574.05499268]
[-229.56195068 559.03961182]
[-227.85717773 544.12127686]
[-224.52157593 529.48101807]
[-219.59562683 515.29663086]
[-213.13916016 501.74014282]
[-205.23052979 488.97625732]
[-195.96575928 477.15988159]
[-185.45727539 466.43444824]
[-173.83267212 456.93014526]
[-161.23306274 448.76232910]
[-147.81138611 442.03021240]
[-133.73056030 436.81546021]
[-119.16152191 433.18139648]
[-104.28112793 431.17211914]
[-89.27001953 430.81204224]
[-74.31040192 432.10552979]
[-59.58388138 435.03686523]
[-45.26922226 439.57049561]
[-39.19538879 425.85522461]
[-33.12155533 412.13995361]
[-27.04771996 398.42468262]
[-20.97388649 384.70941162]
[-30.81408882 371.89215088]
[-32.85952377 355.76849365]
[-26.45796776 340.72732544]
[-13.26951408 330.91098022]
[3.16276884 329.07470703]
[9.03172970 315.27053833]
[14.90069008 301.46633911]
[20.76965141 287.66217041]
[26.63861275 273.85800171]
[32.50757217 260.05383301]
[38.37653351 246.24964905]
[30.56696510 233.59465027]
[31.72030640 218.59019470]
[41.60321426 207.00651550]
[56.58509827 203.42192078]
[62.45405960 189.61773682]
[67.70077515 175.56527710]
[72.31478882 161.29254150]
[76.92879486 147.01980591]
[81.54280090 132.74707031]
[86.15681458 118.47433472]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[88.82783508 75.70530701]
[93.92440033 61.37074661]
[107.35691833 55.03804016]
[112.18291473 40.83558655]
[117.00891113 26.63313103]
[121.83490753 12.43067455]
[126.23590851 -1.90917253]
[130.20800781 -16.37369728]
[134.18009949 -30.83822060]
[138.15219116 -45.30274582]
[136.90553284 -49.46204758]
[137.03431702 -53.40513229]
[138.30166626 -56.72616196]
[140.36325073 -59.13789368]
[142.81526184 -60.49649429]
[147.64126587 -74.69895172]
[152.46725464 -88.90140533]
[157.29325867 -103.10385895]
[143.68200684 -109.44270325]
[130.83590698 -117.21605682]
[118.90557098 -126.33276367]
[108.03088379 -136.68594360]
[98.33934021 -148.15422058]
[89.94457245 -160.60311890]
[82.94499969 -173.88668823]
[77.42269135 -187.84918213]
[73.44239807 -202.32691956]
[71.05078125 -217.15011597]
[70.27587891 -232.14500427]
[71.12677765 -247.13577271]
[73.59351349 -261.94665527]
[77.64714813 -276.40402222]
[83.24015808 -290.33834839]
[90.30697632 -303.58627319]
[98.76474762 -315.99246216]
[108.51429749 -327.41146851]
[119.44132996 -337.70938110]
[131.41772461 -346.76550293]
[144.30305481 -354.47363281]
[157.94627380 -360.74337769]
[172.18739319 -365.50128174]
[186.85946655 -368.69152832]
[201.79045105 -370.27670288]
[216.80531311 -370.23825073]
[231.72798157 -368.57659912]
[246.38351440 -365.31121826]
[260.60006714 -360.48043823]
[274.21099854 -354.14086914]
[287.05667114 -346.36682129]
[298.98651123 -337.24948120]
[309.86065674 -326.89569092]
[319.55157471 -315.42691040]
[327.94567871 -302.97756958]
[334.94451904 -289.69360352]
[340.46609497 -275.73080444]
[344.44558716 -261.25286865]
[346.83642578 -246.42955017]
[347.61050415 -231.43461609]
[346.75878906 -216.44387817]
[344.29129028 -201.63313293]
[340.23687744 -187.17597961]
[334.64309692 -173.24195862]
[327.57556152 -159.99443054]
[319.11712646 -147.58869934]
[309.36697388 -136.17022705]
[298.43939209 -125.87288666]
[286.46249390 -116.81741333]
[273.57675171 -109.10997772]
[259.93319702 -102.84094238]
[245.69181824 -98.08381653]
[231.01957703 -94.89436340]
[216.08850098 -93.30998230]
[201.07365417 -93.34925079]
[186.15106201 -95.01171112]
[171.49571228 -98.27786255]
[166.66970825 -84.07540894]
[161.84371948 -69.87294769]
[157.01771545 -55.67049408]
[152.61671448 -41.33064651]
[148.64462280 -26.86612320]
[144.67253113 -12.40159988]
[140.70043945 2.06292367]
[141.96815491 4.56313181]
[142.32188416 7.71614408]
[141.50802612 11.17635345]
[139.40266418 14.51281261]
[136.03736877 17.25667191]
[131.21136475 31.45912743]
[126.38536835 45.66158295]
[121.55937195 59.86404037]
[128.35281372 73.06952667]
[123.66088104 87.54158020]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[100.42955017 123.08834839]
[95.81553650 137.36108398]
[91.20153046 151.63381958]
[86.58751678 165.90653992]
[81.97351074 180.17927551]
[95.78675079 174.33168030]
[109.74025726 179.83621216]
[115.84082031 193.53961182]
[110.59376526 207.59194946]
[97.00483704 213.94342041]
[82.85839844 208.95561218]
[76.25823212 195.48670959]
[70.38927460 209.29087830]
[78.20264435 222.56707764]
[76.71774292 237.72123718]
[66.71259308 248.96226501]
[52.18070984 252.11860657]
[46.31174850 265.92279053]
[40.44278717 279.72695923]
[34.57382965 293.53112793]
[28.70486641 307.33529663]
[22.83590698 321.13949585]
[16.96694565 334.94366455]
[25.94727707 345.66824341]
[29.41420364 359.15142822]
[26.74635887 372.74780273]
[18.52032089 383.81491089]
[6.38717604 390.22705078]
[-7.25861931 390.78326416]
[-13.33245373 404.49853516]
[-19.40628815 418.21380615]
[-25.48012161 431.92904663]
[-31.55395508 445.64431763]
[-18.57635307 453.19714355]
[-6.50840425 462.13177490]
[4.50339556 472.33978271]
[14.32537365 483.69726562]
[22.83829880 496.06631470]
[29.93883514 509.29678345]
[35.54078674 523.22808838]
[39.57614899 537.69110107]
[41.99594116 552.51025391]
[42.77078629 567.50567627]
[41.89127731 582.49536133]
[39.36809158 597.29730225]
[35.23185730 611.73175049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 197]
[43 196]
[44 195]
[45 194]
[46 193]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[56 182]
[57 181]
[61 177]
[62 176]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[70 163]
[73 160]
[74 159]
[75 158]
[76 157]
[77 152]
[78 151]
[79 150]
[80 149]
[85 148]
[86 147]
[87 146]
[88 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
