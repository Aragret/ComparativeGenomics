%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[203.13763428 472.48171997]
[208.86692810 458.58810425]
[216.60307312 445.70361328]
[226.17320251 434.11611938]
[237.36355591 424.08447266]
[249.92410278 415.83279419]
[243.64674377 402.20947266]
[237.36938477 388.58615112]
[231.09202576 374.96286011]
[224.81465149 361.33953857]
[218.53729248 347.71621704]
[211.95727539 334.23648071]
[205.07785034 320.90704346]
[198.19844055 307.57763672]
[183.64723206 311.09194946]
[168.66874695 311.02139282]
[154.13368225 307.36572266]
[140.88801575 300.33322144]
[129.70372009 290.32885742]
[121.23382568 277.93090820]
[115.97425842 263.85760498]
[114.23480988 248.92549133]
[116.12091064 234.00205994]
[121.52722931 219.95532227]
[130.14355469 207.60334778]
[141.47261047 197.66664124]
[134.59320068 184.33720398]
[127.71378326 171.00778198]
[120.83437347 157.67834473]
[108.13177490 155.51649475]
[98.85519409 146.29548645]
[96.54933929 133.22285461]
[102.27665710 121.03218842]
[95.59645844 107.60181427]
[92.79961395 106.39054871]
[90.38168335 104.13486481]
[88.73035431 100.97312927]
[88.17676544 97.18501282]
[88.94529724 93.16726685]
[83.07633972 79.36309052]
[77.20737457 65.55891418]
[71.33841705 51.75473404]
[65.46945190 37.95055771]
[59.60049438 24.14638138]
[43.52429199 24.39943314]
[28.61763000 18.47812080]
[17.15217018 7.31662989]
[10.86292458 -7.35474396]
[10.68574905 -23.27779388]
[16.61819649 -38.01397705]
[27.72442627 -49.31785965]
[21.65059090 -63.03312302]
[15.57675743 -76.74839020]
[9.50292397 -90.46366119]
[3.42908978 -104.17892456]
[2.66006994 -89.19865417]
[-2.06965923 -74.96384430]
[-10.41865444 -62.50213242]
[-21.78419495 -52.71313477]
[-35.34579086 -46.30352783]
[-50.12442398 -43.73602295]
[-65.05320740 -45.19597626]
[-79.05442047 -50.57799149]
[-91.11730194 -59.49353027]
[-100.37102509 -71.29898071]
[-106.14755249 -85.14208984]
[-108.02986908 -100.02351379]
[-105.88210297 -114.86895752]
[-99.85929108 -128.60670471]
[-90.39622498 -140.24502563]
[-78.17605591 -148.94372559]
[-64.08096313 -154.07484436]
[-49.12849045 -155.26797485]
[-34.39806366 -152.43696594]
[-20.95309067 -145.78620911]
[-9.76417255 -135.79580688]
[-1.63855386 -123.18592834]
[-3.19907689 -138.10453796]
[-4.75959969 -153.02313232]
[-6.32012272 -167.94174194]
[-14.96693325 -155.68479919]
[-29.12921715 -150.74215698]
[-43.52479172 -154.95730591]
[-52.78446579 -166.75808716]
[-53.45460510 -181.74310303]
[-45.28527069 -194.32331848]
[-31.32341766 -199.80662537]
[-16.77647400 -196.14788818]
[-7.06964064 -184.71063232]
[-6.84631300 -199.70896912]
[-6.62298536 -214.70730591]
[-6.39965725 -229.70564270]
[-21.05947113 -233.15585327]
[-34.63465881 -239.67723083]
[-46.49028397 -248.96475220]
[-56.07183456 -260.58404541]
[-62.93117142 -273.99163818]
[-66.74745941 -288.56045532]
[-67.34221649 -303.60903931]
[-64.68762207 -318.43359375]
[-58.90782547 -332.34072876]
[-50.27317047 -344.67996216]
[-39.18751144 -354.87417603]
[-26.16934204 -362.44659424]
[-11.82754898 -367.04299927]
[3.16707706 -368.44845581]
[18.11321068 -366.59716797]
[32.31179047 -361.57580566]
[45.09872818 -353.61914062]
[55.87595749 -343.09936523]
[64.13939667 -330.50851440]
[69.50256348 -316.43548584]
[71.71459961 -301.53845215]
[70.67205811 -286.51425171]
[66.42369080 -272.06552124]
[59.16820145 -258.86810303]
[49.24494934 -247.53924561]
[37.11805344 -238.60882568]
[23.35472107 -232.49452209]
[8.59867954 -229.48231506]
[8.37535191 -214.48397827]
[8.15202427 -199.48564148]
[7.92869663 -184.48730469]
[8.59848213 -169.50227356]
[10.15900517 -154.58366394]
[11.71952820 -139.66505432]
[13.28005123 -124.74645233]
[17.14435577 -110.25276184]
[23.21819115 -96.53749084]
[29.29202461 -82.82222748]
[35.36585999 -69.10695648]
[41.43969345 -55.39169312]
[55.44599533 -56.26508713]
[68.93785095 -52.29667282]
[80.28885651 -43.94357681]
[88.12342834 -32.19276047]
[91.48351288 -18.44442940]
[89.94568634 -4.34520340]
[83.67440033 8.40909767]
[73.40467072 18.27742004]
[79.27363586 32.08159637]
[85.14259338 45.88577271]
[91.01155090 59.68995285]
[96.88051605 73.49412537]
[102.74947357 87.29830170]
[109.02684021 100.92162323]
[115.70703125 114.35199738]
[132.39030457 119.61389160]
[139.95727539 135.01051331]
[134.16380310 150.79893494]
[141.04321289 164.12837219]
[147.92262268 177.45779419]
[154.80203247 190.78723145]
[169.46459961 187.30947876]
[184.52430725 187.44207764]
[199.10578918 191.17297363]
[212.36253357 198.28108215]
[223.52597046 208.34939575]
[231.95011902 220.78942871]
[237.14888000 234.87564087]
[238.82414246 249.78768921]
[236.88282776 264.65829468]
[231.44207764 278.62362671]
[222.82223511 290.87344360]
[211.52787781 300.69821167]
[218.40728760 314.02764893]
[225.28669739 327.35705566]
[229.68016052 330.17568970]
[232.29196167 334.01388550]
[233.03205872 338.02227783]
[232.16061401 341.43884277]
[238.43797302 355.06216431]
[244.71533203 368.68548584]
[250.99269104 382.30880737]
[257.27005005 395.93212891]
[263.54742432 409.55545044]
[277.98101807 405.36871338]
[292.87744141 403.38009644]
[307.90386963 403.63397217]
[322.72457886 406.12469482]
[337.00851440 410.79660034]
[350.43655396 417.54534912]
[362.70870972 426.22012329]
[373.55084229 436.62713623]
[382.72067261 448.53393555]
[390.01339722 461.67449951]
[395.26605225 475.75521851]
[398.36132812 490.46157837]
[399.23007202 505.46499634]
[397.85287476 520.43035889]
[394.26046753 535.02319336]
[388.53314209 548.91766357]
[380.79885864 561.80322266]
[371.23034668 573.39208984]
[360.04144287 583.42535400]
[347.48205566 591.67883301]
[333.83282471 597.96813965]
[319.39862061 602.15277100]
[304.50192261 604.13928223]
[289.47552490 603.88323975]
[274.65515137 601.39044189]
[260.37188721 596.71649170]
[246.94480896 589.96582031]
[234.67388916 581.28930664]
[223.83325195 570.88073730]
[214.66511536 558.97265625]
[207.37426758 545.83105469]
[202.12359619 531.74957275]
[199.03041077 517.04278564]
[198.16381836 502.03921509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 167]
[13 166]
[14 165]
[26 153]
[27 152]
[28 151]
[29 150]
[33 147]
[34 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[77 127]
[78 126]
[79 125]
[80 124]
[89 123]
[90 122]
[91 121]
[92 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
