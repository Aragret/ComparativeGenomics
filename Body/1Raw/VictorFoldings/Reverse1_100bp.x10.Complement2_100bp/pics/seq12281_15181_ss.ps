%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[20.35832405 620.83087158]
[5.53405952 623.64221191]
[-9.51263523 622.51995850]
[-23.75584984 617.54064941]
[-36.22446060 609.04382324]
[-46.06833649 597.60876465]
[-52.61630630 584.01513672]
[-55.42191696 569.18981934]
[-54.29387665 554.14355469]
[-49.30909729 539.90228271]
[-40.80745316 527.43695068]
[-29.36859703 517.59747314]
[-15.77244949 511.05474854]
[-0.94601822 508.25488281]
[0.16963047 493.29641724]
[-6.59962845 480.02893066]
[2.14265108 466.84243774]
[3.25829959 451.88400269]
[4.37394857 436.92553711]
[5.48959684 421.96707153]
[6.60524559 407.00863647]
[7.72089434 392.05017090]
[8.83654308 377.09173584]
[0.20559618 374.83856201]
[-8.04131985 371.43212891]
[-15.75085831 366.93505859]
[-22.77956200 361.43023682]
[-28.99653625 355.01928711]
[-34.28588486 347.82070923]
[-38.54886246 339.96777344]
[-41.70573807 331.60586548]
[-43.69726562 322.89001465]
[-44.48580170 313.98181152]
[-44.05602264 305.04656982]
[-42.41522217 296.25018311]
[-39.59317398 287.75607300]
[-35.64160919 279.72210693]
[-30.63326263 272.29772949]
[-24.66053009 265.62112427]
[-17.83376312 259.81674194]
[-10.27924156 254.99279785]
[-2.13682246 251.23942566]
[6.44263792 248.62693787]
[15.30008411 247.20449829]
[24.27120972 246.99916077]
[33.18950272 248.01544189]
[37.59049988 233.67559814]
[41.99149704 219.33575439]
[46.39249420 204.99591064]
[33.63932037 212.89251709]
[18.67219734 211.89993286]
[7.07349348 202.38836670]
[3.16923761 187.90538025]
[8.41562176 173.85278320]
[20.85587311 165.47184753]
[35.85008621 165.88844299]
[47.80578995 174.94720459]
[52.26379395 189.27059937]
[58.33762741 175.55532837]
[64.41146088 161.84005737]
[70.48529816 148.12480164]
[68.56423950 133.35459900]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[85.08428955 93.52693176]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[101.95439911 51.76333237]
[116.37678528 41.76525116]
[122.03957367 27.87522507]
[127.70236206 13.98519802]
[133.36514282 0.09517086]
[139.02793884 -13.79485607]
[136.09982300 -31.97472572]
[150.37174988 -42.18642426]
[155.82711792 -56.15922165]
[161.28247070 -70.13201904]
[156.29139709 -91.97757721]
[173.70161438 -104.83526611]
[178.31561279 -119.10799408]
[182.92962646 -133.38073730]
[187.54364014 -147.65345764]
[192.15765381 -161.92619324]
[196.77165222 -176.19892883]
[189.29933167 -187.40512085]
[189.64047241 -200.67517090]
[197.44656372 -211.17027283]
[209.68792725 -215.19252014]
[214.51391602 -229.39497375]
[219.33992004 -243.59742737]
[224.16590881 -257.79989624]
[228.99191284 -272.00234985]
[232.53158569 -286.57870483]
[234.75669861 -301.41275024]
[236.98182678 -316.24679565]
[239.20693970 -331.08084106]
[241.43205261 -345.91488647]
[243.65716553 -360.74893188]
[245.88229370 -375.58297729]
[232.04421997 -381.59713745]
[220.23484802 -390.98870850]
[211.25936890 -403.11730957]
[205.72973633 -417.15603638]
[204.02297974 -432.14767456]
[206.25546265 -447.07009888]
[212.27497864 -460.90582275]
[221.67108154 -472.71157837]
[233.80316162 -481.68237305]
[247.84400940 -487.20657349]
[262.83630371 -488.90753174]
[277.75787354 -486.66931152]
[291.59127808 -480.64443970]
[303.39340210 -471.24377441]
[312.35949707 -459.10824585]
[317.87829590 -445.06524658]
[319.57348633 -430.07229614]
[317.32946777 -415.15161133]
[311.29928589 -401.32052612]
[301.89404297 -389.52203369]
[289.75506592 -380.56060791]
[275.70993042 -375.04724121]
[260.71633911 -373.35784912]
[258.49121094 -358.52380371]
[256.26608276 -343.68978882]
[254.04098511 -328.85574341]
[251.81585693 -314.02169800]
[249.59074402 -299.18765259]
[247.36563110 -284.35360718]
[257.27478027 -295.61453247]
[271.05459595 -301.54046631]
[286.04440308 -300.98724365]
[299.34988403 -294.06161499]
[308.40197754 -282.10086060]
[311.45285034 -267.41439819]
[307.91345215 -252.83796692]
[298.46716309 -241.18603516]
[284.93792725 -234.70838928]
[269.93801880 -234.65579224]
[256.36370850 -241.03839111]
[246.83593750 -252.62380981]
[243.19436646 -267.17633057]
[238.36837769 -252.97389221]
[233.54237366 -238.77143860]
[228.71636963 -224.56896973]
[223.89038086 -210.36651611]
[231.96183777 -195.61218262]
[226.76252747 -179.26341248]
[211.04438782 -171.58491516]
[206.43037415 -157.31219482]
[201.81637573 -143.03945923]
[197.20236206 -128.76672363]
[192.58834839 -114.49398804]
[187.97434998 -100.22125244]
[192.97377014 -94.13271332]
[195.18582153 -86.47373199]
[194.17903137 -78.47085571]
[190.04374695 -71.43643951]
[183.38929749 -66.55342102]
[175.25526428 -64.67666626]
[169.79991150 -50.70386505]
[164.34455872 -36.73106766]
[168.91270447 -25.53023911]
[164.48210144 -13.84462357]
[152.91795349 -8.13206959]
[147.25517273 5.75795746]
[141.59239197 19.64798355]
[135.92959595 33.53800964]
[130.26681519 47.42803955]
[134.66769409 58.69564056]
[130.06361389 70.31399536]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[116.24458313 100.70178986]
[111.60806274 111.38560486]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[96.42872620 145.69444275]
[84.20056152 154.19863892]
[78.12673187 167.91389465]
[72.05289459 181.62916565]
[65.97906494 195.34443665]
[60.73234177 209.39689636]
[56.33134460 223.73675537]
[51.93034744 238.07659912]
[47.52935028 252.41644287]
[65.93476868 264.53656006]
[79.30091858 282.03549194]
[86.14083862 302.94708252]
[85.70000458 324.92654419]
[78.03958893 345.51348877]
[64.02826691 362.40728760]
[45.24371338 373.72418213]
[23.79499626 378.20736694]
[22.67934799 393.16583252]
[21.56369972 408.12426758]
[20.44804955 423.08273315]
[19.33240128 438.04119873]
[18.21675301 452.99963379]
[17.10110474 467.95809937]
[23.79056549 482.29553223]
[15.12808418 494.41207886]
[14.01243496 509.37051392]
[28.25949287 514.33880615]
[40.73466110 522.82598877]
[50.58736420 534.25341797]
[57.14582825 547.84197998]
[59.96288681 562.66516113]
[58.84646606 577.71234131]
[53.87268829 591.95745850]
[45.38066864 604.42932129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[46 185]
[47 184]
[48 183]
[49 182]
[58 181]
[59 180]
[60 179]
[61 178]
[63 176]
[64 175]
[66 172]
[67 171]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[75 161]
[76 160]
[77 159]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
