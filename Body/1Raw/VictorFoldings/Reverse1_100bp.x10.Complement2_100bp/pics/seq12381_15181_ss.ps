%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[301.62393188 149.85900879]
[297.50064087 164.27772522]
[292.34768677 178.36134338]
[286.19189453 192.03640747]
[279.06542969 205.23165894]
[271.00537109 217.87826538]
[262.05380249 229.91032410]
[252.25735474 241.26509094]
[241.66711426 251.88336182]
[230.33828735 261.70980835]
[218.32994080 270.69314575]
[205.70468140 278.78659058]
[192.52832031 285.94793701]
[178.86958313 292.13983154]
[164.79963684 297.33001709]
[150.39186096 301.49139404]
[135.72137451 304.60232544]
[120.86465454 306.64654541]
[105.89914703 307.61340332]
[90.90289307 307.49789429]
[75.95406342 306.30056763]
[61.13059616 304.02767944]
[46.50977707 300.69110107]
[32.16782761 296.30822754]
[18.17952538 290.90191650]
[4.61779261 284.50030518]
[-8.44666386 277.13681030]
[-20.94573212 268.84979248]
[-32.81424713 259.68249512]
[-43.99033737 249.68269348]
[-54.41572952 238.90252686]
[-64.03607178 227.39816284]
[-72.80121613 215.22962952]
[-80.66545105 202.46034241]
[-87.58779144 189.15686035]
[-93.53214264 175.38858032]
[-98.46750641 161.22724915]
[-102.36816406 146.74670410]
[-105.21376801 132.02246094]
[-106.98948669 117.13125610]
[-107.68606567 102.15074158]
[-107.29987335 87.15901184]
[-105.83291626 72.23423004]
[-103.29284668 57.45420074]
[-99.69290924 42.89598846]
[-95.05187225 28.63549042]
[-89.39393616 14.74705029]
[-82.74858093 1.30307710]
[-75.15047455 -11.62633896]
[-66.63921356 -23.97378922]
[-57.25917435 -35.67490005]
[-47.05926895 -46.66867065]
[-36.09266663 -56.89778137]
[-24.41654205 -66.30890656]
[-12.09177113 -74.85297394]
[0.81739062 -82.48544312]
[14.24364185 -89.16652679]
[28.11698532 -94.86138153]
[42.36509323 -99.54033661]
[56.91367722 -103.17897797]
[71.68689728 -105.75833893]
[86.60772705 -107.26498413]
[101.59837341 -107.69104767]
[116.58068848 -107.03431702]
[131.47656250 -105.29820251]
[146.20832825 -102.49176788]
[160.69918823 -98.62964630]
[174.87359619 -93.73195648]
[188.65765381 -87.82424927]
[201.97947693 -80.93731689]
[214.76963806 -73.10706329]
[226.96145630 -64.37432098]
[238.49134827 -54.78460693]
[249.29920959 -44.38792038]
[259.32870483 -33.23846817]
[268.52755737 -21.39437485]
[281.00732422 -29.71631813]
[293.48712158 -38.03826141]
[305.96691895 -46.36020660]
[318.44671631 -54.68214798]
[330.92651367 -63.00409317]
[343.40631104 -71.32603455]
[355.88610840 -79.64797974]
[368.36590576 -87.96992493]
[360.76779175 -100.90794373]
[353.92071533 -114.25862885]
[347.84695435 -127.97843933]
[342.56637573 -142.02261353]
[338.09616089 -156.34533691]
[334.45092773 -170.89991760]
[331.64251709 -185.63885498]
[329.68011475 -200.51408386]
[328.57015991 -215.47708130]
[328.31619263 -230.47904968]
[328.91912842 -245.47103882]
[330.37692261 -260.40417480]
[332.68487549 -275.22970581]
[335.83544922 -289.89932251]
[339.81832886 -304.36514282]
[344.62057495 -318.57998657]
[350.22650146 -332.49749756]
[356.61779785 -346.07229614]
[363.77365112 -359.26004028]
[371.67071533 -372.01779175]
[380.28323364 -384.30389404]
[389.58306885 -396.07824707]
[399.53997803 -407.30252075]
[410.12139893 -417.94003296]
[421.29284668 -427.95614624]
[433.01788330 -437.31811523]
[445.25827026 -445.99548340]
[457.97406006 -453.95986938]
[471.12380981 -461.18536377]
[484.66461182 -467.64837646]
[498.55227661 -473.32778931]
[512.74151611 -478.20513916]
[527.18609619 -482.26446533]
[541.83886719 -485.49255371]
[556.65197754 -487.87884521]
[571.57720947 -489.41558838]
[586.56579590 -490.09777832]
[601.56884766 -489.92315674]
[616.53753662 -488.89233398]
[631.42291260 -487.00860596]
[646.17651367 -484.27819824]
[660.75018311 -480.70996094]
[675.09631348 -476.31555176]
[689.16821289 -471.10928345]
[702.91998291 -465.10818481]
[716.30664062 -458.33178711]
[729.28466797 -450.80218506]
[741.81164551 -442.54400635]
[753.84680176 -433.58410645]
[765.35076904 -423.95175171]
[776.28607178 -413.67837524]
[786.61706543 -402.79745483]
[796.30999756 -391.34451294]
[805.33331299 -379.35687256]
[813.65753174 -366.87365723]
[821.25549316 -353.93557739]
[828.10247803 -340.58483887]
[834.17614746 -326.86499023]
[839.45660400 -312.82077026]
[843.92669678 -298.49801636]
[847.57183838 -283.94338989]
[850.38012695 -269.20443726]
[852.34240723 -254.32919312]
[853.45227051 -239.36618042]
[853.70611572 -224.36422729]
[853.10302734 -209.37222290]
[851.64514160 -194.43911743]
[849.33703613 -179.61358643]
[846.18640137 -164.94400024]
[842.20336914 -150.47821045]
[837.40106201 -136.26339722]
[831.79498291 -122.34593201]
[825.40356445 -108.77120972]
[818.24761963 -95.58349609]
[810.35046387 -82.82582092]
[801.73785400 -70.53979492]
[792.43792725 -58.76548767]
[782.48095703 -47.54130936]
[771.89941406 -36.90386963]
[760.72790527 -26.88786507]
[749.00280762 -17.52596664]
[736.76232910 -8.84871006]
[724.04650879 -0.88440090]
[710.89666748 6.34098387]
[697.35583496 12.80387688]
[683.46813965 18.48319626]
[669.27880859 23.36041832]
[654.83422852 27.41963387]
[640.18145752 30.64760399]
[625.36828613 33.03379440]
[610.44311523 34.57043076]
[595.45446777 35.25249481]
[580.45141602 35.07775879]
[565.48272705 34.04679871]
[550.59735107 32.16297913]
[535.84381104 29.43243599]
[521.27020264 25.86408234]
[506.92404175 21.46955681]
[492.85217285 16.26319122]
[479.10049438 10.26197052]
[465.71383667 3.48546720]
[452.73590088 -4.04421425]
[440.20895386 -12.30251312]
[428.17391968 -21.26249313]
[416.67004395 -30.89492798]
[405.73480225 -41.16839981]
[395.40390015 -52.04939270]
[385.71105957 -63.50242615]
[376.68783569 -75.49013519]
[364.20803833 -67.16819000]
[351.72824097 -58.84624481]
[339.24844360 -50.52429962]
[326.76867676 -42.20235443]
[314.28887939 -33.88041306]
[301.80908203 -25.55846786]
[289.32928467 -17.23652458]
[276.84948730 -8.91458130]
[284.24749756 4.13036251]
[290.68493652 17.67512321]
[296.12823486 31.64908600]
[300.54901123 45.97939682]
[303.92422485 60.59134674]
[306.23626709 75.40875244]
[307.47311401 90.35436249]
[307.62826538 105.35025787]
[306.70098877 120.31826782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 201]
[77 200]
[78 199]
[79 198]
[80 197]
[81 196]
[82 195]
[83 194]
[84 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
