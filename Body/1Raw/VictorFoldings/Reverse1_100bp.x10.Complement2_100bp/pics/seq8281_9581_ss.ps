%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[-22.94095612 668.76452637]
[-34.01980209 679.50054932]
[-49.14875412 682.52020264]
[-63.50022125 676.85992432]
[-72.49469757 664.32586670]
[-73.26208496 648.91760254]
[-65.55750275 635.55181885]
[-51.83946609 628.49359131]
[-50.50123215 613.55340576]
[-49.16299820 598.61322021]
[-47.82476425 583.67303467]
[-49.51663208 581.43792725]
[-50.42508698 578.39794922]
[-50.23913574 574.84820557]
[-48.76024246 571.19067383]
[-45.93615723 567.89245605]
[-43.71104050 553.05841064]
[-41.48592377 538.22436523]
[-39.26080704 523.39031982]
[-37.03568649 508.55624390]
[-46.94484711 519.81719971]
[-60.72465515 525.74316406]
[-75.71445465 525.18988037]
[-89.01993561 518.26428223]
[-98.07202911 506.30352783]
[-101.12291718 491.61706543]
[-97.58351135 477.04061890]
[-88.13722992 465.38867188]
[-74.60799408 458.91104126]
[-59.60808563 458.85845947]
[-46.03375626 465.24105835]
[-36.50599289 476.82647705]
[-32.86442566 491.37899780]
[-28.03842926 477.17654419]
[-23.21243286 462.97409058]
[-18.38643456 448.77163696]
[-22.72729301 431.76797485]
[-8.77852726 419.74661255]
[-4.16451788 405.47387695]
[0.44949159 391.20114136]
[5.06350088 376.92840576]
[1.61625600 362.43823242]
[13.22335911 351.68713379]
[17.83736801 337.41439819]
[22.45137787 323.14166260]
[8.97924805 315.70428467]
[-2.79250574 305.78549194]
[-12.41306686 293.76284790]
[-19.51354218 280.09445190]
[-23.82110786 265.30154419]
[-25.16948700 249.94868469]
[-23.50537872 234.62214661]
[-18.89055061 219.90759277]
[-11.49955273 206.36761475]
[-1.61312032 194.52024841]
[10.39249611 184.81922913]
[24.05984688 177.63648987]
[38.86771011 173.24801636]
[54.25097275 171.82315063]
[69.62220001 173.41812134]
[74.02320099 159.07827759]
[78.42419434 144.73841858]
[82.82519531 130.39857483]
[79.16259766 115.96131134]
[90.60834503 105.03861237]
[93.71245575 90.36331177]
[95.49491882 75.46958923]
[97.27738190 60.57587433]
[99.05985260 45.68215942]
[91.71599579 35.07882690]
[93.50723267 22.71051216]
[102.93352509 15.12950802]
[104.93753815 0.26398021]
[106.94155121 -14.60154819]
[108.05719757 -29.56000137]
[108.28052521 -44.55833817]
[97.55294037 -55.85243225]
[97.99308014 -71.05970001]
[108.82638550 -81.21721649]
[109.04971313 -96.21555328]
[109.27304077 -111.21389008]
[109.49636841 -126.21222687]
[100.15692902 -142.08221436]
[109.73761749 -156.78517151]
[109.73761749 -171.78517151]
[109.73761749 -186.78517151]
[109.73761749 -201.78517151]
[109.73761749 -216.78517151]
[109.73761749 -231.78517151]
[109.62595367 -246.78475952]
[109.40262604 -261.78311157]
[109.06764984 -276.77935791]
[108.62104034 -291.77270508]
[108.17443848 -306.76605225]
[107.72782898 -321.75939941]
[104.34429932 -330.24407959]
[107.38787079 -336.97894287]
[107.16454315 -351.97729492]
[106.94121552 -366.97561646]
[93.25578308 -373.82891846]
[84.33223724 -386.26388550]
[82.22114563 -401.42312622]
[87.40761566 -415.82308960]
[98.69983673 -426.15478516]
[113.50294495 -430.04409790]
[128.41528320 -426.59725952]
[140.01011658 -416.60635376]
[145.62303162 -402.36718750]
[143.96421814 -387.15182495]
[135.41487122 -374.45666504]
[121.93955231 -367.19894409]
[122.16287994 -352.20062256]
[122.38620758 -337.20227051]
[122.72118378 -322.20602417]
[123.16778564 -307.21267700]
[123.61439514 -292.21929932]
[124.06099701 -277.22595215]
[127.40225983 -270.63369751]
[124.40096283 -262.00643921]
[124.62429047 -247.00808716]
[127.86702728 -240.36682129]
[124.73761749 -231.78517151]
[124.73761749 -216.78517151]
[124.73761749 -201.78517151]
[124.73761749 -186.78517151]
[124.73761749 -171.78517151]
[124.73761749 -156.78517151]
[133.06657410 -148.01277161]
[133.18933105 -135.51602173]
[124.49470520 -125.98889923]
[124.27137756 -110.99056244]
[124.04804993 -95.99222565]
[123.82472229 -80.99388885]
[134.35079956 -70.51832581]
[134.33796692 -55.30469894]
[123.27886963 -44.33501053]
[123.05554199 -29.33667374]
[133.09757996 -40.47925949]
[147.74685669 -43.70396423]
[161.53955078 -37.80804825]
[169.33131409 -24.99054337]
[168.21601868 -10.03206253]
[158.60964966 1.48824978]
[144.09513855 5.27360296]
[130.08602905 -0.08784601]
[121.80708313 -12.59753418]
[119.80307007 2.26799393]
[117.79904938 17.13352203]
[125.32952881 32.98466873]
[113.95356750 47.46462250]
[112.17110443 62.35834122]
[110.38863373 77.25205994]
[108.60617065 92.14577484]
[118.17565918 80.59480286]
[131.77291870 74.26120758]
[146.77253723 74.36790466]
[160.27832031 80.89429474]
[169.68252563 92.58022308]
[173.16932678 107.16934204]
[170.06549072 121.84469604]
[160.97032166 133.77272034]
[147.63993835 140.65029907]
[132.64825439 141.14947510]
[118.88990021 135.17387390]
[109.02142334 123.87727356]
[104.94818878 109.43961334]
[108.29600525 124.90255737]
[97.16503906 134.79957581]
[92.76404572 149.13941956]
[88.36304474 163.47926331]
[83.96204376 177.81912231]
[96.89791107 184.66864014]
[108.34640503 193.78259277]
[117.91613770 204.84747314]
[125.28034210 217.48309326]
[130.18797302 231.25572205]
[132.47229004 245.69287109]
[132.05651855 260.29959106]
[128.95640564 274.57534790]
[123.27969360 288.03131104]
[115.22230530 300.20697021]
[105.06162262 310.68585205]
[93.14691162 319.11001587]
[79.88734436 325.19198608]
[65.73793030 328.72473145]
[51.18391037 329.58865356]
[36.72410965 327.75567627]
[32.11010361 342.02841187]
[27.49609184 356.30114746]
[30.61331177 371.81222534]
[19.33623505 381.54241943]
[14.72222519 395.81515503]
[10.10821533 410.08789062]
[5.49420643 424.36062622]
[10.66135502 436.17855835]
[6.52450323 447.97134399]
[-4.18397903 453.59762573]
[-9.00997639 467.80007935]
[-13.83597469 482.00253296]
[-18.66197205 496.20498657]
[-22.20164490 510.78137207]
[-24.42676163 525.61541748]
[-26.65187836 540.44946289]
[-28.87699509 555.28350830]
[-31.10211372 570.11755371]
[-32.88457870 585.01129150]
[-34.22281265 599.95147705]
[-35.56104660 614.89166260]
[-36.89928055 629.83184814]
[-24.65400887 639.21569824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[11 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[33 200]
[34 199]
[35 198]
[36 197]
[38 194]
[39 193]
[40 192]
[41 191]
[43 189]
[44 188]
[45 187]
[60 171]
[61 170]
[62 169]
[63 168]
[65 166]
[66 153]
[67 152]
[68 151]
[69 150]
[72 148]
[73 147]
[74 146]
[75 137]
[76 136]
[79 133]
[80 132]
[81 131]
[82 130]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 120]
[91 119]
[92 117]
[93 116]
[94 115]
[95 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
