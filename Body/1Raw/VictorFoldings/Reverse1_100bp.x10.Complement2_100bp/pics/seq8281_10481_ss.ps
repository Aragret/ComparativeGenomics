%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[108.98499298 478.53390503]
[114.59401703 464.54095459]
[123.38935089 452.29736328]
[134.85964966 442.51495361]
[148.33804321 435.76245117]
[145.01577759 421.13497925]
[141.69352722 406.50750732]
[138.37126160 391.88006592]
[128.00724792 381.18258667]
[132.49586487 366.01144409]
[129.17359924 351.38400269]
[125.85134125 336.75653076]
[122.42028046 322.15420532]
[111.89813232 311.61221313]
[116.16038513 296.37594604]
[112.62071228 281.79956055]
[106.34163666 295.42208862]
[93.75200653 303.57693481]
[78.75286102 303.73721313]
[65.99185181 295.85327148]
[59.42310715 282.36804199]
[61.08202744 267.46005249]
[70.45458221 255.74871826]
[84.63658142 250.86291504]
[99.23357391 254.31657410]
[109.72264862 265.03976440]
[100.70325470 253.18650818]
[106.96286774 238.65626526]
[105.40234375 223.73767090]
[103.84181976 208.81906128]
[102.28130341 193.90045166]
[100.72077942 178.98185730]
[99.16025543 164.06324768]
[97.59973145 149.14463806]
[80.94539642 145.36384583]
[66.58663940 136.11791992]
[56.25330734 122.52073669]
[51.19028854 106.21040344]
[52.00754929 89.15187836]
[58.60662842 73.40026855]
[70.19251251 60.85321808]
[85.36940765 53.02231598]
[83.14428711 38.18827438]
[80.69856262 23.38900185]
[78.03276825 8.62778473]
[67.96607208 -3.57763410]
[73.31832123 -17.47737312]
[70.65251923 -32.23859024]
[55.12951279 -32.91059113]
[40.14969635 -37.00986862]
[26.45975113 -44.32888412]
[14.74134731 -54.49969482]
[5.57720709 -67.01243591]
[-0.57787460 -81.24089813]
[-3.41959739 -96.47385406]
[-2.80919957 -111.95059967]
[1.21976912 -126.89897919]
[8.46327686 -140.57386780]
[18.55713844 -152.29432678]
[30.99532509 -161.47753906]
[45.15533447 -167.66773987]
[42.27006149 -182.38763428]
[39.38478851 -197.10751343]
[29.13749123 -209.16171265]
[34.28219604 -223.13958740]
[31.39692307 -237.85948181]
[28.51165199 -252.57937622]
[25.62637901 -267.29925537]
[22.74110603 -282.01916504]
[19.85583305 -296.73904419]
[16.97056007 -311.45895386]
[12.24889755 -319.27838135]
[14.15362358 -326.41937256]
[11.48782825 -341.18060303]
[-3.50556278 -340.31137085]
[-18.49440765 -341.25573730]
[-33.26012421 -344.00000000]
[-47.58738708 -348.50408936]
[-61.26726151 -354.70236206]
[-74.10025787 -362.50439453]
[-85.89922333 -371.79641724]
[-96.49210358 -382.44293213]
[-105.72441864 -394.28866577]
[-113.46154022 -407.16088867]
[-119.59062958 -420.87191772]
[-124.02231598 -435.22174072]
[-126.69196320 -450.00112915]
[-127.56064606 -464.99453735]
[-126.61569214 -479.98336792]
[-123.87088013 -494.74896240]
[-119.36624908 -509.07608032]
[-113.16748047 -522.75573730]
[-105.36496735 -535.58843994]
[-96.07250214 -547.38702393]
[-85.42559814 -557.97949219]
[-73.57950592 -567.21136475]
[-60.70698547 -574.94799805]
[-46.99575043 -581.07659912]
[-32.64575958 -585.50775146]
[-17.86627007 -588.17681885]
[-2.87281370 -589.04498291]
[12.11596107 -588.09942627]
[26.88147354 -585.35406494]
[41.20840073 -580.84893799]
[54.88780975 -574.64965820]
[67.72022247 -566.84667969]
[79.51849365 -557.55377197]
[90.11057281 -546.90643311]
[99.34201050 -535.05999756]
[107.07816315 -522.18719482]
[113.20623016 -508.47573853]
[117.63684082 -494.12557983]
[120.30538177 -479.34597778]
[121.17294312 -464.35250854]
[120.22686768 -449.36376953]
[117.48095703 -434.59835815]
[112.97525024 -420.27157593]
[106.77545929 -406.59240723]
[98.97199249 -393.76028442]
[89.67864227 -381.96237183]
[79.03094482 -371.37069702]
[67.18415833 -362.13970947]
[54.31106186 -354.40402222]
[40.59936905 -348.27645874]
[26.24904633 -343.84640503]
[28.91484070 -329.08517456]
[31.69045258 -314.34420776]
[34.57572556 -299.62432861]
[37.46099854 -284.90441895]
[40.34627151 -270.18453979]
[43.23154068 -255.46464539]
[46.11681366 -240.74475098]
[49.00208664 -226.02487183]
[59.04301071 -215.02354431]
[54.10468292 -199.99279785]
[56.98995590 -185.27290344]
[59.87522507 -170.55300903]
[74.37319183 -170.29058838]
[88.50389862 -167.01049805]
[101.64596558 -160.85435486]
[113.22095490 -152.09034729]
[122.71880341 -141.10147095]
[129.72033691 -128.36885071]
[133.91572571 -114.45066833]
[135.11824036 -99.95764160]
[133.27252197 -85.52629089]
[128.45715332 -71.79095459]
[120.88130188 -59.35591507]
[110.87563324 -48.76878738]
[98.87789154 -40.49644089]
[85.41374207 -34.90438461]
[88.07953644 -20.14316940]
[97.95555115 -8.99357128]
[92.79398346 5.96198893]
[95.45977783 20.72320557]
[98.80283356 24.13393021]
[100.03878021 29.68095207]
[97.97833252 35.96315384]
[100.20345306 50.79719925]
[112.93292999 52.52688980]
[124.78080750 57.49272156]
[134.93942261 65.35618591]
[142.71629333 75.58124542]
[147.58128357 87.47087860]
[149.20275879 100.21459961]
[147.47018433 112.94368744]
[142.50166321 124.79043579]
[134.63589478 134.94726562]
[124.40907288 142.72181702]
[112.51833344 147.58412170]
[114.07885742 162.50271606]
[115.63938141 177.42132568]
[117.19990540 192.33993530]
[118.76042938 207.25852966]
[120.32095337 222.17713928]
[121.88147736 237.09574890]
[131.01248169 250.01608276]
[124.64125061 263.47924805]
[127.19708252 278.25988770]
[130.73675537 292.83627319]
[141.51208496 304.42086792]
[136.99665833 318.61453247]
[142.06275940 326.21536255]
[140.47880554 333.43426514]
[143.80105591 348.06173706]
[147.12332153 362.68917847]
[157.72497559 374.43292236]
[152.99871826 388.55780029]
[156.32098389 403.18527222]
[159.64324951 417.81271362]
[162.96549988 432.44018555]
[178.03837585 432.70797729]
[192.60900879 436.57586670]
[205.83024597 443.81893921]
[216.93344116 454.01611328]
[225.27307129 466.57455444]
[230.36428833 480.76406860]
[231.91107178 495.75976562]
[229.82351685 510.68978882]
[224.22297668 524.68615723]
[215.43505859 536.93505859]
[203.97068787 546.72442627]
[190.49639893 553.48510742]
[175.79554749 556.82403564]
[160.72283936 556.54705811]
[146.15455627 552.67034912]
[132.93771362 545.41931152]
[121.84069824 535.21539307]
[113.50868225 522.65191650]
[108.42607880 508.45928955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[10 186]
[11 185]
[12 184]
[13 182]
[15 180]
[16 179]
[26 178]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[42 159]
[43 158]
[44 155]
[45 154]
[47 152]
[48 151]
[61 137]
[62 136]
[63 135]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[73 126]
[74 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
