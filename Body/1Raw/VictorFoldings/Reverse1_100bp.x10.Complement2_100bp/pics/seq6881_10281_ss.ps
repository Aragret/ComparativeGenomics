%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[116.77729797 453.29928589]
[111.79821777 467.56060791]
[103.00183105 479.84069824]
[91.10120392 489.14401245]
[77.06108093 494.71643066]
[62.01963043 496.10617065]
[47.19619370 493.20059204]
[33.79243851 486.23526001]
[22.89494514 475.77478027]
[15.38713169 462.66717529]
[11.87761784 447.97500610]
[12.65090561 432.88928223]
[17.64430809 418.63296509]
[26.45303345 406.36175537]
[38.36299515 397.07037354]
[52.40871048 391.51208496]
[67.45155334 390.13745117]
[70.33682251 375.41757202]
[73.22209167 360.69766235]
[76.10736847 345.97778320]
[78.99263763 331.25787354]
[81.21775818 316.42382812]
[82.77828217 301.50524902]
[84.33880615 286.58663940]
[85.89933014 271.66802979]
[87.23756409 256.72784424]
[88.35321045 241.76939392]
[89.46885681 226.81092834]
[90.58450317 211.85247803]
[91.70015717 196.89402771]
[84.93089294 183.62654114]
[93.67317963 170.44006348]
[94.78882599 155.48161316]
[94.90048981 140.48202515]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.21634674 80.67890167]
[88.43387604 65.78518677]
[86.65141296 50.89146805]
[84.86894226 35.99774933]
[83.08647919 21.10403252]
[81.30401611 6.21031570]
[79.52154541 -8.68340206]
[77.73908234 -23.57711983]
[75.95661926 -38.47083664]
[74.17414856 -53.36455536]
[72.39168549 -68.25827026]
[70.49839020 -83.13830566]
[68.49437714 -98.00383759]
[63.77424622 -112.24182129]
[50.31590652 -120.55949402]
[50.91156387 -135.44218445]
[43.63833618 -148.56088257]
[36.36510468 -161.67956543]
[29.09187698 -174.79826355]
[21.81864738 -187.91696167]
[14.54541779 -201.03565979]
[7.27218819 -214.15434265]
[-0.00104112 -227.27304077]
[-7.27427053 -240.39173889]
[-21.13925362 -234.62612915]
[-35.56261063 -230.44918823]
[-50.36294937 -227.91345215]
[-65.35414124 -227.05079651]
[-80.34765625 -227.87208557]
[-95.15493774 -230.36697388]
[-109.58975983 -234.50410461]
[-123.47060394 -240.23143005]
[-136.62289429 -247.47694397]
[-148.88121033 -256.14950562]
[-160.09143066 -266.14007568]
[-170.11253357 -277.32296753]
[-178.81852722 -289.55758667]
[-186.09989929 -302.69003296]
[-191.86509705 -316.55520630]
[-196.04161072 -330.97866821]
[-198.57690430 -345.77908325]
[-199.43910217 -360.77032471]
[-198.61737061 -375.76379395]
[-196.12203979 -390.57101440]
[-191.98448181 -405.00570679]
[-186.25672913 -418.88638306]
[-179.01083374 -432.03845215]
[-170.33790588 -444.29650879]
[-160.34701538 -455.50643921]
[-149.16380310 -465.52719116]
[-136.92893982 -474.23281860]
[-123.79624939 -481.51382446]
[-109.93092346 -487.27859497]
[-95.50731659 -491.45468140]
[-80.70682526 -493.98953247]
[-65.71558380 -494.85128784]
[-50.72211838 -494.02908325]
[-35.91498947 -491.53332520]
[-21.48040962 -487.39532471]
[-7.59991360 -481.66717529]
[5.55193901 -474.42086792]
[17.80974960 -465.74755859]
[29.01936340 -455.75634766]
[39.03980637 -444.57284546]
[47.74506378 -432.33770752]
[55.02565384 -419.20480347]
[60.79001999 -405.33932495]
[64.96566010 -390.91558838]
[67.50007629 -376.11502075]
[68.36138153 -361.12374878]
[67.53874969 -346.13031006]
[65.04252625 -331.32324219]
[60.90410614 -316.88879395]
[55.17553329 -303.00845337]
[47.92884445 -289.85684204]
[39.25518036 -277.59927368]
[29.26362038 -266.38995361]
[18.07981873 -256.36984253]
[5.84442329 -247.66496277]
[13.11765289 -234.54627991]
[20.39088249 -221.42758179]
[27.66411209 -208.30888367]
[34.93733978 -195.19018555]
[42.21057129 -182.07150269]
[49.48379898 -168.95280457]
[56.75703049 -155.83410645]
[64.03025818 -142.71540833]
[76.96836853 -135.33607483]
[76.89293671 -119.51505280]
[76.17630768 -134.49792480]
[78.88752747 -149.25086975]
[84.88437653 -162.99996948]
[93.85226440 -175.02398682]
[105.32077026 -184.69213867]
[118.68826294 -191.49729919]
[133.25352478 -195.08244324]
[148.25247192 -195.25950623]
[162.89831543 -192.01922607]
[176.42274475 -185.53155518]
[188.11630249 -176.13682556]
[197.36555481 -164.32788086]
[203.68531799 -150.72419739]
[206.74407959 -136.03936768]
[206.38136292 -121.04375458]
[202.61619568 -106.52398682]
[195.64610291 -93.24175262]
[185.83673096 -81.89379883]
[173.70262146 -73.07542419]
[159.88035583 -67.24922180]
[145.09498596 -64.72082520]
[130.12213135 -65.62286377]
[115.74723816 -69.90802002]
[102.72438812 -77.35150146]
[91.73674011 -87.56284332]
[83.35990906 -100.00785065]
[85.36392212 -85.14231873]
[89.37287140 -78.93344879]
[87.28540039 -70.04073334]
[89.06787109 -55.14701843]
[90.85033417 -40.25330353]
[92.63279724 -25.35958481]
[94.41526794 -10.46586800]
[96.19773102 4.42784977]
[97.98019409 19.32156754]
[99.76266479 34.21528625]
[101.54512787 49.10900116]
[103.32759857 64.00271606]
[105.11006165 78.89643860]
[109.02612305 85.16430664]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[109.87389374 139.58920288]
[118.47400665 127.29945374]
[132.31250000 121.51185608]
[147.10134888 124.01977539]
[158.25810242 134.04609680]
[162.32568359 148.48405457]
[158.04373169 162.85989380]
[146.73904419 172.71911621]
[131.91450500 175.00671387]
[118.16365814 169.01385498]
[109.74727631 156.59725952]
[108.63162994 171.55570984]
[115.32109070 185.89312744]
[106.65860748 198.00967407]
[105.54296112 212.96812439]
[104.42731476 227.92658997]
[103.31166077 242.88504028]
[102.19601440 257.84347534]
[104.71800232 263.95504761]
[103.89804840 269.57861328]
[100.81793213 273.22854614]
[99.25740814 288.14715576]
[97.69688416 303.06576538]
[96.13636017 317.98437500]
[108.44049072 309.40481567]
[123.23105621 311.90264893]
[132.03535461 324.04696655]
[129.80989075 338.88095093]
[117.82949066 347.90704346]
[102.95709229 345.95465088]
[93.71253204 334.14315796]
[90.82726288 348.86303711]
[87.94198608 363.58294678]
[85.05671692 378.30282593]
[82.17144012 393.02273560]
[95.58219147 399.97460938]
[106.49018097 410.42410278]
[114.01116180 423.52416992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 196]
[23 195]
[24 194]
[25 193]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[32 184]
[33 183]
[34 173]
[35 172]
[36 171]
[37 167]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 153]
[50 152]
[51 126]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[61 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
