%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[108.02237701 700.89459229]
[95.33214569 692.86499023]
[83.65991974 683.41644287]
[73.16355896 672.67663574]
[63.98501968 660.79089355]
[56.24841690 647.91992188]
[50.05839157 634.23785400]
[45.49864960 619.92962646]
[42.63085938 605.18878174]
[41.49380493 590.21466064]
[42.10286331 575.20983887]
[44.44979477 560.37713623]
[48.50286484 545.91723633]
[54.20725632 532.02563477]
[61.48582458 518.89019775]
[70.24013519 506.68862915]
[80.35179901 495.58590698]
[91.68405914 485.73214722]
[104.08367157 477.26065063]
[117.38294220 470.28598022]
[131.40200806 464.90246582]
[145.95127869 461.18289185]
[143.94726562 446.31735229]
[141.94325256 431.45184326]
[139.93923950 416.58630371]
[137.93522644 401.72076416]
[135.93121338 386.85525513]
[126.56289673 375.27578735]
[132.38711548 360.56561279]
[130.38310242 345.70007324]
[128.26847839 330.84988403]
[126.04336548 316.01583862]
[123.81824493 301.18179321]
[121.59312439 286.34774780]
[119.36801147 271.51370239]
[117.14289093 256.67965698]
[114.91777802 241.84562683]
[112.69265747 227.01158142]
[110.46754456 212.17753601]
[100.70394135 223.56491089]
[85.75914001 224.85052490]
[74.19419098 215.29794312]
[72.63402557 200.37930298]
[81.97237396 188.64067078]
[96.85981750 186.80648804]
[108.76765442 195.92663574]
[107.87483978 180.95323181]
[106.98202515 165.97982788]
[104.75690460 151.14578247]
[101.21723175 136.56939697]
[97.67756653 121.99302673]
[94.13789368 107.41664886]
[90.39247131 103.74434662]
[88.97119141 98.23496246]
[90.71670532 92.35363007]
[87.61259460 77.67832947]
[84.50848389 63.00302505]
[71.90544891 60.18469238]
[61.34280014 52.83584595]
[54.36951828 42.07720184]
[51.99188614 29.52626419]
[54.52839661 17.05413628]
[61.56760406 6.50660563]
[72.03439331 -0.56902385]
[69.36859894 -15.33024120]
[66.70280457 -30.09145737]
[63.92719269 -44.83242035]
[61.04191971 -59.55231094]
[58.15664673 -74.27220154]
[55.27137375 -88.99209595]
[51.84031296 -103.59442139]
[47.86821747 -118.05894470]
[43.89612198 -132.52346802]
[40.37336349 -117.94299316]
[32.13397980 -105.40853882]
[20.14592171 -96.39263916]
[5.81753397 -91.95446777]
[-9.16789627 -92.61542511]
[-23.04989815 -98.29785919]
[-34.19762421 -108.33420563]
[-41.30145645 -121.54539490]
[-43.52684021 -136.37939453]
[-40.61233902 -151.09353638]
[-32.90034866 -163.95918274]
[-21.29685974 -173.46493530]
[-7.16504622 -178.49403381]
[7.83490467 -178.45567322]
[21.94081306 -173.35435486]
[33.49552917 -163.78939819]
[41.14217758 -150.88299561]
[40.69557190 -165.87634277]
[29.47437286 -176.68016052]
[29.23503685 -191.89192200]
[39.60397720 -202.52304077]
[39.15737152 -217.51638794]
[38.71076584 -232.50973511]
[38.26416016 -247.50308228]
[37.81755447 -262.49642944]
[23.85400200 -268.65939331]
[13.95381260 -280.27615356]
[10.08267593 -295.04019165]
[13.00920963 -310.02011108]
[22.15234756 -322.24163818]
[35.69671631 -329.27816772]
[50.95306396 -329.73260498]
[64.89224243 -323.51473999]
[74.74660492 -311.85906982]
[78.55957031 -297.07989502]
[75.57407379 -282.11160278]
[66.38287354 -269.92617798]
[52.81090546 -262.94305420]
[53.25751114 -247.94969177]
[53.70411682 -232.95634460]
[54.15072250 -217.96299744]
[54.59732819 -202.96963501]
[65.58066559 -192.97454834]
[66.24716949 -177.77551270]
[55.68892288 -166.32295227]
[56.13552856 -151.32960510]
[58.36064529 -136.49555969]
[62.33274078 -122.03103638]
[66.30484009 -107.56651306]
[75.87973022 -119.11300659]
[90.87912750 -118.97889709]
[100.24604034 -107.26305389]
[97.07552338 -92.60195923]
[83.70475769 -85.80322266]
[69.99126434 -91.87736511]
[72.87654114 -77.15747833]
[75.76181030 -62.43758392]
[78.64708710 -47.71769333]
[83.01848602 -41.75844574]
[81.46401978 -32.75725555]
[84.12981415 -17.99603653]
[86.79560852 -3.23481941]
[103.19955444 1.99480629]
[114.75473022 14.87856102]
[118.21065521 31.92733383]
[112.52683258 48.46229172]
[99.18378448 59.89891434]
[102.28789520 74.57421875]
[105.39200592 89.24951935]
[108.71426392 103.87697601]
[112.25393677 118.45335388]
[115.79360962 133.02972412]
[119.33328247 147.60610962]
[124.25796509 133.43756104]
[134.78092957 122.74798584]
[148.87037659 117.60135651]
[163.80583191 118.99140930]
[176.70349121 126.64974976]
[185.07304382 139.09767151]
[187.29843140 153.93167114]
[182.94998169 168.28755188]
[172.86732483 179.39338684]
[158.99723816 185.10484314]
[144.01782227 184.31912231]
[130.82138062 177.18792725]
[121.95542908 165.08700562]
[122.84824371 180.06040955]
[123.74106598 195.03381348]
[125.30158234 209.95242310]
[127.52670288 224.78646851]
[129.75181580 239.62051392]
[131.97694397 254.45455933]
[134.20205688 269.28860474]
[136.42716980 284.12265015]
[138.65228271 298.95669556]
[140.87741089 313.79074097]
[143.10252380 328.62478638]
[147.47032166 336.64724731]
[145.24862671 343.69607544]
[147.25263977 358.56161499]
[156.76429749 371.20434570]
[150.79673767 384.85122681]
[152.80075073 399.71676636]
[154.80476379 414.58227539]
[156.80877686 429.44781494]
[158.81278992 444.31335449]
[160.81680298 459.17886353]
[175.83164978 458.91293335]
[190.77584839 460.39193726]
[205.44729614 463.59588623]
[219.64756775 468.48144531]
[233.18461609 474.98257446]
[245.87539673 483.01135254]
[257.54824829 492.45913696]
[268.04531860 503.19824219]
[277.22467041 515.08337402]
[284.96212769 527.95379639]
[291.15304565 541.63549805]
[295.71374512 555.94342041]
[298.58251953 570.68408203]
[299.72058105 585.65808105]
[299.11251831 600.66296387]
[296.76657104 615.49578857]
[292.71447754 629.95599365]
[287.01101685 643.84796143]
[279.73330688 656.98388672]
[270.97982788 669.18603516]
[260.86889648 680.28942871]
[249.53729248 690.14398193]
[237.13824463 698.61627197]
[223.83944702 705.59185791]
[209.82073975 710.97631836]
[195.27172852 714.69683838]
[180.38914490 716.70312500]
[165.37426758 716.96807861]
[150.43017578 715.48809814]
[135.75894165 712.28314209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[27 175]
[29 173]
[30 172]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[46 161]
[47 160]
[48 159]
[49 146]
[50 145]
[51 144]
[52 143]
[55 142]
[56 141]
[57 140]
[64 135]
[65 134]
[66 133]
[67 131]
[68 130]
[69 129]
[70 128]
[71 122]
[72 121]
[73 120]
[90 119]
[91 118]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
