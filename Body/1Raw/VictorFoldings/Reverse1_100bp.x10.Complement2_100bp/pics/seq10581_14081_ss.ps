%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[40.47890472 800.84216309]
[25.52054787 799.50653076]
[10.82516289 796.41101074]
[-3.40095139 791.59918213]
[-16.95808220 785.13848877]
[-29.65590858 777.11962891]
[-41.31617355 767.65527344]
[-51.77518463 756.87817383]
[-60.88611603 744.93969727]
[-68.52105713 732.00744629]
[-74.57283783 718.26287842]
[-78.95648193 703.89904785]
[-81.61047363 689.11755371]
[-82.49753571 674.12591553]
[-81.60521698 659.13458252]
[-78.94606018 644.35400391]
[-74.55738068 629.99169922]
[-68.50078583 616.24926758]
[-60.86131668 603.31964111]
[-51.74620819 591.38433838]
[-41.28342056 580.61096191]
[-29.61984444 571.15063477]
[-16.91921043 563.13629150]
[-3.35981679 556.68029785]
[10.86798191 551.87341309]
[25.56444931 548.78308105]
[40.52327347 547.45269775]
[40.96987915 532.45935059]
[33.61494827 519.50732422]
[41.75970078 505.94366455]
[42.20630646 490.95031738]
[42.65291214 475.95697021]
[43.09951782 460.96362305]
[43.54612350 445.97027588]
[43.99272919 430.97692871]
[44.43933487 415.98355103]
[42.61742783 413.85311890]
[41.52964401 410.87261963]
[41.50397873 407.31808472]
[42.76255417 403.57904053]
[45.38531494 400.11853027]
[46.72354889 385.17834473]
[48.06178284 370.23815918]
[49.28876114 355.28842163]
[50.40440750 340.32998657]
[40.52051163 329.24645996]
[41.43885040 314.06057739]
[53.13127136 303.76858521]
[54.24692154 288.81011963]
[52.52196121 286.60046387]
[51.56834793 283.57437134]
[51.70142746 280.02221680]
[53.12570572 276.34310913]
[55.90036774 273.00317383]
[57.90438461 258.13763428]
[59.90839767 243.27210999]
[61.91241074 228.40657043]
[63.91642380 213.54104614]
[52.62144089 223.41137695]
[37.69276810 224.87243652]
[24.69842911 217.37930298]
[18.48499298 203.72671509]
[21.36991501 189.00674438]
[32.27719116 178.70959473]
[47.13867950 176.67584229]
[60.41141129 183.66401672]
[67.14516449 197.06886292]
[70.90146637 182.54681396]
[74.65776825 168.02474976]
[78.41407013 153.50268555]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.19935608 57.23550797]
[106.73902893 42.65913010]
[110.27870178 28.08275604]
[113.81837463 13.50638103]
[117.35804749 -1.06999433]
[120.89772034 -15.64636993]
[112.93802643 -29.03595352]
[116.73539734 -43.76804733]
[129.54937744 -51.27388763]
[125.28712463 -66.51015472]
[135.80926514 -77.05215454]
[139.34893799 -91.62853241]
[138.33299255 -100.70628357]
[143.05134583 -106.39477539]
[146.80764771 -120.91683960]
[150.56394958 -135.43888855]
[149.68327332 -144.53077698]
[154.48579407 -150.14839172]
[158.45788574 -164.61291504]
[154.65116882 -179.96932983]
[165.48252869 -190.19335938]
[169.45462036 -204.65788269]
[155.92523193 -211.23591614]
[143.83506775 -220.18814087]
[133.59590149 -231.20967102]
[125.55647278 -243.92510986]
[119.99060822 -257.90136719]
[117.08788300 -272.66241455]
[116.94715118 -287.70553589]
[119.57321930 -302.51831055]
[124.87663269 -316.59625244]
[132.67675781 -329.45986938]
[142.70794678 -340.67102051]
[154.62852478 -349.84786987]
[168.03247070 -356.67785645]
[182.46327209 -360.92834473]
[197.42941284 -362.45458984]
[212.42114258 -361.20455933]
[226.92785645 -357.22088623]
[240.45547485 -350.63922119]
[252.54322815 -341.68371582]
[262.77941895 -330.65942383]
[270.81542969 -317.94183350]
[276.37753296 -303.96408081]
[279.27627563 -289.20223999]
[279.41293335 -274.15908813]
[276.78289795 -259.34701538]
[271.47567749 -245.27050781]
[263.67208862 -232.40899658]
[253.63787842 -221.20054626]
[241.71482849 -212.02691650]
[228.30903625 -205.20054626]
[213.87709045 -200.95393372]
[198.91053772 -199.43173218]
[183.91914368 -200.68579102]
[179.94705200 -186.22126770]
[184.03787231 -171.89945984]
[172.92240906 -160.64080811]
[168.95031738 -146.17628479]
[165.08601379 -131.68260193]
[161.32971191 -117.16053772]
[157.57341003 -102.63847351]
[153.92532349 -88.08885956]
[150.38565063 -73.51248169]
[154.90107727 -59.31881332]
[144.12574768 -47.73421478]
[152.07023621 -35.18746948]
[148.68814087 -20.35452843]
[135.47409058 -12.10669708]
[131.93441772 2.46967816]
[128.39474487 17.04605293]
[124.85507965 31.62242889]
[121.31540680 46.19880295]
[117.77573395 60.77518082]
[119.25204468 68.01688385]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[92.93612671 157.25898743]
[89.17982483 171.78105164]
[85.42352295 186.30311584]
[81.66722107 200.82516479]
[78.78195190 215.54505920]
[76.77793884 230.41058350]
[74.77392578 245.27612305]
[72.76991272 260.14163208]
[70.76589966 275.00717163]
[69.20537567 289.92578125]
[68.08972931 304.88421631]
[78.12606049 316.79681396]
[76.78154755 331.95092773]
[65.36286163 341.44561768]
[64.24721527 356.40408325]
[66.72968292 365.19470215]
[63.00196838 371.57638550]
[61.66373444 386.51657104]
[60.32550049 401.45675659]
[59.43268585 416.43017578]
[58.98608017 431.42352295]
[58.53947449 446.41687012]
[58.09286880 461.41021729]
[57.64626312 476.40356445]
[57.19965363 491.39691162]
[56.75304794 506.39025879]
[64.07603455 520.41467285]
[55.96323013 532.90594482]
[55.51662445 547.89929199]
[70.36973572 550.11773682]
[84.85620880 554.07733154]
[98.77267456 559.72253418]
[111.92375946 566.97412109]
[124.12485504 575.73022461]
[135.20466614 585.86798096]
[145.00765991 597.24505615]
[153.39619446 609.70172119]
[160.25254822 623.06311035]
[165.48043823 637.14166260]
[169.00646973 651.73974609]
[170.78115845 666.65234375]
[170.77960205 681.67022705]
[169.00178528 696.58251953]
[165.47270203 711.17980957]
[160.24186707 725.25726318]
[153.38273621 738.61724854]
[144.99157715 751.07214355]
[135.18621826 762.44720459]
[124.10428619 772.58264160]
[111.90135956 781.33618164]
[98.74875641 788.58502197]
[84.83111572 794.22735596]
[70.34381866 798.18389893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 186]
[28 185]
[30 183]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[41 176]
[42 175]
[43 174]
[44 172]
[45 171]
[48 168]
[49 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[75 153]
[76 152]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[85 142]
[87 140]
[88 139]
[90 138]
[91 137]
[92 136]
[94 135]
[95 134]
[97 132]
[98 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
