%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[271.44357300 243.58164978]
[258.37939453 236.21095276]
[245.31521606 228.84027100]
[232.25102234 221.46957397]
[219.18684387 214.09889221]
[206.12265015 206.72819519]
[193.05847168 199.35751343]
[201.16882324 211.97584534]
[205.04371643 226.46670532]
[204.31379700 241.44894409]
[199.04867554 255.49452209]
[189.75015259 267.26470947]
[177.30453491 275.63766479]
[162.89804077 279.81533813]
[147.90379333 279.39950562]
[133.75097656 274.42980957]
[121.78853607 265.37994385]
[113.15665436 253.11250305]
[108.67806244 238.79669189]
[108.77964020 223.79704285]
[113.45169830 209.54319763]
[122.24893188 197.39376831]
[134.33283997 188.50674438]
[148.55166626 183.72918701]
[163.55015564 183.51646423]
[177.89978027 187.88934326]
[167.25376892 177.32228088]
[156.60775757 166.75523376]
[145.96174622 156.18818665]
[135.31573486 145.62113953]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[75.40923309 86.15895844]
[64.76322174 75.59191132]
[54.11721420 65.02486420]
[43.47120285 54.45781708]
[32.82519531 43.89076996]
[15.33603382 44.27620697]
[3.21779394 32.13276672]
[3.62357450 15.31985188]
[-7.17858171 4.91247892]
[-17.98073769 -5.49489403]
[-28.78289413 -15.90226746]
[-40.17832947 -6.13042736]
[-52.45104218 2.51394653]
[-65.48989868 9.95256805]
[-79.17679596 16.11807060]
[-93.38780212 20.95461464]
[-107.99420166 24.41840363]
[-122.86371613 26.47806358]
[-137.86169434 27.11494255]
[-152.85229492 26.32327461]
[-167.69975281 24.11022758]
[-182.26962280 20.49584389]
[-196.42993164 15.51285648]
[-210.05245972 9.20639420]
[-223.01383972 1.63357055]
[-235.19665527 -7.13703299]
[-246.49061584 -17.02598572]
[-256.79339600 -27.94373131]
[-266.01174927 -39.79139328]
[-274.06213379 -52.46167755]
[-280.87164307 -65.83982849]
[-286.37866211 -79.80470276]
[-290.53326416 -94.22982025]
[-293.29785156 -108.98454285]
[-294.64739990 -123.93524170]
[-294.56964111 -138.94653320]
[-293.06530762 -153.88244629]
[-290.14801025 -168.60774231]
[-285.84417725 -182.98904419]
[-280.19281006 -196.89611816]
[-273.24505615 -210.20301819]
[-265.06384277 -222.78921509]
[-255.72326660 -234.54074097]
[-245.30792236 -245.35118103]
[-233.91213989 -255.12260437]
[-221.63911438 -263.76654053]
[-208.59999084 -271.20468140]
[-194.91285706 -277.36968994]
[-180.70167542 -282.20571899]
[-166.09515381 -285.66894531]
[-151.22555542 -287.72808838]
[-136.22756958 -288.36441040]
[-121.23699188 -287.57220459]
[-106.38961029 -285.35861206]
[-91.81987762 -281.74368286]
[-77.65974426 -276.76019287]
[-64.03744507 -270.45321655]
[-51.07635117 -262.87994385]
[-38.89384460 -254.10888672]
[-27.60025215 -244.21952820]
[-17.29785347 -233.30140686]
[-8.07995319 -221.45339966]
[-0.03002970 -208.78282166]
[6.77901363 -195.40441895]
[12.28551197 -181.43934631]
[16.43959618 -167.01408386]
[19.20364380 -152.25926208]
[20.55262566 -137.30850220]
[20.47432327 -122.29722595]
[18.96944427 -107.36135864]
[16.05162048 -92.63617706]
[11.74727345 -78.25502777]
[6.09538794 -64.34815979]
[-0.85285205 -51.04151917]
[-9.03452015 -38.45561218]
[-18.37552071 -26.70442390]
[-7.57336473 -16.29705048]
[3.22879148 -5.88967752]
[14.03094769 4.51769590]
[26.75368881 2.47775674]
[38.50374603 8.22391129]
[44.89289856 19.85959625]
[43.39224243 33.24475861]
[54.03824997 43.81180573]
[64.68425751 54.37885666]
[75.33026886 64.94589996]
[85.97628021 75.51294708]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[145.88278198 134.97514343]
[156.52879333 145.54219055]
[167.17480469 156.10923767]
[177.82081604 166.67628479]
[188.46682739 177.24333191]
[200.42915344 186.29331970]
[213.49334717 193.66401672]
[226.55752563 201.03471375]
[239.62171936 208.40539551]
[252.68589783 215.77609253]
[265.75009155 223.14677429]
[278.81427002 230.51747131]
[287.27114868 218.11767578]
[296.74917603 206.47975159]
[307.17999268 195.68754578]
[318.48849487 185.81883240]
[330.59320068 176.94470215]
[343.40686035 169.12910461]
[356.83718872 162.42834473]
[370.78741455 156.89071655]
[385.15698242 152.55609131]
[399.84240723 149.45571899]
[414.73785400 147.61195374]
[429.73602295 147.03805542]
[444.72879028 147.73815918]
[459.60821533 149.70722961]
[474.26699829 152.93109131]
[488.59960938 157.38648987]
[502.50271606 163.04133606]
[515.87615967 169.85488892]
[528.62359619 177.77806091]
[540.65319824 186.75373840]
[551.87823486 196.71728516]
[562.21789551 207.59689331]
[571.59759521 219.31417847]
[579.94982910 231.78469849]
[587.21435547 244.91862488]
[593.33892822 258.62133789]
[598.27929688 272.79406738]
[602.00000000 287.33471680]
[604.47406006 302.13851929]
[605.68383789 317.09881592]
[605.62048340 332.10778809]
[604.28448486 347.05734253]
[601.68548584 361.83975220]
[597.84222412 376.34844971]
[592.78234863 390.47897339]
[586.54235840 404.12948608]
[579.16717529 417.20162964]
[570.70996094 429.60119629]
[561.23162842 441.23886108]
[550.80053711 452.03079224]
[539.49176025 461.89923096]
[527.38684082 470.77304077]
[514.57299805 478.58831787]
[501.14245605 485.28872681]
[487.19210815 490.82598877]
[472.82241821 495.16024780]
[458.13693237 498.26022339]
[443.24142456 500.10360718]
[428.24325562 500.67712402]
[413.25048828 499.97662354]
[398.37115479 498.00717163]
[383.71243286 494.78295898]
[369.37994385 490.32717896]
[355.47695923 484.67196655]
[342.10369873 477.85806274]
[329.35644531 469.93457031]
[317.32711792 460.95858765]
[306.10232544 450.99475098]
[295.76296997 440.11486816]
[286.38354492 428.39733887]
[278.03164673 415.92660522]
[270.76742554 402.79248047]
[264.64324951 389.08963013]
[259.70321655 374.91677856]
[255.98292542 360.37603760]
[253.50920105 345.57214355]
[252.29985046 330.61181641]
[252.36358643 315.60284424]
[253.69996643 300.65332031]
[256.29934692 285.87100220]
[260.14300537 271.36236572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 139]
[2 138]
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[32 126]
[33 125]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[43 114]
[44 113]
[45 112]
[46 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
