%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[28.77058220 648.71673584]
[18.31044006 659.48931885]
[6.72869015 669.04577637]
[-5.83407307 677.27014160]
[-19.22534943 684.06256104]
[-33.28258514 689.34057617]
[-47.83512878 693.04010010]
[-62.70633698 695.11627197]
[-77.71568298 695.54382324]
[-92.68096161 694.31762695]
[-107.42050934 691.45251465]
[-121.75540924 686.98333740]
[-135.51164246 680.96423340]
[-148.52223206 673.46838379]
[-160.62922668 664.58673096]
[-171.68565369 654.42706299]
[-181.55731201 643.11273193]
[-190.12437439 630.78112793]
[-197.28282166 617.58190918]
[-202.94578552 603.67529297]
[-207.04449463 589.23010254]
[-209.52922058 574.42169189]
[-210.36978149 559.42980957]
[-209.55596924 544.43640137]
[-207.09768677 529.62359619]
[-203.02476501 515.17108154]
[-197.38662720 501.25439453]
[-190.25173950 488.04241943]
[-181.70671082 475.69552612]
[-171.85525513 464.36361694]
[-160.81697083 454.18426514]
[-148.72584534 445.28100586]
[-135.72866821 437.76193237]
[-121.98320007 431.71832275]
[-107.65629578 427.22354126]
[-92.92188263 424.33212280]
[-77.95881653 423.07922363]
[-62.94873428 423.47998047]
[-48.07384491 425.52960205]
[-33.51471710 429.20315552]
[-28.26799965 415.15069580]
[-23.02128220 401.09820557]
[-17.77456474 387.04574585]
[-12.52784538 372.99328613]
[-7.38588619 358.90213013]
[-2.34896994 344.77310181]
[2.68794632 330.64407349]
[7.72486258 316.51504517]
[3.63764358 299.44866943]
[17.76384544 287.63629150]
[22.58984184 273.43383789]
[27.41584015 259.23138428]
[32.24183655 245.02893066]
[27.90097809 228.02528381]
[41.84974670 216.00390625]
[46.46375275 201.73117065]
[33.98291397 210.05154419]
[18.98719406 210.40988159]
[6.12318325 202.69514465]
[-0.62306458 189.29782104]
[0.83884859 174.36923218]
[10.05593300 162.53515625]
[24.17217445 157.46250916]
[38.81350327 160.72311401]
[49.44314194 171.30662537]
[52.76736832 185.93388367]
[59.24686432 172.40554810]
[65.72635651 158.87719727]
[72.20585632 145.34884644]
[78.38162231 131.67918396]
[84.25058746 117.87500763]
[90.11954498 104.07083130]
[94.41366577 89.69861603]
[97.07946777 74.93740082]
[99.74526215 60.17618179]
[98.13249207 56.14468765]
[97.90897369 52.20583725]
[98.87498474 48.78498459]
[100.71318817 46.19894409]
[103.03421021 44.62700272]
[106.57388306 30.05062675]
[110.11355591 15.47425175]
[113.65322876 0.89787680]
[116.42884064 -13.84308624]
[118.43285370 -28.70861435]
[120.43686676 -43.57414246]
[122.21933746 -58.46786118]
[123.77985382 -73.38646698]
[125.34037781 -88.30506897]
[126.90090179 -103.22367096]
[127.79371643 -118.19708252]
[128.01704407 -133.19541931]
[128.24037170 -148.19375610]
[128.46369934 -163.19209290]
[128.68702698 -178.19042969]
[128.91035461 -193.18876648]
[129.13368225 -208.18710327]
[121.60270691 -222.10093689]
[129.52864075 -234.71160889]
[129.75196838 -249.70994568]
[116.27664948 -256.96765137]
[107.72730255 -269.66284180]
[106.06848907 -284.87817383]
[111.68140411 -299.11734009]
[123.27622986 -309.10827637]
[138.18856812 -312.55511475]
[152.99168396 -308.66580200]
[164.28390503 -298.33407593]
[169.47036743 -283.93411255]
[167.35928345 -268.77490234]
[158.43572998 -256.33990479]
[144.75030518 -249.48661804]
[144.52697754 -234.48828125]
[152.07392883 -221.64721680]
[144.13201904 -207.96377563]
[143.90869141 -192.96543884]
[143.68536377 -177.96710205]
[143.46203613 -162.96876526]
[143.23870850 -147.97042847]
[143.01538086 -132.97209167]
[142.79205322 -117.97375488]
[154.28169250 -127.61679840]
[169.23612976 -126.44848633]
[179.08877563 -115.13808441]
[178.19560242 -100.16469574]
[167.06825256 -90.10576630]
[152.08097839 -90.72350311]
[141.81950378 -101.66315460]
[140.25898743 -86.74454498]
[138.69845581 -71.82594299]
[137.13793945 -56.90733719]
[139.39605713 -52.69902039]
[139.03453064 -47.02748489]
[135.30239868 -41.57012939]
[133.29838562 -26.70460129]
[131.29437256 -11.83907223]
[143.16950989 -21.00318336]
[158.16159058 -20.51578140]
[169.41642761 -10.59969997]
[171.78846741 4.21156073]
[164.19323730 17.14649391]
[150.10317993 22.29141998]
[135.96006775 17.29414940]
[128.22959900 4.43754911]
[124.68993378 19.01392555]
[121.15026093 33.59030151]
[117.61058807 48.16667557]
[114.50647736 62.84197617]
[111.84068298 77.60319519]
[109.17488861 92.36441040]
[118.79618835 80.85656738]
[131.88949585 73.53772736]
[146.73214722 71.37081909]
[161.37135315 74.64093018]
[173.88107300 82.91783142]
[182.61541748 95.11254883]
[186.42526245 109.62065125]
[184.80934143 124.53335571]
[177.98025513 137.88864136]
[166.83648682 147.92938232]
[152.84419250 153.33454895]
[137.84431458 153.39300537]
[123.81031799 148.09706116]
[112.58863831 138.14347839]
[105.65567017 124.84181976]
[103.92372131 109.93978882]
[98.05476379 123.74396515]
[92.18579865 137.54814148]
[92.82069397 142.72926331]
[91.53343964 147.18978882]
[88.92039490 150.31820679]
[85.73419952 151.82835388]
[79.25470734 165.35668945]
[72.77520752 178.88504028]
[66.29571533 192.41339111]
[60.73648834 206.34518433]
[56.12247849 220.61791992]
[61.28962708 232.43583679]
[57.15277481 244.22865295]
[46.44429398 249.85491943]
[41.61829376 264.05737305]
[36.79229736 278.25982666]
[31.96630096 292.46228027]
[36.95692444 304.35583496]
[32.64495468 316.08575439]
[21.85389137 321.55197144]
[16.81697655 335.68099976]
[11.78005981 349.81002808]
[6.74314356 363.93905640]
[6.80917597 373.07324219]
[1.52462542 378.23999023]
[-3.72209287 392.29244995]
[-8.96881104 406.34494019]
[-14.21552944 420.39739990]
[-19.46224785 434.44989014]
[-6.05810165 441.21685791]
[6.52025032 449.41735840]
[18.12011719 458.95184326]
[28.60069084 469.70455933]
[37.83474350 481.54498291]
[45.71018219 494.32934570]
[52.13140488 507.90252686]
[57.02046967 522.09973145]
[60.31802368 536.74859619]
[61.98403549 551.67132568]
[61.99828720 566.68676758]
[60.36060333 581.61260986]
[57.09085846 596.26770020]
[52.22875214 610.47412109]
[45.83330154 624.05950928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 189]
[46 188]
[47 187]
[48 186]
[50 183]
[51 182]
[52 181]
[53 180]
[55 177]
[56 176]
[66 175]
[67 174]
[68 173]
[69 172]
[70 168]
[71 167]
[72 166]
[73 150]
[74 149]
[75 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 136]
[85 135]
[86 134]
[87 131]
[88 130]
[89 129]
[90 128]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
