%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[239.20472717 446.01953125]
[252.20967102 438.26388550]
[249.10556030 423.58856201]
[246.00144958 408.91326904]
[242.89733887 394.23797607]
[239.79322815 379.56265259]
[236.68911743 364.88735962]
[224.10429382 357.00332642]
[220.74723816 342.16470337]
[229.10206604 329.01803589]
[225.99795532 314.34274292]
[222.89384460 299.66744995]
[216.82000732 285.95217896]
[208.03941345 273.79071045]
[199.25880432 261.62927246]
[195.85494995 260.70941162]
[192.72752380 258.09518433]
[190.66802979 253.93443298]
[190.37202454 248.72296143]
[182.14321899 236.18154907]
[173.91441345 223.64015198]
[165.68560791 211.09875488]
[157.45680237 198.55735779]
[149.13485718 186.07756042]
[140.72024536 173.66006470]
[132.30561829 161.24256897]
[123.89099884 148.82507324]
[115.47637939 136.40757751]
[107.06175995 123.99008179]
[98.64714813 111.57258606]
[98.98943329 126.56867981]
[92.87020111 140.26374817]
[81.47097015 150.01350403]
[66.99275208 153.93539429]
[52.23106766 151.27218628]
[40.03616714 142.53808594]
[32.76269531 129.41952515]
[31.81504059 114.44949341]
[37.37618256 100.51846313]
[48.37235641 90.31629181]
[62.68036652 85.81287384]
[77.53756714 87.87773895]
[90.07614136 96.11310577]
[84.00231171 82.39784241]
[77.92847443 68.68257904]
[71.85464478 54.96730804]
[71.08562469 69.94758606]
[66.35589600 84.18238831]
[58.00689697 96.64410400]
[46.64135742 106.43309784]
[33.07976151 112.84270477]
[18.30113029 115.41020966]
[3.37234735 113.95025635]
[-10.62886429 108.56824493]
[-22.69174767 99.65270233]
[-31.94546890 87.84725189]
[-37.72199631 74.00414276]
[-39.60432053 59.12271500]
[-37.45655060 44.27727890]
[-31.43373489 30.53952980]
[-21.97067070 18.90121460]
[-9.75049973 10.20250988]
[4.34459019 5.07138538]
[19.29706383 3.87825990]
[34.02748871 6.70926619]
[47.47246170 13.36003208]
[58.66138077 23.35043144]
[66.78700256 35.96030426]
[65.22647858 21.04170036]
[56.09546280 8.12136173]
[62.46669769 -5.34179640]
[60.90617371 -20.26040077]
[58.79154968 -35.11059952]
[56.12575531 -49.87181473]
[53.45995712 -64.63303375]
[46.90393448 -51.14160919]
[34.53619385 -42.65402985]
[19.58963966 -41.38892365]
[5.97126102 -47.67699051]
[-2.75912762 -59.87454605]
[-4.31942511 -74.79317474]
[1.69822705 -88.53318024]
[13.72082901 -97.50296783]
[28.60570145 -99.35784912]
[42.46197510 -93.61296082]
[51.66730118 -81.77082825]
[51.22069550 -96.76417542]
[50.77408981 -111.75753021]
[50.32748413 -126.75087738]
[49.88087845 -141.74423218]
[49.43427277 -156.73757935]
[48.98766708 -171.73092651]
[48.54106140 -186.72427368]
[47.98284912 -201.71388245]
[47.31306458 -216.69892883]
[46.64328003 -231.68395996]
[32.25039673 -236.50157166]
[20.57224846 -246.19616699]
[13.18821144 -259.45666504]
[11.09691429 -274.48965454]
[14.58119011 -289.26205444]
[23.16981697 -301.77606201]
[35.70125580 -310.33920288]
[50.48072815 -313.79342651]
[65.50943756 -311.67153931]
[78.75486755 -304.26052856]
[88.42568970 -292.56268311]
[93.21400452 -278.16003418]
[92.47222137 -263.00039673]
[86.30067444 -249.13403320]
[75.53400421 -238.43621826]
[61.62831879 -232.35374451]
[62.29810333 -217.36871338]
[62.96788788 -202.38366699]
[66.40692902 -195.84190369]
[63.53441238 -187.17088318]
[63.98101807 -172.17753601]
[64.42761993 -157.18418884]
[64.87422943 -142.19082642]
[65.32083893 -127.19748688]
[65.76744080 -112.20413208]
[66.21405029 -97.21078491]
[66.66065216 -82.21743011]
[68.22117615 -67.29882812]
[70.88697052 -52.53761292]
[73.55276489 -37.77639389]
[84.11960602 -48.42261124]
[99.04722595 -46.95085907]
[107.33155060 -34.44606018]
[102.86567688 -20.12628365]
[88.94168091 -14.54753971]
[75.82477570 -21.82092476]
[77.38529968 -6.90231943]
[86.40469360 4.95094061]
[80.14508057 19.48117828]
[81.70560455 34.39978409]
[85.56990814 48.89347458]
[91.64374542 62.60874176]
[97.71757507 76.32400513]
[103.79141235 90.03927612]
[111.06464386 103.15796661]
[119.47925568 115.57546234]
[127.89387512 127.99295807]
[136.30850220 140.41046143]
[144.72311401 152.82795715]
[153.13772583 165.24545288]
[161.55235291 177.66294861]
[168.95706177 183.01159668]
[169.99819946 190.32855225]
[178.22700500 202.86994934]
[186.45581055 215.41134644]
[194.68463135 227.95274353]
[202.91343689 240.49414062]
[211.42025757 252.84866333]
[220.20086670 265.01010132]
[228.98146057 277.17156982]
[226.48347473 262.38104248]
[227.07223511 247.39259338]
[230.72268677 232.84356689]
[237.27963257 219.35258484]
[246.46424866 207.49328613]
[257.88601685 197.76995850]
[271.05926514 190.59602356]
[285.42388916 186.27650452]
[300.36904907 184.99510193]
[315.25930786 186.80628967]
[329.46148682 191.63304138]
[342.37176514 199.27014160]
[353.44113159 209.39283752]
[362.19891357 221.57072449]
[368.27276611 235.28598022]
[371.40441895 249.95544434]
[371.46066284 264.95532227]
[368.43917847 279.64785767]
[362.46838379 293.40829468]
[353.80215454 305.65155029]
[342.80905151 315.85699463]
[329.95645142 323.59072876]
[315.79086304 328.52389526]
[300.91461182 330.44671631]
[285.96023560 329.27746582]
[271.56365967 325.06582642]
[258.33694458 317.99090576]
[246.84255981 308.35354614]
[237.56915283 296.56332397]
[240.67326355 311.23861694]
[243.77735901 325.91394043]
[256.73999023 334.55154419]
[259.67895508 349.47860718]
[251.36442566 361.78323364]
[254.46853638 376.45855713]
[257.57263184 391.13385010]
[260.67675781 405.80914307]
[263.78085327 420.48446655]
[266.88497925 435.15975952]
[281.91650391 436.98516846]
[295.53976440 443.59463501]
[306.27703857 454.27124023]
[312.96362305 467.85681152]
[314.87420654 482.87774658]
[311.80151367 497.70468140]
[304.07888794 510.72924805]
[292.54400635 520.53869629]
[278.44808960 526.06890869]
[263.32012939 526.72009277]
[248.80113220 522.42156982]
[236.46600342 513.63958740]
[227.65274048 501.32678223]
[223.31736755 486.81872559]
[223.93014526 471.68917847]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[10 187]
[11 186]
[12 185]
[13 156]
[14 155]
[15 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[43 140]
[44 139]
[45 138]
[46 137]
[68 136]
[69 135]
[71 133]
[72 132]
[73 126]
[74 125]
[75 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
