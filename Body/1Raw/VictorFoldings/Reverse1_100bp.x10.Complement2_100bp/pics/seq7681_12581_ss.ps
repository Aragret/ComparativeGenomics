%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[64.34036255 703.38934326]
[52.63860703 712.83599854]
[39.47413635 720.10705566]
[25.24700165 724.98144531]
[10.38955021 727.31109619]
[-4.64671850 727.02514648]
[-19.40486908 724.13238525]
[-33.43641663 718.72070312]
[-46.31496048 710.95446777]
[-57.64913177 701.06976318]
[-67.09450531 689.36688232]
[-74.36403656 676.20159912]
[-79.23682404 661.97393799]
[-81.56478119 647.11621094]
[-81.27716827 632.07995605]
[-78.38272095 617.32214355]
[-72.96940613 603.29119873]
[-65.20172119 590.41357422]
[-55.31571579 579.08050537]
[-43.61182022 569.63647461]
[-30.44570160 562.36840820]
[-16.21746254 557.49725342]
[-1.35948181 555.17095947]
[13.67672157 555.46026611]
[8.53201675 541.48242188]
[18.77931595 529.42822266]
[21.66458893 514.70831299]
[24.54986000 499.98843384]
[27.43513298 485.26855469]
[30.32040596 470.54864502]
[33.20567703 455.82876587]
[36.09095001 441.10888672]
[21.99813843 434.67001343]
[9.84416008 425.04617310]
[0.33507976 412.79119873]
[-5.97542429 398.61175537]
[-8.71829033 383.32693481]
[-7.73065758 367.82061768]
[-3.06552935 352.99063110]
[5.01105356 339.69656372]
[16.03518105 328.71005249]
[29.37171936 320.66992188]
[44.25090408 316.04513550]
[59.81275940 315.10733032]
[62.47855377 300.34613037]
[65.14434814 285.58489990]
[59.79210663 271.68518066]
[69.85880280 259.47973633]
[72.52459717 244.71853638]
[65.70941925 228.54693604]
[77.72059631 214.58938599]
[80.16632843 199.79011536]
[82.28095245 184.93992615]
[84.06341553 170.04620361]
[77.89333344 156.48968506]
[87.21569824 143.70672607]
[88.99816895 128.81300354]
[75.99794769 119.36830139]
[69.51300812 104.66613770]
[71.30365753 88.69736481]
[80.88383484 75.79666138]
[95.65303040 69.46586609]
[97.21354675 54.54726028]
[98.77407074 39.62865448]
[87.40933228 29.22918892]
[84.38265991 14.30629921]
[90.64936066 0.62447035]
[103.61562347 -6.65660286]
[105.17614746 -21.57520866]
[106.73667145 -36.49381256]
[108.18608856 -51.42362213]
[109.52432251 -66.36380768]
[101.86802673 -76.74378204]
[103.29021454 -89.15994263]
[112.48661804 -97.01824188]
[114.04713440 -111.93685150]
[111.82749939 -120.79749298]
[115.74356842 -127.06536865]
[117.52603149 -141.95907593]
[119.30849457 -156.85279846]
[121.09096527 -171.74652100]
[122.87342834 -186.64022827]
[124.65589142 -201.53395081]
[126.43836212 -216.42767334]
[127.44261932 -231.39401245]
[127.66594696 -246.39234924]
[127.88927460 -261.39068604]
[128.00094604 -276.39025879]
[128.00094604 -291.39025879]
[128.00094604 -306.39025879]
[127.77761841 -321.38861084]
[127.33100891 -336.38195801]
[126.88440704 -351.37530518]
[126.43779755 -366.36865234]
[125.99119568 -381.36199951]
[111.46572876 -385.58883667]
[98.95850372 -394.09909058]
[89.69483185 -406.05902100]
[84.58229065 -420.29690552]
[84.12174225 -435.41784668]
[88.35830688 -449.94046021]
[96.87693787 -462.44198608]
[108.84306335 -471.69763184]
[123.08435822 -476.80065918]
[138.20561218 -477.25106812]
[152.72540283 -473.00476074]
[165.22120667 -464.47775269]
[174.46884155 -452.50543213]
[179.56230164 -438.26071167]
[180.00257874 -423.13916016]
[175.74655151 -408.62222290]
[167.21118164 -396.13214111]
[155.23266602 -386.89251709]
[140.98454285 -381.80862427]
[141.43115234 -366.81527710]
[141.87774658 -351.82192993]
[142.32435608 -336.82855225]
[142.77096558 -321.83520508]
[145.57107544 -317.96630859]
[145.97050476 -312.29733276]
[143.00094604 -306.39025879]
[143.00094604 -291.39025879]
[143.00094604 -276.39025879]
[146.14443970 -269.70147705]
[142.88761902 -261.16735840]
[142.66429138 -246.16902161]
[142.44096375 -231.17068481]
[153.14297485 -241.68099976]
[168.08674622 -242.97857666]
[180.44018555 -234.47018433]
[184.55545044 -220.04573059]
[178.55110168 -206.29991150]
[165.17225647 -199.51708984]
[150.53553772 -202.79832458]
[141.33207703 -214.64520264]
[139.54960632 -199.75148010]
[137.76715088 -184.85777283]
[135.98468018 -169.96405029]
[134.20220947 -155.07032776]
[132.41975403 -140.17662048]
[130.63728333 -125.28289795]
[128.96574402 -110.37632751]
[127.40522003 -95.45771790]
[135.40429688 -79.83781433]
[124.46450806 -65.02557373]
[123.12627411 -50.08538818]
[125.66049194 -43.14279938]
[121.65527344 -34.93328857]
[120.09474945 -20.01468468]
[118.53423309 -5.09607983]
[129.71307373 4.71063089]
[133.01278687 19.39313126]
[126.96348572 33.36664963]
[113.69268036 41.18917847]
[112.13215637 56.10778046]
[110.57163239 71.02639008]
[121.99671936 78.38117218]
[129.15243530 89.93198395]
[130.64991760 103.43691254]
[126.19850159 116.27476501]
[116.66218567 125.95382690]
[103.89188385 130.59547424]
[102.10942078 145.48918152]
[108.15200806 160.11100769]
[98.95713043 171.82867432]
[97.17466736 186.72239685]
[99.23055267 191.52035522]
[99.23954773 196.16288757]
[97.60361481 199.89636230]
[94.96559906 202.23585510]
[92.51986694 217.03512573]
[99.38293457 227.95579529]
[97.04120636 240.23179626]
[87.28581238 247.38432312]
[84.62001801 262.14553833]
[89.78158569 277.10110474]
[79.90557098 288.25070190]
[77.23976898 303.01193237]
[74.57397461 317.77313232]
[87.91605377 323.56210327]
[99.62503052 332.17630005]
[109.11312103 343.17913818]
[115.90493774 356.01419067]
[119.66135406 370.03344727]
[120.19638824 384.52981567]
[117.48644257 398.77304077]
[111.67131805 412.04632568]
[103.04697418 423.68243408]
[92.05052948 433.09719849]
[79.23805237 439.81903076]
[65.25645447 443.51226807]
[50.81084442 443.99414062]
[47.92557144 458.71405029]
[45.04029846 473.43392944]
[42.15502548 488.15380859]
[39.26975250 502.87371826]
[36.38447952 517.59362793]
[33.49920654 532.31347656]
[38.43753815 547.34423828]
[28.39661217 558.34558105]
[42.42938995 563.75408936]
[55.30969238 571.51739502]
[66.64611053 581.39953613]
[76.09413147 593.10021973]
[83.36665344 606.26391602]
[88.24266815 620.49047852]
[90.57398987 635.34765625]
[90.28978729 650.38397217]
[87.39868927 665.14245605]
[81.98855591 679.17462158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 200]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[44 179]
[45 178]
[46 177]
[48 175]
[49 174]
[51 171]
[52 170]
[53 166]
[54 165]
[56 163]
[57 162]
[62 156]
[63 155]
[64 154]
[68 150]
[69 149]
[70 148]
[71 146]
[72 145]
[75 143]
[76 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 127]
[86 126]
[87 125]
[88 123]
[89 122]
[90 121]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
