%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[212.96438599 480.19607544]
[217.15019226 465.76486206]
[223.34724426 452.07626343]
[231.42936707 439.40899658]
[241.23204041 428.02090454]
[252.55569458 418.14389038]
[265.16976929 409.97897339]
[258.89239502 396.35565186]
[252.61505127 382.73233032]
[246.33769226 369.10900879]
[240.06033325 355.48571777]
[233.78295898 341.86239624]
[221.42953491 333.54119873]
[222.68147278 317.76959229]
[216.40411377 304.14630127]
[209.03343201 291.08209229]
[200.61880493 278.66461182]
[192.20419312 266.24710083]
[183.78956604 253.82962036]
[175.28274536 241.47511292]
[166.68417358 229.18426514]
[158.08561707 216.89343262]
[149.48704529 204.60260010]
[147.86790466 219.51495361]
[137.87844849 230.70472717]
[123.24452972 233.99839783]
[109.42422485 228.16752625]
[101.57215881 215.38687134]
[102.61697388 200.42329407]
[112.16896820 188.85786438]
[126.66548920 185.00418091]
[140.70060730 190.30029297]
[133.62350464 177.07476807]
[117.46501923 176.94853210]
[103.49461365 168.64289856]
[95.57373810 154.34336853]
[95.94711304 137.90693665]
[104.60750580 123.82186127]
[97.33427429 110.70316315]
[90.75451660 124.18302917]
[76.14707184 127.59223938]
[64.28002167 118.41765594]
[63.90129852 103.42243958]
[75.29009247 93.66049957]
[90.04965973 96.32701874]
[83.77230072 82.70370483]
[77.49494171 69.08039093]
[71.21758270 55.45707321]
[64.94021606 41.83375549]
[58.66285706 28.21044159]
[45.86043549 18.91482162]
[47.56136703 4.11765718]
[34.75894547 -5.17796183]
[36.45988083 -19.97512627]
[30.18251991 -33.59844208]
[23.90515900 -47.22175980]
[23.35925865 -32.23169708]
[18.84198761 -17.92805099]
[10.67945480 -5.34341526]
[-0.53908253 4.61371422]
[-14.00374699 11.22452450]
[-28.74251366 14.01177406]
[-43.69137573 12.77425098]
[-57.77116776 7.60129166]
[-69.96545410 -1.13366282]
[-79.39391327 -12.80002880]
[-85.37590790 -26.55560112]
[-87.47958374 -41.40735245]
[-85.55307770 -56.28312683]
[-79.73546600 -70.10902405]
[-70.44672394 -81.88694000]
[-58.35742188 -90.76661682]
[-44.34028625 -96.10702515]
[-29.40723610 -97.52264404]
[-14.63629436 -94.91126251]
[-1.09379077 -88.46141052]
[10.24263000 -78.63870239]
[18.55508995 -66.15120697]
[16.77262497 -81.04492188]
[14.99015903 -95.93864441]
[13.20769310 -110.83235931]
[11.42522717 -125.72607422]
[2.10286021 -138.50903320]
[8.27294254 -152.06556702]
[-1.49339533 -156.36003113]
[-8.54228687 -164.26068115]
[-11.65185833 -174.29731750]
[-10.32503986 -184.63909912]
[-4.86772394 -193.42846680]
[3.67841601 -199.11480713]
[2.56276751 -214.07327271]
[1.44711876 -229.03172302]
[0.33147010 -243.99017334]
[-14.40779686 -247.34359741]
[-27.50297165 -254.89393616]
[-37.78963852 -265.96984863]
[-44.35311890 -279.58645630]
[-46.60978317 -294.53298950]
[-44.35898209 -309.48040771]
[-37.80084610 -323.09960938]
[-27.51852226 -334.17956543]
[-14.42631054 -341.73504639]
[0.31164041 -345.09423828]
[15.38484192 -343.95846558]
[29.45299339 -338.42868042]
[41.26516724 -328.99661255]
[49.77103043 -316.50094604]
[54.21425247 -302.05276489]
[54.19973755 -286.93685913]
[49.72877884 -272.49725342]
[41.19893646 -260.01794434]
[29.36866951 -250.60858154]
[15.28992367 -245.10581970]
[16.40557289 -230.14736938]
[17.52122116 -215.18891907]
[18.63686943 -200.23046875]
[34.29164505 -188.63554382]
[36.40450668 -168.96221924]
[23.16666031 -153.84802246]
[32.36153412 -142.13037109]
[26.31894493 -127.50854492]
[28.10140991 -112.61482239]
[29.88387680 -97.72110748]
[31.66634178 -82.82739258]
[33.44880676 -67.93367004]
[37.52847290 -53.49911880]
[43.80583572 -39.87580490]
[50.08319473 -26.25248718]
[62.43661880 -17.93129921]
[61.18468475 -2.15970349]
[73.53810883 6.16148472]
[72.28617096 21.93308067]
[78.56353760 35.55639648]
[84.84089661 49.17971420]
[91.11825562 62.80302811]
[97.39561462 76.42634583]
[103.67298126 90.04965973]
[110.45297241 103.42993164]
[117.72619629 116.54862976]
[131.70581055 116.06548309]
[144.46884155 121.62615204]
[153.54736328 132.09318542]
[157.21272278 145.38658142]
[154.80458069 158.89692688]
[146.84902954 169.99766541]
[153.92613220 183.22319031]
[161.77789307 196.00402832]
[170.37644958 208.29487610]
[178.97502136 220.58570862]
[187.57357788 232.87654114]
[195.05711365 238.11436462]
[196.20706177 245.41499329]
[204.62168884 257.83248901]
[213.03630066 270.25000000]
[221.45092773 282.66748047]
[221.50328064 267.66757202]
[228.43875122 254.36723328]
[240.70791626 245.73776245]
[255.56980896 243.70703125]
[269.70425415 248.72871399]
[279.95361328 259.68093872]
[284.02807617 274.11694336]
[281.01745605 288.81170654]
[271.59432983 300.48239136]
[257.86383057 306.52169800]
[242.89338684 305.58047485]
[230.02743530 297.86892700]
[236.30479431 311.49224854]
[249.10720825 320.78787231]
[247.40628052 335.58502197]
[253.68363953 349.20834351]
[259.96099854 362.83166504]
[266.23837280 376.45498657]
[272.51571655 390.07830811]
[278.79309082 403.70159912]
[293.19552612 399.41784668]
[308.06100464 397.22741699]
[323.08691406 397.17495728]
[337.96734619 399.26153564]
[352.39932251 403.44467163]
[366.08905029 409.63916016]
[378.75784302 417.71896362]
[390.14773560 427.51950073]
[400.02688599 438.84133911]
[408.19412231 451.45388794]
[414.48321533 465.10043335]
[418.76611328 479.50314331]
[420.95559692 494.36874390]
[421.00711060 509.39468384]
[418.91961670 524.27496338]
[414.73559570 538.70666504]
[408.54025269 552.39605713]
[400.45968628 565.06433105]
[390.65841675 576.45361328]
[379.33599854 586.33203125]
[366.72293091 594.49853516]
[353.07598877 600.78674316]
[338.67303467 605.06878662]
[323.80728149 607.25732422]
[308.78134155 607.30792236]
[293.90118408 605.21948242]
[279.46972656 601.03460693]
[265.78076172 594.83837891]
[253.11297607 586.75701904]
[241.72428894 576.95507812]
[231.84655762 565.63201904]
[223.68086243 553.01849365]
[217.39346313 539.37115479]
[213.11236572 524.96789551]
[210.92471313 510.10202026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[14 168]
[15 167]
[16 155]
[17 154]
[18 153]
[19 152]
[20 150]
[21 149]
[22 148]
[23 147]
[32 146]
[33 145]
[38 139]
[39 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[52 130]
[54 128]
[55 127]
[56 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[84 119]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
