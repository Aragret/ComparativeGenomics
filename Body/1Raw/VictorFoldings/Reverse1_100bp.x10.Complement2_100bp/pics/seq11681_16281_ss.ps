%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[64.34365845 655.89630127]
[50.49965668 649.97705078]
[38.18908310 641.30853271]
[27.95010567 630.26965332]
[20.23032570 617.34295654]
[15.36722088 603.09362793]
[13.57338333 588.14453125]
[14.92723370 573.14916992]
[19.36958694 558.76306152]
[26.70624161 545.61517334]
[36.61647415 534.28021240]
[48.66704559 525.25372314]
[62.33116150 518.93035889]
[77.01148224 515.58642578]
[76.78815460 500.58807373]
[68.86222076 487.97741699]
[76.39320374 474.06356812]
[65.55989838 463.90606689]
[65.11975861 448.69879150]
[75.84734344 437.40469360]
[75.62401581 422.40637207]
[72.38127899 415.76507568]
[75.51068878 407.18344116]
[75.51068878 392.18344116]
[65.21428680 384.43661499]
[61.19985962 371.98803711]
[65.14627075 359.31381226]
[75.82670593 351.10754395]
[76.05003357 336.10919189]
[76.27336121 321.11087036]
[76.38503265 306.11126709]
[76.38503265 291.11126709]
[76.38503265 276.11126709]
[76.38503265 261.11126709]
[76.27336121 246.11169434]
[76.05003357 231.11335754]
[67.38198853 243.35528564]
[53.79586411 249.71275330]
[38.84304810 248.52391052]
[26.43217087 240.09953308]
[19.80740356 226.64173889]
[20.70044708 211.66833496]
[28.87785912 199.09336853]
[42.20208359 192.20388794]
[57.19020462 192.80078125]
[69.92435455 200.72802734]
[77.07566071 213.91261292]
[79.07967377 199.04708862]
[81.08368683 184.18154907]
[83.08769989 169.31602478]
[85.09171295 154.45050049]
[87.09572601 139.58497620]
[81.12816620 125.93808746]
[90.63981628 113.29534149]
[83.87030029 97.94770813]
[94.26747894 84.78430939]
[96.04994202 69.89059448]
[97.83241272 54.99687576]
[99.61487579 40.10315704]
[101.39733887 25.20944023]
[99.34146118 20.41147995]
[99.33246613 15.76893520]
[100.96839142 12.03546715]
[103.60641479 9.69598007]
[98.22274780 -5.18107367]
[107.93167114 -16.47647476]
[110.37740326 -31.27574539]
[101.62609863 -50.83661652]
[115.38854980 -66.21712494]
[117.17101288 -81.11083984]
[118.95347595 -96.00455475]
[111.60962677 -106.60788727]
[113.40086365 -118.97620392]
[122.82715607 -126.55720520]
[124.83116913 -141.42272949]
[126.83518219 -156.28826904]
[128.83918762 -171.15379333]
[130.84320068 -186.01931763]
[118.45233917 -197.53289795]
[115.39601898 -213.99984741]
[122.68396759 -228.89439392]
[137.26606750 -236.43362427]
[139.04852295 -251.32733154]
[140.83099365 -266.22106934]
[142.50253296 -281.12762451]
[144.06306458 -296.04623413]
[145.62358093 -310.96484375]
[147.18411255 -325.88345337]
[148.74462891 -340.80203247]
[149.74888611 -355.76840210]
[150.19549561 -370.76174927]
[142.87251282 -384.78616333]
[150.98532104 -397.27743530]
[151.43191528 -412.27078247]
[151.87852478 -427.26412964]
[137.42382812 -431.59127808]
[124.58213806 -439.51296997]
[114.22899628 -450.48907471]
[107.07031250 -463.77124023]
[103.59417725 -478.45382690]
[104.03759003 -493.53579712]
[108.37033081 -507.98883057]
[116.29698181 -520.82745361]
[127.27708435 -531.17639160]
[140.56199646 -538.32989502]
[155.24594116 -541.80041504]
[170.32774353 -541.35113525]
[184.77909851 -537.01281738]
[197.61466980 -529.08123779]
[207.95933533 -518.09710693]
[215.10775757 -504.80944824]
[218.57255554 -490.12417603]
[218.11749268 -475.04254150]
[213.77359009 -460.59286499]
[205.83703613 -447.76034546]
[194.84893799 -437.41995239]
[181.55850220 -430.27664185]
[166.87187195 -426.81750488]
[166.42527771 -411.82415771]
[165.97866821 -396.83081055]
[173.33360291 -383.87881470]
[165.18884277 -370.31512451]
[164.74223328 -355.32177734]
[177.28347778 -363.55084229]
[191.58340454 -359.02182007]
[197.10064697 -345.07333374]
[189.76809692 -331.98770142]
[174.99104309 -329.41116333]
[163.66323853 -339.24151611]
[162.10270691 -324.32290649]
[160.54219055 -309.40432739]
[158.98165894 -294.48571777]
[157.42114258 -279.56710815]
[159.85171509 -272.58755493]
[155.72471619 -264.43859863]
[153.94224548 -249.54487610]
[152.15977478 -234.65115356]
[162.75155640 -226.52365112]
[167.98623657 -214.12435913]
[166.39796448 -200.65042114]
[158.29537964 -189.63377380]
[145.70874023 -184.01530457]
[143.70472717 -169.14978027]
[141.70071411 -154.28425598]
[139.69670105 -139.41871643]
[137.69268799 -124.55319214]
[145.22315979 -108.70204163]
[133.84719849 -94.22209167]
[132.06472778 -79.32837677]
[130.28225708 -64.43465424]
[136.83355713 -58.44185638]
[139.93988037 -49.97749710]
[138.78575134 -40.89662170]
[133.50453186 -33.25197983]
[125.17667389 -28.83001900]
[122.73094177 -14.03074741]
[128.28953552 -0.21223614]
[118.40568542 12.14170742]
[116.29106140 26.99190521]
[114.50859070 41.88562393]
[112.72612762 56.77933884]
[110.94366455 71.67305756]
[109.16119385 86.56677246]
[115.79479218 96.13948059]
[114.32477570 107.69284821]
[105.50534821 115.29935455]
[111.32956696 130.00952148]
[101.96125793 141.58898926]
[99.95724487 156.45451355]
[97.95323181 171.32003784]
[95.94921875 186.18556213]
[93.94519806 201.05110168]
[91.94118500 215.91662598]
[91.04837036 230.89002991]
[91.27169800 245.88836670]
[94.52852631 254.42247009]
[91.38503265 261.11126709]
[91.38503265 276.11126709]
[91.38503265 291.11126709]
[91.38503265 306.11126709]
[94.51443481 314.69293213]
[91.27169800 321.33419800]
[91.04837036 336.33251953]
[90.82504272 351.33087158]
[103.23703003 363.65814209]
[102.89994812 380.81045532]
[90.51068878 392.18344116]
[90.51068878 407.18344116]
[90.62235260 422.18304443]
[90.84568024 437.18136597]
[101.90478516 448.15106201]
[101.91761017 463.36468506]
[91.39154053 473.84024048]
[99.33344269 487.52368164]
[91.78649139 500.36474609]
[92.00981903 515.36309814]
[106.78319550 518.26843262]
[120.62952423 524.18218994]
[132.94351196 532.84588623]
[143.18682861 543.88073730]
[150.91169739 556.80438232]
[155.78041077 571.05181885]
[157.58012390 586.00024414]
[156.23217773 600.99609375]
[151.79547119 615.38391113]
[144.46398926 628.53472900]
[134.55822754 639.87359619]
[122.51120758 648.90478516]
[108.84957886 655.23358154]
[94.17057037 658.58325195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 196]
[15 195]
[17 193]
[20 190]
[21 189]
[23 188]
[24 187]
[28 184]
[29 183]
[30 182]
[31 180]
[32 179]
[33 178]
[34 177]
[35 175]
[36 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[54 166]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[64 158]
[66 156]
[67 155]
[69 150]
[70 149]
[71 148]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[82 137]
[83 136]
[84 135]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 123]
[91 122]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
