%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-20.59614754 412.73300171]
[-18.85743523 427.64859009]
[-18.83033943 442.66513062]
[-20.51521492 457.58691406]
[-23.89009094 472.21932983]
[-28.91097450 486.37167358]
[-35.51240540 499.85940552]
[-43.60832214 512.50671387]
[-53.09317398 524.14862061]
[-63.84331131 534.63348389]
[-75.71858215 543.82458496]
[-88.56416321 551.60205078]
[-102.21259308 557.86444092]
[-116.48593140 562.53027344]
[-131.19810486 565.53857422]
[-146.15730286 566.85015869]
[-161.16848755 566.44793701]
[-176.03598022 564.33715820]
[-190.56594849 560.54534912]
[-204.56896973 555.12194824]
[-217.86245728 548.13757324]
[-230.27313232 539.68341064]
[-241.63917542 529.86962891]
[-251.81243896 518.82415771]
[-260.66024780 506.69097900]
[-268.06729126 493.62829590]
[-273.93698120 479.80642700]
[-278.19281006 465.40551758]
[-280.77929688 450.61337280]
[-281.66268921 435.62277222]
[-280.83148193 420.62921143]
[-278.29653931 405.82815552]
[-274.09091187 391.41253662]
[-268.26937866 377.57028198]
[-260.90786743 364.48190308]
[-252.10235596 352.31799316]
[-241.96763611 341.23712158]
[-230.63583374 331.38381958]
[-218.25466919 322.88647461]
[-204.98558044 315.85589600]
[-191.00154114 310.38375854]
[-176.48487854 306.54135132]
[-161.62481689 304.37881470]
[-146.61511230 303.92434692]
[-131.65144348 305.18383789]
[-116.92888641 308.14086914]
[-102.63938904 312.75692749]
[-88.96923065 318.97177124]
[-76.09664154 326.70446777]
[-66.95783997 314.80981445]
[-57.81903458 302.91519165]
[-48.68023300 291.02056885]
[-39.54142761 279.12591553]
[-37.92278290 264.31951904]
[-23.37949181 258.09030151]
[-14.24068928 246.19567871]
[-5.27999306 234.16629028]
[3.50061011 222.00483704]
[4.33965969 204.47592163]
[21.20160866 197.07618713]
[29.80017281 184.78533936]
[28.00418663 172.82286072]
[35.06720352 162.51278687]
[47.65279770 159.69046021]
[48.82988358 144.84243774]
[63.18126297 138.18296814]
[71.96186829 126.02150726]
[80.74246979 113.86005402]
[89.52307129 101.69859314]
[97.56424713 89.03607178]
[104.83747101 75.91737366]
[104.09043884 57.51837158]
[119.47471619 49.07497406]
[126.55182648 35.84944916]
[133.62893677 22.62392044]
[140.70603943 9.39839268]
[147.78314209 -3.82713485]
[152.39715576 -18.09986877]
[154.40116882 -32.96539688]
[156.40518188 -47.83092499]
[158.40919495 -62.69645309]
[144.01753235 -75.31451416]
[140.16908264 -93.91018677]
[148.24169922 -110.93257141]
[164.80982971 -119.58071136]
[166.14805603 -134.52088928]
[167.48629761 -149.46107483]
[165.05557251 -155.60951233]
[165.95916748 -161.22026062]
[169.09327698 -164.82391357]
[170.87574768 -179.71763611]
[164.83316040 -194.33946228]
[174.02803040 -206.05711365]
[167.98544312 -220.67893982]
[177.18031311 -232.39660645]
[178.96278381 -247.29031372]
[180.74525452 -262.18405151]
[166.63749695 -267.49768066]
[154.21173096 -276.03369141]
[144.19035339 -287.29583740]
[137.15602112 -300.62930298]
[133.51766968 -315.25894165]
[133.48684692 -330.33416748]
[137.06535339 -344.97854614]
[144.04512024 -358.34066772]
[154.02035522 -369.64367676]
[166.41111755 -378.23043823]
[180.49702454 -383.60171509]
[195.45913696 -385.44525146]
[210.42758179 -383.65383911]
[224.53210449 -378.33163452]
[236.95269775 -369.78808594]
[246.96723938 -358.51986694]
[253.99349976 -345.18212891]
[257.62295532 -330.55032349]
[257.64465332 -315.47506714]
[254.05728149 -300.83285522]
[247.06941223 -287.47497559]
[237.08732605 -276.17800903]
[224.69136047 -267.59875488]
[210.60220337 -262.23602295]
[195.63896179 -260.40158081]
[193.85650635 -245.50785828]
[192.07403564 -230.61413574]
[198.24412537 -217.05761719]
[188.92175293 -204.27465820]
[195.09182739 -190.71812439]
[185.76947021 -177.93516541]
[183.98699951 -163.04145813]
[182.42648315 -148.12284851]
[181.08824158 -133.18266296]
[179.75001526 -118.24247742]
[189.38862610 -112.62574005]
[196.26651001 -103.77742004]
[199.35978699 -92.95233154]
[198.18476868 -81.70386505]
[192.87309265 -71.66104889]
[184.15830994 -64.29265594]
[173.27471924 -60.69244003]
[171.27070618 -45.82691193]
[169.26669312 -30.96138191]
[167.26268005 -16.09585381]
[175.65458679 -28.52870750]
[186.74491882 -38.62844849]
[199.90643311 -45.82388687]
[214.39480591 -49.70808411]
[229.39064026 -50.06137466]
[244.04586792 -46.86377335]
[257.53164673 -40.29612350]
[269.08526611 -30.72985649]
[278.05337524 -18.70599174]
[283.92871094 -4.90453482]
[286.37905884 9.89397335]
[285.26580811 24.85260582]
[280.65191650 39.12537766]
[272.79833984 51.90509796]
[262.14920044 62.46900558]
[249.30680847 70.21966553]
[234.99742126 74.71874237]
[220.03033447 75.71178436]
[205.25199890 73.14263916]
[191.49818420 67.15659332]
[179.54675293 58.09219360]
[170.07360840 46.46207809]
[163.61451721 32.92398071]
[160.53475952 18.24354935]
[161.00866699 3.24997067]
[153.93156433 16.47549820]
[146.85446167 29.70102501]
[139.77735901 42.92655182]
[132.70024109 56.15208054]
[135.90502930 67.81638336]
[130.11720276 78.89270782]
[117.95616913 83.19060516]
[110.68293762 96.30930328]
[124.79418182 91.22277069]
[139.23191833 95.29117584]
[148.61122131 106.99710083]
[149.43383789 121.97452545]
[141.39297485 134.63723755]
[127.48764801 140.26237488]
[112.90422058 136.75187683]
[103.08193970 125.41508484]
[101.68452454 110.47920227]
[92.90392303 122.64065552]
[84.12332153 134.80210876]
[75.34272003 146.96356201]
[73.53758240 162.68145752]
[59.81425476 168.47105408]
[58.36962128 186.82846069]
[42.09101105 193.38391113]
[33.49244690 205.67474365]
[34.96480942 218.48860168]
[27.55001450 228.54864502]
[15.66206646 230.78544617]
[6.88146257 242.94689941]
[5.83124590 249.47442627]
[2.18892884 253.83682251]
[-2.34605622 255.33447266]
[-11.48485851 267.22909546]
[-13.75717163 282.88629150]
[-27.64679718 288.26470947]
[-36.78559875 300.15936279]
[-45.92440033 312.05398560]
[-55.06320190 323.94860840]
[-64.20200348 335.84326172]
[-53.41410065 346.28924561]
[-43.88729858 357.89691162]
[-35.74579239 370.51489258]
[-29.09573174 383.97872925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[55 200]
[56 199]
[57 196]
[58 195]
[60 192]
[61 191]
[64 189]
[66 187]
[67 186]
[68 185]
[69 184]
[70 175]
[71 174]
[73 171]
[74 170]
[75 169]
[76 168]
[77 167]
[78 142]
[79 141]
[80 140]
[81 139]
[85 132]
[86 131]
[87 130]
[90 129]
[91 128]
[93 126]
[95 124]
[96 123]
[97 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
