%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[114.56656647 592.61889648]
[101.66526794 584.62384033]
[92.52642822 572.50585938]
[88.38600159 557.90374756]
[89.80395508 542.79235840]
[96.58851624 529.21539307]
[107.82212830 519.00903320]
[121.98554230 513.55352783]
[121.98554230 498.55355835]
[121.98554230 483.55355835]
[121.98554230 468.55355835]
[121.98554230 453.55355835]
[119.30185699 449.60299683]
[119.07139587 443.92462158]
[122.21551514 438.10861206]
[122.66212463 423.11526489]
[123.10873413 408.12191772]
[123.33206177 393.12356567]
[115.59475708 380.39630127]
[123.33206177 366.59613037]
[123.33206177 351.59613037]
[123.33206177 336.59613037]
[123.33206177 321.59613037]
[123.33206177 306.59613037]
[121.99382782 291.65594482]
[119.32802582 276.89471436]
[116.66223145 262.13351440]
[107.77771759 257.08590698]
[103.03863525 247.78591919]
[104.22490692 237.19474792]
[111.18480682 228.83601379]
[108.95969391 214.00196838]
[106.73457336 199.16792297]
[104.50946045 184.33389282]
[102.28433990 169.49984741]
[98.18339539 163.35134888]
[100.13823700 154.42854309]
[98.13421631 139.56301880]
[86.67508698 126.27184296]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.58361816 64.88076782]
[84.13788605 50.08149338]
[81.69216156 35.28222275]
[79.24642944 20.48295403]
[76.80070496 5.68368244]
[73.48726654 1.65029788]
[72.18273163 -2.80520463]
[72.71150208 -6.84691906]
[74.59163666 -9.82977676]
[72.80916595 -24.72349358]
[63.48680115 -37.50645447]
[69.65688324 -51.06297684]
[67.87442017 -65.95669556]
[66.09194946 -80.85041046]
[63.64622498 -95.64968109]
[60.54211426 -110.32498932]
[57.00244141 -124.90135956]
[53.03034592 -139.36589050]
[49.05825043 -153.83041382]
[44.97858429 -168.26496887]
[40.79157257 -182.66874695]
[36.29118347 -187.51210022]
[35.09232330 -193.06724548]
[36.70119858 -197.56398010]
[32.94489670 -212.08604431]
[29.18859673 -226.60809326]
[13.95535564 -235.20854187]
[9.73836994 -251.83778381]
[18.67370605 -266.08554077]
[14.70161057 -280.55007935]
[10.72951412 -295.01458740]
[6.75741816 -309.47912598]
[2.78532195 -323.94363403]
[-1.18677425 -338.40817261]
[-5.15887070 -352.87268066]
[-9.58664894 -357.78250122]
[-10.70267010 -363.35488892]
[-9.02702236 -367.82717896]
[-12.56669521 -382.40353394]
[-16.10636711 -396.97991943]
[-31.14244270 -396.34533691]
[-46.01335526 -398.65664673]
[-60.14751434 -403.82498169]
[-73.00163269 -411.65173340]
[-84.08163452 -421.83602905]
[-92.96163940 -433.98641968]
[-99.30031586 -447.63586426]
[-102.85402679 -462.25970459]
[-103.48617554 -477.29589844]
[-101.17246246 -492.16644287]
[-96.00182343 -506.29974365]
[-88.17300415 -519.15258789]
[-77.98692322 -530.23095703]
[-65.83510590 -539.10900879]
[-52.18463135 -545.44543457]
[-37.56019592 -548.99682617]
[-22.52391434 -549.62652588]
[-7.65374947 -547.31042480]
[6.47873306 -542.13745117]
[19.33031845 -534.30657959]
[30.40702438 -524.11871338]
[39.28309250 -511.96545410]
[45.61735153 -498.31393433]
[49.16632843 -483.68893433]
[49.79360962 -468.65255737]
[47.47508621 -453.78277588]
[42.29987335 -439.65112305]
[34.46689224 -426.80081177]
[24.27722359 -415.72573853]
[12.12253094 -406.85165405]
[-1.52999222 -400.51959229]
[2.00968027 -385.94320679]
[5.54935265 -371.36685181]
[9.30565357 -356.84478760]
[13.27775002 -342.38024902]
[17.24984550 -327.91574097]
[21.22194290 -313.45120239]
[25.19403839 -298.98669434]
[29.16613388 -284.52215576]
[33.13822937 -270.05764771]
[45.11848450 -265.31390381]
[52.28605270 -254.37278748]
[51.83674622 -241.10597229]
[43.71065521 -230.36439514]
[47.46695709 -215.84233093]
[51.22325897 -201.32028198]
[55.19535446 -186.85575867]
[59.38236618 -172.45198059]
[64.26799011 -166.90647888]
[63.52277374 -157.80250549]
[67.49487305 -143.33798218]
[71.46696472 -128.87345886]
[73.83376312 -127.37132263]
[75.74814606 -124.84115601]
[76.81558228 -121.45058441]
[76.70944214 -117.50682068]
[75.21741486 -113.42909241]
[78.32152557 -98.75379181]
[87.39002228 -110.70211029]
[102.23181152 -112.87498474]
[114.34484100 -104.02768707]
[116.79020691 -89.22836304]
[108.16710663 -76.95472717]
[93.41523743 -74.23767853]
[80.98567200 -82.63288116]
[82.76813507 -67.73915863]
[84.55059814 -52.84544373]
[93.74547577 -41.12778091]
[87.70288849 -26.50596046]
[89.48535156 -11.61224270]
[91.59997559 3.23795485]
[94.04570007 18.03722572]
[96.49143219 32.83649826]
[98.93715668 47.63576889]
[101.38288879 62.43503952]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[118.53411865 115.35136414]
[120.08203888 127.75248718]
[112.99974823 137.55900574]
[115.00376129 152.42453003]
[117.11838531 167.27471924]
[119.34350586 182.10876465]
[121.56861877 196.94281006]
[123.79373932 211.77685547]
[126.01885223 226.61090088]
[139.27519226 241.79747009]
[131.42344666 259.46771240]
[134.08924866 274.22891235]
[136.75503540 288.99014282]
[142.51431274 275.13983154]
[153.65489197 265.09555054]
[168.02568054 260.79666138]
[182.85191345 263.07324219]
[195.27087402 271.48568726]
[202.88467407 284.40969849]
[204.22319031 299.34985352]
[199.02796936 313.42144775]
[188.30215454 323.90747070]
[174.11669922 328.78323364]
[159.21061707 327.10729980]
[146.46203613 319.20330811]
[138.33206177 306.59613037]
[138.33206177 321.59613037]
[138.33206177 336.59613037]
[138.33206177 351.59613037]
[138.33206177 366.59613037]
[146.06935120 380.39630127]
[138.33206177 393.12356567]
[141.30162048 399.03060913]
[140.90219116 404.69961548]
[138.10208130 408.56851196]
[137.65547180 423.56185913]
[137.20886230 438.55520630]
[136.98553467 453.55355835]
[136.98553467 468.55355835]
[136.98553467 483.55355835]
[136.98553467 498.55355835]
[136.98553467 513.55352783]
[151.14895630 519.00903320]
[162.38256836 529.21539307]
[169.16712952 542.79235840]
[170.58508301 557.90374756]
[166.44465637 572.50585938]
[157.30581665 584.62384033]
[144.40451050 592.61889648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[15 198]
[16 197]
[17 196]
[18 193]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[25 174]
[26 173]
[27 172]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[37 165]
[38 164]
[40 161]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[51 152]
[52 151]
[54 149]
[55 148]
[56 147]
[57 140]
[58 139]
[59 134]
[60 133]
[61 132]
[62 130]
[63 129]
[66 128]
[67 127]
[68 126]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
