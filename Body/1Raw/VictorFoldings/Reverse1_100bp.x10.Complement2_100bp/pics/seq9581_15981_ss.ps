%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[57.95297241 589.29724121]
[50.26483917 602.21044922]
[40.73788452 613.83343506]
[29.58495140 623.90667725]
[17.05519485 632.20501709]
[3.42853498 638.54315186]
[-10.99060345 642.77941895]
[-25.88009071 644.81927490]
[-40.90729141 644.61700439]
[-55.73649216 642.17724609]
[-70.03639984 637.55444336]
[-83.48755646 630.85186768]
[-95.78945160 622.21936035]
[-106.66725922 611.84960938]
[-115.87796021 599.97442627]
[-123.21579742 586.85900879]
[-128.51683044 572.79638672]
[-131.66262817 558.10076904]
[-132.58291626 543.10040283]
[-131.25714111 528.13043213]
[-127.71491241 513.52532959]
[-122.03537750 499.61126709]
[-114.34540558 486.69918823]
[-104.81679535 475.07751465]
[-93.66242981 465.00588989]
[-81.13148499 456.70928955]
[-67.50392914 450.37310791]
[-53.08418274 446.13888550]
[-38.19440460 444.10119629]
[-23.16723442 444.30557251]
[-8.33838177 446.74746704]
[-3.72437286 432.47473145]
[0.88963646 418.20199585]
[5.50364590 403.92926025]
[10.11765480 389.65652466]
[14.73166466 375.38378906]
[13.79805756 368.05233765]
[19.52207565 360.93380737]
[24.34807396 346.73135376]
[29.17407227 332.52890015]
[33.25373840 318.09436035]
[36.57599640 303.46688843]
[39.89825821 288.83944702]
[43.22051620 274.21197510]
[46.54277802 259.58450317]
[45.16468811 257.14340210]
[44.67051697 254.00933838]
[45.32905197 250.51623535]
[47.28333664 247.08909607]
[50.52275467 244.19770813]
[54.70976639 229.79391479]
[58.89677811 215.39013672]
[57.74530029 208.08973694]
[63.25483704 200.80393982]
[67.65583801 186.46409607]
[56.39823151 172.85754395]
[55.55457306 155.06037903]
[65.65122986 140.18969727]
[82.80165863 134.30578613]
[86.77375031 119.84125519]
[90.74584961 105.37673187]
[92.86047363 90.52653503]
[93.08380127 75.52819824]
[93.30712891 60.52985764]
[90.30583191 51.90257263]
[93.64709473 45.31032181]
[94.09369659 30.31697273]
[94.54030609 15.32362175]
[94.98690796 0.33027199]
[84.12959290 10.68008423]
[69.16815948 11.75502586]
[56.94277573 3.06364870]
[53.04272461 -11.42046738]
[59.25105667 -25.07537842]
[72.72940826 -31.65824509]
[87.31565094 -28.15946579]
[96.34170532 -16.17686844]
[98.34571838 -31.04239655]
[100.34973145 -45.90792465]
[102.35374451 -60.77345276]
[104.35775757 -75.63898468]
[90.58737183 -81.82415009]
[79.12936401 -91.62906647]
[70.90676117 -104.25260925]
[66.57878876 -118.66707611]
[66.48799896 -133.70182800]
[70.63321686 -148.13835144]
[78.67027283 -160.80905151]
[89.94062042 -170.69161987]
[103.52523041 -176.99157715]
[118.31958771 -179.20613098]
[120.32360840 -194.07165527]
[122.32762146 -208.93719482]
[124.11008453 -223.83090210]
[125.67060852 -238.74951172]
[117.78425598 -255.38943481]
[128.63848877 -269.17901611]
[129.97671509 -284.11920166]
[131.31495667 -299.05938721]
[117.39469147 -304.98236084]
[105.98735809 -314.91854858]
[98.21054077 -327.89453125]
[94.82612610 -342.63906860]
[96.16567230 -357.70761108]
[102.09796906 -371.62390137]
[112.04180908 -383.02456665]
[125.02300262 -390.79269409]
[139.76979065 -394.16720581]
[154.83741760 -392.81756592]
[168.74974060 -386.87594604]
[180.14373779 -376.92446899]
[187.90315247 -363.93807983]
[191.26782227 -349.18902588]
[189.90806580 -334.12231445]
[183.95713806 -320.21398926]
[173.99803162 -308.82666016]
[161.00642395 -301.07592773]
[146.25514221 -297.72116089]
[144.91690063 -282.78097534]
[143.57867432 -267.84078979]
[151.09178162 -258.36029053]
[150.09913635 -245.90242004]
[140.58921814 -237.18898010]
[139.02868652 -222.27038574]
[141.28681946 -218.06207275]
[140.92527771 -212.39053345]
[137.19314575 -206.93318176]
[135.18913269 -192.06764221]
[133.18511963 -177.20211792]
[146.86491394 -171.14898682]
[158.29631042 -161.47662354]
[166.54734802 -148.96238708]
[170.94223022 -134.61575317]
[171.11657715 -119.59690857]
[167.04772949 -105.12291718]
[159.05722046 -92.36909485]
[147.78535461 -82.37358856]
[134.13996887 -75.95285034]
[119.22328949 -73.63497162]
[117.21927643 -58.76943970]
[115.21526337 -43.90391159]
[113.21125031 -29.03838348]
[111.20723724 -14.17285538]
[109.98026276 0.77687794]
[109.53365326 15.77022743]
[109.08704376 30.76357841]
[108.64044189 45.75692749]
[108.30546570 60.75318527]
[108.08213806 75.75152588]
[107.85881042 90.74986267]
[115.17439270 77.65473938]
[126.30152130 67.59555817]
[140.06591797 61.63389206]
[155.01498413 60.39888763]
[169.57112122 64.02087402]
[182.19818115 72.11762238]
[191.56361389 83.83464813]
[196.67903137 97.93544769]
[197.00462341 112.93191528]
[192.50601196 127.24143982]
[183.65795898 139.35389709]
[171.39419556 147.99104309]
[157.00897217 152.24137878]
[142.02038574 151.65635681]
[128.01022339 146.29769897]
[116.45699310 136.73092651]
[108.57995605 123.96565247]
[105.21037292 109.34883118]
[101.23827362 123.81335449]
[97.26618195 138.27787781]
[106.29167938 146.92704773]
[110.75748444 158.52554321]
[109.87339783 170.85023499]
[103.86838531 181.56661987]
[93.93558502 188.67100525]
[81.99568176 190.86508179]
[77.59468079 205.20494080]
[73.30056000 219.57714844]
[69.11354828 233.98092651]
[64.92653656 248.38471985]
[61.17023849 262.90676880]
[57.84797668 277.53424072]
[54.52571869 292.16168213]
[51.20345688 306.78915405]
[47.88119888 321.41662598]
[60.52657318 313.34848022]
[75.41538239 315.17147827]
[85.74066925 326.05212402]
[86.78185272 341.01596069]
[78.06291199 353.22167969]
[63.57003021 357.08905029]
[49.92916107 350.84991455]
[43.37652588 337.35491943]
[38.55052948 351.55737305]
[33.72453308 365.75982666]
[29.00439835 379.99780273]
[24.39038849 394.27053833]
[19.77637863 408.54327393]
[15.16236973 422.81600952]
[10.54836082 437.08874512]
[5.93435144 451.36148071]
[19.38646126 458.06210327]
[31.68958473 466.69290161]
[42.56887054 477.06106567]
[51.78126526 488.93496704]
[59.12096405 502.04931641]
[64.42399597 516.11114502]
[67.57189178 530.80633545]
[68.49431610 545.80657959]
[67.17067719 560.77673340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 201]
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[38 195]
[39 194]
[40 193]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[50 180]
[51 179]
[52 178]
[54 177]
[55 176]
[59 170]
[60 169]
[61 168]
[62 150]
[63 149]
[64 148]
[66 147]
[67 146]
[68 145]
[69 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[91 129]
[92 128]
[93 127]
[94 124]
[95 123]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
