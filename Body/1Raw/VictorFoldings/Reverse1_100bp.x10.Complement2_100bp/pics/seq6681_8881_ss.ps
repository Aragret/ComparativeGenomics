%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[162.39595032 326.54550171]
[165.13995361 311.78619385]
[169.31742859 297.36691284]
[174.88815308 283.42654419]
[181.79844666 270.09933472]
[189.98178101 257.51364136]
[199.35934448 245.79064941]
[209.84080505 235.04330444]
[200.18000793 223.56860352]
[190.51919556 212.09390259]
[180.85838318 200.61920166]
[171.19757080 189.14450073]
[161.53675842 177.66979980]
[151.87594604 166.19509888]
[141.87777710 155.01312256]
[127.50397491 151.10888672]
[123.61510468 135.77307129]
[113.28843689 124.89373016]
[102.96176910 114.01439667]
[89.61100006 109.86124420]
[86.15889740 96.31227112]
[75.83222961 85.43293762]
[61.64243317 90.81116486]
[46.51535034 90.34820557]
[32.75515366 84.14573669]
[22.44588280 73.17729950]
[17.13582230 59.13564682]
[17.60501289 44.17151260]
[23.75083160 30.56422806]
[13.42416286 19.68489456]
[3.09749436 8.80556011]
[-7.22917414 -2.07377434]
[-17.55584335 -12.95310879]
[-23.77630997 -15.19304752]
[-27.38940048 -19.57968712]
[-28.02202988 -24.31348228]
[-38.02020264 -35.49545670]
[-49.88442612 -26.30692863]
[-62.36725235 -17.97818184]
[-75.40648651 -10.55071259]
[-88.93716431 -4.06152248]
[-102.89188385 1.45705783]
[-117.20111847 5.97753525]
[-131.79357910 9.47738934]
[-146.59657288 11.93918324]
[-161.53634644 13.35065174]
[-176.53845215 13.70476437]
[-191.52818298 12.99975586]
[-206.43084717 11.23913956]
[-221.17218018 8.43168545]
[-235.67877197 4.59138107]
[-249.87832642 -0.26264143]
[-263.70010376 -6.10619879]
[-277.07525635 -12.91017914]
[-289.93716431 -20.64068413]
[-302.22171021 -29.25920296]
[-313.86770630 -38.72279358]
[-324.81713867 -48.98431396]
[-335.01547241 -59.99263382]
[-344.41186523 -71.69291687]
[-352.95950317 -84.02687073]
[-360.61584473 -96.93304443]
[-367.34274292 -110.34714508]
[-373.10662842 -124.20233917]
[-377.87884521 -138.42959595]
[-381.63558960 -152.95805359]
[-384.35812378 -167.71530151]
[-386.03292847 -182.62785339]
[-386.65164185 -197.62138367]
[-386.21118164 -212.62121582]
[-384.71374512 -227.55261230]
[-382.16677856 -242.34118652]
[-378.58297729 -256.91326904]
[-373.98022461 -271.19622803]
[-368.38140869 -285.11895752]
[-361.81442261 -298.61206055]
[-354.31201172 -311.60833740]
[-345.91156006 -324.04299927]
[-336.65490723 -335.85415649]
[-326.58813477 -346.98291016]
[-315.76144409 -357.37384033]
[-304.22872925 -366.97518921]
[-292.04748535 -375.73910522]
[-279.27838135 -383.62191772]
[-265.98504639 -390.58438110]
[-252.23368835 -396.59182739]
[-238.09283447 -401.61425781]
[-223.63291931 -405.62670898]
[-208.92597961 -408.60919189]
[-194.04530334 -410.54678345]
[-179.06501770 -411.42990112]
[-164.05975342 -411.25415039]
[-149.10426331 -410.02032471]
[-134.27305603 -407.73464966]
[-119.64002991 -404.40847778]
[-105.27807617 -400.05841064]
[-91.25875092 -394.70605469]
[-77.65190125 -388.37814331]
[-64.52530670 -381.10620117]
[-51.94437408 -372.92639160]
[-39.97177505 -363.87951660]
[-28.66716003 -354.01065063]
[-18.08684921 -343.36895752]
[-8.28355122 -332.00741577]
[0.69389319 -319.98269653]
[8.80075741 -307.35464478]
[15.99665451 -294.18618774]
[22.24573326 -280.54293823]
[27.51686096 -266.49288940]
[31.78377724 -252.10600281]
[35.02522278 -237.45397949]
[37.22505188 -222.60980225]
[38.37230301 -207.64741516]
[38.46126175 -192.64138794]
[37.49148560 -177.66645813]
[35.46780014 -162.79724121]
[32.40029526 -148.10781860]
[28.30424690 -133.67135620]
[23.20006371 -119.55979156]
[17.11317825 -105.84342194]
[10.07390976 -92.59059143]
[2.11733198 -79.86730957]
[-6.71691751 -67.73698425]
[-16.38482475 -56.26002502]
[-26.83822632 -45.49362946]
[-16.84005547 -34.31165314]
[-6.67650843 -23.27977753]
[3.65016031 -12.40044308]
[13.97682858 -1.52110863]
[24.30349731 9.35822582]
[34.63016510 20.23756027]
[48.53910065 14.80886269]
[63.50736237 15.11976337]
[77.25336456 21.15402031]
[87.66992188 32.02061844]
[93.14722443 46.08521271]
[92.82161713 61.21587372]
[86.71156311 75.10626984]
[97.03823090 85.98560333]
[110.38899994 90.13875580]
[113.84110260 103.68772888]
[124.16777039 114.56706238]
[134.49443054 125.44639587]
[149.60687256 130.12881470]
[152.75711060 144.68646240]
[156.96182251 145.77014160]
[160.27023315 147.91931152]
[162.45745850 150.72135925]
[163.45570374 153.73301697]
[163.35064697 156.53428650]
[173.01145935 168.00898743]
[182.67227173 179.48368835]
[192.33308411 190.95838928]
[201.99389648 202.43309021]
[211.65470886 213.90779114]
[221.31550598 225.38249207]
[233.69163513 216.88552856]
[246.84101868 209.64256287]
[260.63702393 203.72334290]
[274.94677734 199.18490601]
[289.63247681 196.07093811]
[304.55270386 194.41143799]
[319.56372070 194.22238159]
[334.52102661 195.50558472]
[349.28048706 198.24870300]
[363.70001221 202.42530823]
[377.64071655 207.99519348]
[390.96835327 214.90469360]
[403.55453491 223.08728027]
[415.27807617 232.46412659]
[426.02606201 242.94496155]
[435.69497681 254.42881775]
[444.19168091 266.80508423]
[451.43438721 279.95462036]
[457.35333252 293.75076294]
[461.89147949 308.06060791]
[465.00515747 322.74636841]
[466.66436768 337.66662598]
[466.85311890 352.67764282]
[465.56961060 367.63491821]
[462.82620239 382.39431763]
[458.64929199 396.81378174]
[453.07913208 410.75436401]
[446.16937256 424.08184814]
[437.98654175 436.66787720]
[428.60943604 448.39123535]
[418.12841797 459.13900757]
[406.64434814 468.80767822]
[394.26791382 477.30416870]
[381.11822510 484.54660034]
[367.32199097 490.46524048]
[353.01205444 495.00311279]
[338.32620239 498.11651611]
[323.40591431 499.77542114]
[308.39489746 499.96386719]
[293.43765259 498.68005371]
[278.67831421 495.93634033]
[264.25894165 491.75915527]
[250.31845093 486.18872070]
[236.99110413 479.27868652]
[224.40524292 471.09561157]
[212.68208313 461.71829224]
[201.93452454 451.23703003]
[192.26606750 439.75277710]
[183.76983643 427.37615967]
[176.52766418 414.22634888]
[170.60928345 400.42999268]
[166.07170105 386.11996460]
[162.95861816 371.43405151]
[161.30000305 356.51373291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 156]
[9 155]
[10 154]
[11 153]
[12 152]
[13 151]
[14 150]
[15 145]
[17 143]
[18 142]
[19 141]
[21 139]
[22 138]
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
[36 126]
[37 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
