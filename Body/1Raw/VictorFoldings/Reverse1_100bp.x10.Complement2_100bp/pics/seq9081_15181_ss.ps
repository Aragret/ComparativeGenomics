%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[275.94024658 340.52172852]
[284.35427856 328.08581543]
[294.06353760 316.63256836]
[283.73687744 305.75323486]
[273.41021729 294.87390137]
[263.08352661 283.99456787]
[252.75686646 273.11523438]
[242.43020630 262.23590088]
[227.58033752 262.10577393]
[216.95263672 251.21969604]
[217.18980408 235.64466858]
[206.86312866 224.76533508]
[196.53646851 213.88600159]
[181.81851196 216.01203918]
[168.51347351 208.98068237]
[161.82173157 195.30319214]
[164.49777222 180.13265991]
[154.17111206 169.25332642]
[143.84443665 158.37399292]
[133.51777649 147.49465942]
[123.19110107 136.61532593]
[112.86443329 125.73599243]
[109.36820221 125.27914429]
[105.91954803 123.10617828]
[103.32263947 119.25788116]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[76.50679016 84.36831665]
[66.67620850 73.03872681]
[56.84562683 61.70913315]
[51.91111374 60.00688553]
[48.46734619 56.89340210]
[46.80224991 53.17285156]
[46.84284973 49.64713287]
[37.52796936 37.88988113]
[28.21308517 26.13262939]
[18.89820290 14.37537861]
[20.94972610 29.23442459]
[17.23317909 43.76670837]
[8.29988861 55.81645203]
[-4.52494383 63.59614944]
[-19.33883095 65.95172882]
[-33.94422150 62.53374481]
[-46.17449188 53.84925079]
[-54.21535492 41.18652725]
[-56.87399292 26.42401886]
[-53.75601959 11.75165653]
[-45.32395935 -0.65400356]
[-32.82866669 -8.95265484]
[-18.12373924 -11.91324234]
[-3.39056444 -9.09658051]
[9.18390465 -0.92183441]
[2.50370979 -14.35221004]
[-4.17648506 -27.78258705]
[-10.85667992 -41.21296310]
[-17.53687477 -54.64333725]
[-24.21706963 -68.07371521]
[-37.29058075 -76.98403931]
[-36.03096771 -91.82528687]
[-42.71116257 -105.25566101]
[-49.39135742 -118.68603516]
[-51.92087936 -103.90085602]
[-61.42785263 -92.29838562]
[-75.42717743 -86.91146851]
[-90.25946808 -89.14824677]
[-102.04759979 -98.42402649]
[-107.71017456 -112.31414032]
[-105.76701355 -127.18774414]
[-96.72605896 -139.15692139]
[-82.95059204 -145.09294128]
[-68.04148102 -143.44416809]
[-55.89649963 -134.64224243]
[-60.51050949 -148.91497803]
[-65.12451935 -163.18771362]
[-69.73853302 -177.46044922]
[-84.59897614 -175.18817139]
[-99.63148499 -175.32925415]
[-114.44667053 -177.88002014]
[-128.66078186 -182.77441406]
[-141.90565491 -189.88565063]
[-153.83819580 -199.02952576]
[-164.14933777 -209.96920776]
[-172.57199097 -222.42131042]
[-178.88798523 -236.06332397]
[-182.93373108 -250.54185486]
[-184.60443115 -265.48190308]
[-183.85679626 -280.49645996]
[-180.71020508 -295.19665527]
[-175.24617004 -309.20166016]
[-167.60620117 -322.14874268]
[-157.98820496 -333.70254517]
[-146.64131165 -343.56378174]
[-133.85942078 -351.47705078]
[-119.97364044 -357.23736572]
[-105.34362030 -360.69549561]
[-90.34832001 -361.76187134]
[-75.37615967 -360.40890503]
[-60.81494522 -356.67163086]
[-47.04185486 -350.64682007]
[-34.41364288 -342.49057007]
[-23.25740814 -332.41415405]
[-13.86212635 -320.67852783]
[-6.47115612 -307.58770752]
[-1.27594280 -293.48074341]
[1.58894598 -278.72308350]
[2.04930258 -263.69696045]
[0.09320241 -248.79161072]
[-4.22868633 -234.39308167]
[-10.80441666 -220.87435913]
[-19.46366119 -208.58560181]
[-29.98212624 -197.84510803]
[-42.08735657 -188.93109131]
[-55.46579742 -182.07446289]
[-50.85178757 -167.80172729]
[-46.23777771 -153.52899170]
[-41.62376785 -139.25625610]
[-35.96098328 -125.36623383]
[-29.28078651 -111.93585205]
[-22.60059166 -98.50547791]
[-10.00489140 -90.55578613]
[-10.78669262 -74.75390625]
[-4.10649824 -61.32353210]
[2.57369637 -47.89315796]
[9.25389099 -34.46278000]
[15.93408585 -21.03240585]
[22.61428070 -7.60202885]
[30.65545273 5.06049585]
[39.97033691 16.81774712]
[49.28521729 28.57499886]
[58.60010147 40.33224869]
[68.17522430 51.87855148]
[78.00580597 63.20814514]
[87.83638000 74.53773499]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[123.74376678 115.40932465]
[134.07043457 126.28865814]
[144.39710999 137.16798401]
[154.72377014 148.04733276]
[165.05044556 158.92666626]
[175.37710571 169.80599976]
[190.66644287 167.92378235]
[203.97680664 175.31887817]
[210.30557251 188.97210693]
[207.41580200 203.55934143]
[217.74246216 214.43867493]
[228.06913757 225.31800842]
[243.63537598 225.89244080]
[253.95310974 237.07273865]
[253.30953979 251.90922546]
[263.63619995 262.78857422]
[273.96286011 273.66790771]
[284.28955078 284.54724121]
[294.61621094 295.42657471]
[304.94287109 306.30590820]
[316.88632202 297.20639038]
[329.74362183 289.45153809]
[343.36398315 283.13229370]
[357.58773804 278.32275391]
[372.24813843 275.07928467]
[387.17327881 273.43991089]
[402.18817139 273.42388916]
[417.11676025 275.03137207]
[431.78405762 278.24353027]
[446.01806641 283.02270508]
[459.65188599 289.31283569]
[472.52569580 297.04022217]
[484.48855591 306.11419678]
[495.40017700 316.42843628]
[505.13265991 327.86199951]
[513.57189941 340.28079224]
[520.61889648 353.53924561]
[526.19110107 367.48193359]
[530.22314453 381.94531250]
[532.66772461 396.75988770]
[533.49627686 411.75192261]
[532.69897461 426.74563599]
[530.28521729 441.56524658]
[526.28326416 456.03701782]
[520.74011230 469.99124146]
[513.72070312 483.26434326]
[505.30734253 495.70068359]
[495.59869385 507.15444946]
[484.70855713 517.49139404]
[472.76461792 526.59027100]
[459.90692139 534.34442139]
[446.28619385 540.66290283]
[432.06216431 545.47167969]
[417.40161133 548.71435547]
[402.47637939 550.35296631]
[387.46148682 550.36816406]
[372.53295898 548.75988770]
[357.86584473 545.54693604]
[343.63211060 540.76702881]
[329.99862671 534.47613525]
[317.12521362 526.74804688]
[305.16287231 517.67340088]
[294.25177002 507.35861206]
[284.51989746 495.92453003]
[276.08135986 483.50527954]
[269.03506470 470.24642944]
[263.46362305 456.30346680]
[259.43234253 441.83984375]
[256.98855591 427.02514648]
[256.16085815 412.03308105]
[256.95895386 397.03939819]
[259.37350464 382.21994019]
[263.37622070 367.74838257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[11 149]
[12 148]
[13 147]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[26 137]
[28 135]
[29 134]
[30 133]
[31 132]
[35 131]
[36 130]
[37 129]
[38 128]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[60 120]
[61 119]
[62 118]
[73 117]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
