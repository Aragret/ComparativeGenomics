%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[85.27556610 655.21215820]
[71.29785156 649.74896240]
[57.77935791 643.23181152]
[44.79941559 635.69897461]
[32.43419647 627.19464111]
[20.75626945 617.76867676]
[9.83415985 607.47644043]
[-0.26803249 596.37829590]
[-9.49102402 584.53942871]
[-17.78069115 572.02923584]
[-25.08838272 558.92120361]
[-31.37121773 545.29223633]
[-36.59232330 531.22229004]
[-40.72106171 516.79400635]
[-43.73320007 502.09197998]
[-45.61106491 487.20248413]
[-46.34363556 472.21295166]
[-45.92660904 457.21133423]
[-44.36243820 442.28564453]
[-41.66030121 427.52349854]
[-37.83605194 413.01150513]
[-32.91213608 398.83483887]
[-26.91744995 385.07669067]
[-19.88716888 371.81781006]
[-11.86255455 359.13601685]
[-2.89069748 347.10568237]
[6.97575188 335.79745483]
[17.67889214 325.27770996]
[29.15591240 315.60812378]
[41.33945847 306.84545898]
[54.15803528 299.04119873]
[67.53641510 292.24105835]
[81.39608765 286.48498535]
[95.65571594 281.80679321]
[110.23162079 278.23385620]
[107.78588867 263.43460083]
[105.34016418 248.63531494]
[102.89443207 233.83604431]
[100.44870758 219.03677368]
[91.78493500 231.28173828]
[77.30966187 235.21446228]
[63.64077377 229.03695679]
[57.02751160 215.57350159]
[60.49336624 200.97938538]
[72.45379639 191.92687988]
[87.44065857 192.55462646]
[98.60303497 202.57728577]
[97.71021271 187.60388184]
[96.81739807 172.63047791]
[95.92458344 157.65707397]
[95.03176880 142.68367004]
[80.74134064 138.41461182]
[68.77084351 129.51809692]
[60.56223679 117.06579590]
[57.10435104 102.55773163]
[58.81372833 87.74155426]
[65.48445129 74.40204620]
[76.31295013 64.14609528]
[89.99482727 58.20915222]
[89.10201263 43.23574448]
[88.20919037 28.26233864]
[87.31637573 13.28893375]
[86.42356110 -1.68447196]
[85.53074646 -16.65787697]
[84.63793182 -31.63128281]
[83.74511719 -46.60469055]
[82.40688324 -61.54487610]
[80.62441254 -76.43859100]
[64.83003998 -77.58210754]
[49.56138229 -81.76487732]
[35.39739990 -88.82649994]
[22.87480164 -98.49742889]
[12.46772385 -110.40930176]
[4.56977701 -124.10893250]
[-0.52084172 -139.07559204]
[-2.61260772 -154.74075317]
[-1.62787354 -170.50973511]
[2.39425015 -185.78425598]
[9.29944515 -199.98510742]
[18.82410431 -212.57418823]
[30.60539627 -223.07479858]
[44.19508743 -231.08979797]
[59.07659149 -236.31651306]
[56.85147476 -251.15055847]
[54.62635803 -265.98458862]
[52.40124130 -280.81863403]
[50.17612457 -295.65267944]
[35.15375519 -296.78237915]
[20.75955963 -301.22702026]
[7.71554708 -308.76370239]
[-3.32400274 -319.01434326]
[-11.80535030 -331.46484375]
[-17.30307388 -345.49063110]
[-19.54141045 -360.38818359]
[-18.40808678 -375.41027832]
[-13.95995045 -389.80340576]
[-6.42011547 -402.84558105]
[3.83322167 -413.88265991]
[16.28575706 -422.36099243]
[30.31287956 -427.85531616]
[45.21099091 -430.09002686]
[60.23281097 -428.95306396]
[74.62484741 -424.50146484]
[87.66520691 -416.95846558]
[98.69979095 -406.70245361]
[107.17510223 -394.24786377]
[112.66603088 -380.21939087]
[114.89714813 -365.32073975]
[113.75654602 -350.29919434]
[109.30142975 -335.90823364]
[101.75527954 -322.86972046]
[91.49658966 -311.83761597]
[79.03994751 -303.36532593]
[65.01016998 -297.87780762]
[67.23528290 -283.04376221]
[69.46040344 -268.20971680]
[71.68551636 -253.37567139]
[73.91063690 -238.54162598]
[88.10843658 -238.11151123]
[102.01609039 -235.20611572]
[115.20530701 -229.91362000]
[127.26968384 -222.39575195]
[137.83726501 -212.88282776]
[146.58195496 -201.66670227]
[153.23364258 -189.09181213]
[157.58648682 -175.54458618]
[159.50535583 -161.44158936]
[158.92993164 -147.21670532]
[155.87669373 -133.30780029]
[150.43836975 -120.14319611]
[142.78118896 -108.12855530]
[133.13975525 -97.63432312]
[121.80990601 -88.98432922]
[109.13957214 -82.44579315]
[95.51813507 -78.22105408]
[97.30059814 -63.32733917]
[99.41838074 -61.49073029]
[100.93625641 -58.70457458]
[101.48892212 -55.19316864]
[100.79892731 -51.30878830]
[98.71852112 -47.49750519]
[99.61133575 -32.52410126]
[100.50415039 -17.55069351]
[101.39696503 -2.57728791]
[102.28978729 12.39611816]
[103.18260193 27.36952400]
[104.07541656 42.34292984]
[104.96823120 57.31633377]
[119.25865936 61.58538437]
[131.22915649 70.48190308]
[139.43775940 82.93420410]
[142.89564514 97.44226837]
[141.18627930 112.25844574]
[134.51554871 125.59795380]
[123.68704987 135.85389709]
[110.00517273 141.79084778]
[110.89798737 156.76425171]
[111.79080963 171.73765564]
[112.68362427 186.71105957]
[113.57643890 201.68447876]
[115.24797821 216.59104919]
[117.69370270 231.39031982]
[120.13943481 246.18959045]
[122.58515930 260.98886108]
[125.03089142 275.78811646]
[139.98132324 274.48153687]
[154.98791504 274.32321167]
[169.96258545 275.31411743]
[184.81747437 277.44842529]
[199.46537781 280.71359253]
[213.82037354 285.09048462]
[227.79818726 290.55337524]
[241.31680298 297.07025146]
[254.29689026 304.60287476]
[266.66226196 313.10699463]
[278.34036255 322.53274536]
[289.26266479 332.82476807]
[299.36508179 343.92269897]
[308.58828735 355.76141357]
[316.87820435 368.27142334]
[324.18612671 381.37930298]
[330.46923828 395.00814819]
[335.69061279 409.07797241]
[339.81961060 423.50622559]
[342.83203125 438.20819092]
[344.71017456 453.09762573]
[345.44302368 468.08715820]
[345.02630615 483.08877563]
[343.46240234 498.01449585]
[340.76055908 512.77673340]
[336.93658447 527.28875732]
[332.01293945 541.46551514]
[326.01849365 555.22381592]
[318.98846436 568.48278809]
[310.96411133 581.16479492]
[301.99246216 593.19525146]
[292.12625122 604.50366211]
[281.42330933 615.02362061]
[269.94647217 624.69342041]
[257.76309204 633.45629883]
[244.94465637 641.26086426]
[231.56640625 648.06121826]
[217.70683289 653.81756592]
[203.44729614 658.49603271]
[188.87145996 662.06921387]
[174.06486511 664.51617432]
[159.11441040 665.82250977]
[144.10781860 665.98052979]
[129.13316345 664.98931885]
[114.27832031 662.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 136]
[68 135]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
