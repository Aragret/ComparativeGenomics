%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[95.06573486 596.79217529]
[85.60515594 585.05499268]
[79.22900391 571.39453125]
[76.30798340 556.60498047]
[77.01191711 541.54620361]
[81.29988098 527.09362793]
[88.92257690 514.08752441]
[99.43682861 503.28411865]
[112.23136139 495.31143188]
[126.56230164 490.63305664]
[125.44665527 475.67459106]
[124.33100891 460.71612549]
[123.21535492 445.75769043]
[122.09970856 430.79922485]
[120.98406219 415.84078979]
[119.86841583 400.88232422]
[110.91006470 392.75369263]
[109.85817719 380.30068970]
[117.82012939 370.15328979]
[116.92731476 355.17987061]
[105.65126038 345.51620483]
[104.53251648 330.34378052]
[114.74510193 318.58193970]
[113.85228729 303.60852051]
[112.84802246 288.64218140]
[111.73237610 273.68371582]
[95.06439972 266.57394409]
[84.26235199 251.91860962]
[82.38637543 233.72381592]
[90.04179382 217.01795959]
[105.18775940 206.46208191]
[103.40529633 191.56835938]
[101.62282562 176.67463684]
[99.84036255 161.78092957]
[98.05789185 146.88720703]
[88.86302185 135.16954041]
[94.90560913 120.54772186]
[84.08045959 113.95456696]
[78.96202850 102.35908508]
[81.38512421 89.91793060]
[90.48114777 81.09092712]
[88.92062378 66.17232513]
[87.36009979 51.25371933]
[85.79957581 36.33511353]
[84.23905182 21.41650772]
[82.12442780 6.56631041]
[79.45863342 -8.19490719]
[74.84462738 -22.46763992]
[68.36512756 -35.99598694]
[55.42572403 -45.09996414]
[56.90616226 -59.92081451]
[50.42666626 -73.44915771]
[43.94717026 -86.97750854]
[37.46767426 -100.50585175]
[25.58401299 -105.51996613]
[20.46573448 -116.92115021]
[24.35910034 -128.37402344]
[18.08173943 -141.99734497]
[11.80437851 -155.62065125]
[5.52701759 -169.24397278]
[-0.75034326 -182.86729431]
[-12.55803680 -188.05776978]
[-17.50600052 -199.53390503]
[-13.44255066 -210.92753601]
[-19.51638412 -224.64280701]
[-25.59021950 -238.35806274]
[-31.66405296 -252.07333374]
[-37.73788834 -265.78860474]
[-43.91365433 -279.45828247]
[-50.19101715 -293.08160400]
[-64.60874176 -288.84518433]
[-79.48966217 -286.75326538]
[-94.51658630 -286.85043335]
[-109.36920929 -289.13455200]
[-123.73095703 -293.55700684]
[-137.29570007 -300.02349854]
[-149.77432251 -308.39620972]
[-160.90081787 -318.49664307]
[-170.43803406 -330.10952759]
[-178.18267822 -342.98736572]
[-183.96969604 -356.85562134]
[-187.67570496 -371.41870117]
[-189.22172546 -386.36618042]
[-188.57481384 -401.37948608]
[-185.74874878 -416.13861084]
[-180.80377197 -430.32891846]
[-173.84527588 -443.64797974]
[-165.02159119 -455.81185913]
[-154.52079773 -466.56134033]
[-142.56671143 -475.66726685]
[-129.41413879 -482.93551636]
[-115.34342957 -488.21121216]
[-100.65449524 -491.38189697]
[-85.66043854 -492.37994385]
[-70.68085480 -491.18414307]
[-56.03504181 -487.81994629]
[-42.03516388 -482.35903931]
[-28.97963905 -474.91787720]
[-17.14673996 -465.65502930]
[-6.78869057 -454.76794434]
[1.87372887 -442.48867798]
[8.65587807 -429.07894897]
[13.41319561 -414.82464600]
[16.04427719 -400.02951050]
[16.49304390 -385.00900269]
[14.74992847 -370.08319092]
[10.85208511 -355.57028198]
[4.88259792 -341.77960205]
[-3.03129387 -329.00506592]
[-12.72090530 -317.51904297]
[-23.97970200 -307.56628418]
[-36.56769943 -299.35894775]
[-30.29033852 -285.73562622]
[-24.63614082 -280.97622681]
[-24.02262115 -271.86242676]
[-17.94878578 -258.14715576]
[-11.87495232 -244.43190002]
[-5.80111837 -230.71664429]
[0.27271566 -217.00137329]
[14.98639202 -207.43713379]
[12.87297249 -189.14465332]
[19.15033340 -175.52133179]
[25.42769432 -161.89801025]
[31.70505524 -148.27470398]
[37.98241425 -134.65138245]
[52.83685684 -125.30726624]
[50.99602127 -106.98534393]
[57.47551727 -93.45700073]
[63.95501328 -79.92865753]
[70.43450928 -66.40030670]
[82.91045380 -58.26396942]
[81.89347076 -42.47548294]
[88.37297058 -28.94713593]
[88.96073151 -43.93561554]
[94.09239960 -58.03050613]
[103.27885437 -69.88837433]
[115.64450836 -78.37900543]
[130.01072693 -82.69312286]
[145.00823975 -82.41953278]
[159.20755005 -77.58431244]
[171.25529480 -68.64832306]
[180.00314331 -56.46328735]
[184.61732483 -42.19060898]
[184.65803528 -27.19066429]
[180.12138367 -12.89315414]
[171.43978882 -0.66082436]
[159.44071960 8.34041595]
[145.26785278 13.25262642]
[130.27204895 13.60760593]
[115.88262177 9.37152004]
[103.47107697 0.94812661]
[94.21984863 -10.86070251]
[96.88564301 3.90051508]
[107.45248413 -6.74570227]
[122.38010406 -5.27395010]
[130.66442871 7.23084974]
[126.19855499 21.55062485]
[112.27455902 27.12936974]
[99.15765381 19.85598564]
[100.71817780 34.77458954]
[102.27870178 49.69319534]
[103.83922577 64.61180115]
[105.39974976 79.53040314]
[118.45440674 89.62712097]
[120.29349518 106.02790070]
[109.79933167 118.76525879]
[119.12169647 131.54821777]
[112.95161438 145.10473633]
[114.73407745 159.99845886]
[116.51654816 174.89218140]
[118.29901123 189.78588867]
[120.08147430 204.67961121]
[131.64514160 207.95527649]
[141.39884949 214.91821289]
[148.21372986 224.73385620]
[151.31068420 236.23916626]
[150.34951782 248.08045959]
[145.46606445 258.87261963]
[137.25360107 267.36117554]
[126.69082642 272.56808472]
[127.80648041 287.52651978]
[131.56549072 295.85165405]
[128.82568359 302.71569824]
[129.71850586 317.68911743]
[141.25639343 328.15405273]
[141.94853210 343.35192871]
[131.90072632 354.28704834]
[132.79353333 369.26046753]
[143.28746033 384.39184570]
[134.82685852 399.76666260]
[135.94252014 414.72512817]
[137.05816650 429.68359375]
[138.17381287 444.64202881]
[139.28945923 459.60049438]
[140.40510559 474.55892944]
[141.52075195 489.51739502]
[156.38714600 492.01815796]
[170.22279358 498.00466919]
[182.22331238 507.12887573]
[191.69100952 518.86029053]
[198.07543945 532.51684570]
[201.00543213 547.30468750]
[200.31062317 562.36389160]
[196.03143311 576.81909180]
[188.41662598 589.82977295]
[177.90892029 600.63952637]
[165.11921692 608.61999512]
[150.79112244 613.30706787]
[135.75761414 614.42828369]
[120.89273834 611.91851807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[19 188]
[20 187]
[23 184]
[24 183]
[25 181]
[26 180]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[37 166]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 153]
[47 152]
[48 133]
[49 132]
[51 130]
[52 129]
[53 128]
[54 127]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 113]
[70 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
