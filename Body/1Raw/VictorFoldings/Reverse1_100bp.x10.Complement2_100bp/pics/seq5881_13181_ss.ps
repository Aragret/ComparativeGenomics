%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[115.89720917 736.33935547]
[102.54040527 729.49945068]
[89.69934845 721.73437500]
[77.43802643 713.08282471]
[65.81752014 703.58795166]
[54.89571762 693.29705811]
[44.72703934 682.26129150]
[35.36214066 670.53582764]
[26.84768105 658.17889404]
[19.22607613 645.25219727]
[12.53529930 631.82006836]
[6.80868196 617.94940186]
[2.07475567 603.70935059]
[-1.64289594 589.17083740]
[-4.32575130 574.40631104]
[-5.96044493 559.48931885]
[-6.53883171 544.49420166]
[-6.05803156 529.49560547]
[-4.52043867 514.56829834]
[-1.93371344 499.78662109]
[1.68925655 485.22424316]
[6.33042192 470.95367432]
[11.96666050 457.04608154]
[18.56989288 443.57067871]
[26.10721970 430.59463501]
[34.54109192 418.18258667]
[43.82949448 406.39639282]
[53.92614746 395.29476929]
[64.78075409 384.93298340]
[76.33923340 375.36267090]
[88.54399872 366.63156128]
[101.33425140 358.78311157]
[114.64627075 351.85641479]
[128.41372681 345.88598633]
[142.56805420 340.90158081]
[138.59594727 326.43707275]
[134.62385559 311.97253418]
[130.65176392 297.50802612]
[126.67966461 283.04348755]
[122.49265289 268.63970947]
[118.09165955 254.29986572]
[113.69065857 239.96000671]
[109.28965759 225.62016296]
[104.88866425 211.28031921]
[100.48766327 196.94047546]
[97.40058136 211.61936951]
[89.53804779 224.39358521]
[77.82374573 233.76240540]
[63.63385010 238.62521362]
[48.63538361 238.41073608]
[34.59034729 233.14413452]
[23.14874458 223.44415283]
[15.65471554 210.45031738]
[12.98865604 195.68914795]
[15.46376991 180.89477539]
[22.78928566 167.80520630]
[34.10460663 157.95819092]
[48.08041763 152.51057434]
[63.07486343 152.10231018]
[77.32640076 156.78137207]
[89.16078186 165.99806213]
[97.18830872 178.67106628]
[96.29549408 163.69766235]
[95.40267944 148.72425842]
[86.92155457 136.48008728]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[89.79663849 62.17615891]
[87.13084412 47.41494370]
[84.46504974 32.65372467]
[81.79925537 17.89250946]
[79.13346100 3.13129139]
[76.46765900 -11.62992573]
[73.80186462 -26.39114380]
[63.67020035 -34.37313461]
[61.75374603 -46.72266388]
[68.54091644 -56.73569870]
[66.09519196 -71.53497314]
[63.64945984 -86.33424377]
[60.33602142 -90.36762238]
[59.03149033 -94.82312775]
[59.56025696 -98.86484528]
[61.44039154 -101.84770203]
[59.65792465 -116.74141693]
[57.87545776 -131.63513184]
[56.09299469 -146.52885437]
[54.31052780 -161.42257690]
[39.37386322 -163.55763245]
[25.49912834 -169.48672485]
[13.63232613 -178.80560303]
[4.58255434 -190.87887573]
[-1.03315866 -204.88337708]
[-2.83192396 -219.86425781]
[-0.69109875 -234.80009460]
[5.24335194 -248.67254639]
[14.56680679 -260.53573608]
[26.64357948 -269.58087158]
[40.65025330 -275.19116211]
[55.63182831 -276.98413086]
[70.56684113 -274.83755493]
[84.43698883 -268.89773560]
[96.29659271 -259.56970215]
[105.33703613 -247.48944092]
[110.94193268 -233.48060608]
[112.72913361 -218.49833679]
[110.57677460 -203.56416321]
[104.63161469 -189.69630432]
[95.29899597 -177.84030151]
[83.21524811 -168.80451965]
[69.20424652 -163.20503235]
[70.98670959 -148.31132507]
[72.76917267 -133.41760254]
[74.55164337 -118.52388000]
[76.33410645 -103.63016510]
[78.44873047 -88.77996826]
[80.89446259 -73.98069763]
[83.34018707 -59.18142700]
[95.18997192 -46.23733139]
[88.56308746 -29.05693817]
[91.22888184 -14.29572105]
[93.89467621 0.46549594]
[96.56047058 15.22671318]
[99.22626495 29.98793030]
[101.89205933 44.74914932]
[104.55785370 59.51036453]
[111.63662720 46.28572845]
[124.68931580 38.89470291]
[139.67140198 39.62747192]
[151.94053650 48.25698471]
[157.69497681 62.10929108]
[155.15165710 76.89210510]
[145.09864807 88.02480316]
[130.65098572 92.05780792]
[116.28544617 87.74144745]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[117.34212494 134.66619873]
[110.37608337 147.83143616]
[111.26889801 162.80485535]
[112.16171265 177.77825928]
[114.82751465 192.53947449]
[119.22850800 206.87931824]
[123.62950897 221.21916199]
[128.03050232 235.55902100]
[132.43150330 249.89886475]
[136.83250427 264.23870850]
[141.40449524 269.01452637]
[142.68594360 274.55120850]
[141.14419556 279.07138062]
[145.11628723 293.53591919]
[149.08837891 308.00042725]
[153.06048584 322.46496582]
[157.03257751 336.92947388]
[171.74739075 333.98614502]
[186.63316345 332.08810425]
[201.61575317 331.24484253]
[216.62049866 331.46054077]
[231.57264709 332.73410034]
[246.39772034 335.05923462]
[261.02185059 338.42431641]
[275.37219238 342.81256104]
[289.37722778 348.20217896]
[302.96719360 354.56625366]
[316.07440186 361.87310791]
[328.63354492 370.08633423]
[340.58203125 379.16500854]
[351.86035156 389.06390381]
[362.41232300 399.73373413]
[372.18536377 411.12127686]
[381.13079834 423.16986084]
[389.20404053 435.81942749]
[396.36489868 449.00695801]
[402.57766724 462.66677856]
[407.81140137 476.73080444]
[412.04003906 491.12899780]
[415.24252319 505.78958130]
[417.40286255 520.63958740]
[418.51031494 535.60491943]
[418.55935669 550.61114502]
[417.54974365 565.58343506]
[415.48651123 580.44720459]
[412.37994385 595.12841797]
[408.24551392 609.55395508]
[403.10382080 623.65191650]
[396.98046875 637.35205078]
[389.90597534 650.58612061]
[381.91558838 663.28814697]
[373.04913330 675.39495850]
[363.35070801 686.84613037]
[352.86871338 697.58471680]
[341.65533447 707.55712891]
[329.76644897 716.71374512]
[317.26126099 725.00885010]
[304.20211792 732.40124512]
[290.65402222 738.85400391]
[276.68450928 744.33502197]
[262.36315918 748.81701660]
[247.76135254 752.27764893]
[232.95179749 754.69958496]
[218.00828552 756.07086182]
[203.00526428 756.38464355]
[188.01748657 755.63934326]
[173.11962891 753.83862305]
[158.38589478 750.99157715]
[143.88967896 747.11224365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[62 145]
[63 144]
[64 143]
[66 141]
[67 140]
[69 139]
[70 138]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[80 120]
[81 119]
[82 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
