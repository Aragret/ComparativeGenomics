%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[1.69315410 615.55737305]
[-4.03128529 601.55432129]
[-5.14634228 586.46752930]
[-1.54277492 571.77502441]
[6.42637634 558.91625977]
[17.98037529 549.15100098]
[31.98727798 543.43597412]
[30.87162971 528.47747803]
[29.75597954 513.51904297]
[28.64033127 498.56057739]
[27.52468300 483.60214233]
[16.10600090 474.10742188]
[14.76148510 458.95333862]
[24.79781914 447.04074097]
[23.68217087 432.08227539]
[22.56652069 417.12384033]
[21.45087242 402.16537476]
[10.86736488 412.79501343]
[-4.13166571 412.96554565]
[-14.95409298 402.57925415]
[-15.40034008 387.58587646]
[-5.21477509 376.57434082]
[9.76784706 375.85250854]
[20.96438217 385.83306885]
[21.18770981 370.83471680]
[21.41103935 355.83636475]
[21.63436699 340.83804321]
[13.43694115 331.94259644]
[13.50025082 319.44540405]
[22.33576393 310.04879761]
[15.17121887 323.22717285]
[4.75656748 334.02230835]
[-8.15634632 341.65490723]
[-22.63532829 345.57397461]
[-37.63512802 345.49658203]
[-52.07289886 341.42831421]
[-64.90636444 333.66287231]
[-75.20906067 322.76083374]
[-82.23723602 309.50921631]
[-85.48352051 294.86471558]
[-84.71355438 279.88449097]
[-79.98292542 265.64999390]
[-71.63314056 253.18879700]
[-60.26697922 243.40052795]
[-46.70497894 236.99177551]
[-31.92618370 234.42520142]
[-16.99749374 235.88609314]
[-2.99662256 241.26899719]
[9.06569576 250.18530273]
[18.31867218 261.99133301]
[24.09432602 275.83480835]
[25.97569656 290.71752930]
[31.01261330 276.58850098]
[36.04953003 262.45947266]
[41.08644485 248.33042908]
[46.12335968 234.20140076]
[51.16027832 220.07237244]
[56.09186935 205.90623474]
[60.91786957 191.70378113]
[65.74386597 177.50132751]
[70.56986237 163.29887390]
[75.39585876 149.09642029]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.78199005 77.84410095]
[102.96900177 63.44031906]
[107.04866791 49.00576782]
[111.02075958 34.54124451]
[114.99285889 20.07671928]
[118.96495056 5.61219597]
[122.93704987 -8.85232830]
[126.90914917 -23.31685257]
[119.35163116 -36.93748856]
[123.58596039 -51.54998779]
[136.61772156 -58.67098236]
[140.58982849 -73.13550568]
[144.56192017 -87.60002899]
[140.75520325 -102.95644379]
[151.58656311 -113.18048859]
[155.55865479 -127.64501190]
[151.75193787 -143.00141907]
[162.58329773 -153.22546387]
[149.05145264 -161.09207153]
[138.02011108 -172.18058777]
[130.23468018 -185.73361206]
[126.21911621 -200.82746887]
[126.24066925 -216.43519592]
[130.29211426 -231.49639893]
[138.09265137 -244.98930359]
[149.10729980 -256.00006104]
[162.58366394 -263.78469849]
[177.60327148 -267.81927490]
[193.14418030 -267.83523560]
[196.90048218 -282.35729980]
[200.65678406 -296.87936401]
[204.41308594 -311.40142822]
[208.16937256 -325.92349243]
[194.65116882 -332.54486084]
[182.74275208 -341.75219727]
[172.93179321 -353.16839600]
[165.62002563 -366.32601929]
[161.10688782 -380.68624878]
[159.57716370 -395.66107178]
[161.09349060 -410.63723755]
[165.59379578 -425.00149536]
[172.89379883 -438.16564941]
[182.69454956 -449.59063721]
[194.59472656 -458.80859375]
[208.10700989 -465.44204712]
[222.67810059 -469.21939087]
[237.71130371 -469.98593140]
[252.59103394 -467.71026611]
[266.70794678 -462.48562622]
[279.48400879 -454.52587891]
[290.39602661 -444.15704346]
[298.99716187 -431.80368042]
[304.93518066 -417.97164917]
[307.96694946 -403.22738647]
[307.96832275 -388.17465210]
[304.93920898 -373.42984009]
[299.00369263 -359.59674072]
[290.40481567 -347.24182129]
[279.49468994 -336.87100220]
[266.72009277 -328.90896606]
[252.60409546 -323.68173218]
[237.72477722 -321.40338135]
[222.69143677 -322.16717529]
[218.93513489 -307.64511108]
[215.17883301 -293.12307739]
[211.42253113 -278.60101318]
[207.66622925 -264.07894897]
[220.31866455 -257.20574951]
[230.96134949 -247.49336243]
[238.97047424 -235.50488281]
[243.87516785 -221.93701172]
[245.38507080 -207.57957458]
[243.40762329 -193.26948547]
[238.05366516 -179.84199524]
[229.63124084 -168.08193970]
[218.62791443 -158.67785645]
[205.68249512 -152.18171692]
[191.54800415 -148.97642517]
[177.04782104 -149.25337219]
[181.13864136 -134.93154907]
[170.02317810 -123.67291260]
[166.05108643 -109.20838928]
[170.14190674 -94.88657379]
[159.02644348 -83.62793732]
[155.05435181 -69.16341400]
[151.08224487 -54.69888687]
[158.64964294 -41.92116547]
[154.82742310 -27.19549751]
[141.37367249 -19.34475517]
[137.40158081 -4.88023186]
[133.42947388 9.58429241]
[129.45738220 24.04881668]
[125.48528290 38.51334000]
[121.51319122 52.97786331]
[122.77323151 60.26031494]
[117.37277985 67.62733459]
[113.18576813 82.03111267]
[114.33724976 89.33152008]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[89.59832001 153.92240906]
[84.77231598 168.12486267]
[79.94631958 182.32733154]
[75.12032318 196.52978516]
[70.29432678 210.73223877]
[70.49634552 219.86442566]
[65.28930664 225.10928345]
[60.25239182 239.23831177]
[55.21547318 253.36735535]
[50.17855835 267.49636841]
[45.14164352 281.62539673]
[40.10472488 295.75442505]
[37.32911301 310.49539185]
[46.43124008 326.50268555]
[36.63270187 341.06137085]
[36.40937424 356.05969238]
[36.18604660 371.05804443]
[35.96271896 386.05639648]
[36.40932465 401.04974365]
[37.52497482 416.00817871]
[38.64062500 430.96664429]
[39.75627136 445.92507935]
[51.44869232 456.21707153]
[52.36703110 471.40298462]
[42.48313522 482.48648071]
[43.59878540 497.44494629]
[44.71443558 512.40338135]
[45.83008194 527.36181641]
[46.94573212 542.32031250]
[61.64544296 545.89434814]
[74.52020264 553.83758545]
[84.30867004 565.37194824]
[90.05186462 579.36730957]
[91.18714142 594.45263672]
[87.60326385 609.14996338]
[79.65135956 622.01940918]
[68.11045837 631.80010986]
[54.11122513 637.53393555]
[39.02516556 638.65911865]
[24.33025551 635.06536865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[14 192]
[15 191]
[16 190]
[17 189]
[24 188]
[25 187]
[26 186]
[27 185]
[30 183]
[52 182]
[53 181]
[54 180]
[55 179]
[56 178]
[57 177]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 165]
[67 163]
[68 162]
[69 160]
[70 159]
[71 158]
[72 157]
[73 156]
[74 155]
[77 152]
[78 151]
[79 150]
[81 148]
[82 147]
[84 145]
[95 133]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
