%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[72.81055450 699.68408203]
[59.90924835 691.68902588]
[50.77040863 679.57104492]
[46.62998581 664.96893311]
[48.04793930 649.85754395]
[54.83250046 636.28057861]
[66.06611633 626.07421875]
[80.22952271 620.61871338]
[80.22952271 605.61871338]
[80.22952271 590.61871338]
[80.22952271 575.61871338]
[68.09111023 567.02819824]
[63.28179550 552.76867676]
[67.84454346 538.24163818]
[80.22952271 529.08093262]
[80.22952271 514.08093262]
[80.22952271 499.08093262]
[80.22952271 484.08093262]
[80.22952271 469.08093262]
[80.22952271 454.08093262]
[80.22952271 439.08093262]
[67.35330200 435.13143921]
[56.09656906 427.70617676]
[47.37585068 417.39834595]
[41.90438461 405.03631592]
[40.13377380 391.61706543]
[42.21675110 378.22573853]
[47.99404526 365.94787598]
[57.00651169 355.78152466]
[68.53160858 348.55599976]
[81.64133453 344.86425781]
[82.08794403 329.87091064]
[82.53454590 314.87756348]
[82.98115540 299.88421631]
[83.42775726 284.89083862]
[83.87436676 269.89749146]
[83.76269531 254.89791870]
[83.09291077 239.91288757]
[82.42312622 224.92784119]
[73.64099121 237.08819580]
[59.71786880 242.66911316]
[44.96798706 239.94128418]
[33.96176147 229.74996948]
[30.10958672 215.25305176]
[34.60510254 200.94255066]
[46.05532837 191.25273132]
[60.91228104 189.18611145]
[74.57237244 195.38302612]
[82.80295563 207.92356873]
[84.14118958 192.98338318]
[77.57021332 179.61657715]
[86.50785065 166.56172180]
[87.84608459 151.62153625]
[89.18431854 136.68135071]
[90.52255249 121.74115753]
[91.86079407 106.80097961]
[92.41899872 91.81136322]
[92.19567108 76.81302643]
[91.97234344 61.81468964]
[84.03044128 48.13124466]
[91.57739258 35.29018784]
[91.35406494 20.29184914]
[91.13073730 5.29351234]
[87.87390900 -3.24058819]
[91.01741028 -9.92939949]
[91.01741028 -24.92939949]
[91.01741028 -39.92940140]
[91.01741028 -54.92940140]
[83.28010559 -68.72956848]
[91.01741028 -81.45684052]
[91.01741028 -96.45684052]
[88.71383667 -100.13754272]
[87.79386139 -103.97396851]
[88.13654327 -107.51203918]
[89.48589325 -110.38359833]
[91.49060822 -112.34300995]
[92.38342285 -127.31641388]
[93.27623749 -142.28982544]
[94.16905212 -157.26322937]
[95.06186676 -172.23663330]
[95.95468903 -187.21003723]
[96.84750366 -202.18344116]
[97.74031830 -217.15684509]
[87.74073792 -205.97613525]
[73.31255341 -201.87399292]
[58.92650223 -206.12152100]
[49.04025269 -217.40255737]
[46.71716690 -232.22157288]
[52.67707825 -245.98674011]
[65.07324982 -254.43273926]
[80.06458282 -254.94250488]
[93.00585938 -247.35809326]
[99.88712311 -234.02934265]
[102.77239990 -248.74923706]
[105.65766907 -263.46911621]
[108.54294586 -278.18902588]
[94.59044647 -283.82144165]
[81.95617676 -291.99285889]
[71.09686279 -302.40783691]
[62.40505981 -314.68988037]
[56.19496536 -328.39505005]
[52.69107437 -343.02786255]
[52.02005386 -358.05935669]
[54.20615387 -372.94619751]
[59.17035294 -387.15017700]
[66.73320007 -400.15786743]
[76.62129974 -411.49902344]
[88.47719574 -420.76370239]
[101.87232208 -427.61694336]
[116.32244110 -431.81106567]
[131.30519104 -433.19442749]
[146.27896118 -431.71697998]
[160.70245361 -427.43218994]
[174.05426025 -420.49493408]
[185.85174561 -411.15600586]
[195.66841125 -399.75296021]
[203.14941406 -386.69802856]
[208.02430725 -372.46313477]
[210.11685181 -357.56286621]
[209.35144043 -342.53588867]
[205.75570679 -327.92535400]
[199.45967102 -314.25949097]
[190.69088745 -302.03225708]
[179.76637268 -291.68569946]
[167.08103943 -283.59381104]
[153.09342957 -278.04910278]
[138.30921936 -275.25204468]
[123.26283264 -275.30374146]
[120.37756348 -260.58386230]
[117.49228668 -245.86396790]
[114.60701752 -231.14407349]
[112.71372223 -216.26403809]
[111.82090759 -201.29063416]
[110.92809296 -186.31721497]
[110.03527832 -171.34381104]
[109.14246368 -156.37040710]
[108.24964142 -141.39700317]
[107.35682678 -126.42359924]
[106.46401215 -111.45019531]
[106.01741028 -96.45684052]
[106.01741028 -81.45684052]
[113.75470734 -68.72956848]
[106.01741028 -54.92940140]
[106.01741028 -39.92940140]
[106.01741028 -24.92939949]
[106.01741028 -9.92939949]
[106.12907410 5.07018471]
[106.35240173 20.06852150]
[106.57572937 35.06686020]
[114.50166321 47.67752457]
[106.97068024 61.59136200]
[107.19400787 76.58969879]
[107.41733551 91.58803558]
[117.80168915 80.76374817]
[132.70019531 79.02181244]
[145.30148315 87.15863037]
[149.84439087 101.45414734]
[144.25196838 115.37265778]
[131.08100891 122.55079651]
[116.35308075 119.70681763]
[106.80097198 108.13921356]
[105.46273804 123.07939148]
[104.12450409 138.01957703]
[102.78627014 152.95976257]
[101.44803619 167.89994812]
[107.92329407 182.33537292]
[99.08137512 194.32160950]
[97.74314117 209.26179504]
[97.40816498 224.25805664]
[98.07794952 239.24308777]
[98.74773407 254.22813416]
[110.64218903 245.08909607]
[125.23936462 248.54199219]
[131.77876282 262.04150391]
[125.43978882 275.63623047]
[110.89529419 279.30471802]
[98.86771393 270.34411621]
[98.42111206 285.33746338]
[97.97450256 300.33081055]
[97.52789307 315.32415771]
[97.08129120 330.31750488]
[96.63468170 345.31085205]
[112.17069244 351.26696777]
[124.70932770 362.16522217]
[132.74667358 376.67514038]
[135.32667542 393.03451538]
[132.15490723 409.26336670]
[123.63193512 423.40359497]
[110.80294800 433.75527954]
[95.22952271 439.08093262]
[95.22952271 454.08093262]
[95.22952271 469.08093262]
[95.22952271 484.08093262]
[95.22952271 499.08093262]
[95.22952271 514.08093262]
[95.22952271 529.08093262]
[107.61450195 538.24163818]
[112.17725372 552.76867676]
[107.36794281 567.02819824]
[95.22952271 575.61871338]
[95.22952271 590.61871338]
[95.22952271 605.61871338]
[95.22952271 620.61871338]
[109.39293671 626.07421875]
[120.62654877 636.28057861]
[127.41110992 649.85754395]
[128.82905579 664.96893311]
[124.68863678 679.57104492]
[115.54979706 691.68902588]
[102.64849854 699.68408203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[31 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 171]
[38 170]
[39 169]
[49 168]
[50 167]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 153]
[58 152]
[59 151]
[61 149]
[62 148]
[63 147]
[65 146]
[66 145]
[67 144]
[68 143]
[70 141]
[71 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[93 131]
[94 130]
[95 129]
[96 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
