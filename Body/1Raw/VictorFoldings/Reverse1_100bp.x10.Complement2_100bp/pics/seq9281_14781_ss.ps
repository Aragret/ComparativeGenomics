%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[1.96289444 504.32147217]
[1.16916692 519.31707764]
[-1.32878947 534.12445068]
[-5.49840879 548.55053711]
[-11.28533173 562.40728760]
[-18.61411285 575.51403809]
[-27.38920784 587.69989014]
[-37.49621582 598.80603027]
[-48.80336761 608.68762207]
[-61.16325378 617.21588135]
[-74.41474152 624.27954102]
[-88.38506317 629.78662109]
[-102.89208984 633.66528320]
[-117.74669647 635.86492920]
[-132.75521851 636.35693359]
[-147.72198486 635.13482666]
[-162.45188904 632.21459961]
[-176.75288391 627.63421631]
[-190.43852234 621.45355225]
[-203.33038330 613.75305176]
[-215.26042175 604.63317871]
[-226.07307434 594.21282959]
[-235.62738037 582.62774658]
[-243.79879761 570.02911377]
[-250.48077393 556.58111572]
[-255.58621216 542.45904541]
[-259.04855347 527.84710693]
[-260.82263184 512.93566895]
[-260.88534546 497.91921997]
[-259.23587036 482.99349976]
[-255.89570618 468.35311890]
[-250.90841675 454.18890381]
[-244.33898926 440.68554688]
[-236.27310181 428.01910400]
[-226.81588745 416.35467529]
[-216.09065247 405.84432983]
[-204.23722839 396.62512207]
[-191.41012573 388.81723022]
[-177.77659607 382.52243042]
[-163.51435852 377.82281494]
[-148.80937195 374.77960205]
[-133.85331726 373.43255615]
[-118.84121704 373.79913330]
[-103.96875763 375.87463379]
[-89.42984009 379.63198853]
[-75.41400146 385.02215576]
[-62.10397720 391.97494507]
[-53.68935776 379.55743408]
[-45.27473831 367.13995361]
[-36.86012268 354.72244263]
[-28.44550133 342.30496216]
[-20.78490448 329.40863037]
[-13.90549183 316.07919312]
[-7.02607965 302.74975586]
[-15.18793488 290.28985596]
[-16.02276230 275.31790161]
[-9.20637608 261.84930420]
[3.51993990 253.54643250]
[18.79309273 252.72299194]
[25.67250443 239.39356995]
[32.55191803 226.06413269]
[39.43133163 212.73471069]
[46.31074142 199.40527344]
[53.19015503 186.07585144]
[59.66965103 172.54750061]
[65.74348450 158.83222961]
[71.81732178 145.11697388]
[77.89115143 131.40170288]
[83.96498871 117.68643951]
[76.64487457 104.94669342]
[78.17147827 90.33319092]
[87.96652222 79.38138580]
[102.31974792 76.23973083]
[108.39357758 62.52446365]
[114.46741486 48.80919647]
[120.54124451 35.09392929]
[126.61508179 21.37866211]
[131.33522034 7.14067411]
[134.65747070 -7.48678637]
[137.97973633 -22.11424637]
[141.30200195 -36.74170685]
[139.75642395 -41.72751617]
[140.23046875 -46.34580231]
[142.24592590 -49.88881683]
[145.11302185 -51.94116211]
[149.08511353 -66.40568542]
[153.05720520 -80.87020874]
[147.98951721 -98.57331848]
[160.94685364 -110.40860748]
[164.70315552 -124.93067169]
[168.45945740 -139.45272827]
[172.21575928 -153.97479248]
[175.97206116 -168.49684143]
[179.72836304 -183.01890564]
[183.48466492 -197.54096985]
[187.24096680 -212.06301880]
[173.52775574 -218.23196411]
[161.05444336 -226.62985229]
[150.17991638 -237.01507568]
[141.21705627 -249.08882141]
[134.42375183 -262.50369263]
[129.99543762 -276.87374878]
[128.05953979 -291.78549194]
[128.67176819 -306.80990601]
[131.81448364 -321.51470947]
[137.39727783 -335.47680664]
[145.25952148 -348.29449463]
[155.17500305 -359.59899902]
[166.85842896 -369.06500244]
[179.97366333 -376.42019653]
[194.14332581 -381.45297241]
[208.95973206 -384.01849365]
[223.99659729 -384.04293823]
[238.82128906 -381.52563477]
[253.00724792 -376.53900146]
[266.14633179 -369.22650146]
[277.86047363 -359.79855347]
[287.81268311 -348.52636719]
[295.71658325 -335.73434448]
[301.34478760 -321.79046631]
[304.53530884 -307.09594727]
[305.19641113 -292.07360840]
[303.30902100 -277.15563965]
[298.92749023 -262.77127075]
[292.17785645 -249.33436584]
[283.25433350 -237.23152161]
[272.41363525 -226.81098938]
[259.96771240 -218.37255859]
[246.27465820 -212.15904236]
[231.72840881 -208.34921265]
[216.74752808 -207.05265808]
[201.76301575 -208.30671692]
[198.00671387 -193.78466797]
[194.25041199 -179.26260376]
[190.49411011 -164.74053955]
[186.73782349 -150.21849060]
[182.98152161 -135.69642639]
[179.22521973 -121.17436981]
[175.46891785 -106.65231323]
[181.33570862 -96.07368469]
[178.32511902 -83.94437408]
[167.52172852 -76.89811707]
[163.54963684 -62.43358994]
[159.57754517 -47.96906662]
[155.92945862 -33.41944885]
[152.60719299 -18.79198647]
[149.28494263 -4.16452646]
[145.96267700 10.46293354]
[156.45066833 -0.26096898]
[170.36347961 -5.86754370]
[185.35655212 -5.41198397]
[198.90330505 1.02893996]
[208.72087097 12.36981964]
[213.15480042 26.69951630]
[211.45791626 41.60322571]
[203.91616821 54.56941223]
[191.80046082 63.41304398]
[177.15252686 66.64381409]
[162.44078064 63.71727753]
[150.14442444 55.12661362]
[142.33558655 42.31949615]
[140.33035278 27.45249748]
[134.25651550 41.16776276]
[128.18267822 54.88302994]
[122.10884857 68.59829712]
[116.03501129 82.31356049]
[123.35512543 95.05330658]
[121.82852173 109.66680908]
[112.03347778 120.61861420]
[97.68025208 123.76026917]
[91.60642242 137.47554016]
[85.53258514 151.19081116]
[79.45875549 164.90606689]
[73.38491821 178.62133789]
[74.00079346 182.91955566]
[73.28852081 186.79991150]
[71.54254150 189.89619446]
[69.14600372 191.97543335]
[66.51958466 192.95526123]
[59.64017105 206.28468323]
[52.76076126 219.61412048]
[45.88134766 232.94354248]
[39.00193405 246.27297974]
[32.12252045 259.60241699]
[40.29940796 272.52856445]
[40.90437317 287.71182251]
[33.87501144 301.07049561]
[21.18776131 309.06359863]
[6.30334949 309.62918091]
[-0.57606304 322.95861816]
[-7.45547581 336.28805542]
[6.49806738 330.78363037]
[21.05052948 334.42034912]
[30.77420235 345.84182739]
[32.04239273 360.78814697]
[24.38210487 373.68463135]
[10.65042877 379.72128296]
[-4.03105593 376.64654541]
[-14.18651962 365.60723877]
[-16.02800751 350.71957397]
[-24.44262505 363.13708496]
[-32.85724258 375.55456543]
[-41.27186203 387.97204590]
[-49.68648148 400.38955688]
[-38.29594803 410.17492676]
[-28.09513283 421.19497681]
[-19.21702766 433.30599976]
[-11.77737427 446.35012817]
[-5.87316656 460.15728760]
[-1.58137560 474.54751587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 191]
[53 190]
[54 189]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[78 148]
[79 147]
[80 146]
[81 145]
[85 144]
[86 143]
[87 142]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
