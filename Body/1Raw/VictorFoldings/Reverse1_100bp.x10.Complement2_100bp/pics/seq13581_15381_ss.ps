%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[97.47603607 635.24023438]
[83.32711029 640.55993652]
[68.23867035 641.47119141]
[53.55236816 637.89294434]
[40.57409668 630.14337158]
[30.45788002 618.91156006]
[24.10323906 605.19622803]
[22.07522964 590.21697998]
[24.55417824 575.30566406]
[31.31966019 561.78833008]
[41.77009201 550.86676025]
[54.97622681 543.51220703]
[69.76378632 540.37860107]
[71.10202026 525.43841553]
[72.44025421 510.49826050]
[73.77849579 495.55807495]
[75.11672974 480.61788940]
[76.45496368 465.67770386]
[77.79319763 450.73751831]
[79.13143158 435.79733276]
[80.46966553 420.85714722]
[69.14605713 411.21795654]
[65.62809753 396.58621216]
[71.46868896 382.52416992]
[84.62155914 374.50494385]
[85.95979309 359.56475830]
[87.29802704 344.62457275]
[88.63626099 329.68438721]
[89.97449493 314.74420166]
[91.20146942 299.79446411]
[84.43221283 286.52697754]
[93.17449188 273.34048462]
[84.71389008 257.96566772]
[95.20781708 242.83427429]
[96.10063934 227.86087036]
[96.99345398 212.88746643]
[97.88626862 197.91406250]
[98.77908325 182.94065857]
[98.55575562 167.94232178]
[97.21752167 153.00213623]
[95.87928772 138.06195068]
[94.54105377 123.12175751]
[93.20281982 108.18157196]
[90.75709534 93.38230133]
[87.21742249 78.80593109]
[83.67774963 64.22955322]
[69.03024292 59.82524109]
[58.62263870 48.75372314]
[55.17705536 34.05698013]
[59.52135468 19.70487022]
[70.39297485 9.52285480]
[66.85330200 -5.05352020]
[56.07798004 -16.63811874]
[60.59340668 -30.83178520]
[57.05373383 -45.40816116]
[53.51406097 -59.98453522]
[49.97438812 -74.56091309]
[46.43471909 -89.13729095]
[42.89504623 -103.71366119]
[37.82893372 -111.31447601]
[39.41289902 -118.53340149]
[36.09064102 -133.16085815]
[32.76837921 -147.78831482]
[29.44612122 -162.41577148]
[23.49905777 -148.64506531]
[11.52264500 -139.61370850]
[-3.35251260 -137.68246460]
[-17.23808479 -143.35617065]
[-26.50441360 -155.15171814]
[-28.72930717 -169.98579407]
[-23.33118057 -183.98080444]
[-11.72109222 -193.47848511]
[3.06610823 -195.99615479]
[17.16508293 -190.87571716]
[26.89001083 -179.45643616]
[25.77436066 -194.41488647]
[24.65871239 -209.37333679]
[10.90953732 -210.90122986]
[-2.35551763 -214.81401062]
[-14.72621632 -220.98936462]
[-25.82022095 -229.23493958]
[-35.29490662 -239.29447937]
[-42.85794067 -250.85569763]
[-48.27630615 -263.56002808]
[-51.38348770 -277.01373291]
[-52.08456802 -290.80004883]
[-50.35914230 -304.49218750]
[-46.26191711 -317.66647339]
[-39.92094803 -329.91552734]
[-31.53367615 -340.86074829]
[-21.36074448 -350.16418457]
[-9.71792412 -357.53878784]
[3.03370214 -362.75738525]
[16.49892998 -365.65963745]
[16.05232430 -380.65298462]
[15.60571861 -395.64633179]
[15.15911293 -410.63970947]
[14.71250725 -425.63305664]
[0.74895364 -431.79598999]
[-9.15123653 -443.41275024]
[-13.02237225 -458.17678833]
[-10.09583855 -473.15670776]
[-0.95270032 -485.37823486]
[12.59166622 -492.41479492]
[27.84801674 -492.86923218]
[41.78719330 -486.65133667]
[51.64155960 -474.99569702]
[55.45452499 -460.21652222]
[52.46902466 -445.24822998]
[43.27782822 -433.06280518]
[29.70585632 -426.07965088]
[30.15246201 -411.08630371]
[30.59906960 -396.09295654]
[31.04567528 -381.09960938]
[31.49228096 -366.10626221]
[47.48242569 -363.38821411]
[62.57434845 -357.43182373]
[76.11956787 -348.49069214]
[87.53558350 -336.94671631]
[96.33090210 -323.29376221]
[102.12625122 -308.11654663]
[104.67086029 -292.06567383]
[103.85337830 -275.82958984]
[99.70670319 -260.10522461]
[92.40666962 -245.56793213]
[82.26461792 -232.84257507]
[69.71408844 -222.47662354]
[55.29230499 -214.91664124]
[39.61716461 -210.48898315]
[40.73281479 -195.53053284]
[41.84846497 -180.57208252]
[44.07358170 -165.73803711]
[47.39583969 -151.11058044]
[50.71810150 -136.48312378]
[54.04035950 -121.85565948]
[57.47142029 -107.25333405]
[61.01109314 -92.67695618]
[64.55076599 -78.10058594]
[68.09043884 -63.52420807]
[71.63011169 -48.94783401]
[75.16978455 -34.37145996]
[85.69192505 -23.82946014]
[81.42967987 -8.59319305]
[84.96935272 5.98318291]
[99.29994202 10.04518890]
[109.74268341 20.80646706]
[113.42116547 35.44665527]
[109.25037384 50.05833817]
[98.25411987 60.68988037]
[101.79379272 75.26625824]
[105.33346558 89.84263611]
[111.07484436 75.98490906]
[122.91546631 66.77622986]
[137.76022339 64.62373352]
[151.72872925 70.09007263]
[161.16964722 81.74636078]
[163.61515808 96.54566956]
[158.42599487 110.61949158]
[146.95858765 120.28897858]
[132.21051025 123.02652740]
[118.03687286 118.11656952]
[108.14300537 106.84333801]
[109.48123932 121.78352356]
[110.81947327 136.72370911]
[112.15770721 151.66389465]
[113.49594116 166.60408020]
[121.22946930 153.75135803]
[134.30511475 146.40101624]
[149.30493164 146.47442627]
[162.30801392 153.95239258]
[169.91537476 166.88018799]
[170.13847351 181.87852478]
[162.91899109 195.02688599]
[150.14408875 202.88829041]
[135.15309143 203.40780640]
[121.86460876 196.44964600]
[113.75248718 183.83346558]
[112.85967255 198.80686951]
[111.96685791 213.78027344]
[111.07404327 228.75369263]
[110.18122864 243.72709656]
[118.14318085 253.87451172]
[117.09129333 266.32751465]
[108.13294983 274.45614624]
[114.82240295 288.79354858]
[106.15992737 300.91009521]
[108.64239502 309.70074463]
[104.91468048 316.08242798]
[103.57644653 331.02261353]
[102.23821259 345.96279907]
[100.89997864 360.90298462]
[99.56174469 375.84317017]
[111.08005524 386.07226562]
[114.32857513 400.94845581]
[108.26626587 414.72207642]
[95.40985107 422.19537354]
[94.07161713 437.13555908]
[92.73338318 452.07574463]
[91.39514923 467.01593018]
[90.05690765 481.95611572]
[88.71867371 496.89630127]
[87.38043976 511.83648682]
[86.04220581 526.77667236]
[84.70397186 541.71685791]
[98.69923401 547.42858887]
[110.38809204 557.01306152]
[118.73119354 569.61798096]
[122.98667145 584.12255859]
[122.77613068 599.23699951]
[118.11829376 613.61743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[30 186]
[32 184]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 151]
[45 150]
[46 149]
[51 144]
[52 143]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[61 135]
[62 134]
[63 133]
[64 132]
[75 131]
[76 130]
[77 129]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
