%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[92.21129608 455.46691895]
[89.54595184 470.28546143]
[83.85752869 484.22589111]
[75.39470673 496.67877197]
[64.52745056 507.09973145]
[51.73081970 515.03320312]
[37.56423187 520.13238525]
[22.64698601 522.17431641]
[7.63120556 521.06976318]
[-6.82668686 516.86700439]
[-20.09465408 509.74981689]
[-31.59267807 500.02926636]
[-40.81811523 488.13031006]
[-47.36766434 474.57312012]
[-50.95501328 459.95037842]
[-51.42333603 444.90133667]
[-48.75215912 430.08383179]
[-43.05825806 416.14562988]
[-34.59053802 403.69607544]
[-23.71918106 393.27938843]
[-10.91942883 385.35095215]
[3.24916434 380.25735474]
[18.16720963 378.22128296]
[33.18255615 379.33175659]
[37.36956787 364.92794800]
[41.55657578 350.52416992]
[45.74358749 336.12039185]
[47.96870422 321.28634644]
[48.19203186 306.28802490]
[48.41536331 291.28967285]
[48.63869095 276.29135132]
[48.86201859 261.29299927]
[41.66069412 274.45129395]
[30.78890228 284.78591919]
[17.28287506 291.31179810]
[2.42991829 293.40695190]
[-12.35427666 290.87170410]
[-25.66057587 283.94766235]
[-36.22070694 273.29479980]
[-43.02814865 259.92846680]
[-45.43405151 245.12266541]
[-43.20911026 230.28858948]
[-36.56538391 216.84013367]
[-26.13611221 206.05911255]
[-12.91534996 198.97311401]
[1.83678699 196.25752258]
[16.71421814 198.17117310]
[30.29892159 204.53166199]
[41.29608917 214.73274231]
[48.65754318 227.80213928]
[51.68169022 242.49526978]
[55.86870193 228.09149170]
[51.99155807 213.71035767]
[63.27341461 202.61845398]
[67.46042633 188.21467590]
[71.64743805 173.81089783]
[67.77029419 159.42976379]
[79.05214691 148.33786011]
[83.23915863 133.93408203]
[87.42617035 119.53029633]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[105.28363800 46.45937347]
[103.79187775 40.01839828]
[105.51777649 34.60376358]
[109.15178680 31.50489235]
[113.12388611 17.04036713]
[116.88018799 2.51830840]
[120.41986084 -12.05806732]
[123.95953369 -26.63444328]
[127.49920654 -41.21081924]
[131.03887939 -55.78719330]
[129.54711914 -62.22816849]
[131.27301025 -67.64280701]
[134.90702820 -70.74167633]
[138.87911987 -85.20619965]
[142.85122681 -99.67072296]
[146.82331848 -114.13524628]
[136.83139038 -130.23107910]
[141.69418335 -148.21067810]
[157.87255859 -156.77665710]
[161.41223145 -171.35302734]
[164.95190430 -185.92941284]
[168.49157715 -200.50578308]
[172.03123474 -215.08215332]
[166.43870544 -232.62652588]
[179.03791809 -244.84236145]
[182.36018372 -259.46981812]
[181.20918274 -268.53146362]
[185.84233093 -274.28955078]
[189.38200378 -288.86593628]
[192.92167664 -303.44232178]
[196.46134949 -318.01867676]
[200.00102234 -332.59506226]
[203.54069519 -347.17144775]
[207.08036804 -361.74780273]
[193.50526428 -368.26013184]
[181.58103943 -377.45288086]
[171.82897949 -388.92419434]
[164.67538452 -402.17257690]
[160.43299866 -416.61889648]
[159.28726196 -431.63159180]
[161.28826904 -446.55438232]
[166.34854126 -460.73489380]
[174.24687195 -473.55325317]
[184.63796997 -484.44906616]
[197.06758118 -492.94601440]
[210.99235535 -498.67266846]
[225.80354309 -501.37866211]
[240.85366821 -500.94570923]
[255.48480225 -497.39276123]
[269.05734253 -490.87509155]
[280.97793579 -481.67764282]
[290.72549438 -470.20248413]
[297.87387085 -456.95129395]
[302.11056519 -442.50332642]
[303.25039673 -427.49017334]
[301.24353027 -412.56817627]
[296.17767334 -398.38964844]
[288.27432251 -385.57440186]
[277.87893677 -374.68267822]
[265.44595337 -366.19061279]
[251.51893616 -360.46945190]
[236.70669556 -357.76925659]
[221.65673828 -358.20812988]
[218.11706543 -343.63177490]
[214.57739258 -329.05538940]
[211.03771973 -314.47900391]
[207.49804688 -299.90264893]
[203.95837402 -285.32626343]
[200.41870117 -270.74987793]
[196.98764038 -256.14755249]
[193.66537476 -241.52011108]
[199.84452820 -231.12084961]
[197.19641113 -218.90727234]
[186.60762024 -211.54248047]
[183.06794739 -196.96611023]
[179.52827454 -182.38973999]
[175.98860168 -167.81335449]
[172.44892883 -153.23698425]
[180.35545349 -145.01184082]
[183.34056091 -133.87609863]
[180.55090332 -122.56628418]
[172.56721497 -113.91981506]
[161.28784180 -110.16315460]
[157.31575012 -95.69863129]
[153.34364319 -81.23410034]
[149.37155151 -66.76957703]
[145.61524963 -52.24752045]
[142.07557678 -37.67114639]
[138.53590393 -23.09477043]
[134.99623108 -8.51839447]
[131.45655823 6.05798054]
[133.13220215 10.53025627]
[132.01618958 16.10264587]
[127.58840942 21.01246452]
[123.61631012 35.47698593]
[119.86001587 49.99904633]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[107.24108124 112.42998505]
[107.28849792 116.37488556]
[106.17070007 119.74919128]
[104.21885681 122.25057220]
[101.82995605 123.71730804]
[97.64294434 138.12109375]
[93.45593262 152.52487183]
[97.03359222 167.93626404]
[86.05121613 177.99790955]
[81.86420441 192.40168762]
[77.67719269 206.80546570]
[81.25485992 222.21685791]
[70.27248383 232.27850342]
[66.08547211 246.68228149]
[63.86035538 261.51632690]
[63.63702774 276.51467896]
[63.41370010 291.51300049]
[63.19037247 306.51135254]
[62.96704483 321.50967407]
[70.16836548 308.35137939]
[81.04016113 298.01675415]
[94.54618835 291.49087524]
[109.39913940 289.39572144]
[124.18333435 291.93096924]
[137.48963928 298.85504150]
[148.04977417 309.50790405]
[154.85720825 322.87423706]
[157.26310730 337.68002319]
[155.03816223 352.51409912]
[148.39443970 365.96255493]
[137.96517944 376.74356079]
[124.74440765 383.82955933]
[109.99227142 386.54516602]
[95.11484528 384.63150024]
[81.53013611 378.27102661]
[70.53296661 368.06994629]
[63.17151642 355.00054932]
[60.14736938 340.30740356]
[55.96036148 354.71118164]
[51.77334976 369.11495972]
[47.58633804 383.51876831]
[60.85710526 390.63073730]
[72.35894775 400.34677124]
[81.58906555 412.24209595]
[88.14395142 425.79669189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[27 203]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[51 179]
[52 178]
[54 176]
[55 175]
[56 174]
[58 172]
[59 171]
[60 170]
[61 165]
[63 164]
[64 163]
[65 162]
[66 161]
[69 160]
[70 159]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[78 151]
[79 150]
[80 149]
[81 148]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[90 136]
[91 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
