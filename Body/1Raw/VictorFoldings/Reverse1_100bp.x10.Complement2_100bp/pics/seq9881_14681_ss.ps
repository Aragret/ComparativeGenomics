%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[145.05943298 796.83453369]
[130.98307800 791.63726807]
[117.26861572 785.54882812]
[103.97243500 778.59411621]
[91.14916229 770.80187988]
[78.85147858 762.20404053]
[67.12993622 752.83593750]
[56.03269958 742.73614502]
[45.60535812 731.94604492]
[35.89076996 720.51000977]
[26.92885208 708.47503662]
[18.75643158 695.89068604]
[11.40709114 682.80853271]
[4.91102934 669.28234863]
[-0.70505822 655.36779785]
[-5.41809416 641.12194824]
[-9.20871162 626.60345459]
[-12.06133461 611.87194824]
[-13.96423912 596.98791504]
[-14.90960789 582.01251221]
[-14.89355469 567.00732422]
[-13.91614628 552.03399658]
[-11.98139858 537.15411377]
[-9.09726143 522.42871094]
[-5.27558756 507.91833496]
[-0.53208083 493.68264771]
[5.11376667 479.78012085]
[11.63875484 466.26788330]
[19.01607132 453.20147705]
[27.21539879 440.63461304]
[36.20304871 428.61886597]
[45.94208145 417.20367432]
[56.39248657 406.43591309]
[67.51131439 396.35983276]
[79.25286865 387.01684570]
[91.56891632 378.44534302]
[104.40883636 370.68054199]
[117.71987152 363.75433350]
[131.44732666 357.69522095]
[145.53477478 352.52810669]
[159.92434692 348.27416992]
[156.60208130 333.64669800]
[153.27983093 319.01925659]
[149.95756531 304.39178467]
[146.63529968 289.76431274]
[134.03608704 277.54849243]
[139.62863159 260.00411987]
[136.08895874 245.42773438]
[132.54928589 230.85136414]
[128.46961975 216.41680908]
[123.85560608 202.14407349]
[119.24160004 187.87133789]
[114.19302368 182.47378540]
[114.66685486 173.35163879]
[110.26585388 159.01179504]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.39710999 59.43269348]
[76.10298157 45.06047821]
[71.70198822 30.72063255]
[69.21263123 45.51262665]
[63.02803040 59.17830276]
[53.55838394 70.81126404]
[41.43178177 79.63993835]
[27.45253563 85.07875061]
[12.54784012 86.76696777]
[-2.29372931 84.59261322]
[-16.08778572 78.69990540]
[-27.91941833 69.47968292]
[-37.00387573 57.54349518]
[-42.73862457 43.68302536]
[-44.74329376 28.81758499]
[-42.88492203 13.93314838]
[-37.28676605 0.01694579]
[-28.32013893 -12.00800991]
[-16.57975769 -21.34414864]
[-2.84432340 -27.37223434]
[11.97514343 -29.69244957]
[26.89572144 -28.15090179]
[40.92778015 -22.84983444]
[53.14062500 -14.14085007]
[62.72422409 -2.60158396]
[69.04447174 11.00750065]
[69.49107361 -3.98584962]
[69.93768311 -18.97920036]
[62.61469650 -33.00362396]
[70.72750092 -45.49488449]
[71.17411041 -60.48823166]
[71.62071228 -75.48158264]
[72.06732178 -90.47492981]
[58.55932236 -103.75831604]
[59.04197693 -122.37766266]
[72.74206543 -134.51945496]
[72.74206543 -149.51945496]
[72.74206543 -164.51945496]
[59.40093994 -172.12930298]
[51.66596985 -185.39828491]
[51.61782837 -200.75711060]
[59.26946259 -214.07431030]
[72.56262207 -221.76765442]
[87.92151642 -221.76765442]
[101.21467590 -214.07431030]
[108.86631012 -200.75711060]
[108.81816864 -185.39828491]
[101.08319855 -172.12930298]
[87.74206543 -164.51945496]
[87.74206543 -149.51945496]
[87.74206543 -134.51945496]
[97.36625671 -128.39237976]
[102.89485168 -118.27553558]
[102.85284424 -106.62683868]
[97.13500214 -96.34057617]
[87.06066895 -90.02832794]
[86.61406708 -75.03498077]
[86.16745758 -60.04162598]
[85.72085571 -45.04827881]
[93.07578278 -32.09627914]
[84.93103027 -18.53259468]
[84.48442841 -3.53924370]
[84.03781891 11.45410633]
[86.04183197 26.31963348]
[90.44283295 40.65948105]
[95.41048431 46.13161469]
[94.80088806 55.24568176]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[124.60570526 154.61079407]
[129.00669861 168.95065308]
[133.51432800 183.25733948]
[138.12834167 197.53007507]
[142.74235535 211.80279541]
[151.79211426 199.84028625]
[166.78254700 199.30450439]
[176.66325378 210.59040833]
[174.15054321 225.37844849]
[161.09669495 232.76744080]
[147.12565613 227.31169128]
[150.66532898 241.88806152]
[154.20500183 256.46444702]
[164.79380798 263.82922363]
[167.44192505 276.04278564]
[161.26277161 286.44204712]
[164.58502197 301.06951904]
[167.90728760 315.69699097]
[171.22953796 330.32443237]
[174.55180359 344.95190430]
[189.36717224 342.57266235]
[204.30451965 341.14755249]
[219.30250549 340.68240356]
[234.29946899 341.17913818]
[249.23379517 342.63571167]
[264.04409790 345.04614258]
[278.66955566 348.40054321]
[293.05004883 352.68508911]
[307.12646484 357.88220215]
[320.84097290 363.97052002]
[334.13723755 370.92501831]
[346.96060181 378.71713257]
[359.25836182 387.31484985]
[370.98001099 396.68280029]
[382.07736206 406.78253174]
[392.50482178 417.57250977]
[402.21954346 429.00842285]
[411.18161011 441.04324341]
[419.35415649 453.62756348]
[426.70364380 466.70965576]
[433.19985962 480.23571777]
[438.81610107 494.15023804]
[443.52929688 508.39599609]
[447.32006836 522.91442871]
[450.17285156 537.64593506]
[452.07592773 552.52996826]
[453.02145386 567.50531006]
[453.00558472 582.51049805]
[452.02832031 597.48382568]
[450.09375000 612.36383057]
[447.20977783 627.08923340]
[443.38827515 641.59960938]
[438.64492798 655.83538818]
[432.99923706 669.73797607]
[426.47439575 683.25024414]
[419.09719849 696.31677246]
[410.89801025 708.88372803]
[401.91052246 720.89953613]
[392.17160034 732.31488037]
[381.72131348 743.08276367]
[370.60260010 753.15893555]
[358.86114502 762.50207520]
[346.54519653 771.07373047]
[333.70535278 778.83862305]
[320.39440918 785.76501465]
[306.66702271 791.82421875]
[292.57962036 796.99151611]
[278.19009399 801.24560547]
[263.55758667 804.56903076]
[248.74220276 806.94812012]
[233.80482483 808.37304688]
[218.80683899 808.83807373]
[203.80987549 808.34112549]
[188.87557983 806.88439941]
[174.06527710 804.47381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[47 148]
[48 147]
[49 146]
[50 140]
[51 139]
[52 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[61 131]
[62 130]
[63 129]
[64 127]
[65 126]
[88 125]
[89 124]
[90 123]
[92 121]
[93 120]
[94 119]
[95 118]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
