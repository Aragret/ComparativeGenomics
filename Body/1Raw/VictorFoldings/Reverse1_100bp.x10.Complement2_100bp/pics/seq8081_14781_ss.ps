%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[144.69305420 441.21203613]
[149.81617737 426.92504883]
[159.75735474 415.45605469]
[173.17213440 408.35620117]
[171.38966370 393.46246338]
[169.60720825 378.56875610]
[167.82473755 363.67504883]
[164.93946838 348.95513916]
[160.96736145 334.49063110]
[150.13601685 324.26657104]
[153.94273376 308.91015625]
[143.11137390 298.68612671]
[146.91809082 283.32971191]
[142.94599915 268.86517334]
[138.97390747 254.40066528]
[134.89424133 239.96611023]
[130.70722961 225.56233215]
[126.52021027 211.15853882]
[115.53783417 201.09689331]
[119.11550140 185.68550110]
[114.92848969 171.28172302]
[110.74147797 156.87794495]
[106.23384857 142.57125854]
[101.40785217 128.36880493]
[96.27947235 123.04699707]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[77.50272369 79.94410706]
[80.94997406 65.45391083]
[76.33596039 51.18117523]
[71.72195435 36.90844345]
[66.05916595 23.01841545]
[52.98565292 14.10809326]
[54.24526596 -0.73315459]
[41.17175293 -9.64347649]
[42.43136597 -24.48472404]
[35.75117111 -37.91510010]
[29.12742615 -44.20507812]
[29.07317543 -51.59553528]
[16.13377380 -60.69951248]
[17.61421204 -75.52036285]
[11.13471508 -89.04870605]
[3.95934892 -102.22118378]
[-3.89240646 -115.00202942]
[-11.74416161 -127.78286743]
[-19.59591675 -140.56370544]
[-27.63709068 -153.22624207]
[-35.86589813 -165.76763916]
[-44.09470749 -178.30903625]
[-52.32351303 -190.85043335]
[-60.55232239 -203.39183044]
[-68.78112793 -215.93324280]
[-77.00994110 -228.47463989]
[-90.29721069 -221.48866272]
[-104.19670868 -215.81771851]
[-118.57864380 -211.51477051]
[-133.30873108 -208.61997986]
[-148.24945068 -207.16036987]
[-163.26129150 -207.14958191]
[-178.20410156 -208.58772278]
[-192.93833923 -211.46134949]
[-207.32644653 -215.74363708]
[-221.23406982 -221.39460754]
[-234.53135681 -228.36149597]
[-247.09417725 -236.57923889]
[-258.80520630 -245.97111511]
[-269.55508423 -256.44943237]
[-279.24346924 -267.91638184]
[-287.77990723 -280.26486206]
[-295.08465576 -293.37957764]
[-301.08956909 -307.13809204]
[-305.73849487 -321.41195679]
[-308.98812866 -336.06784058]
[-310.80804443 -350.96896362]
[-311.18127441 -365.97619629]
[-310.10433960 -380.94934082]
[-307.58731079 -395.74868774]
[-303.65368652 -410.23599243]
[-298.34014893 -424.27600098]
[-291.69638062 -437.73764038]
[-283.78436279 -450.49517822]
[-274.67797852 -462.42956543]
[-264.46224976 -473.42932129]
[-253.23258972 -483.39175415]
[-241.09381104 -492.22384644]
[-228.15928650 -499.84313965]
[-214.54977417 -506.17846680]
[-200.39233398 -511.17071533]
[-185.81915283 -514.77325439]
[-170.96632385 -516.95239258]
[-155.97250366 -517.68786621]
[-140.97770691 -516.97283936]
[-126.12191772 -514.81384277]
[-111.54385376 -511.23114014]
[-97.37963867 -506.25817871]
[-83.76151276 -499.94134521]
[-70.81663513 -492.33966064]
[-58.66586685 -483.52407837]
[-47.42265701 -473.57693481]
[-37.19198990 -462.59109497]
[-28.06938171 -450.66912842]
[-20.14001274 -437.92233276]
[-13.47791958 -424.46972656]
[-8.14530659 -410.43698120]
[-4.19196272 -395.95501709]
[-1.65480113 -381.15914917]
[-0.55751050 -366.18743896]
[-0.91033643 -351.17974854]
[-2.70998478 -336.27615356]
[-5.93965197 -321.61584473]
[-10.56918335 -307.33569336]
[-16.55535126 -293.56903076]
[-23.84226608 -280.44436646]
[-32.36188889 -268.08428955]
[-42.03467178 -256.60418701]
[-52.77030182 -246.11125183]
[-64.46853638 -236.70344543]
[-56.23973083 -224.16204834]
[-48.01092148 -211.62065125]
[-39.78211212 -199.07923889]
[-31.55330658 -186.53784180]
[-23.32449722 -173.99644470]
[-15.09568977 -161.45504761]
[-10.68465614 -159.62425232]
[-7.37688780 -155.00302124]
[-6.81507492 -148.41546631]
[1.03668058 -135.63462830]
[8.88843632 -122.85378265]
[16.74019241 -110.07293701]
[20.14015007 -124.68253326]
[32.05960464 -133.78894043]
[47.04914474 -133.22882080]
[58.25575256 -123.25827026]
[60.55591583 -108.43567657]
[52.89803314 -95.53773499]
[38.78318405 -90.46121216]
[24.66306114 -95.52820587]
[31.14255714 -81.99985504]
[43.61850357 -73.86351776]
[42.60152054 -58.07503128]
[49.18154907 -44.59529495]
[55.86174393 -31.16491890]
[68.45744324 -23.21522713]
[67.67564392 -7.41334915]
[80.27133942 0.53634244]
[79.48954010 16.33822060]
[82.01906586 1.55304170]
[91.52603912 -10.04943371]
[105.52536774 -15.43634605]
[120.35765839 -13.19956875]
[132.14578247 -3.92379117]
[137.80836487 9.96632099]
[135.86520386 24.83992577]
[126.82424164 36.80910110]
[113.04877472 42.74512863]
[98.13966370 41.09634781]
[85.99468231 32.29443359]
[90.60869598 46.56716537]
[95.22270203 60.83990097]
[106.49978638 70.57009888]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.61030579 123.54280090]
[120.43630219 137.74525452]
[124.36304474 141.18441772]
[126.37657928 145.36759949]
[126.51387787 149.44143677]
[125.14525604 152.69093323]
[129.33227539 167.09471130]
[133.51928711 181.49848938]
[144.80113220 192.59039307]
[140.92399597 206.97152710]
[145.11100769 221.37532043]
[149.29801941 235.77909851]
[154.69847107 243.14611816]
[153.43843079 250.42855835]
[157.41052246 264.89309692]
[161.38261414 279.35760498]
[172.49807739 290.61624146]
[168.40725708 304.93807983]
[179.52272034 316.19671631]
[175.43188477 330.51852417]
[179.40399170 344.98306274]
[184.73022461 330.96051025]
[196.29142761 321.40338135]
[211.06550598 318.80987549]
[225.19056702 323.85787964]
[234.97436523 335.22790527]
[237.85940552 349.94784546]
[233.09158325 364.16995239]
[221.91716003 374.17654419]
[207.25712585 377.35202026]
[192.94357300 372.86621094]
[182.71846008 361.89257812]
[184.50091553 376.78628540]
[186.28338623 391.67999268]
[188.06585693 406.57373047]
[202.77719116 410.30749512]
[215.14404297 419.10665894]
[223.49389648 431.78121948]
[226.69750977 446.61703491]
[224.32159424 461.60766602]
[216.68751526 474.72579956]
[204.82768250 484.19726562]
[190.34605408 488.74114990]
[175.20115662 487.74295044]
[161.44120789 481.33761597]
[150.92712402 470.39144897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[8 185]
[9 184]
[11 182]
[13 180]
[14 179]
[15 178]
[16 176]
[17 175]
[18 174]
[20 172]
[21 171]
[22 170]
[23 166]
[24 165]
[26 164]
[28 162]
[30 160]
[31 159]
[32 158]
[33 147]
[35 145]
[37 143]
[38 142]
[40 141]
[42 139]
[43 138]
[44 130]
[45 129]
[46 128]
[47 127]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
