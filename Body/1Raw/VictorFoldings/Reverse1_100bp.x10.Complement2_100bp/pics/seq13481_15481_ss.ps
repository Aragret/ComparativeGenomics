%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[101.53363037 707.41101074]
[113.01676941 696.79632568]
[112.12395477 681.82293701]
[111.23114014 666.84954834]
[110.33832550 651.87615967]
[99.06227112 642.21246338]
[97.94352722 627.04003906]
[108.15610504 615.27819824]
[107.26329041 600.30480957]
[106.37047577 585.33135986]
[97.53414154 577.07031250]
[96.66777802 564.60302734]
[104.77993011 554.57525635]
[104.11014557 539.59020996]
[103.44036102 524.60516357]
[102.77057648 509.62011719]
[92.54291534 495.35961914]
[101.16441345 479.08843994]
[100.27159882 464.11505127]
[89.83275604 450.00839233]
[98.21103668 433.61065674]
[97.09539032 418.65219116]
[95.97973633 403.69375610]
[94.86408997 388.73529053]
[93.74844360 373.77685547]
[91.71478271 371.84750366]
[90.32282257 368.99633789]
[89.92750549 365.46377563]
[90.79026031 361.61407471]
[93.03877258 357.89947510]
[92.81544495 342.90115356]
[84.35680389 334.25372314]
[84.04799652 321.76019287]
[92.59982300 312.10467529]
[92.59982300 297.10467529]
[92.59982300 282.10467529]
[92.59982300 267.10467529]
[82.30342102 259.35781860]
[78.28899384 246.90927124]
[82.23540497 234.23503113]
[92.91584015 226.02876282]
[93.13916779 211.03042603]
[85.59221649 198.18936157]
[93.53412628 184.50592041]
[93.53412628 169.50592041]
[93.31079865 154.50758362]
[93.08747101 139.50924683]
[92.86414337 124.51090240]
[92.64081573 109.51256561]
[92.19420624 94.51921844]
[83.84841156 81.07830048]
[91.00969696 68.01823425]
[90.33991241 53.03319168]
[89.67012024 38.04815292]
[81.37040710 50.54273987]
[67.97959137 57.30189133]
[52.99800873 56.55878067]
[40.34180832 48.50765610]
[33.31929016 35.25306320]
[33.76612473 20.25971985]
[41.56550598 7.44685030]
[54.67869949 0.16370776]
[69.67794800 0.31408814]
[82.64247894 7.85868263]
[90.18316650 20.82449532]
[91.74368286 5.90589142]
[93.30420685 -9.01271343]
[91.08457184 -17.87335777]
[95.00064087 -24.14122963]
[96.78310394 -39.03494644]
[89.43924713 -49.63827896]
[91.23048401 -62.00659180]
[100.65677643 -69.58760071]
[102.66078949 -84.45312500]
[100.70595551 -93.37593079]
[104.80690002 -99.52442932]
[107.03202057 -114.35846710]
[109.25713348 -129.19252014]
[103.65257263 -143.98776245]
[113.19224548 -155.42646790]
[115.41736603 -170.26051331]
[116.42162323 -185.22685242]
[116.19829559 -200.22518921]
[115.97496796 -215.22352600]
[115.75164032 -230.22186279]
[104.69253540 -241.19155884]
[104.67971039 -256.40518188]
[115.20578003 -266.88073730]
[114.98245239 -281.87908936]
[114.75912476 -296.87741089]
[114.53579712 -311.87576294]
[102.01580811 -320.85104370]
[97.23727417 -335.30853271]
[101.83374786 -349.63809204]
[113.84291840 -358.40838623]
[113.61959076 -373.40670776]
[113.39626312 -388.40505981]
[113.17293549 -403.40338135]
[99.15341949 -409.35092163]
[88.76976776 -420.49090576]
[83.82101440 -434.89334106]
[85.16456604 -450.06286621]
[92.56764221 -463.37130737]
[104.74761200 -472.51284790]
[119.59423065 -475.90371704]
[134.53521729 -472.95639038]
[146.98196411 -464.18154907]
[154.77799988 -451.09942627]
[156.57261658 -435.97662354]
[152.05487061 -421.43322754]
[142.00750732 -409.98901367]
[128.17127991 -403.62670898]
[128.39460754 -388.62838745]
[128.61793518 -373.63003540]
[128.84126282 -358.63171387]
[141.10623169 -350.22286987]
[146.12730408 -336.03652954]
[141.78135681 -321.44317627]
[129.53413391 -312.09909058]
[129.75746155 -297.10073853]
[129.98078918 -282.10241699]
[130.20411682 -267.10406494]
[141.03742981 -256.94656372]
[141.47756958 -241.73928833]
[130.74996948 -230.44519043]
[130.97329712 -215.44685364]
[131.19662476 -200.44851685]
[131.41996765 -185.45018005]
[139.69248962 -197.96278381]
[152.78759766 -205.27841187]
[167.77976990 -205.76274109]
[181.31974792 -199.30757141]
[190.38264465 -187.35499573]
[192.94378662 -172.57527161]
[188.43103027 -158.27020264]
[177.85250854 -147.63558960]
[163.57150269 -143.04722595]
[148.77844238 -145.53018188]
[136.77810669 -154.52972412]
[130.25140381 -168.03538513]
[128.02629089 -153.20135498]
[133.79000854 -139.46713257]
[124.09117889 -126.96739960]
[121.86605835 -112.13335419]
[119.64094543 -97.29930878]
[117.52632141 -82.44911194]
[115.52230835 -67.58358002]
[123.05278015 -51.73243713]
[111.67681885 -37.25248337]
[109.89435577 -22.35876465]
[108.22281647 -7.45219040]
[106.66229248 7.46641445]
[105.10176849 22.38501930]
[104.65515900 37.37836838]
[105.32495117 52.36340714]
[105.99473572 67.34844971]
[114.29261780 79.71753693]
[107.17924500 93.84943390]
[110.14834595 98.17359924]
[110.48334503 103.85348511]
[107.63915253 109.28923798]
[107.86248016 124.28757477]
[108.08580780 139.28591919]
[108.30913544 154.28425598]
[108.53246307 169.28259277]
[111.58963776 175.14477539]
[111.27466583 180.81907654]
[108.53246307 184.72924805]
[116.06343842 198.64308167]
[108.13750458 211.25375366]
[107.91417694 226.25209045]
[120.32616425 238.57937622]
[119.98908234 255.73165894]
[107.59982300 267.10467529]
[107.59982300 282.10467529]
[107.59982300 297.10467529]
[107.59982300 312.10467529]
[117.17450714 327.83383179]
[107.81378174 342.67782593]
[108.03710938 357.67614746]
[108.70689392 372.66119385]
[109.82254791 387.61965942]
[110.93819427 402.57809448]
[112.05384064 417.53656006]
[113.16948700 432.49499512]
[122.41577148 441.48773193]
[123.03704834 453.96963501]
[115.24500275 463.22222900]
[116.13781738 478.19561768]
[125.24918365 487.32501221]
[125.68455505 499.81478882]
[117.75561523 508.95034790]
[118.42539978 523.93536377]
[119.09518433 538.92041016]
[119.76496887 553.90545654]
[130.03245544 569.19140625]
[121.34387970 584.43853760]
[122.23669434 599.41198730]
[123.12951660 614.38537598]
[134.66740417 624.85028076]
[135.35954285 640.04821777]
[125.31172943 650.98333740]
[126.20454407 665.95672607]
[127.09735870 680.93011475]
[127.99018097 695.90350342]
[140.65330505 705.07843018]
[144.40614319 720.25903320]
[137.47671509 734.27746582]
[123.13687897 740.51470947]
[108.15747070 736.02569580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[8 199]
[9 198]
[10 197]
[13 195]
[14 194]
[15 193]
[16 192]
[18 189]
[19 188]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[30 180]
[31 179]
[34 177]
[35 176]
[36 175]
[37 174]
[41 171]
[42 170]
[44 168]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 158]
[52 156]
[53 155]
[54 154]
[65 153]
[66 152]
[67 151]
[69 150]
[70 149]
[73 147]
[74 146]
[76 145]
[77 144]
[78 143]
[80 141]
[81 140]
[82 128]
[83 127]
[84 126]
[85 125]
[88 122]
[89 121]
[90 120]
[91 119]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
