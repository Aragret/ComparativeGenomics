%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[111.95574951 700.68402100]
[99.02914429 708.42028809]
[84.70497894 713.08569336]
[69.70175171 714.44622803]
[54.77201843 712.43353271]
[40.66464996 707.14868164]
[28.08726501 698.85668945]
[17.67073822 687.97351074]
[9.93756104 675.04498291]
[5.27562475 660.71972656]
[3.91876984 645.71612549]
[5.93505621 630.78692627]
[11.22334766 616.68078613]
[19.51838493 604.10546875]
[30.40409470 593.69152832]
[43.33445358 585.96148682]
[57.66087723 581.30303955]
[72.66476440 579.94982910]
[74.66877747 565.08428955]
[68.70121002 551.43737793]
[78.21286774 538.79467773]
[80.21688080 523.92913818]
[82.22089386 509.06359863]
[84.22490692 494.19808960]
[78.25734711 480.55117798]
[87.76899719 467.90844727]
[89.77301025 453.04290771]
[91.77702332 438.17739868]
[82.60791016 429.12438965]
[80.29261017 416.25109863]
[85.89693451 404.21774292]
[97.57798767 397.51193237]
[99.80310822 382.67788696]
[102.02822113 367.84384155]
[104.25334167 353.00979614]
[105.25759888 338.04345703]
[105.03427124 323.04513550]
[104.81094360 308.04678345]
[104.58761597 293.04846191]
[92.49996185 276.31964111]
[103.23878479 257.77536011]
[102.34597015 242.80194092]
[101.45314789 227.82853699]
[100.56033325 212.85513306]
[99.66751862 197.88172913]
[98.66326141 182.91537476]
[97.54760742 167.95692444]
[96.43196106 152.99847412]
[95.31631470 138.04002380]
[94.20066833 123.08156586]
[93.08501434 108.12311554]
[90.52918243 93.34246063]
[86.55709076 78.87793732]
[82.58499146 64.41341400]
[78.50532532 49.97885895]
[74.31831360 35.57507706]
[70.13130188 21.17129517]
[65.94429016 6.76751232]
[61.75727844 -7.63626957]
[56.35683060 -15.00328732]
[57.61687088 -22.28573799]
[53.64477539 -36.75026321]
[47.77407455 -22.94682312]
[35.43283081 -14.42076492]
[20.44510841 -13.81397820]
[7.45501900 -21.31448174]
[0.48768139 -34.59816360]
[1.70200169 -49.54893112]
[10.72170925 -61.53412628]
[24.75195122 -66.84000397]
[39.44530106 -63.82247925]
[50.24899673 -53.41634750]
[48.24498367 -68.28187561]
[46.24097061 -83.14740753]
[36.72931671 -95.79015350]
[42.69688034 -109.43703461]
[40.69286346 -124.30256653]
[36.44499588 -132.38919067]
[38.77138519 -139.40414429]
[36.98891830 -154.29786682]
[32.86191559 -162.44683838]
[35.29248810 -169.42637634]
[32.22499466 -173.64984131]
[31.18797302 -178.17507935]
[31.95637131 -182.17816162]
[34.01071167 -185.04382324]
[33.11789703 -200.01722717]
[32.22508240 -214.99063110]
[31.33226585 -229.96403503]
[30.43944931 -244.93743896]
[15.57777023 -247.40284729]
[1.63750780 -253.11396790]
[-10.68210125 -261.78433228]
[-20.76310921 -272.97900391]
[-28.09985924 -286.13650513]
[-32.32434082 -300.59683228]
[-33.22465515 -315.63470459]
[-30.75564575 -330.49578857]
[-25.04115677 -344.43466187]
[-16.36782074 -356.75216675]
[-5.17069244 -366.83047485]
[7.98858690 -374.16403198]
[22.44995117 -378.38500977]
[37.48802948 -379.28167725]
[52.34851074 -376.80908203]
[66.28600311 -371.09118652]
[78.60140991 -362.41488647]
[88.67699432 -351.21530151]
[96.00736237 -338.05426025]
[100.22483826 -323.59185791]
[101.11786652 -308.55358887]
[98.64165497 -293.69369507]
[92.92041016 -279.75759888]
[84.24110413 -267.44427490]
[73.03909302 -257.37139893]
[59.87626266 -250.04423523]
[45.41285706 -245.83026123]
[46.30567169 -230.85685730]
[47.19848633 -215.88345337]
[48.09130096 -200.91004944]
[48.98411942 -185.93663025]
[50.21109390 -170.98690796]
[51.88263321 -156.08033752]
[53.66510010 -141.18661499]
[55.55839157 -126.30657959]
[57.56240845 -111.44104767]
[66.93071747 -99.86158752]
[61.10649872 -85.15142059]
[63.11051178 -70.28588867]
[65.11452484 -55.42036057]
[68.10929871 -40.72235870]
[72.08139801 -26.25783348]
[76.16106415 -11.82328033]
[80.34807587 2.58050132]
[84.53508759 16.98428345]
[88.72209930 31.38806534]
[92.90910339 45.79184723]
[97.79473877 51.33733368]
[97.04951477 60.44131470]
[101.02161407 74.90583801]
[104.99370575 89.37036133]
[109.18137360 74.96677399]
[118.80310822 63.45928192]
[132.23747253 56.78710938]
[147.22053528 56.07463074]
[161.22740173 61.44191360]
[171.89765930 71.98447418]
[177.43318176 85.92570496]
[176.90115356 100.91626740]
[170.39120483 114.42998505]
[159.00038147 124.18955994]
[144.64825439 128.55033875]
[129.75340271 126.77743530]
[116.82585144 119.16963959]
[108.04347229 107.00746155]
[109.15911865 121.96591949]
[110.27476501 136.92437744]
[111.39041901 151.88282776]
[112.50606537 166.84127808]
[113.62171173 181.79972839]
[117.38072968 190.12484741]
[114.64092255 196.98890686]
[115.53374481 211.96231079]
[116.42655945 226.93571472]
[117.31937408 241.90911865]
[118.21218872 256.88253784]
[126.03482819 262.14688110]
[130.49208069 270.29946899]
[130.69522095 279.45114136]
[126.72515106 287.54641724]
[119.58595276 292.82513428]
[119.80928040 307.82345581]
[120.03260803 322.82180786]
[120.25593567 337.82012939]
[128.52847290 325.30752563]
[141.62356567 317.99191284]
[156.61575317 317.50756836]
[170.15571594 323.96273804]
[179.21861267 335.91531372]
[181.77976990 350.69503784]
[177.26699829 365.00012207]
[166.68847656 375.63473511]
[152.40748596 380.22308350]
[137.61441040 377.74014282]
[125.61407471 368.74060059]
[119.08738708 355.23492432]
[116.86226654 370.06896973]
[114.63714600 384.90301514]
[112.41203308 399.73706055]
[123.06581116 413.61209106]
[120.44018555 430.56558228]
[106.64255524 440.18139648]
[104.63854218 455.04693604]
[102.63452148 469.91244507]
[108.45874786 484.62261963]
[99.09043121 496.20208740]
[97.08641815 511.06762695]
[95.08240509 525.93316650]
[93.07839203 540.79864502]
[98.90261841 555.50885010]
[89.53430176 567.08831787]
[87.53028870 581.95385742]
[101.64022064 587.23187256]
[114.22161865 595.51776123]
[124.64341736 606.39587402]
[132.38285828 619.32061768]
[137.05174255 633.64367676]
[138.41586304 648.64654541]
[136.40681458 663.57678223]
[131.12535095 677.68542480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 202]
[19 201]
[21 199]
[22 198]
[23 197]
[24 196]
[26 194]
[27 193]
[28 192]
[32 189]
[33 188]
[34 187]
[35 186]
[36 174]
[37 173]
[38 172]
[39 171]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 141]
[53 140]
[54 139]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[61 132]
[62 131]
[72 130]
[73 129]
[74 128]
[76 126]
[77 125]
[79 124]
[80 123]
[82 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
