%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[215.09292603 506.86145020]
[214.77526855 491.85296631]
[215.90765381 476.88388062]
[218.47947693 462.09399414]
[222.46675110 447.62136841]
[227.83222961 433.60110474]
[234.52583313 420.16418457]
[242.48504639 407.43600464]
[251.63557434 395.53543091]
[261.89196777 384.57360840]
[273.15844727 374.65283203]
[264.37783813 362.49136353]
[255.59724426 350.32992554]
[246.81663513 338.16845703]
[238.03604126 326.00698853]
[229.25543213 313.84555054]
[215.53210449 308.05593872]
[213.72697449 292.33804321]
[204.94636536 280.17660522]
[196.16575623 268.01513672]
[192.76190186 267.09530640]
[189.63447571 264.48104858]
[187.57499695 260.32031250]
[187.27899170 255.10884094]
[179.05018616 242.56744385]
[170.82138062 230.02604675]
[162.59255981 217.48463440]
[159.23318481 216.41372681]
[156.22560120 213.66244507]
[154.35395813 209.41389465]
[154.29095459 204.19439697]
[146.63035583 191.29806519]
[138.96975708 178.40173340]
[131.30915833 165.50541687]
[123.55277252 152.66647339]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[73.74761200 77.26824951]
[71.12051392 72.22886658]
[71.48119354 67.46662903]
[64.01345062 54.45767593]
[56.54570770 41.44872284]
[54.31872177 56.28248596]
[44.50579834 67.62737274]
[30.14757729 71.96805573]
[15.69311047 67.95951843]
[5.62127113 56.84384918]
[3.05292845 42.06536484]
[8.78391171 28.20333672]
[21.03841209 19.55306435]
[36.01924133 18.79492950]
[49.08460617 26.16403389]
[43.42181778 12.27400684]
[37.75903320 -1.61602044]
[31.62145996 -8.38122654]
[32.11703491 -15.75524807]
[26.66167831 -29.72804642]
[21.20632172 -43.70084381]
[15.75096416 -57.67364120]
[10.29560757 -71.64643860]
[4.84025002 -85.61923981]
[-0.61510694 -99.59203339]
[-6.07046413 -113.56483459]
[-11.52582073 -127.53762817]
[-23.75226021 -137.57878113]
[-21.17359924 -152.24847412]
[-26.62895775 -166.22126770]
[-32.08431244 -180.19406128]
[-46.72863388 -176.82334900]
[-61.70767975 -175.62086487]
[-76.70217896 -176.61225891]
[-91.39251709 -179.77638245]
[-105.46557617 -185.04582214]
[-118.62138367 -192.30824280]
[-130.57951355 -201.40882874]
[-141.08509827 -212.15362549]
[-149.91419983 -224.31359863]
[-156.87861633 -237.62956238]
[-161.82991028 -251.81767273]
[-164.66253662 -266.57553101]
[-165.31613159 -281.58853149]
[-163.77676392 -296.53671265]
[-160.07722473 -311.10144043]
[-154.29638672 -324.97225952]
[-146.55746460 -337.85354614]
[-137.02542114 -349.47067261]
[-125.90342712 -359.57608032]
[-113.42853546 -367.95431519]
[-99.86666870 -374.42684937]
[-85.50688934 -378.85568237]
[-70.65528107 -381.14642334]
[-55.62840271 -381.25027466]
[-40.74655533 -379.16497803]
[-26.32694435 -374.93499756]
[-12.67692852 -368.65051270]
[-0.08745508 -360.44543457]
[11.17312908 -350.49468994]
[20.86480331 -339.01040649]
[28.78099060 -326.23730469]
[34.75295639 -312.44769287]
[38.65340424 -297.93548584]
[40.39920425 -283.00997925]
[39.95313644 -267.98937988]
[37.32471085 -253.19380188]
[32.56995392 -238.93861389]
[25.79021454 -225.52769470]
[17.13000107 -213.24687195]
[6.77390671 -202.35792542]
[-5.05732679 -193.09294128]
[-18.11151695 -185.64942932]
[-12.65615940 -171.67662048]
[-7.20080185 -157.70382690]
[4.63543463 -148.66210938]
[2.44697666 -132.99298096]
[7.90233374 -119.02018738]
[13.35769081 -105.04739380]
[18.81304741 -91.07459259]
[24.26840591 -77.10179901]
[29.72376251 -63.12899780]
[35.17911911 -49.15620041]
[40.63447571 -35.18340302]
[46.08983231 -21.21060562]
[51.64905930 -7.27880716]
[57.31184387 6.61121988]
[62.97463226 20.50124741]
[69.55465698 33.98097992]
[77.02239990 46.98993301]
[84.49014282 59.99888611]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[136.33361816 144.81471252]
[143.49211121 150.48866272]
[144.20549011 157.84481812]
[151.86608887 170.74113464]
[159.52668762 183.63746643]
[167.18728638 196.53379822]
[175.13397217 209.25582886]
[183.36277771 221.79722595]
[191.59158325 234.33863831]
[199.82038879 246.88003540]
[208.32720947 259.23452759]
[217.10781860 271.39599609]
[225.88842773 283.55746460]
[240.23980713 290.21691895]
[241.41688538 305.06494141]
[250.19749451 317.22640991]
[258.97808838 329.38784790]
[267.75869751 341.54931641]
[276.53930664 353.71075439]
[285.31991577 365.87222290]
[298.28198242 358.29989624]
[311.91439819 352.01397705]
[326.08984375 347.07312012]
[340.67599487 343.52349854]
[355.53662109 341.39819336]
[370.53302002 340.71710205]
[385.52514648 341.48657227]
[400.37298584 343.69943237]
[414.93795776 347.33499146]
[429.08404541 352.35931396]
[442.67916870 358.72549438]
[455.59637451 366.37408447]
[467.71508789 375.23367310]
[478.92214966 385.22152710]
[489.11288452 396.24441528]
[498.19219971 408.19940186]
[506.07528687 420.97488403]
[512.68853760 434.45153809]
[517.97021484 448.50357056]
[521.87097168 462.99975586]
[524.35449219 477.80474854]
[525.39746094 492.78033447]
[524.99017334 507.78665161]
[523.13647461 522.68359375]
[519.85363770 537.33209229]
[515.17236328 551.59539795]
[509.13629150 565.34020996]
[501.80181885 578.43835449]
[493.23742676 590.76745605]
[483.52304077 602.21240234]
[472.74942017 612.66632080]
[461.01715088 622.03161621]
[448.43572998 630.22088623]
[435.12268066 637.15759277]
[421.20227051 642.77703857]
[406.80450439 647.02667236]
[392.06378174 649.86688232]
[377.11776733 651.27117920]
[362.10598755 651.22631836]
[347.16860962 649.73284912]
[332.44512939 646.80468750]
[318.07296753 642.46911621]
[304.18637085 636.76672363]
[290.91497803 629.75061035]
[278.38269043 621.48638916]
[266.70651245 612.05120850]
[255.99551392 601.53314209]
[246.34967041 590.03039551]
[237.85902405 577.65039062]
[230.60289001 564.50866699]
[224.64900208 550.72802734]
[220.05294800 536.43707275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[18 151]
[19 150]
[20 149]
[24 148]
[25 147]
[26 146]
[27 145]
[31 144]
[32 143]
[33 142]
[34 141]
[35 139]
[36 138]
[37 137]
[38 136]
[40 134]
[41 133]
[44 132]
[45 131]
[46 130]
[56 129]
[57 128]
[58 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[70 116]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
