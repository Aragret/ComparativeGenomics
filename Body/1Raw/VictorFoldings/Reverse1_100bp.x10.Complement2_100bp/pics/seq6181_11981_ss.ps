%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[-19.15113068 326.48809814]
[-11.67454624 339.51937866]
[-6.04208994 353.44738770]
[-2.35869265 368.01263428]
[-0.69297361 382.94378662]
[-1.07596397 397.96267700]
[-3.50052905 412.78952026]
[-7.92150021 427.14807129]
[-14.25651836 440.77090454]
[-22.38756561 453.40420532]
[-32.16316605 464.81259155]
[-43.40120316 474.78353882]
[-55.89232254 483.13134766]
[-69.40382385 489.70046997]
[-83.68399048 494.36849976]
[-98.46678925 497.04849243]
[-113.47683716 497.69055176]
[-128.43450928 496.28268433]
[-143.06112671 492.85113525]
[-157.08422852 487.45980835]
[-170.24256897 480.20916748]
[-182.29101562 471.23425293]
[-193.00509644 460.70230103]
[-202.18524170 448.80950928]
[-209.66041565 435.77740479]
[-215.29136658 421.84881592]
[-218.97319031 407.28317261]
[-220.63729858 392.35183716]
[-220.25267029 377.33297729]
[-217.82650757 362.50640869]
[-213.40397644 348.14831543]
[-207.06748962 334.52615356]
[-198.93507385 321.89376831]
[-189.15824890 310.48641968]
[-177.91912842 300.51666260]
[-165.42710876 292.17022705]
[-151.91488647 285.60260010]
[-137.63421631 280.93609619]
[-122.85112762 278.25769043]
[-107.84101105 277.61724854]
[-92.88349915 279.02676392]
[-78.25724030 282.45989990]
[-64.23472595 287.85272217]
[-51.07717133 295.10479736]
[-42.11647415 283.07540894]
[-33.15578079 271.04605103]
[-31.75775909 256.21719360]
[-17.30882072 249.77214050]
[-8.34812546 237.74275208]
[0.61257064 225.71337891]
[2.01059103 210.88453674]
[16.45952797 204.43946838]
[25.42022514 192.41009521]
[21.68658257 174.48872375]
[32.42233276 159.26844788]
[51.19041061 156.68513489]
[59.78897476 144.39430237]
[68.38753510 132.10345459]
[76.98609924 119.81262207]
[85.58466339 107.52178192]
[84.25228119 95.95173645]
[90.99935913 86.45867157]
[102.36426544 83.91307068]
[111.14487457 71.75161743]
[118.61260986 58.74266434]
[124.68644714 45.02739716]
[130.76028442 31.31212997]
[136.83412170 17.59686279]
[142.90794373 3.88159561]
[148.98178101 -9.83367062]
[134.63514709 -5.45486641]
[121.33001709 -12.38116932]
[116.68818665 -26.64488029]
[123.36870575 -40.07509613]
[137.54466248 -44.97837830]
[151.09542847 -38.54590988]
[156.25854492 -24.46344185]
[163.53178406 -37.58213806]
[170.80500793 -50.70083237]
[178.07823181 -63.81952286]
[185.35147095 -76.93821716]
[192.62469482 -90.05691528]
[199.89793396 -103.17560577]
[207.17115784 -116.29430389]
[214.44438171 -129.41299438]
[221.71762085 -142.53169250]
[228.99084473 -155.65037537]
[228.91542053 -171.47140503]
[241.85353088 -178.85073853]
[249.12675476 -191.96943665]
[256.39999390 -205.08813477]
[263.67321777 -218.20683289]
[270.94644165 -231.32551575]
[278.21966553 -244.44421387]
[285.39505005 -257.61669922]
[292.47213745 -270.84222412]
[280.16125488 -279.44326782]
[268.95407104 -289.44003296]
[259.00790405 -300.69216919]
[250.46243286 -313.04171753]
[243.43759155 -326.31527710]
[238.03199768 -340.32656860]
[234.32154846 -354.87884521]
[232.35832214 -369.76785278]
[232.16987610 -384.78454590]
[233.75888062 -399.71810913]
[237.10299683 -414.35891724]
[242.15530396 -428.50140381]
[248.84486389 -441.94708252]
[257.07775879 -454.50717163]
[266.73843384 -466.00534058]
[277.69125366 -476.28018188]
[289.78244019 -485.18743896]
[302.84228516 -492.60208130]
[316.68740845 -498.42004395]
[331.12350464 -502.55960083]
[345.94784546 -504.96264648]
[360.95239258 -505.59545898]
[375.92645264 -504.44918823]
[390.65982056 -501.53988647]
[404.94567871 -496.90838623]
[418.58346558 -490.61975098]
[431.38171387 -482.76220703]
[443.16079712 -473.44610596]
[453.75531006 -462.80221558]
[463.01657104 -450.97994995]
[470.81451416 -438.14529419]
[477.03970337 -424.47842407]
[481.60473633 -410.17120361]
[484.44552612 -395.42446899]
[485.52218628 -380.44525146]
[484.81961060 -365.44381714]
[482.34768677 -350.63079834]
[478.14105225 -336.21411133]
[472.25881958 -322.39614868]
[464.78353882 -309.37094116]
[455.82015991 -297.32125854]
[445.49453735 -286.41635132]
[433.95156860 -276.80923462]
[421.35336304 -268.63479614]
[407.87673950 -262.00781250]
[393.71087646 -257.02133179]
[379.05468750 -253.74528503]
[364.11389160 -252.22573853]
[349.09826660 -252.48397827]
[334.21853638 -254.51638794]
[319.68365479 -258.29443359]
[305.69766235 -263.76510620]
[298.62057495 -250.53958130]
[298.23635864 -243.15892029]
[291.33837891 -237.17098999]
[284.06512451 -224.05229187]
[276.79190063 -210.93359375]
[269.51867676 -197.81489563]
[262.24545288 -184.69621277]
[254.97221375 -171.57751465]
[255.56787109 -156.69482422]
[242.10954285 -148.37715149]
[234.83630371 -135.25845337]
[227.56307983 -122.13976288]
[220.28985596 -109.02107239]
[213.01661682 -95.90237427]
[205.74339294 -82.78368378]
[198.47016907 -69.66498566]
[191.19692993 -56.54629517]
[183.92370605 -43.42760086]
[176.65046692 -30.30890656]
[169.37724304 -17.19021225]
[162.69705200 -3.75983715]
[156.62321472 9.95543003]
[150.54937744 23.67069626]
[144.47554016 37.38596344]
[138.40171814 51.10123062]
[132.32788086 64.81649780]
[144.52651978 56.08763123]
[159.11940002 52.61662674]
[173.94174194 54.91837692]
[186.79475403 62.65143967]
[195.77175903 74.66865540]
[199.54106140 89.18733978]
[197.54351807 104.05374146]
[190.07546997 117.06251526]
[178.24472046 126.28387451]
[163.80632019 130.34989929]
[148.90211487 128.65742493]
[135.74304199 121.45749664]
[126.28118134 109.81819916]
[121.92015076 95.46614838]
[123.30632782 80.53221893]
[114.52572632 92.69367218]
[113.25329590 109.41961670]
[97.87550354 116.12034607]
[89.27693939 128.41117859]
[80.67837524 140.70202637]
[72.07981110 152.99285889]
[63.48124695 165.28369141]
[67.78963470 176.36405945]
[66.23030090 188.02894592]
[59.30529404 197.39581299]
[48.82799911 202.20642090]
[37.44960022 201.37078857]
[28.48890495 213.40016174]
[26.44995689 229.08944702]
[12.64194870 234.67407227]
[3.68125224 246.70346069]
[-5.27944374 258.73281860]
[-7.31839323 274.42211914]
[-21.12640190 280.00674438]
[-30.08709717 292.03613281]
[-39.04779434 304.06549072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[46 208]
[48 206]
[49 205]
[50 204]
[52 202]
[53 201]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[63 190]
[64 189]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 169]
[77 168]
[78 167]
[79 166]
[80 165]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 149]
[96 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
