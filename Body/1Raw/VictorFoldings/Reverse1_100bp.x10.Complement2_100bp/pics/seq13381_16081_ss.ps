%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-55.21921158 470.42047119]
[-47.29184341 483.19799805]
[-41.63807678 497.13150024]
[-38.42057037 511.82012939]
[-37.73190689 526.84124756]
[-39.59189987 541.76263428]
[-43.94702911 556.15502930]
[-50.67198944 569.60430908]
[-59.57329559 581.72351074]
[-70.39482880 592.16394043]
[-82.82524872 600.62518311]
[-96.50688934 606.86383057]
[-111.04611206 610.70037842]
[-126.02459717 612.02441406]
[-141.01138306 610.79785156]
[-155.57525635 607.05596924]
[-169.29719543 600.90649414]
[-181.78239441 592.52630615]
[-192.67163086 582.15649414]
[-201.65159607 570.09545898]
[-208.46392822 556.69024658]
[-212.91259766 542.32647705]
[-214.86962891 527.41748047]
[-214.27871704 512.39221191]
[-211.15684509 497.68298340]
[-205.59385681 483.71298218]
[-197.74978638 470.88415527]
[-187.85034180 459.56561279]
[-176.18034363 450.08303833]
[-163.07556152 442.70925903]
[-148.91305542 437.65643311]
[-134.10029602 435.06988525]
[-119.06347656 435.02410889]
[-104.23523712 437.52041626]
[-90.04222107 442.48693848]
[-82.76899719 429.36822510]
[-75.49576569 416.24954224]
[-68.22253418 403.13085938]
[-68.81819916 388.24816895]
[-55.35985565 379.93048096]
[-48.08662796 366.81179810]
[-40.81339645 353.69308472]
[-40.31935501 346.31896973]
[-33.33296585 340.43438721]
[-25.86522484 327.42544556]
[-32.41794586 317.20599365]
[-34.01330185 305.09866333]
[-30.28769875 293.39306641]
[-21.88967896 284.32925415]
[-10.36794567 279.66897583]
[2.11400938 280.35351562]
[9.96576500 267.57269287]
[17.81752014 254.79183960]
[25.66927528 242.01100159]
[33.52103043 229.23016357]
[41.37278748 216.44931030]
[48.15277863 203.06904602]
[47.76704407 195.68846130]
[54.00466156 189.01538086]
[59.87362289 175.21121216]
[65.74258423 161.40702820]
[71.61154175 147.60284424]
[77.48050690 133.79867554]
[83.34946442 119.99449921]
[75.66725922 109.21617889]
[74.28149414 96.05303955]
[79.55075073 83.91123199]
[90.11154175 75.93262482]
[103.23110962 74.18178558]
[109.30494690 60.46651840]
[115.37877655 46.75125504]
[121.45261383 33.03598785]
[127.52644348 19.32072067]
[126.03983307 3.56951165]
[138.26800537 -4.93467855]
[136.78138733 -20.68588638]
[149.00955200 -29.19007683]
[154.25627136 -43.24254608]
[158.65727234 -57.58239365]
[163.05827332 -71.92224121]
[167.45925903 -86.26209259]
[153.18661499 -81.64779663]
[140.59649658 -89.80185699]
[138.96984863 -104.71340179]
[149.50579834 -115.39019012]
[164.43762207 -113.96169281]
[172.75790405 -101.48258209]
[178.21325684 -115.45538330]
[183.66862488 -129.42817688]
[189.12397766 -143.40097046]
[194.57933044 -157.37377930]
[192.39088440 -173.04289246]
[204.22711182 -182.08460999]
[209.68246460 -196.05741882]
[196.50302124 -203.26370239]
[184.35333252 -212.09620667]
[173.43290710 -222.40991211]
[163.92105103 -234.03546143]
[155.97399902 -246.78192139]
[149.72221375 -260.44003296]
[145.26835632 -274.78546143]
[142.68559265 -289.58267212]
[142.01629639 -304.58868408]
[143.27148438 -319.55706787]
[146.43052673 -334.24206543]
[151.44157410 -348.40249634]
[158.22232056 -361.80584717]
[166.66142273 -374.23202515]
[176.62030029 -385.47695923]
[187.93544006 -395.35604858]
[200.42100525 -403.70703125]
[213.87199402 -410.39276123]
[228.06752014 -415.30349731]
[242.77449036 -418.35858154]
[257.75140381 -419.50784302]
[272.75228882 -418.73239136]
[287.53085327 -416.04501343]
[301.84442139 -411.48977661]
[315.45794678 -405.14151001]
[328.14788818 -397.10446167]
[339.70584106 -387.51062012]
[349.94201660 -376.51748657]
[358.68835449 -364.30560303]
[365.80120850 -351.07550049]
[371.16378784 -337.04443359]
[374.68804932 -322.44281006]
[376.31610107 -307.51034546]
[376.02117920 -292.49230957]
[373.80819702 -277.63531494]
[369.71343994 -263.18325806]
[363.80419922 -249.37351990]
[356.17742920 -236.43284607]
[346.95843506 -224.57374573]
[336.29858398 -213.99093628]
[324.37292480 -204.85820007]
[311.37725830 -197.32553101]
[297.52502441 -191.51658630]
[283.04367065 -187.52677917]
[268.17098999 -185.42161560]
[253.15119934 -185.23567200]
[238.23095703 -186.97198486]
[223.65527344 -190.60205078]
[218.19990540 -176.62925720]
[220.77857971 -161.95956421]
[208.55213928 -151.91841125]
[203.09677124 -137.94561768]
[197.64141846 -123.97282410]
[192.18606567 -110.00002289]
[186.73069763 -96.02722931]
[181.79911804 -81.86109161]
[177.39811707 -67.52124786]
[172.99711609 -53.18139648]
[168.59611511 -38.84154892]
[181.34928894 -46.73816299]
[196.31642151 -45.74557877]
[207.91511536 -36.23400497]
[211.81938171 -21.75102234]
[206.57299805 -7.69842625]
[194.13273621 0.68251240]
[179.13851929 0.26591057]
[167.18281555 -8.79284954]
[162.72482300 -23.11624336]
[164.64587402 -8.34604263]
[151.98326111 1.13915563]
[153.90431213 15.90935612]
[141.24171448 25.39455414]
[135.16787720 39.10982132]
[129.09403992 52.82508850]
[123.02021027 66.54035187]
[116.94638062 80.25562286]
[125.35777283 94.16873169]
[123.86883545 110.35851288]
[113.06089783 122.50407410]
[97.15364075 125.86345673]
[91.28468323 139.66763306]
[85.41571808 153.47181702]
[79.54676056 167.27598572]
[73.67780304 181.08016968]
[67.80883789 194.88433838]
[62.04280472 208.73182678]
[74.55157471 200.45350647]
[89.46504974 198.84472656]
[103.45153046 204.26490784]
[113.38639832 215.50315857]
[117.05017853 230.04884338]
[113.62436676 244.65238953]
[103.87430573 256.05136108]
[89.97818756 261.69915771]
[75.04042816 260.33410645]
[62.39817047 252.26109314]
[54.87572479 239.28370667]
[54.15362930 224.30107117]
[46.30187225 237.08190918]
[38.45011902 249.86276245]
[30.59836197 262.64358521]
[22.74660683 275.42443848]
[14.89485168 288.20529175]
[22.31146049 304.75073242]
[18.34628296 322.28231812]
[4.77110147 333.82205200]
[-12.85627174 334.89318848]
[-20.32401276 347.90213013]
[-27.69470215 360.96633911]
[-34.96793365 374.08502197]
[-42.24116135 387.20370483]
[-42.16573334 403.02474976]
[-55.10383987 410.40408325]
[-62.37707138 423.52276611]
[-69.65029907 436.64144897]
[-76.92353058 449.76016235]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[38 207]
[40 205]
[41 204]
[42 203]
[44 202]
[45 201]
[51 197]
[52 196]
[53 195]
[54 194]
[55 193]
[56 192]
[57 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[64 174]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[75 164]
[77 162]
[78 153]
[79 152]
[80 151]
[81 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[93 143]
[94 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
