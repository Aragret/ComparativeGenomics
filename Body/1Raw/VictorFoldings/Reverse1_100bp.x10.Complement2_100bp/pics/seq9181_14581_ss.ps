%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[109.14255524 556.84863281]
[97.51330566 547.33679199]
[87.28761292 536.33001709]
[78.65597534 524.03332520]
[71.77919006 510.67581177]
[66.78536987 496.50628662]
[63.76755905 481.78872681]
[62.78195953 466.79733276]
[63.84694290 451.81134033]
[66.94267273 437.10998535]
[72.01145935 422.96710205]
[78.95889282 409.64617920]
[87.65554047 397.39538574]
[97.93939209 386.44293213]
[109.61885834 376.99285889]
[122.47636414 369.22122192]
[136.27238464 363.27279663]
[150.74989319 359.25839233]
[148.74588013 344.39288330]
[146.74186707 329.52734375]
[144.73785400 314.66180420]
[142.73384094 299.79629517]
[140.72982788 284.93075562]
[138.17399597 270.15011597]
[135.06988525 255.47480774]
[131.96577454 240.79949951]
[128.42610168 226.22312927]
[124.45400238 211.75860596]
[113.62265015 201.53456116]
[117.42936707 186.17814636]
[113.45726776 171.71362305]
[109.48517609 157.24909973]
[105.51307678 142.78457642]
[101.54097748 128.32005310]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.72686768 48.63646317]
[68.68995667 34.50743484]
[63.65303802 20.37840462]
[58.61611938 6.24937391]
[52.78675079 -0.78314143]
[53.61110306 -8.12767982]
[48.78510284 -22.33013535]
[34.65890121 -34.14250183]
[38.74612045 -51.20888901]
[33.70920563 -65.33791351]
[21.78714752 -75.73864746]
[24.80143738 -90.32505035]
[9.45020676 -88.23682404]
[-5.99476004 -89.37654877]
[-20.86233711 -93.69235992]
[-34.50696945 -100.99441528]
[-46.33671951 -110.96328735]
[-55.83892059 -123.16389465]
[-62.60242462 -137.06449890]
[-66.33536530 -152.05990601]
[-66.87776947 -167.49780273]
[-64.20840454 -182.70709229]
[-58.44559479 -197.02714539]
[-49.84199142 -209.83641052]
[-38.77348709 -220.57946777]
[-25.72278976 -228.79104614]
[-30.96950722 -242.84352112]
[-36.21622467 -256.89599609]
[-42.14965057 -263.84094238]
[-41.43474579 -271.19692993]
[-46.47166061 -285.32595825]
[-51.50857544 -299.45498657]
[-56.54549408 -313.58401489]
[-71.26203156 -310.55587769]
[-86.25679016 -309.60540771]
[-101.23789215 -310.75115967]
[-115.91372681 -313.97079468]
[-129.99862671 -319.20162964]
[-143.21841431 -326.34188843]
[-155.31578064 -335.25256348]
[-166.05523682 -345.76019287]
[-175.22773743 -357.66024780]
[-182.65472412 -370.72109985]
[-188.19165039 -384.68850708]
[-191.73072815 -399.29058838]
[-193.20306396 -414.24313354]
[-192.58001709 -429.25506592]
[-189.87368774 -444.03417969]
[-185.13677979 -458.29275513]
[-178.46147156 -471.75332642]
[-169.97773743 -484.15380859]
[-159.85067749 -495.25286865]
[-148.27743530 -504.83444214]
[-135.48330688 -512.71197510]
[-121.71729279 -518.73223877]
[-107.24738312 -522.77795410]
[-92.35522461 -524.77038574]
[-77.33070374 -524.67077637]
[-62.46627426 -522.48101807]
[-48.05128098 -518.24377441]
[-34.36631393 -512.04156494]
[-21.67775154 -503.99502563]
[-10.23258400 -494.26086426]
[-0.25359416 -483.02850342]
[8.06497478 -470.51660156]
[14.56119823 -456.96871948]
[19.10862541 -442.64855957]
[21.61874199 -427.83486938]
[22.04268456 -412.81597900]
[20.37220192 -397.88427734]
[16.63981056 -383.33041382]
[10.91816235 -369.43765259]
[3.31863165 -356.47644043]
[-6.01085472 -344.69903564]
[-16.88869667 -334.33474731]
[-29.10315132 -325.58526611]
[-42.41646194 -318.62094116]
[-37.37954712 -304.49191284]
[-32.34263229 -290.36288452]
[-27.30571365 -276.23385620]
[-22.16375542 -262.14270020]
[-16.91703606 -248.09024048]
[-11.67031860 -234.03776550]
[2.68679166 -236.34011841]
[17.22185516 -235.78880310]
[31.37298012 -232.40318298]
[44.59273529 -226.31225586]
[56.36932755 -217.74964905]
[66.24641418 -207.04478455]
[73.84079742 -194.61010742]
[78.85726166 -180.92523193]
[81.10009003 -166.51844788]
[80.48066711 -151.94630432]
[77.02098846 -137.77215576]
[70.85289001 -124.54432678]
[62.21302032 -112.77492523]
[51.43376923 -102.92002106]
[38.93046570 -95.36196899]
[50.49225235 -85.97184753]
[47.83823395 -70.37483215]
[52.87515259 -56.24580383]
[63.66621399 -50.77958679]
[67.97818756 -39.04967880]
[62.98756027 -27.15613365]
[67.81356049 -12.95367718]
[72.74514771 1.21245790]
[77.78206635 15.34148788]
[82.81898499 29.47051620]
[87.85589600 43.59954834]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[119.85196686 96.74979401]
[134.81979370 95.76792145]
[145.03215027 106.75463867]
[142.96084595 121.61093903]
[130.13279724 129.38531494]
[116.00550842 124.34795380]
[119.97760010 138.81248474]
[123.94969940 153.27700806]
[127.92179108 167.74153137]
[131.89389038 182.20605469]
[143.00935364 193.46469116]
[138.91853333 207.78651428]
[142.89062500 222.25103760]
[146.08663940 225.19033813]
[147.98966980 228.64619446]
[148.59613037 232.14871216]
[148.05535889 235.27507019]
[146.64106750 237.69538879]
[149.74517822 252.37069702]
[152.84928894 267.04598999]
[163.09446716 256.08987427]
[178.05929565 257.11654663]
[186.71226501 269.36914062]
[182.67471313 283.81552124]
[168.92298889 289.80636597]
[155.59535217 282.92675781]
[157.59936523 297.79226685]
[159.60337830 312.65780640]
[161.60739136 327.52334595]
[163.61140442 342.38885498]
[165.61541748 357.25439453]
[180.63914490 357.29174805]
[195.51785278 359.37454224]
[209.97433472 363.46398926]
[223.73930359 369.48391724]
[236.55632019 377.32214355]
[248.18659973 386.83267212]
[258.41348267 397.83834839]
[267.04644775 410.13409424]
[273.92468262 423.49087524]
[278.92004395 437.65988159]
[281.93945312 452.37710571]
[282.92666626 467.36840820]
[281.86331177 482.35449219]
[278.76916504 497.05621338]
[273.70190430 511.19964600]
[266.75592041 524.52130127]
[258.06057739 536.77307129]
[247.77792358 547.72662354]
[236.09948730 557.17791748]
[223.24282837 564.95098877]
[209.44744873 570.90087891]
[194.97036743 574.91687012]
[180.08128357 576.92401123]
[165.05755615 576.88507080]
[150.17909241 574.80065918]
[135.72303772 570.70965576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 173]
[25 172]
[26 171]
[27 166]
[28 165]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 153]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[45 144]
[46 143]
[48 140]
[49 139]
[51 137]
[65 122]
[66 121]
[67 120]
[69 119]
[70 118]
[71 117]
[72 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
