%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[136.08215332 510.54687500]
[132.52857971 495.95547485]
[130.72576904 481.04620361]
[130.69900513 466.02838135]
[132.44866943 451.11276245]
[135.95022583 436.50881958]
[141.15447998 422.42150879]
[147.98840332 409.04864502]
[156.35603333 396.57791138]
[166.13992310 385.18441772]
[177.20271301 375.02807617]
[189.38911438 366.25149536]
[202.52801514 358.97787476]
[196.86521912 345.08786011]
[191.20243835 331.19784546]
[185.53965759 317.30780029]
[179.87686157 303.41778564]
[174.44082642 298.41064453]
[174.23486328 289.27856445]
[168.77951050 275.30575562]
[156.94326782 266.26403809]
[159.13172913 250.59490967]
[153.67637634 236.62211609]
[148.22102356 222.64932251]
[142.76565552 208.67651367]
[137.31030273 194.70372009]
[131.85494995 180.73092651]
[120.01870728 171.68919373]
[122.20716858 156.02008057]
[116.75180817 142.04728699]
[109.87239838 128.71784973]
[101.64359283 116.17645264]
[90.40368652 113.12592316]
[84.08722687 103.34105682]
[85.93490601 91.84204102]
[77.89373779 79.17951965]
[69.85256195 66.51699066]
[71.05006409 81.46911621]
[67.62966156 96.07393646]
[59.91738129 108.93942261]
[48.64830399 118.83931732]
[34.89652252 124.83001709]
[19.97277069 126.34053802]
[5.29948664 123.22689056]
[-7.72476530 115.78586578]
[-17.85859680 104.72669220]
[-24.13611794 91.10344696]
[-25.95899200 76.21462250]
[-23.15347672 61.47932053]
[-15.98697376 48.30202103]
[-5.14255047 37.93869781]
[8.34617233 31.37711525]
[23.19353676 29.24268341]
[37.98438263 31.73884392]
[51.30894852 38.62767792]
[61.89788055 49.25350189]
[57.49688339 34.91365433]
[53.09588623 20.57380676]
[48.69488525 6.23395872]
[35.01334763 -1.21273458]
[30.75438690 -15.81807232]
[37.93798447 -28.81543732]
[33.53698730 -43.15528488]
[29.13598824 -57.49513245]
[24.73499107 -71.83497620]
[16.76863098 -59.12525558]
[2.17988253 -55.63692856]
[-10.67415619 -63.36827087]
[-14.43010902 -77.89041901]
[-6.93639517 -90.88442993]
[7.51424599 -94.90673828]
[20.64323425 -87.65392303]
[17.53912544 -102.32923126]
[14.43501472 -117.00453186]
[11.33090496 -131.67984009]
[8.22679424 -146.35513306]
[5.12268400 -161.03044128]
[-1.55920160 -147.60090637]
[-14.38604641 -139.82452393]
[-29.38331223 -140.11090088]
[-41.90393448 -148.37129211]
[-48.06826019 -162.04612732]
[-45.96620560 -176.89810181]
[-36.24911880 -188.32518005]
[-21.92794228 -192.78656006]
[-7.44024754 -188.89982605]
[2.72490931 -177.86909485]
[1.60926056 -192.82754517]
[0.49361187 -207.78601074]
[-0.62203681 -222.74446106]
[-15.50461388 -225.11207581]
[-29.43979073 -230.84858704]
[-41.67605591 -239.64463806]
[-51.55353165 -251.02586365]
[-58.53952789 -264.37847900]
[-62.25730896 -278.98242188]
[-62.50637054 -294.05007935]
[-59.27328491 -308.76892090]
[-52.73241043 -322.34512329]
[-43.23648453 -334.04660034]
[-31.29761505 -343.24224854]
[-17.55964470 -349.43618774]
[-2.76344800 -352.29437256]
[12.29303551 -351.66268921]
[26.79782867 -347.57519531]
[39.96870422 -340.25228882]
[51.09537888 -330.08892822]
[59.57779694 -317.63320923]
[64.95851898 -303.55682373]
[66.94736481 -288.61889648]
[65.43708801 -273.62506104]
[60.50912094 -259.38385010]
[52.42923355 -246.66329956]
[41.63315964 -236.14942932]
[28.70312119 -228.40922546]
[14.33641624 -223.86010742]
[15.45206547 -208.90165710]
[16.56771469 -193.94320679]
[17.68336296 -178.98474121]
[19.79798698 -164.13455200]
[22.90209770 -149.45924377]
[26.00620651 -134.78395081]
[29.11031723 -120.10864258]
[32.21442795 -105.43334198]
[35.31853867 -90.75803375]
[39.07483673 -76.23597717]
[43.47583771 -61.89612961]
[47.87683487 -47.55628204]
[52.27783203 -33.21643448]
[65.51584625 -26.48660469]
[70.18335724 -12.00665379]
[63.03473282 1.83296072]
[67.43572998 16.17280769]
[71.83673096 30.51265526]
[76.23772430 44.85250092]
[82.51509094 58.47581863]
[90.55625916 71.13834381]
[98.59743500 83.80086517]
[113.66068268 91.18157196]
[114.18498993 107.94764709]
[122.41379547 120.48904419]
[121.69611359 105.50622559]
[126.69435120 91.36346436]
[136.66703796 80.15876007]
[150.13479614 73.55426025]
[165.09977722 72.52970886]
[179.34197998 77.23708344]
[190.74868774 86.97808838]
[197.62777710 100.30768585]
[198.95877075 115.24851227]
[194.54421997 129.58419800]
[185.03901672 141.18811035]
[171.85317993 148.33889771]
[156.94274902 149.97576904]
[142.51962280 145.85591125]
[130.72460938 136.59193420]
[136.17996216 150.56472778]
[148.40640259 160.60588074]
[145.82774353 175.27555847]
[151.28309631 189.24836731]
[156.73846436 203.22116089]
[162.19381714 217.19395447]
[167.64916992 231.16676331]
[173.10452271 245.13955688]
[185.33096313 255.18070984]
[182.75230408 269.85040283]
[188.20767212 283.82318115]
[193.76689148 297.75500488]
[199.42967224 311.64501953]
[205.09246826 325.53503418]
[210.75524902 339.42507935]
[216.41804504 353.31509399]
[230.89727783 349.32916260]
[245.74633789 347.08374023]
[260.75674438 346.61035156]
[275.71777344 347.91564941]
[290.41940308 350.98132324]
[304.65524292 355.76434326]
[318.22546387 362.19754028]
[330.93951416 370.19058228]
[342.61895752 379.63131714]
[353.09979248 390.38717651]
[362.23492432 402.30715942]
[369.89605713 415.22390747]
[375.97570801 428.95614624]
[380.38845825 443.31109619]
[383.07241821 458.08715820]
[383.98986816 473.07699585]
[383.12796021 488.07009888]
[380.49877930 502.85604858]
[376.13922119 517.22723389]
[370.11053467 530.98187256]
[362.49728394 543.92694092]
[353.40640259 555.88067627]
[342.96548462 566.67529297]
[331.32110596 576.15924072]
[318.63674927 584.19934082]
[305.09048462 590.68280029]
[290.87246704 595.51849365]
[276.18228149 598.63867188]
[261.22619629 599.99938965]
[246.21412659 599.58160400]
[231.35685730 597.39123535]
[216.86294556 593.45898438]
[202.93585205 587.84002686]
[189.77111816 580.61328125]
[177.55352783 571.88018799]
[166.45460510 561.76336670]
[156.63017273 550.40478516]
[148.21813965 537.96398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[19 167]
[20 166]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[29 157]
[30 156]
[31 141]
[32 140]
[35 138]
[36 137]
[37 136]
[56 135]
[57 134]
[58 133]
[59 132]
[62 129]
[63 128]
[64 127]
[65 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[87 119]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
