%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[4.65202045 258.51815796]
[11.35179520 271.95800781]
[16.44596291 286.08480835]
[19.86562920 300.70745850]
[21.56454849 315.62826538]
[21.51974487 330.64541626]
[19.73182297 345.55578613]
[16.22496414 360.15780640]
[11.04659271 374.25393677]
[4.26674128 387.65356445]
[-4.02290058 400.17547607]
[-13.71022415 411.65032959]
[-24.66422081 421.92294312]
[-36.73675156 430.85437012]
[-49.76454163 438.32385254]
[-63.57141495 444.23037720]
[-77.97064209 448.49401855]
[-92.76749420 451.05715942]
[-107.76186371 451.88510132]
[-122.75096130 450.96670532]
[-137.53207397 448.31433105]
[-151.90531921 443.96386719]
[-165.67630005 437.97415161]
[-178.65878296 430.42620850]
[-190.67721558 421.42208862]
[-201.56903076 411.08358765]
[-211.18693542 399.55047607]
[-219.40087891 386.97879028]
[-226.09974670 373.53848267]
[-231.19297791 359.41137695]
[-234.61166382 344.78848267]
[-236.30958557 329.86755371]
[-236.26377869 314.85043335]
[-234.47486877 299.94015503]
[-230.96702576 285.33837891]
[-225.78771973 271.24258423]
[-219.00697327 257.84341431]
[-210.71649170 245.32205200]
[-201.02841187 233.84783936]
[-190.07373047 223.57595825]
[-178.00059509 214.64532471]
[-164.97230530 207.17672729]
[-151.16503906 201.27113342]
[-136.76553345 197.00845337]
[-121.96850586 194.44630432]
[-106.97408295 193.61933899]
[-91.98504639 194.53875732]
[-77.20410919 197.19210815]
[-62.83115387 201.54353333]
[-49.06057358 207.53414917]
[-36.07859039 215.08296204]
[-24.06077003 224.08789062]
[-13.73410225 213.20855713]
[-3.40743351 202.32922363]
[6.75611305 191.29734802]
[16.75428581 180.11537170]
[26.75245667 168.93339539]
[36.75062943 157.75141907]
[38.86565399 150.66986084]
[46.98186493 146.47880554]
[57.14541245 135.44692993]
[67.30895996 124.41505432]
[77.47250366 113.38317871]
[87.63605499 102.35130310]
[97.55070496 91.09520721]
[107.21151733 79.62050629]
[116.87232208 68.14580536]
[126.53313446 56.67110443]
[136.19393921 45.19640350]
[145.85475159 33.72170258]
[153.12799072 20.60301018]
[157.74198914 6.33027649]
[161.60630798 -8.16341686]
[164.71040344 -22.83871841]
[167.81451416 -37.51402283]
[170.91862488 -52.18932343]
[174.02273560 -66.86462402]
[177.12684631 -81.53993225]
[180.23095703 -96.21523285]
[168.68345642 -86.64156342]
[153.80638123 -84.72509766]
[140.20957947 -91.05967712]
[132.10615540 -103.68244934]
[132.00703430 -118.68212128]
[139.94294739 -131.41087341]
[153.45486450 -137.92457581]
[168.35595703 -136.20487976]
[180.02896118 -126.78465271]
[184.85690308 -112.58258820]
[189.89381409 -126.71161652]
[194.93074036 -140.84065247]
[199.96765137 -154.96968079]
[205.00456238 -169.09870911]
[191.61640930 -175.90939331]
[179.20912170 -184.37625122]
[167.98645020 -194.36024475]
[158.13269043 -205.69741821]
[149.80964661 -218.20162964]
[143.15397644 -231.66752625]
[138.27497864 -245.87399292]
[135.25279236 -260.58776855]
[134.13700867 -275.56719971]
[134.94596863 -290.56631470]
[137.66639709 -305.33883667]
[142.25361633 -319.64221191]
[148.63227844 -333.24148560]
[156.69766235 -345.91342163]
[166.31733704 -357.44992065]
[177.33331299 -367.66149902]
[189.56469727 -376.38052368]
[202.81066895 -383.46377563]
[216.85369873 -388.79498291]
[231.46318054 -392.28659058]
[246.39921570 -393.88125610]
[261.41656494 -393.55279541]
[276.26858521 -391.30661011]
[290.71145630 -387.17956543]
[304.50793457 -381.23944092]
[317.43151855 -373.58380127]
[329.27001953 -364.33831787]
[339.82894897 -353.65484619]
[348.93502808 -341.70877075]
[356.43862915 -328.69631958]
[362.21658325 -314.83111572]
[366.17401123 -300.34088135]
[368.24594116 -285.46353149]
[368.39831543 -270.44338989]
[366.62866211 -255.52706909]
[362.96600342 -240.95951843]
[357.47052002 -226.97996521]
[350.23245239 -213.81794739]
[341.37063599 -201.68962097]
[331.03060913 -190.79411316]
[319.38214111 -181.31036377]
[306.61651611 -173.39408875]
[292.94335938 -167.17529297]
[278.58721924 -162.75608826]
[263.78381348 -160.20904541]
[248.77622986 -159.57598877]
[233.81091309 -160.86729431]
[219.13359070 -164.06179810]
[214.09667969 -149.93276978]
[209.05976868 -135.80372620]
[204.02284241 -121.67470551]
[198.98593140 -107.54567719]
[194.90626526 -93.11112213]
[191.80215454 -78.43582153]
[188.69804382 -63.76051712]
[185.59393311 -49.08521271]
[182.48982239 -34.40991211]
[179.38571167 -19.73460960]
[176.28160095 -5.05930662]
[188.80545044 -13.31480217]
[203.71975708 -11.71369076]
[214.20588684 -0.98797899]
[215.46974182 13.95868206]
[206.93350220 26.29288101]
[192.49980164 30.37558556]
[178.76756287 24.34024239]
[172.01472473 10.94428539]
[167.40072632 25.21701813]
[177.84742737 14.45289707]
[190.40240479 6.24483061]
[204.45309448 0.99330777]
[219.31388855 -1.04543722]
[234.25973511 0.22807047]
[248.56137085 4.75169373]
[261.52099609 12.30471420]
[272.50628662 22.51860428]
[280.98123169 34.89500427]
[286.53231812 48.83004379]
[288.88873291 63.64380264]
[287.93545532 78.61347961]
[283.71899414 93.00867462]
[276.44512939 106.12701416]
[266.46875000 117.32842255]
[254.27659607 126.06636810]
[240.46357727 131.91448975]
[225.70365906 134.58746338]
[210.71701050 133.95484924]
[196.23484802 130.04753113]
[182.96380615 123.05615234]
[171.55140686 113.32183075]
[162.55447388 101.31952667]
[156.41200256 87.63486481]
[153.42367554 72.93554688]
[153.73533630 57.93878555]
[157.32945251 43.38251495]
[147.66864014 54.85721588]
[138.00782776 66.33191681]
[128.34703064 77.80661774]
[118.68621826 89.28131104]
[109.02540588 100.75601196]
[108.80729675 104.60631561]
[106.89309692 108.34178162]
[103.37213898 111.20706940]
[98.66793060 112.51484680]
[88.50438690 123.54672241]
[78.34083557 134.57859802]
[68.17729187 145.61047363]
[58.01374435 156.64234924]
[47.93260574 167.74958801]
[37.93443298 178.93156433]
[27.93626022 190.11354065]
[17.93808746 201.29551697]
[16.21447945 207.67835999]
[12.13808537 211.63815308]
[7.47190094 212.65588379]
[-2.85476780 223.53521729]
[-13.18143654 234.41455078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 210]
[53 209]
[54 208]
[55 205]
[56 204]
[57 203]
[58 202]
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 161]
[72 160]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
