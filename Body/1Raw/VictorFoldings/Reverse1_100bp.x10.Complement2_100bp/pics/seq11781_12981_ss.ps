%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[157.31457520 659.05261230]
[148.38229370 671.88806152]
[133.27586365 675.92907715]
[119.12808990 669.26763916]
[112.61911011 655.04913330]
[116.82226562 639.98699951]
[129.75296021 631.19317627]
[131.09118652 616.25299072]
[132.42942810 601.31280518]
[133.76765442 586.37261963]
[135.10589600 571.43243408]
[134.77091980 556.43615723]
[132.76690674 541.57061768]
[130.76289368 526.70513916]
[128.75888062 511.83959961]
[126.75486755 496.97406006]
[124.75084686 482.10852051]
[122.74683380 467.24301147]
[120.74282074 452.37747192]
[118.73880768 437.51193237]
[116.73479462 422.64642334]
[101.31187439 419.48052979]
[87.88253784 411.21084595]
[78.08012390 398.82153320]
[73.10420990 383.79919434]
[73.57387543 367.95431519]
[79.45069885 353.20318604]
[90.04121399 341.33618164]
[104.07865906 333.80026245]
[101.85354614 318.96621704]
[99.51805878 304.14913940]
[97.07232666 289.34988403]
[94.62660217 274.55059814]
[92.18087006 259.75134277]
[83.51710510 271.99630737]
[69.04182434 275.92901611]
[55.37294006 269.75152588]
[48.75967789 256.28805542]
[52.22553253 241.69395447]
[64.18596649 232.64143372]
[79.17282104 233.26919556]
[90.33519745 243.29185486]
[89.44238281 228.31845093]
[88.54956818 213.34503174]
[87.65675354 198.37162781]
[86.76393127 183.39822388]
[85.87111664 168.42481995]
[84.97830200 153.45141602]
[78.51451111 166.98727417]
[67.85958862 177.54533386]
[54.26527405 183.88525391]
[39.32860947 185.26222229]
[24.80434036 181.51448059]
[12.39876175 173.08230591]
[3.56927037 160.95629883]
[-0.64685452 146.56100464]
[0.24569315 131.58758545]
[6.14205790 117.79508972]
[16.34954071 106.80385590]
[29.66897583 99.90511322]
[44.53561020 97.90932465]
[59.20292664 101.05094910]
[71.94782257 108.96092224]
[81.27304077 120.70997620]
[86.08330536 134.91940308]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[100.00238037 60.99674225]
[102.88764954 46.27685165]
[105.77292633 31.55695915]
[108.65819550 16.83706665]
[109.88516998 1.88733363]
[109.43856812 -13.10601616]
[108.99195862 -28.09936714]
[108.54535675 -43.09271622]
[106.13321686 -46.70319366]
[105.09942627 -50.51052856]
[105.33661652 -54.05723953]
[106.59987640 -56.96770096]
[108.54535675 -58.98592758]
[108.99195862 -73.97927856]
[109.43856812 -88.97262573]
[109.66189575 -103.97096252]
[109.66189575 -118.97096252]
[109.10368347 -133.96057129]
[107.98803711 -148.91902161]
[104.22901917 -157.24415588]
[106.96882629 -164.10820007]
[106.07600403 -179.08160400]
[105.18318939 -194.05502319]
[104.29037476 -209.02842712]
[103.39756012 -224.00183105]
[88.86296082 -228.30546570]
[76.67868805 -237.32318115]
[68.31604004 -249.96604919]
[64.78485870 -264.70736694]
[66.51154327 -279.76705933]
[73.28759766 -293.32659912]
[84.29476929 -303.74859619]
[98.20388794 -309.77453613]
[113.33537292 -310.67678833]
[127.86201477 -306.34637451]
[140.02964783 -297.30621338]
[148.36898804 -284.64794922]
[151.87298584 -269.90014648]
[150.11856079 -254.84367371]
[143.31753540 -241.29664612]
[132.29116821 -230.89495850]
[118.37096405 -224.89463806]
[119.26377869 -209.92123413]
[120.15659332 -194.94783020]
[121.04941559 -179.97442627]
[121.94223022 -165.00102234]
[122.94648743 -150.03468323]
[124.06213379 -135.07621765]
[135.67921448 -144.56535339]
[150.37272644 -141.54859924]
[157.31115723 -128.24978638]
[151.37976074 -114.47232819]
[136.95092773 -110.37243652]
[124.66189575 -118.97096252]
[124.66189575 -103.97096252]
[127.34558105 -100.02040863]
[127.57604218 -94.34204102]
[124.43191528 -88.52602386]
[123.98531342 -73.53266907]
[123.53870392 -58.53932190]
[123.53870392 -43.53932190]
[123.98531342 -28.54597282]
[124.43191528 -13.55262184]
[124.87852478 1.44072771]
[131.91011047 -11.80905437]
[143.20542908 -21.67900276]
[157.27838135 -26.87055397]
[172.27740479 -26.70067215]
[186.22915649 -21.19170761]
[197.29803467 -11.06845856]
[204.02770996 2.33718634]
[205.53282166 17.26148415]
[201.61531067 31.74088860]
[192.79060364 43.87038040]
[180.21974182 52.05412292]
[165.55665588 55.21540070]
[150.73049927 52.93828964]
[137.69192505 45.52238846]
[128.15638733 33.94338608]
[123.37808990 19.72233963]
[120.49281311 34.44223022]
[117.60754395 49.16212082]
[114.72227478 63.88201523]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[100.84452057 137.58518982]
[99.95170593 152.55859375]
[100.84452057 167.53201294]
[101.73734283 182.50541687]
[102.63015747 197.47882080]
[103.52297211 212.45222473]
[104.41578674 227.42562866]
[105.30860138 242.39903259]
[106.98014069 257.30560303]
[109.42587280 272.10488892]
[111.87159729 286.90414429]
[114.31732941 301.70343018]
[118.80408478 309.65997314]
[116.68758392 316.74108887]
[118.91270447 331.57513428]
[133.01693726 334.09948730]
[145.63316345 340.84619141]
[155.53417969 351.14395142]
[161.76148987 363.97680664]
[163.71818542 378.08432007]
[161.22608948 392.08535767]
[154.54188538 404.61337280]
[144.33079529 414.44979858]
[131.60032654 420.64239502]
[133.60433960 435.50793457]
[135.60835266 450.37344360]
[137.61236572 465.23898315]
[139.61637878 480.10452271]
[141.62039185 494.97003174]
[143.62440491 509.83557129]
[145.62841797 524.70111084]
[147.63243103 539.56665039]
[149.63644409 554.43212891]
[155.25144958 540.52276611]
[165.45864868 529.53125000]
[178.91513062 522.90380859]
[193.85044861 521.51232910]
[208.29960632 525.53991699]
[220.36158752 534.45666504]
[228.44941711 547.08947754]
[231.49899292 561.77618408]
[229.10910034 576.58459473]
[221.59417725 589.56634521]
[209.94293213 599.01348877]
[195.68829346 603.68310547]
[180.70568848 602.96075439]
[166.96635437 596.94158936]
[156.27792358 586.41741943]
[150.04608154 572.77069092]
[148.70783997 587.71087646]
[147.36961365 602.65106201]
[146.03137207 617.59124756]
[144.69314575 632.53143311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[29 172]
[30 171]
[31 169]
[32 168]
[33 167]
[34 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[65 158]
[66 157]
[67 156]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 134]
[76 133]
[77 132]
[78 131]
[83 130]
[84 129]
[85 128]
[86 125]
[87 124]
[88 118]
[89 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
