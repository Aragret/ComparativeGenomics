%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[83.75595093 505.35903931]
[68.97508240 502.73782349]
[54.51030731 498.72348022]
[40.49262619 493.35232544]
[27.04898834 486.67300415]
[14.30114079 478.74600220]
[2.36453509 469.64312744]
[-8.65272713 459.44683838]
[-18.65086937 448.24942017]
[-27.53934288 436.15234375]
[-35.23765564 423.26510620]
[-41.67608261 409.70443726]
[-46.79631805 395.59317017]
[-50.55199051 381.05908203]
[-52.90909195 366.23379517]
[-53.84626770 351.25161743]
[-53.35503387 336.24816895]
[-51.43984222 321.35934448]
[-48.11803436 306.72000122]
[-43.41969299 292.46270752]
[-37.38737106 278.71658325]
[-30.07569504 265.60614014]
[-21.55088615 253.25006104]
[-11.89014626 241.76028442]
[-1.18096781 231.24085999]
[10.47966385 221.78706360]
[22.98614693 213.48449707]
[36.22521591 206.40835571]
[50.07697296 200.62271118]
[64.41597748 196.17999268]
[79.11235809 193.12040710]
[94.03302765 191.47166443]
[93.80970001 176.47332764]
[93.58637238 161.47499084]
[93.36304474 146.47665405]
[85.43711090 133.86599731]
[92.96809387 119.95215607]
[92.74476624 104.95381927]
[90.74554443 102.65325165]
[89.53922272 99.57440186]
[89.41566467 96.00954437]
[90.55272675 92.35395050]
[92.98139191 89.06237030]
[93.65117645 74.07733154]
[94.32096100 59.09228897]
[94.99074554 44.10725021]
[95.66053009 29.12221336]
[96.33031464 14.13717365]
[97.00009918 -0.84786493]
[97.66988373 -15.83290386]
[98.33966827 -30.81794167]
[96.33565521 -45.68347168]
[91.72164917 -59.95620346]
[87.10764313 -74.22893524]
[82.49362946 -88.50167084]
[76.41979980 -102.21693420]
[68.95205688 -115.22589111]
[61.48431396 -128.23484802]
[54.01657104 -141.24378967]
[46.54883194 -154.25274658]
[39.08108902 -167.26170349]
[31.61334991 -180.27064514]
[17.79643250 -174.38600159]
[3.38048673 -170.17684937]
[-11.43210983 -167.70231628]
[-26.43341064 -166.99711609]
[-41.41282272 -168.07116699]
[-56.16005707 -170.90936279]
[-70.46808624 -175.47189331]
[-84.13604736 -181.69468689]
[-96.97206879 -189.49038696]
[-108.79594421 -198.74957275]
[-119.44168854 -209.34222412]
[-128.75985718 -221.11967468]
[-136.61962891 -233.91656494]
[-142.91065979 -247.55323792]
[-147.54466248 -261.83828735]
[-150.45654297 -276.57113647]
[-151.60545349 -291.54501343]
[-150.97525024 -306.54965210]
[-148.57478333 -321.37442017]
[-144.43775940 -335.81124878]
[-138.62225342 -349.65737915]
[-131.20988464 -362.71853638]
[-122.30474091 -374.81127930]
[-112.03182220 -385.76589966]
[-100.53533936 -395.42858887]
[-87.97669983 -403.66366577]
[-74.53219604 -410.35559082]
[-60.39057159 -415.41036987]
[-45.75035095 -418.75704956]
[-30.81706238 -420.34866333]
[-15.80034351 -420.16284180]
[-0.91100729 -418.20223999]
[13.64192390 -414.49432373]
[27.65415001 -409.09118652]
[40.92895889 -402.06866455]
[53.27999878 -393.52536011]
[64.53387451 -383.58117676]
[74.53260040 -372.37573242]
[83.13581085 -360.06634521]
[90.22272491 -346.82580566]
[95.69386292 -332.83999634]
[99.47241974 -318.30523682]
[101.50534058 -303.42562866]
[101.76409149 -288.40997314]
[100.24503326 -273.46914673]
[96.96950531 -258.81283569]
[91.98347473 -244.64682007]
[85.35694885 -231.16996765]
[77.18295288 -218.57147217]
[67.57623291 -207.02818298]
[56.67165756 -196.70217896]
[44.62230301 -187.73838806]
[52.09004211 -174.72944641]
[59.55778503 -161.72048950]
[67.02552795 -148.71153259]
[74.49326324 -135.70259094]
[81.96100616 -122.69363403]
[89.42874908 -109.68467712]
[89.60413361 -124.68365479]
[95.43529510 -138.50384521]
[106.05722046 -149.09509277]
[119.89421082 -154.88626099]
[134.89363098 -155.01826477]
[148.83039856 -149.47152710]
[159.63710022 -139.06886292]
[165.71058655 -125.35344696]
[166.14993286 -110.35987854]
[160.88993835 -96.31237793]
[150.71089172 -85.29479218]
[137.12281799 -78.94152069]
[122.14140320 -78.19503021]
[107.98905945 -83.16606903]
[96.76636505 -93.11567688]
[101.38037109 -78.84294891]
[105.99438477 -64.57021332]
[110.60839081 -50.29748154]
[112.80639648 -65.13556671]
[118.44589233 -79.03506470]
[127.20794678 -91.20989227]
[138.59701538 -100.97149658]
[151.96900940 -107.76782990]
[166.56764221 -111.21450806]
[181.56732178 -111.11660767]
[196.11973572 -107.47967529]
[209.40187073 -100.50938416]
[220.66256714 -90.59995270]
[229.26495361 -78.31179047]
[234.72254944 -64.33986664]
[236.72668457 -49.47435760]
[235.16403198 -34.55597687]
[230.12295532 -20.42843246]
[221.88854980 -7.89070511]
[210.92651367 2.34813452]
[197.85681152 9.70903111]
[183.41859436 13.77569103]
[168.42840576 14.31812286]
[153.73400879 11.30565166]
[140.16647339 4.90864611]
[128.49307251 -4.51111174]
[119.37401581 -16.42088890]
[113.32470703 -30.14815712]
[112.65492249 -15.16311836]
[111.98513794 -0.17807978]
[111.31535339 14.80695915]
[110.64556885 29.79199791]
[109.97578430 44.77703476]
[109.30599976 59.76207352]
[108.63621521 74.74711609]
[107.96643066 89.73215485]
[107.74310303 104.73049164]
[107.96643066 119.72882843]
[115.90833282 133.41227722]
[108.36138153 146.25332642]
[108.58470917 161.25166321]
[108.80803680 176.25000000]
[109.03136444 191.24833679]
[123.99451447 192.45210266]
[138.77548218 195.07276917]
[153.24040222 199.08659363]
[167.25827026 204.45724487]
[180.70214844 211.13607788]
[193.45028687 219.06259155]
[205.38722229 228.16503906]
[216.40486145 238.36093140]
[226.40341187 249.55798340]
[235.29232788 261.65475464]
[242.99110413 274.54171753]
[249.43003845 288.10214233]
[254.55078125 302.21319580]
[258.30697632 316.74716187]
[260.66461182 331.57235718]
[261.60235596 346.55453491]
[261.11166382 361.55798340]
[259.19702148 376.44686890]
[255.87573242 391.08633423]
[251.17791748 405.34381104]
[245.14608765 419.09014893]
[237.83489990 432.20086670]
[229.31053162 444.55725098]
[219.65022278 456.04736328]
[208.94142151 466.56716919]
[197.28112793 476.02139282]
[184.77496338 484.32443237]
[171.53614807 491.40106201]
[157.68460083 497.18719482]
[143.34576416 501.63043213]
[128.64949036 504.69055176]
[113.72887421 506.33984375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 178]
[33 177]
[34 176]
[35 175]
[37 173]
[38 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 138]
[53 137]
[54 136]
[55 135]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
