%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[47.13099670 712.77398682]
[33.34347916 706.80841064]
[20.47414398 699.05834961]
[8.75266075 689.66204834]
[-1.61178887 678.78723145]
[-10.43423748 666.62799072]
[-17.55723953 653.40124512]
[-22.85367393 639.34307861]
[-26.22902298 624.70446777]
[-27.62304688 609.74652100]
[-27.01086807 594.73620605]
[-24.40341377 579.94146729]
[-19.84721565 565.62628174]
[-13.42358398 552.04614258]
[-5.24715567 539.44335938]
[4.53614998 528.04290771]
[15.75173950 518.04821777]
[28.19945717 509.63763428]
[41.65715790 502.96130371]
[55.88467407 498.13830566]
[70.62809753 495.25476074]
[69.73528290 480.28134155]
[68.84246826 465.30795288]
[67.94965363 450.33453369]
[67.05683899 435.36111450]
[66.16401672 420.38772583]
[51.76552582 409.08288574]
[50.17548370 390.52529907]
[62.86889267 376.46145630]
[61.53065872 361.52127075]
[60.19242477 346.58108521]
[58.13026428 344.68222046]
[56.69601440 341.85211182]
[56.24813843 338.32580566]
[57.05348206 334.46368408]
[59.24644470 330.71603394]
[58.79983902 315.72268677]
[58.35323334 300.72933960]
[49.76678085 292.20883179]
[49.27199936 279.72125244]
[57.67911911 269.93948364]
[57.45579147 254.94114685]
[57.23246384 239.94281006]
[57.00913620 224.94447327]
[50.37715530 238.39872742]
[40.26579285 249.47845459]
[27.47247505 257.30987549]
[13.00613594 261.27536011]
[-1.99234927 261.06216431]
[-16.34013748 256.68710327]
[-28.90570068 248.49525452]
[-38.69806671 237.13261414]
[-44.94497299 223.49531555]
[-47.15375519 208.65882874]
[-45.15022278 193.79322815]
[-39.09238434 180.07089233]
[-29.45798683 168.57400513]
[-17.00683594 160.20927429]
[-2.72088170 155.63635254]
[12.27322483 155.21591187]
[26.79298592 158.98107910]
[39.69331360 166.63494873]
[49.95683289 177.57386780]
[56.77412033 190.93518066]
[59.60770416 205.66860962]
[63.79471588 191.26483154]
[67.98172760 176.86105347]
[66.83024597 169.56063843]
[72.33978271 162.27484131]
[76.74078369 147.93499756]
[75.69812775 140.61825562]
[81.31552887 133.41529846]
[85.92953491 119.14257050]
[90.54354095 104.86983490]
[94.08321381 90.29345703]
[96.52894592 75.49418640]
[98.97467041 60.69491959]
[93.59101105 45.81786346]
[103.29993439 34.52246094]
[105.74565887 19.72319221]
[108.19138336 4.92392111]
[110.08467865 -9.95611382]
[103.60942078 -24.39154434]
[112.45133972 -36.37777710]
[113.78957367 -51.31796265]
[115.12780762 -66.25814819]
[116.46604156 -81.19833374]
[117.80427551 -96.13851929]
[119.14250946 -111.07869720]
[120.48074341 -126.01888275]
[121.15052795 -141.00392151]
[121.15052795 -156.00392151]
[121.15052795 -171.00392151]
[118.02112579 -179.58557129]
[121.26386261 -186.22683716]
[113.73287964 -200.14067078]
[121.65881348 -212.75134277]
[107.40491486 -217.86065674]
[95.58387756 -227.32330322]
[87.47796631 -240.11286926]
[83.96644592 -254.84202576]
[85.43022156 -269.91305542]
[91.71051025 -283.69119263]
[102.12607574 -294.68185425]
[115.54711151 -301.69287109]
[130.51780701 -303.96374512]
[145.41426086 -301.24813843]
[158.62060547 -293.84063721]
[168.70433044 -282.54473877]
[174.57160950 -268.58572388]
[175.58601379 -253.47779846]
[171.63749695 -238.85972595]
[163.15438843 -226.31716919]
[151.05685425 -217.21066284]
[136.65715027 -212.52801514]
[144.20410156 -199.68695068]
[136.26219177 -186.00350952]
[136.15052795 -171.00392151]
[136.15052795 -156.00392151]
[136.15052795 -141.00392151]
[147.49531555 -150.81697083]
[162.46548462 -149.87142944]
[172.48544312 -138.70896912]
[171.81530762 -123.72394562]
[160.83894348 -113.50046539]
[145.84413147 -113.89499664]
[135.42092896 -124.68064880]
[134.08270264 -109.74046326]
[132.74446106 -94.80028534]
[131.40623474 -79.86009979]
[130.06799316 -64.91991425]
[128.72976685 -49.97972488]
[127.39152527 -35.03954315]
[133.96249390 -21.67273331]
[125.02486420 -8.61787987]
[138.03367615 -16.08587837]
[152.03866577 -10.71373463]
[156.71589661 3.53840566]
[148.61747742 16.16439629]
[133.71327209 17.85682487]
[122.99065399 7.36964846]
[120.54492950 22.16891861]
[118.09920502 36.96818924]
[123.65779877 50.78670120]
[113.77394104 63.14064407]
[111.32821655 77.93991852]
[108.88248444 92.73918915]
[119.58818817 82.23261261]
[134.08787537 78.39088440]
[148.59138489 82.21820068]
[159.30751038 92.71413422]
[163.43510437 107.13505554]
[159.89521790 121.71137238]
[149.61315918 132.63288879]
[135.27664185 137.04472351]
[120.63319397 133.79364014]
[109.51058197 123.72946930]
[104.81627655 109.48384094]
[100.20227051 123.75657654]
[95.58825684 138.02931213]
[91.08062744 152.33599854]
[86.67963409 166.67584229]
[82.38550568 181.04806519]
[78.19850159 195.45184326]
[74.01148987 209.85562134]
[72.00747681 224.72114563]
[72.23080444 239.71948242]
[72.45413208 254.71781921]
[72.67745972 269.71615601]
[82.48526764 285.30102539]
[73.34658051 300.28274536]
[73.79319000 315.27609253]
[74.23979187 330.26943970]
[75.13260651 345.24285889]
[76.47084045 360.18304443]
[77.80907440 375.12322998]
[88.24125671 380.82464600]
[94.56121063 390.75231934]
[95.29648590 402.37786865]
[90.37986755 412.80584717]
[81.13742828 419.49490356]
[82.03024292 434.46832275]
[82.92305756 449.44171143]
[83.81587219 464.41513062]
[84.70868683 479.38851929]
[85.60150146 494.36193848]
[100.58312225 495.47308350]
[115.28295135 498.57122803]
[129.43865967 503.60107422]
[142.79760742 510.47286987]
[155.12141418 519.06402588]
[166.19012451 529.22113037]
[175.80621338 540.76293945]
[183.79808044 553.48358154]
[190.02308655 567.15588379]
[194.37013245 581.53594971]
[196.76167297 596.36718750]
[197.15498352 611.38476562]
[195.54309082 626.32080078]
[191.95471191 640.90869141]
[186.45393372 654.88818359]
[179.13890076 668.00964355]
[170.14015198 680.03906250]
[159.61828613 690.76165771]
[147.76109314 699.98608398]
[134.78015137 707.54772949]
[120.90715027 713.31170654]
[106.38964844 717.17504883]
[91.48673248 719.06890869]
[76.46437073 718.95941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[29 176]
[30 175]
[31 174]
[36 173]
[37 172]
[38 171]
[41 169]
[42 168]
[43 167]
[44 166]
[65 165]
[66 164]
[67 163]
[69 162]
[70 161]
[72 160]
[73 159]
[74 158]
[75 147]
[76 146]
[77 145]
[79 143]
[80 142]
[81 141]
[82 135]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 120]
[92 119]
[93 118]
[95 117]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
