%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[121.76701355 675.04302979]
[121.09722900 660.05798340]
[120.42744446 645.07293701]
[119.75765991 630.08789062]
[119.08787537 615.10284424]
[118.41809082 600.11779785]
[105.90819550 592.07788086]
[100.46695709 578.04730225]
[104.37649536 563.33105469]
[116.34007263 553.62646484]
[115.67028046 538.64141846]
[115.00049591 523.65637207]
[114.33071136 508.67132568]
[101.04907227 501.92864990]
[92.87128448 489.35964966]
[92.07754517 474.28530884]
[98.98104095 460.74874878]
[111.81694031 452.43087769]
[111.14715576 437.44583130]
[110.47737122 422.46078491]
[107.03833008 415.91900635]
[109.91084290 407.24798584]
[109.46424103 392.25463867]
[109.01763153 377.26129150]
[108.57102966 362.26794434]
[108.12442017 347.27459717]
[107.67781830 332.28125000]
[97.66360474 317.87005615]
[106.52639771 301.72903442]
[105.74507904 286.74938965]
[104.85226440 271.77600098]
[103.95944977 256.80258179]
[93.52059937 242.69593811]
[101.89888763 226.29820251]
[100.78324127 211.33975220]
[89.36455536 201.84504700]
[88.02004242 186.69094849]
[98.05637360 174.77835083]
[96.94072723 159.81990051]
[95.82508087 144.86145020]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[83.79475403 101.33001709]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[87.22811890 41.47941208]
[73.00633240 36.04783630]
[62.59555435 25.02500534]
[58.02177429 10.63401031]
[60.14112473 -4.25455475]
[68.48021698 -16.69517517]
[81.34053802 -24.25014114]
[80.00230408 -39.19032669]
[77.22669220 -53.93128967]
[73.03968048 -68.33506775]
[68.85266876 -82.73885345]
[64.55854797 -97.11106873]
[60.15755081 -111.45091248]
[55.75655365 -125.79075623]
[51.35555649 -140.13059998]
[46.95455551 -154.47045898]
[33.27301788 -161.91714478]
[29.01405716 -176.52249146]
[36.19765472 -189.51985168]
[31.79665756 -203.85969543]
[27.97405624 -207.41424561]
[26.08596230 -211.65551758]
[26.07001305 -215.73164368]
[27.53477859 -218.93894958]
[23.77847672 -233.46101379]
[20.02217674 -247.98306274]
[14.84346390 -255.50761414]
[16.31977272 -262.74932861]
[12.78010082 -277.32568359]
[9.13201237 -291.87530518]
[5.37571192 -306.39736938]
[1.61941147 -320.91943359]
[-9.32719707 -332.34231567]
[-5.02359247 -346.60162354]
[-8.77989292 -361.12368774]
[-23.79652977 -360.17651367]
[-38.72101593 -362.08865356]
[-53.01383972 -366.79095459]
[-66.15832520 -374.11343384]
[-77.67931366 -383.79144287]
[-87.16031647 -395.47506714]
[-94.25861359 -408.74194336]
[-98.71759796 -423.11254883]
[-100.37608337 -438.06735229]
[-99.17411041 -453.06573486]
[-95.15514374 -467.56555176]
[-88.46445465 -481.04260254]
[-79.34390259 -493.00973511]
[-68.12320709 -503.03433228]
[-55.20797729 -510.75399780]
[-41.06509399 -515.88970947]
[-26.20581055 -518.25573730]
[-11.16728497 -517.76666260]
[3.50685215 -514.44006348]
[17.28613853 -508.39624023]
[29.67246437 -499.85366821]
[40.21806717 -489.12115479]
[48.54173660 -476.58666992]
[54.34257126 -462.70336914]
[57.41087341 -447.97305298]
[57.63573456 -432.92825317]
[55.00901794 -418.11282349]
[49.62567902 -404.06234741]
[41.68032455 -391.28469849]
[31.46017456 -380.24182129]
[19.33467865 -371.33291626]
[5.74216604 -364.88000488]
[9.49846649 -350.35794067]
[20.17639923 -339.97375488]
[16.14146996 -324.67572021]
[19.89777184 -310.15365601]
[23.65407181 -295.63162231]
[28.37242508 -289.94311523]
[27.35647583 -280.86535645]
[30.89614868 -266.28900146]
[34.54423523 -251.73936462]
[38.30053711 -237.21730042]
[42.05683899 -222.69525146]
[46.13650513 -208.26069641]
[50.53750229 -193.92085266]
[63.77551270 -187.19100952]
[68.44303131 -172.71105957]
[61.29440308 -158.87144470]
[65.69540405 -144.53160095]
[70.09639740 -130.19175720]
[74.49739838 -115.85191345]
[78.89839935 -101.51206207]
[83.86604309 -96.03993225]
[83.25645447 -86.92586517]
[87.44346619 -72.52207947]
[91.63047791 -58.11830139]
[95.60323334 -72.58264160]
[105.05256653 -84.23210907]
[118.38610077 -91.10356140]
[133.35690308 -92.03903961]
[147.44212341 -86.88088989]
[158.26815796 -76.49836731]
[164.01063538 -62.64109421]
[163.70184326 -47.64427185]
[157.39382935 -34.03512955]
[146.14958191 -24.10704231]
[131.86395264 -19.53306961]
[116.94435883 -21.08400726]
[103.90497589 -28.49849129]
[94.94248962 -40.52856064]
[96.28072357 -25.58837509]
[110.27899170 -20.43920898]
[120.69628143 -9.67864990]
[125.42787933 4.59625673]
[123.48447418 19.57101440]
[115.19840240 32.26857376]
[102.16830444 40.14117813]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[114.65399170 92.95446014]
[115.60665894 104.56194305]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[110.78353119 143.74580383]
[111.89917755 158.70425415]
[113.01483154 173.66270447]
[124.70725250 183.95469666]
[125.62558746 199.14059448]
[115.74169159 210.22410583]
[116.85733795 225.18255615]
[126.10362244 234.17527771]
[126.72489929 246.65718079]
[118.93285370 255.90977478]
[119.82566833 270.88317871]
[120.71848297 285.85659790]
[124.35313416 294.23675537]
[121.51143646 301.05926514]
[130.48587036 310.32327271]
[130.73524475 322.81814575]
[122.67116547 331.83465576]
[123.11777496 346.82800293]
[123.56437683 361.82135010]
[124.01098633 376.81469727]
[124.45758820 391.80804443]
[124.90419769 406.80139160]
[125.46240997 421.79101562]
[126.13219452 436.77603149]
[126.80197906 451.76107788]
[140.32878113 458.90060425]
[148.41241455 471.76730347]
[148.96670532 486.85235596]
[141.94288635 500.10083008]
[129.31575012 508.00152588]
[129.98553467 522.98657227]
[130.65531921 537.97161865]
[131.32510376 552.95666504]
[144.10678101 561.55517578]
[149.31364441 575.86401367]
[145.14585876 590.32409668]
[133.40312195 599.44799805]
[134.07292175 614.43304443]
[134.74270630 629.41809082]
[135.41249084 644.40313721]
[136.08227539 659.38818359]
[136.75205994 674.37322998]
[146.02883911 687.89630127]
[138.71276855 702.57305908]
[122.32997894 703.30529785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[10 198]
[11 197]
[12 196]
[13 195]
[18 190]
[19 189]
[20 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[29 179]
[30 177]
[31 176]
[32 175]
[34 172]
[35 171]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[44 161]
[45 160]
[46 159]
[47 158]
[53 152]
[54 151]
[55 137]
[56 136]
[57 135]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[65 126]
[66 125]
[70 124]
[71 123]
[72 122]
[74 121]
[75 120]
[76 118]
[77 117]
[78 116]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
