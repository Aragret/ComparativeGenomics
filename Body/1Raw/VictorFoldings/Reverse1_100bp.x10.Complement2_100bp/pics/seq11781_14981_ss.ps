%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[133.66418457 394.32980347]
[126.67606354 381.05181885]
[120.50240326 367.37615967]
[115.16571808 353.35266113]
[110.68549347 339.03256226]
[107.07807159 324.46804810]
[104.35662079 309.71231079]
[102.53105927 294.81918335]
[101.60806274 279.84298706]
[101.59098816 264.83840942]
[102.47990417 249.86015320]
[104.27156830 234.96289062]
[106.95943451 220.20100403]
[110.53370667 205.62832642]
[114.98133087 191.29804993]
[120.28608704 177.26246643]
[126.42861176 163.57278442]
[133.38648987 150.27894592]
[141.13435364 137.42947388]
[128.77984619 128.92265320]
[116.42533112 120.41582489]
[104.07082367 111.90899658]
[91.52942657 103.68019104]
[78.80738831 95.73350525]
[66.08535004 87.78681946]
[53.36331558 79.84013367]
[44.42702103 77.94792175]
[40.51226044 71.67923737]
[27.90994644 63.54402161]
[15.30763531 55.40880585]
[2.70532370 47.27359009]
[-6.36385489 59.23048782]
[-16.31134987 70.46724701]
[-27.08018303 80.91950226]
[-38.60866928 90.52738190]
[-50.83077240 99.23585510]
[-63.67649078 106.99504089]
[-77.07223511 113.76049805]
[-90.94128418 119.49346161]
[-105.20419312 124.16110992]
[-119.77925873 127.73668671]
[-134.58299255 130.19973755]
[-149.53062439 131.53613281]
[-164.53651428 131.73822021]
[-179.51469421 130.80484009]
[-194.37939453 128.74134827]
[-209.04547119 125.55957031]
[-223.42890930 121.27771759]
[-237.44731140 115.92031860]
[-251.02038574 109.51806641]
[-264.07040405 102.10762787]
[-276.52258301 93.73145294]
[-288.30563354 84.43751526]
[-299.35205078 74.27905273]
[-309.59854126 63.31425095]
[-318.98641968 51.60592270]
[-327.46191406 39.22112656]
[-334.97650146 26.23080635]
[-341.48712158 12.70936871]
[-346.95648193 -1.26573694]
[-351.35324097 -15.61446095]
[-354.65222168 -30.25461388]
[-356.83453369 -45.10233688]
[-357.88769531 -60.07258224]
[-357.80563354 -75.07960510]
[-356.58883667 -90.03743744]
[-354.24426270 -104.86040497]
[-350.78536987 -119.46360779]
[-346.23196411 -133.76339722]
[-340.61010742 -147.67785645]
[-333.95202637 -161.12727356]
[-326.29583740 -174.03465271]
[-317.68539429 -186.32601929]
[-308.17004395 -197.93098450]
[-297.80422974 -208.78306580]
[-286.64739990 -218.82012939]
[-274.76342773 -227.98464966]
[-262.22039795 -236.22415161]
[-249.09011841 -243.49143982]
[-235.44784546 -249.74487305]
[-221.37168884 -254.94865417]
[-206.94229126 -259.07296753]
[-192.24229431 -262.09417725]
[-177.35592651 -263.99496460]
[-162.36842346 -264.76449585]
[-147.36564636 -264.39831543]
[-132.43353271 -262.89852905]
[-117.65760040 -260.27374268]
[-103.12250519 -256.53900146]
[-88.91149902 -251.71565247]
[-75.10597229 -245.83135986]
[-61.78501511 -238.91981506]
[-49.02492142 -231.02061462]
[-36.89878082 -222.17901611]
[-25.47605133 -212.44563293]
[-14.82216644 -201.87623596]
[-4.99814892 -190.53137207]
[3.93972993 -178.47599792]
[11.94027424 -165.77920532]
[18.95765495 -152.51370239]
[24.95168114 -138.75546265]
[29.88801384 -124.58330536]
[33.73838043 -110.07840729]
[36.48072815 -95.32385254]
[38.09934616 -80.40415192]
[38.58496094 -65.40476990]
[37.93479538 -50.41161346]
[36.15257263 -35.51057053]
[33.24850082 -20.78699112]
[29.23921204 -6.32521486]
[24.14767456 7.79192495]
[18.00305176 21.48356438]
[10.84053898 34.67127991]
[23.44285202 42.80649567]
[36.04516220 50.94171143]
[48.64747620 59.07692719]
[61.31000137 67.11809540]
[74.03203583 75.06478119]
[86.75407410 83.01146698]
[99.47611237 90.95815277]
[103.31870270 90.63128662]
[107.28672028 91.99976349]
[110.61975861 95.08161926]
[112.57765198 99.55448914]
[124.93215942 108.06131744]
[137.28666687 116.56813812]
[149.64117432 125.07496643]
[158.88116455 113.25291443]
[168.81808472 102.01033020]
[179.41569519 91.38823700]
[190.63531494 81.42539215]
[202.43600464 72.15814972]
[214.77470398 63.62032318]
[227.60639954 55.84307098]
[240.88427734 48.85476685]
[254.55986023 42.68091202]
[268.58325195 37.34403610]
[282.90332031 32.86361313]
[297.46777344 29.25598907]
[312.22348022 26.53432846]
[327.11657715 24.70856476]
[342.09274292 23.78535652]
[357.09735107 23.76807594]
[372.07562256 24.65678406]
[386.97290039 26.44823837]
[401.73483276 29.13590050]
[416.30755615 32.70996857]
[430.63787842 37.15739441]
[444.67355347 42.46195221]
[458.36331177 48.60429001]
[471.65725708 55.56198883]
[484.50683594 63.30966568]
[496.86517334 71.81904602]
[508.68716431 81.05908203]
[519.92968750 90.99605560]
[530.55175781 101.59371185]
[540.51452637 112.81337738]
[549.78173828 124.61411285]
[558.31951904 136.95286560]
[566.09667969 149.78459167]
[573.08496094 163.06250000]
[579.25872803 176.73811340]
[584.59552002 190.76153564]
[589.07592773 205.08161926]
[592.68347168 219.64608765]
[595.40502930 234.40179443]
[597.23071289 249.29490662]
[598.15386963 264.27108765]
[598.17108154 279.27569580]
[597.28228760 294.25393677]
[595.49078369 309.15121460]
[592.80303955 323.91314697]
[589.22894287 338.48583984]
[584.78143311 352.81616211]
[579.47680664 366.85177612]
[573.33441162 380.54153442]
[566.37664795 393.83541870]
[558.62890625 406.68496704]
[550.11944580 419.04327393]
[540.87939453 430.86523438]
[530.94238281 442.10772705]
[520.34466553 452.72973633]
[509.12493896 462.69247437]
[497.32415771 471.95959473]
[484.98538208 480.49731445]
[472.15359497 488.27444458]
[458.87567139 495.26263428]
[445.20004272 501.43637085]
[431.17657471 506.77310181]
[416.85647583 511.25338745]
[402.29199219 514.86090088]
[387.53625488 517.58239746]
[372.64312744 519.40802002]
[357.66696167 520.33111572]
[342.66235352 520.34826660]
[327.68411255 519.45941162]
[312.78683472 517.66778564]
[298.02493286 514.97998047]
[283.45223999 511.40579224]
[269.12194824 506.95825195]
[255.08634949 501.65356445]
[241.39663696 495.51107788]
[228.10276794 488.55328369]
[215.25326538 480.80548096]
[202.89500427 472.29598999]
[191.07307434 463.05584717]
[179.83062744 453.11874390]
[169.20867920 442.52099609]
[159.24598694 431.30123901]
[149.97891235 419.50042725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 127]
[20 126]
[21 125]
[22 124]
[23 120]
[24 119]
[25 118]
[26 117]
[28 116]
[29 115]
[30 114]
[31 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
