%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[229.41255188 377.40695190]
[229.28410339 362.39950562]
[230.34840393 347.42929077]
[232.59873962 332.59097290]
[236.02088928 317.97833252]
[240.59318542 303.68377686]
[246.28675842 289.79769897]
[253.06558228 276.40786743]
[260.88681030 263.59893799]
[269.70098877 251.45190430]
[258.29852295 241.70594788]
[246.89605713 231.95997620]
[235.42135620 222.29916382]
[223.87506104 212.72404480]
[209.13916016 210.55551147]
[203.45545959 195.79048157]
[188.71955872 193.62194824]
[183.03587341 178.85691833]
[171.48956299 169.28179932]
[159.94326782 159.70668030]
[148.39697266 150.13156128]
[136.85066223 140.55644226]
[125.30435944 130.98132324]
[113.75806427 121.40620422]
[102.21176147 111.83108521]
[107.68332672 125.79753876]
[108.11728668 140.79125977]
[103.46265411 155.05079651]
[94.26625061 166.90095520]
[81.60846710 174.94958496]
[66.97631836 178.25114441]
[52.08878326 176.41777039]
[38.69482803 169.66485596]
[28.36796379 158.78570557]
[22.32138062 145.05839539]
[21.26542473 130.09561157]
[25.32414818 115.65515900]
[34.02073669 103.43347931]
[46.33352280 94.86637878]
[60.81601334 90.96029663]
[75.76682281 92.17412567]
[89.43083191 98.36614227]
[80.47013855 86.33676147]
[82.88246155 101.14151764]
[80.88332367 116.00770569]
[74.64567566 129.64924622]
[64.70913696 140.88601685]
[51.93330383 148.74592590]
[37.42342758 152.54901123]
[22.43474960 151.96626282]
[8.26394653 147.04811096]
[-3.86306930 138.22000122]
[-12.89718819 126.24566650]
[-18.05686951 112.16100311]
[-18.89574814 97.18447876]
[-15.34125423 82.61170959]
[-7.70088530 69.70339203]
[3.36438966 59.57621384]
[16.89731407 53.10628510]
[31.72715187 50.85331726]
[46.57098007 53.01221466]
[60.14464951 59.39620972]
[71.27167511 69.45030975]
[66.02495575 55.39783859]
[60.77824020 41.34536743]
[55.53152084 27.29289818]
[43.45593643 17.07082367]
[46.25271988 2.44115400]
[41.40456772 -2.05405831]
[39.79585266 -7.50466013]
[41.06581879 -12.10859585]
[36.23982239 -26.31105232]
[31.41382599 -40.51350784]
[26.58782768 -54.71596146]
[21.76182938 -68.91841888]
[6.94861794 -66.36592102]
[-8.08151913 -66.16226959]
[-22.95845032 -68.31247711]
[-37.31581879 -72.76360321]
[-50.80006027 -79.40602112]
[-63.07911301 -88.07616425]
[-73.85059357 -98.56051636]
[-82.84925079 -110.60089111]
[-89.85347748 -123.90079498]
[-94.69078827 -138.13269043]
[-97.24205780 -152.94610596]
[-97.44447327 -167.97627258]
[-95.29303741 -182.85302734]
[-90.84072876 -197.21002197]
[-84.19719696 -210.69371033]
[-75.52603912 -222.97204590]
[-65.04080200 -233.74267578]
[-52.99967957 -242.74032593]
[-39.69920349 -249.74345398]
[-25.46690559 -254.57958984]
[-10.65327358 -257.12963867]
[4.37689734 -257.33081055]
[19.25347328 -255.17814636]
[33.61010742 -250.72465515]
[47.09325027 -244.08001709]
[59.37087250 -235.40785217]
[70.14062500 -224.92172241]
[79.13729095 -212.87985229]
[86.13932037 -199.57879639]
[90.97428894 -185.34609985]
[93.52311707 -170.53225708]
[93.72304535 -155.50207520]
[91.56915283 -140.62567139]
[87.11447906 -126.26940918]
[80.46871948 -112.78681946]
[71.79553986 -100.50991058]
[61.30852509 -89.74102020]
[49.26591873 -80.74534607]
[35.96428680 -73.74441528]
[40.79028320 -59.54196167]
[45.61627960 -45.33950424]
[50.44227982 -31.13704872]
[55.26827621 -16.93459320]
[60.30519104 -2.80556417]
[72.00550079 6.41138172]
[69.58399200 22.04617882]
[74.83071136 36.09865189]
[80.07743073 50.15112305]
[85.32415009 64.20359039]
[92.49951172 77.37606812]
[101.46021271 89.40544891]
[111.78688049 100.28478241]
[123.33318329 109.85990143]
[134.87948608 119.43502045]
[146.42578125 129.01014709]
[157.97209167 138.58526611]
[169.51838684 148.16038513]
[181.06468201 157.73550415]
[192.61099243 167.31062317]
[208.17276001 170.16403198]
[213.03057861 184.24418640]
[228.59234619 187.09759521]
[233.45018005 201.17774963]
[244.99647522 210.75286865]
[253.59985352 213.82200623]
[256.64202881 220.55751038]
[268.04449463 230.30348206]
[279.44696045 240.04945374]
[290.07348633 229.45147705]
[301.50842285 219.73129272]
[313.67950439 210.95036316]
[326.50976562 203.16418457]
[339.91809082 196.42198181]
[353.81970215 190.76640320]
[368.12667847 186.23320007]
[382.74862671 182.85102844]
[397.59304810 180.64126587]
[412.56610107 179.61788940]
[427.57315063 179.78736877]
[442.51928711 181.14863586]
[457.31002808 183.69306946]
[471.85186768 187.40460205]
[486.05282593 192.25976562]
[499.82315063 198.22784424]
[513.07580566 205.27113342]
[525.72692871 213.34507751]
[537.69659424 222.39865112]
[548.90911865 232.37458801]
[559.29357910 243.20983887]
[568.78436279 254.83590698]
[577.32147217 267.17926025]
[584.85089111 280.16186523]
[591.32501221 293.70162964]
[596.70294189 307.71301270]
[600.95062256 322.10733032]
[604.04125977 336.79367065]
[605.95526123 351.67910767]
[606.68060303 366.66958618]
[606.21258545 381.67028809]
[604.55432129 396.58639526]
[601.71612549 411.32357788]
[597.71606445 425.78869629]
[592.57934570 439.89025879]
[586.33850098 453.53915405]
[579.03302002 466.64904785]
[570.70898438 479.13708496]
[561.41906738 490.92428589]
[551.22204590 501.93612671]
[540.18237305 512.10302734]
[528.36981201 521.36065674]
[515.85906982 529.65045166]
[502.72927856 536.92010498]
[489.06338501 543.12365723]
[474.94781494 548.22174072]
[460.47180176 552.18225098]
[445.72692871 554.98016357]
[430.80633545 556.59765625]
[415.80441284 557.02465820]
[400.81597900 556.25836182]
[385.93582153 554.30364990]
[371.25799561 551.17285156]
[356.87533569 546.88580322]
[342.87872314 541.46960449]
[329.35668945 534.95849609]
[316.39471436 527.39361572]
[304.07476807 518.82281494]
[292.47470093 509.30029297]
[281.66787720 498.88623047]
[271.72262573 487.64648438]
[262.70181274 475.65209961]
[254.66247559 462.97894287]
[247.65544128 449.70709229]
[241.72502136 435.92050171]
[236.90870667 421.70632935]
[233.23695374 407.15441895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 143]
[11 142]
[12 141]
[13 139]
[14 138]
[16 136]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[24 128]
[25 127]
[42 126]
[43 125]
[63 124]
[64 123]
[65 122]
[66 121]
[68 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
