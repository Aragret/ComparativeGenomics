%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[42.54821396 554.07189941]
[32.49977875 565.22814941]
[21.32242203 575.25305176]
[9.14278793 584.03302002]
[-3.90111709 591.46868896]
[-17.66149521 597.47570801]
[-31.98243141 601.98602295]
[-46.70165634 604.94848633]
[-61.65239334 606.32965088]
[-76.66523743 606.11376953]
[-91.57008362 604.30334473]
[-106.19804382 600.91882324]
[-120.38337708 595.99859619]
[-133.96534729 589.59844971]
[-146.79006958 581.79083252]
[-158.71221924 572.66424561]
[-169.59671021 562.32214355]
[-179.32022095 550.88159180]
[-187.77256775 538.47235107]
[-194.85798645 525.23492432]
[-200.49620056 511.31936646]
[-204.62330627 496.88333130]
[-207.19253540 482.09039307]
[-208.17480469 467.10818481]
[-207.55897522 452.10641479]
[-205.35200500 437.25509644]
[-201.57891846 422.72250366]
[-196.28247070 408.67333984]
[-189.52267456 395.26672363]
[-181.37609863 382.65460205]
[-171.93507385 370.97988892]
[-161.30657959 360.37481689]
[-149.61102295 350.95962524]
[-136.98094177 342.84094238]
[-123.55943298 336.11077881]
[-109.49858093 330.84536743]
[-94.95769501 327.10440063]
[-80.10154724 324.93023682]
[-65.09846497 324.34753418]
[-50.11843491 325.36291504]
[-35.33120728 327.96481323]
[-20.90432549 332.12380981]
[-15.24153900 318.23379517]
[-9.57875252 304.34375000]
[-3.91596580 290.45373535]
[1.74682081 276.56369019]
[0.72368586 273.18945312]
[1.28406656 269.15200806]
[3.72187138 265.20101929]
[7.98509455 262.18902588]
[14.26245499 248.56570435]
[20.53981590 234.94239807]
[26.81717682 221.31907654]
[32.99294662 207.64941406]
[32.11014175 204.98881531]
[32.22804260 201.81820679]
[33.54618454 198.51701355]
[36.12319183 195.52976990]
[39.85828018 193.31549072]
[46.73768997 179.98605347]
[53.61710358 166.65663147]
[52.89908218 163.20455933]
[53.81743240 159.23320007]
[56.59800720 155.51544189]
[61.11294556 152.89582825]
[68.58068848 139.88687134]
[76.04843140 126.87791443]
[83.51616669 113.86896515]
[90.98390961 100.86001587]
[90.51427460 97.03224182]
[91.73413849 93.01605225]
[94.68982697 89.57062531]
[99.08673096 87.44763947]
[97.04366302 74.71231079]
[104.00186157 64.33120728]
[115.77807617 61.56581879]
[124.00688171 49.02441788]
[132.23568726 36.48301697]
[117.99710846 41.20135880]
[103.44181824 37.57593536]
[93.07994843 26.73012543]
[90.12223053 12.02462006]
[95.48513794 -1.98391986]
[107.50692749 -10.95479488]
[122.46250916 -12.10828304]
[135.71774292 -5.08696270]
[143.16532898 7.93353319]
[142.49749756 22.91890717]
[152.32807922 11.58931351]
[162.15866089 0.25972050]
[171.98924255 -11.06987286]
[175.24974060 -19.60256958]
[182.05151367 -22.49355888]
[192.04968262 -33.67553329]
[202.04785156 -44.85750961]
[205.47839355 -60.30231094]
[219.72958374 -64.63278961]
[229.72775269 -75.81476593]
[239.72592163 -86.99674225]
[229.58604431 -98.06748199]
[220.59886169 -110.09283447]
[212.85368347 -122.95326996]
[206.42750549 -136.52098083]
[201.38418579 -150.66111755]
[197.77383423 -165.23315430]
[195.63237000 -180.09225464]
[194.98104858 -195.09072876]
[195.82633972 -210.07952881]
[198.15986633 -224.90966797]
[201.95841980 -239.43377686]
[207.18424988 -253.50749207]
[213.78541565 -266.99093628]
[221.69631958 -279.75009155]
[230.83831787 -291.65817261]
[241.12057495 -302.59683228]
[252.44088745 -312.45730591]
[264.68673706 -321.14163208]
[277.73641968 -328.56350708]
[291.46026611 -334.64913940]
[305.72183228 -339.33807373]
[320.37942505 -342.58367920]
[335.28732300 -344.35372925]
[350.29739380 -344.63061523]
[365.26040649 -343.41156006]
[380.02770996 -340.70874023]
[394.45251465 -336.54895020]
[408.39144897 -330.97360229]
[421.70599365 -324.03805542]
[434.26379395 -315.81124878]
[445.94006348 -306.37493896]
[456.61871338 -295.82296753]
[466.19366455 -284.26013184]
[474.56976318 -271.80139160]
[481.66369629 -258.57058716]
[487.40499878 -244.69917297]
[491.73660278 -230.32504272]
[494.61547852 -215.59103394]
[496.01300049 -200.64361572]
[495.91525269 -185.63131714]
[494.32324219 -170.70335388]
[491.25277710 -156.00808716]
[486.73434448 -141.69157410]
[480.81292725 -127.89609528]
[473.54730225 -114.75875854]
[465.00973511 -102.41014862]
[455.28503418 -90.97297668]
[444.46987915 -80.56092072]
[432.67172241 -71.27746582]
[420.00787354 -63.21487045]
[406.60415649 -56.45326996]
[392.59381104 -51.05987167]
[378.11608887 -47.08826828]
[363.31481934 -44.57794189]
[348.33718872 -43.55383682]
[333.33200073 -44.02613068]
[318.44842529 -45.99013138]
[303.83435059 -49.42632294]
[289.63500977 -54.30054855]
[275.99157715 -60.56436539]
[263.03964233 -68.15551758]
[250.90789795 -76.99856567]
[240.90972900 -65.81658936]
[230.91156006 -54.63461685]
[228.19615173 -39.98962402]
[213.22982788 -34.85933685]
[203.23165894 -23.67736244]
[193.23348999 -12.49538708]
[183.31883240 -1.23929179]
[173.48825073 10.09030151]
[163.65766907 21.41989517]
[153.82708740 32.74948883]
[144.77708435 44.71182251]
[136.54827881 57.25322342]
[128.31947327 69.79462433]
[128.26396179 87.34352112]
[111.74925232 95.48881531]
[103.99286652 108.32775116]
[96.52512360 121.33670807]
[89.05738068 134.34565735]
[81.58963776 147.35461426]
[74.12190247 160.36355591]
[66.94653320 173.53604126]
[60.06711960 186.86546326]
[53.18770599 200.19490051]
[46.70820999 213.72323608]
[46.09469223 222.83705139]
[40.44049454 227.59643555]
[34.16313171 241.21975708]
[27.88577080 254.84307861]
[21.60840988 268.46640015]
[15.63684750 282.22650146]
[9.97406101 296.11651611]
[4.31127453 310.00653076]
[-1.35151196 323.89657593]
[-7.01429844 337.78659058]
[6.20815039 344.89990234]
[18.59958076 353.37835693]
[30.01958656 363.12597656]
[40.33877182 374.03222656]
[49.44020844 385.97357178]
[57.22077942 398.81472778]
[63.59231567 412.41012573]
[68.48262787 426.60580444]
[71.83629608 441.24087524]
[73.61533356 456.14950562]
[73.79957581 471.16275024]
[72.38694000 486.11056519]
[69.39342499 500.82351685]
[64.85295105 515.13488770]
[58.81696701 528.88256836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 195]
[43 194]
[44 193]
[45 192]
[46 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 185]
[59 184]
[60 183]
[61 182]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[73 176]
[76 174]
[77 173]
[78 172]
[88 171]
[89 170]
[90 169]
[91 168]
[93 167]
[94 166]
[95 165]
[97 163]
[98 162]
[99 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
