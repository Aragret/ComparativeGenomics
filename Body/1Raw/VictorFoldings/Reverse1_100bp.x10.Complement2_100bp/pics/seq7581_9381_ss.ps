%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[78.82021332 612.09954834]
[69.64354706 624.00103760]
[58.79547501 634.40185547]
[46.51834488 643.06964111]
[33.08643723 649.81066895]
[18.79982185 654.47436523]
[3.97766781 656.95660400]
[-11.04889202 657.20184326]
[-25.94415855 655.20465088]
[-40.37536621 651.00970459]
[-54.02011871 644.71063232]
[-66.57358551 636.44818115]
[-77.75531006 626.40692139]
[-87.31550598 614.81121826]
[-95.04058075 601.92010498]
[-100.75794983 588.02154541]
[-104.33990479 573.42608643]
[-105.70639801 558.45977783]
[-104.82692719 543.45697021]
[-101.72112274 528.75286865]
[-96.45836639 514.67590332]
[-89.15625000 501.54055786]
[-79.97789001 489.64035034]
[-69.12833405 479.24105835]
[-56.84996796 470.57507324]
[-43.41709900 463.83596802]
[-29.12981987 459.17428589]
[-14.30731297 456.69415283]
[0.71928179 456.45104980]
[15.61426449 458.45031738]
[19.80127525 444.04653931]
[23.98828697 429.64276123]
[28.17529869 415.23898315]
[24.29815483 400.85784912]
[35.58001328 389.76596069]
[39.76702118 375.36215210]
[43.95403290 360.95837402]
[48.14104462 346.55459595]
[36.56138992 356.08935547]
[21.89620590 359.24093628]
[7.42173290 355.30523682]
[-3.62839389 345.16152954]
[-8.78554916 331.07595825]
[-6.89760971 316.19522095]
[1.61365271 303.84378052]
[14.84680080 296.78094482]
[29.84551430 296.58456421]
[43.25904465 303.29852295]
[52.09077454 315.42288208]
[54.36766815 330.24908447]
[60.84716415 316.72076416]
[67.32666016 303.19241333]
[73.80615234 289.66406250]
[80.28565216 276.13571167]
[84.14995575 261.64202881]
[85.26560211 246.68356323]
[86.38125610 231.72511292]
[87.27407074 216.75170898]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[92.16359711 37.27493668]
[95.69964600 30.78508759]
[96.59246063 15.81168175]
[97.48528290 0.83827615]
[98.37809753 -14.13512993]
[99.27091217 -29.10853577]
[88.11025238 -19.08657455]
[73.12344360 -18.45756721]
[61.16226196 -27.50908661]
[57.69518661 -42.10290146]
[64.30731964 -55.56691360]
[77.97569275 -61.74555969]
[92.45130157 -57.81404495]
[101.11658478 -45.56801987]
[95.73292542 -60.44507599]
[105.44184875 -71.74047852]
[107.88757324 -86.53974915]
[110.33330536 -101.33901978]
[112.77902985 -116.13829041]
[115.22475433 -130.93756104]
[117.67048645 -145.73683167]
[120.11621094 -160.53610229]
[122.56193542 -175.33537292]
[108.35304260 -180.25628662]
[95.18025208 -187.50787354]
[83.42256927 -196.88150024]
[73.41828918 -208.10746765]
[65.45524597 -220.86277771]
[59.76256943 -234.78044128]
[56.50403214 -249.46002197]
[55.77339935 -264.47915649]
[57.59169006 -279.40570068]
[61.90658569 -293.81021118]
[68.59394073 -307.27819824]
[77.46134186 -319.42221069]
[88.25366974 -329.89285278]
[100.66039276 -338.38879395]
[114.32454681 -344.66564941]
[128.85299683 -348.54278564]
[143.82771301 -349.90866089]
[158.81787109 -348.72399902]
[173.39215088 -345.02285767]
[187.13122559 -338.91171265]
[199.63978577 -330.56643677]
[210.55795288 -320.22711182]
[219.57159424 -308.19125366]
[226.42134094 -294.80508423]
[230.91014099 -280.45382690]
[232.90882874 -265.55035400]
[232.35989380 -250.52349854]
[229.27914429 -235.80558777]
[223.75520325 -221.82009888]
[215.94702148 -208.96940613]
[206.07923889 -197.62326050]
[194.43577576 -188.10810852]
[181.35165405 -180.69773865]
[167.20332336 -175.60534668]
[152.39784241 -172.97743225]
[137.36120605 -172.88964844]
[134.91548157 -158.09037781]
[132.46975708 -143.29110718]
[130.02403259 -128.49183655]
[127.57830048 -113.69255829]
[125.13257599 -98.89328766]
[122.68684387 -84.09401703]
[120.24111938 -69.29474640]
[125.79971313 -55.47623825]
[115.91585541 -43.12229538]
[114.24431610 -28.21571922]
[113.35150146 -13.24231339]
[112.45868683 1.73109198]
[111.56587219 16.70449829]
[110.67305756 31.67790413]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[102.25910950 217.42149353]
[104.96194458 223.45524597]
[104.30978394 229.10075378]
[101.33970642 232.84075928]
[100.22406006 247.79920959]
[99.10841370 262.75765991]
[106.72864532 249.83744812]
[117.08875275 238.98995972]
[129.64526367 230.78421021]
[143.73947144 225.65069580]
[158.63204956 223.85867310]
[173.54174805 225.50218201]
[187.68641663 230.49497986]
[200.32408142 238.57516479]
[210.79179382 249.31886292]
[218.54042053 262.16247559]
[223.16349792 276.43228149]
[224.41851807 291.37969971]
[222.23960876 306.22058105]
[216.74110413 320.17648315]
[208.21144104 332.51522827]
[197.09805298 342.58956909]
[183.98394775 349.87106323]
[169.55705261 353.97772217]
[154.57415771 354.69409180]
[139.82127380 351.98260498]
[126.07227325 345.98553467]
[114.04841614 337.01742554]
[104.38044739 325.54873657]
[97.57553101 312.18112183]
[93.99063873 297.61581421]
[93.81399536 282.61520386]
[87.33450317 296.14355469]
[80.85500336 309.67190552]
[74.37551117 323.20025635]
[67.89601135 336.72857666]
[62.54482651 350.74160767]
[58.35781479 365.14538574]
[54.17080307 379.54916382]
[49.98379517 393.95297241]
[53.56145477 409.36434937]
[42.57907867 419.42599487]
[38.39206696 433.82977295]
[34.20505905 448.23355103]
[30.01804543 462.63732910]
[43.66369247 468.93447876]
[56.21833420 477.19515991]
[67.40149689 487.23480225]
[76.96334076 498.82913208]
[84.69024658 511.71914673]
[90.40959930 525.61688232]
[93.99362946 540.21185303]
[95.36225891 555.17791748]
[94.48492432 570.18084717]
[91.38121033 584.88543701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 200]
[31 199]
[32 198]
[33 197]
[35 195]
[36 194]
[37 193]
[38 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 187]
[55 161]
[56 160]
[57 159]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[67 147]
[69 145]
[70 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[84 138]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
