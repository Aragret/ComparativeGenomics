%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[277.92398071 344.80728149]
[270.65075684 331.68856812]
[263.37753296 318.56988525]
[256.10430908 305.45120239]
[248.83106995 292.33248901]
[241.55784607 279.21380615]
[228.61973572 271.83447266]
[228.69515991 256.01345825]
[219.91456604 243.85198975]
[209.75100708 232.82011414]
[199.58746338 221.78823853]
[192.74342346 218.99884033]
[189.35623169 210.51562500]
[179.35806274 199.33364868]
[169.35989380 188.15167236]
[159.36170959 176.96969604]
[149.36354065 165.78773499]
[139.36537170 154.60575867]
[129.36720276 143.42378235]
[119.36902618 132.24180603]
[109.28788757 121.13456726]
[99.12434387 110.10269165]
[91.78073120 106.77945709]
[88.89310455 98.83008575]
[78.89493561 87.64810944]
[70.84201813 83.33668518]
[68.83266449 76.22442627]
[59.00208282 64.89482880]
[49.17150116 53.56523895]
[39.34091949 42.23564529]
[29.51033974 30.90605164]
[33.01710892 45.49037552]
[32.12920761 60.46407318]
[26.92344856 74.53176880]
[17.85017776 86.47646332]
[5.69432831 95.26483154]
[-8.49250031 100.13657379]
[-23.48300362 100.67024994]
[-37.98035431 96.81968689]
[-50.73038483 88.91799927]
[-60.63009262 77.64875793]
[-66.82305145 63.98686218]
[-68.77350616 49.11421585]
[-66.31272888 34.31743622]
[-59.65360260 20.87660599]
[-49.37220001 9.95448208]
[-36.35797119 2.49594092]
[-21.73677444 -0.85377908]
[-6.77349091 0.19510603]
[7.23740530 5.55185699]
[19.08140182 14.75051880]
[12.80404091 1.12720299]
[6.52668047 -12.49611282]
[0.24931958 -26.11942863]
[-0.15040599 -11.12475586]
[-3.95138979 3.38567185]
[-10.95423985 16.65066719]
[-20.79159927 27.97437286]
[-32.94742203 36.76277542]
[-46.78403854 42.55484390]
[-61.57560349 45.04674530]
[-76.54618835 44.10775757]
[-90.91045380 39.78713608]
[-103.91489410 32.31153488]
[-114.87731171 22.07310677]
[-123.22264099 9.60894108]
[-128.51310730 -4.42711782]
[-130.47117615 -19.29876709]
[-128.99414062 -34.22586823]
[-124.15948486 -48.42537689]
[-116.22080994 -61.15241623]
[-105.59457397 -71.73934937]
[-92.83821106 -79.63080597]
[-78.62088013 -84.41281128]
[-63.68841171 -85.83452606]
[-48.82411957 -83.82135773]
[-34.80776215 -78.47891235]
[-22.37460518 -70.08744812]
[-12.17686939 -59.08716965]
[-4.74885750 -46.05359650]
[-5.64167356 -61.02700043]
[-6.53448963 -76.00040436]
[-7.42730522 -90.97380829]
[-8.32012081 -105.94721985]
[-9.21293736 -120.92062378]
[-25.10814667 -128.41564941]
[-34.96762848 -142.85522461]
[-36.14970398 -160.21054077]
[-28.41872787 -175.69424438]
[-13.98521805 -185.08105469]
[-15.32345200 -200.02124023]
[-16.66168594 -214.96142578]
[-31.47988892 -217.89356995]
[-44.87112808 -224.88294983]
[-55.74983978 -235.36294556]
[-63.23412704 -248.48400879]
[-66.71727753 -263.18246460]
[-65.91693115 -278.26675415]
[-60.89796448 -292.51409912]
[-52.06724167 -304.76950073]
[-40.14063263 -314.03948975]
[-26.08497047 -319.57257080]
[-11.03968716 -320.92022705]
[3.77556252 -317.97317505]
[17.15977478 -310.97036743]
[28.02795029 -300.47943115]
[35.49905396 -287.35086060]
[38.96743774 -272.64892578]
[38.15193558 -257.56542969]
[33.11865997 -243.32315063]
[24.27562904 -231.07661438]
[12.33971119 -221.81861877]
[-1.72150111 -216.29965210]
[-0.38326690 -201.35946655]
[0.95496726 -186.41928101]
[12.92178059 -182.36791992]
[22.50275421 -174.06094360]
[28.25141525 -162.70573425]
[29.28222847 -149.97323608]
[25.40684128 -137.75209045]
[17.16728592 -127.86852264]
[5.76046896 -121.81343842]
[6.65328455 -106.84003448]
[7.54610062 -91.86663055]
[8.43891621 -76.89321899]
[9.33173180 -61.91981506]
[10.22454834 -46.94641113]
[13.87263584 -32.39678955]
[20.14999580 -18.77347374]
[26.42735672 -5.15015793]
[32.70471954 8.47315884]
[40.83993530 21.07546997]
[50.67051315 32.40506363]
[60.50109482 43.73465729]
[70.33167267 55.06425095]
[80.16225433 66.39384460]
[90.07691193 77.64994049]
[100.07508087 88.83191681]
[110.15621948 99.93914795]
[120.31976318 110.97102356]
[128.43597412 115.16207123]
[130.55099487 122.24362946]
[140.54917908 133.42561340]
[150.54734802 144.60757446]
[160.54551697 155.78955078]
[170.54368591 166.97152710]
[180.54185486 178.15350342]
[190.54003906 189.33547974]
[200.53820801 200.51745605]
[210.61933899 211.62469482]
[220.78289795 222.65657043]
[230.94644165 233.68844604]
[227.38986206 219.11618042]
[228.96296692 204.19889832]
[235.48095703 190.68905640]
[246.17810059 180.17378235]
[259.79772949 173.88839722]
[274.73977661 172.57130432]
[289.24890137 176.37722778]
[301.62060547 184.85906982]
[310.40142822 197.02035522]
[314.55981445 211.43243408]
[313.60726929 226.40216064]
[307.65567017 240.17089844]
[297.40420532 251.12113953]
[284.05725098 257.96646118]
[269.18273926 259.90264893]
[254.52812195 256.70223999]
[241.81385803 248.74021912]
[255.27220154 257.05789185]
[254.67654419 271.94058228]
[261.94976807 285.05926514]
[269.22299194 298.17797852]
[276.49621582 311.29666138]
[283.76947021 324.41534424]
[291.04269409 337.53405762]
[305.23568726 332.56753540]
[320.06393433 330.07122803]
[335.10076904 330.11703491]
[349.91351318 332.70355225]
[364.07601929 337.75637817]
[377.18081665 345.13015747]
[388.85079956 354.61273193]
[398.75024414 365.93127441]
[406.59432983 378.76010132]
[412.15731812 392.73010254]
[415.27917480 407.43936157]
[415.87008667 422.46463013]
[413.91305542 437.37359619]
[409.46438599 451.73736572]
[402.65206909 465.14257812]
[393.67208862 477.20361328]
[382.78286743 487.57339478]
[370.29766846 495.95361328]
[356.57571411 502.10308838]
[342.01184082 505.84494019]
[327.02505493 507.07150269]
[312.04656982 505.74746704]
[297.50735474 501.91094971]
[283.82571411 495.67230225]
[271.39529419 487.21105957]
[260.57376099 476.77062988]
[251.67245483 464.65142822]
[244.94749451 451.20217896]
[240.59236145 436.80978394]
[238.73237610 421.88836670]
[239.42103577 406.86724854]
[242.63853455 392.17861938]
[248.29231262 378.24511719]
[256.21966553 365.46759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[8 169]
[9 152]
[10 151]
[11 150]
[13 149]
[14 148]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 140]
[22 139]
[24 138]
[25 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[51 131]
[52 130]
[53 129]
[54 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
