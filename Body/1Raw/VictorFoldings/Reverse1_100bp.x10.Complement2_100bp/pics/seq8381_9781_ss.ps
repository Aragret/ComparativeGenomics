%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[-90.32635498 589.60919189]
[-84.46774292 603.46533203]
[-81.25517273 618.16204834]
[-80.79805756 633.19885254]
[-83.11196136 648.06359863]
[-88.11808777 662.25000000]
[-95.64591980 675.27478027]
[-105.43906403 686.69445801]
[-117.16397095 696.12005615]
[-130.42129517 703.23046875]
[-144.75949097 707.78356934]
[-159.69021606 709.62426758]
[-174.70492554 708.68981934]
[-189.29223633 705.01220703]
[-202.95529175 698.71649170]
[-215.22874451 690.01727295]
[-225.69456482 679.21069336]
[-233.99629211 666.66497803]
[-239.85116577 652.80731201]
[-243.05978394 638.10968018]
[-243.51283264 623.07275391]
[-241.19493103 608.20861816]
[-236.18498230 594.02362061]
[-228.65362549 581.00079346]
[-218.85740662 569.58380127]
[-207.12995911 560.16137695]
[-193.87072754 553.05450439]
[-179.53129578 548.50531006]
[-164.60008240 546.66864014]
[-149.58561707 547.60705566]
[-134.99931335 551.28869629]
[-128.72193909 537.66534424]
[-122.44458771 524.04205322]
[-116.16722107 510.41873169]
[-117.03867340 507.00216675]
[-116.29856873 502.99374390]
[-113.68677521 499.15554810]
[-109.29331207 496.33694458]
[-102.41389465 483.00750732]
[-95.53448486 469.67807007]
[-88.65507507 456.34866333]
[-81.77565765 443.01922607]
[-74.89624786 429.68978882]
[-68.01683044 416.36035156]
[-61.13742065 403.03094482]
[-65.89677429 388.96380615]
[-59.10995865 375.34786987]
[-44.32278824 370.45120239]
[-37.44337845 357.12176514]
[-30.56396484 343.79232788]
[-23.68455124 330.46292114]
[-16.80513954 317.13348389]
[-25.46538353 301.74282837]
[-23.13270378 284.07904053]
[-10.55396461 271.23947144]
[7.36913824 268.49719238]
[13.84863377 254.96884155]
[20.32813072 241.44049072]
[26.80762482 227.91213989]
[33.28712082 214.38380432]
[39.76661682 200.85545349]
[39.05273819 196.13322449]
[41.29775620 190.91241455]
[46.64572906 187.02516174]
[53.52514267 173.69572449]
[60.40455246 160.36630249]
[67.28396606 147.03688049]
[56.22723007 136.96958923]
[48.15198517 124.38421631]
[43.60826111 110.13795471]
[42.90554047 95.20116425]
[46.09168625 80.59123993]
[52.94968414 67.30329895]
[63.01241684 56.24242783]
[75.59448242 48.16201401]
[89.83887482 43.61243057]
[104.77536774 42.90357208]
[119.38660431 46.08371353]
[126.26601410 32.75428391]
[133.14543152 19.42485619]
[132.59898376 3.61308885]
[145.31164551 -4.14819050]
[152.19105530 -17.47761917]
[159.07046509 -30.80704880]
[164.83650208 -44.65453339]
[169.45051575 -58.92726898]
[174.06452942 -73.20000458]
[178.67852783 -87.47273254]
[183.07952881 -101.81258392]
[187.26654053 -116.21636200]
[191.45355225 -130.62014771]
[190.84396362 -139.73420715]
[195.81161499 -145.20634460]
[200.21261597 -159.54618835]
[204.61360168 -173.88604736]
[209.01460266 -188.22589111]
[213.41560364 -202.56573486]
[199.96321106 -209.28013611]
[187.79954529 -218.11726379]
[177.25642395 -228.83605957]
[168.62147522 -241.14407349]
[162.13026428 -254.70556641]
[157.95988464 -269.15057373]
[156.22410583 -284.08499146]
[156.97027588 -299.10140991]
[160.17803955 -313.79019165]
[165.75988770 -327.75057983]
[173.56353760 -340.60177612]
[183.37611389 -351.99313354]
[194.92991638 -361.61392212]
[207.90972900 -369.20169067]
[221.96148682 -374.54937744]
[236.70182800 -377.51116943]
[251.72863770 -378.00622559]
[266.63195801 -376.02105713]
[281.00521851 -371.60980225]
[294.45629883 -364.89282227]
[306.61828613 -356.05334473]
[317.15933228 -345.33251953]
[325.79193115 -333.02282715]
[332.28051758 -319.46008301]
[336.44812012 -305.01428223]
[338.18099976 -290.07952881]
[337.43194580 -275.06323242]
[334.22137451 -260.37509155]
[328.63681030 -246.41575623]
[320.83068848 -233.56608582]
[311.01593018 -222.17660522]
[299.46026611 -212.55804443]
[286.47897339 -204.97279358]
[272.42620850 -199.62779236]
[257.68527222 -196.66885376]
[242.65838623 -196.17668152]
[227.75544739 -198.16473389]
[223.35444641 -183.82489014]
[218.95346069 -169.48504639]
[214.55245972 -155.14518738]
[210.15145874 -140.80534363]
[205.85733032 -126.43313599]
[201.67031860 -112.02935028]
[197.48330688 -97.62557220]
[198.95759583 -93.08293152]
[197.59385681 -87.56593323]
[192.95126343 -82.85872650]
[188.33724976 -68.58599091]
[183.72325134 -54.31325912]
[179.10923767 -40.04052353]
[190.96765137 -49.22628403]
[205.72015381 -51.93981934]
[220.07102966 -47.57491302]
[230.81425476 -37.10670471]
[235.54974365 -22.87381554]
[233.21957397 -8.05590916]
[224.34434509 4.03665686]
[210.90676880 10.70237160]
[195.90885925 10.45209789]
[182.70117188 3.34174633]
[174.23435974 -9.04021168]
[172.39990234 -23.92763710]
[165.52049255 -10.59820747]
[158.64106750 2.73122191]
[159.67958069 17.58957863]
[146.47485352 26.30426788]
[139.59544373 39.63369751]
[132.71603394 52.96312714]
[143.77276611 63.03040314]
[151.84800720 75.61578369]
[156.39173889 89.86204529]
[157.09446716 104.79883575]
[153.90830994 119.40876007]
[147.05030823 132.69670105]
[136.98757935 143.75756836]
[124.40551758 151.83798218]
[110.16112518 156.38757324]
[95.22463226 157.09643555]
[80.61339569 153.91629028]
[73.73398590 167.24571228]
[66.85456848 180.57514954]
[59.97515869 193.90457153]
[53.29496384 207.33494568]
[46.81546783 220.86329651]
[40.33597183 234.39164734]
[33.85647583 247.91998291]
[27.37697983 261.44833374]
[20.89748383 274.97668457]
[28.24217415 285.09216309]
[30.57561493 297.29968262]
[27.51525688 309.27105713]
[19.70132828 318.74966431]
[8.66405487 323.97570801]
[-3.47570968 324.01290894]
[-10.35512257 337.34231567]
[-17.23453522 350.67175293]
[-24.11394691 364.00119019]
[-30.99336052 377.33059692]
[-26.41810608 392.22036743]
[-33.58469009 405.64028931]
[-47.80799103 409.91033936]
[-54.68740463 423.23977661]
[-61.56681824 436.56921387]
[-68.44622803 449.89865112]
[-75.32564545 463.22805786]
[-82.20505524 476.55749512]
[-89.08446503 489.88693237]
[-95.96388245 503.21633911]
[-102.54390717 516.69610596]
[-108.82126617 530.31939697]
[-115.09863281 543.94274902]
[-121.37599182 557.56604004]
[-109.10018921 566.26196289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 209]
[32 208]
[33 207]
[34 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[61 180]
[64 179]
[65 178]
[66 177]
[67 176]
[78 165]
[79 164]
[80 163]
[82 161]
[83 160]
[84 159]
[85 147]
[86 146]
[87 145]
[88 144]
[89 141]
[90 140]
[91 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
