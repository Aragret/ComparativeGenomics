%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[17.92239952 592.98419189]
[8.76995373 604.88122559]
[-1.41209817 615.90991211]
[-12.54177284 625.98150635]
[-24.52945900 635.01483154]
[-37.27863693 642.93725586]
[-50.68666077 649.68493652]
[-64.64556885 655.20355225]
[-79.04296875 659.44866943]
[-93.76293945 662.38616943]
[-108.68696594 663.99224854]
[-123.69488525 664.25415039]
[-138.66586304 663.16961670]
[-153.47935486 660.74749756]
[-168.01608276 657.00720215]
[-182.15902710 651.97894287]
[-195.79428101 645.70312500]
[-208.81208801 638.23028564]
[-221.10762024 629.62066650]
[-232.58187866 619.94348145]
[-243.14248657 609.27673340]
[-252.70439148 597.70623779]
[-261.19064331 585.32519531]
[-268.53289795 572.23333740]
[-274.67202759 558.53594971]
[-279.55859375 544.34344482]
[-283.15328979 529.77001953]
[-285.42712402 514.93304443]
[-286.36184692 499.95196533]
[-285.94985962 484.94741821]
[-284.19454956 470.04022217]
[-281.11001587 455.35034180]
[-276.72109985 440.99612427]
[-271.06314087 427.09310913]
[-264.18170166 413.75326538]
[-256.13214111 401.08395386]
[-246.97933960 389.18722534]
[-236.79695129 378.15884399]
[-225.66697693 368.08761597]
[-213.67901611 359.05462646]
[-200.92959595 351.13259888]
[-187.52136230 344.38531494]
[-173.56228638 338.86712646]
[-159.16476440 334.62243652]
[-144.44470215 331.68542480]
[-129.52061462 330.07977295]
[-114.51269531 329.81835938]
[-99.54174805 330.90332031]
[-84.72833252 333.32589722]
[-70.19171143 337.06661987]
[-56.04893494 342.09533691]
[-42.41386414 348.37158203]
[-34.94612122 335.36260986]
[-27.47838211 322.35366821]
[-20.01064110 309.34472656]
[-12.54289913 296.33575439]
[-5.07515860 283.32681274]
[-6.06428051 265.80572510]
[9.93633747 256.69189453]
[17.20956802 243.57319641]
[24.28667259 230.34767151]
[31.16608429 217.01824951]
[38.04549789 203.68881226]
[37.00698853 188.83045959]
[50.21171188 180.11576843]
[57.09112549 166.78634644]
[56.05261612 151.92797852]
[69.25733948 143.21330261]
[76.13675690 129.88386536]
[83.01616669 116.55443573]
[89.89557648 103.22500610]
[96.07135010 89.55533600]
[101.52670288 75.58254242]
[106.98206329 61.60974121]
[112.43741608 47.63694382]
[117.89277649 33.66414642]
[123.34812927 19.69134903]
[128.80349731 5.71855164]
[134.25885010 -8.25424671]
[136.92463684 -23.01546288]
[136.70130920 -38.01380157]
[136.47798157 -53.01213837]
[135.91976929 -68.00174713]
[135.02696228 -82.97515106]
[126.48197937 -96.29032898]
[133.44801331 -109.45556641]
[132.55520630 -124.42897034]
[131.66238403 -139.40237427]
[130.76957703 -154.37577820]
[127.45368195 -160.09561157]
[127.51496887 -165.77832031]
[130.07983398 -169.80703735]
[129.63323975 -184.80038452]
[129.18663025 -199.79373169]
[128.74002075 -214.78707886]
[128.29341125 -229.78042603]
[113.89340210 -234.51490784]
[101.98301697 -243.89140320]
[94.00050354 -256.77764893]
[90.90979004 -271.61758423]
[93.08409882 -286.61917114]
[100.26085663 -299.97094727]
[111.57344818 -310.06060791]
[125.65582275 -315.66973877]
[140.80746460 -316.12106323]
[155.19873047 -311.36007690]
[167.09181213 -301.96163940]
[175.05056763 -289.06069946]
[178.11392212 -274.21511841]
[175.91197205 -259.21752930]
[168.71061707 -245.87901306]
[157.37945557 -235.81022644]
[143.28677368 -230.22703552]
[143.73336792 -215.23368835]
[144.17997742 -200.24034119]
[144.62658691 -185.24699402]
[145.07319641 -170.25363159]
[145.74298096 -155.26860046]
[146.63578796 -140.29519653]
[147.52861023 -125.32178497]
[148.42141724 -110.34838104]
[156.90254211 -98.10420990]
[150.00036621 -83.86797333]
[150.89318848 -68.89456177]
[153.27349854 -66.29332733]
[154.51214600 -62.40992355]
[154.02020264 -57.79350662]
[151.47631836 -53.23546600]
[151.69964600 -38.23712921]
[151.92297363 -23.23879051]
[158.35105896 -36.79164124]
[167.59770203 -48.60264206]
[179.21171570 -58.09551239]
[192.62644958 -64.80707550]
[207.18734741 -68.40985107]
[222.18397522 -68.72805786]
[236.88459778 -65.74617004]
[250.57194519 -59.60967636]
[262.57818604 -50.61799622]
[272.31750488 -39.20985031]
[279.31466675 -25.94186592]
[283.22833252 -11.46142006]
[283.86749268 3.52495670]
[281.20098877 18.28604317]
[275.35888672 32.10161591]
[266.62628174 44.29758072]
[255.42922974 54.27886963]
[242.31407166 61.55847549]
[227.92073059 65.78120422]
[212.95146179 66.74102783]
[198.13668823 64.39110565]
[184.19921875 58.84610748]
[171.81910706 50.37657547]
[161.60041809 39.39575577]
[154.04173279 26.43943596]
[149.51185608 12.13977909]
[148.23164368 -2.79888940]
[142.77629089 11.17390823]
[137.32093811 25.14670563]
[131.86557007 39.11950302]
[126.41021729 53.09230042]
[120.95485687 67.06510162]
[115.49950409 81.03789520]
[110.04414368 95.01069641]
[123.74644470 88.90766907]
[138.20010376 92.91911316]
[146.79711914 105.21103668]
[145.60702515 120.16375732]
[135.17393494 130.94107056]
[120.26770782 132.61575317]
[107.70327759 124.42214966]
[103.22500610 110.10442352]
[96.34559631 123.43385315]
[89.46618652 136.76327515]
[82.58676910 150.09271240]
[83.13321686 165.90447998]
[70.42055511 173.66575623]
[63.54114151 186.99517822]
[64.08759308 202.80694580]
[51.37492752 210.56823730]
[44.49551392 223.89765930]
[37.61610031 237.22708130]
[37.54580307 243.83818054]
[34.59090805 248.69262695]
[30.32826042 250.84643555]
[23.05503082 263.96511841]
[25.85249329 276.55627441]
[19.52452850 287.33312988]
[7.93379402 290.79455566]
[0.46605280 303.80349731]
[-7.00168848 316.81243896]
[-14.46942997 329.82141113]
[-21.93717003 342.83035278]
[-29.40491104 355.83932495]
[-17.10911751 364.44857788]
[-5.63456249 374.12539673]
[4.92636728 384.79183960]
[14.48863983 396.36203003]
[22.97526169 408.74279785]
[30.31790543 421.83447266]
[36.45745087 435.53164673]
[41.34445953 449.72399902]
[44.93959045 464.29733276]
[47.21389389 479.13421631]
[48.14905930 494.11526489]
[47.73755646 509.11984253]
[45.98269653 524.02709961]
[42.89861298 538.71704102]
[38.51013565 553.07141113]
[32.85259628 566.97460938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[59 186]
[60 185]
[61 182]
[62 181]
[63 180]
[65 178]
[66 177]
[68 175]
[69 174]
[70 173]
[71 172]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 130]
[81 129]
[82 128]
[83 124]
[84 123]
[86 121]
[87 120]
[88 119]
[89 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
