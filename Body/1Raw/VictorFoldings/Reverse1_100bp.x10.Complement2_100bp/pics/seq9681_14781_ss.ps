%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[139.77917480 559.09515381]
[150.09089661 548.02606201]
[163.31942749 540.68707275]
[160.43415833 525.96716309]
[150.39323425 514.96588135]
[155.33155823 499.93511963]
[145.29063416 488.93377686]
[150.22897339 473.90304565]
[147.34368896 459.18313599]
[134.87765503 451.11260986]
[131.74188232 436.22564697]
[140.29151917 423.20483398]
[137.40625000 408.48495483]
[127.36532593 397.48364258]
[132.30366516 382.45288086]
[129.30888367 367.75488281]
[126.20477295 353.07958984]
[123.10066223 338.40426636]
[119.99655151 323.72897339]
[110.92805481 335.67727661]
[96.08626556 337.85015869]
[83.97324371 329.00286865]
[81.52787018 314.20355225]
[90.15097046 301.92990112]
[104.90283966 299.21286011]
[117.33241272 307.60806274]
[115.54994202 292.71432495]
[111.63388062 286.44647217]
[113.85351562 277.58581543]
[112.29299164 262.66720581]
[110.73246765 247.74861145]
[109.17195129 232.83000183]
[107.61142731 217.91140747]
[106.05090332 202.99279785]
[94.99257660 189.36633301]
[102.63031006 172.61083984]
[100.73701477 157.73080444]
[98.73300171 142.86528015]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[74.29174805 64.07146454]
[71.82766724 47.09374237]
[82.19677734 33.85288620]
[79.75105286 19.05361557]
[77.30532074 4.25434494]
[67.42146301 -8.09959888]
[72.98006439 -21.91810989]
[70.53433228 -36.71738052]
[68.08860779 -51.51665115]
[65.42281342 -66.27787018]
[62.53754044 -80.99776459]
[59.65226746 -95.71765137]
[56.76699448 -110.43754578]
[53.88172150 -125.15743256]
[50.99644852 -139.87731934]
[47.56438828 -143.81027222]
[46.12778091 -148.22496033]
[46.53597641 -152.28062439]
[48.32646561 -155.31813049]
[46.10134888 -170.15217590]
[43.87623215 -184.98622131]
[41.65111542 -199.82026672]
[39.42599487 -214.65431213]
[37.20087814 -229.48835754]
[34.97576141 -244.32240295]
[25.27693176 -256.82214355]
[31.04065132 -270.55633545]
[22.19553375 -258.44174194]
[7.66330624 -254.72496033]
[-5.91209030 -261.10528564]
[-12.32416916 -274.66571045]
[-8.64141273 -289.20660400]
[3.45247078 -298.08004761]
[18.42832184 -297.22921753]
[29.44023705 -287.04150391]
[28.77045250 -302.02651978]
[25.26097298 -310.45986938]
[28.20392990 -317.23931885]
[27.75732422 -332.23266602]
[27.31071854 -347.22601318]
[26.86411285 -362.21936035]
[24.11923790 -366.65927124]
[23.42166328 -371.24911499]
[24.48566818 -375.18395996]
[26.74745750 -377.88888550]
[26.97078514 -392.88723755]
[27.19411278 -407.88555908]
[27.41744041 -422.88391113]
[19.88646126 -436.79772949]
[27.81239510 -449.40841675]
[28.03572273 -464.40673828]
[25.03442955 -473.03402710]
[28.37568665 -479.62628174]
[28.82229233 -494.61962891]
[29.26889801 -509.61297607]
[29.71550369 -524.60632324]
[30.16210938 -539.59967041]
[16.59013939 -546.58282471]
[7.39894295 -558.76824951]
[4.41344118 -573.73651123]
[8.22640800 -588.51568604]
[18.08077431 -600.17138672]
[32.01995087 -606.38928223]
[47.27629852 -605.93481445]
[60.82066727 -598.89825439]
[69.96380615 -586.67675781]
[72.89034271 -571.69683838]
[69.01920319 -556.93280029]
[59.11901474 -545.31604004]
[45.15546036 -539.15307617]
[44.70885468 -524.15972900]
[44.26224899 -509.16638184]
[43.81564331 -494.17303467]
[43.36903763 -479.17965698]
[43.03406143 -464.18341064]
[42.81073380 -449.18508911]
[50.35768509 -436.34402466]
[42.41577911 -422.66058350]
[42.19245148 -407.66223145]
[41.96912384 -392.66390991]
[41.74579620 -377.66555786]
[41.85746002 -362.66598511]
[42.30406952 -347.67263794]
[42.75067520 -332.67926025]
[43.19728088 -317.68591309]
[43.75548935 -302.69631958]
[44.42527771 -287.71127319]
[45.87469482 -272.78146362]
[55.41436768 -261.34277344]
[49.80980682 -246.54751587]
[52.03492355 -231.71347046]
[54.26004028 -216.87942505]
[56.48515701 -202.04537964]
[58.71027374 -187.21133423]
[60.93539047 -172.37730408]
[63.16050720 -157.54325867]
[65.71633911 -142.76260376]
[68.60161591 -128.04270935]
[71.48688507 -113.32281494]
[74.37216187 -98.60292816]
[77.25743103 -83.88303375]
[80.14270782 -69.16313934]
[83.53617096 -65.80256653]
[84.85456848 -60.27456284]
[82.88787842 -53.96237946]
[85.33361053 -39.16310883]
[87.77933502 -24.36383820]
[97.48825836 -13.06843662]
[92.10459137 1.80861735]
[94.55032349 16.60788727]
[96.99604797 31.40715981]
[108.41777802 37.37152100]
[114.40819550 48.99894333]
[112.58111572 62.14702988]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[115.82021332 133.81245422]
[113.59852600 140.86126709]
[115.60253906 155.72679138]
[119.85041046 163.81341553]
[117.52402496 170.82838440]
[127.16262817 179.39926147]
[128.34063721 191.84097290]
[120.96950531 201.43228149]
[122.53002930 216.35087585]
[124.09055328 231.26948547]
[125.65107727 246.18809509]
[127.21160126 261.10668945]
[128.77212524 276.02529907]
[130.44366455 290.93188477]
[132.22613525 305.82559204]
[134.67185974 320.62484741]
[137.77597046 335.30017090]
[140.88008118 349.97546387]
[143.98419189 364.65075684]
[148.82174683 372.39904785]
[147.02354431 379.56759644]
[157.27084351 391.62179565]
[152.12614441 405.59967041]
[155.01141357 420.31958008]
[167.84399414 429.14923096]
[170.56037903 444.11837769]
[162.06358337 456.29788208]
[164.94886780 471.01776123]
[175.19615173 483.07196045]
[170.05145264 497.04983521]
[180.29875183 509.10403442]
[175.15405273 523.08190918]
[178.03932190 537.80181885]
[193.05958557 539.60369873]
[206.78703308 545.96081543]
[217.87677002 556.25024414]
[225.24237061 569.46398926]
[228.16220093 584.30749512]
[226.35021973 599.32653809]
[219.98393250 613.04974365]
[209.68705750 624.13256836]
[196.46838379 631.48931885]
[181.62292480 634.39923096]
[166.60508728 632.57714844]
[152.88616943 626.20172119]
[141.81022644 615.89739990]
[134.46234131 602.67376709]
[131.56240845 587.82635498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[6 192]
[8 190]
[9 189]
[12 186]
[13 185]
[15 183]
[16 181]
[17 180]
[18 179]
[19 178]
[26 177]
[27 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[36 167]
[37 165]
[38 164]
[39 162]
[40 161]
[42 159]
[43 158]
[46 154]
[47 153]
[48 152]
[50 150]
[51 149]
[52 148]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[70 131]
[78 130]
[79 129]
[81 128]
[82 127]
[83 126]
[84 125]
[88 124]
[89 123]
[90 122]
[91 121]
[93 119]
[94 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
