%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[88.78112030 778.91802979]
[74.57420349 773.98498535]
[61.43982315 766.65979004]
[49.77712250 757.16491699]
[39.94051361 745.78894043]
[32.22891998 732.87762451]
[26.87668800 718.82324219]
[24.04646683 704.05297852]
[23.82426453 689.01562500]
[26.21683121 674.16821289]
[31.15146255 659.96185303]
[38.47819901 646.82830811]
[47.97438812 635.16668701]
[59.35145187 625.33135986]
[72.26365662 617.62121582]
[86.31861115 612.27056885]
[101.08921051 609.44201660]
[100.86588287 594.44372559]
[100.64255524 579.44537354]
[100.41922760 564.44702148]
[100.19589996 549.44866943]
[86.06587982 546.40722656]
[72.96321869 540.28796387]
[61.54929352 531.39611816]
[52.40109634 520.17694092]
[45.98200989 507.19332886]
[42.61837387 493.09790039]
[42.48287201 478.59979248]
[45.58568192 464.42926025]
[51.77379227 451.30078125]
[60.73854065 439.87707520]
[72.03100586 430.73562622]
[85.08450317 424.33944702]
[99.24300385 421.01379395]
[99.24300385 406.01379395]
[99.24300385 391.01379395]
[99.24300385 376.01379395]
[99.24300385 361.01379395]
[88.94660187 353.26696777]
[84.93217468 340.81838989]
[88.87858582 328.14416504]
[99.55902100 319.93789673]
[99.78234863 304.93954468]
[100.00567627 289.94122314]
[100.22900391 274.94287109]
[82.82408905 265.94076538]
[72.36441040 249.27746582]
[71.81894684 229.53192139]
[81.41918945 212.17837524]
[98.57270813 202.06869507]
[97.67989349 187.09529114]
[96.78707123 172.12188721]
[95.89425659 157.14848328]
[81.24674988 154.13983154]
[67.87657928 147.44357300]
[56.69443130 137.51577759]
[48.46194839 125.03268433]
[43.73986816 110.84454346]
[42.84983444 95.91774750]
[45.85245895 81.26900482]
[52.54323196 67.89608002]
[62.46642303 56.70985413]
[74.94613647 48.47224045]
[89.13233185 43.74433136]
[88.23951721 28.77092552]
[87.34670258 13.79752064]
[86.45388794 -1.17588556]
[85.56107330 -16.14929199]
[76.37558746 -4.29067326]
[62.00672531 0.01466043]
[47.81372452 -4.83907270]
[39.09022141 -17.04155159]
[39.08986282 -32.04154968]
[47.81278610 -44.24444199]
[62.00555801 -49.09885406]
[76.37461853 -44.79420090]
[85.56107330 -32.93492126]
[86.45388794 -47.90832901]
[87.34670258 -62.88173294]
[88.23951721 -77.85514069]
[85.62681580 -83.92846680]
[86.36295319 -89.56363678]
[89.38838959 -93.25901031]
[90.72662354 -108.19919586]
[92.06485748 -123.13938141]
[93.40309143 -138.07957458]
[94.74132538 -153.01974487]
[96.07955933 -167.95993042]
[97.41779327 -182.90011597]
[87.55993652 -194.96081543]
[89.12992096 -210.09323120]
[100.68869781 -219.41685486]
[93.03240204 -229.79684448]
[94.45459747 -242.21299744]
[103.65099335 -250.07130432]
[105.21151733 -264.98989868]
[106.77203369 -279.90850830]
[108.33255768 -294.82711792]
[109.89308167 -309.74572754]
[111.45360565 -324.66433716]
[97.71237946 -331.02493286]
[86.78269958 -341.50448608]
[79.85013580 -354.96621704]
[77.66668701 -369.94992065]
[80.46919250 -384.83026123]
[87.95366669 -397.99313354]
[99.30823517 -408.01074219]
[113.30124664 -413.79644775]
[128.41484070 -414.72262573]
[143.00962830 -410.68887329]
[155.50244141 -402.13269043]
[164.53817749 -389.98220825]
[169.13668823 -375.55541992]
[168.79919434 -360.41723633]
[163.56227112 -346.20971680]
[153.99398804 -334.47399902]
[141.13226318 -326.48309326]
[126.37220764 -323.10379028]
[124.81168365 -308.18521118]
[123.25116730 -293.26660156]
[121.69064331 -278.34799194]
[120.13011932 -263.42938232]
[118.56959534 -248.51077271]
[126.56867981 -232.89086914]
[115.62888336 -218.07862854]
[125.34666443 -206.84918213]
[124.20233917 -191.67864990]
[112.35797882 -181.56188965]
[111.01974487 -166.62170410]
[109.68151093 -151.68151855]
[108.34327698 -136.74133301]
[107.00504303 -121.80114746]
[105.66680908 -106.86096191]
[104.32857513 -91.92077637]
[103.21292877 -76.96232605]
[102.32010651 -61.98891830]
[101.42729187 -47.01551437]
[100.53447723 -32.04210663]
[100.53447723 -17.04210663]
[101.42729187 -2.06870151]
[102.32010651 12.90470409]
[103.21292877 27.87811089]
[104.10574341 42.85151672]
[118.75325012 45.86016083]
[132.12341309 52.55643082]
[143.30557251 62.48421860]
[151.53805542 74.96731567]
[156.26013184 89.15545654]
[157.15016174 104.08225250]
[154.14753723 118.73099518]
[147.45677185 132.10391235]
[137.53358459 143.29014587]
[125.05386353 151.52775574]
[110.86766815 156.25566101]
[111.76048279 171.22908020]
[112.65329742 186.20248413]
[113.54611206 201.17588806]
[123.72351074 204.18415833]
[132.64776611 209.88861084]
[139.62339783 217.83084106]
[144.11061096 227.37857056]
[145.76712036 237.77603149]
[144.47418213 248.20373535]
[140.34506226 257.84310913]
[133.71520996 265.94076538]
[125.11498260 271.86727905]
[115.22734070 275.16619873]
[115.00401306 290.16455078]
[114.78068542 305.16287231]
[114.55735779 320.16122437]
[126.96934509 332.48849487]
[126.63226318 349.64080811]
[114.24300385 361.01379395]
[114.24300385 376.01379395]
[114.24300385 391.01379395]
[114.24300385 406.01379395]
[114.24300385 421.01379395]
[129.39047241 424.70230103]
[143.21087646 431.89779663]
[154.90621948 442.18011475]
[163.80233765 454.95092773]
[169.38774109 469.46875000]
[171.34301758 484.89175415]
[169.55915833 500.32672119]
[164.14353943 514.88079834]
[155.41352844 527.71301270]
[143.87786865 538.08294678]
[130.20701599 545.39355469]
[115.19423676 549.22534180]
[115.41756439 564.22369385]
[115.64089203 579.22204590]
[115.86421967 594.22039795]
[116.08754730 609.21868896]
[130.93580627 611.60620117]
[145.14384460 616.53601074]
[158.27987671 623.85827637]
[169.94473267 633.35052490]
[179.78392029 644.72424316]
[187.49844360 657.63378906]
[192.85386658 671.68695068]
[195.68743896 686.45660400]
[195.91305542 701.49389648]
[193.52384949 716.34185791]
[188.59243774 730.54931641]
[181.26869202 743.68457031]
[171.77514648 755.34832764]
[160.40031433 765.18621826]
[147.48985291 772.89929199]
[133.43611145 778.25311279]
[118.66616058 781.08502197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[42 170]
[43 169]
[44 168]
[45 167]
[50 157]
[51 156]
[52 155]
[53 154]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[77 138]
[78 137]
[79 136]
[80 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[92 125]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
