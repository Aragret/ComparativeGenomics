%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[134.49269104 589.97808838]
[120.28977203 595.56738281]
[105.06893158 594.43212891]
[91.85227203 586.79785156]
[83.26397705 574.18023682]
[81.00924683 559.08459473]
[85.53577423 544.50811768]
[95.94480133 533.34503174]
[110.16961670 527.81170654]
[111.28527069 512.85327148]
[112.40091705 497.89480591]
[113.51656342 482.93634033]
[114.63220978 467.97790527]
[103.68808746 460.33145142]
[97.90497589 448.17825317]
[98.89002228 434.64685059]
[106.49259949 423.27938843]
[118.81581879 417.10449219]
[112.24484253 403.73770142]
[121.18247986 390.68283081]
[122.52071381 375.74264526]
[123.85894775 360.80245972]
[117.28797150 347.43566895]
[126.22560883 334.38079834]
[119.65463257 321.01400757]
[128.59226990 307.95913696]
[128.59226990 292.95913696]
[127.25403595 278.01895142]
[125.91580200 263.07876587]
[123.69068146 248.24472046]
[120.58657074 233.56942749]
[117.48246765 218.89411926]
[114.37835693 204.21882629]
[101.79354095 196.33479309]
[98.43647003 181.49617004]
[106.79129791 168.34950256]
[103.68718719 153.67420959]
[100.58308411 138.99890137]
[97.47897339 124.32360077]
[94.37486267 109.64829254]
[91.16158295 94.99650574]
[87.73052216 80.39418793]
[84.19084930 65.81781006]
[80.54276276 51.26818848]
[76.78646088 36.74613190]
[73.03016663 22.22407150]
[69.27386475 7.70201206]
[64.97973633 -6.67020082]
[60.15373993 -20.87265587]
[55.32774353 -35.07511139]
[44.12411499 -41.46584702]
[40.39691925 -53.39445877]
[45.62365341 -64.30352783]
[41.00964355 -78.57626343]
[36.39563370 -92.84899902]
[24.78853226 -103.60007477]
[28.23577690 -118.09027100]
[23.62176704 -132.36300659]
[16.87028313 -118.96832275]
[3.13854027 -112.93183136]
[-11.29549408 -117.01333618]
[-19.83277512 -129.34681702]
[-18.57016945 -144.29357910]
[-8.08492756 -155.02017212]
[6.82924223 -156.62252808]
[19.35489273 -148.36659241]
[16.25078201 -163.04190063]
[13.14667225 -177.71720886]
[10.04256248 -192.39250183]
[-0.38306969 -204.29278564]
[4.55295467 -218.34571838]
[1.44884467 -233.02102661]
[-3.89550543 -219.00538635]
[-14.73207855 -208.63386536]
[-28.96850204 -203.90901184]
[-43.85594559 -205.74313354]
[-56.51987839 -213.78208923]
[-64.51509094 -226.47367859]
[-66.29783630 -241.36737061]
[-61.52389145 -255.58740234]
[-51.11503220 -266.38812256]
[-37.08104324 -271.68408203]
[-22.13167191 -270.45272827]
[-9.15340424 -262.93176270]
[-0.65166879 -250.57225037]
[-1.09827471 -265.56558228]
[-1.54488063 -280.55895996]
[-1.99148655 -295.55230713]
[-2.43809247 -310.54565430]
[-2.88469839 -325.53900146]
[-17.69969177 -328.22406006]
[-31.63253593 -333.93106079]
[-44.07414246 -342.41043091]
[-54.48062134 -353.29156494]
[-62.39704132 -366.09875488]
[-67.47733307 -380.27212524]
[-69.49941254 -395.19207764]
[-68.37487793 -410.20635986]
[-64.15289307 -424.65866089]
[-57.01801682 -437.91711426]
[-47.28216171 -449.40219116]
[-35.37093735 -458.61178589]
[-21.80505180 -465.14328003]
[-7.17754555 -468.71115112]
[7.87212992 -469.15942383]
[22.68606567 -466.46853638]
[36.61666107 -460.75607300]
[49.05493164 -452.27178955]
[59.45713043 -441.38656616]
[67.36851501 -428.57626343]
[72.44322968 -414.40090942]
[74.45943451 -399.48016357]
[73.32899475 -384.46630859]
[69.10132599 -370.01568604]
[61.96123505 -356.76000977]
[52.22086334 -345.27877808]
[40.30601501 -336.07388306]
[26.73756027 -329.54772949]
[12.10865116 -325.98559570]
[12.55525780 -310.99224854]
[13.00186348 -295.99890137]
[13.44846916 -281.00555420]
[13.89507484 -266.01220703]
[14.34168148 -251.01884460]
[16.12414742 -236.12513733]
[19.22825813 -221.44982910]
[29.43186188 -210.59922791]
[24.71786499 -195.49661255]
[27.82197380 -180.82131958]
[30.92608452 -166.14601135]
[34.03019333 -151.47070312]
[37.89450073 -136.97702026]
[42.50851059 -122.70428467]
[53.78558731 -112.97408295]
[50.66836929 -97.46300507]
[55.28237534 -83.19026947]
[59.89638519 -68.91754150]
[73.53520966 -57.87446213]
[69.53019714 -39.90111160]
[74.35620117 -25.69865417]
[79.18219757 -11.49619865]
[88.05284882 -23.59212494]
[103.03363800 -24.35103798]
[113.08128357 -13.21349239]
[110.78903198 1.61032486]
[97.84664154 9.19284916]
[83.79592133 3.94571137]
[87.55222321 18.46777153]
[91.30852509 32.98983002]
[95.06482697 47.51189041]
[99.78318024 53.20038223]
[98.76722717 62.27813721]
[102.30690002 76.85451508]
[106.94003296 82.61262512]
[105.78904724 91.67424774]
[110.50341797 98.21238708]
[109.05016327 106.54418182]
[112.15427399 121.21949005]
[115.25838470 135.89479065]
[118.36249542 150.57009888]
[121.46660614 165.24539185]
[134.42922974 173.88299561]
[137.36817932 188.81005859]
[129.05364990 201.11471558]
[132.15776062 215.79000854]
[135.26187134 230.46531677]
[138.36598206 245.14060974]
[145.69073486 232.05061340]
[159.26194763 225.66142273]
[174.01792908 228.35604858]
[184.45506287 239.12947083]
[186.68052673 253.96345520]
[179.86430359 267.32531738]
[166.54866028 274.23138428]
[151.70002747 272.10586548]
[140.85598755 261.74053955]
[142.19421387 276.68072510]
[143.53245544 291.62091064]
[150.50442505 278.33966064]
[162.49667358 269.32934570]
[177.19369507 266.32968140]
[191.75770569 269.91992188]
[203.37661743 279.40676880]
[209.80703735 292.95852661]
[209.80731201 307.95852661]
[203.37741089 321.51049805]
[191.75883484 330.99780273]
[177.19496155 334.58856201]
[162.49784851 331.58947754]
[150.50524902 322.57958984]
[143.53245544 309.29736328]
[150.00770569 323.73281860]
[141.16578674 335.71902466]
[147.64105225 350.15447998]
[138.79913330 362.14068604]
[137.46089172 377.08087158]
[136.12266541 392.02105713]
[142.59791565 406.45651245]
[133.75599670 418.44271851]
[146.64862061 429.39154053]
[150.43717957 445.70559692]
[143.82157898 460.91070557]
[129.59066772 469.09353638]
[128.47502136 484.05200195]
[127.35936737 499.01043701]
[126.24372101 513.96893311]
[125.12807465 528.92736816]
[138.37469482 536.50958252]
[147.01261902 549.09326172]
[149.32676697 564.17993164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[18 199]
[20 197]
[21 196]
[22 195]
[24 193]
[26 191]
[27 178]
[28 177]
[29 176]
[30 167]
[31 166]
[32 165]
[33 164]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 155]
[42 153]
[43 152]
[44 150]
[45 149]
[46 148]
[47 147]
[48 141]
[49 140]
[50 139]
[53 137]
[54 136]
[55 135]
[57 133]
[58 132]
[66 131]
[67 130]
[68 129]
[69 128]
[71 126]
[72 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
