%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[177.54461670 437.81015015]
[183.33135986 423.94311523]
[191.03276062 411.04080200]
[200.49201965 399.36593628]
[211.51657104 389.15612793]
[223.88195801 380.61926270]
[217.20175171 367.18887329]
[210.52156067 353.75851440]
[203.84136963 340.32812500]
[197.16117859 326.89776611]
[190.48097229 313.46737671]
[184.68757629 308.87844849]
[183.80297852 299.78695679]
[181.20690918 298.72933960]
[178.87333679 296.57968140]
[177.22032166 293.43280029]
[176.62388611 289.53295898]
[177.36746216 285.25497437]
[171.70468140 271.36495972]
[166.04190063 257.47491455]
[160.37910461 243.58488464]
[154.20333862 229.91522217]
[147.52314758 216.48484802]
[140.84295654 203.05447388]
[128.17395020 200.70373535]
[119.03568268 191.34562683]
[116.92471313 178.24012756]
[122.83289337 166.13607788]
[116.35340118 152.60772705]
[109.87390137 139.07937622]
[104.14947510 134.40469360]
[103.40032959 125.30104065]
[97.12297058 111.67772675]
[90.64347076 98.14938354]
[83.96327972 84.71900177]
[77.28308105 71.28862762]
[70.60289001 57.85825348]
[63.92269516 44.42787552]
[57.24250031 30.99749947]
[44.89011002 32.37538147]
[32.73460007 29.90218544]
[21.94526863 23.83112526]
[13.55530071 14.76076603]
[8.36283016 3.57604790]
[6.85502625 -8.63804531]
[9.16242218 -20.70173264]
[15.04776192 -31.45439148]
[23.93030357 -39.86621857]
[17.85646820 -53.58148575]
[11.78263474 -67.29675293]
[-2.68686175 -73.06488800]
[-8.65121365 -87.06064606]
[-3.06300521 -100.81954956]
[-9.13683891 -114.53482056]
[-15.21067333 -128.25009155]
[-21.28450775 -141.96534729]
[-27.46027565 -155.63502502]
[-33.73763657 -169.25833130]
[-37.37012482 -171.63720703]
[-39.81117630 -174.73652649]
[-40.98059464 -178.09329224]
[-40.95680618 -181.26599121]
[-39.95607758 -183.88452148]
[-45.41143417 -197.85731506]
[-50.86679459 -211.83010864]
[-56.32215118 -225.80291748]
[-61.77750778 -239.77571106]
[-74.00394440 -249.81686401]
[-71.42528534 -264.48654175]
[-76.88064575 -278.45935059]
[-78.47483063 -263.54431152]
[-84.33925629 -249.73820496]
[-93.96659851 -238.23541260]
[-106.52399445 -230.03103638]
[-120.92510223 -225.83482361]
[-135.92408752 -226.00981140]
[-150.22337341 -230.54086304]
[-162.58593750 -239.03596497]
[-171.94230652 -250.76023865]
[-177.48303223 -264.69940186]
[-178.72882080 -279.64758301]
[-175.57186890 -294.31161499]
[-168.28530884 -307.42288208]
[-157.49948120 -317.84719849]
[-144.14747620 -324.68267822]
[-129.38436890 -327.33804321]
[-114.48733521 -325.58355713]
[-100.74510193 -319.57098389]
[-89.34651184 -309.82049561]
[-81.27909088 -297.17880249]
[-82.61732483 -312.11898804]
[-83.95555878 -327.05917358]
[-85.29379272 -341.99935913]
[-100.04508972 -345.35412598]
[-113.03668213 -353.10482788]
[-122.99579620 -364.49218750]
[-128.94673157 -378.40051270]
[-130.30647278 -393.46722412]
[-126.94181824 -408.21627808]
[-119.18239594 -421.20266724]
[-107.78839111 -431.15414429]
[-93.87608337 -437.09576416]
[-78.80844879 -438.44540405]
[-64.06166077 -435.07086182]
[-51.08046341 -427.30273438]
[-41.13662338 -415.90206909]
[-35.20433426 -401.98577881]
[-33.86478043 -386.91726685]
[-37.24919891 -372.17272949]
[-45.02602005 -359.19674683]
[-56.43334579 -349.26055908]
[-70.35360718 -343.33758545]
[-69.01537323 -328.39739990]
[-67.67713928 -313.45721436]
[-66.33890533 -298.51702881]
[-62.90784454 -283.91470337]
[-57.45248795 -269.94189453]
[-45.61625290 -260.90017700]
[-47.80471039 -245.23106384]
[-42.34935379 -231.25827026]
[-36.89399338 -217.28547668]
[-31.43863869 -203.31266785]
[-25.98328018 -189.33987427]
[-20.11432076 -175.53570557]
[-13.83695984 -161.91238403]
[-8.18276119 -157.15298462]
[-7.56924057 -148.03918457]
[-1.49540651 -134.32391357]
[4.57842731 -120.60865021]
[10.65226173 -106.89338684]
[24.59618759 -101.78432465]
[30.95129776 -87.96161652]
[25.49790192 -73.37058258]
[31.57173538 -59.65531921]
[37.64556885 -45.94005203]
[55.34040833 -46.03279495]
[71.34018707 -38.35155869]
[82.39968872 -24.40288353]
[86.25328064 -6.96964884]
[82.07888794 10.44406796]
[70.67287445 24.31730461]
[77.35307312 37.74768066]
[84.03326416 51.17805862]
[90.71346283 64.60843658]
[97.39365387 78.03881073]
[104.07385254 91.46918488]
[108.53960419 94.22073364]
[111.14582062 99.27849579]
[110.74628448 105.40036774]
[117.02364349 119.02368164]
[123.40225220 132.59988403]
[129.88174438 146.12823486]
[136.36123657 159.65658569]
[152.96432495 165.16629028]
[160.30122375 180.67385864]
[154.27333069 196.37426758]
[160.95352173 209.80465698]
[167.63371277 223.23503113]
[174.80882263 210.06240845]
[189.55392456 207.30885315]
[200.99946594 217.00418091]
[200.70823669 232.00135803]
[188.89491272 241.24501038]
[174.26913452 237.92210388]
[179.93191528 251.81213379]
[185.59471130 265.70214844]
[191.25749207 279.59219360]
[197.33132935 293.30746460]
[203.91136169 306.78720093]
[210.59155273 320.21755981]
[217.27174377 333.64794922]
[223.95193481 347.07830811]
[230.63214111 360.50869751]
[237.31233215 373.93905640]
[251.58082581 369.22836304]
[266.37451172 366.59634399]
[281.39221191 366.09652710]
[296.32815552 367.73913574]
[310.87829590 371.49069214]
[324.74639893 377.27487183]
[337.65011597 384.97387695]
[349.32675171 394.43096924]
[359.53860474 405.45361328]
[368.07775879 417.81741333]
[374.77038574 431.27066040]
[379.48019409 445.53945923]
[382.11129761 460.33331299]
[382.61019897 475.35101318]
[380.96664429 490.28686523]
[377.21417236 504.83679199]
[371.42916870 518.70452881]
[363.72937012 531.60778809]
[354.27154541 543.28381348]
[343.24826050 553.49499512]
[330.88391113 562.03338623]
[317.43026733 568.72515869]
[303.16119385 573.43408203]
[288.36715698 576.06433105]
[273.34942627 576.56225586]
[258.41366577 574.91778564]
[243.86399841 571.16442871]
[229.99661255 565.37854004]
[217.09384155 557.67791748]
[205.41836548 548.21942139]
[195.20788574 537.19549561]
[186.67025757 524.83062744]
[179.97932434 511.37655640]
[175.27127075 497.10717773]
[172.64198303 482.31298828]
[172.14495850 467.29522705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 169]
[13 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 158]
[23 157]
[24 156]
[28 153]
[29 152]
[30 151]
[32 150]
[33 149]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[39 141]
[48 135]
[49 134]
[50 133]
[53 130]
[54 129]
[55 128]
[56 127]
[57 125]
[58 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[69 117]
[70 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
