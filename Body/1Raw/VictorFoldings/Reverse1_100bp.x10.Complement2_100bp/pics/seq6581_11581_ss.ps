%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[14.33823109 222.43875122]
[20.92263985 235.93479919]
[25.92566299 250.09346008]
[29.28207588 264.73013306]
[30.94812012 279.65402222]
[30.90207863 294.67053223]
[29.14454842 309.58389282]
[25.69844437 324.19970703]
[20.60869217 338.32742310]
[13.94164848 351.78283691]
[5.78423166 364.39056396]
[-3.75721073 375.98617554]
[-14.55828571 386.41857910]
[-26.47817993 395.55169678]
[-39.36149216 403.26647949]
[-53.04026031 409.46237183]
[-67.33615875 414.05856323]
[-82.06280518 416.99517822]
[-97.02820587 418.23388672]
[-112.03726196 417.75857544]
[-126.89430237 415.57543945]
[-141.40562439 411.71289062]
[-155.38206482 406.22134399]
[-168.64137268 399.17233276]
[-181.01072693 390.65783691]
[-192.32884216 380.78878784]
[-202.44818115 369.69387817]
[-211.23680115 357.51776123]
[-218.58012390 344.41915894]
[-224.38243103 330.56887817]
[-228.56806946 316.14739990]
[-231.08247375 301.34283447]
[-231.89285278 286.34814453]
[-230.98864746 271.35879517]
[-228.38163757 256.57025146]
[-224.10583496 242.17527771]
[-218.21694946 228.36154175]
[-210.79179382 215.30917358]
[-201.92713928 203.18829346]
[-191.73857117 192.15693665]
[-180.35890198 182.35891724]
[-167.93650818 173.92198181]
[-154.63333130 166.95611572]
[-140.62281799 161.55213928]
[-126.08760071 157.78050232]
[-111.21718597 155.69036865]
[-96.20545197 155.30899048]
[-81.24809265 156.64134216]
[-66.54010773 159.67005920]
[-52.27325821 164.35565186]
[-38.63353348 170.63702393]
[-25.79875755 178.43229675]
[-13.93625736 187.63983154]
[-3.44875574 176.91545105]
[7.03874540 166.19107056]
[17.52624702 155.46670532]
[28.01374817 144.74232483]
[38.50124741 134.01794434]
[48.98875046 123.29355621]
[34.74014664 127.98155212]
[19.74399757 128.32145691]
[5.29762125 124.28385162]
[-7.34922600 116.21804047]
[-17.10246658 104.82180023]
[-23.11834526 91.08101654]
[-24.87643051 76.18439484]
[-22.22463036 61.42066193]
[-15.39235115 48.06700897]
[-4.97065401 37.27867508]
[8.13888073 29.98894691]
[22.80214691 26.82846642]
[37.75062561 28.07064629]
[51.69112015 33.60802078]
[63.41764450 42.96155930]
[71.91573334 55.32207870]
[76.45021820 69.62027740]
[76.62882233 84.61920929]
[72.43608856 99.02133179]
[64.23707581 111.57807159]
[77.30125427 104.20738220]
[90.36544037 96.83669281]
[95.28033447 90.44792175]
[103.67945862 89.45516968]
[116.85193634 82.27980804]
[130.02441406 75.10443878]
[143.19688416 67.92907715]
[145.31704712 52.67092514]
[155.89155579 41.71495819]
[170.71435547 39.11716461]
[184.06474304 45.66736221]
[197.23722839 38.49199677]
[210.40969849 31.31662941]
[223.58216858 24.14126396]
[236.75465393 16.96589851]
[249.92712402 9.79053116]
[263.09960938 2.61516500]
[256.83724976 -11.02153778]
[251.52009583 -25.05381012]
[247.17294312 -39.41622543]
[243.81605530 -54.04182053]
[241.46508789 -68.86240387]
[240.13098145 -83.80887604]
[239.81999207 -98.81153870]
[240.53353882 -113.80045319]
[242.26831055 -128.70573425]
[245.01620483 -143.45788574]
[248.76443481 -157.98811340]
[253.49549866 -172.22866821]
[259.18734741 -186.11318970]
[265.81344604 -199.57688904]
[273.34289551 -212.55703735]
[281.74060059 -224.99308777]
[290.96737671 -236.82707214]
[300.98025513 -248.00379944]
[311.73251343 -258.47116089]
[323.17401123 -268.18035889]
[335.25143433 -277.08615112]
[347.90844727 -285.14694214]
[361.08605957 -292.32522583]
[374.72277832 -298.58749390]
[388.75509644 -303.90454102]
[403.11755371 -308.25161743]
[417.74316406 -311.60839844]
[432.56375122 -313.95925903]
[447.51022339 -315.29327393]
[462.51290894 -315.60415649]
[477.50183105 -314.89050293]
[492.40707397 -313.15563965]
[507.15921021 -310.40765381]
[521.68939209 -306.65933228]
[535.92993164 -301.92816162]
[549.81439209 -296.23620605]
[563.27807617 -289.61001587]
[576.25817871 -282.08047485]
[588.69415283 -273.68270874]
[600.52807617 -264.45584106]
[611.70477295 -254.44290161]
[622.17205811 -243.69056702]
[631.88116455 -232.24900818]
[640.78686523 -220.17152405]
[648.84759521 -207.51445007]
[656.02575684 -194.33680725]
[662.28796387 -180.70002747]
[667.60491943 -166.66767883]
[671.95190430 -152.30520630]
[675.30859375 -137.67956543]
[677.65936279 -122.85894775]
[678.99322510 -107.91246033]
[679.30401611 -92.90979004]
[678.59027100 -77.92088318]
[676.85534668 -63.01562881]
[674.10723877 -48.26351929]
[670.35882568 -33.73334122]
[665.62756348 -19.49283791]
[659.93548584 -5.60840607]
[653.30920410 7.85521793]
[645.77960205 20.83525848]
[637.38171387 33.27119827]
[628.15478516 45.10505295]
[618.14178467 56.28165054]
[607.38940430 66.74887085]
[595.94775391 76.45792389]
[583.87017822 85.36353302]
[571.21307373 93.42417908]
[558.03540039 100.60227203]
[544.39855957 106.86434937]
[530.36614990 112.18122101]
[516.00366211 116.52808380]
[501.37802124 119.88468170]
[486.55737305 122.23535919]
[471.61087036 123.56915283]
[456.60821533 123.87984467]
[441.61929321 123.16600037]
[426.71405029 121.43093109]
[411.96197510 118.68273163]
[397.43182373 114.93421173]
[383.19134521 110.20286560]
[369.30694580 104.51073456]
[355.84338379 97.88436127]
[342.86337280 90.35464478]
[330.42749023 81.95669556]
[318.59371948 72.72966766]
[307.41717529 62.71657944]
[296.95004272 51.96411896]
[287.24105835 40.52241516]
[278.33554077 28.44481850]
[270.27496338 15.78764057]
[257.10247803 22.96300697]
[243.93002319 30.13837433]
[230.75753784 37.31373978]
[217.58506775 44.48910522]
[204.41258240 51.66447067]
[191.24011230 58.83983994]
[189.50273132 73.60871124]
[179.28108215 84.65323639]
[164.34130859 87.59551239]
[150.37225342 81.10154724]
[137.19978333 88.27691650]
[124.02730560 95.45228577]
[110.85482788 102.62764740]
[97.73612976 109.90087891]
[84.67195129 117.27156830]
[71.60776520 124.64225769]
[59.71313095 133.78106689]
[49.22562790 144.50543213]
[38.73812866 155.22981262]
[28.25062561 165.95419312]
[17.76312447 176.67857361]
[7.27562380 187.40295410]
[-3.21187711 198.12733459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 210]
[54 209]
[55 208]
[56 207]
[57 206]
[58 205]
[59 204]
[79 203]
[80 202]
[81 201]
[83 200]
[84 199]
[85 198]
[86 197]
[90 193]
[91 192]
[92 191]
[93 190]
[94 189]
[95 188]
[96 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
