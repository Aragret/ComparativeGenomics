%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[148.23379517 601.85327148]
[155.02397156 588.33477783]
[165.66067505 577.57769775]
[179.10185242 570.63574219]
[176.65612793 555.83648682]
[174.21040344 541.03723145]
[171.76466370 526.23797607]
[157.68685913 517.03717041]
[154.55761719 500.16940308]
[164.79356384 485.98330688]
[162.12777710 471.22210693]
[148.06437683 466.31433105]
[138.28067017 454.95056152]
[135.48010254 440.11740112]
[140.51319885 425.77984619]
[152.12275696 415.82168579]
[149.45695496 401.06045532]
[146.79116821 386.29922485]
[136.91514587 375.14962769]
[142.07672119 360.19409180]
[139.41091919 345.43286133]
[124.43376923 345.18994141]
[109.78713226 342.02862549]
[96.03432465 336.06857300]
[83.70467377 327.53713989]
[73.27310944 316.76068115]
[65.14189911 304.15206909]
[59.62513733 290.19488525]
[56.93658829 275.42486572]
[57.18143082 260.40933228]
[60.35212708 245.72543335]
[66.32864380 231.93791199]
[74.88300323 219.57742310]
[85.68796539 209.12010193]
[98.32955933 200.96917725]
[112.32293701 195.43951416]
[109.65714264 180.67829895]
[106.77187347 165.95840454]
[103.66776276 151.28309631]
[100.56365204 136.60780334]
[97.35037994 121.95600891]
[94.02811432 107.32855225]
[90.33779144 103.60089111]
[88.99869537 98.07096100]
[90.83157349 92.21626282]
[87.94630432 77.49636841]
[85.06102753 62.77647781]
[80.33937073 54.95703506]
[82.24409485 47.81604004]
[79.57830048 33.05482101]
[76.91250610 18.29360390]
[74.24670410 3.53238750]
[70.87358093 -0.45121756]
[69.50286102 -4.88680363]
[69.97139740 -8.93594265]
[71.80690765 -11.94646263]
[69.80289459 -26.81199074]
[67.79888153 -41.67751694]
[55.51459885 -51.25531387]
[53.69401169 -66.35961914]
[62.90068054 -78.01177979]
[60.89666748 -92.87731171]
[49.30638123 -107.18628693]
[56.60002136 -123.14779663]
[54.37490463 -137.98184204]
[52.14978790 -152.81588745]
[39.72426987 -162.20973206]
[37.67900085 -177.28524780]
[46.71116638 -189.07319641]
[44.48604965 -203.90724182]
[34.59652710 -212.18734741]
[33.04861450 -224.58847046]
[40.13090134 -234.39497375]
[38.12688828 -249.26051331]
[36.12287521 -264.12603760]
[34.11885834 -278.99157715]
[19.10044098 -278.82818604]
[4.17578125 -280.51168823]
[-10.42886448 -284.01654053]
[-24.49209404 -289.28958130]
[-37.80070877 -296.25094604]
[-50.15296173 -304.79504395]
[-61.36158752 -314.79235840]
[-71.25666809 -326.09133911]
[-79.68820190 -338.52069092]
[-86.52835846 -351.89199829]
[-91.67345428 -366.00253296]
[-95.04548645 -380.63842773]
[-96.59333801 -395.57775879]
[-96.29353333 -410.59408569]
[-94.15063477 -425.45971680]
[-90.19711304 -439.94934082]
[-84.49291229 -453.84329224]
[-77.12449646 -466.93093872]
[-68.20357513 -479.01385498]
[-57.86539459 -489.90887451]
[-46.26666641 -499.45083618]
[-33.58323288 -507.49508667]
[-20.00736427 -513.91967773]
[-5.74487352 -518.62725830]
[8.98802662 -521.54638672]
[23.96798706 -522.63281250]
[38.96791840 -521.87011719]
[53.76042175 -519.26983643]
[68.12125397 -514.87139893]
[81.83269501 -508.74148560]
[94.68689728 -500.97302246]
[106.48898315 -491.68374634]
[117.06004333 -481.01452637]
[126.23982239 -469.12710571]
[133.88916016 -456.20162964]
[139.89207458 -442.43411255]
[144.15759277 -428.03326416]
[146.62103271 -413.21734619]
[147.24505615 -398.21099854]
[146.02020264 -383.24172974]
[142.96502686 -368.53643799]
[138.12585449 -354.31808472]
[131.57606506 -340.80215454]
[123.41491699 -328.19363403]
[113.76615143 -316.68359375]
[102.77603912 -306.44653320]
[90.61119080 -297.63769531]
[77.45600891 -290.39056396]
[63.50993729 -284.81500244]
[48.98439026 -280.99557495]
[50.98840332 -266.13003540]
[52.99241638 -251.26452637]
[54.99642944 -236.39898682]
[66.45556641 -223.10781860]
[59.32009125 -206.13235474]
[61.54520798 -191.29830933]
[73.63845062 -182.67919922]
[76.10635376 -167.66706848]
[66.98383331 -155.04100037]
[69.20894623 -140.20695496]
[71.43406677 -125.37291718]
[80.97218323 -117.93309784]
[82.94736481 -105.59281921]
[75.76219177 -94.88132477]
[77.76620483 -80.01579285]
[89.72978210 -71.21758270]
[91.97389984 -56.17037201]
[82.66441345 -43.68153381]
[84.66842651 -28.81600380]
[86.67243958 -13.95047569]
[89.00792694 0.86659199]
[91.67372131 15.62780952]
[94.33951569 30.38902664]
[97.00531006 45.15024185]
[99.78092194 59.89120483]
[102.66619110 74.61109924]
[105.55146790 89.33098602]
[108.65557861 104.00629425]
[111.97783661 118.63375092]
[116.93022156 126.30915070]
[115.23895264 133.50369263]
[118.34306335 148.17898560]
[121.44717407 162.85429382]
[125.57486725 168.01895142]
[126.35723114 173.64788818]
[124.41835785 178.01249695]
[127.08415985 192.77371216]
[142.12776184 193.05946350]
[156.82185364 196.27369690]
[170.60205078 202.29109192]
[182.93951416 210.87863159]
[193.36111450 221.70474243]
[201.46768188 234.35202026]
[206.94920349 248.33340454]
[209.59677124 263.11083984]
[209.31045532 278.11602783]
[206.10313416 292.77230835]
[200.09991455 306.51681519]
[191.53324890 318.82199097]
[180.73390198 329.21603394]
[168.11824036 337.30078125]
[154.17213440 342.76705933]
[156.83793640 357.52828979]
[166.90463257 369.73370361]
[161.55238342 383.63345337]
[164.21818542 398.39465332]
[166.88397217 413.15588379]
[181.24336243 418.42422485]
[190.97352600 430.09558105]
[193.53823853 444.97134399]
[188.34738159 459.03942871]
[176.88899231 468.55630493]
[179.55479431 483.31753540]
[191.43031311 489.67254639]
[197.39042664 501.53372192]
[195.45944214 514.47021484]
[186.56393433 523.79223633]
[189.00967407 538.59149170]
[191.45539856 553.39074707]
[193.90112305 568.19006348]
[208.86106873 570.43835449]
[222.39315796 577.20135498]
[233.17163086 587.81640625]
[240.14054871 601.24359131]
[242.61712646 616.16748047]
[240.35877991 631.12591553]
[233.58673096 644.65344238]
[222.96444702 655.42480469]
[209.53259277 662.38470459]
[194.60707092 664.85131836]
[179.65014648 662.58294678]
[166.12713623 655.80181885]
[155.36288452 645.17236328]
[148.41198730 631.73583984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[10 189]
[11 188]
[16 183]
[17 182]
[18 181]
[20 179]
[21 178]
[36 163]
[37 162]
[38 159]
[39 158]
[40 157]
[41 155]
[42 154]
[45 153]
[46 152]
[47 151]
[49 150]
[50 149]
[51 148]
[52 147]
[56 146]
[57 145]
[58 144]
[61 141]
[62 140]
[64 137]
[65 136]
[66 135]
[69 132]
[70 131]
[73 129]
[74 128]
[75 127]
[76 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
