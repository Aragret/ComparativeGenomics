%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[175.40092468 553.81988525]
[176.00022888 538.81585693]
[178.27572632 523.97326660]
[182.19877625 509.47879028]
[187.72006226 495.51473999]
[194.77014160 482.25665283]
[203.26034546 469.87133789]
[213.08390808 458.51449585]
[224.11729431 448.32897949]
[236.22172546 439.44290161]
[228.75398254 426.43392944]
[221.28623962 413.42498779]
[213.81849670 400.41604614]
[206.35075378 387.40707397]
[198.88301086 374.39813232]
[190.93634033 361.67608643]
[182.52171326 349.25860596]
[174.10710144 336.84109497]
[174.05473328 351.84100342]
[167.11927795 365.14135742]
[154.85011292 373.77081299]
[139.98820496 375.80154419]
[125.85375214 370.77987671]
[115.60441589 359.82766724]
[111.52993774 345.39163208]
[114.54055023 330.69686890]
[123.96368408 319.02621460]
[137.69418335 312.98687744]
[152.66462708 313.92813110]
[165.53057861 321.63964844]
[159.25321960 308.01635742]
[152.97586060 294.39303589]
[146.69850159 280.76971436]
[140.42114258 267.14639282]
[134.14378357 253.52307129]
[127.86642456 239.89976501]
[121.58905792 226.27644348]
[120.07623291 241.19996643]
[113.03534698 254.44480896]
[101.51087189 264.04617310]
[87.21239471 268.57980347]
[72.26100922 267.37307739]
[58.87467194 260.60507202]
[49.03915405 249.27976990]
[44.21350861 235.07719421]
[45.11357880 220.10423279]
[51.60585785 206.58201599]
[62.72724152 196.51649475]
[76.82794952 191.40081787]
[91.81622314 191.99389648]
[105.46863556 198.20771790]
[115.75891876 209.11889648]
[112.43666077 194.49142456]
[107.88977051 188.66497803]
[109.17554474 179.62149048]
[106.07143402 164.94619751]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[85.38890839 115.31919098]
[79.25638580 104.22659302]
[80.55987549 91.61887360]
[88.83211517 82.01556396]
[85.94684601 67.29566956]
[83.06156921 52.57577896]
[79.01123047 47.35023499]
[78.31275940 41.71027374]
[80.31639862 37.37501526]
[70.43254089 25.02107048]
[75.99113464 11.20255947]
[73.54541016 -3.59671092]
[71.09968567 -18.39598274]
[68.65395355 -33.19525146]
[66.20822906 -47.99452209]
[63.76250076 -62.79379272]
[61.20666885 -77.57444763]
[58.54087448 -92.33566284]
[48.47417831 -104.54108429]
[53.82642365 -118.44082642]
[51.16062927 -133.20204163]
[48.49483109 -147.96325684]
[45.82903671 -162.72447205]
[43.16324234 -177.48568726]
[40.49744797 -192.24690247]
[37.83164978 -207.00813293]
[22.78225899 -207.46582031]
[8.15698624 -211.04284668]
[-5.40481281 -217.58282471]
[-17.31027412 -226.79985046]
[-27.03894424 -238.29101562]
[-34.16552353 -251.55395508]
[-38.37847137 -266.00888062]
[-39.49361801 -281.02386475]
[-37.46220779 -295.94253540]
[-32.37305069 -310.11273193]
[-24.44861984 -322.91497803]
[-14.03533936 -333.78958130]
[-1.58843148 -342.26119995]
[12.34797764 -347.95944214]
[27.16464806 -350.63525391]
[42.21385956 -350.17163086]
[56.83772278 -346.58886719]
[70.39694977 -340.04354858]
[82.29878235 -330.82183838]
[92.02293396 -319.32687378]
[99.14429474 -306.06112671]
[103.35155487 -291.60455322]
[104.46079254 -276.58911133]
[102.42351532 -261.67123413]
[97.32878113 -247.50303650]
[89.39931488 -234.70393372]
[78.98175812 -223.83341980]
[66.53151703 -215.36669922]
[52.59286880 -209.67391968]
[55.25866318 -194.91270447]
[57.92445755 -180.15148926]
[60.59025574 -165.39027405]
[63.25605011 -150.62905884]
[65.92184448 -135.86782837]
[68.58763885 -121.10662079]
[78.46366119 -109.95702362]
[73.30209351 -95.00145721]
[75.96788788 -80.24024200]
[80.25007629 -74.21657562]
[78.56177521 -65.23952484]
[81.00749969 -50.44025040]
[83.45322418 -35.64097977]
[85.89895630 -20.84170914]
[88.34468079 -6.04243851]
[90.79040527 8.75683212]
[100.49932861 20.05223274]
[95.11566925 34.92928696]
[97.78146362 49.69050598]
[100.66674042 64.41039276]
[103.55200958 79.13028717]
[117.45539093 88.02206421]
[120.75035858 104.19336700]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[120.74673462 161.84208679]
[123.85084534 176.51737976]
[127.06411743 191.16917419]
[130.38638306 205.79663086]
[135.21237183 219.99908447]
[141.48973083 233.62240601]
[147.76710510 247.24571228]
[154.04446411 260.86904907]
[160.32182312 274.49234009]
[166.59918213 288.11566162]
[172.87654114 301.73898315]
[179.15390015 315.36230469]
[186.52459717 328.42648315]
[194.93920898 340.84399414]
[203.35383606 353.26147461]
[208.70474243 339.24835205]
[222.94976807 334.54953003]
[235.58802795 342.62878418]
[237.30303955 357.53042603]
[226.83058167 368.26950073]
[211.89196777 366.93038940]
[219.35971069 379.93933105]
[226.82745361 392.94830322]
[234.29519653 405.95724487]
[241.76293945 418.96618652]
[249.23068237 431.97515869]
[263.00827026 426.00375366]
[277.36785889 421.61254883]
[292.12878418 418.85671997]
[307.10546875 417.77096558]
[322.10955811 418.36892700]
[336.95233154 420.64309692]
[351.44717407 424.56484985]
[365.41174316 430.08486938]
[378.67044067 437.13375854]
[391.05654907 445.62286377]
[402.41424561 455.44540405]
[412.60073853 466.47787476]
[421.48791504 478.58151245]
[428.96401978 491.60409546]
[434.93499756 505.38189697]
[439.32580566 519.74157715]
[442.08117676 534.50262451]
[443.16647339 549.47930908]
[442.56805420 564.48339844]
[440.29345703 579.32611084]
[436.37127686 593.82080078]
[430.85083008 607.78521729]
[423.80154419 621.04370117]
[415.31207275 633.42956543]
[405.48919678 644.78698730]
[394.45642090 654.97314453]
[382.35250854 663.85998535]
[369.32968140 671.33563232]
[355.55172729 677.30621338]
[341.19189453 681.69659424]
[326.43078613 684.45153809]
[311.45404053 685.53637695]
[296.44998169 684.93750000]
[281.60733032 682.66247559]
[267.11276245 678.73986816]
[253.14851379 673.21899414]
[239.89022827 666.16931152]
[227.50465393 657.67944336]
[216.14752197 647.85626221]
[205.96168518 636.82318115]
[197.07522583 624.71899414]
[189.59991455 611.69598389]
[183.62976074 597.91784668]
[179.23982239 583.55786133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[16 155]
[17 154]
[18 153]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[52 144]
[53 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[63 135]
[64 134]
[65 133]
[68 132]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 123]
[77 122]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
