%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[98.08023071 616.99542236]
[88.60485077 605.34411621]
[80.57405853 592.65386963]
[74.10057831 579.10284424]
[69.27529907 564.88122559]
[66.16595459 550.18878174]
[64.81620026 535.23168945]
[65.24497986 520.21997070]
[67.44627380 505.36428833]
[71.38919067 490.87326050]
[77.01836395 476.95031738]
[84.25476837 463.79086304]
[92.99683380 451.57971191]
[103.12181091 440.48822021]
[114.48757935 430.67211914]
[126.93457794 422.26922607]
[140.28807068 415.39749146]
[154.36058044 410.15338135]
[150.82090759 395.57702637]
[147.28123474 381.00064087]
[143.74156189 366.42425537]
[140.20188904 351.84790039]
[136.33758545 337.35418701]
[132.15057373 322.95040894]
[127.96356201 308.54663086]
[123.77655029 294.14285278]
[118.11201477 308.03216553]
[105.89907837 316.74102783]
[90.92205048 317.57089233]
[77.82173157 310.26461792]
[70.65739441 297.08615112]
[71.64897919 282.11895752]
[80.48925018 270.00079346]
[94.43894196 264.48660278]
[109.17559052 267.28503418]
[120.13301849 277.52917480]
[117.90789795 262.69512939]
[107.02877045 273.02200317]
[92.15158081 271.10644531]
[84.24324799 258.36053467]
[89.13349915 244.18008423]
[103.21741486 239.01838684]
[116.11194611 246.67907715]
[114.99629974 231.72062683]
[113.88065338 216.76217651]
[112.76499939 201.80372620]
[111.64935303 186.84526062]
[109.42424011 172.01121521]
[106.10197449 157.38375854]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[75.51705170 63.75000763]
[80.03248596 49.55634308]
[65.04864502 47.15630341]
[52.15995789 39.22378540]
[43.31413651 26.99410248]
[39.83391190 12.34911633]
[42.21932220 -2.47231007]
[50.07611847 -15.21656990]
[62.18054199 -23.95797920]
[58.64086914 -38.53435516]
[55.10119629 -53.11072922]
[51.56152344 -67.68710327]
[40.97272491 -75.05189514]
[38.32460785 -87.26546478]
[44.50376129 -97.66472626]
[41.18149948 -112.29218292]
[37.85924149 -126.91964722]
[27.25758743 -138.66339111]
[31.98383713 -152.78825378]
[28.66157722 -167.41571045]
[25.33931732 -182.04318237]
[22.01705933 -196.67063904]
[17.81293106 -201.77326965]
[16.94684410 -207.38993835]
[18.82051659 -211.78292847]
[15.93524456 -226.50282288]
[13.04997158 -241.22270203]
[9.61791039 -245.15565491]
[8.18130302 -249.57034302]
[8.58949852 -253.62600708]
[10.37998676 -256.66351318]
[8.15487003 -271.49755859]
[5.92975283 -286.33160400]
[-9.08146095 -287.71972656]
[-23.32404327 -292.66061401]
[-35.96995163 -300.86697388]
[-46.28396606 -311.86172485]
[-53.66644669 -325.00564575]
[-57.68818283 -339.53454590]
[-58.11535645 -354.60375977]
[-54.92313766 -369.33715820]
[-48.29710770 -382.87817383]
[-38.62250519 -394.43954468]
[-26.46179390 -403.34912109]
[-12.52198029 -409.08889771]
[2.38648939 -411.32519531]
[17.39685822 -409.92794800]
[31.63644409 -404.97845459]
[44.27737427 -396.76440430]
[54.58472061 -385.76339722]
[61.95923233 -372.61502075]
[65.97216034 -358.08367920]
[66.39019775 -343.01422119]
[63.18904495 -328.28274536]
[56.55480957 -314.74575806]
[46.87319946 -303.19024658]
[34.70708466 -294.28805542]
[20.76379585 -288.55673218]
[22.98891449 -273.72268677]
[25.21403122 -258.88864136]
[27.76986313 -244.10798645]
[30.65513611 -229.38809204]
[33.54040909 -214.66819763]
[36.64451981 -199.99288940]
[39.96677780 -185.36543274]
[43.28903580 -170.73797607]
[46.61129761 -156.11051941]
[56.97531891 -145.41302490]
[52.48670197 -130.24189758]
[55.80895996 -115.61444855]
[59.13121796 -100.98698425]
[71.73043823 -88.77114868]
[66.13790131 -71.22677612]
[69.67757416 -56.65040207]
[73.21724701 -42.07402802]
[76.75691223 -27.49765205]
[91.52230072 -25.28120613]
[104.34894562 -17.55963516]
[113.26619720 -5.48290539]
[116.89016724 9.12717533]
[114.63838959 24.05175781]
[106.82320404 37.01192474]
[94.60885620 46.01667023]
[105.13100433 56.55867004]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[122.31340027 146.84257507]
[120.72943878 154.06150818]
[124.05169678 168.68896484]
[129.99876404 154.91825867]
[141.97517395 145.88688660]
[156.85032654 143.95564270]
[170.73590088 149.62934875]
[180.00222778 161.42491150]
[182.22712708 176.25898743]
[176.82899475 190.25399780]
[165.21891785 199.75166321]
[150.43171692 202.26934814]
[136.33273315 197.14889526]
[126.60781097 185.72961426]
[127.72345734 200.68806458]
[128.83911133 215.64653015]
[129.95475769 230.60498047]
[131.07040405 245.56343079]
[132.74194336 260.47000122]
[134.96705627 275.30404663]
[138.18032837 289.95584106]
[142.36734009 304.35961914]
[146.55435181 318.76339722]
[150.74136353 333.16717529]
[154.51062012 336.77825928]
[156.33535767 341.04714966]
[156.29061890 345.12307739]
[154.77825928 348.30822754]
[158.31793213 362.88458252]
[161.85760498 377.46096802]
[165.39727783 392.03735352]
[168.93695068 406.61370850]
[183.84729004 404.81973267]
[198.86514282 404.80187988]
[213.77970886 406.56039429]
[228.38157654 410.07061768]
[242.46578979 415.28323364]
[255.83460999 422.12506104]
[268.30038452 430.50009155]
[279.68807983 440.29074097]
[289.83782959 451.35955811]
[298.60717773 463.55114746]
[305.87301636 476.69436646]
[311.53332520 490.60470581]
[315.50863647 505.08688354]
[317.74313354 519.93756104]
[318.20550537 534.94830322]
[316.88922119 549.90838623]
[313.81274414 564.60778809]
[309.01928711 578.84008789]
[302.57614136 592.40557861]
[294.57373047 605.11376953]
[285.12445068 616.78625488]
[274.36090088 627.25921631]
[262.43420410 636.38555908]
[249.51181030 644.03723145]
[235.77511597 650.10675049]
[221.41694641 654.50897217]
[206.63890076 657.18212891]
[191.64840698 658.08856201]
[176.65592957 657.21563721]
[161.87193298 654.57562256]
[147.50396729 650.20550537]
[133.75372314 644.16668701]
[120.81424713 636.54394531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 169]
[24 168]
[25 167]
[26 166]
[36 165]
[37 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 148]
[49 147]
[50 145]
[51 144]
[52 143]
[54 141]
[55 140]
[57 138]
[64 131]
[65 130]
[66 129]
[67 128]
[70 126]
[71 125]
[72 124]
[74 122]
[75 121]
[76 120]
[77 119]
[80 118]
[81 117]
[82 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
