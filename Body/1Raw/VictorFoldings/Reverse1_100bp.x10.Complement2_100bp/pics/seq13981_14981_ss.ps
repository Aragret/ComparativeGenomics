%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[166.14221191 380.83874512]
[167.97865295 365.93756104]
[171.36264038 351.30996704]
[176.25711060 337.11624146]
[182.60844421 323.51190186]
[190.34704590 310.64599609]
[199.38813782 298.65945435]
[209.63264465 287.68368530]
[220.96832275 277.83889771]
[212.36975098 265.54806519]
[197.70347595 263.21652222]
[188.80822754 250.87435913]
[191.35317993 235.50683594]
[182.75462341 223.21600342]
[174.15605164 210.92515564]
[165.55749512 198.63432312]
[149.27888489 192.07888794]
[147.83424377 173.72146606]
[139.05363464 161.56001282]
[130.27304077 149.39855957]
[121.22303772 137.43621826]
[111.90815735 125.67897034]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[76.50679016 84.36831665]
[66.67620850 73.03872681]
[56.84562683 61.70913315]
[44.37768173 66.08541107]
[31.19648170 65.96456146]
[18.87073326 61.38268661]
[8.85995007 52.90547562]
[2.34164762 41.55850601]
[0.07285074 28.70316505]
[2.30223131 15.87334061]
[8.74305153 4.59239960]
[-0.74584639 -7.02486372]
[-10.23474503 -18.64212608]
[-16.27138329 -21.33851814]
[-19.54820251 -25.98173714]
[-19.82699776 -30.74947357]
[-28.96579933 -42.64410782]
[-36.67573929 -47.54253769]
[-38.15054321 -54.78454971]
[-47.11124039 -66.81392670]
[-56.07193756 -78.84330750]
[-65.03263092 -90.87268066]
[-65.48112488 -75.87938690]
[-73.87639618 -63.44880295]
[-87.61707306 -57.43267822]
[-102.44546509 -59.69517517]
[-113.76682281 -69.53523254]
[-118.07311249 -83.90380859]
[-114.02997589 -98.34863281]
[-102.89022064 -108.39382935]
[-88.10562897 -110.92678070]
[-74.25716400 -105.16246033]
[-81.53039551 -118.28115845]
[-88.80362701 -131.39985657]
[-96.07685089 -144.51853943]
[-100.55229187 -147.20509338]
[-103.27720642 -150.96383667]
[-104.13632202 -154.94842529]
[-103.36698914 -158.38941956]
[-110.04718018 -171.81979370]
[-116.72737885 -185.25018311]
[-130.92109680 -180.33419800]
[-145.62692261 -177.27368164]
[-160.60339355 -176.11889648]
[-175.60458374 -176.88879395]
[-190.38415527 -179.57072449]
[-204.69940186 -184.12066650]
[-218.31526184 -190.46389771]
[-231.00816345 -198.49624634]
[-242.56965637 -208.08583069]
[-252.80990601 -219.07516479]
[-261.56076050 -231.28381348]
[-268.67849731 -244.51129150]
[-274.04626465 -258.54037476]
[-277.57592773 -273.14071655]
[-279.20947266 -288.07254028]
[-278.92013550 -303.09069824]
[-276.71264648 -317.94854736]
[-272.62322998 -332.40206909]
[-266.71905518 -346.21398926]
[-259.09710693 -359.15750122]
[-249.88249207 -371.02001953]
[-239.22654724 -381.60675049]
[-227.30424500 -390.74389648]
[-214.31138611 -398.28137207]
[-200.46128845 -404.09542847]
[-185.98139954 -408.09060669]
[-171.10949707 -410.20126343]
[-156.08979797 -410.39276123]
[-141.16891479 -408.66195679]
[-126.59188080 -405.03726196]
[-112.59805298 -399.57821655]
[-99.41723633 -392.37445068]
[-87.26586151 -383.54425049]
[-76.34346008 -373.23263550]
[-66.82939911 -361.60888672]
[-58.87990952 -348.86395264]
[-52.62551880 -335.20703125]
[-48.16893387 -320.86245728]
[-45.58333969 -306.06573486]
[-44.91119003 -291.05984497]
[-46.16352081 -276.09121704]
[-49.31977463 -261.40563965]
[-54.32811356 -247.24424744]
[-61.10630417 -233.83959961]
[-69.54303741 -221.41181946]
[-79.49977875 -210.16496277]
[-90.81301880 -200.28373718]
[-103.29699707 -191.93037415]
[-96.61680603 -178.50000000]
[-89.93660736 -165.06962585]
[-82.95816040 -151.79177856]
[-75.68492889 -138.67308044]
[-68.41169739 -125.55438232]
[-61.13846970 -112.43569183]
[-53.00325394 -99.83338165]
[-44.04255676 -87.80400085]
[-35.08186340 -75.77462769]
[-26.12116623 -63.74524689]
[-17.07116699 -51.78290939]
[-7.93236446 -39.88827515]
[1.38251865 -28.13102531]
[10.87141705 -16.51376152]
[20.36031532 -4.89649868]
[36.66584015 -9.32253551]
[53.32020187 -6.16564178]
[66.96371460 3.98659849]
[74.82257843 19.13049698]
[75.27272797 36.24157333]
[68.17522430 51.87855148]
[78.00580597 63.20814514]
[87.83638000 74.53773499]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[118.59714508 106.00433350]
[122.04090881 109.11782074]
[123.70600891 112.83837128]
[123.66540527 116.36408997]
[132.98028564 128.12133789]
[137.83387756 130.04222107]
[141.13517761 133.30638123]
[142.63249207 137.09756470]
[142.43449402 140.61795044]
[151.21510315 152.77941895]
[159.99569702 164.94087219]
[172.58129883 167.76319885]
[179.64431763 178.07327271]
[177.84832764 190.03575134]
[186.44688416 202.32659912]
[195.04545593 214.61743164]
[203.64401245 226.90826416]
[218.95281982 229.78546143]
[227.49790955 242.37261963]
[224.66059875 256.94949341]
[233.25915527 269.24032593]
[246.39329529 261.96624756]
[260.21585083 256.10491943]
[274.57534790 251.72059631]
[289.31448364 248.86128235]
[304.27175903 247.55831909]
[319.28326416 247.82597351]
[334.18460083 249.66131592]
[348.81243896 253.04423523]
[363.00650024 257.93768311]
[376.61132812 264.28802490]
[389.47778320 272.02569580]
[401.46496582 281.06588745]
[412.44149780 291.30960083]
[422.28710938 302.64456177]
[430.89395142 314.94659424]
[438.16772461 328.08090210]
[444.02868652 341.90359497]
[448.41268921 356.26321411]
[451.27163696 371.00241089]
[452.57424927 385.95971680]
[452.30621338 400.97125244]
[450.47052002 415.87249756]
[447.08724976 430.50027466]
[442.19345093 444.69421387]
[435.84277344 458.29888916]
[428.10479736 471.16516113]
[419.06430054 483.15213013]
[408.82034302 494.12841797]
[397.48513794 503.97375488]
[385.18289185 512.58032227]
[372.04840088 519.85375977]
[358.22555542 525.71435547]
[343.86584473 530.09802246]
[329.12658691 532.95660400]
[314.16925049 534.25885010]
[299.15771484 533.99047852]
[284.25650024 532.15441895]
[269.62884521 528.77075195]
[255.43498230 523.87664795]
[241.83049011 517.52563477]
[228.96438599 509.78735352]
[216.97764587 500.74655151]
[206.00161743 490.50231934]
[196.15653992 479.16687012]
[187.55030823 466.86441040]
[180.27717590 453.72973633]
[174.41687012 439.90676880]
[170.03358459 425.54696655]
[167.17533875 410.80761719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 161]
[10 160]
[13 157]
[14 156]
[15 155]
[16 154]
[18 151]
[19 150]
[20 149]
[21 145]
[22 144]
[23 140]
[25 138]
[26 137]
[27 136]
[28 135]
[36 129]
[37 128]
[38 127]
[41 126]
[42 125]
[44 124]
[45 123]
[46 122]
[47 121]
[57 120]
[58 119]
[59 118]
[60 117]
[64 116]
[65 115]
[66 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
