%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[129.61889648 479.96697998]
[114.82441711 476.35543823]
[102.78189850 467.03356934]
[95.57778931 453.61639404]
[94.46023560 438.42852783]
[99.62287140 424.10137939]
[110.17122650 413.11721802]
[124.27774811 407.37908936]
[124.72434998 392.38574219]
[125.17095947 377.39239502]
[125.61756134 362.39901733]
[125.72923279 347.39944458]
[125.50590515 332.40112305]
[125.28257751 317.40277100]
[124.27831268 302.43643188]
[122.49584961 287.54272461]
[120.71338654 272.64898682]
[118.48826599 257.81494141]
[115.82247162 243.05372620]
[113.15667725 228.29251099]
[110.49088287 213.53129578]
[107.14782715 210.12057495]
[105.91187286 204.57354736]
[107.97232819 198.29135132]
[105.74720764 183.45730591]
[103.52209473 168.62326050]
[91.86634064 155.50418091]
[98.74828339 138.42434692]
[96.30255127 123.62508392]
[93.85682678 108.82581329]
[88.61010742 94.77333832]
[74.79379272 87.06491089]
[74.72431183 72.17046356]
[66.87255096 59.38962173]
[59.02079773 46.60877991]
[51.16904068 33.82793808]
[37.35272217 26.11950874]
[37.28324127 11.22506618]
[29.43148613 -1.55577672]
[25.54205322 -3.48613143]
[22.75000381 -6.27342176]
[21.18998146 -9.46743774]
[20.83658791 -12.62048721]
[21.51906013 -15.33937931]
[14.44195461 -28.56490707]
[7.36484957 -41.79043579]
[-5.96816063 -50.30755997]
[-5.15098524 -65.17973328]
[-12.22809029 -78.40525818]
[-19.59877968 -91.46944427]
[-27.25937843 -104.36576843]
[-34.91997528 -117.26210022]
[-42.58057404 -130.15841675]
[-50.24116898 -143.05474854]
[-58.37638474 -155.65705872]
[-66.97495270 -167.94790649]
[-75.57351685 -180.23873901]
[-88.74881744 -173.03633118]
[-102.63648224 -167.32705688]
[-117.06793976 -163.18022156]
[-131.86799622 -160.64616394]
[-146.85699463 -159.75564575]
[-161.85299683 -160.51947021]
[-176.67393494 -162.92837524]
[-191.13992310 -166.95312500]
[-205.07533264 -172.54483032]
[-218.31103516 -179.63565063]
[-230.68632507 -188.13948059]
[-242.05099487 -197.95312500]
[-252.26710510 -208.95741272]
[-261.21060181 -221.01879883]
[-268.77294922 -233.99084473]
[-274.86233521 -247.71609497]
[-279.40484619 -262.02795410]
[-282.34533691 -276.75262451]
[-283.64810181 -291.71145630]
[-283.29736328 -306.72277832]
[-281.29733276 -321.60443115]
[-277.67233276 -336.17572021]
[-272.46630859 -350.25976562]
[-265.74252319 -363.68563843]
[-257.58255005 -376.29031372]
[-248.08547974 -387.92080688]
[-237.36656189 -398.43594360]
[-225.55593872 -407.70806885]
[-212.79696655 -415.62463379]
[-199.24453735 -422.08950806]
[-185.06315613 -427.02426147]
[-170.42497253 -430.36895752]
[-155.50770569 -432.08300781]
[-140.49240112 -432.14559937]
[-125.56134796 -430.55596924]
[-110.89579773 -427.33343506]
[-96.67376709 -422.51708984]
[-83.06790924 -416.16540527]
[-70.24338531 -408.35549927]
[-58.35586929 -399.18215942]
[-47.54966354 -388.75674438]
[-37.95595169 -377.20581055]
[-29.69118500 -364.66958618]
[-22.85569382 -351.30026245]
[-17.53245544 -337.26010132]
[-13.78608894 -322.71954346]
[-11.66207123 -307.85507202]
[-11.18618488 -292.84719849]
[-12.36420918 -277.87805176]
[-15.18184090 -263.12933350]
[-19.60487938 -248.78013611]
[-25.57963181 -235.00459290]
[-33.03356934 -221.96994019]
[-41.87620926 -209.83442688]
[-52.00020981 -198.74533081]
[-63.28267670 -188.83729553]
[-54.68411255 -176.54646301]
[-46.08554840 -164.25563049]
[-40.94386673 -178.34686279]
[-26.77036858 -183.25726318]
[-14.01323128 -175.36705017]
[-12.07653999 -160.49259949]
[-22.38795280 -149.59881592]
[-37.34484100 -150.71534729]
[-29.68424606 -137.81901550]
[-22.02364731 -124.92269135]
[-14.36305046 -112.02636719]
[-6.70245314 -99.13004303]
[-3.39423752 -97.91018677]
[-0.51250941 -95.02735901]
[1.16756165 -90.69946289]
[0.99743700 -85.48236084]
[8.07454205 -72.25683594]
[20.90135002 -64.68569183]
[20.59037781 -48.86753845]
[27.66748238 -35.64201355]
[34.74458694 -22.41648483]
[42.21232986 -9.40753174]
[50.06408310 3.37331033]
[63.31879425 10.16756821]
[63.94988632 25.97618294]
[71.80164337 38.75702667]
[79.65339661 51.53786850]
[87.50514984 64.31871033]
[100.75985718 71.11296844]
[101.39095306 86.92158508]
[99.99600220 71.98658752]
[101.91388702 57.10970306]
[107.05102539 43.01680374]
[115.15677643 30.39551544]
[125.83562469 19.86166000]
[138.56654358 11.92920589]
[152.72834778 6.98519564]
[167.63006592 5.27085829]
[182.54458618 6.86984015]
[196.74423218 11.70412350]
[209.53613281 19.53783226]
[220.29617310 29.98874283]
[228.49934387 42.54693222]
[233.74537659 56.59965897]
[235.77832031 71.46125793]
[234.49896240 86.40660095]
[229.96975708 100.70647430]
[222.41168213 113.66314697]
[212.19349670 124.64443970]
[199.81378174 133.11454773]
[185.87657166 138.66020203]
[171.06190491 141.01081848]
[156.09259033 140.05168152]
[141.69905090 135.82962036]
[128.58355713 128.55062866]
[117.38603973 118.56987000]
[108.65609741 106.38008118]
[111.10182190 121.17935181]
[113.54755402 135.97862244]
[123.55925751 144.11058044]
[125.29163361 156.48727417]
[118.35613251 166.39814758]
[120.58125305 181.23219299]
[122.80636597 196.06623840]
[125.25209808 210.86550903]
[127.91789246 225.62672424]
[130.58369446 240.38793945]
[133.24948120 255.14915466]
[136.17051697 258.36187744]
[137.75765991 261.97372437]
[138.04920959 265.51638794]
[137.23167419 268.58203125]
[135.60710144 270.86651611]
[137.38957214 285.76025391]
[139.17202759 300.65396118]
[148.37393188 288.80807495]
[163.01037598 285.52563477]
[176.38978577 292.30731201]
[182.39527893 306.05264282]
[178.28121948 320.47744751]
[165.92849731 328.98687744]
[150.98461914 327.69052124]
[140.28091431 317.17944336]
[140.50424194 332.17779541]
[140.72756958 347.17611694]
[143.40603638 351.65640259]
[144.03520203 356.25613403]
[142.91271973 360.17468262]
[140.61091614 362.84564209]
[140.16430664 377.83898926]
[139.71769714 392.83233643]
[139.27110291 407.82568359]
[153.01106262 414.39328003]
[162.88693237 425.98580933]
[167.18763733 440.59484863]
[165.16807556 455.68927002]
[157.17813110 468.65386963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 198]
[13 197]
[14 196]
[15 188]
[16 187]
[17 186]
[18 181]
[19 180]
[20 179]
[21 178]
[24 177]
[25 176]
[26 175]
[28 172]
[29 171]
[30 170]
[31 143]
[33 141]
[34 140]
[35 139]
[36 138]
[38 136]
[39 135]
[44 134]
[45 133]
[46 132]
[48 130]
[49 129]
[50 125]
[51 124]
[52 123]
[53 122]
[54 121]
[55 115]
[56 114]
[57 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
