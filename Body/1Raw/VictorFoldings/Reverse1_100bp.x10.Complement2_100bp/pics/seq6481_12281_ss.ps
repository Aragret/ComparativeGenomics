%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[73.47756195 458.19979858]
[67.65123749 472.11038208]
[58.54787445 484.13452148]
[46.73972321 493.51632690]
[32.96904373 499.66607666]
[18.10148430 502.19714355]
[3.07162547 500.95050049]
[-11.17574215 496.00445557]
[-23.74501610 487.66995239]
[-33.84608078 476.47085571]
[-40.84397888 463.11120605]
[-44.29881287 448.43078613]
[-43.99340820 433.35241699]
[-39.94696426 418.82391357]
[-32.41384506 405.75857544]
[-21.86758614 394.97772217]
[-8.97113705 387.15899658]
[5.46482182 382.79391479]
[20.53283501 382.15686035]
[23.63694382 367.48156738]
[26.74105453 352.80627441]
[29.84516525 338.13095093]
[23.51450157 321.76361084]
[35.93592072 308.16989136]
[38.82119370 293.44998169]
[41.70646667 278.73010254]
[40.25630569 276.33111572]
[39.66904449 273.21313477]
[40.22328568 269.70196533]
[42.07466507 266.21817017]
[45.22655869 263.23159790]
[48.98286057 248.70954895]
[52.73915863 234.18750000]
[51.37083435 226.92460632]
[56.66099930 219.47801208]
[60.63309860 205.01347351]
[64.60519409 190.54895020]
[63.06344604 186.02877808]
[64.34487915 180.49208069]
[68.91687775 175.71627808]
[73.31787872 161.37641907]
[77.71887970 147.03657532]
[82.11987305 132.69673157]
[86.52087402 118.35688782]
[79.36980438 109.64660645]
[77.27052307 98.57412720]
[80.73709869 87.85080719]
[88.92065430 80.10250854]
[99.81724548 77.22657776]
[104.64324188 63.02412415]
[109.46924591 48.82167053]
[114.29524231 34.61921310]
[119.12123871 20.41675758]
[123.94723511 6.21430159]
[128.77323914 -7.98815393]
[133.59922791 -22.19060898]
[138.42523193 -36.39306641]
[140.76071167 -51.21013260]
[140.53738403 -66.20847321]
[140.31405640 -81.20681000]
[137.25688171 -87.06899261]
[137.57185364 -92.74330139]
[140.31405640 -96.65346527]
[140.53738403 -111.65180206]
[140.76071167 -126.65013885]
[127.07752991 -129.91807556]
[114.38459778 -135.96958923]
[103.24086761 -144.53527832]
[94.13644409 -155.23507690]
[87.47106171 -167.59513855]
[83.53650665 -181.06883240]
[82.50385284 -195.06088257]
[84.41603088 -208.95367432]
[89.18605042 -222.13458252]
[96.60095978 -234.02285767]
[106.33132172 -244.09535217]
[117.94589233 -251.90942383]
[130.93069458 -257.12249756]
[144.71180725 -259.50695801]
[145.38159180 -274.49200439]
[146.05137634 -289.47705078]
[146.72116089 -304.46206665]
[146.83282471 -319.46166992]
[146.38621521 -334.45501709]
[145.93960571 -349.44836426]
[144.82395935 -364.40679932]
[143.04148865 -379.30053711]
[141.25903320 -394.19424438]
[139.47656250 -409.08795166]
[137.69409180 -423.98168945]
[122.75743103 -426.11672974]
[108.88269806 -432.04583740]
[97.01589966 -441.36471558]
[87.96612549 -453.43798828]
[82.35041046 -467.44250488]
[80.55164337 -482.42337036]
[82.69247437 -497.35922241]
[88.62692261 -511.23165894]
[97.95037842 -523.09484863]
[110.02715302 -532.13995361]
[124.03382111 -537.75030518]
[139.01539612 -539.54327393]
[153.95040894 -537.39666748]
[167.82055664 -531.45684814]
[179.68016052 -522.12884521]
[188.72061157 -510.04855347]
[194.32550049 -496.03973389]
[196.11270142 -481.05746460]
[193.96034241 -466.12326050]
[188.01518250 -452.25540161]
[178.68257141 -440.39941406]
[166.59881592 -431.36364746]
[152.58781433 -425.76416016]
[154.37028503 -410.87042236]
[156.15274048 -395.97671509]
[157.93521118 -381.08300781]
[159.71768188 -366.18927002]
[169.81599426 -377.28091431]
[184.79244995 -378.12100220]
[196.06785583 -368.22830200]
[197.18315125 -353.26983643]
[187.49943542 -341.81445312]
[172.56398010 -340.42431641]
[160.93295288 -349.89495850]
[161.37956238 -334.90161133]
[161.82617188 -319.90826416]
[173.85537720 -328.86920166]
[188.39952087 -325.19934082]
[194.73721313 -311.60400391]
[188.19653320 -298.10513306]
[173.59902954 -294.65359497]
[161.70619202 -303.79229736]
[161.03640747 -288.80725098]
[160.36662292 -273.82220459]
[159.69683838 -258.83715820]
[175.07206726 -254.48783875]
[188.97567749 -246.59649658]
[200.60496521 -235.61410522]
[209.28742981 -222.17025757]
[214.51969910 -207.03698730]
[215.99662781 -191.08453369]
[213.62916565 -175.23123169]
[207.54968262 -160.39068604]
[198.10459900 -147.41906738]
[185.83460999 -137.06581116]
[171.44375610 -129.93020630]
[155.75904846 -126.42681122]
[155.53572083 -111.42847443]
[155.31239319 -96.43013763]
[155.31239319 -81.43013763]
[155.53572083 -66.43180084]
[155.75904846 -51.43346024]
[162.24084473 -64.96070099]
[171.84390259 -76.48378754]
[183.98095703 -85.29808044]
[197.90985107 -90.86457062]
[212.77882385 -92.84287262]
[227.67863464 -91.11201477]
[241.69813538 -85.77783966]
[253.98004150 -77.16652679]
[263.77331543 -65.80467224]
[270.47909546 -52.38704681]
[273.68728638 -37.73414993]
[273.20175171 -22.74200821]
[269.05218506 -8.32740116]
[261.49227905 4.62821484]
[250.98437500 15.33259869]
[238.17100525 23.13117409]
[223.83573914 27.54705238]
[208.85516357 28.31020355]
[194.14535522 25.37396049]
[180.60581970 18.91787529]
[169.06451416 9.33673954]
[160.22718811 -2.78355718]
[154.63423157 -16.70185280]
[152.62768555 -31.56706810]
[147.80168152 -17.36461258]
[142.97569275 -3.16215634]
[138.14968872 11.04029942]
[133.32369995 25.24275589]
[128.49769592 39.44520950]
[123.67169952 53.64766693]
[118.84570312 67.85012054]
[114.01970673 82.05257416]
[122.67338562 97.86002350]
[117.13007355 115.00741577]
[100.86071777 122.75788116]
[96.45972443 137.09773254]
[92.05872345 151.43757629]
[87.65773010 165.77742004]
[83.25672913 180.11726379]
[79.06971741 194.52105713]
[75.09761810 208.98558044]
[71.12552643 223.45010376]
[67.26122284 237.94378662]
[63.50491714 252.46585083]
[59.74861908 266.98791504]
[56.42635727 281.61538696]
[53.54108429 296.33526611]
[50.65581131 311.05514526]
[57.19068527 322.17532349]
[54.48449707 334.37615967]
[44.52046585 341.23507690]
[41.41635513 355.91036987]
[38.31224823 370.58566284]
[35.20813751 385.26098633]
[48.72763824 391.94482422]
[60.15965652 401.78149414]
[68.78556824 414.15258789]
[74.06313324 428.28051758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[24 200]
[25 199]
[26 198]
[31 197]
[32 196]
[33 195]
[35 194]
[36 193]
[37 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[49 184]
[50 183]
[51 182]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[58 152]
[59 151]
[60 150]
[63 149]
[64 148]
[65 147]
[79 135]
[80 134]
[81 133]
[82 132]
[83 126]
[84 125]
[85 124]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
