%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[44.65336609 629.70117188]
[31.47622108 621.81072998]
[24.02370834 608.38110352]
[24.30051613 593.02471924]
[32.23218536 579.87237549]
[45.68513107 572.46197510]
[45.90845871 557.46362305]
[46.13178635 542.46527100]
[46.35511398 527.46697998]
[46.57844543 512.46862793]
[46.80177307 497.47027588]
[47.02510071 482.47195435]
[47.13676453 467.47235107]
[47.13676453 452.47235107]
[47.13676453 437.47235107]
[47.13676453 422.47235107]
[39.28442764 435.25283813]
[26.95892143 443.80163574]
[12.23731041 446.67813110]
[-2.39955616 443.39755249]
[-14.48510838 434.51275635]
[-21.98271942 421.52099609]
[-23.62890816 406.61160278]
[-19.14626503 392.29708862]
[-9.29019260 380.98965454]
[4.27838707 374.59484863]
[19.27293015 374.19027710]
[33.16659164 379.84414673]
[43.61804962 390.60363770]
[48.86629486 404.65728760]
[51.75156784 389.93737793]
[54.63683701 375.21749878]
[57.52210999 360.49761963]
[60.40738297 345.77770996]
[63.29265594 331.05783081]
[58.14795303 317.07995605]
[68.39524841 305.02575684]
[71.28052521 290.30584717]
[74.16579437 275.58596802]
[77.05107117 260.86608887]
[79.93634033 246.14619446]
[82.82161713 231.42630005]
[85.04673004 216.59225464]
[86.60725403 201.67364502]
[88.16777802 186.75505066]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.28038788 57.49913025]
[94.72699738 42.50578308]
[95.17360687 27.51243210]
[87.85061646 13.48800945]
[95.96342468 0.99674785]
[96.41002655 -13.99660206]
[96.85663605 -28.98995209]
[96.85663605 -43.98995209]
[96.41002655 -58.98330307]
[95.96342468 -73.97665405]
[87.00121307 -61.94840240]
[72.99654388 -56.57539749]
[58.28890991 -59.52252197]
[47.43563461 -69.87657928]
[43.79972458 -84.42924500]
[48.50780487 -98.67122650]
[60.10102844 -108.18948364]
[74.98709869 -110.03468323]
[88.55342102 -103.63507080]
[96.59638214 -90.97338867]
[98.15690613 -105.89199829]
[91.89728546 -120.42223358]
[100.91667938 -132.27549744]
[102.47720337 -147.19409180]
[104.03772736 -162.11270142]
[105.59825134 -177.03131104]
[107.15877533 -191.94990540]
[108.71929932 -206.86851501]
[110.27982330 -221.78712463]
[108.37167358 -225.68750000]
[107.85581207 -229.59881592]
[108.56472015 -233.08204651]
[110.20549011 -235.79763794]
[112.40316772 -237.53785706]
[114.84889221 -252.33712769]
[117.29462433 -267.13638306]
[119.74034882 -281.93566895]
[105.42837524 -286.51663208]
[91.93594360 -293.13269043]
[79.55065918 -301.64282227]
[68.53650665 -311.86566162]
[59.12825394 -323.58328247]
[51.52644730 -336.54592896]
[45.89311218 -350.47729492]
[42.34832382 -365.08047485]
[40.96763992 -380.04415894]
[41.78049088 -395.04937744]
[44.76955414 -409.77633667]
[49.87110901 -423.91113281]
[56.97642136 -437.15243530]
[65.93404388 -449.21804810]
[76.55303955 -459.85076904]
[88.60706329 -468.82397461]
[101.83917999 -475.94638062]
[115.96735382 -481.06619263]
[130.69044495 -484.07427979]
[145.69461060 -484.90652466]
[160.66006470 -483.54519653]
[175.26779175 -480.01925659]
[189.20643616 -474.40393066]
[202.17890930 -466.81887817]
[213.90867615 -457.42578125]
[224.14573669 -446.42486572]
[232.67187500 -434.05056763]
[239.30535889 -420.56671143]
[243.90480042 -406.26065063]
[246.37216187 -391.43734741]
[246.65483093 -376.41278076]
[244.74682617 -361.50717163]
[240.68876648 -347.03823853]
[234.56718445 -333.31439209]
[226.51255798 -320.62814331]
[216.69654846 -309.24990845]
[205.32841492 -299.42224121]
[192.65045166 -291.35458374]
[178.93289185 -285.21890259]
[164.46812439 -281.14599609]
[149.56448364 -279.22268677]
[134.53962708 -279.48992920]
[132.09388733 -264.69067383]
[129.64816284 -249.89140320]
[127.20243835 -235.09213257]
[125.19842529 -220.22659302]
[123.63790131 -205.30799866]
[122.07737732 -190.38938904]
[120.51685333 -175.47077942]
[118.95633698 -160.55218506]
[117.39581299 -145.63357544]
[115.83528900 -130.71496582]
[122.20652008 -117.25180817]
[113.07550812 -104.33147430]
[111.51498413 -89.41286469]
[110.95677185 -74.42325592]
[111.40338135 -59.42990875]
[111.84998322 -44.43655777]
[113.79547119 -42.41833115]
[115.05872345 -39.50786972]
[115.29591370 -35.96115875]
[114.26212311 -32.15382385]
[111.84998322 -28.54334641]
[111.40338135 -13.54999638]
[110.95677185 1.44335377]
[118.31170654 14.39535141]
[110.16695404 27.95903778]
[109.72034454 42.95238876]
[109.27374268 57.94573593]
[112.21669769 64.72517395]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[106.40538788 176.24626160]
[107.15313721 180.11993408]
[106.65280914 183.63919067]
[105.17658234 186.44763184]
[103.08638000 188.31556702]
[101.52585602 203.23417664]
[99.96533203 218.15277100]
[112.26946259 209.57324219]
[127.06002808 212.07106018]
[135.86433411 224.21537781]
[133.63885498 239.04936218]
[121.65846252 248.07545471]
[106.78606415 246.12307739]
[97.54150391 234.31156921]
[94.65623474 249.03146362]
[91.77095795 263.75134277]
[88.88568878 278.47125244]
[86.00041199 293.19113159]
[83.11514282 307.91104126]
[88.05347443 322.94177246]
[78.01255035 333.94308472]
[75.12727356 348.66299438]
[72.24200439 363.38287354]
[69.35672760 378.10278320]
[66.47145844 392.82266235]
[63.58618546 407.54254150]
[62.13676453 422.47235107]
[62.13676453 437.47235107]
[62.13676453 452.47235107]
[62.13676453 467.47235107]
[65.26617432 476.05401611]
[62.02343750 482.69528198]
[61.80010986 497.69360352]
[61.57678223 512.69195557]
[61.35345459 527.69030762]
[61.13012695 542.68859863]
[60.90679932 557.68695068]
[60.68347168 572.68530273]
[73.90982056 580.49291992]
[81.44637299 593.87561035]
[81.26584625 609.23345947]
[73.41678619 622.43524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 198]
[14 197]
[15 196]
[16 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 175]
[44 174]
[45 173]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[52 162]
[53 161]
[54 159]
[55 158]
[56 157]
[58 155]
[59 154]
[60 153]
[61 148]
[62 147]
[63 146]
[73 145]
[74 144]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[87 135]
[88 134]
[89 133]
[90 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
