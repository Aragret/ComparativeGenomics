%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[53.98086166 646.48950195]
[38.92948914 649.26702881]
[24.31481361 644.72064209]
[13.49518967 633.89495850]
[8.95688343 619.27777100]
[11.74276638 604.22796631]
[21.21266174 592.20385742]
[35.19045639 585.96844482]
[36.08327103 570.99505615]
[36.97608948 556.02166748]
[37.86890411 541.04821777]
[38.76171875 526.07482910]
[36.02191925 519.21075439]
[39.78093338 510.88565063]
[40.89657974 495.92721558]
[33.24315643 486.55963135]
[34.05019760 474.08834839]
[43.42934418 465.23428345]
[44.76757812 450.29409790]
[32.59255219 459.05587769]
[17.76643372 456.77856445]
[8.78230095 444.76666260]
[10.78667068 429.90118408]
[22.63134956 420.69772339]
[37.53116608 422.42846680]
[46.95056152 434.10101318]
[41.59831619 420.20129395]
[51.66500854 407.99584961]
[54.33080673 393.23464966]
[56.99660110 378.47341919]
[42.64014435 367.41619873]
[35.85227203 350.52276611]
[38.59240723 332.43792725]
[50.18738556 318.18142700]
[67.49416351 311.75473022]
[69.49817657 296.88922119]
[71.50218964 282.02368164]
[65.53462982 268.37680054]
[75.04627991 255.73405457]
[77.05029297 240.86851501]
[79.05430603 226.00299072]
[80.83677673 211.10926819]
[82.39730072 196.19067383]
[83.95782471 181.27206421]
[85.51834106 166.35345459]
[87.07886505 151.43486023]
[88.63938904 136.51625061]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.65325165 91.70563507]
[85.12227631 77.79179382]
[93.04820251 65.18112946]
[93.27153015 50.18279266]
[92.04455566 35.23305893]
[89.37876129 20.47184372]
[86.71296692 5.71062613]
[84.04717255 -9.05059147]
[81.38137817 -23.81180763]
[78.71558380 -38.57302475]
[75.93997192 -53.31398773]
[73.05469513 -68.03388214]
[70.16942596 -82.75376892]
[67.28414917 -97.47366333]
[57.03685379 -109.52784729]
[62.18155670 -123.50573730]
[59.29628754 -138.22563171]
[55.75661469 -152.80200195]
[51.56960297 -167.20578003]
[47.38259125 -181.60957336]
[33.79792786 -194.04092407]
[38.64312744 -210.90777588]
[34.24212646 -225.24761963]
[29.84112930 -239.58747864]
[25.44013214 -253.92732239]
[13.99438286 -264.85000610]
[17.65698242 -279.28729248]
[13.25598526 -293.62713623]
[7.74644852 -300.91293335]
[8.89792633 -308.21331787]
[4.71091509 -322.61712646]
[-10.27086258 -321.22326660]
[-25.24566269 -322.69018555]
[-39.67215729 -326.96484375]
[-53.02883530 -333.89273071]
[-64.83286285 -343.22341919]
[-74.65753174 -354.61956787]
[-82.14768219 -367.66925049]
[-87.03255463 -381.90069580]
[-89.13556671 -396.79949951]
[-88.38068390 -411.82702637]
[-84.79521179 -426.44006348]
[-78.50875092 -440.11035156]
[-69.74855042 -452.34371948]
[-58.83129883 -462.69796753]
[-46.15163803 -470.79873657]
[-32.16793442 -476.35324097]
[-17.38568497 -479.16067505]
[-2.33926320 -479.11953735]
[12.42741299 -476.23132324]
[26.38053894 -470.60043335]
[39.01571655 -462.43045044]
[49.87619400 -452.01669312]
[58.56936646 -439.73559570]
[64.78099060 -426.03112793]
[68.28650665 -411.39871216]
[68.95920563 -396.36727905]
[66.77476501 -381.48019409]
[61.81214905 -367.27566528]
[54.25075531 -354.26715088]
[44.36392593 -342.92486572]
[32.50905609 -333.65887451]
[19.11469650 -326.80413818]
[23.30170822 -312.40032959]
[27.59583282 -298.02813721]
[31.99682999 -283.68829346]
[43.12778854 -273.79125977]
[39.77997971 -258.32830811]
[44.18097687 -243.98846436]
[48.58197403 -229.64862061]
[52.98297119 -215.30877686]
[63.51919174 -209.36616516]
[67.30309296 -197.45541382]
[61.78637314 -185.79658508]
[65.97338104 -171.39279175]
[70.16039276 -156.98901367]
[78.31510162 -169.57872009]
[92.95417023 -172.84945679]
[105.69167328 -164.92759705]
[109.23099518 -150.35113525]
[101.54465485 -137.47013855]
[87.03572845 -133.66342163]
[74.01617432 -141.11090088]
[76.90145111 -126.39100647]
[86.94237518 -115.38968658]
[82.00404358 -100.35893250]
[84.88931274 -85.63904572]
[87.77458954 -70.91915131]
[90.65985870 -56.19926071]
[95.03126526 -50.24001312]
[93.47679901 -41.23881912]
[96.14259338 -26.47760391]
[98.80838776 -11.71638680]
[101.47418213 3.04483080]
[104.13997650 17.80604744]
[106.80577850 32.56726456]
[112.26177216 18.59471512]
[122.87178040 7.99152279]
[136.84782410 2.54451108]
[151.83471680 3.17159724]
[165.30688477 9.76710701]
[174.99403381 21.21957970]
[179.26370239 35.59907532]
[177.39639282 50.48239136]
[169.70677185 63.36143494]
[157.49067688 72.06584930]
[142.80673218 75.12879944]
[128.12944031 72.03412628]
[115.93217468 63.30332184]
[108.26987457 50.40612030]
[108.04654694 65.40445709]
[115.59349823 78.24551392]
[107.65158844 91.92896271]
[119.14122772 82.28591919]
[134.09565735 83.45423126]
[143.94830322 94.76463318]
[143.05513000 109.73802185]
[131.92778015 119.79695129]
[116.94050598 119.17921448]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[103.55799103 138.07676697]
[101.99747467 152.99537659]
[100.43695068 167.91398621]
[98.87642670 182.83258057]
[97.31590271 197.75119019]
[95.75537872 212.66979980]
[98.09429169 218.85372925]
[97.10726166 224.45040894]
[93.91983795 228.00700378]
[91.91582489 242.87252808]
[89.91181183 257.73806763]
[95.73603058 272.44824219]
[86.36772156 284.02767944]
[84.36370850 298.89321899]
[82.35969543 313.75875854]
[92.73461151 319.82580566]
[100.43389130 329.00942993]
[104.57358551 340.21890259]
[104.69071198 352.13314819]
[100.79487610 363.35647583]
[93.36444855 372.58184814]
[83.28794098 378.74337769]
[71.75782013 381.13922119]
[69.09202576 395.90045166]
[66.42622375 410.66165161]
[71.58779907 425.61721802]
[61.71177673 436.76681519]
[59.70776367 451.63235474]
[58.36952972 466.57254028]
[66.50274658 483.09320068]
[55.85503387 497.04284668]
[54.73938751 512.00128174]
[53.73512650 526.96765137]
[52.84230804 541.94104004]
[51.94949341 556.91448975]
[51.05667877 571.88787842]
[50.16386032 586.86126709]
[63.30166245 594.71343994]
[71.27561951 607.77770996]
[72.25337219 623.05194092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[14 202]
[15 201]
[18 199]
[19 198]
[26 197]
[28 195]
[29 194]
[30 193]
[35 185]
[36 184]
[37 183]
[39 181]
[40 180]
[41 179]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 162]
[52 160]
[53 159]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[60 138]
[61 137]
[62 136]
[63 135]
[65 133]
[66 132]
[67 125]
[68 124]
[69 123]
[71 120]
[72 119]
[73 118]
[74 117]
[76 115]
[77 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
