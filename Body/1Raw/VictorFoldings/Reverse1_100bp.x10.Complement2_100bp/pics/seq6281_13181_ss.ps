%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[92.36471558 701.09674072]
[77.56817627 703.63708496]
[62.59054947 704.66748047]
[47.58552551 704.17724609]
[32.70708847 702.17150879]
[18.10790825 698.67077637]
[3.93779993 693.71105957]
[-9.65782738 687.34313965]
[-22.53946114 679.63250732]
[-34.57491302 670.65814209]
[-45.64068222 660.51220703]
[-55.62321472 649.29882812]
[-64.42007446 637.13305664]
[-71.94098663 624.13970947]
[-78.10877991 610.45214844]
[-82.86016083 596.21081543]
[-86.14636993 581.56188965]
[-87.93369293 566.65557861]
[-88.20377350 551.64501953]
[-86.95385742 536.68408203]
[-84.19676208 521.92639160]
[-79.96077728 507.52337646]
[-74.28938293 493.62277222]
[-67.24076080 480.36730957]
[-58.88725662 467.89291382]
[-49.31458282 456.32766724]
[-38.62096786 445.79025269]
[-26.91615295 436.38873291]
[-14.32024479 428.21963501]
[-0.96249896 421.36679077]
[13.02001286 415.90048218]
[27.48380661 411.87686157]
[42.28046036 409.33715820]
[57.25813293 408.30746460]
[72.26313782 408.79833984]
[74.26715088 393.93280029]
[76.27116394 379.06726074]
[78.27517700 364.20175171]
[76.05348969 357.15292358]
[80.42128754 349.13043213]
[82.64640045 334.29638672]
[84.87152100 319.46234131]
[74.30641937 306.37734985]
[76.51744843 289.36480713]
[90.62075806 279.01513672]
[92.62477112 264.14959717]
[94.62878418 249.28407288]
[92.40709686 242.23524475]
[96.77489471 234.21276855]
[99.00000763 219.37872314]
[101.22512817 204.54467773]
[103.45024872 189.71064758]
[105.67536163 174.87660217]
[105.11714935 159.88699341]
[100.57025909 154.06053162]
[101.85603333 145.01704407]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[86.28707123 108.73696899]
[83.96182251 97.32493591]
[89.86505890 87.28536224]
[86.97978973 72.56546783]
[84.09451294 57.84557724]
[71.26193237 49.01593399]
[68.54554749 34.04677200]
[77.04234314 21.86727905]
[74.15707397 7.14738703]
[68.23995972 20.93099213]
[56.65345383 30.45742226]
[41.98600769 33.59844971]
[27.51436806 29.65235519]
[16.47153473 19.50071335]
[11.32450581 5.41142321]
[13.22314072 -9.46793079]
[21.74327850 -21.81326485]
[34.98149872 -28.86659622]
[49.98035049 -29.05219650]
[63.38905334 -22.32859802]
[72.21207428 -10.19785404]
[71.76546478 -25.19120407]
[71.31886292 -40.18455505]
[70.87225342 -55.17790222]
[62.72750092 -68.74159241]
[70.08243561 -81.69358826]
[69.63582611 -96.68693542]
[58.41463089 -107.49075317]
[58.17529297 -122.70250702]
[68.54423523 -133.33361816]
[68.09762573 -148.32696533]
[67.65102386 -163.32032776]
[67.09281158 -178.30993652]
[66.42302704 -193.29496765]
[65.75324249 -208.28001404]
[62.24376297 -216.71336365]
[65.18672180 -223.49279785]
[64.74011230 -238.48614502]
[50.34009552 -243.22062683]
[38.42971420 -252.59712219]
[30.44720078 -265.48336792]
[27.35648727 -280.32327271]
[29.53079224 -295.32489014]
[36.70755386 -308.67666626]
[48.02014923 -318.76632690]
[62.10251999 -324.37545776]
[77.25415802 -324.82678223]
[91.64542389 -320.06579590]
[103.53850555 -310.66735840]
[111.49726105 -297.76641846]
[114.56062317 -282.92083740]
[112.35867310 -267.92324829]
[105.15731812 -254.58473206]
[93.82614899 -244.51594543]
[79.73346710 -238.93275452]
[80.18006897 -223.93940735]
[80.73828125 -208.94979858]
[81.40806580 -193.96475220]
[82.07785034 -178.97972107]
[85.51688385 -172.43794250]
[82.64437103 -163.76692200]
[83.09098053 -148.77357483]
[83.53758240 -133.78022766]
[94.52091980 -123.78513336]
[95.18742371 -108.58610535]
[84.62918091 -97.13354492]
[85.07578278 -82.14019012]
[93.18859100 -69.64893341]
[85.86560059 -55.62450790]
[86.31221008 -40.63116074]
[86.75881958 -25.63780975]
[87.20542145 -10.64445972]
[88.87696075 4.26211405]
[91.76223755 18.98200607]
[104.22827911 27.05253410]
[107.36404419 41.93949509]
[98.81440735 54.96030426]
[101.69967651 69.68019867]
[104.58495331 84.40008545]
[115.93238068 96.75371552]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.53134155 141.91294861]
[119.74461365 156.56472778]
[123.23869324 141.97735596]
[129.96018982 128.56761169]
[139.55651855 117.03892517]
[151.52427673 107.99608612]
[165.23564148 101.91345978]
[179.97135925 99.11013031]
[194.95841980 99.73314667]
[209.41062927 103.74983215]
[222.56983948 110.94947815]
[233.74577332 120.95439911]
[242.35214233 133.23977661]
[247.93748474 147.16111755]
[250.20880127 161.98815918]
[249.04693604 176.94309998]
[244.51286316 191.24142456]
[236.84439087 204.13307190]
[226.44381714 214.94178772]
[213.85673523 223.10054016]
[199.74343872 228.18136597]
[184.84428406 229.91772461]
[169.94082642 228.21852112]
[155.81491089 223.17289734]
[143.20751953 215.04554749]
[132.78002930 204.26280212]
[125.07945251 191.39031982]
[120.50940704 177.10171509]
[118.28428650 191.93576050]
[116.05917358 206.76980591]
[113.83405304 221.60385132]
[111.60894012 236.43789673]
[109.49431610 251.28808594]
[107.49030304 266.15362549]
[105.48628998 281.01913452]
[114.83123016 290.71896362]
[116.85386658 303.83840942]
[111.03722382 315.55371094]
[99.70555878 321.68746948]
[97.48044586 336.52151489]
[95.25532532 351.35556030]
[93.14070129 366.20574951]
[91.13668823 381.07128906]
[89.13267517 395.93682861]
[87.12866211 410.80233765]
[101.72799683 414.30239868]
[115.89832306 419.26153564]
[129.49423218 425.62881470]
[142.37620544 433.33892822]
[154.41204834 442.31274414]
[165.47827148 452.45819092]
[175.46128845 463.67111206]
[184.25868225 475.83651733]
[191.78016663 488.82952881]
[197.94856262 502.51681519]
[202.70057678 516.75793457]
[205.98742676 531.40673828]
[207.77540588 546.31292725]
[208.04614258 561.32348633]
[206.79689026 576.28448486]
[204.04045105 591.04229736]
[199.80509949 605.44549561]
[194.13430786 619.34637451]
[187.08627319 632.60217285]
[178.73332214 645.07690430]
[169.16114807 656.64257812]
[158.46800232 667.18048096]
[146.76359558 676.58245850]
[134.16804504 684.75213623]
[120.81060791 691.60559082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 185]
[36 184]
[37 183]
[38 182]
[40 181]
[41 180]
[42 179]
[45 175]
[46 174]
[47 173]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[54 142]
[56 141]
[57 140]
[58 139]
[61 137]
[62 136]
[63 135]
[66 132]
[67 131]
[79 130]
[80 129]
[81 128]
[82 127]
[84 125]
[85 124]
[88 121]
[89 120]
[90 119]
[91 117]
[92 116]
[93 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
