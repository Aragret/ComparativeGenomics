%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[149.23547363 527.23223877]
[146.00328064 512.56762695]
[144.46383667 497.63012695]
[144.63720703 482.61456299]
[146.52113342 467.71661377]
[150.09103394 453.13055420]
[155.30039978 439.04650879]
[162.08129883 425.64810181]
[170.34532166 413.11001587]
[179.98474121 401.59570312]
[190.87388611 391.25527954]
[202.87078857 382.22354126]
[215.81906128 374.61828613]
[209.74522400 360.90301514]
[203.67138672 347.18774414]
[197.49562073 333.51806641]
[191.21826172 319.89474487]
[178.86483765 311.57357788]
[180.11677551 295.80197144]
[173.83941650 282.17864990]
[161.48599243 273.85748291]
[162.73791504 258.08587646]
[156.25842285 244.55752563]
[149.57823181 231.12715149]
[142.89804077 217.69677734]
[136.21783447 204.26640320]
[133.60630798 203.24757385]
[131.24098206 201.13288879]
[129.54130554 198.01095581]
[128.88687134 194.12042236]
[129.56668091 189.83184814]
[123.69771576 176.02767944]
[117.82875824 162.22349548]
[111.95980072 148.41932678]
[99.45317841 145.31867981]
[90.88812256 135.43324280]
[89.56094360 122.22532654]
[96.17910004 110.49440002]
[90.41306305 96.64691925]
[84.54410553 82.84274292]
[69.57846832 72.11375427]
[72.38502502 54.79064178]
[66.31118774 41.07537460]
[60.23735809 27.36010933]
[53.75786209 13.83176327]
[46.87844849 0.50233382]
[39.99903488 -12.82709503]
[33.28237534 -19.01775742]
[33.11809921 -26.40658760]
[26.43790245 -39.83696365]
[19.75770760 -53.26733780]
[13.07751369 -66.69771576]
[-2.50019169 -76.51691437]
[-0.72969866 -93.97635651]
[-7.60911131 -107.30578613]
[-14.48852348 -120.63521576]
[-21.36793709 -133.96464539]
[-21.79714394 -118.97078705]
[-27.26428795 -105.00259399]
[-37.12709045 -93.70104218]
[-50.22687912 -86.39382172]
[-65.02470398 -83.93937683]
[-79.78213501 -86.62605286]
[-92.76548004 -94.13822174]
[-102.44947815 -105.59336853]
[-107.69644165 -119.64574432]
[-107.88998413 -134.64450073]
[-103.00735474 -148.82757568]
[-93.62216949 -160.52879333]
[-80.83698273 -168.37347412]
[-66.15379333 -171.44004822]
[-51.29756165 -169.36825562]
[-38.01358414 -162.40147400]
[-27.86160088 -151.35685730]
[-31.40127373 -165.93322754]
[-34.94094467 -180.50961304]
[-38.04802322 -183.54275513]
[-39.84732819 -187.05374146]
[-40.34923172 -190.57276917]
[-39.71561432 -193.68165588]
[-38.22989655 -196.05879211]
[-40.89569473 -210.82000732]
[-43.56148911 -225.58122253]
[-46.22728348 -240.34243774]
[-48.89307785 -255.10365295]
[-51.55887604 -269.86486816]
[-66.60821533 -270.54678345]
[-81.12836456 -274.56088257]
[-94.39099121 -281.70587158]
[-105.73084259 -291.62329102]
[-114.57913208 -303.81573486]
[-120.49201965 -317.67160034]
[-123.17292023 -332.49594116]
[-122.48735809 -347.54510498]
[-118.46973419 -362.06427002]
[-111.32155609 -375.32516479]
[-101.40137482 -386.66262817]
[-89.20679474 -395.50796509]
[-75.34947968 -401.41748047]
[-60.52450562 -404.09478760]
[-45.47549438 -403.40560913]
[-30.95729637 -399.38446045]
[-17.69813538 -392.23306274]
[-6.36308670 -382.31015015]
[2.47928834 -370.11340332]
[8.38545990 -356.25466919]
[11.05917645 -341.42904663]
[10.36632633 -326.38018799]
[6.34166193 -311.86297607]
[-0.81294113 -298.60556030]
[-10.73861122 -287.27288818]
[-22.93747902 -278.43347168]
[-36.79765701 -272.53067017]
[-34.13186264 -257.76943970]
[-31.46606636 -243.00823975]
[-28.80027199 -228.24700928]
[-26.13447571 -213.48579407]
[-23.46867943 -198.72457886]
[-20.36457062 -184.04928589]
[-16.82489777 -169.47290039]
[-13.28522491 -154.89653015]
[-8.03850746 -140.84405518]
[-1.15909457 -127.51462555]
[5.72031784 -114.18519592]
[12.59973049 -100.85577393]
[24.02434540 -96.88024902]
[29.86478615 -85.83158875]
[26.50788879 -73.37790680]
[33.18808365 -59.94753265]
[39.86827850 -46.51715851]
[46.54847336 -33.08678055]
[53.32846451 -19.70650864]
[60.20787811 -6.37707853]
[67.08728790 6.95235062]
[69.71370697 7.93218517]
[72.11024475 10.01141644]
[73.85622406 13.10769939]
[74.56850433 16.98805809]
[73.95262146 21.28627396]
[80.02645874 35.00154114]
[86.10028839 48.71680832]
[97.26802063 53.36528397]
[102.44048309 64.74198914]
[98.34828186 76.97377777]
[104.21723938 90.77795410]
[110.01852417 96.37417603]
[110.06912231 104.83161926]
[126.31483459 111.31978607]
[132.71569824 127.23656464]
[125.76397705 142.55035400]
[131.63293457 156.35453796]
[137.50189209 170.15870667]
[143.37084961 183.96289062]
[149.64822388 197.58621216]
[156.32841492 211.01658630]
[163.00860596 224.44696045]
[169.68879700 237.87733459]
[174.97830200 241.84378052]
[177.14533997 247.09744263]
[176.36123657 251.80851746]
[189.16366577 261.10412598]
[187.46272278 275.90130615]
[193.74008179 289.52462769]
[206.54251099 298.82022095]
[204.84158325 313.61740112]
[211.11894226 327.24072266]
[217.55247498 333.72512817]
[217.38665771 341.11392212]
[223.46049500 354.82919312]
[229.53431702 368.54443359]
[243.86811829 364.06781006]
[258.61877441 361.25430298]
[273.59399414 360.14065552]
[288.59857178 360.74130249]
[303.43685913 363.04849243]
[317.91540527 367.03210449]
[331.84548950 372.64022827]
[345.04547119 379.79971313]
[357.34326172 388.41723633]
[368.57855225 398.38049316]
[378.60485840 409.55953979]
[387.29147339 421.80862427]
[394.52511597 434.96810913]
[400.21154785 448.86639404]
[404.27655029 463.32229614]
[406.66720581 478.14736938]
[407.35232544 493.14831543]
[406.32293701 508.12957764]
[403.59249878 522.89581299]
[399.19659424 537.25457764]
[393.19253540 551.01867676]
[385.65863037 564.00854492]
[376.69302368 576.05499268]
[366.41265869 587.00085449]
[354.95156860 596.70343018]
[342.45913696 605.03631592]
[329.09823608 611.89080811]
[315.04306030 617.17761230]
[300.47683716 620.82769775]
[285.58950806 622.79351807]
[270.57510376 623.04949951]
[255.62937927 621.59228516]
[240.94721985 618.44079590]
[226.72000122 613.63623047]
[213.13322449 607.24114990]
[200.36399841 599.33892822]
[188.57882690 590.03259277]
[177.93133545 579.44354248]
[168.56033325 567.70971680]
[160.58799744 554.98419189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 170]
[14 169]
[15 168]
[16 166]
[17 165]
[19 163]
[20 162]
[22 160]
[23 157]
[24 156]
[25 155]
[26 154]
[31 153]
[32 152]
[33 151]
[34 150]
[38 147]
[39 145]
[40 144]
[42 141]
[43 140]
[44 139]
[45 134]
[46 133]
[47 132]
[49 131]
[50 130]
[51 129]
[52 128]
[54 125]
[55 124]
[56 123]
[57 122]
[74 121]
[75 120]
[76 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
