%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[46.46094131 566.99584961]
[31.41851616 567.73034668]
[16.56995392 565.21356201]
[2.60975003 559.56317139]
[-9.80915070 551.04351807]
[-20.10589600 540.05297852]
[-27.79888535 527.10571289]
[-32.52830505 512.80725098]
[-34.07295227 497.82632446]
[-32.36058044 482.86364746]
[-27.47128105 468.61901855]
[-19.63373566 455.75875854]
[-9.21451759 444.88427734]
[3.29904437 436.50424194]
[17.32166862 431.01062012]
[32.19749451 428.66030884]
[33.09030914 413.68692017]
[33.98312378 398.71350098]
[34.87594223 383.74008179]
[24.87635994 394.92080688]
[10.44817924 399.02294922]
[-3.93787456 394.77542114]
[-13.82412529 383.49438477]
[-16.14721107 368.67535400]
[-10.18729782 354.91021729]
[2.20886970 346.46420288]
[17.20020485 345.95443726]
[30.14147949 353.53884888]
[37.02274704 366.86761475]
[39.90802002 352.14770508]
[42.79329300 337.42782593]
[30.45398331 330.48846436]
[20.84646416 320.06170654]
[14.91980267 307.15805054]
[13.26548195 293.03350830]
[16.05840492 279.06747437]
[23.03849792 266.62802124]
[33.53488159 256.93783569]
[46.53031921 250.95401001]
[60.75979614 249.27365112]
[63.86390686 234.59834290]
[66.96801758 219.92304993]
[70.07212830 205.24774170]
[73.17623901 190.57244873]
[76.28034973 175.89714050]
[79.38446045 161.22183228]
[74.44843292 147.16889954]
[84.87406158 135.26861572]
[87.97817230 120.59331512]
[91.08228302 105.91801453]
[92.30925751 90.96828461]
[91.63947296 75.98324585]
[78.51576233 64.41658783]
[77.83132935 47.27464294]
[89.52168274 35.18438339]
[88.62886810 20.21097946]
[87.73605347 5.23757362]
[86.84323883 -9.73583221]
[85.95042419 -24.70923805]
[85.05760193 -39.68264389]
[71.76313782 -51.05261993]
[70.82356262 -68.18247986]
[82.33261871 -80.44544983]
[81.21696472 -95.40390015]
[78.64601898 -98.90307617]
[77.44325256 -102.66044617]
[77.52183533 -106.21421051]
[78.65387726 -109.17817688]
[80.50730133 -111.28126526]
[80.28397369 -126.27960205]
[77.72814178 -141.06025696]
[72.90213776 -155.26271057]
[68.07614136 -169.46516418]
[63.25014496 -183.66761780]
[58.42414856 -197.87007141]
[43.61093521 -195.31758118]
[28.58079910 -195.11392212]
[13.70386696 -197.26414490]
[-0.65350068 -201.71525574]
[-14.13774204 -208.35768127]
[-26.41679573 -217.02781677]
[-37.18827820 -227.51217651]
[-46.18693161 -239.55255127]
[-53.19115829 -252.85244751]
[-58.02846909 -267.08435059]
[-60.57974243 -281.89776611]
[-60.78215408 -296.92791748]
[-58.63071823 -311.80468750]
[-54.17840958 -326.16168213]
[-47.53487778 -339.64538574]
[-38.86372375 -351.92370605]
[-28.37848282 -362.69433594]
[-16.33736229 -371.69198608]
[-3.03688502 -378.69512939]
[11.19541168 -383.53125000]
[26.00904465 -386.08129883]
[41.03921509 -386.28247070]
[55.91579056 -384.12982178]
[70.27242279 -379.67633057]
[83.75556946 -373.03167725]
[96.03318787 -364.35949707]
[106.80294037 -353.87338257]
[115.79960632 -341.83151245]
[122.80164337 -328.53045654]
[127.63660431 -314.29776001]
[130.18544006 -299.48391724]
[130.38536072 -284.45373535]
[128.23147583 -269.57733154]
[123.77679443 -255.22106934]
[117.13104248 -241.73847961]
[108.45786285 -229.46156311]
[97.97084045 -218.69267273]
[85.92823792 -209.69700623]
[72.62660217 -202.69607544]
[77.45259857 -188.49362183]
[82.27859497 -174.29116821]
[87.10459900 -160.08869934]
[91.93059540 -145.88624573]
[94.03302002 -160.73817444]
[100.01385498 -174.49426270]
[109.44133759 -186.16140747]
[121.63488770 -194.89739990]
[135.71424866 -200.07153320]
[150.66300964 -201.31031799]
[165.40200806 -198.52430725]
[178.86721802 -191.91462708]
[190.08659363 -181.95843506]
[198.25018311 -169.37449646]
[202.76866150 -155.07122803]
[203.31582642 -140.08120728]
[199.85217285 -125.48657990]
[192.62774658 -112.34094238]
[182.16410828 -101.59329224]
[169.21659851 -94.01950836]
[154.71994019 -90.16634369]
[139.72065735 -90.31197357]
[125.30153656 -94.44586945]
[112.50352478 -102.26961517]
[102.25052643 -113.21840668]
[95.28231049 -126.50292969]
[95.50563812 -111.50459290]
[96.17542267 -96.51955414]
[97.29106903 -81.56109619]
[108.13513947 -74.60152435]
[113.06432343 -62.48602676]
[110.07151031 -49.55337524]
[100.03101349 -40.57545853]
[100.92382812 -25.60205460]
[101.81664276 -10.62864780]
[102.70945740 4.34475756]
[103.60227203 19.31816292]
[104.49509430 34.29156876]
[115.23433685 41.41182327]
[119.98259735 53.59936523]
[116.79756927 66.48602295]
[106.62451172 75.31346130]
[107.29429626 90.29850006]
[113.81747437 76.79116058]
[124.32614136 66.08751678]
[137.71128845 59.31715012]
[152.56034851 57.19454575]
[167.30625916 59.94371796]
[180.39286804 67.27452850]
[190.43910217 78.41334534]
[196.38475037 92.18466949]
[197.60235596 107.13516998]
[193.96343994 121.68708038]
[185.85202026 134.30471802]
[174.12409973 143.65650940]
[160.01736450 148.75552368]
[145.02052307 149.06367493]
[130.71624756 144.54841614]
[118.61408234 135.68626404]
[109.99120331 123.41247559]
[105.75758362 109.02212524]
[102.65347290 123.69742584]
[99.54936981 138.37272644]
[104.26336670 153.47534180]
[94.05976105 164.32594299]
[90.95565033 179.00125122]
[87.85153961 193.67655945]
[84.74742889 208.35185242]
[81.64331818 223.02716064]
[78.53920746 237.70245361]
[75.43509674 252.37776184]
[88.99910736 260.73583984]
[98.86450958 273.21218872]
[103.85291290 288.28692627]
[103.37864685 304.13168335]
[97.51741028 318.83123779]
[86.99494171 330.61511230]
[73.09719086 338.07083130]
[57.51318359 340.31307983]
[54.62791061 355.03298950]
[51.74263763 369.75286865]
[49.84934616 384.63290405]
[48.95653152 399.60632324]
[48.06371689 414.57971191]
[47.17089844 429.55313110]
[61.66203308 433.65447998]
[74.93248749 440.77551270]
[86.36157227 450.58316040]
[95.41474152 462.61871338]
[101.66855621 476.31921387]
[104.83050537 491.04388428]
[104.75271606 506.10403442]
[101.43881226 520.79528809]
[95.04380035 534.43041992]
[85.86678314 546.37182617]
[74.33698273 556.06085205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 199]
[17 198]
[18 197]
[19 196]
[29 195]
[30 194]
[31 193]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[48 177]
[49 176]
[50 175]
[51 157]
[52 156]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[63 143]
[64 142]
[69 141]
[70 140]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
