%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[128.69375610 495.01098633]
[139.00547791 483.94195557]
[152.23400879 476.60293579]
[149.34872437 461.88302612]
[146.46345520 447.16314697]
[143.57818604 432.44323730]
[133.53726196 421.44192505]
[138.47558594 406.41116333]
[135.08212280 403.05059814]
[133.76373291 397.52261353]
[135.73042297 391.21041870]
[133.28468323 376.41113281]
[130.83895874 361.61187744]
[121.13003540 350.31646729]
[126.51370239 335.43942261]
[124.06797791 320.64013672]
[121.62224579 305.84088135]
[110.89807129 316.32858276]
[95.99401855 314.63476562]
[87.89678955 302.00799561]
[92.57537079 287.75628662]
[106.58087921 282.38546753]
[119.58804321 289.85336304]
[118.24980927 274.91317749]
[116.91157532 259.97299194]
[115.12910461 245.07925415]
[112.90399170 230.24522400]
[110.67887115 215.41117859]
[108.45375824 200.57713318]
[106.22863770 185.74308777]
[104.00351715 170.90904236]
[101.66802979 156.09197998]
[99.22230530 141.29270935]
[96.77658081 126.49343109]
[94.33084869 111.69416046]
[91.44557953 96.97427368]
[88.12332153 82.34680939]
[84.80105591 67.71935272]
[81.47879791 53.09188843]
[78.15653992 38.46443176]
[65.06675720 30.02077675]
[61.90588760 15.13912487]
[70.03628540 2.71205091]
[66.71402740 -11.91540909]
[63.39176941 -26.54286957]
[59.85209656 -41.11924362]
[56.09579468 -55.64130402]
[52.33949280 -70.16336060]
[48.58319473 -84.68542480]
[43.40447998 -92.20996857]
[44.88079071 -99.45166779]
[41.34111786 -114.02804565]
[37.80144501 -128.60441589]
[34.26177216 -143.18080139]
[30.07476234 -157.58457947]
[25.24876404 -171.78703308]
[20.42276573 -185.98948669]
[14.69874763 -193.10801697]
[15.63235378 -200.43946838]
[11.01834488 -214.71220398]
[5.35555840 -228.60223389]
[-1.32463622 -242.03260803]
[-8.00483131 -255.46298218]
[-21.07834435 -264.37329102]
[-19.81872940 -279.21453857]
[-26.49892426 -292.64492798]
[-40.69263840 -287.72894287]
[-55.39847183 -284.66842651]
[-70.37494659 -283.51364136]
[-85.37613678 -284.28353882]
[-100.15570068 -286.96548462]
[-114.47094727 -291.51541138]
[-128.08680725 -297.85864258]
[-140.77970886 -305.89099121]
[-152.34120178 -315.48059082]
[-162.58145142 -326.46990967]
[-171.33230591 -338.67855835]
[-178.45005798 -351.90603638]
[-183.81782532 -365.93511963]
[-187.34747314 -380.53546143]
[-188.98103333 -395.46731567]
[-188.69168091 -410.48544312]
[-186.48417664 -425.34329224]
[-182.39477539 -439.79684448]
[-176.49061584 -453.60876465]
[-168.86865234 -466.55224609]
[-159.65403748 -478.41476440]
[-148.99809265 -489.00149536]
[-137.07580566 -498.13864136]
[-124.08293152 -505.67611694]
[-110.23283386 -511.49017334]
[-95.75295258 -515.48535156]
[-80.88105011 -517.59600830]
[-65.86134338 -517.78747559]
[-50.94046402 -516.05670166]
[-36.36342621 -512.43200684]
[-22.36960411 -506.97296143]
[-9.18878269 -499.76919556]
[2.96259356 -490.93899536]
[13.88498974 -480.62738037]
[23.39904976 -469.00366211]
[31.34854317 -456.25869751]
[37.60293198 -442.60180664]
[42.05951691 -428.25720215]
[44.64511108 -413.46047974]
[45.31726074 -398.45458984]
[44.06492996 -383.48596191]
[40.90867996 -368.80038452]
[35.90033722 -354.63900757]
[29.12214851 -341.23434448]
[20.68541527 -328.80657959]
[10.72867584 -317.55972290]
[-0.58456987 -307.67846680]
[-13.06854916 -299.32513428]
[-6.38835430 -285.89474487]
[6.20734596 -277.94506836]
[5.42554522 -262.14318848]
[12.10573959 -248.71279907]
[18.78593445 -235.28242493]
[21.31545639 -250.06759644]
[30.82242966 -261.67007446]
[44.82175827 -267.05697632]
[59.65404892 -264.82022095]
[71.44217682 -255.54443359]
[77.10475159 -241.65432739]
[75.16159058 -226.78071594]
[66.12063599 -214.81153870]
[52.34516907 -208.87551880]
[37.43605804 -210.52429199]
[25.29107857 -219.32621765]
[29.90508842 -205.05348206]
[34.62522125 -190.81549072]
[39.45121765 -176.61303711]
[44.27721786 -162.41058350]
[51.86162949 -175.35185242]
[66.34004974 -179.27299500]
[79.41857910 -171.92779541]
[83.60524750 -157.52391052]
[76.50173187 -144.31254578]
[62.17726135 -139.86177063]
[48.83815002 -146.72047424]
[52.37781906 -132.14408875]
[55.91749191 -117.56771851]
[59.45716476 -102.99134064]
[63.10525131 -88.44172668]
[66.86155701 -73.91966248]
[70.61785126 -59.39760590]
[74.37415314 -44.87554550]
[77.96162415 -41.72291565]
[79.60671997 -36.28318024]
[78.01922607 -29.86512947]
[81.34149170 -15.23766899]
[84.66374969 -0.61020863]
[97.36454773 7.08558130]
[100.94216919 21.87257957]
[92.78400421 35.14216995]
[96.10626221 49.76963043]
[99.42852020 64.39709473]
[102.75077820 79.02455139]
[106.07303619 93.65200806]
[108.50506592 95.48905945]
[110.32241821 98.25162506]
[111.18100739 101.71374512]
[110.82505798 105.52551270]
[109.13011932 109.24843597]
[111.57585144 124.04770660]
[114.02157593 138.84696960]
[116.46730804 153.64624023]
[120.95406342 161.60281372]
[118.83756256 168.68392944]
[121.06268311 183.51797485]
[123.28779602 198.35202026]
[125.51291656 213.18605042]
[127.73802948 228.02009583]
[129.96315002 242.85414124]
[132.78723145 246.15240479]
[134.26612854 249.80992126]
[134.45208740 253.35968018]
[133.54362488 256.39962769]
[131.85176086 258.63473511]
[133.18998718 273.57492065]
[134.52822876 288.51510620]
[136.42152405 303.39514160]
[138.86724854 318.19442749]
[141.31297302 332.99368286]
[151.19682312 345.34762573]
[145.63822937 359.16613770]
[148.08395386 373.96542358]
[150.52969360 388.76467896]
[153.19548035 403.52590942]
[163.44277954 415.58010864]
[158.29808044 429.55798340]
[161.18334961 444.27786255]
[164.06861877 458.99777222]
[166.95388794 473.71765137]
[181.97415161 475.51956177]
[195.70159912 481.87664795]
[206.79135132 492.16610718]
[214.15693665 505.37985229]
[217.07676697 520.22338867]
[215.26478577 535.24243164]
[208.89851379 548.96557617]
[198.60163879 560.04846191]
[185.38294983 567.40515137]
[170.53749084 570.31506348]
[155.51965332 568.49304199]
[141.80075073 562.11755371]
[130.72479248 551.81323242]
[123.37692261 538.58966064]
[120.47698212 523.74224854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[6 192]
[8 190]
[11 189]
[12 188]
[13 187]
[15 185]
[16 184]
[17 183]
[23 182]
[24 181]
[25 180]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 168]
[33 167]
[34 166]
[35 165]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[43 153]
[44 152]
[45 151]
[46 148]
[47 147]
[48 146]
[49 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 134]
[56 133]
[57 132]
[59 131]
[60 130]
[61 119]
[62 118]
[63 117]
[65 115]
[66 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
