%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[148.70977783 615.21240234]
[148.03999329 600.22735596]
[147.37019348 585.24230957]
[146.70040894 570.25732422]
[146.03062439 555.27227783]
[145.36083984 540.28723145]
[144.69105530 525.30218506]
[144.02127075 510.31713867]
[143.35148621 495.33209229]
[142.68170166 480.34707642]
[142.01191711 465.36203003]
[141.34213257 450.37698364]
[130.71008301 443.09762573]
[126.14380646 430.84075928]
[129.52035522 418.00292969]
[139.82369995 409.32794189]
[131.71089172 396.83666992]
[139.03387451 382.81225586]
[138.58728027 367.81890869]
[130.47447205 355.32763672]
[137.79745483 341.30322266]
[137.35084534 326.30987549]
[136.68106079 311.32482910]
[135.78825378 296.35144043]
[134.89543152 281.37802124]
[123.61937714 271.71438599]
[122.50063324 256.54193115]
[132.71321106 244.78009033]
[131.82040405 229.80668640]
[130.92758179 214.83326721]
[130.03477478 199.85986328]
[129.14195251 184.88645935]
[125.38565063 170.36441040]
[118.90615845 156.83605957]
[112.42665863 143.30770874]
[105.94716644 129.77937317]
[99.46766663 116.25102234]
[88.73607635 111.72617340]
[83.78350830 101.18514252]
[87.15090942 90.03606415]
[80.87355042 76.41275024]
[68.07112885 67.11713409]
[69.77206421 52.31996536]
[56.96963882 43.02434921]
[58.67057037 28.22718239]
[52.39321136 14.60386658]
[46.11585236 0.98055029]
[45.49981689 15.96789455]
[40.74090958 30.19297218]
[32.21443939 42.53393173]
[20.59283638 52.01751709]
[6.79263067 57.89580917]
[-8.09783649 59.70522308]
[-22.90424156 57.30305862]
[-36.45888901 50.87876511]
[-47.69280243 40.93898773]
[-55.72002792 28.26761818]
[-59.90750885 13.86397171]
[-59.92499542 -1.13601768]
[-55.77111816 -15.54938984]
[-47.77346039 -28.23944473]
[-36.56275940 -38.20539093]
[-23.02312851 -44.66127777]
[-8.22236633 -47.09796143]
[6.67228031 -45.32327271]
[20.48615646 -39.47718048]
[32.12984085 -30.02072144]
[40.68662643 -17.69657898]
[38.68261337 -32.56210709]
[34.95048523 -38.01946640]
[34.58894730 -43.69100189]
[36.84707260 -47.89931488]
[35.28654861 -62.81792068]
[33.72602463 -77.73652649]
[32.16550064 -92.65512848]
[30.60497856 -107.57373047]
[19.44586563 -122.22145081]
[27.21150589 -137.95872498]
[25.42903900 -152.85244751]
[13.28871918 -162.61207581]
[11.69321251 -177.74180603]
[21.07234383 -189.25561523]
[19.28987885 -204.14932251]
[9.96751118 -216.93228149]
[16.13759422 -230.48881531]
[14.35512829 -245.38252258]
[-0.64981651 -246.53919983]
[-15.14070797 -250.60124207]
[-28.56055641 -257.41256714]
[-40.39353943 -266.71130371]
[-50.18482590 -278.14007568]
[-57.55806351 -291.25958252]
[-62.22985077 -305.56555176]
[-64.02061462 -320.50808716]
[-62.86151886 -335.51284790]
[-58.79711914 -350.00308228]
[-51.98363876 -363.42184448]
[-42.68297195 -375.25329590]
[-31.25261116 -385.04275513]
[-18.13190842 -392.41384888]
[-3.82518625 -397.08334351]
[11.11764050 -398.87167358]
[26.12220955 -397.71014404]
[40.61178589 -393.64340210]
[54.02942657 -386.82775879]
[65.85939789 -377.52517700]
[75.64698792 -366.09323120]
[83.01597595 -352.97134399]
[87.68313599 -338.66384888]
[89.46905518 -323.72073364]
[88.30510712 -308.71636963]
[84.23601532 -294.22744751]
[77.41819000 -280.81091309]
[68.11369324 -268.98242188]
[56.68016815 -259.19668579]
[43.55707550 -251.82983398]
[29.24884605 -247.16499329]
[31.03131104 -232.27127075]
[40.22618484 -220.55361938]
[34.18359375 -205.93179321]
[35.96606064 -191.03807068]
[47.79731369 -182.06271362]
[49.81715393 -166.98376465]
[40.32275772 -154.63490295]
[42.10522461 -139.74119568]
[51.41759872 -132.02069092]
[53.02449036 -119.62707520]
[45.52358246 -109.13425446]
[47.08410645 -94.21565247]
[48.64463043 -79.29705048]
[50.20515442 -64.37844086]
[51.76567459 -49.45983887]
[53.54814148 -34.56612015]
[55.55215454 -19.70059204]
[59.73916626 -5.29681063]
[66.01652527 8.32650566]
[72.29389191 21.94982147]
[84.64731598 30.27100945]
[83.39537811 46.04260635]
[95.74880219 54.36379242]
[94.49686432 70.13539124]
[100.77422333 83.75870514]
[114.71636963 93.08570099]
[112.99600983 109.77152252]
[119.47550964 123.29987335]
[125.95500183 136.82821655]
[132.43449402 150.35656738]
[138.91400146 163.88490295]
[139.08038330 148.88583374]
[142.53556824 134.28919983]
[149.11099243 120.80721283]
[158.48580933 109.09769440]
[170.20259094 99.73197174]
[183.68968201 93.16702271]
[198.28898621 89.72315979]
[213.28819275 89.56842804]
[227.95544434 92.71035767]
[241.57508850 98.99566650]
[253.48260498 108.11767578]
[263.09701538 119.63129425]
[269.94915771 132.97476196]
[273.70474243 147.49699402]
[274.18054199 162.48945618]
[271.35330200 177.22059631]
[265.36099243 190.97167969]
[256.49597168 203.07173157]
[245.19079590 212.93038940]
[231.99707031 220.06661987]
[217.55854797 224.13221741]
[202.57972717 224.92883301]
[187.79142761 222.41758728]
[173.91522217 216.72100830]
[161.62817383 208.11705017]
[151.52976990 197.02549744]
[144.11535645 183.99365234]
[145.00817871 198.96705627]
[145.90098572 213.94046021]
[146.79380798 228.91386414]
[147.68661499 243.88726807]
[159.22451782 254.35220337]
[159.91665649 269.55007935]
[149.86883545 280.48519897]
[150.76165771 295.45861816]
[151.65446472 310.43200684]
[154.97036743 316.15185547]
[154.90907288 321.83456421]
[152.34419250 325.86328125]
[152.79080200 340.85662842]
[160.93556213 354.42031860]
[153.58062744 367.37231445]
[154.02723694 382.36566162]
[162.17198181 395.92935181]
[154.81704712 408.88134766]
[167.76710510 420.64208984]
[168.19624329 437.79232788]
[156.32717896 449.70721436]
[156.99696350 464.69223022]
[157.66674805 479.67727661]
[158.33653259 494.66232300]
[159.00631714 509.64736938]
[159.67610168 524.63238525]
[160.34588623 539.61743164]
[161.01567078 554.60247803]
[161.68545532 569.58752441]
[162.35523987 584.57257080]
[163.02502441 599.55761719]
[163.69480896 614.54260254]
[172.97160339 628.06567383]
[165.65553284 642.74243164]
[149.27273560 643.47473145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[16 193]
[18 191]
[19 190]
[21 188]
[22 187]
[23 184]
[24 183]
[25 182]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[40 142]
[41 141]
[43 139]
[45 137]
[46 136]
[47 135]
[68 134]
[69 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[78 125]
[79 124]
[82 121]
[83 120]
[85 118]
[86 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
