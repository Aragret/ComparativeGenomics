%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[58.52547073 485.64562988]
[63.59738159 499.91287231]
[63.75941849 515.05395508]
[58.99400711 529.42645264]
[49.81806183 541.47143555]
[37.22692108 549.88226318]
[22.58637619 553.74658203]
[7.48452711 552.64532471]
[-6.44049358 546.69781494]
[-17.67820168 536.54931641]
[-25.00961685 523.30053711]
[-27.63948059 508.38873291]
[-25.28252411 493.43133545]
[-18.19441414 480.05084229]
[-7.14401627 469.69869995]
[6.67000723 463.49777222]
[21.74921227 462.12069702]
[25.28888512 447.54434204]
[28.82855797 432.96795654]
[32.36822891 418.39157104]
[35.90790176 403.81521606]
[39.44757462 389.23883057]
[33.42393875 378.74871826]
[36.25360107 366.57592773]
[46.95087814 359.36959839]
[50.70718002 344.84756470]
[54.46347809 330.32550049]
[58.21977997 315.80343628]
[61.97608185 301.28137207]
[65.62416840 286.73175049]
[69.16384125 272.15536499]
[72.70351410 257.57901001]
[75.47912598 242.83804321]
[77.48313904 227.97251892]
[75.26145172 220.92369080]
[79.62924957 212.90121460]
[81.85436249 198.06716919]
[84.07948303 183.23312378]
[82.28899384 180.19561768]
[81.88079834 176.13993835]
[83.31740570 171.72526550]
[86.74946594 167.79231262]
[89.63473511 153.07241821]
[91.30628204 138.16584778]
[91.75288391 123.17250061]
[92.19949341 108.17915344]
[81.99266052 119.17098999]
[67.29699707 122.17723083]
[53.59362030 116.07661438]
[45.99355316 103.14452362]
[47.33143234 88.20430756]
[57.10826111 76.82829285]
[71.67752075 73.25946045]
[85.60524750 78.82888794]
[93.69702911 91.46045685]
[95.92214966 76.62641144]
[98.14726257 61.79236603]
[85.92919159 50.09558105]
[83.11837769 33.58496094]
[90.62728119 18.80057144]
[105.32000732 11.47928047]
[107.32402039 -3.38624787]
[109.32803345 -18.25177574]
[111.33204651 -33.11730576]
[113.33605957 -47.98283386]
[106.15088654 -58.69432831]
[108.12606812 -71.03459930]
[117.66418457 -78.47441864]
[119.88930511 -93.30846405]
[122.11441803 -108.14250946]
[124.33953857 -122.97655487]
[118.73497772 -137.77180481]
[128.27464294 -149.21051025]
[130.49977112 -164.04455566]
[123.59410858 -168.59649658]
[118.34776306 -174.94686890]
[115.20647430 -182.52505493]
[114.42800140 -190.65760803]
[116.06106567 -198.62800598]
[119.94277954 -205.73986816]
[125.71470642 -211.37774658]
[132.85583496 -215.06036377]
[140.72959900 -216.48171997]
[144.26927185 -231.05810547]
[147.80894470 -245.63447571]
[151.34861755 -260.21084595]
[154.88829041 -274.78723145]
[143.89204407 -285.41876221]
[139.72125244 -300.03045654]
[143.39973450 -314.67065430]
[153.84248352 -325.43191528]
[168.17306519 -329.49392700]
[171.71273804 -344.07031250]
[175.25241089 -358.64666748]
[178.79208374 -373.22305298]
[181.12756348 -388.04013062]
[182.24322510 -402.99856567]
[183.35887146 -417.95703125]
[169.28012085 -423.45977783]
[157.44985962 -432.86914062]
[148.92001343 -445.34844971]
[144.44905090 -459.78805542]
[144.43453979 -474.90399170]
[148.87776184 -489.35214233]
[157.38362122 -501.84780884]
[169.19580078 -511.27987671]
[183.26394653 -516.80963135]
[198.33715820 -517.94543457]
[213.07510376 -514.58624268]
[226.16731262 -507.03076172]
[236.44963074 -495.95080566]
[243.00776672 -482.33163452]
[245.25857544 -467.38421631]
[243.00190735 -452.43768311]
[236.43843079 -438.82107544]
[226.15176392 -427.74514771]
[213.05659485 -420.19479370]
[198.31732178 -416.84136963]
[197.20167542 -401.88293457]
[196.08602905 -386.92446899]
[205.44189453 -398.64913940]
[219.13743591 -404.76730347]
[234.11303711 -403.91217041]
[247.02311707 -396.27474976]
[254.98352051 -383.56130981]
[256.21588135 -368.61199951]
[250.44487000 -354.76660156]
[238.95976257 -345.11816406]
[224.32635498 -341.82217407]
[209.81379700 -345.61502075]
[198.66421509 -355.64929199]
[193.36845398 -369.68338013]
[189.82878113 -355.10699463]
[186.28910828 -340.53063965]
[182.74943542 -325.95425415]
[193.62106323 -315.77224731]
[197.96536255 -301.42013550]
[194.51977539 -286.72338867]
[184.11216736 -275.65185547]
[169.46467590 -271.24755859]
[165.92500305 -256.67117310]
[162.38533020 -242.09480286]
[158.84565735 -227.51843262]
[155.30598450 -212.94206238]
[168.54798889 -195.45892334]
[164.46731567 -173.62881470]
[145.33381653 -161.81942749]
[143.10868835 -146.98538208]
[148.87240601 -133.25115967]
[139.17358398 -120.75143433]
[136.94847107 -105.91738892]
[134.72334290 -91.08335114]
[132.49822998 -76.24930573]
[139.79187012 -60.28779602]
[128.20158386 -45.97882080]
[126.19757080 -31.11329079]
[124.19355774 -16.24776268]
[122.18954468 -1.38223433]
[120.18553162 13.48329353]
[130.65513611 21.76758957]
[135.70462036 34.24343872]
[133.91590881 47.69223785]
[125.65020752 58.58703613]
[112.98130798 64.01748657]
[110.75619507 78.85152435]
[108.53107452 93.68556976]
[107.19284058 108.62575531]
[106.74623871 123.61911011]
[106.29962921 138.61245728]
[115.12263489 126.48172760]
[128.53132629 119.75811768]
[143.53018188 119.94371033]
[156.76840210 126.99703217]
[165.28855896 139.34236145]
[167.18719482 154.22171021]
[162.04017639 168.31100464]
[150.99736023 178.46266174]
[136.52571106 182.40875244]
[121.85826874 179.26774597]
[110.27175903 169.74131775]
[104.35462952 155.95770264]
[101.46936035 170.67758179]
[98.91352844 185.45823669]
[96.68840790 200.29228210]
[94.46328735 215.12632751]
[92.34866333 229.97653198]
[90.34465027 244.84205627]
[102.21979523 235.67794800]
[117.21187592 236.16534424]
[128.46672058 246.08142090]
[130.83874512 260.89270020]
[123.24351501 273.82760620]
[109.15345764 278.97253418]
[95.01036072 273.97528076]
[87.27989197 261.11868286]
[83.74021912 275.69503784]
[80.20054626 290.27142334]
[81.21649170 299.34918213]
[76.49813843 305.03768921]
[72.74183655 319.55972290]
[68.98554230 334.08178711]
[65.22924042 348.60385132]
[61.47293854 363.12591553]
[66.80364990 380.75161743]
[54.02394867 392.77850342]
[50.48427963 407.35488892]
[46.94460678 421.93124390]
[43.40493393 436.50762939]
[39.86526108 451.08401489]
[36.32558823 465.66036987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 197]
[31 196]
[32 195]
[33 187]
[34 186]
[36 185]
[37 184]
[38 183]
[42 182]
[43 181]
[44 169]
[45 168]
[46 167]
[55 166]
[56 165]
[57 164]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[68 153]
[69 152]
[70 151]
[71 150]
[73 148]
[74 147]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[92 135]
[93 134]
[94 133]
[95 132]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
