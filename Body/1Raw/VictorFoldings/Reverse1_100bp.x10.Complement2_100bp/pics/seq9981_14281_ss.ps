%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[124.37466431 842.56591797]
[110.01385498 838.21154785]
[96.00026703 832.84381104]
[82.40532684 826.49005127]
[69.29829407 819.18255615]
[56.74596786 810.95867920]
[44.81231308 801.86022949]
[33.55813980 791.93365479]
[23.04080009 781.22955322]
[13.31388569 769.80236816]
[4.42696428 757.71038818]
[-3.57467771 745.01519775]
[-10.65026569 731.78155518]
[-16.76374435 718.07690430]
[-21.88395882 703.97094727]
[-25.98481941 689.53570557]
[-29.04542923 674.84472656]
[-31.05018806 659.97277832]
[-31.98888397 644.99572754]
[-31.85673332 629.98986816]
[-30.65440750 615.03167725]
[-28.38803291 600.19738770]
[-25.06916237 585.56256104]
[-20.71470451 571.20178223]
[-15.34685040 557.18823242]
[-8.99295330 543.59332275]
[-1.68539202 530.48632812]
[6.53859568 517.93408203]
[15.63710213 506.00048828]
[25.56376266 494.74639893]
[36.26799393 484.22915649]
[47.69524765 474.50231934]
[59.78728867 465.61547852]
[72.48250580 457.61395264]
[85.71620178 450.53845215]
[99.42094421 444.42507935]
[113.52689362 439.30496216]
[127.96216583 435.20422363]
[142.65321350 432.14373779]
[140.64920044 417.27819824]
[138.64517212 402.41265869]
[136.64115906 387.54714966]
[134.63714600 372.68161011]
[120.83952332 363.06579590]
[118.21389008 346.11230469]
[128.86767578 332.23727417]
[126.64255524 317.40322876]
[124.41744232 302.56918335]
[122.19232178 287.73513794]
[119.96720123 272.90109253]
[116.72718048 269.39236450]
[115.65693665 263.81097412]
[117.90351868 257.59292603]
[116.12104797 242.69920349]
[114.33858490 227.80548096]
[112.55612183 212.91175842]
[110.77365112 198.01805115]
[108.54853821 183.18400574]
[105.77292633 168.44303894]
[102.88764954 153.72314453]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[80.81143188 82.96518707]
[85.74745178 68.91225433]
[82.64334106 54.23694992]
[79.15310669 50.35554504]
[77.65093231 45.96273422]
[77.99869537 41.90143967]
[79.74376678 38.83760452]
[77.29803467 24.03833580]
[73.40507507 18.69451714]
[72.87483215 13.03625965]
[75.00666046 8.76257801]
[73.00264740 -6.10295057]
[70.99863434 -20.96847916]
[68.99462128 -35.83400726]
[66.99060822 -50.69953537]
[64.98659515 -65.56506348]
[62.98257828 -80.43058777]
[59.79069519 -84.56084442]
[58.61940384 -89.05320740]
[59.26827240 -93.07738495]
[61.23638153 -96.00294495]
[59.89814758 -110.94313049]
[58.55991364 -125.88331604]
[57.22167969 -140.82350159]
[55.88344574 -155.76368713]
[54.54521179 -170.70387268]
[39.64323425 -172.98301697]
[25.71998978 -178.76287842]
[13.58495426 -187.70739746]
[3.94364476 -199.29655457]
[-2.64340687 -212.85656738]
[-5.79323769 -227.59909058]
[-5.32272053 -242.66700745]
[-1.25921059 -257.18429565]
[6.16104460 -270.30691528]
[16.50664139 -281.27194214]
[29.17609978 -289.44189453]
[43.43283463 -294.34179688]
[58.44797897 -295.68673706]
[73.34857178 -293.39855957]
[87.26831055 -287.61026001]
[99.39791870 -278.65838623]
[109.03220367 -267.06338501]
[115.61103058 -253.49938965]
[118.75192261 -238.75495911]
[118.27227020 -223.68733215]
[114.19995880 -209.17251587]
[106.77175140 -196.05439758]
[96.41950989 -185.09562683]
[83.74510193 -176.93334961]
[69.48539734 -172.04209900]
[70.82363129 -157.10191345]
[72.16186523 -142.16172791]
[73.50009918 -127.22154999]
[74.83833313 -112.28136444]
[76.17656708 -97.34117889]
[77.84810638 -82.43460846]
[79.85211945 -67.56907654]
[81.85613251 -52.70354843]
[83.86014557 -37.83802032]
[85.86416626 -22.97249222]
[87.86817932 -8.10696411]
[89.87219238 6.75856400]
[92.09730530 21.59260750]
[94.54303741 36.39188004]
[97.31864929 51.13284302]
[100.42275238 65.80814362]
[110.62635803 76.65875244]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[117.60754395 150.83787537]
[120.49281311 165.55776978]
[125.21447754 173.37721252]
[123.30975342 180.51820374]
[126.23078918 183.73092651]
[127.81792450 187.34277344]
[128.10948181 190.88543701]
[127.29194641 193.95109558]
[125.66737366 196.23558044]
[127.44983673 211.12930298]
[129.23229980 226.02301025]
[131.01477051 240.91673279]
[132.79724121 255.81045532]
[134.80125427 270.67596436]
[137.02636719 285.51000977]
[139.25148010 300.34405518]
[141.47659302 315.17810059]
[143.70172119 330.01214600]
[155.38276672 336.71795654]
[160.98709106 348.75131226]
[158.67179871 361.62460327]
[149.50268555 370.67761230]
[151.50669861 385.54312134]
[153.51071167 400.40866089]
[155.51472473 415.27420044]
[157.51873779 430.13970947]
[172.49577332 429.20068359]
[187.50163269 429.33248901]
[202.45985413 430.53445435]
[217.29421997 432.80050659]
[231.92912292 436.11901855]
[246.29000854 440.47314453]
[260.30368042 445.84069824]
[273.89871216 452.19427490]
[287.00585938 459.50152588]
[299.55831909 467.72521973]
[311.49209595 476.82345581]
[322.74642944 486.74987793]
[333.26394653 497.45385742]
[342.99102783 508.88088989]
[351.87814331 520.97271729]
[359.87997437 533.66778564]
[366.95574951 546.90130615]
[373.06945801 560.60589600]
[378.18988037 574.71173096]
[382.29095459 589.14691162]
[385.35180664 603.83789062]
[387.35678101 618.70977783]
[388.29571533 633.68682861]
[388.16378784 648.69268799]
[386.96170044 663.65087891]
[384.69555664 678.48522949]
[381.37689209 693.12011719]
[377.02264404 707.48095703]
[371.65502930 721.49456787]
[365.30133057 735.08959961]
[357.99395752 748.19665527]
[349.77017212 760.74908447]
[340.67184448 772.68280029]
[330.74536133 783.93701172]
[320.04129028 794.45446777]
[308.61419678 804.18145752]
[296.52227783 813.06848145]
[283.82717896 821.07019043]
[270.59359741 828.14587402]
[256.88894653 834.25946045]
[242.78308105 839.37982178]
[228.34786987 843.48077393]
[213.65687561 846.54150391]
[198.78497314 848.54638672]
[183.80792236 849.48516846]
[168.80206299 849.35314941]
[153.84385681 848.15093994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 141]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 133]
[66 131]
[67 130]
[71 129]
[72 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
