%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[85.84812164 831.66333008]
[70.84300995 830.99261475]
[56.04028320 828.44653320]
[41.67340469 824.06524658]
[27.96895981 817.91772461]
[15.14308739 810.10107422]
[3.39807034 800.73852539]
[-7.08085537 789.97766113]
[-16.12842178 777.98834229]
[-23.60193634 764.95953369]
[-29.38353157 751.09674072]
[-33.38202286 736.61865234]
[-35.53434753 721.75354004]
[-35.80656052 706.73596191]
[-34.19437027 691.80261230]
[-30.72319984 677.18914795]
[-25.44779778 663.12591553]
[-18.45136261 649.83483887]
[-9.84424114 637.52545166]
[0.23782247 626.39196777]
[11.63581848 616.60986328]
[24.16998482 608.33355713]
[37.64263916 601.69342041]
[51.84129715 596.79431152]
[66.54203033 593.71343994]
[81.51297760 592.49938965]
[82.18276215 577.51440430]
[82.85254669 562.52935791]
[83.52233124 547.54431152]
[84.19211578 532.55926514]
[84.86190796 517.57421875]
[72.99283600 505.65936279]
[73.42197418 488.50912476]
[86.37202454 476.74835205]
[86.81863403 461.75500488]
[74.77348328 450.01818848]
[74.94723511 432.86346436]
[87.72074890 420.91119385]
[87.94407654 405.91284180]
[88.16740417 390.91452026]
[88.39073181 375.91616821]
[77.86465454 365.44061279]
[77.87748718 350.22698975]
[88.93658447 339.25729370]
[89.15991211 324.25897217]
[89.38323975 309.26062012]
[89.60656738 294.26226807]
[77.59739685 285.49200439]
[73.00092316 271.16244507]
[77.77945709 256.70495605]
[90.29944611 247.72966003]
[82.75249481 234.88859558]
[90.69440460 221.20515442]
[90.91773224 206.20681763]
[91.14105988 191.20848083]
[91.36438751 176.21014404]
[83.81743622 163.36907959]
[91.75933838 149.68563843]
[91.98266602 134.68730164]
[84.43571472 121.84623718]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[92.48928833 33.16320801]
[92.48928833 18.16320801]
[91.70796967 3.18357038]
[90.14744568 -11.73503399]
[88.58692169 -26.65363884]
[86.91538239 -41.56021500]
[85.13291168 -56.45392990]
[83.35044861 -71.34764862]
[81.45716095 -86.22768402]
[79.45314026 -101.09320831]
[69.68799591 -109.51964569]
[68.32489014 -121.94242859]
[75.55239868 -131.64241028]
[73.76992798 -146.53613281]
[71.98746490 -161.42985535]
[70.20500183 -176.32356262]
[68.42253113 -191.21728516]
[60.56916809 -178.43742371]
[47.09969711 -171.83641052]
[32.18778610 -173.45964050]
[20.45404625 -182.80412292]
[15.53431034 -196.97438049]
[18.95301056 -211.57960510]
[29.65082359 -222.09420776]
[44.31291580 -225.26011658]
[58.39608383 -220.09634399]
[67.53659058 -208.20271301]
[67.75991821 -223.20104980]
[67.75991821 -238.20104980]
[67.53659058 -253.19938660]
[67.31326294 -268.19772339]
[67.08993530 -283.19607544]
[63.83310318 -291.73016357]
[66.97660828 -298.41897583]
[66.97660828 -313.41897583]
[53.63547516 -321.02883911]
[45.90050888 -334.29782104]
[45.85236359 -349.65661621]
[53.50399780 -362.97384644]
[66.79715729 -370.66717529]
[82.15605164 -370.66717529]
[95.44921112 -362.97384644]
[103.10084534 -349.65661621]
[103.05270386 -334.29782104]
[95.31773376 -321.02883911]
[81.97660828 -313.41897583]
[81.97660828 -298.41897583]
[82.08827209 -283.41940308]
[82.31159973 -268.42105103]
[82.53492737 -253.42271423]
[82.75825500 -238.42437744]
[85.50045776 -234.51422119]
[85.81543732 -228.83990479]
[82.75825500 -222.97772217]
[82.53492737 -207.97938538]
[83.31624603 -192.99975586]
[85.09871674 -178.10603333]
[86.88117981 -163.21231079]
[88.66365051 -148.31860352]
[90.44611359 -133.42488098]
[101.70609283 -119.96457672]
[94.31867218 -103.09722137]
[96.32268524 -88.23169708]
[100.33163452 -82.02282715]
[98.24416351 -73.13011169]
[100.02663422 -58.23639679]
[101.80909729 -43.34267807]
[105.72516632 -37.07480621]
[103.50552368 -28.21416283]
[105.06604767 -13.29555702]
[106.62657166 1.62304747]
[116.00381470 -10.08452892]
[130.68751526 -13.14869499]
[143.96446228 -6.16855621]
[149.76464844 7.66466236]
[145.43627930 22.02659988]
[132.95823669 30.35117149]
[118.03531647 28.83249474]
[107.48928833 18.16320801]
[107.48928833 33.16320801]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[114.90693665 122.29995728]
[106.98100281 134.91062927]
[106.75767517 149.90896606]
[114.28865814 163.82279968]
[106.36272430 176.43347168]
[106.13939667 191.43180847]
[105.91606903 206.43014526]
[105.69274139 221.42848206]
[113.22371674 235.34231567]
[105.29779053 247.95298767]
[117.54500580 257.29705811]
[121.89096069 271.89041138]
[116.86988068 286.07678223]
[104.60491180 294.48559570]
[104.38158417 309.48394775]
[104.15825653 324.48229980]
[103.93492889 339.48062134]
[114.66251373 350.77471924]
[114.22237396 365.98199463]
[103.38906860 376.13949585]
[103.16574097 391.13784790]
[102.94241333 406.13616943]
[102.71908569 421.13452148]
[113.15045166 429.65515137]
[116.71775818 442.44125366]
[112.33447266 454.76477051]
[101.81198120 462.20162964]
[101.36537170 477.19497681]
[111.66873169 485.86996460]
[115.04526520 498.70776367]
[110.47898865 510.96466064]
[99.84694672 518.24401855]
[99.17715454 533.22906494]
[98.50737000 548.21411133]
[97.83758545 563.19909668]
[97.16780090 578.18414307]
[96.49801636 593.16918945]
[111.30095673 595.71405029]
[125.66820526 600.09417725]
[139.37316895 606.24047852]
[152.19969177 614.05609131]
[163.94549561 623.41766357]
[174.42533875 634.17761230]
[183.47390747 646.16619873]
[190.94851685 659.19439697]
[196.73127747 673.05664062]
[200.73098755 687.53442383]
[202.88456726 702.39929199]
[203.15805054 717.41693115]
[201.54710388 732.35040283]
[198.07716370 746.96417236]
[192.80294800 761.02783203]
[185.80763245 774.31945801]
[177.20155334 786.62957764]
[167.12042236 797.76397705]
[155.72325134 807.54699707]
[143.18978882 815.82440186]
[129.71768188 822.46563721]
[115.51943970 827.36590576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[34 179]
[35 178]
[38 174]
[39 173]
[40 172]
[41 171]
[44 168]
[45 167]
[46 166]
[47 165]
[51 161]
[53 159]
[54 158]
[55 157]
[56 156]
[58 154]
[59 153]
[61 151]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 136]
[69 135]
[70 134]
[71 132]
[72 131]
[73 130]
[74 128]
[75 127]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[92 120]
[93 119]
[94 116]
[95 115]
[96 114]
[97 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
