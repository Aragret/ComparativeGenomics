%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[28.09531975 521.83752441]
[23.11624146 536.09887695]
[14.31984901 548.37896729]
[2.41922665 557.68225098]
[-11.62089539 563.25463867]
[-26.66234779 564.64440918]
[-41.48578644 561.73883057]
[-54.88954163 554.77349854]
[-65.78703308 544.31304932]
[-73.29484558 531.20544434]
[-76.80435944 516.51324463]
[-76.03107452 501.42755127]
[-71.03767395 487.17120361]
[-62.22894669 474.89999390]
[-50.31898499 465.60861206]
[-36.27326965 460.05032349]
[-21.23043060 458.67568970]
[-18.34515762 443.95581055]
[-15.45988464 429.23590088]
[-12.57461166 414.51602173]
[-9.68933964 399.79614258]
[-6.80406666 385.07623291]
[-3.91879416 370.35635376]
[-10.49244022 354.08508301]
[1.72521186 340.30792236]
[4.39100742 325.54669189]
[2.45213675 321.18206787]
[3.23450398 315.55313110]
[7.36219501 310.38848877]
[10.46630478 295.71319580]
[5.53028059 281.66024780]
[15.95591259 269.75997925]
[19.06002235 255.08467102]
[22.16413307 240.40936279]
[25.26824188 225.73405457]
[15.75315285 237.32987976]
[3.27609110 245.65591431]
[-11.08355236 249.99189758]
[-26.08352280 249.96269226]
[-40.42617798 245.57084656]
[-52.87072754 237.19628906]
[-62.34059906 225.56350708]
[-68.01654816 211.67886353]
[-69.40755463 196.74349976]
[-66.39328003 182.04946899]
[-59.23448944 168.86798096]
[-48.55049133 158.33935547]
[-35.26555634 151.37440491]
[-20.52896118 148.57568359]
[-5.61557484 150.18531799]
[8.18444920 156.06402588]
[19.67726898 165.70327759]
[27.86864281 178.26916504]
[32.04993057 192.67460632]
[31.85997772 207.66992188]
[32.24417496 200.28926086]
[39.14217758 194.30133057]
[46.41540527 181.18263245]
[53.68863678 168.06393433]
[60.96186447 154.94523621]
[68.23509216 141.82655334]
[57.74095154 131.18721008]
[50.66805267 118.02299500]
[47.58901215 103.39965057]
[48.75310516 88.50108337]
[54.06608963 74.53344727]
[63.09783173 62.62756348]
[75.11712646 53.74730301]
[89.15091705 48.61161041]
[104.06303406 47.63626099]
[118.64620972 50.90022278]
[125.91944122 37.78152847]
[125.84400940 21.96050262]
[138.78211975 14.58116817]
[146.05534363 1.46247399]
[153.32858276 -11.65622044]
[160.60180664 -24.77491379]
[167.58026123 -38.05276108]
[174.26045227 -51.48313522]
[180.94064331 -64.91351318]
[180.15884399 -80.71539307]
[192.75454712 -88.66508484]
[189.39765930 -101.11875916]
[195.23809814 -112.16742706]
[206.66270447 -116.14294434]
[213.54211426 -129.47236633]
[220.42153931 -142.80180359]
[221.57643127 -151.86293030]
[227.50389099 -156.27734375]
[234.58099365 -169.50286865]
[231.59637451 -182.05096436]
[237.76318359 -192.92085266]
[249.30110168 -196.55444336]
[256.57434082 -209.67314148]
[263.84756470 -222.79183960]
[271.12078857 -235.91053772]
[278.39401245 -249.02922058]
[266.23199463 -257.84072876]
[255.22079468 -268.05398560]
[245.52098083 -279.52005005]
[237.27400208 -292.07174683]
[230.60012817 -305.52600098]
[225.59667969 -319.68661499]
[222.33663940 -334.34707642]
[220.86753845 -349.29360962]
[221.21078491 -364.30825806]
[223.36140442 -379.17205811]
[227.28800964 -393.66824341]
[232.93333435 -407.58538818]
[240.21508789 -420.72061157]
[249.02703857 -432.88229370]
[259.24072266 -443.89312744]
[270.70715332 -453.59249878]
[283.25912476 -461.83901978]
[296.71362305 -468.51239014]
[310.87445068 -473.51528931]
[325.53503418 -476.77478027]
[340.48162842 -478.24334717]
[355.49624634 -477.89953613]
[370.35995483 -475.74835205]
[384.85598755 -471.82119751]
[398.77294922 -466.17535400]
[411.90789795 -458.89312744]
[424.06924438 -450.08071899]
[435.07968140 -439.86663818]
[444.77865601 -428.39984131]
[453.02468872 -415.84753418]
[459.69757080 -402.39279175]
[464.69995117 -388.23178101]
[467.95889282 -373.57107544]
[469.42687988 -358.62442017]
[469.08248901 -343.60980225]
[466.93078613 -328.74618530]
[463.00308228 -314.25030518]
[457.35671997 -300.33355713]
[450.07397461 -287.19888306]
[441.26110840 -275.03787231]
[431.04663086 -264.02780151]
[419.57946777 -254.32926941]
[407.02685547 -246.08369446]
[393.57186890 -239.41133118]
[379.41067505 -234.40948486]
[364.74984741 -231.15107727]
[349.80313110 -229.68365479]
[334.78854370 -230.02859497]
[319.92498779 -232.18087769]
[305.42926025 -236.10910034]
[291.51272583 -241.75599670]
[284.23950195 -228.63729858]
[276.96624756 -215.51861572]
[269.69302368 -202.39991760]
[262.41979980 -189.28121948]
[263.66967773 -171.77679443]
[247.80651855 -162.42576599]
[240.72941589 -149.20024109]
[233.75096130 -135.92239380]
[226.87155151 -122.59295654]
[219.99214172 -109.26353455]
[221.76263428 -91.80408478]
[206.18492126 -81.98488617]
[207.44453430 -67.14363861]
[194.37103271 -58.23331833]
[187.69082642 -44.80294037]
[181.01063538 -31.37256622]
[181.77996826 -27.93156815]
[180.92085266 -23.94697762]
[178.19593811 -20.18823624]
[173.72050476 -17.50168419]
[166.44726562 -4.38299036]
[159.17404175 8.73570347]
[151.90081787 21.85439682]
[152.49647522 36.73708725]
[139.03813171 45.05475998]
[131.76490784 58.17345428]
[142.25904846 68.81278992]
[149.33193970 81.97700500]
[152.41098022 96.60034943]
[151.24688721 111.49891663]
[145.93391418 125.46655273]
[136.90217590 137.37243652]
[124.88287354 146.25270081]
[110.84908295 151.38839722]
[95.93696594 152.36373901]
[81.35379028 149.09977722]
[74.08055878 162.21847534]
[66.80732727 175.33715820]
[59.53409958 188.45585632]
[52.26087189 201.57455444]
[45.08550644 214.74702454]
[39.94354630 228.83816528]
[36.83943558 243.51347351]
[33.73532486 258.18878174]
[30.63121414 272.86407471]
[35.34521103 287.96667480]
[25.14160728 298.81729126]
[22.03749657 313.49258423]
[19.15222549 328.21249390]
[16.48642921 342.97369385]
[23.18614197 353.99536133]
[20.66190529 366.23510742]
[10.80109692 373.24160767]
[7.91582441 387.96151733]
[5.03055191 402.68139648]
[2.14527941 417.40130615]
[-0.73999327 432.12118530]
[-3.62526584 446.84106445]
[-6.51053858 461.56097412]
[6.90020847 468.51284790]
[17.80820274 478.96237183]
[25.32918167 492.06240845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[25 198]
[26 197]
[29 196]
[30 195]
[32 193]
[33 192]
[34 191]
[35 190]
[55 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 184]
[71 174]
[72 173]
[74 171]
[75 170]
[76 169]
[77 168]
[78 164]
[79 163]
[80 162]
[82 160]
[85 158]
[86 157]
[87 156]
[89 155]
[90 154]
[93 152]
[94 151]
[95 150]
[96 149]
[97 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
