%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[100.52397919 599.61285400]
[85.80226135 596.62042236]
[71.61077881 591.69244385]
[58.20277786 584.91680908]
[45.81755447 576.41448975]
[34.67612839 566.33715820]
[24.97733498 554.86474609]
[16.89426041 542.20190430]
[10.57115650 528.57464600]
[6.12086678 514.22619629]
[3.62281156 499.41256714]
[3.12157154 484.39816284]
[4.62609196 469.45092773]
[8.10952282 454.83761597]
[13.50969887 440.81900024]
[20.73024559 427.64526367]
[29.64230728 415.55151367]
[40.08683395 404.75360107]
[51.87743378 395.44418335]
[64.80368805 387.78942871]
[78.63491058 381.92590332]
[93.12427521 377.95831299]
[108.01319122 375.95742798]
[108.01319122 360.95742798]
[108.01319122 345.95742798]
[108.01319122 330.95742798]
[108.01319122 315.95742798]
[108.01319122 300.95742798]
[108.01319122 285.95742798]
[107.67821503 270.96115112]
[107.00843048 255.97612000]
[106.22711182 240.99649048]
[105.33428955 226.02308655]
[104.44147491 211.04968262]
[103.54866028 196.07627869]
[102.21042633 181.13609314]
[100.42796326 166.24237061]
[98.64549255 151.34864807]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[86.33817291 31.54392242]
[84.99993896 16.60373878]
[83.66170502 1.66355300]
[82.32347107 -13.27663231]
[70.47911072 -23.39339828]
[69.33477783 -38.56393433]
[79.05255890 -49.79337311]
[77.71432495 -64.73355865]
[75.09156799 -68.19406128]
[73.83299255 -71.93311310]
[73.85865784 -75.48765564]
[74.94644165 -78.46814728]
[76.76834869 -80.59859467]
[76.32173920 -95.59194183]
[75.87513733 -110.58528900]
[67.73038483 -124.14897919]
[75.08531189 -137.10096741]
[74.63871002 -152.09432983]
[59.64873123 -152.82554626]
[44.76233292 -154.73060608]
[30.07129860 -157.79779053]
[15.66620255 -162.00816345]
[1.63585639 -167.33578491]
[-11.93323517 -173.74778748]
[-24.95741463 -181.20465088]
[-37.35638046 -189.66040039]
[-49.05368805 -199.06291199]
[-59.97722244 -209.35418701]
[-70.05963135 -220.47080994]
[-79.23875427 -232.34420776]
[-87.45800018 -244.90121460]
[-94.66668701 -258.06436157]
[-100.82037354 -271.75256348]
[-105.88112640 -285.88134766]
[-109.81774139 -300.36364746]
[-112.60593414 -315.11016846]
[-114.22853088 -330.02999878]
[-114.67552948 -345.03115845]
[-113.94415283 -360.02111816]
[-112.03893280 -374.90750122]
[-108.97160339 -389.59851074]
[-104.76107788 -404.00357056]
[-99.43331909 -418.03384399]
[-93.02117920 -431.60287476]
[-85.56417847 -444.62698364]
[-77.10829926 -457.02584839]
[-67.70568085 -468.72308350]
[-57.41428375 -479.64648438]
[-46.29756546 -489.72879028]
[-34.42406464 -498.90780640]
[-21.86698532 -507.12692261]
[-8.70374680 -514.33544922]
[4.98449278 -520.48901367]
[19.11334038 -525.54962158]
[33.59568787 -529.48608398]
[48.34224319 -532.27410889]
[63.26208496 -533.89660645]
[78.26323700 -534.34344482]
[93.25319672 -533.61187744]
[108.13955688 -531.70654297]
[122.83052826 -528.63903809]
[137.23553467 -524.42834473]
[151.26577759 -519.10046387]
[164.83473206 -512.68817139]
[177.85876465 -505.23104858]
[190.25755310 -496.77505493]
[201.95466614 -487.37231445]
[212.87799072 -477.08081055]
[222.96017456 -465.96398926]
[232.13905334 -454.09039307]
[240.35804749 -441.53323364]
[247.56646729 -428.36990356]
[253.71987915 -414.68161011]
[258.78033447 -400.55270386]
[262.71664429 -386.07031250]
[265.50454712 -371.32373047]
[267.12683105 -356.40386963]
[267.57351685 -341.40270996]
[266.84185791 -326.41278076]
[264.93630981 -311.52642822]
[261.86868286 -296.83547974]
[257.65786743 -282.43051147]
[252.32983398 -268.40032959]
[245.91740417 -254.83143616]
[238.46014404 -241.80749512]
[230.00401306 -229.40878296]
[220.60115051 -217.71176147]
[210.30953979 -206.78854370]
[199.19261169 -196.70648193]
[187.31892395 -187.52772522]
[174.76167297 -179.30885315]
[161.59829712 -172.10057068]
[147.90992737 -165.94729614]
[133.78097534 -160.88697815]
[119.29854584 -156.95082092]
[104.55193329 -154.16307068]
[89.63205719 -152.54092407]
[90.07866669 -137.54757690]
[98.19147491 -125.05632019]
[90.86848450 -111.03189850]
[91.31509399 -96.03854370]
[91.76169586 -81.04519653]
[92.65451050 -66.07179260]
[93.99274445 -51.13160706]
[105.55152893 -41.80796814]
[107.12151337 -26.67556000]
[97.26365662 -14.61486626]
[98.60189056 0.32531887]
[99.94012451 15.26550388]
[101.27835846 30.20568848]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[113.53921509 149.56619263]
[115.32167816 164.45989990]
[117.10414124 179.35362244]
[119.82877350 182.73449707]
[121.19812012 186.43441772]
[121.27829742 189.98814392]
[120.27973175 192.99971008]
[118.52206421 195.18345642]
[119.41488647 210.15686035]
[120.30770111 225.13026428]
[121.20051575 240.10366821]
[124.83516693 248.48384094]
[121.99346924 255.30633545]
[122.66325378 270.29138184]
[125.47393036 274.68991089]
[126.23976135 279.26889038]
[125.23445892 283.21911621]
[123.01319122 285.95742798]
[123.01319122 300.95742798]
[123.01319122 315.95742798]
[123.01319122 330.95742798]
[123.01319122 345.95742798]
[123.01319122 360.95742798]
[123.01319122 375.95742798]
[137.90211487 377.95831299]
[152.39146423 381.92590332]
[166.22270203 387.78942871]
[179.14895630 395.44418335]
[190.93954468 404.75360107]
[201.38407898 415.55151367]
[210.29614258 427.64526367]
[217.51669312 440.81900024]
[222.91685486 454.83761597]
[226.40029907 469.45092773]
[227.90481567 484.39816284]
[227.40357971 499.41256714]
[224.90551758 514.22619629]
[220.45523071 528.57464600]
[214.13212585 542.20190430]
[206.04905701 554.86474609]
[196.35025024 566.33715820]
[185.20883179 576.41448975]
[172.82360840 584.91680908]
[159.41560364 591.69244385]
[145.22412109 596.62042236]
[130.50241089 599.61285400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 178]
[31 177]
[32 175]
[33 174]
[34 173]
[35 172]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[54 151]
[55 150]
[60 149]
[61 148]
[62 147]
[64 145]
[65 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
