%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[94.35060120 705.75988770]
[79.53138733 708.15942383]
[64.54833221 709.09484863]
[49.54574585 708.55712891]
[34.66810608 706.55145264]
[20.05869675 703.09722900]
[5.85822153 698.22760010]
[-7.79656029 691.98950195]
[-20.77414131 684.44305420]
[-32.94953918 675.66082764]
[-44.20549393 665.72753906]
[-54.43360138 654.73883057]
[-63.53535461 642.80041504]
[-71.42310333 630.02740479]
[-78.02087402 616.54272461]
[-83.26512909 602.47631836]
[-87.10536194 587.96356201]
[-89.50458527 573.14428711]
[-90.43969727 558.16125488]
[-89.90169525 543.15869141]
[-87.89575195 528.28106689]
[-84.44118500 513.67175293]
[-79.57127380 499.47134399]
[-73.33291626 485.81668091]
[-65.78618622 472.83926392]
[-57.00377655 460.66403198]
[-47.07025909 449.40829468]
[-36.08130264 439.18038940]
[-24.14274406 430.07888794]
[-11.36955738 422.19140625]
[2.11524010 415.59390259]
[16.18177986 410.34991455]
[30.69458771 406.50997925]
[45.51389694 404.11105347]
[60.49698639 403.17623901]
[75.49954987 403.71453857]
[77.50356293 388.84899902]
[79.50758362 373.98348999]
[81.51159668 359.11795044]
[67.27038574 347.01501465]
[63.16843796 328.62744141]
[71.03994751 311.34597778]
[87.86887360 302.22882080]
[89.20710754 287.28863525]
[90.54534149 272.34844971]
[91.88358307 257.40826416]
[93.22181702 242.46809387]
[94.56005096 227.52790833]
[78.99212646 215.68501282]
[73.69953156 196.70423889]
[80.99929810 178.24606323]
[98.08941650 167.86972046]
[98.53602600 152.87637329]
[98.98263550 137.88302612]
[97.53321075 122.95320892]
[94.21095276 108.32575226]
[89.49658203 101.78761292]
[90.94983673 93.45581818]
[87.84572601 78.78050995]
[84.74161530 64.10520935]
[81.63750458 49.42990875]
[78.53339386 34.75460434]
[75.42928314 20.07930183]
[65.00365448 8.17901802]
[69.93968201 -5.87391520]
[66.83557129 -20.54921722]
[63.73146057 -35.22452164]
[60.19178772 -49.80089569]
[56.21969223 -64.26541901]
[52.24759293 -78.72994232]
[48.27549744 -93.19446564]
[44.90598679 -78.57781982]
[37.02899933 -65.81250763]
[25.47581673 -56.24569702]
[11.46567154 -50.88698196]
[-3.52291298 -50.30188751]
[-17.90815544 -54.55216217]
[-30.17194557 -63.18925858]
[-39.02005768 -75.30168915]
[-43.51872635 -89.61119080]
[-43.19320297 -104.60765839]
[-38.07783508 -118.70847321]
[-28.71246147 -130.42555237]
[-16.08543015 -138.52233887]
[-1.52930605 -142.14439392]
[13.41977119 -140.90945435]
[27.18418884 -134.94783020]
[38.31135559 -124.88870239]
[45.62705994 -111.79343414]
[45.40373230 -126.79177094]
[45.18040466 -141.79010010]
[44.73379898 -156.78346252]
[44.06401443 -171.76849365]
[43.39422989 -186.75354004]
[28.76133919 -190.54431152]
[15.89677334 -198.48120117]
[5.94443655 -209.85847473]
[-0.21071373 -223.66447449]
[-2.02136660 -238.67156982]
[0.67348009 -253.54534912]
[7.63420248 -266.96322632]
[18.24185753 -277.73214722]
[31.55322075 -284.89447021]
[46.38465500 -287.81338501]
[61.41735458 -286.22930908]
[75.31462860 -280.28311157]
[86.84073639 -270.50354004]
[94.97078705 -257.76016235]
[98.98186493 -243.18611145]
[98.51729584 -228.07731628]
[93.61840057 -213.77723694]
[84.72077942 -201.55741882]
[72.61560822 -192.50445557]
[58.37926865 -187.42332458]
[59.04905319 -172.43827820]
[59.71883774 -157.45324707]
[62.57624817 -153.62646484]
[63.06002808 -147.96403503]
[60.17874146 -142.01342773]
[60.40206909 -127.01509857]
[60.62539673 -112.01676178]
[62.74002075 -97.16656494]
[66.71212006 -82.70204163]
[70.68421173 -68.23751831]
[74.65631104 -53.77299118]
[77.02310944 -52.27085495]
[78.93749237 -49.74068832]
[80.00492859 -46.35011673]
[79.89878082 -42.40635300]
[78.40676117 -38.32862854]
[81.51087189 -23.65332794]
[84.61498260 -8.97802544]
[94.81858826 1.87258375]
[90.10459137 16.97519302]
[93.20870209 31.65049553]
[96.31281281 46.32579803]
[99.41691589 61.00109863]
[102.52102661 75.67639923]
[105.62513733 90.35170746]
[108.83841705 105.00349426]
[112.16067505 119.63095093]
[116.17948914 105.17933655]
[124.61862183 92.77848816]
[136.58746338 83.73709106]
[150.82290649 79.00930786]
[165.82267761 79.09407806]
[180.00378418 83.98244476]
[191.86967468 93.15853119]
[200.16810608 105.65396881]
[204.02334595 120.15007782]
[203.02851868 135.11705017]
[197.28862000 148.97538757]
[187.40939331 160.26258850]
[174.43341064 167.78749084]
[159.73007202 170.75595093]
[144.85104370 168.85473633]
[131.36656189 162.28445435]
[120.69965363 151.73849487]
[113.97598267 138.32962036]
[113.52937317 153.32298279]
[113.08277130 168.31632996]
[122.63449097 172.93426514]
[130.07885742 180.43977356]
[134.58580017 189.95985413]
[135.66484070 200.39901733]
[133.21835327 210.56536865]
[127.54978180 219.30659485]
[119.32627106 225.64068604]
[109.50023651 228.86613464]
[108.16199493 243.80632019]
[106.82376099 258.74652100]
[105.48552704 273.68670654]
[104.14729309 288.62689209]
[102.80905914 303.56707764]
[112.62496185 309.48840332]
[119.49131775 318.60397339]
[122.44674683 329.57382202]
[121.10123444 340.80319214]
[115.68720245 350.67431641]
[107.02037048 357.77951050]
[96.37712097 361.12197876]
[94.37310791 375.98748779]
[92.36909485 390.85302734]
[90.36508179 405.71853638]
[104.97462463 409.17224121]
[119.17530060 414.04129028]
[132.83032227 420.27883911]
[145.80821228 427.82479858]
[157.98396301 436.60647583]
[169.24031067 446.53930664]
[179.46885681 457.52764893]
[188.57109070 469.46566772]
[196.45935059 482.23837280]
[203.05766296 495.72277832]
[208.30247498 509.78900146]
[212.14329529 524.30157471]
[214.54310608 539.12072754]
[215.47882080 554.10375977]
[214.94140625 569.10638428]
[212.93606567 583.98406982]
[209.48208618 598.59350586]
[204.61274719 612.79412842]
[198.37492371 626.44903564]
[190.82872009 639.42675781]
[182.04679871 651.60229492]
[172.11372375 662.85845947]
[161.12518311 673.08679199]
[149.18698120 682.18878174]
[136.41412354 690.07678223]
[122.92958069 696.67480469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 184]
[37 183]
[38 182]
[39 181]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[52 161]
[53 160]
[54 159]
[55 141]
[56 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[65 132]
[66 131]
[67 130]
[68 125]
[69 124]
[70 123]
[71 122]
[89 121]
[90 120]
[91 119]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
