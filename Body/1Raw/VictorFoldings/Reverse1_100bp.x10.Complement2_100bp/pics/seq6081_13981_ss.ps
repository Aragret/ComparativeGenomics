%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[179.99732971 697.14355469]
[168.40649414 687.61511230]
[157.41210938 677.40423584]
[147.05430603 666.54821777]
[137.37088013 655.08654785]
[128.39715576 643.06115723]
[120.16587067 630.51586914]
[112.70708466 617.49645996]
[106.04799652 604.05047607]
[100.21290588 590.22692871]
[95.22311401 576.07629395]
[91.09681702 561.65020752]
[87.84907532 547.00134277]
[85.49174500 532.18304443]
[84.03341675 517.24951172]
[83.47942352 502.25512695]
[83.83177948 487.25466919]
[85.08919525 472.30282593]
[87.24709320 457.45422363]
[90.29759979 442.76296997]
[94.22956848 428.28271484]
[99.02867126 414.06628418]
[104.67738342 400.16555786]
[111.15509796 386.63125610]
[118.43817139 373.51275635]
[126.50004578 360.85794067]
[135.31127930 348.71298218]
[144.83975220 337.12219238]
[155.05065918 326.12783813]
[165.90676880 315.77008057]
[177.36845398 306.08673096]
[189.39390564 297.11303711]
[181.16510010 284.57165527]
[172.93629456 272.03024292]
[164.70748901 259.48883057]
[156.47866821 246.94744873]
[148.24986267 234.40605164]
[140.02105713 221.86463928]
[131.79225159 209.32324219]
[132.73654175 224.29348755]
[128.27873230 238.61578369]
[119.00531006 250.40576172]
[106.13636017 258.11227417]
[91.36502075 260.72137451]
[76.63470459 257.88980103]
[63.88344193 249.99008179]
[54.78888321 238.06158447]
[50.54757309 223.67370605]
[51.71752548 208.71940613]
[58.14481735 195.16616821]
[68.98382568 184.79718018]
[82.80849457 178.97665405]
[97.79994965 178.47036743]
[111.98580170 183.34495544]
[123.50119019 192.96087646]
[118.25447083 178.90841675]
[113.00775146 164.85594177]
[107.76103210 150.80346680]
[99.25444794 163.15814209]
[84.30290222 164.36274719]
[73.92810822 153.52929688]
[75.77798462 138.64381409]
[88.48886871 130.67930603]
[102.68959045 135.50576782]
[98.50257874 121.10198975]
[94.31556702 106.69820404]
[91.77851105 105.00917053]
[89.79994965 102.35967255]
[88.73680878 98.95479584]
[88.86525726 95.12860870]
[90.33558655 91.31139374]
[87.01332855 76.68393707]
[83.69107056 62.05647659]
[73.08941650 50.31273270]
[77.81566620 36.18786621]
[74.49340820 21.56040764]
[71.17115021 6.93294716]
[67.84888458 -7.69451332]
[64.52662659 -22.32197380]
[59.95826721 -8.03456306]
[50.32889175 3.46653056]
[37.06696701 10.47518921]
[22.13981438 11.95172024]
[7.76179266 7.67708969]
[-3.93420625 -1.71458805]
[-11.21315002 -14.83011246]
[-12.99525070 -29.72387314]
[-9.01614380 -44.18647003]
[0.13389382 -56.07246399]
[13.09750843 -63.61863327]
[27.95162392 -65.70555878]
[42.49272156 -62.02364349]
[54.56371689 -53.11909103]
[62.37328339 -40.31462097]
[62.14995575 -55.31296158]
[61.92662811 -70.31129456]
[58.66979980 -78.84539795]
[61.81330109 -85.53421021]
[61.81330109 -100.53421021]
[61.81330109 -115.53421021]
[48.47217178 -123.14406586]
[40.73720169 -136.41304016]
[40.68906021 -151.77186584]
[48.34069443 -165.08906555]
[61.63385391 -172.78240967]
[76.99274445 -172.78240967]
[90.28590393 -165.08906555]
[97.93753815 -151.77186584]
[97.88939667 -136.41304016]
[90.15442657 -123.14406586]
[76.81330109 -115.53421021]
[76.81330109 -100.53421021]
[76.81330109 -85.53421021]
[76.92496490 -70.53462219]
[77.14829254 -55.53628922]
[77.37162018 -40.53794861]
[79.15409088 -25.64423370]
[82.47634888 -11.01677227]
[85.79860687 3.61068749]
[89.12086487 18.23814774]
[92.44312286 32.86560822]
[102.80715179 43.56309891]
[98.31852722 58.73421860]
[101.64079285 73.36167908]
[104.96305084 87.98913574]
[108.71935272 102.51119995]
[112.90635681 116.91497803]
[117.09336853 131.31875610]
[121.81350708 145.55674744]
[127.06022644 159.60922241]
[132.30694580 173.66169739]
[137.55366516 187.71415710]
[144.33364868 201.09443665]
[152.56245422 213.63583374]
[160.79127502 226.17723083]
[169.02008057 238.71864319]
[177.24888611 251.26004028]
[185.47769165 263.80145264]
[193.70649719 276.34283447]
[201.93530273 288.88424683]
[214.95458984 281.42526245]
[228.40049744 274.76599121]
[242.22393799 268.93072510]
[256.37448120 263.94073486]
[270.80050659 259.81420898]
[285.44937134 256.56628418]
[300.26760864 254.20874023]
[315.20117188 252.75021362]
[330.19552612 252.19599915]
[345.19598389 252.54815674]
[360.14782715 253.80535889]
[374.99649048 255.96305847]
[389.68777466 259.01336670]
[404.16809082 262.94512939]
[418.38458252 267.74401855]
[432.28536987 273.39254761]
[445.81976318 279.87005615]
[458.93838501 287.15295410]
[471.59329224 295.21466064]
[483.73840332 304.02572632]
[495.32931519 313.55401611]
[506.32379150 323.76480103]
[516.68170166 334.62075806]
[526.36523438 346.08230591]
[535.33905029 358.10763550]
[543.57049561 370.65283203]
[551.02935791 383.67218018]
[557.68859863 397.11810303]
[563.52380371 410.94155884]
[568.51373291 425.09216309]
[572.64013672 439.51818848]
[575.88806152 454.16705322]
[578.24548340 468.98532104]
[579.70397949 483.91885376]
[580.25811768 498.91323853]
[579.90588379 513.91369629]
[578.64862061 528.86553955]
[576.49084473 543.71417236]
[573.44049072 558.40545654]
[569.50866699 572.88574219]
[564.70965576 587.10223389]
[559.06109619 601.00299072]
[552.58349609 614.53735352]
[545.30053711 627.65594482]
[537.23876953 640.31079102]
[528.42767334 652.45587158]
[518.89929199 664.04675293]
[508.68850708 675.04119873]
[497.83248901 685.39904785]
[486.37088013 695.08251953]
[474.34552002 704.05627441]
[461.80026245 712.28765869]
[448.78091431 719.74645996]
[435.33496094 726.40563965]
[421.51144409 732.24078369]
[407.36087036 737.23065186]
[392.93478394 741.35699463]
[378.28591919 744.60479736]
[363.46765137 746.96221924]
[348.53408813 748.42059326]
[333.53970337 748.97467041]
[318.53924561 748.62237549]
[303.58743286 747.36505127]
[288.73880005 745.20721436]
[274.04751587 742.15679932]
[259.56726074 738.22485352]
[245.35081482 733.42584229]
[231.45005798 727.77716064]
[217.91572571 721.29956055]
[204.79719543 714.01654053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[55 132]
[56 131]
[57 130]
[58 129]
[64 128]
[65 127]
[66 126]
[71 125]
[72 124]
[73 123]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[94 116]
[95 115]
[96 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
