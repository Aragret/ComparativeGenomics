%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[33.95488739 694.24731445]
[23.73834419 705.28332520]
[11.76051617 714.37744141]
[-1.61460304 721.25323486]
[-15.98055935 725.70190430]
[-30.90078735 727.58813477]
[-45.92187500 726.85467529]
[-60.58735657 723.52380371]
[-74.45155334 717.69671631]
[-87.09316254 709.55047607]
[-98.12800598 699.33270264]
[-107.22074890 687.35382080]
[-114.09508514 673.97790527]
[-118.54209900 659.61145020]
[-120.42665100 644.69104004]
[-119.69148254 629.66998291]
[-116.35892487 615.00488281]
[-110.53025055 601.14135742]
[-102.38259125 588.50067139]
[-92.16354370 577.46697998]
[-80.18365479 568.37561035]
[-66.80697632 561.50280762]
[-52.44001007 557.05743408]
[-37.51935577 555.17456055]
[-22.49843407 555.91143799]
[-19.17617416 541.28393555]
[-15.85391426 526.65649414]
[-12.53165531 512.02905273]
[-9.20939541 497.40158081]
[-5.88713598 482.77410889]
[-2.56487656 468.14666748]
[-7.29112673 454.02178955]
[3.31052709 442.27804565]
[6.63278675 427.65060425]
[9.95504570 413.02313232]
[13.27730560 398.39566040]
[5.14690447 385.96859741]
[8.30777454 371.08694458]
[21.39755821 362.64328003]
[24.71981812 348.01583862]
[14.57941246 340.47988892]
[8.01819611 329.62857056]
[6.04112625 317.05563354]
[8.97681713 304.62335205]
[16.42354012 294.18682861]
[27.30379486 287.31695557]
[40.02010727 285.06417847]
[43.77640915 270.54214478]
[47.53270721 256.02008057]
[46.16438293 248.75718689]
[51.45454788 241.31057739]
[55.42664719 226.84605408]
[54.15893173 224.34585571]
[53.80519867 221.19284058]
[54.61905289 217.73263550]
[56.72441864 214.39616394]
[60.08971024 211.65231323]
[64.91571045 197.44985962]
[69.74170685 183.24740601]
[74.56770325 169.04493713]
[79.39369965 154.84248352]
[84.11383820 140.60449219]
[88.72784424 126.33176422]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[97.89102173 27.43866348]
[99.00666809 12.48021030]
[100.12232208 -2.47824311]
[100.90364075 -17.45788002]
[101.35025024 -32.45122910]
[101.79685211 -47.44458008]
[102.13182831 -62.44083786]
[102.24349976 -77.44042206]
[102.24349976 -92.44042206]
[102.24349976 -107.44042206]
[102.24349976 -122.44042206]
[102.24349976 -137.44042969]
[102.24349976 -152.44042969]
[102.13182831 -167.44000244]
[101.90850067 -182.43833923]
[98.65167236 -190.97244263]
[101.79517365 -197.66125488]
[101.79517365 -212.66125488]
[94.05786896 -226.46142578]
[101.79517365 -239.18870544]
[101.46019745 -254.18496704]
[100.79041290 -269.17001343]
[100.12062836 -284.15502930]
[99.45084381 -299.14007568]
[98.78105927 -314.12512207]
[98.11127472 -329.11016846]
[97.44148254 -344.09518433]
[83.04859924 -348.91281128]
[71.37045288 -358.60739136]
[63.98641586 -371.86788940]
[61.89511871 -386.90087891]
[65.37939453 -401.67330933]
[73.96802521 -414.18728638]
[86.49945831 -422.75042725]
[101.27893066 -426.20465088]
[116.30764008 -424.08276367]
[129.55307007 -416.67175293]
[139.22389221 -404.97390747]
[144.01220703 -390.57125854]
[143.27043152 -375.41162109]
[137.09887695 -361.54525757]
[126.33220673 -350.84744263]
[112.42652130 -344.76498413]
[113.09631348 -329.77993774]
[113.76609802 -314.79489136]
[114.43588257 -299.80987549]
[115.10566711 -284.82482910]
[115.77545166 -269.83978271]
[116.44523621 -254.85475159]
[118.78656006 -252.21835327]
[119.96724701 -248.31694031]
[119.40663910 -243.70835876]
[116.79517365 -239.18870544]
[124.53247070 -226.46142578]
[116.79517365 -212.66125488]
[116.79517365 -197.66125488]
[116.90683746 -182.66166687]
[117.13016510 -167.66333008]
[120.37290955 -161.02206421]
[117.24349976 -152.44042969]
[117.24349976 -137.44042969]
[117.24349976 -122.44042206]
[117.24349976 -107.44042206]
[117.24349976 -92.44042206]
[117.24349976 -77.44042206]
[120.38700104 -70.75160980]
[117.13016510 -62.21751022]
[120.17373657 -55.48263931]
[116.79020691 -46.99797440]
[116.34359741 -32.00462341]
[115.89699554 -17.01127434]
[118.03574371 -14.20804882]
[118.92298889 -10.22962570]
[118.02116394 -5.67550564]
[115.08077240 -1.36259449]
[113.96512604 13.59585857]
[112.84947968 28.55431175]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[114.78582001 100.17658234]
[126.75579071 91.13668060]
[141.07525635 86.66980743]
[156.06198120 87.30072784]
[169.95533752 92.95533752]
[181.12315369 102.96931458]
[188.25344849 116.16624451]
[190.50856018 130.99575806]
[187.62355042 145.71569824]
[179.93734741 158.59678650]
[168.35293579 168.12576294]
[154.23123169 173.18316650]
[139.23123169 173.17486572]
[125.11512756 168.10183716]
[113.54126740 158.56005859]
[105.86933136 145.67047119]
[103.00057983 130.94577026]
[98.38657379 145.21850586]
[98.72453308 154.34667969]
[93.59616089 159.66848755]
[88.77015686 173.87094116]
[83.94416046 188.07339478]
[79.11816406 202.27584839]
[74.29216766 216.47830200]
[69.89116669 230.81816101]
[65.91907501 245.28268433]
[62.05476761 259.77636719]
[58.29846573 274.29843140]
[54.54216766 288.82049561]
[67.36122894 300.84149170]
[72.30105591 317.61376953]
[68.08731842 334.49121094]
[55.96837616 346.84616089]
[39.34727859 351.33810425]
[36.02502060 365.96554565]
[44.18318558 379.23513794]
[40.60556793 394.02215576]
[27.90476608 401.71792603]
[24.58250618 416.34539795]
[21.26024628 430.97283936]
[17.93798637 445.60031128]
[22.42660713 460.77142334]
[12.06258392 471.46893311]
[8.74032402 486.09637451]
[5.41806459 500.72384644]
[2.09580517 515.35131836]
[-1.22645438 529.97875977]
[-4.54871368 544.60620117]
[-7.87097359 559.23370361]
[5.99454784 565.05761719]
[18.63799858 573.20098877]
[29.67515945 583.41625977]
[38.77062225 595.39306641]
[45.64799118 608.76739502]
[50.09826279 623.13287354]
[51.98620224 638.05291748]
[51.25443649 653.07403564]
[47.92520523 667.73992920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[33 193]
[34 192]
[35 191]
[36 190]
[39 187]
[40 186]
[47 181]
[48 180]
[49 179]
[51 178]
[52 177]
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 170]
[63 169]
[64 152]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 140]
[74 139]
[75 138]
[76 136]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 127]
[84 126]
[86 125]
[87 124]
[89 122]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
