%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[18.63418770 517.00317383]
[20.01838303 532.06768799]
[16.67766953 546.82214355]
[8.93933105 559.82116699]
[-2.43850470 569.79107666]
[-16.34115601 575.75524902]
[-31.40657997 577.12939453]
[-46.15882111 573.77880859]
[-59.15260696 566.03173828]
[-69.11493683 554.64721680]
[-75.06980896 540.74060059]
[-76.43381500 525.67425537]
[-73.07332611 510.92422485]
[-65.31757355 497.93563843]
[-53.92639160 487.98095703]
[-40.01575851 482.03540039]
[-24.94850540 480.68148804]
[-21.62624741 466.05401611]
[-18.30398750 451.42657471]
[-14.98172760 436.79910278]
[-19.70797729 422.67425537]
[-9.10632420 410.93051147]
[-5.78406429 396.30303955]
[-17.91459274 405.12631226]
[-32.91408539 405.24969482]
[-45.18810272 396.62713623]
[-50.15873718 382.47463989]
[-45.97206879 368.07077026]
[-34.18962097 358.78778076]
[-19.20595169 358.08801270]
[-6.60960293 366.23245239]
[-1.09862268 380.18460083]
[3.93829370 366.05557251]
[8.97521019 351.92654419]
[14.01212597 337.79751587]
[19.04904175 323.66848755]
[17.87625885 320.34329224]
[18.25580025 316.28485107]
[20.51475143 312.22891235]
[24.63923073 309.02960205]
[30.30201721 295.13955688]
[35.96480560 281.24954224]
[35.57907104 273.86895752]
[41.81668854 267.19586182]
[47.68564987 253.39169312]
[53.55460739 239.58752441]
[59.42356873 225.78334045]
[65.29253387 211.97917175]
[71.16149139 198.17498779]
[77.03044891 184.37081909]
[82.89941406 170.56663513]
[88.76837158 156.76246643]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[92.12452698 57.70821381]
[90.34206390 42.81449890]
[88.55960083 27.92078018]
[86.33448029 13.08673668]
[83.66868591 -1.67448092]
[81.00289154 -16.43569756]
[78.33709717 -31.19691467]
[63.78571701 -40.90653610]
[60.81723785 -57.80337143]
[70.78752136 -71.34708405]
[67.90225220 -86.06697083]
[65.01697540 -100.78686523]
[62.13170624 -115.50675964]
[59.24643326 -130.22665405]
[47.27760315 -136.40415955]
[41.14155197 -148.17527771]
[42.87971878 -161.13911438]
[51.63544846 -170.59251404]
[48.96965408 -185.35372925]
[46.30385590 -200.11494446]
[43.63806152 -214.87615967]
[33.50639725 -222.85815430]
[31.58993912 -235.20768738]
[38.37710953 -245.22071838]
[35.93138504 -260.01998901]
[33.48565674 -274.81924438]
[31.03992844 -289.61853027]
[21.15607071 -301.97247314]
[26.71467018 -315.79098511]
[24.26894188 -330.59027100]
[21.82321358 -345.38952637]
[6.81570864 -347.02578735]
[-7.19339180 -352.65142822]
[-19.16451836 -361.84893799]
[-28.20933342 -373.93588257]
[-33.65665054 -388.01528931]
[-35.10224533 -403.04235840]
[-32.43884277 -417.90197754]
[-25.86408806 -431.49151611]
[-15.86586857 -442.80249023]
[-3.18611932 -450.99557495]
[11.23423767 -455.46276855]
[26.32511711 -455.87258911]
[40.96667480 -452.19464111]
[54.07240677 -444.70181274]
[64.66978455 -433.95016479]
[71.97241211 -420.73751831]
[75.43839264 -406.04431152]
[74.81050873 -390.96093750]
[70.13536835 -376.60665894]
[61.75989914 -364.04663086]
[50.30561066 -354.21292114]
[36.62248611 -347.83526611]
[39.06821442 -333.03598022]
[41.51393890 -318.23672485]
[51.22286224 -306.94131470]
[45.83919907 -292.06427002]
[48.28492737 -277.26498413]
[50.73065567 -262.46572876]
[53.17638397 -247.66644287]
[65.02616119 -234.72235107]
[58.39928055 -217.54196167]
[61.06507492 -202.78073120]
[63.73086929 -188.01951599]
[66.39666748 -173.25830078]
[80.60990906 -164.26817322]
[83.98992920 -147.44882202]
[73.96632385 -133.11192322]
[76.85160065 -118.39202881]
[79.73686981 -103.67213440]
[82.62214661 -88.95224762]
[85.50741577 -74.23235321]
[97.10166168 -68.61070251]
[103.43561554 -57.16679382]
[102.00081635 -43.97013474]
[93.09831238 -33.86270905]
[95.76410675 -19.10149384]
[98.42990112 -4.34027624]
[101.09569550 10.42094040]
[103.31903839 12.12824345]
[105.00006104 14.81911182]
[105.76074982 18.29139519]
[105.30318451 22.20996094]
[103.45331573 26.13831329]
[105.23577881 41.03203201]
[107.01824951 55.92574692]
[114.87161255 43.14589691]
[128.34107971 36.54487991]
[143.25299072 38.16810226]
[154.98672485 47.51258850]
[159.90646362 61.68284607]
[156.48776245 76.28807068]
[145.78994751 86.80266571]
[131.12786865 89.96858215]
[117.04469299 84.80481720]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[113.69957733 128.95503235]
[123.29376984 117.42457581]
[135.18527222 108.28170776]
[148.79388428 101.97252655]
[163.45559692 98.80487823]
[178.45504761 98.93331909]
[193.06037903 102.35157776]
[206.55894470 108.89286804]
[218.29214478 118.23803711]
[227.68748474 129.93110657]
[234.28652954 143.40153503]
[237.76730347 157.99208069]
[237.95997620 172.99084473]
[234.85514832 187.66600037]
[228.60432434 201.30149841]
[219.51246643 213.23205566]
[208.02319336 222.87554932]
[194.69711304 229.76144409]
[180.18441772 233.55375671]
[165.19322205 234.06745911]
[150.45497131 231.27749634]
[136.68878174 225.31997681]
[124.56632996 216.48559570]
[114.67910767 205.20539856]
[107.50952911 192.02976990]
[103.40740967 177.60157776]
[102.57254791 162.63142395]
[96.70359039 176.43559265]
[90.83462524 190.23977661]
[84.96566772 204.04394531]
[79.09671021 217.84812927]
[73.22774506 231.65229797]
[67.35878754 245.45648193]
[61.48982620 259.26065063]
[55.62086487 273.06484985]
[49.85483170 286.91232300]
[44.19204330 300.80233765]
[38.52925873 314.69238281]
[33.17807007 328.70538330]
[28.14115524 342.83444214]
[23.10423851 356.96347046]
[18.06732368 371.09249878]
[13.03040695 385.22152710]
[8.84339523 399.62530518]
[5.52113628 414.25274658]
[10.00975609 429.42388916]
[-0.35426745 440.12136841]
[-3.67652702 454.74884033]
[-6.99878645 469.37628174]
[-10.32104588 484.00375366]
[2.68311024 491.73336792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[22 204]
[23 203]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[40 197]
[41 196]
[42 195]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 159]
[54 158]
[55 157]
[57 155]
[58 154]
[59 144]
[60 143]
[61 142]
[62 137]
[63 136]
[64 135]
[65 134]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[76 123]
[77 122]
[78 121]
[79 120]
[82 118]
[83 117]
[84 116]
[85 115]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
