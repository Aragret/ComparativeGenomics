%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[-5.23504353 642.50390625]
[-16.43959999 652.48718262]
[-28.35085106 661.61566162]
[-40.90373993 669.83953857]
[-54.02970505 677.11389160]
[-67.65705872 683.39898682]
[-81.71137238 688.66052246]
[-96.11588287 692.86968994]
[-110.79191589 696.00360107]
[-125.65931702 698.04504395]
[-140.63688660 698.98291016]
[-155.64282227 698.81213379]
[-170.59515381 697.53350830]
[-185.41224670 695.15417480]
[-200.01313782 691.68701172]
[-214.31809998 687.15100098]
[-228.24899292 681.57092285]
[-241.72975159 674.97723389]
[-254.68672180 667.40600586]
[-267.04916382 658.89849854]
[-278.74951172 649.50122070]
[-289.72390747 639.26550293]
[-299.91241455 628.24725342]
[-309.25933838 616.50665283]
[-317.71368408 604.10778809]
[-325.22924805 591.11846924]
[-331.76498413 577.60949707]
[-337.28518677 563.65478516]
[-341.75970459 549.33044434]
[-345.16415405 534.71484375]
[-347.47985840 519.88763428]
[-348.69421387 504.92996216]
[-348.80059814 489.92343140]
[-347.79843140 474.95004272]
[-345.69314575 460.09152222]
[-342.49627686 445.42910767]
[-338.22525024 431.04278564]
[-332.90344238 417.01119995]
[-326.55987549 403.41094971]
[-319.22924805 390.31634521]
[-310.95153809 377.79888916]
[-301.77197266 365.92694092]
[-291.74072266 354.76535034]
[-280.91253662 344.37509155]
[-269.34655762 334.81289673]
[-257.10598755 326.13098145]
[-244.25765991 318.37680054]
[-230.87173462 311.59265137]
[-217.02134705 305.81564331]
[-202.78213501 301.07730103]
[-188.23185730 297.40350342]
[-173.44999695 294.81430054]
[-158.51728821 293.32388306]
[-143.51528931 292.94033813]
[-128.52592468 293.66577148]
[-113.63108063 295.49624634]
[-98.91208649 298.42175293]
[-84.44934845 302.42633057]
[-70.32186127 307.48806763]
[-56.60676956 313.57931519]
[-43.37899399 320.66687012]
[-35.33782196 308.00433350]
[-27.39113808 295.28231812]
[-19.53938103 282.50146484]
[-11.68762684 269.72061157]
[-11.61814594 254.82617188]
[2.19817400 247.11775208]
[10.04992962 234.33689880]
[17.90168571 221.55606079]
[25.75344086 208.77522278]
[33.60519409 195.99436951]
[41.45695114 183.21353149]
[49.30870819 170.43269348]
[57.06509781 157.59375000]
[56.91281509 142.69992065]
[70.61283875 134.78663635]
[78.27342987 121.89031982]
[70.21103668 107.99046326]
[70.23475647 91.92163086]
[78.33815002 78.04563904]
[92.32157898 70.12908173]
[108.38928986 70.32089233]
[115.85703278 57.31193924]
[123.32477570 44.30298615]
[130.79251099 31.29403496]
[138.26025391 18.28508377]
[145.33735657 5.05955553]
[152.01756287 -8.37082100]
[158.69775391 -21.80119705]
[165.37794495 -35.23157120]
[171.14398193 -49.07905960]
[175.96997070 -63.28151321]
[180.69010925 -77.51950073]
[185.30412292 -91.79223633]
[189.91813660 -106.06497192]
[193.89022827 -120.52949524]
[197.21247864 -135.15695190]
[200.53474426 -149.78440857]
[203.85700989 -164.41188049]
[190.22851562 -170.82110596]
[178.29672241 -180.01057434]
[168.61968994 -191.55047607]
[161.65005493 -204.90106201]
[157.71377563 -219.43791199]
[156.99496460 -234.48109436]
[159.52725220 -249.32702637]
[165.19219971 -263.28131104]
[173.72482300 -275.69131470]
[184.72605896 -285.97659302]
[197.68135071 -293.65609741]
[211.98477173 -298.37057495]
[226.96730042 -299.89959717]
[241.92817688 -298.17163086]
[256.16769409 -293.26748657]
[269.01977539 -285.41650391]
[279.88336182 -274.98596191]
[288.25033569 -262.46365356]
[293.72933960 -248.43531799]
[296.06414795 -233.55705261]
[295.14550781 -218.52474976]
[291.01638794 -204.04148865]
[283.86996460 -190.78469849]
[274.04043579 -179.37442017]
[261.98760986 -170.34431458]
[248.27514648 -164.11674500]
[233.54443359 -160.98298645]
[218.48446655 -161.08961487]
[215.16220093 -146.46215820]
[211.83995056 -131.83470154]
[208.51768494 -117.20723724]
[221.75415039 -124.26387024]
[236.14309692 -120.02616882]
[243.44189453 -106.92167664]
[239.46945190 -92.45725250]
[226.50135803 -84.91876221]
[211.96635437 -88.62460327]
[204.19085693 -101.45095825]
[199.57685852 -87.17823029]
[194.96284485 -72.90549469]
[195.89645386 -65.57404327]
[190.17243958 -58.45551682]
[185.34643555 -44.25305939]
[197.94976807 -52.38668823]
[212.94915771 -52.52171707]
[225.69688416 -44.61630630]
[232.24291992 -31.12002945]
[230.55889893 -16.21485901]
[221.16665649 -4.51932430]
[206.97645569 0.34258837]
[192.38528442 -3.13563895]
[181.91439819 -13.87623882]
[178.80831909 -28.55137825]
[172.12812805 -15.12100220]
[165.44793701 -1.69062603]
[158.76773071 11.73974991]
[159.53085327 14.43711662]
[159.27149963 17.59929085]
[157.80726624 20.83833694]
[155.09944153 23.70752144]
[151.26921082 25.75282478]
[143.80146790 38.76177597]
[136.33372498 51.77072906]
[128.86598206 64.77967834]
[121.39824677 77.78863525]
[128.86666870 89.13976288]
[130.73233032 102.59877014]
[126.63310242 115.55337524]
[117.36461639 125.48920441]
[104.72580719 130.47779846]
[91.16976166 129.55091858]
[83.50916290 142.44723511]
[83.11351013 158.26350403]
[69.96142578 165.25434875]
[68.26924896 174.23066711]
[62.08955002 178.28443909]
[54.23779297 191.06529236]
[46.38603973 203.84613037]
[38.53428268 216.62696838]
[30.68252754 229.40782166]
[22.83077240 242.18865967]
[14.97901630 254.96949768]
[14.34792614 270.77810669]
[1.09321606 277.57238770]
[-6.75853920 290.35321045]
[-14.61029530 303.13406372]
[-16.43592834 312.08419800]
[-22.67529678 316.04550171]
[-30.71647072 328.70803833]
[-18.67669487 337.66632080]
[-7.33139706 347.48934937]
[3.25746179 358.12341309]
[13.03204727 369.51043701]
[21.93897247 381.58825684]
[29.92959404 394.29092407]
[36.96026230 407.54901123]
[42.99258804 421.29013062]
[47.99361420 435.43920898]
[51.93603134 449.91900635]
[54.79830933 464.65042114]
[56.56481171 479.55300903]
[57.22589111 494.54534912]
[56.77793503 509.54556274]
[55.22339630 524.47174072]
[52.57075882 539.24230957]
[48.83451080 553.77667236]
[44.03506470 567.99542236]
[38.19862747 581.82092285]
[31.35708046 595.17755127]
[23.54778671 607.99249268]
[14.81339931 620.19567871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 188]
[62 187]
[63 185]
[64 184]
[65 183]
[67 181]
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 173]
[76 171]
[77 170]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 155]
[88 154]
[89 153]
[90 152]
[91 142]
[92 141]
[93 139]
[94 138]
[95 137]
[96 130]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
