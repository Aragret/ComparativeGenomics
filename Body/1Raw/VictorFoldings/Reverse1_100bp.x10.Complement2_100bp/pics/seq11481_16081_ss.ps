%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-52.33089066 619.73370361]
[-55.31093979 634.45697021]
[-60.18731689 648.66528320]
[-66.87658691 662.11547852]
[-75.26428986 674.57751465]
[-85.20689392 685.83801270]
[-96.53427124 695.70440674]
[-109.05259705 704.00781250]
[-122.54766083 710.60614014]
[-136.78855896 715.38653564]
[-151.53158569 718.26715088]
[-166.52449036 719.19873047]
[-181.51072693 718.16528320]
[-196.23384094 715.18450928]
[-210.44190979 710.30749512]
[-223.89181519 703.61755371]
[-236.35342407 695.22924805]
[-247.61347961 685.28613281]
[-257.47933960 673.95831299]
[-265.78213501 661.43957520]
[-272.37985229 647.94421387]
[-277.15954590 633.70306396]
[-280.03945923 618.95989990]
[-280.97030640 603.96691895]
[-279.93615723 588.98077393]
[-276.95471191 574.25781250]
[-272.07696533 560.04992676]
[-265.38641357 546.60034180]
[-256.99752808 534.13916016]
[-247.05386353 522.87957764]
[-235.72555542 513.01428223]
[-223.20643616 504.71203613]
[-209.71073914 498.11499023]
[-195.46939087 493.33596802]
[-180.72608948 490.45675659]
[-165.73309326 489.52661133]
[-150.74696350 490.56149292]
[-136.02412415 493.54364014]
[-121.81652069 498.42202759]
[-115.13632202 484.99166870]
[-108.45613098 471.56127930]
[-113.42439270 457.56658936]
[-106.84104919 443.85110474]
[-92.12842560 438.73480225]
[-85.44822693 425.30444336]
[-78.76803589 411.87405396]
[-72.08783722 398.44369507]
[-79.33544159 387.23144531]
[-80.10255432 373.79434204]
[-74.08203125 361.63610840]
[-62.75059128 353.97991943]
[-49.00813675 352.91421509]
[-42.12872314 339.58477783]
[-35.24931335 326.25537109]
[-28.36989975 312.92593384]
[-21.49048615 299.59649658]
[-29.17390823 290.67187500]
[-33.41040039 279.64678955]
[-33.68194962 267.80429077]
[-29.93341827 256.53091431]
[-22.58173561 247.15455627]
[-12.46964741 240.78785706]
[-0.76916134 238.19628906]
[11.15427685 239.70620728]
[18.62201691 226.69725037]
[26.08975792 213.68830872]
[33.55749893 200.67935181]
[33.18348694 185.78944397]
[46.76417160 177.67306519]
[54.23191452 164.66410828]
[61.69965363 151.65516663]
[57.57317734 137.38954163]
[64.96121216 124.09024048]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[104.71298981 71.59133911]
[107.37878418 56.83012009]
[105.82431793 47.82892990]
[110.19572449 41.86968231]
[113.08099365 27.14978981]
[115.96626282 12.42989922]
[105.57463837 1.05799079]
[103.89138794 -14.07541847]
[111.35373688 -27.14360046]
[124.91787720 -33.23884583]
[127.80315399 -47.95873642]
[130.68843079 -62.67862701]
[133.46403503 -77.41959381]
[136.12983704 -92.18080902]
[138.79562378 -106.94202423]
[133.63406372 -121.89758301]
[143.51007080 -133.04718018]
[146.17587280 -147.80839539]
[148.84167480 -162.56962585]
[151.50746155 -177.33084106]
[154.17326355 -192.09205627]
[149.01168823 -207.04760742]
[158.88771057 -218.19720459]
[145.23483276 -224.62072754]
[133.71032715 -234.35972595]
[125.09993744 -246.75018311]
[119.99074554 -260.94732666]
[118.73110199 -275.98312378]
[121.40689087 -290.83245850]
[127.83567047 -304.48284912]
[137.57911682 -316.00360107]
[149.97291565 -324.60919189]
[164.17201233 -329.71292114]
[179.20831299 -330.96673584]
[194.05661011 -328.28521729]
[207.70451355 -321.85116577]
[219.22149658 -312.10327148]
[227.82231140 -299.70617676]
[232.92054749 -285.50509644]
[234.16857910 -270.46832275]
[231.48132324 -255.62106323]
[225.04200745 -241.97563171]
[215.28965759 -230.46241760]
[202.88923645 -221.86637878]
[188.68618774 -216.77363586]
[173.64892578 -215.53141785]
[179.00117493 -201.63168335]
[168.93447876 -189.42625427]
[166.26867676 -174.66503906]
[163.60289001 -159.90382385]
[160.93708801 -145.14260864]
[158.27128601 -130.38139343]
[163.62353516 -116.48165131]
[153.55683899 -104.27622986]
[150.89105225 -89.51501465]
[148.22525024 -74.75379944]
[150.12997437 -67.61280060]
[145.40830994 -59.79335785]
[142.52304077 -45.07346344]
[139.63777161 -30.35357285]
[149.89712524 -19.58864212]
[151.87377930 -4.67030334]
[144.60192871 8.70780182]
[130.68615723 15.31517220]
[127.80088806 30.03506279]
[124.91561127 44.75495529]
[122.13999939 59.49591827]
[119.47420502 74.25713348]
[128.43695068 62.22928238]
[140.07714844 52.76853561]
[153.68301392 46.45343018]
[168.42251587 43.67012787]
[183.39436340 44.58883667]
[197.68299866 49.15337372]
[210.41465759 57.08461380]
[220.81082153 67.89756012]
[228.23574829 80.93099976]
[232.23539734 95.38793182]
[232.56518555 110.38430023]
[229.20495605 125.00308990]
[222.36018372 138.35034180]
[212.44943237 149.60986328]
[200.07873535 158.09313965]
[186.00459290 163.28141785]
[171.08761597 164.85742188]
[156.23999023 162.72479248]
[142.36965942 157.01393127]
[130.32479858 148.07405090]
[120.84195709 136.45184326]
[114.50101471 122.85800171]
[111.68971252 108.12380981]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[96.86705780 142.40567017]
[89.10839081 155.49221802]
[74.70861053 159.12289429]
[67.24086761 172.13185120]
[59.77312469 185.14080811]
[59.61299515 200.96119690]
[46.56645203 208.14709473]
[39.09871292 221.15603638]
[31.63097000 234.16499329]
[24.16322899 247.17395020]
[33.97159576 262.81436157]
[34.48030853 281.18371582]
[25.63491821 297.19396973]
[9.95992565 306.45449829]
[-8.16105747 306.47592163]
[-15.04047012 319.80535889]
[-21.91988373 333.13476562]
[-28.79929543 346.46420288]
[-35.67870712 359.79364014]
[-27.87351036 374.79946899]
[-30.52415848 391.33654785]
[-42.39044189 402.91900635]
[-58.65746307 405.12387085]
[-65.33766174 418.55426025]
[-72.01785278 431.98464966]
[-78.69804382 445.41500854]
[-73.90161133 460.23498535]
[-80.86759949 473.76013184]
[-95.02574921 478.24148560]
[-101.70594788 491.67184448]
[-108.38613892 505.10223389]
[-95.92373657 513.48931885]
[-84.66273499 523.43139648]
[-74.79580688 534.75830078]
[-66.49180603 547.27624512]
[-59.89281845 560.77099609]
[-55.11175919 575.01165771]
[-52.23044205 589.75457764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 203]
[40 202]
[41 201]
[44 198]
[45 197]
[46 196]
[47 195]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[64 182]
[65 181]
[66 180]
[67 179]
[69 177]
[70 176]
[71 175]
[74 172]
[75 171]
[77 169]
[78 145]
[79 144]
[81 143]
[82 142]
[83 141]
[87 137]
[88 136]
[89 135]
[90 133]
[91 132]
[92 131]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
