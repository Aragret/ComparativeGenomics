%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[74.74465942 717.07055664]
[61.56522751 725.26092529]
[46.09112930 724.10681152]
[34.27248001 714.05200195]
[30.65378380 698.96276855]
[36.62650681 684.64123535]
[49.89401627 676.59436035]
[51.00966644 661.63592529]
[52.12531281 646.67742920]
[53.24096298 631.71899414]
[44.78036118 616.34417725]
[55.27429199 601.21276855]
[56.16710663 586.23937988]
[57.05992126 571.26599121]
[57.95273972 556.29254150]
[58.84555435 541.31915283]
[59.73836899 526.34576416]
[57.68402863 523.48010254]
[56.91563034 519.47698975]
[57.95265198 514.95178223]
[61.02014542 510.72830200]
[54.64891052 497.26513672]
[63.77992630 484.34481812]
[65.34044647 469.42620850]
[66.90097046 454.50759888]
[68.46149445 439.58898926]
[69.91091156 424.65917969]
[71.24914551 409.71899414]
[72.58737946 394.77880859]
[73.92561340 379.83862305]
[67.35463715 366.47183228]
[76.29227448 353.41696167]
[77.63050842 338.47677612]
[78.96875000 323.53659058]
[80.30698395 308.59640503]
[81.64521790 293.65621948]
[75.07424164 280.28942871]
[84.01187897 267.23455811]
[85.35011292 252.29438782]
[86.35437012 237.32803345]
[87.02415466 222.34300232]
[87.69393921 207.35795593]
[75.06681061 199.45726013]
[68.04298401 186.20878601]
[68.59728241 171.12373352]
[76.68091583 158.25703430]
[90.20771790 151.11750793]
[90.87750244 136.13246155]
[91.54728699 121.14743042]
[82.44284058 114.50545502]
[77.63768005 104.31147766]
[78.30847168 93.06172943]
[84.29093933 83.51098633]
[94.12014771 77.99797058]
[87.43068695 63.66054535]
[96.09317017 51.54399872]
[97.20881653 36.58554459]
[98.32447052 21.62709236]
[99.44011688 6.66863823]
[100.55576324 -8.28981495]
[101.67141724 -23.24826813]
[90.98394775 -12.72315025]
[76.16870880 -10.37610531]
[62.75140762 -17.08252335]
[55.73637009 -30.34107780]
[57.74002838 -45.20665359]
[68.01507568 -56.13475800]
[82.72916412 -59.04948044]
[96.39430237 -52.86370087]
[103.91398621 -39.88341904]
[98.97566223 -54.91416931]
[109.01658630 -65.91549683]
[111.90185547 -80.63538361]
[114.34757996 -95.43465424]
[116.35160065 -110.30018616]
[118.35561371 -125.16571045]
[120.35962677 -140.03123474]
[122.36363983 -154.89677429]
[124.36765289 -169.76229858]
[117.18247986 -180.47378540]
[119.15766144 -192.81407166]
[128.69578552 -200.25389099]
[130.81040955 -215.10408020]
[132.81442261 -229.96961975]
[134.81843567 -244.83514404]
[136.82244873 -259.70068359]
[135.03126526 -263.65612793]
[134.63209534 -267.58108521]
[135.44439697 -271.04165649]
[137.16529846 -273.70718384]
[139.41380310 -275.38119507]
[142.29908752 -290.10110474]
[140.74652100 -294.15615845]
[140.58166504 -298.09790039]
[141.59849548 -301.50399780]
[143.47500610 -304.06237793]
[145.81916809 -305.59957886]
[149.57546997 -320.12164307]
[153.33177185 -334.64370728]
[139.81355286 -341.26507568]
[127.90515137 -350.47241211]
[118.09419250 -361.88861084]
[110.78242493 -375.04623413]
[106.26927948 -389.40646362]
[104.73954773 -404.38128662]
[106.25588989 -419.35745239]
[110.75619507 -433.72171021]
[118.05619049 -446.88586426]
[127.85694122 -458.31085205]
[139.75711060 -467.52880859]
[153.26940918 -474.16226196]
[167.84048462 -477.93960571]
[182.87370300 -478.70614624]
[197.75341797 -476.43048096]
[211.87036133 -471.20584106]
[224.64640808 -463.24609375]
[235.55842590 -452.87725830]
[244.15954590 -440.52389526]
[250.09756470 -426.69186401]
[253.12934875 -411.94760132]
[253.13070679 -396.89486694]
[250.10160828 -382.15005493]
[244.16609192 -368.31695557]
[235.56721497 -355.96203613]
[224.65708923 -345.59121704]
[211.88247681 -337.62918091]
[197.76649475 -332.40194702]
[182.88717651 -330.12359619]
[167.85383606 -330.88739014]
[164.09753418 -316.36532593]
[160.34123230 -301.84329224]
[157.01896667 -287.21582031]
[154.13369751 -272.49594116]
[151.68797302 -257.69665527]
[149.68395996 -242.83113098]
[147.67994690 -227.96559143]
[145.67593384 -213.10006714]
[147.89761353 -206.05125427]
[143.52983093 -198.02876282]
[150.82347107 -182.06726074]
[139.23318481 -167.75828552]
[137.22917175 -152.89276123]
[135.22515869 -138.02722168]
[133.22114563 -123.16169739]
[131.21713257 -108.29617310]
[129.21310425 -93.43064117]
[130.80349731 -91.12221527]
[131.57530212 -88.04473114]
[131.23103333 -84.50680542]
[129.59028625 -80.91898346]
[126.62174988 -77.75011444]
[123.73647308 -63.03022003]
[128.88117981 -49.05233765]
[118.63388062 -36.99814987]
[116.62986755 -22.13261986]
[115.51422119 -7.17416620]
[114.39856720 7.78428698]
[113.28292084 22.74274063]
[112.16727448 37.70119476]
[111.05162048 52.65964890]
[117.82088470 65.92713928]
[109.07860565 79.11361694]
[121.41506195 92.25033569]
[120.34242249 110.23952484]
[106.53232574 121.81721497]
[105.86254120 136.80224609]
[105.19275665 151.78729248]
[118.02865601 160.10516357]
[124.93214417 173.64172363]
[124.13841248 188.71607971]
[115.96062469 201.28507996]
[102.67897797 208.02774048]
[102.00919342 223.01278687]
[101.33940887 237.99781799]
[103.74645233 242.62959290]
[104.10072327 247.25860596]
[102.74700165 251.10340881]
[100.29029846 253.63261414]
[98.95206451 268.57281494]
[105.42731476 283.00823975]
[96.58539581 294.99447632]
[95.24716187 309.93466187]
[93.90892792 324.87484741]
[92.57069397 339.81503296]
[91.23246002 354.75521851]
[97.70771790 369.19064331]
[88.86579895 381.17687988]
[87.52756500 396.11706543]
[86.18933105 411.05725098]
[84.85109711 425.99743652]
[87.20240784 434.82403564]
[83.38009644 441.14950562]
[81.81957245 456.06811523]
[80.25905609 470.98672485]
[78.69853210 485.90533447]
[84.95814514 500.43557739]
[75.93875122 512.28881836]
[74.71177673 527.23858643]
[73.81896210 542.21197510]
[72.92614746 557.18536377]
[72.03332520 572.15875244]
[71.14051056 587.13220215]
[70.24769592 602.10559082]
[78.20964813 612.25299072]
[77.15776825 624.70599365]
[68.19941711 632.83465576]
[67.08377075 647.79309082]
[65.96811676 662.75152588]
[64.85247040 677.71002197]
[76.77950287 687.63598633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[21 197]
[23 195]
[24 194]
[25 193]
[26 192]
[27 190]
[28 189]
[29 188]
[30 187]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[38 179]
[39 178]
[40 174]
[41 173]
[42 172]
[47 167]
[48 166]
[49 165]
[54 162]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[70 154]
[72 152]
[73 151]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[82 139]
[83 137]
[84 136]
[85 135]
[86 134]
[91 133]
[92 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
