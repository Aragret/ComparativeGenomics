%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-5.34924412 350.10910034]
[-5.04745388 365.11755371]
[-6.17369127 380.08673096]
[-8.71775627 394.88107300]
[-12.65660858 409.36660767]
[-17.95457649 423.41210938]
[-24.56368065 436.89041138]
[-32.42406845 449.67941284]
[-41.46454620 461.66336060]
[-51.60324860 472.73364258]
[-62.74834824 482.79006958]
[-74.79891968 491.74151611]
[-87.64582062 499.50692749]
[-101.17270660 506.01602173]
[-115.25708008 511.20977783]
[-129.77137756 515.04119873]
[-144.58415222 517.47564697]
[-159.56126404 518.49096680]
[-174.56707764 518.07800293]
[-189.46568298 516.24047852]
[-204.12214661 512.99505615]
[-218.40374756 508.37115479]
[-232.18115234 502.41061401]
[-245.32957458 495.16744995]
[-257.72994995 486.70718384]
[-269.26995850 477.10650635]
[-279.84509277 466.45236206]
[-289.35958862 454.84118652]
[-297.72726440 442.37820435]
[-304.87237549 429.17620850]
[-310.73019409 415.35482788]
[-315.24765015 401.03918457]
[-318.38385010 386.35897827]
[-320.11038208 371.44711304]
[-320.41165161 356.43862915]
[-319.28485107 341.46948242]
[-316.74026489 326.67526245]
[-312.80087280 312.18988037]
[-307.50238037 298.14456177]
[-300.89279175 284.66650391]
[-293.03195190 271.87777710]
[-283.99102783 259.89416504]
[-273.85192871 248.82424927]
[-262.70645142 238.76823425]
[-250.65556335 229.81721497]
[-237.80838013 222.05226135]
[-224.28125000 215.54368591]
[-210.19668579 210.35041809]
[-195.68225098 206.51951599]
[-180.86938477 204.08564758]
[-165.89222717 203.07089233]
[-150.88644409 203.48439026]
[-135.98789978 205.32244873]
[-121.33155823 208.56837463]
[-107.05011749 213.19281006]
[-93.27293396 219.15385437]
[-80.12477875 226.39752197]
[-67.72472382 234.85821533]
[-56.18506241 244.45930481]
[-45.53905487 233.89225769]
[-34.89304733 223.32521057]
[-35.09458923 208.47613525]
[-24.44855499 197.60798645]
[-8.87211514 197.49726868]
[1.77389359 186.93022156]
[12.41990185 176.36317444]
[16.00218391 161.90577698]
[31.24732971 157.67539978]
[41.89333725 147.10835266]
[52.53934479 136.54130554]
[63.18535614 125.97425079]
[73.83136749 115.40720367]
[84.47737122 104.84015656]
[88.45991516 88.54550171]
[104.72446442 84.44177246]
[115.21196747 73.71739197]
[125.69946289 62.99301147]
[129.81623840 47.71679688]
[144.24656677 44.02698517]
[154.73406982 33.30260468]
[165.06074524 22.42327118]
[175.22428894 11.39139462]
[185.38783264 0.35951689]
[195.55137634 -10.67236042]
[185.21897888 -21.55402184]
[175.63645935 -33.10151672]
[166.84663391 -45.26326752]
[158.88874817 -57.98495865]
[151.79835510 -71.20977020]
[145.60711670 -84.87863159]
[140.34269714 -98.93050385]
[136.02859497 -113.30261993]
[132.68408203 -127.93079376]
[130.32409668 -142.74969482]
[128.95916748 -157.69313049]
[128.59541321 -172.69436646]
[129.23445129 -187.68638611]
[130.87341309 -202.60224915]
[133.50498962 -217.37533569]
[137.11743164 -231.93966675]
[141.69459534 -246.23017883]
[147.21604919 -260.18307495]
[153.65711975 -273.73599243]
[160.98904419 -286.82843018]
[169.17909241 -299.40191650]
[178.19065857 -311.40029907]
[187.98350525 -322.76995850]
[198.51390076 -333.46014404]
[209.73480225 -343.42309570]
[221.59611511 -352.61431885]
[234.04483032 -360.99279785]
[247.02537537 -368.52105713]
[260.47976685 -375.16549683]
[274.34793091 -380.89642334]
[288.56790161 -385.68829346]
[303.07617188 -389.51962280]
[317.80795288 -392.37338257]
[332.69744873 -394.23678589]
[347.67813110 -395.10150146]
[362.68313599 -394.96371460]
[377.64544678 -393.82397461]
[392.49819946 -391.68740845]
[407.17507935 -388.56356812]
[421.61053467 -384.46640015]
[435.74008179 -379.41418457]
[449.50064087 -373.42947388]
[462.83071899 -366.53906250]
[475.67080688 -358.77365112]
[487.96356201 -350.16796875]
[499.65405273 -340.76043701]
[510.69006348 -330.59304810]
[521.02233887 -319.71127319]
[530.60473633 -308.16366577]
[539.39440918 -296.00180054]
[547.35211182 -283.27999878]
[554.44232178 -270.05511475]
[560.63342285 -256.38616943]
[565.89764404 -242.33421326]
[570.21154785 -227.96205139]
[573.55590820 -213.33383179]
[575.91571045 -198.51490784]
[577.28045654 -183.57145691]
[577.64398193 -168.57022095]
[577.00476074 -153.57820129]
[575.36560059 -138.66235352]
[572.73388672 -123.88929749]
[569.12121582 -109.32501984]
[564.54388428 -95.03456116]
[559.02227783 -81.08174896]
[552.58105469 -67.52890778]
[545.24896240 -54.43655396]
[537.05871582 -41.86317062]
[528.04699707 -29.86491203]
[518.25402832 -18.49536705]
[507.72351074 -7.80531359]
[496.50247192 2.15750265]
[484.64105225 11.34858513]
[472.19223022 19.72688484]
[459.21157837 27.25498009]
[445.75711060 33.89925003]
[431.88888550 39.63002014]
[417.66885376 44.42169189]
[403.16052246 48.25286484]
[388.42871094 51.10643387]
[373.53918457 52.96964645]
[358.55847168 53.83418655]
[343.55346680 53.69618607]
[328.59118652 52.55627060]
[313.73846436 50.41952515]
[299.06161499 47.29549408]
[284.62622070 43.19813156]
[270.49673462 38.14573288]
[256.73623657 32.16086960]
[243.40625000 25.27027130]
[230.56626892 17.50470924]
[218.27363586 8.89886951]
[206.58326721 -0.50881350]
[196.41970825 10.52306366]
[186.25616455 21.55494118]
[176.09262085 32.58681870]
[175.38958740 37.31066895]
[171.71157837 41.64303207]
[165.45845032 43.79010773]
[154.97094727 54.51448822]
[151.60432434 69.02362061]
[136.42384338 73.48051453]
[125.93634796 84.20489502]
[115.44884491 94.92927551]
[114.87692261 106.56172943]
[106.67230225 114.82765961]
[95.04441833 115.48616791]
[84.39841461 126.05321503]
[73.75240326 136.62025452]
[63.10639572 147.18730164]
[52.46038437 157.75434875]
[41.81437683 168.32139587]
[37.47062302 183.53463745]
[22.98694992 187.00918579]
[12.34094143 197.57623291]
[1.69493258 208.14328003]
[1.46826053 223.71847534]
[-9.47883797 234.28329468]
[-24.32599831 233.97122192]
[-34.97200775 244.53826904]
[-45.61801529 255.10531616]
[-36.10309219 266.71612549]
[-27.73494530 279.17883301]
[-20.58935928 292.38055420]
[-14.73104858 306.20172119]
[-10.21306515 320.51718140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 205]
[60 204]
[61 203]
[64 200]
[65 199]
[66 198]
[68 196]
[69 195]
[70 194]
[71 193]
[72 192]
[73 191]
[75 188]
[76 187]
[77 186]
[79 184]
[80 183]
[81 180]
[82 179]
[83 178]
[84 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
