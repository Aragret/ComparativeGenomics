%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-0.03150142 806.11303711]
[-14.82288361 803.41772461]
[-28.96883965 798.32440186]
[-42.08345795 790.97210693]
[-53.80896378 781.56134033]
[-63.82547379 770.34887695]
[-71.85973358 757.64056396]
[-77.69255829 743.78314209]
[-81.16482544 729.15466309]
[-82.18181610 714.15411377]
[-80.71577454 699.19085693]
[-76.80670166 684.67291260]
[-70.56124115 670.99652100]
[-62.14976883 658.53472900]
[-51.80176163 647.62744141]
[-39.79951859 638.57226562]
[-26.47046661 631.61627197]
[-12.17823410 626.94915771]
[2.68727446 624.69824219]
[2.91060209 609.69989014]
[3.13392997 594.70159912]
[3.35725760 579.70324707]
[3.58058524 564.70489502]
[-10.63068867 561.62805176]
[-23.96988106 555.82818604]
[-35.92061996 547.52783203]
[-46.01987076 537.04608154]
[-53.87586594 524.78680420]
[-59.18331146 511.22283936]
[-61.73525238 496.87765503]
[-61.43112946 482.30548096]
[-58.28075790 468.06958008]
[-52.40400314 454.72064209]
[-44.02624130 442.77539062]
[-33.46969604 432.69668579]
[-21.14106941 424.87548828]
[-7.51584768 419.61575317]
[6.88001633 417.12261963]
[7.32662201 402.12927246]
[7.77322817 387.13589478]
[8.21983433 372.14254761]
[8.66644001 357.14920044]
[-0.99581540 368.62268066]
[-15.29546452 373.15258789]
[-29.80160522 369.33529663]
[-40.01935196 358.35357666]
[-42.78262329 343.61032104]
[-37.23519516 329.67379761]
[-25.09599113 320.86245728]
[-10.12648010 319.90658569]
[3.03487349 327.10232544]
[10.30993748 340.22027588]
[12.75566483 325.42102051]
[15.20139217 310.62173462]
[5.37029600 321.95089722]
[-8.18413925 328.37561035]
[-23.17775345 328.81326294]
[-37.08385849 323.19009399]
[-47.55903244 312.45367432]
[-52.83802414 298.41329956]
[-52.03122711 283.43499756]
[-45.27460861 270.04290771]
[-33.70677185 260.49380493]
[-19.27709961 256.39691162]
[-4.41724920 258.44259644]
[8.36863613 266.28613281]
[16.92590904 278.60577393]
[19.81249809 293.32705688]
[25.05921555 279.27459717]
[30.30593491 265.22210693]
[35.55265045 251.16964722]
[40.79936981 237.11717224]
[46.04608917 223.06469727]
[51.29280853 209.01222229]
[56.53952408 194.95976257]
[50.14228058 181.55786133]
[55.26301575 167.23191833]
[69.36353302 160.61276245]
[74.61025238 146.56028748]
[79.85697174 132.50781250]
[85.10368347 118.45534515]
[90.35040283 104.40287781]
[94.96441650 90.13014221]
[94.21919250 81.02616119]
[99.10482025 75.48067474]
[103.29183197 61.07689285]
[107.47884369 46.67311096]
[111.66585541 32.26932907]
[115.74552155 17.83477592]
[119.71762085 3.37025261]
[123.68971252 -11.09427166]
[119.88299561 -26.45068550]
[130.71435547 -36.67472839]
[132.82897949 -51.52492523]
[133.05230713 -66.52326202]
[133.27563477 -81.52159882]
[133.49896240 -96.51993561]
[119.24506378 -101.62924957]
[107.42402649 -111.09190369]
[99.31811523 -123.88146973]
[95.80659485 -138.61062622]
[97.27036285 -153.68165588]
[103.55065155 -167.45977783]
[113.96621704 -178.45043945]
[127.38726044 -185.46147156]
[142.35795593 -187.73234558]
[157.25440979 -185.01673889]
[170.46075439 -177.60923767]
[180.54446411 -166.31332397]
[186.41174316 -152.35432434]
[187.42614746 -137.24638367]
[183.47764587 -122.62831879]
[174.99453735 -110.08576965]
[162.89700317 -100.97926331]
[148.49729919 -96.29660797]
[148.27397156 -81.29827118]
[148.05064392 -66.29993439]
[147.82731628 -51.30159760]
[155.14289856 -64.39672089]
[166.27001953 -74.45590210]
[180.03442383 -80.41756439]
[194.98348999 -81.65257263]
[209.53962708 -78.03058624]
[222.16668701 -69.93383789]
[231.53211975 -58.21680832]
[236.64753723 -44.11601257]
[236.97312927 -29.11954689]
[232.47451782 -14.81002331]
[223.62646484 -2.69755793]
[211.36270142 5.93958998]
[196.97747803 10.18992233]
[181.98889160 9.60489082]
[167.97872925 4.24623585]
[156.42550659 -5.32053089]
[148.54846191 -18.08580589]
[145.17887878 -32.70263290]
[149.26969910 -18.38081741]
[138.15423584 -7.12217522]
[134.18214417 7.34234858]
[130.21005249 21.80687332]
[131.47009277 29.08932304]
[126.06964111 36.45634079]
[121.88262939 50.86012268]
[117.69561768 65.26390839]
[113.50860596 79.66768646]
[109.42893982 94.10224152]
[122.96729279 87.64368439]
[137.15266418 92.51966095]
[143.85903931 105.93698120]
[139.24468994 120.20960999]
[125.95292664 127.16152191]
[111.59787750 122.81035614]
[104.40287781 109.64959717]
[99.15615845 123.70206451]
[93.90943909 137.75453186]
[88.66271973 151.80700684]
[83.41600037 165.85948181]
[89.72820282 180.10005188]
[84.20710754 194.27651978]
[70.59199524 200.20646667]
[65.34527588 214.25894165]
[60.09856033 228.31141663]
[54.85184097 242.36389160]
[49.60512543 256.41635132]
[44.35840607 270.46884155]
[39.11168671 284.52130127]
[33.86496735 298.57376099]
[30.00066376 313.06747437]
[27.55493546 327.86672974]
[25.10920906 342.66601562]
[23.65979004 357.59582520]
[23.21318436 372.58917236]
[22.76657867 387.58251953]
[22.31997299 402.57586670]
[21.87336540 417.56921387]
[36.93281174 421.20709229]
[50.90559769 427.88595581]
[63.18542099 437.31341553]
[73.23998260 449.07785034]
[80.63404083 462.66641235]
[85.04828644 477.48736572]
[86.29310608 492.89590454]
[84.31672668 508.22204590]
[79.20737457 522.80004883]
[71.18933105 535.99694824]
[60.61309814 547.24047852]
[47.94005966 556.04351807]
[33.72238159 562.02539062]
[18.57892227 564.92822266]
[18.35559464 579.92657471]
[18.13226700 594.92492676]
[17.90893936 609.92321777]
[17.68561172 624.92156982]
[32.47751236 627.61407471]
[46.62445068 632.70465088]
[59.74048615 640.05444336]
[71.46780396 649.46295166]
[81.48647308 660.67346191]
[89.52317810 673.38024902]
[95.35867310 687.23651123]
[98.83376312 701.86437988]
[99.85363770 716.86468506]
[98.39048004 731.82824707]
[94.48420715 746.34692383]
[88.24137878 760.02453613]
[79.83231354 772.48797607]
[69.48640442 783.39721680]
[57.48590469 792.45471191]
[44.15819550 799.41326904]
[29.86686134 804.08312988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[52 170]
[53 169]
[54 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 140]
[90 139]
[91 138]
[93 136]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
