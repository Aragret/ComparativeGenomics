%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[178.27247620 561.33679199]
[189.04071045 550.76757812]
[202.17800903 543.34643555]
[198.42170715 528.82434082]
[194.66540527 514.30230713]
[183.98747253 503.91812134]
[188.02241516 488.62008667]
[174.11952209 483.34301758]
[165.89257812 470.74215698]
[166.67207336 455.53540039]
[176.36840820 443.56512451]
[172.61210632 429.04306030]
[168.85581970 414.52099609]
[165.09951782 399.99893188]
[161.34321594 385.47689819]
[150.66528320 375.09271240]
[154.70021057 359.79467773]
[144.43984985 353.38751221]
[141.19155884 341.31970215]
[147.22337341 329.91882324]
[143.68370056 315.34243774]
[133.16156006 304.80044556]
[137.42381287 289.56417847]
[133.88414001 274.98779297]
[130.34446716 260.41143799]
[126.80478668 245.83505249]
[123.26511383 231.25868225]
[108.65789032 228.24299622]
[96.75962067 219.14680481]
[89.96281433 205.73171997]
[89.66334534 190.63435364]
[95.97417450 176.84811401]
[107.69227600 167.12971497]
[104.15260315 152.55334473]
[100.61293030 137.97695923]
[97.07279968 134.77127075]
[95.50887299 129.30764771]
[97.19174957 122.91394043]
[94.08763885 108.23863983]
[89.47113037 101.63103485]
[91.04827118 93.32180023]
[88.16300201 78.60190582]
[85.27772522 63.88201523]
[76.98237610 76.37950134]
[62.63060760 80.74146271]
[48.78385544 74.97367096]
[41.77266693 61.71308136]
[44.80246735 47.02225494]
[56.48806763 37.61764526]
[71.48696899 37.79890823]
[82.94281006 47.48477936]
[81.60457611 32.54459381]
[70.66477966 17.73235321]
[78.66386414 2.11244369]
[77.10334015 -12.80616093]
[75.54282379 -27.72476578]
[73.98229980 -42.64337158]
[72.42177582 -57.56197357]
[63.29076004 -70.48231506]
[69.66199493 -83.94547272]
[58.33259583 -74.11466980]
[43.55578232 -76.69261169]
[36.22447205 -89.77893066]
[41.74303436 -103.72689056]
[56.04338837 -108.25456238]
[68.58299255 -100.02573395]
[68.13638306 -115.01908112]
[67.68978119 -130.01243591]
[67.24317169 -145.00578308]
[66.79656982 -159.99913025]
[65.79230499 -174.96548462]
[64.23178101 -189.88407898]
[62.67126083 -204.80268860]
[61.11073685 -219.72129822]
[49.95162582 -234.36901855]
[57.71726227 -250.10629272]
[55.93479919 -265.00000000]
[54.15233231 -279.89370728]
[52.36986542 -294.78744507]
[50.58740234 -309.68115234]
[43.66149902 -296.37582397]
[31.39854240 -287.73754883]
[16.53810310 -285.69613647]
[2.40004349 -290.70764160]
[-7.85715866 -301.65249634]
[-11.94201756 -316.08557129]
[-8.94196606 -330.78250122]
[0.47277662 -342.45996094]
[14.19893360 -348.50912476]
[29.17004585 -347.57864380]
[42.04153061 -339.87637329]
[49.93786621 -327.12301636]
[50.60765457 -342.10806274]
[51.27743912 -357.09307861]
[51.94722366 -372.07812500]
[44.83385086 -386.21002197]
[53.13173676 -398.57913208]
[53.80152130 -413.56414795]
[39.70606232 -419.09558105]
[28.17200851 -428.90600586]
[20.45048332 -441.93124390]
[17.37905884 -456.75842285]
[19.29090500 -471.77920532]
[25.97863579 -485.36422729]
[36.71681595 -496.03988647]
[50.34065247 -502.64822388]
[65.37232971 -504.47235107]
[80.18132019 -501.31442261]
[93.16126251 -493.51699829]
[102.90418243 -481.92587280]
[108.35324860 -467.79837036]
[108.91738129 -452.66693115]
[104.53539276 -438.17291260]
[95.68260193 -425.88848877]
[83.31929779 -417.14620972]
[68.78656006 -412.89437866]
[68.11677551 -397.90933228]
[75.27805328 -384.84927368]
[66.93225861 -371.40835571]
[66.26247406 -356.42330933]
[65.59268951 -341.43826294]
[64.92290497 -326.45321655]
[65.48111725 -311.46362305]
[67.26358032 -296.56991577]
[69.04605103 -281.67617798]
[70.82851410 -266.78247070]
[72.61098480 -251.88874817]
[81.92335510 -244.16824341]
[83.53025055 -231.77462769]
[76.02934265 -221.28181458]
[77.58986664 -206.36320496]
[79.15039062 -191.44461060]
[80.71091461 -176.52600098]
[92.04031372 -186.35681152]
[106.81712341 -183.77886963]
[114.14843750 -170.69253540]
[108.62987518 -156.74458313]
[94.32952118 -152.21690369]
[81.78991699 -160.44573975]
[82.23651886 -145.45239258]
[82.68312836 -130.45904541]
[83.12973785 -115.46569061]
[83.57633972 -100.47234344]
[84.58059692 -85.50599670]
[93.59999847 -73.65273285]
[87.34037781 -59.12249756]
[88.90090179 -44.20389175]
[90.46142578 -29.28528786]
[92.02194977 -14.36668396]
[93.58247375 0.55192071]
[102.77886963 8.41021919]
[104.20105743 20.82638359]
[96.54476166 31.20635796]
[97.88299561 46.14654541]
[99.99761963 60.99674225]
[102.88288879 75.71662903]
[105.76816559 90.43652344]
[108.76293945 105.13452911]
[111.86705017 119.80982971]
[115.18930817 134.43728638]
[118.72898102 149.01367188]
[122.26865387 163.59004211]
[137.13882446 166.85185242]
[149.06954956 176.20837402]
[155.72750854 189.76167297]
[155.84019470 204.79989624]
[149.43882751 218.33992004]
[137.84149170 227.71900940]
[141.38116455 242.29537964]
[144.92083740 256.87176514]
[148.46051025 271.44812012]
[152.00018311 286.02450562]
[162.77551270 297.60910034]
[158.26008606 311.80276489]
[161.79975891 326.37915039]
[174.81578064 339.40469360]
[169.22225952 356.03839111]
[180.16886902 367.46127319]
[175.86526489 381.72058105]
[179.62156677 396.24264526]
[183.37786865 410.76470947]
[187.13417053 425.28677368]
[190.89047241 439.80883789]
[205.17485046 445.57620239]
[213.23008728 458.49774170]
[212.14488220 473.50729370]
[202.54446411 484.86380005]
[213.49107361 496.28668213]
[209.18746948 510.54598999]
[212.94377136 525.06805420]
[216.70007324 539.59008789]
[231.78808594 539.71051025]
[246.33056641 543.73272705]
[259.33599854 551.38269043]
[269.91763306 562.13867188]
[277.35400391 575.26733398]
[281.13812256 589.87359619]
[281.01193237 604.96154785]
[276.98403931 619.50250244]
[269.32910156 632.50494385]
[258.56903076 643.08245850]
[245.43746948 650.51379395]
[230.82974243 654.29223633]
[215.74183655 654.16021729]
[201.20246887 650.12670898]
[188.20295715 642.46679688]
[177.62962341 631.70263672]
[170.20336914 618.56817627]
[166.43055725 603.95898438]
[166.56838989 588.87115479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[7 187]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[17 177]
[20 175]
[21 174]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[33 162]
[34 161]
[35 160]
[38 159]
[39 158]
[41 157]
[42 156]
[43 155]
[51 154]
[52 153]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[60 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 133]
[72 132]
[73 131]
[74 130]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[92 122]
[93 121]
[94 120]
[95 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
