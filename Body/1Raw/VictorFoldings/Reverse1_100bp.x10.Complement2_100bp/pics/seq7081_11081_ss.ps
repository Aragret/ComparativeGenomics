%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-47.06050110 380.23513794]
[-42.66963577 394.59750366]
[-40.04201889 409.38442993]
[-39.21596909 424.38024902]
[-40.20353317 439.36633301]
[-42.99031067 454.12408447]
[-47.53565979 468.43829346]
[-53.77329636 482.10025024]
[-61.61225891 494.91073608]
[-70.93823242 506.68289185]
[-81.61521912 517.24505615]
[-93.48750305 526.44317627]
[-106.38197327 534.14318848]
[-120.11057281 540.23278809]
[-134.47309875 544.62310791]
[-149.26011658 547.25018311]
[-164.25598145 548.07568359]
[-179.24201965 547.08752441]
[-193.99966431 544.30023193]
[-208.31372070 539.75433350]
[-221.97544861 533.51617432]
[-234.78562927 525.67675781]
[-246.55743408 516.35034180]
[-257.11920166 505.67294312]
[-266.31689453 493.80032349]
[-274.01644897 480.90554810]
[-280.10549927 467.17672729]
[-284.49526978 452.81402588]
[-287.12179565 438.02691650]
[-287.94671631 423.03103638]
[-286.95803833 408.04504395]
[-284.17016602 393.28750610]
[-279.62374878 378.97360229]
[-273.38507080 365.31210327]
[-265.54516602 352.50222778]
[-256.21829224 340.73077393]
[-245.54052734 330.16940308]
[-233.66755676 320.97213745]
[-220.77250671 313.27310181]
[-207.04345703 307.18453979]
[-192.68058777 302.79528809]
[-177.89338684 300.16934204]
[-162.89746094 299.34497070]
[-147.91149902 300.33419800]
[-133.15406799 303.12265015]
[-118.84034729 307.66958618]
[-105.17908478 313.90875244]
[-92.36949921 321.74917603]
[-83.05461121 309.99191284]
[-73.73973083 298.23464966]
[-64.42485046 286.47741699]
[-62.73507690 279.28253174]
[-54.88270950 274.61581421]
[-53.08600235 267.44686890]
[-45.16502380 262.89761353]
[-35.50421524 251.42289734]
[-25.84340477 239.94819641]
[-16.18259430 228.47349548]
[-19.93548965 214.08413696]
[-14.43060112 200.07841492]
[-1.58399332 191.90419006]
[13.79025555 192.87303162]
[23.45106697 181.39833069]
[21.29835892 164.71885681]
[32.08749771 151.38059998]
[49.52185822 149.94445801]
[59.01075363 138.32719421]
[68.49965668 126.70993042]
[77.98855591 115.09266663]
[87.47744751 103.47540283]
[96.61625671 91.58077240]
[105.39685822 79.41931152]
[114.17745972 67.25785828]
[122.95806122 55.09640503]
[131.73866272 42.93494797]
[130.45724487 30.10058975]
[138.02099609 20.15205193]
[149.94093323 18.09249878]
[158.90162659 6.06312084]
[154.92506409 -5.14060688]
[156.83100891 -16.75388718]
[164.03182983 -25.91041756]
[174.64770508 -30.40695190]
[185.99618530 -29.23291206]
[195.31106567 -40.99016571]
[204.62594604 -52.74741364]
[213.94082642 -64.50466919]
[223.25570679 -76.26191711]
[224.59634399 -82.73603821]
[228.42982483 -86.93144989]
[233.02716064 -88.22510529]
[235.99633789 -103.76520538]
[250.11227417 -108.51807404]
[259.77307129 -119.99277496]
[269.43389893 -131.46746826]
[279.09469604 -142.94216919]
[268.56689453 -153.64262390]
[259.08737183 -165.28192139]
[250.73942566 -177.75775146]
[243.59643555 -190.96047974]
[237.72117615 -204.77409363]
[233.16526794 -219.07717896]
[229.96875000 -233.74403381]
[228.15972900 -248.64578247]
[227.75408936 -263.65142822]
[228.75540161 -278.62915039]
[231.15486145 -293.44729614]
[234.93138123 -307.97561646]
[240.05178833 -322.08645630]
[246.47106934 -335.65582275]
[254.13281250 -348.56442261]
[262.96966553 -360.69885254]
[272.90399170 -371.95245361]
[283.84851074 -382.22631836]
[295.70697021 -391.43017578]
[308.37521362 -399.48312378]
[321.74191284 -406.31442261]
[335.68954468 -411.86398315]
[350.09558105 -416.08309937]
[364.83337402 -418.93463135]
[379.77346802 -420.39355469]
[394.78451538 -420.44705200]
[409.73461914 -419.09463501]
[424.49237061 -416.34820557]
[438.92810059 -412.23187256]
[452.91494751 -406.78182983]
[466.32995605 -400.04598999]
[479.05526733 -392.08352661]
[490.97903442 -382.96441650]
[501.99649048 -372.76879883]
[512.01074219 -361.58627319]
[520.93389893 -349.51513672]
[528.68743896 -336.66146851]
[535.20324707 -323.13821411]
[540.42407227 -309.06420898]
[544.30407715 -294.56317139]
[546.80908203 -279.76251221]
[547.91711426 -264.79229736]
[547.61840820 -249.78413391]
[545.91564941 -234.86988831]
[542.82373047 -220.18061829]
[538.36987305 -205.84542847]
[532.59320068 -191.99029541]
[525.54449463 -178.73699951]
[517.28564453 -166.20198059]
[507.88931274 -154.49543762]
[497.43804932 -143.72021484]
[486.02368164 -133.97103882]
[473.74652100 -125.33356476]
[460.71447754 -117.88370514]
[447.04208374 -111.68694305]
[432.84945679 -106.79772186]
[418.26138306 -103.25901794]
[403.40603638 -101.10192871]
[388.41397095 -100.34541321]
[373.41693115 -100.99610901]
[358.54672241 -103.04830933]
[343.93405151 -106.48397827]
[329.70727539 -111.27291870]
[315.99148560 -117.37304688]
[302.90719604 -124.73074341]
[290.56939697 -133.28135681]
[280.90859985 -121.80666351]
[271.24777222 -110.33196259]
[261.58697510 -98.85726166]
[259.30880737 -84.13791656]
[244.50186157 -78.56430054]
[235.01295471 -66.94703674]
[225.69807434 -55.18978500]
[216.38319397 -43.43253326]
[207.06831360 -31.67528152]
[197.75343323 -19.91802979]
[200.95182800 -1.89343774]
[189.76766968 13.00044060]
[170.93099976 15.02381706]
[161.97030640 27.05319405]
[160.87037659 44.56767654]
[143.90011597 51.71554947]
[135.11952209 63.87700653]
[126.33891296 76.03845978]
[117.55831146 88.19992065]
[108.77770996 100.36137390]
[109.00669098 103.40062714]
[108.13486481 106.59037018]
[106.10437775 109.52304840]
[103.00872803 111.77542114]
[99.09471130 112.96430206]
[89.60581207 124.58156586]
[80.11692047 136.19882202]
[70.62802124 147.81608582]
[61.13912201 159.43334961]
[64.02416229 172.58976746]
[58.88018799 184.82701111]
[47.79169464 191.76438904]
[34.92576599 191.05912781]
[25.26495552 202.53382874]
[28.83922577 217.51818848]
[22.97344589 231.56973267]
[10.11050415 239.38053894]
[-4.70789385 238.13430786]
[-14.36870384 249.60900879]
[-24.02951431 261.08370972]
[-33.69032669 272.55841064]
[-43.26544571 284.10470581]
[-52.66759491 295.79229736]
[-61.98247910 307.54956055]
[-71.29736328 319.30679321]
[-80.61224365 331.06405640]
[-70.04967499 341.74063110]
[-60.85107803 353.61257935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[51 205]
[53 204]
[55 203]
[56 202]
[57 201]
[58 200]
[62 196]
[63 195]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[78 176]
[79 175]
[84 172]
[85 171]
[86 170]
[87 169]
[88 168]
[91 167]
[93 165]
[94 164]
[95 163]
[96 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
