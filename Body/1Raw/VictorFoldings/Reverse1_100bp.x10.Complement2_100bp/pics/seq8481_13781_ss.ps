%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[292.95599365 579.43450928]
[303.84188843 569.03826904]
[316.59790039 561.04644775]
[311.35116577 546.99401855]
[306.10446167 532.94152832]
[300.33843994 519.09405518]
[294.06106567 505.47070312]
[287.78369141 491.84741211]
[281.50634766 478.22409058]
[275.22897339 464.60076904]
[268.95162964 450.97744751]
[262.67425537 437.35412598]
[256.39691162 423.73083496]
[250.11953735 410.10751343]
[236.10108948 405.20660400]
[229.54089355 391.48007202]
[234.77644348 376.80944824]
[228.49908447 363.18612671]
[222.22172546 349.56280518]
[205.74052429 352.30511475]
[189.13833618 350.31332397]
[173.74874878 343.73977661]
[160.81011963 333.10525513]
[151.36585999 319.25756836]
[146.18032837 303.30407715]
[145.67697144 286.52304077]
[149.90374756 270.26135254]
[158.52865601 255.82626343]
[170.86584473 244.38041687]
[163.98641968 231.05097961]
[157.10700989 217.72155762]
[150.02990723 204.49601746]
[142.75668335 191.37733459]
[135.48344421 178.25863647]
[128.11276245 165.19444275]
[120.64501953 152.18550110]
[113.17727661 139.17654419]
[105.70953369 126.16759491]
[98.24179840 113.15863800]
[99.19330597 128.12843323]
[96.94844818 142.95950317]
[91.60935211 156.97712708]
[83.41890717 169.54362488]
[72.74972534 180.08728027]
[60.08718491 188.12841797]
[46.00734711 193.30125427]
[31.15075111 195.37043762]
[16.19326973 194.24183655]
[1.81536925 189.96678162]
[-11.32884979 182.73979187]
[-22.64141464 172.88961792]
[-31.60767937 160.86439514]
[-37.81973648 147.21116638]
[-40.99498367 132.55110168]
[-40.98896027 117.55109406]
[-37.80194855 102.89357758]
[-31.57893372 89.24534607]
[-22.60301971 77.22732544]
[-11.28255081 67.38623810]
[1.86746562 60.16979218]
[16.24879265 55.90629196]
[31.20717430 54.78969574]
[46.06210709 56.87080002]
[60.13778687 62.05492783]
[72.79386902 70.10623932]
[83.45458221 80.65845490]
[91.63689423 93.23537445]
[89.85443115 78.34165955]
[88.07196045 63.44794083]
[78.43335724 54.87705612]
[77.25535583 42.43534851]
[84.62648010 32.84404755]
[83.06595612 17.92544174]
[81.50543213 3.00683737]
[72.37442017 -9.91350174]
[78.74565887 -23.37665939]
[75.17766571 -28.94271660]
[74.98515320 -34.62250137]
[77.36757660 -38.76171875]
[76.25192261 -53.72017288]
[75.13627625 -68.67862701]
[74.02062988 -83.63707733]
[72.90497589 -98.59553528]
[59.92390823 -102.08134460]
[48.66768646 -109.38509369]
[40.22407532 -119.78422546]
[35.40387344 -132.25788879]
[34.66307068 -145.58715820]
[38.05973816 -158.47407532]
[45.24975586 -169.66815186]
[55.52161026 -178.08760071]
[67.86679077 -182.92393494]
[59.52099991 -196.36485291]
[66.68228149 -209.42492676]
[66.01249695 -224.40995789]
[65.34270477 -239.39500427]
[50.94982529 -244.21260071]
[39.27167511 -253.90721130]
[31.88764000 -267.16769409]
[29.79634285 -282.20068359]
[33.28061676 -296.97311401]
[41.86924362 -309.48709106]
[54.40068054 -318.05023193]
[69.18015289 -321.50445557]
[84.20886230 -319.38256836]
[97.45429993 -311.97155762]
[107.12512207 -300.27371216]
[111.91342926 -285.87106323]
[111.17165375 -270.71145630]
[105.00009918 -256.84506226]
[94.23342896 -246.14724731]
[80.32774353 -240.06478882]
[80.99753571 -225.07974243]
[81.66732025 -210.09471130]
[89.96520233 -197.72561646]
[82.85182953 -183.59371948]
[98.63408661 -178.28558350]
[111.19464874 -167.29859924]
[118.58804321 -152.29699707]
[119.65472412 -135.56965637]
[114.20285797 -119.68088531]
[103.04209137 -107.07732391]
[87.86343384 -99.71118164]
[88.97908020 -84.75273132]
[90.09472656 -69.79427338]
[91.21038055 -54.83581924]
[92.32602692 -39.87736893]
[93.66426086 -24.93718338]
[102.68365479 -13.08392239]
[96.42404175 1.44631433]
[97.98456573 16.36491966]
[99.54508209 31.28352356]
[110.60340881 44.90998077]
[102.96568298 61.66547394]
[104.74814606 76.55919647]
[106.53061676 91.45291138]
[111.25074768 105.69090271]
[118.71849060 118.69985199]
[126.18622589 131.70880127]
[133.65397644 144.71775818]
[141.12171936 157.72671509]
[148.10809326 163.61128235]
[148.60214233 170.98541260]
[155.87536621 184.10409546]
[163.14860535 197.22279358]
[168.60993958 200.94909668]
[171.00941467 206.10075378]
[170.43644714 210.84213257]
[177.31585693 224.17156982]
[184.19526672 237.50099182]
[197.19970703 234.39559937]
[210.56103516 234.27726746]
[223.60235596 237.14831543]
[235.66383362 242.85972595]
[246.13604736 251.11883545]
[254.49075317 261.50436401]
[260.30761719 273.48791504]
[263.29525757 286.46081543]
[263.30593872 299.76507568]
[260.34280396 312.72671509]
[254.55950928 324.68997192]
[246.25234985 335.05038452]
[235.84503174 343.28546143]
[242.12239075 356.90878296]
[248.39974976 370.53207397]
[262.95352173 376.08416748]
[269.12561035 389.98956299]
[263.74285889 403.83013916]
[270.02020264 417.45346069]
[276.29757690 431.07678223]
[282.57495117 444.70010376]
[288.85229492 458.32339478]
[295.12966919 471.94671631]
[301.40701294 485.57003784]
[307.68438721 499.19335938]
[313.96173096 512.81665039]
[321.52587891 499.86352539]
[336.34640503 497.55020142]
[347.49822998 507.58200073]
[346.76058960 522.56384277]
[334.67730713 531.45172119]
[320.15692139 527.69482422]
[325.40365601 541.74725342]
[330.65036011 555.79974365]
[345.52267456 553.47607422]
[360.55828857 554.19409180]
[375.14147949 557.92443848]
[388.67510986 564.51428223]
[400.60494995 573.69378662]
[410.44250488 585.08709717]
[417.78494263 598.22760010]
[422.33157349 612.57727051]
[423.89624023 627.54846191]
[422.41482544 642.52813721]
[417.94802856 656.90283203]
[410.67877197 670.08398438]
[400.90469360 681.53179932]
[389.02606201 690.77752686]
[375.52926636 697.44250488]
[360.96704102 701.25378418]
[345.93566895 702.05541992]
[331.05065918 699.81445312]
[316.92156982 694.62274170]
[304.12698364 686.69281006]
[293.19082642 676.34942627]
[284.56091309 664.01617432]
[278.59063721 650.19805908]
[275.52447510 635.46087646]
[275.48800659 620.40820312]
[278.48269653 605.65637207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[5 182]
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[17 165]
[18 164]
[19 163]
[29 150]
[30 149]
[31 148]
[32 145]
[33 144]
[34 143]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[67 136]
[68 135]
[69 134]
[72 132]
[73 131]
[74 130]
[76 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
