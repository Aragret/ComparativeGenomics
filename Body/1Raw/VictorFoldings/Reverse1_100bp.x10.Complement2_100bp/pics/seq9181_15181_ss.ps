%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[77.23020935 665.54888916]
[67.65937042 677.21343994]
[55.39507675 686.00256348]
[41.27353287 691.31713867]
[26.25756645 692.79467773]
[11.37099361 690.33453369]
[-2.37119603 684.10443115]
[-14.03203678 674.52905273]
[-22.81647301 662.26135254]
[-28.12556648 648.13775635]
[-29.59733582 633.12127686]
[-27.13143349 618.23565674]
[-20.89598846 604.49584961]
[-11.31614304 592.83868408]
[0.95493311 584.05902100]
[15.08057690 578.75537109]
[30.09767914 577.28936768]
[24.53908157 563.47088623]
[34.42293930 551.11694336]
[36.86866379 536.31768799]
[39.31439209 521.51837158]
[33.75579453 507.69989014]
[43.63965225 495.34594727]
[46.08538055 480.54666138]
[48.53110886 465.74740601]
[50.97683334 450.94812012]
[49.45589066 448.59338379]
[48.77605438 445.49426270]
[49.22550964 441.96817017]
[50.97234344 438.43078613]
[54.03392029 435.35171509]
[57.35617828 420.72424316]
[60.67843628 406.09677124]
[64.00069427 391.46932983]
[67.21397400 376.81753540]
[70.31808472 362.14224243]
[73.42218781 347.46691895]
[65.71236420 340.68978882]
[61.47824097 331.25012207]
[61.54499054 320.82376099]
[65.96759033 311.29254150]
[74.00881958 304.40447998]
[84.26135254 301.45330811]
[88.01765442 286.93124390]
[91.77395630 272.40917969]
[95.53025055 257.88711548]
[97.20179749 242.98054504]
[96.75518799 227.98719788]
[93.41393280 221.39494324]
[96.41522217 212.76765442]
[96.19189453 197.76931763]
[95.96856689 182.77098083]
[95.52196503 167.77763367]
[94.85218048 152.79260254]
[94.18239594 137.80755615]
[93.51261139 122.82251740]
[92.84282684 107.83747864]
[91.28230286 92.91887665]
[88.83657074 78.11960602]
[86.39084625 63.32033157]
[83.94511414 48.52106094]
[79.45835876 40.56450272]
[81.57485962 33.48338318]
[79.34973907 18.64933968]
[69.65090942 6.14960861]
[75.41462708 -7.58461189]
[73.18951416 -22.41865540]
[70.85402679 -37.23572159]
[68.40829468 -52.03499603]
[65.96257019 -66.83426666]
[63.40673828 -81.61492157]
[51.18908691 -95.39208984]
[57.76273346 -111.66336060]
[54.87746048 -126.38324738]
[44.63016129 -138.43743896]
[49.77486420 -152.41532898]
[46.88959122 -167.13520813]
[36.64229584 -179.18940735]
[41.78699875 -193.16728210]
[38.90172577 -207.88717651]
[34.18006516 -215.70661926]
[36.08478928 -222.84761047]
[33.41899490 -237.60884094]
[30.75319862 -252.37005615]
[28.08740234 -267.13125610]
[13.03801060 -267.58895874]
[-1.58726156 -271.16598511]
[-15.14906025 -277.70596313]
[-27.05452156 -286.92300415]
[-36.78319168 -298.41415405]
[-43.90977097 -311.67709351]
[-48.12271881 -326.13201904]
[-49.23786545 -341.14700317]
[-47.20645523 -356.06570435]
[-42.11729813 -370.23587036]
[-34.19286728 -383.03811646]
[-23.77958679 -393.91271973]
[-11.33267879 -402.38433838]
[2.60372996 -408.08258057]
[17.42040062 -410.75839233]
[32.46961212 -410.29479980]
[47.09347534 -406.71200562]
[60.65270233 -400.16668701]
[72.55453491 -390.94497681]
[82.27868652 -379.45001221]
[89.40004730 -366.18426514]
[93.60730743 -351.72769165]
[94.71654510 -336.71224976]
[92.67926788 -321.79437256]
[87.58453369 -307.62619019]
[79.65506744 -294.82708740]
[69.23751068 -283.95654297]
[56.78726959 -275.48983765]
[42.84862137 -269.79705811]
[45.51441574 -255.03584290]
[48.18021011 -240.27462769]
[50.84600830 -225.51341248]
[53.62161636 -210.77244568]
[56.50688934 -196.05256653]
[66.54781342 -185.05123901]
[61.60948563 -170.02049255]
[64.49475861 -155.30059814]
[74.53568268 -144.29927063]
[69.59735107 -129.26852417]
[72.48262024 -114.54862976]
[82.34342957 -107.54212952]
[84.86766815 -95.30236053]
[78.16795349 -84.28071594]
[82.45014954 -78.25704193]
[80.76184082 -69.27999115]
[83.20756531 -54.48072052]
[85.65329742 -39.68144989]
[89.84532928 -33.59469223]
[88.02355957 -24.64377213]
[90.24867249 -9.80972862]
[99.78834534 1.62897170]
[94.18378448 16.42422295]
[96.40890503 31.25826645]
[98.74439240 46.07533264]
[101.19011688 60.87460327]
[103.63584137 75.67387390]
[106.08157349 90.47314453]
[113.98350525 77.72326660]
[127.82649231 71.94643402]
[142.44743347 75.29726410]
[152.39308167 86.52597809]
[153.95396423 101.44454193]
[146.54789734 114.48870850]
[132.93716431 120.79331970]
[118.19824219 118.00691223]
[107.82786560 107.16769409]
[108.49765015 122.15273285]
[109.16743469 137.13777161]
[109.83721924 152.12280273]
[110.50700378 167.10784912]
[113.73736572 172.87640381]
[113.59147644 178.55758667]
[110.96690369 182.54765320]
[111.19023132 197.54598999]
[111.41355896 212.54432678]
[111.74853516 227.54058838]
[112.19514465 242.53393555]
[118.70515442 229.02024841]
[128.86508179 217.98503113]
[141.79598999 210.38296509]
[156.37922668 206.87167358]
[171.35319519 207.75492859]
[185.42250061 212.95632935]
[197.37001038 222.02589417]
[206.16213989 234.17903137]
[211.03828430 248.36434937]
[211.57659912 263.35467529]
[207.73052979 277.85321045]
[199.83279419 290.60571289]
[188.56661987 300.50891113]
[174.90664673 306.70608521]
[160.03460693 308.66116333]
[145.23707581 306.20495605]
[131.79417419 299.55001831]
[120.86886597 289.27200317]
[113.40628815 276.26007080]
[110.05231476 261.64343262]
[106.29601288 276.16546631]
[102.53971100 290.68753052]
[98.78340912 305.20959473]
[109.88331604 321.95687866]
[105.16101837 341.17156982]
[88.09749603 350.57104492]
[84.99338531 365.24633789]
[81.88927460 379.92166138]
[83.17504883 388.96511841]
[78.62815857 394.79159546]
[75.30590057 409.41903687]
[71.98363495 424.04650879]
[68.66137695 438.67395020]
[65.77610779 453.39385986]
[63.33037949 468.19311523]
[60.88465118 482.99240112]
[58.43892288 497.79165649]
[63.82258606 512.66870117]
[54.11366272 523.96411133]
[51.66793823 538.76336670]
[49.22220993 553.56268311]
[54.60587311 568.43969727]
[44.89694977 579.73510742]
[58.64394379 585.95465088]
[70.31217957 595.52099609]
[79.10608673 607.78186035]
[84.42608643 621.90136719]
[85.90944672 636.91674805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[19 203]
[20 202]
[21 201]
[23 199]
[24 198]
[25 197]
[26 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 190]
[36 189]
[37 188]
[43 185]
[44 184]
[45 183]
[46 182]
[47 162]
[48 161]
[50 160]
[51 159]
[52 158]
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 142]
[59 141]
[60 140]
[61 139]
[63 138]
[64 137]
[66 135]
[67 134]
[68 132]
[69 131]
[70 130]
[71 128]
[73 125]
[74 124]
[76 122]
[77 121]
[79 119]
[80 118]
[82 117]
[83 116]
[84 115]
[85 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
