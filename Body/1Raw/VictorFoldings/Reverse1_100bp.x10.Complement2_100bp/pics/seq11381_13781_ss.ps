%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[145.44332886 578.57708740]
[145.20674133 563.54577637]
[147.38455200 548.67120361]
[151.92033386 534.33862305]
[158.69660950 520.91931152]
[167.53785706 508.76083374]
[178.21505737 498.17813110]
[190.45166016 489.44534302]
[203.93070984 482.78863525]
[199.52970886 468.44879150]
[195.12870789 454.10894775]
[190.72770691 439.76910400]
[186.32670593 425.42926025]
[183.91624451 423.99826050]
[181.92736816 421.52621460]
[180.75946045 418.16891479]
[180.74813843 414.22375488]
[182.11808777 410.10339355]
[178.57841492 395.52703857]
[175.03874207 380.95065308]
[162.22476196 373.44482422]
[158.42739868 358.71273804]
[166.38708496 345.32315063]
[162.84741211 330.74676514]
[150.03344727 323.24093628]
[146.23606873 308.50881958]
[154.19577026 295.11923218]
[150.65609741 280.54287720]
[147.11642456 265.96649170]
[142.92941284 251.56271362]
[138.10340881 237.36026001]
[133.27742004 223.15780640]
[128.45141602 208.95535278]
[117.03071594 199.39411926]
[119.91665649 183.83836365]
[115.09066010 169.63589478]
[110.26466370 155.43344116]
[99.55618286 149.80717468]
[95.41932678 138.01435852]
[100.58647919 126.19644165]
[95.97246552 111.92370605]
[91.04087067 97.75756836]
[76.56923676 86.37103271]
[80.14651489 69.19052124]
[74.69115448 55.21772385]
[69.23580170 41.24492645]
[63.78044128 27.27212715]
[58.32508469 13.29932880]
[52.86972809 -0.67346889]
[48.79333878 -3.93385863]
[46.59502411 -8.02295494]
[46.27595139 -12.08660412]
[47.49811172 -15.39396954]
[42.67211151 -29.59642410]
[37.84611511 -43.79888153]
[33.02011871 -58.00133514]
[28.19412041 -72.20378876]
[16.42823601 -82.78086853]
[19.65936089 -97.32078552]
[14.83336353 -111.52323914]
[10.00736618 -125.72569275]
[1.13670921 -113.62976837]
[-13.84407997 -112.87085724]
[-23.89172173 -124.00839996]
[-21.59946823 -138.83221436]
[-8.65708351 -146.41473389]
[5.39363861 -141.16760254]
[1.63733816 -155.68966675]
[-2.11896253 -170.21171570]
[-5.87526321 -184.73377991]
[-9.63156414 -199.25584412]
[-13.38786411 -213.77789307]
[-17.14416504 -228.29995728]
[-20.90046501 -242.82202148]
[-31.84707451 -254.24490356]
[-27.54347038 -268.50421143]
[-31.29977036 -283.02627563]
[-41.04550934 -271.62362671]
[-56.04125214 -271.98104858]
[-65.23268890 -283.83505249]
[-61.84424210 -298.44732666]
[-48.37374115 -305.04623413]
[-34.75220108 -298.76858521]
[-37.41799927 -313.52978516]
[-47.48469162 -325.73519897]
[-42.13244629 -339.63494873]
[-44.79824448 -354.39617920]
[-59.84413147 -355.33673096]
[-74.22750854 -359.85137939]
[-87.11214447 -367.67758179]
[-97.74893951 -378.36038208]
[-105.51949310 -391.27865601]
[-109.97202301 -405.68139648]
[-110.84767914 -420.73120117]
[-108.09553528 -435.55310059]
[-101.87561798 -449.28540039]
[-92.54952240 -461.12969971]
[-80.65947723 -470.39739990]
[-66.89673615 -476.54968262]
[-52.06145859 -479.22885132]
[-37.01614380 -478.27914429]
[-22.63550758 -473.75579834]
[-9.75562000 -465.92178345]
[0.87469918 -455.23254395]
[8.63741589 -442.30953979]
[13.08121681 -427.90411377]
[13.94774532 -412.85379028]
[11.18662167 -398.03353882]
[4.95837450 -384.30502319]
[-4.37489414 -372.46636963]
[-16.27056122 -363.20590210]
[-30.03702545 -357.06195068]
[-27.37122917 -342.30075073]
[-17.49521065 -331.15115356]
[-22.65678024 -316.19558716]
[-19.99098587 -301.43438721]
[-16.77771187 -286.78259277]
[-13.02140999 -272.26052856]
[-2.34347749 -261.87634277]
[-6.37840652 -246.57832336]
[-2.62210608 -232.05625916]
[1.13419473 -217.53419495]
[4.89049530 -203.01214600]
[8.64679623 -188.49008179]
[12.40309715 -173.96801758]
[16.15939713 -159.44596863]
[19.91569901 -144.92390442]
[24.20982170 -130.55169678]
[29.03582001 -116.34923553]
[33.86181641 -102.14678192]
[45.28251266 -92.58555603]
[42.39657593 -77.02979279]
[47.22257233 -62.82733536]
[52.04857254 -48.62487793]
[56.87456894 -34.42242432]
[61.70056534 -20.21996689]
[66.84252930 -6.12882614]
[72.29788208 7.84397173]
[77.75324249 21.81677055]
[83.20859528 35.78956604]
[88.66395569 49.76236725]
[94.11930847 63.73516464]
[105.06833649 68.87767029]
[109.72763824 80.47399139]
[105.09334564 92.51085663]
[108.33956909 94.59277344]
[110.65235901 98.09546661]
[111.41774750 102.56997681]
[110.24520111 107.30970001]
[114.85920715 121.58242798]
[128.80798340 133.60380554]
[124.46711731 150.60745239]
[129.29312134 164.80990601]
[134.11911011 179.01235962]
[145.88499451 189.58943176]
[142.65386963 204.12934875]
[147.47987366 218.33180237]
[152.30586243 232.53425598]
[157.13186646 246.73670959]
[164.71627808 233.79544067]
[179.19470215 229.87429810]
[192.27322388 237.21949768]
[196.45989990 251.62338257]
[189.35638428 264.83474731]
[175.03190613 269.28552246]
[161.69279480 262.42681885]
[165.23246765 277.00320435]
[168.77214050 291.57955933]
[181.98619080 299.82739258]
[185.36827087 314.66033936]
[177.42379761 327.20709229]
[180.96347046 341.78347778]
[194.17750549 350.03131104]
[197.55960083 364.86422729]
[189.61511230 377.41098022]
[193.15478516 391.98736572]
[196.69445801 406.56372070]
[200.66656494 421.02825928]
[205.06755066 435.36810303]
[209.46855164 449.70794678]
[213.86955261 464.04779053]
[218.27055359 478.38763428]
[233.16317749 476.33688354]
[248.19192505 476.70175171]
[262.96749878 479.47280884]
[277.10717773 484.57827759]
[290.24468994 491.88592529]
[302.03976440 501.20645142]
[312.18688965 512.29846191]
[320.42321777 524.87457275]
[326.53540039 538.60906982]
[330.36514282 553.14624023]
[331.81320190 568.10955811]
[330.84210205 583.11132812]
[327.47702026 597.76300049]
[321.80505371 611.68511963]
[313.97317505 624.51702881]
[304.18423462 635.92633057]
[292.69177246 645.61755371]
[279.79348755 653.33966064]
[265.82348633 658.89257812]
[251.14360046 662.13250732]
[236.13407898 662.97552490]
[221.18371582 661.39978027]
[206.67976379 657.44610596]
[192.99790955 651.21691895]
[180.49252319 642.87353516]
[169.48754883 632.63214111]
[160.26803589 620.75793457]
[153.07278442 607.55853271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[18 177]
[19 176]
[20 175]
[23 172]
[24 171]
[27 168]
[28 167]
[29 166]
[30 159]
[31 158]
[32 157]
[33 156]
[35 154]
[36 153]
[37 152]
[40 150]
[41 149]
[42 145]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[59 130]
[60 129]
[61 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[76 118]
[77 117]
[83 116]
[84 115]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
