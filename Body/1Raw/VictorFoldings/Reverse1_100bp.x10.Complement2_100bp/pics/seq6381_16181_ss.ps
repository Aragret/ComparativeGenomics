%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[77.48131561 566.54345703]
[63.63663483 572.37042236]
[49.16047287 576.37902832]
[34.29053879 578.50354004]
[19.27101517 578.70898438]
[4.34853363 576.99206543]
[-10.23186684 573.38092041]
[-24.23076057 567.93487549]
[-37.41827393 560.74340820]
[-49.57785416 551.92449951]
[-60.50983429 541.62304688]
[-70.03469849 530.00817871]
[-77.99604034 517.27062988]
[-84.26312256 503.61953735]
[-88.73304749 489.27908325]
[-91.33239746 474.48477173]
[-92.01850128 459.47952271]
[-90.78009033 444.50973511]
[-87.63748932 429.82122803]
[-82.64231873 415.65518188]
[-75.87660217 402.24423218]
[-67.45142365 389.80862427]
[-57.50514984 378.55252075]
[-46.20109558 368.66076660]
[-33.72488785 360.29580688]
[-20.28140068 353.59497070]
[-6.09138250 348.66833496]
[8.61215019 345.59680176]
[23.58775330 344.43075562]
[38.58951187 345.18939209]
[41.25531006 330.42816162]
[43.92110443 315.66696167]
[46.58689880 300.90573120]
[49.25269699 286.14453125]
[51.91849136 271.38330078]
[50.43277359 269.00616455]
[49.79915619 265.89727783]
[50.30105972 262.37826538]
[52.10036469 258.86727905]
[55.20744324 255.83412170]
[58.74711609 241.25775146]
[62.28678894 226.68136597]
[54.34230804 214.13462830]
[57.72439194 199.30168152]
[70.93843842 191.05384827]
[74.47811127 176.47747803]
[78.01778412 161.90110779]
[81.55745697 147.32472229]
[84.98851776 132.72239685]
[88.31077576 118.09494019]
[91.63304138 103.46748352]
[90.06100464 99.94596863]
[90.04882812 95.74861908]
[91.86354828 91.58763123]
[95.44406128 88.26802826]
[99.41616058 73.80350494]
[103.38825226 59.33897781]
[107.36035156 44.87445450]
[95.92393494 54.58055496]
[81.30730438 57.95011902]
[66.77583313 54.23036957]
[55.57590866 44.25231171]
[50.20961380 30.24506760]
[51.87578964 15.33789253]
[60.20221329 2.86108780]
[73.32874298 -4.39799738]
[88.32286835 -4.81766462]
[101.83486938 1.69584036]
[110.84613800 13.68738461]
[113.34352112 28.47804832]
[119.62088013 14.85473156]
[125.89823914 1.23141587]
[132.17559814 -12.39190006]
[138.45295715 -26.01521683]
[144.73031616 -39.63853073]
[129.96916199 -36.97244644]
[118.58128357 -46.73545837]
[118.96142578 -61.73064041]
[130.82934570 -70.90410614]
[145.43646240 -67.49350739]
[152.01493835 -54.01467514]
[159.28816223 -67.13336945]
[166.56140137 -80.25205994]
[173.83462524 -93.37075806]
[181.10784912 -106.48944855]
[188.38108826 -119.60814667]
[188.64819336 -126.21421814]
[191.74630737 -130.97853088]
[196.07119751 -133.00447083]
[203.73179626 -145.90078735]
[211.39237976 -158.79711914]
[219.05297852 -171.69345093]
[226.71357727 -184.58976746]
[234.37417603 -197.48609924]
[234.76983643 -213.30235291]
[247.92192078 -220.29321289]
[255.58251953 -233.18952942]
[263.24310303 -246.08586121]
[251.34883118 -255.25556946]
[240.64659119 -265.79214478]
[231.29246521 -277.54193115]
[223.42285156 -290.33358765]
[217.15252686 -303.98059082]
[212.57292175 -318.28387451]
[209.75080872 -333.03491211]
[208.72737122 -348.01858521]
[209.51751709 -363.01635742]
[212.10972595 -377.80950928]
[216.46620178 -392.18237305]
[222.52339172 -405.92526245]
[230.19299316 -418.83786011]
[239.36314392 -430.73178101]
[249.90011597 -441.43362427]
[261.65026855 -450.78732300]
[274.44219971 -458.65646362]
[288.08944702 -464.92626953]
[302.39291382 -469.50534058]
[317.14404297 -472.32690430]
[332.12774658 -473.34976196]
[347.12548828 -472.55908203]
[361.91854858 -469.96630859]
[376.29122925 -465.60931396]
[390.03393555 -459.55160522]
[402.94622803 -451.88150024]
[414.83981323 -442.71090698]
[425.54125977 -432.17355347]
[434.89450073 -420.42306519]
[442.76315308 -407.63079834]
[449.03247070 -393.98333740]
[453.61102295 -379.67968750]
[456.43200684 -364.92843628]
[457.45431519 -349.94470215]
[456.66305542 -334.94699097]
[454.06976318 -320.15402222]
[449.71221924 -305.78152466]
[443.65399170 -292.03906250]
[435.98342896 -279.12704468]
[426.81237793 -267.23379517]
[416.27459717 -256.53274536]
[404.52377319 -247.17993164]
[391.73123169 -239.31175232]
[378.08352661 -233.04295349]
[363.77969360 -228.46495056]
[349.02835083 -225.64451599]
[334.04458618 -224.62274170]
[319.04690552 -225.41458130]
[304.25402832 -228.00843811]
[289.88168335 -232.36651611]
[276.13943481 -238.42526245]
[268.47885132 -225.52893066]
[260.81823730 -212.63261414]
[260.97052002 -197.73878479]
[247.27050781 -189.82550049]
[239.60990906 -176.92916870]
[231.94931030 -164.03285217]
[224.28871155 -151.13652039]
[216.62811279 -138.24018860]
[208.96751404 -125.34386444]
[201.49977112 -112.33491516]
[194.22654724 -99.21622467]
[186.95332336 -86.09752655]
[179.68008423 -72.97883606]
[172.40686035 -59.86013794]
[165.13363647 -46.74144363]
[158.35363770 -33.36117172]
[152.07627869 -19.73785591]
[145.79891968 -6.11453962]
[139.52156067 7.50877666]
[133.24420166 21.13209343]
[126.96683502 34.75540924]
[121.82487488 48.84654999]
[117.85277557 63.31107330]
[113.88068390 77.77559662]
[109.90858459 92.24011993]
[106.26049805 106.78974152]
[102.93824005 121.41720581]
[99.61598206 136.04466248]
[100.76696777 145.10629272]
[96.13383484 150.86439514]
[92.59416199 165.44076538]
[89.05448914 180.01715088]
[85.51481628 194.59352112]
[93.47451782 207.98310852]
[89.67713928 222.71519470]
[76.86316681 230.22103882]
[73.32349396 244.79742432]
[69.78382111 259.37377930]
[66.67971039 274.04910278]
[64.01391602 288.81030273]
[61.34811783 303.57153320]
[58.68232346 318.33273315]
[56.01652527 333.09396362]
[53.35073090 347.85519409]
[67.67020416 352.39181519]
[81.29196167 358.72238159]
[93.99232483 366.74291992]
[105.56273651 376.32174683]
[115.81319427 387.30157471]
[124.57539368 399.50207520]
[131.70542908 412.72290039]
[137.08624268 426.74700928]
[140.62947083 441.34405518]
[142.27691650 456.27438354]
[142.00152588 471.29278564]
[139.80784607 486.15264893]
[135.73187256 500.61001587]
[129.84056091 514.42742920]
[122.23063660 527.37799072]
[113.02705383 539.24908447]
[102.38096619 549.84570312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[40 187]
[41 186]
[42 185]
[45 182]
[46 181]
[47 180]
[48 179]
[49 177]
[50 176]
[51 175]
[55 174]
[56 173]
[57 172]
[58 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[96 151]
[97 150]
[98 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
