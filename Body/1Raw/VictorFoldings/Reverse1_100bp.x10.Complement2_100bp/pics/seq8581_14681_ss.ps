%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[103.55156708 496.72143555]
[99.82836914 482.02743530]
[101.35844421 466.94647217]
[107.95701599 453.29971313]
[118.82728577 442.73501587]
[132.65661621 436.52810669]
[131.54096985 421.56964111]
[130.42532349 406.61120605]
[129.30967712 391.65274048]
[128.19401550 376.69430542]
[127.07837677 361.73583984]
[125.96272278 346.77737427]
[117.00437927 338.64877319]
[115.95249176 326.19577026]
[123.91444397 316.04833984]
[123.02162933 301.07495117]
[122.12881470 286.10153198]
[120.79058075 271.16134644]
[119.00811005 256.26763916]
[117.22564697 241.37391663]
[115.44318390 226.48019409]
[113.66071320 211.58647156]
[111.32522583 196.76940918]
[108.43995667 182.04951477]
[105.55467987 167.32962036]
[102.66941071 152.60974121]
[99.78413391 137.88984680]
[89.74320984 126.88851929]
[94.68154144 111.85777283]
[91.35928345 97.23030853]
[87.60298157 82.70825195]
[83.84667969 68.18618774]
[80.09038544 53.66413116]
[75.26438141 39.46167755]
[69.39542389 25.65749931]
[56.87544250 15.98482513]
[59.01618958 1.24486339]
[46.49620438 -8.42781067]
[48.63695145 -23.16777229]
[42.76799011 -36.97195053]
[36.89903259 -50.77612686]
[21.96146584 -48.70143890]
[7.00749350 -50.56266785]
[-6.94426298 -56.22697830]
[-18.94502068 -65.30268860]
[-28.18034935 -77.16634369]
[-34.02544785 -91.00555420]
[-36.08741379 -105.87461090]
[-34.23162842 -120.75911713]
[-28.59056473 -134.64518738]
[-19.55431366 -146.58850098]
[-7.74363565 -155.77857971]
[-13.61259651 -169.58274841]
[-19.48155785 -183.38693237]
[-25.35051727 -197.19110107]
[-39.73253250 -203.17404175]
[-45.48784637 -217.25703430]
[-39.69540787 -230.93121338]
[-45.56436920 -244.73539734]
[-51.43333054 -258.53958130]
[-57.30229187 -272.34375000]
[-71.63409424 -267.87408447]
[-86.33971405 -264.85360718]
[-101.27301025 -263.31237793]
[-116.28555298 -263.26571655]
[-131.22813416 -264.71405029]
[-145.95225525 -267.64300537]
[-160.31158447 -272.02349854]
[-174.16337585 -277.81195068]
[-187.36999512 -284.95086670]
[-199.80015564 -293.36926270]
[-211.33035278 -302.98348999]
[-221.84596252 -313.69799805]
[-231.24247742 -325.40628052]
[-239.42651367 -337.99200439]
[-246.31672668 -351.33004761]
[-251.84465027 -365.28787231]
[-255.95533752 -379.72674561]
[-258.60794067 -394.50314331]
[-259.77606201 -409.47024536]
[-259.44812012 -424.47927856]
[-257.62738037 -439.38107300]
[-254.33192444 -454.02752686]
[-249.59451294 -468.27307129]
[-243.46223450 -481.97613525]
[-235.99601746 -495.00048828]
[-227.27008057 -507.21673584]
[-217.37113953 -518.50341797]
[-206.39758301 -528.74841309]
[-194.45848083 -537.84985352]
[-181.67248535 -545.71734619]
[-168.16665649 -552.27258301]
[-154.07525635 -557.45050049]
[-139.53831482 -561.19964600]
[-124.70031738 -563.48272705]
[-109.70872498 -564.27703857]
[-94.71255493 -563.57470703]
[-79.86082458 -561.38269043]
[-65.30116272 -557.72277832]
[-51.17826080 -552.63140869]
[-37.63248444 -546.15911865]
[-24.79846573 -538.37023926]
[-12.80375576 -529.34216309]
[-1.76756561 -519.16473389]
[8.20041847 -507.93893433]
[17.00112724 -495.77645874]
[24.54709244 -482.79812622]
[30.76331902 -469.13293457]
[35.58802414 -454.91671753]
[38.97325516 -440.29077148]
[40.88537216 -425.40042114]
[41.30536270 -410.39367676]
[40.22906113 -395.41967773]
[37.66716003 -380.62728882]
[33.64512253 -366.16348267]
[28.20292091 -352.17199707]
[21.39464760 -338.79196167]
[13.28796291 -326.15628052]
[3.96344090 -314.39056396]
[-6.48624611 -303.61175537]
[-17.95724106 -293.92697144]
[-30.33553886 -285.43249512]
[-43.49811554 -278.21270752]
[-37.62915421 -264.40853882]
[-31.76019287 -250.60435486]
[-25.89123154 -236.80018616]
[-12.02491665 -231.48408508]
[-5.87630987 -217.56828308]
[-11.54634094 -203.06007385]
[-5.67738008 -189.25588989]
[0.19158059 -175.45172119]
[6.06054115 -161.64753723]
[20.87325478 -163.77662659]
[35.74374008 -161.99745178]
[49.65761566 -156.42532349]
[61.66418839 -147.43452454]
[70.94140625 -135.63308716]
[76.85214996 -121.82178497]
[78.98799133 -106.93972015]
[77.19738007 -92.00049591]
[71.59642029 -78.02318573]
[62.56133652 -65.96281433]
[50.70320892 -56.64508820]
[56.57217026 -42.84090805]
[62.44112778 -29.03673363]
[74.54132080 -20.35142708]
[72.82036591 -4.62409735]
[84.92056274 4.06120920]
[83.19960022 19.78853798]
[89.06855774 33.59271622]
[92.47362518 18.98430824]
[102.65433502 7.96826982]
[116.94947815 3.42416286]
[131.62234497 6.53980780]
[142.83746338 16.50078201]
[147.66323853 30.70331001]
[144.83824158 45.43488693]
[135.10089111 56.84471130]
[120.99652863 61.95028687]
[106.21199036 59.41702271]
[94.61244202 49.90782928]
[98.36874390 64.42989349]
[102.12504578 78.95195007]
[105.88134003 93.47400665]
[108.36698914 95.23783112]
[110.26578522 97.94506836]
[111.22707367 101.38008118]
[110.98477173 105.20075989]
[109.40143585 108.97249603]
[119.64873505 121.02668762]
[114.50402832 135.00457764]
[117.38930511 149.72445679]
[120.27457428 164.44435120]
[123.15984344 179.16424561]
[126.04512024 193.88414001]
[136.45228577 183.08177185]
[151.40016174 184.33111572]
[159.86973572 196.71118164]
[155.61756897 211.09587097]
[141.77816772 216.88130188]
[128.55442810 209.80401611]
[130.33689880 224.69772339]
[132.11936951 239.59144592]
[133.90182495 254.48516846]
[135.68429565 269.37887573]
[138.40892029 272.75976562]
[139.77827454 276.45968628]
[139.85844421 280.01339722]
[138.85987854 283.02496338]
[137.10221863 285.20870972]
[137.99504089 300.18212891]
[138.88784790 315.15551758]
[149.38177490 330.28692627]
[140.92117310 345.66174316]
[142.03681946 360.62017822]
[143.15248108 375.57864380]
[144.26812744 390.53710938]
[145.38377380 405.49554443]
[146.49942017 420.45401001]
[147.61506653 435.41244507]
[162.21212769 439.49923706]
[174.52931213 448.33453369]
[183.07926941 460.85150146]
[186.82952881 475.53860474]
[185.32725525 490.62234497]
[178.75384521 504.28125000]
[167.90306091 514.86596680]
[154.08518982 521.09832764]
[138.96882629 522.22576904]
[124.37931824 518.11212158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[15 192]
[16 191]
[17 190]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[29 169]
[30 164]
[31 163]
[32 162]
[33 161]
[34 150]
[35 149]
[37 147]
[39 145]
[40 144]
[41 143]
[52 132]
[53 131]
[54 130]
[55 129]
[58 126]
[59 125]
[60 124]
[61 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
