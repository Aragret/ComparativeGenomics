%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[175.97850037 432.69219971]
[183.31228638 419.56924438]
[192.65629578 407.79275513]
[203.76846313 397.66775513]
[216.36097717 389.45648193]
[204.13281250 380.95230103]
[205.61943054 365.20108032]
[199.54559326 351.48580933]
[193.47175598 337.77056885]
[187.39793396 324.05529785]
[181.32409668 310.34002686]
[175.25025940 296.62475586]
[168.87165833 283.04855347]
[162.19145203 269.61816406]
[155.51126099 256.18780518]
[141.35311890 251.70646667]
[134.38713074 238.18132019]
[139.18356323 223.36132812]
[132.50337219 209.93095398]
[125.82317352 196.50057983]
[119.14297485 183.07020569]
[117.08708191 197.92863464]
[108.43685913 210.18316650]
[95.12477875 217.09609985]
[80.12480164 217.12306213]
[66.78796387 210.25802612]
[58.09373856 198.03466797]
[55.98444748 183.18371582]
[60.93130493 169.02290344]
[71.82917786 158.71580505]
[86.24344635 154.56503296]
[100.95392609 157.49789429]
[112.67427826 166.85920715]
[108.27328491 152.51936340]
[103.87228394 138.17950439]
[99.47128296 123.83966064]
[95.07028961 109.49981689]
[88.89451599 95.83014679]
[81.04276276 83.04930115]
[72.81395721 70.50790405]
[64.21539307 58.21706390]
[55.61682892 45.92622757]
[47.01826477 33.63538742]
[38.41970062 21.34455109]
[25.87751961 18.33514595]
[18.96878624 7.92106056]
[20.94267845 -4.01335669]
[12.52805901 -16.43085289]
[4.11344051 -28.84834671]
[-0.58383083 -31.12490845]
[-3.63321781 -34.62555695]
[-4.84439993 -38.51760864]
[-4.38512230 -42.01352310]
[-12.23687744 -54.79436493]
[-20.08863258 -67.57521057]
[-27.94038963 -80.35604858]
[-35.79214478 -93.13689423]
[-45.17313766 -94.08770752]
[-52.94955063 -99.17289734]
[-57.44648361 -107.14609528]
[-57.76547241 -116.15681458]
[-53.96136475 -124.17938995]
[-61.23459244 -137.29808044]
[-68.50782013 -150.41677856]
[-75.78105164 -163.53547668]
[-83.05428314 -176.65417480]
[-97.06276703 -171.22497559]
[-111.68006134 -167.75390625]
[-126.63386536 -166.30561829]
[-141.64559937 -166.90710449]
[-156.43559265 -169.54714966]
[-170.72831726 -174.17658997]
[-184.25752258 -180.70915222]
[-196.77114868 -189.02316284]
[-208.03608704 -198.96372986]
[-217.84248352 -210.34565735]
[-226.00764465 -222.95692444]
[-232.37945557 -236.56257629]
[-236.83920288 -250.90916443]
[-239.30383301 -265.72940063]
[-239.72740173 -280.74719238]
[-238.10203552 -295.68280029]
[-234.45802307 -310.25793457]
[-228.86322021 -324.20111084]
[-221.42187500 -337.25253296]
[-212.27261353 -349.16912842]
[-201.58587646 -359.72882080]
[-189.56076050 -368.73495483]
[-176.42127991 -376.01971436]
[-162.41220093 -381.44738770]
[-147.79452515 -384.91687012]
[-132.84057617 -386.36355591]
[-117.82891083 -385.76043701]
[-103.03919983 -383.11877441]
[-88.74697113 -378.48779297]
[-75.21848297 -371.95376587]
[-62.70574570 -363.63839722]
[-51.44188309 -353.69662476]
[-41.63671875 -342.31362915]
[-33.47292709 -329.70147705]
[-27.10259438 -316.09512329]
[-22.64439011 -301.74807739]
[-20.18136978 -286.92758179]
[-19.75942039 -271.90972900]
[-21.38640022 -256.97430420]
[-25.03200150 -242.39955139]
[-30.62830734 -228.45700073]
[-38.07106400 -215.40635681]
[-47.22161484 -203.49076843]
[-57.90949249 -192.93222046]
[-69.93558502 -183.92739868]
[-62.66235733 -170.80870056]
[-55.38912964 -157.69000244]
[-48.11589813 -144.57131958]
[-40.84267044 -131.45262146]
[-22.29218674 -122.40583038]
[-23.01130104 -100.98864746]
[-15.15954590 -88.20780182]
[-7.30779076 -75.42696381]
[0.54396480 -62.64612198]
[8.39572048 -49.86527634]
[16.53093529 -37.26296616]
[24.94555473 -24.84547043]
[33.36017227 -12.42797470]
[49.53937912 -5.63089848]
[50.71053696 12.74598694]
[59.30910110 25.03682518]
[67.90766144 37.32766342]
[76.50622559 49.61849976]
[85.10478973 61.90933990]
[87.83856964 62.52949905]
[90.49141693 64.26990509]
[92.63540649 67.10517120]
[93.85971832 70.85558319]
[93.82360840 75.19754791]
[101.67536163 87.97838593]
[100.83094025 73.00217438]
[104.83159637 58.54552841]
[113.25514221 46.13408661]
[125.21261597 37.07765961]
[139.44212341 32.33199692]
[154.44197083 32.39791870]
[168.62921143 37.26847076]
[180.50662231 46.42964554]
[188.82075500 58.91464615]
[192.69418335 73.40589905]
[191.71817017 88.37411499]
[185.99568176 102.23965454]
[176.13063049 113.53925323]
[163.16412354 121.08044434]
[148.46452332 124.06738281]
[133.58312988 122.18485260]
[120.09039307 115.63151550]
[109.41013336 105.09881592]
[113.81113434 119.43866730]
[118.21212769 133.77851868]
[122.61312866 148.11836243]
[127.01412964 162.45820618]
[132.57334900 176.38999939]
[139.25354004 189.82037354]
[145.93374634 203.25076294]
[152.61393738 216.68113708]
[167.32656860 221.79742432]
[173.90991211 235.51289368]
[168.94163513 249.50759888]
[175.62184143 262.93798828]
[182.30203247 276.36834717]
[186.65304565 279.25207520]
[189.20739746 283.12872314]
[189.88774109 287.14770508]
[188.96553040 290.55093384]
[195.03935242 304.26620483]
[201.11318970 317.98144531]
[207.18702698 331.69671631]
[213.26086426 345.41198730]
[219.33470154 359.12725830]
[231.99729919 368.61245728]
[230.07624817 383.38265991]
[244.61965942 379.57672119]
[259.58526611 378.15310669]
[274.58544922 379.14874268]
[289.23159790 382.53781128]
[303.14443970 388.23251343]
[315.96350098 396.08538818]
[327.35681152 405.89297485]
[337.02920532 417.40127563]
[344.73016357 430.31216431]
[350.26022339 444.29125977]
[353.47613525 458.97640991]
[354.29461670 473.98730469]
[352.69442749 488.93505859]
[348.71704102 503.43252563]
[342.46548462 517.10418701]
[334.10168457 529.59588623]
[323.84225464 540.58410645]
[311.95300293 549.78417969]
[298.74182129 556.95782471]
[284.55096436 561.91925049]
[269.74798584 564.53985596]
[254.71630859 564.75189209]
[239.84529114 562.54974365]
[225.52015686 557.99053955]
[212.11193848 551.19232178]
[199.96794128 542.33117676]
[189.40272522 531.63665771]
[180.68995667 519.38580322]
[174.05531311 505.89587402]
[169.67066956 491.51635742]
[167.64956665 476.61965942]
[168.04437256 461.59167480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[13 167]
[14 166]
[15 165]
[18 162]
[19 161]
[20 160]
[21 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[38 136]
[39 135]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[47 124]
[48 123]
[49 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
