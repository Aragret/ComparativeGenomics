%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[50.99541473 791.51361084]
[36.44922256 795.24267578]
[21.57275581 797.28930664]
[6.55996466 797.62670898]
[-8.39343071 796.25061035]
[-23.09248161 793.17883301]
[-37.34555435 788.45147705]
[-50.96683502 782.13024902]
[-63.77873611 774.29742432]
[-75.61423492 765.05517578]
[-86.31902313 754.52404785]
[-95.75354767 742.84124756]
[-103.79481506 730.15911865]
[-110.33798218 716.64306641]
[-115.29774475 702.46917725]
[-118.60944366 687.82232666]
[-120.22991180 672.89343262]
[-120.13801575 657.87713623]
[-118.33495331 642.96917725]
[-114.84423828 628.36395264]
[-109.71137238 614.25183105]
[-103.00326538 600.81683350]
[-94.80738831 588.23413086]
[-85.23058319 576.66766357]
[-74.39770508 566.26831055]
[-62.44997787 557.17163086]
[-49.54316711 549.49621582]
[-35.84554291 543.34216309]
[-21.53567886 538.78961182]
[-6.80013466 535.89801025]
[8.16898346 534.70495605]
[23.17651939 535.22613525]
[25.40163803 520.39208984]
[27.62675476 505.55804443]
[20.69125557 495.64715576]
[22.42363358 483.27047729]
[32.43533707 475.13851929]
[34.88106537 460.33923340]
[27.82587624 444.27090454]
[39.62791443 430.13607788]
[41.85303116 415.30203247]
[34.55939102 399.34051514]
[46.14967346 385.03155518]
[48.15368652 370.16601562]
[50.15770340 355.30050659]
[39.39895630 342.37423706]
[41.35645294 325.33065796]
[55.30410385 314.77215576]
[57.08657074 299.87844849]
[58.86903763 284.98471069]
[56.67381668 280.74325562]
[57.11975861 275.07772827]
[60.93272400 269.67654419]
[63.15784073 254.84249878]
[65.38295746 240.00845337]
[63.82712555 237.67660522]
[63.10122299 234.58796692]
[63.49813080 231.05555725]
[65.19210052 227.49255371]
[68.20749664 224.36824036]
[71.31160736 209.69293213]
[61.54407120 196.00228882]
[64.76378632 179.15151978]
[79.45811462 169.65962219]
[82.34338379 154.93972778]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.34490204 42.30139160]
[104.12736511 27.40767288]
[105.90983582 12.51395607]
[96.41543579 0.16510354]
[98.43527222 -14.91385174]
[110.26653290 -23.88920784]
[112.04899597 -38.78292465]
[113.72053528 -53.68949890]
[115.28105927 -68.60810089]
[116.84158325 -83.52671051]
[118.29100037 -98.45652008]
[119.62923431 -113.39670563]
[113.15397644 -127.83213043]
[121.99589539 -139.81835938]
[123.33412933 -154.75854492]
[116.85887909 -169.19398499]
[125.70079041 -181.18020630]
[127.03902435 -196.12039185]
[128.26600647 -211.07012939]
[129.38165283 -226.02857971]
[130.49729919 -240.98703003]
[123.80783844 -255.32446289]
[132.47032166 -267.44100952]
[133.58596802 -282.39944458]
[134.70161438 -297.35791016]
[135.81726074 -312.31637573]
[136.93292236 -327.27481079]
[123.00839996 -333.22348022]
[111.77155304 -343.37295532]
[104.44125366 -356.62231445]
[101.81265259 -371.53436279]
[104.17087555 -386.49154663]
[111.26012421 -399.87142944]
[122.31139374 -410.22268677]
[136.12594604 -416.42242432]
[151.20526123 -417.79821777]
[165.91366577 -414.20077515]
[178.65570068 -406.02032471]
[188.04919434 -394.14425659]
[193.07521057 -379.86077881]
[193.18858337 -364.71926880]
[188.37698364 -350.36212158]
[179.16236877 -338.34674072]
[166.54426575 -329.97644043]
[151.89137268 -326.15917969]
[150.77572632 -311.20071411]
[149.66006470 -296.24227905]
[148.54441833 -281.28381348]
[147.42877197 -266.32534790]
[154.19802856 -253.05786133]
[145.45574951 -239.87138367]
[144.34010315 -224.91293335]
[143.22445679 -209.95448303]
[145.86175537 -203.05039978]
[141.97921753 -194.78216553]
[140.64097595 -179.84197998]
[147.21195984 -166.47517395]
[138.27432251 -153.42031860]
[136.93608093 -138.48013306]
[143.50706482 -125.11331940]
[134.56942749 -112.05847168]
[133.23118591 -97.11828613]
[135.76541138 -90.17569733]
[131.76019287 -81.96618652]
[130.19966125 -67.04758453]
[128.63914490 -52.12897491]
[131.06971741 -45.14942551]
[126.94271088 -37.00045776]
[125.16024780 -22.10674286]
[134.53938293 -10.59294701]
[132.94387817 4.53679180]
[120.80355072 14.29642200]
[119.02108765 29.19013977]
[117.23861694 44.08385468]
[118.86318970 46.36834717]
[119.68073273 49.43400192]
[119.38917542 52.97665787]
[117.80203247 56.58851624]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[101.43467712 151.86575317]
[97.06327820 157.82501221]
[94.17800903 172.54489136]
[102.92903900 182.78375244]
[104.16720581 196.00030518]
[97.66356659 207.34864807]
[85.98690796 212.79704285]
[82.88279724 227.47235107]
[80.21700287 242.23356628]
[77.99188232 257.06762695]
[75.76676941 271.90164185]
[73.76275635 286.76718140]
[71.98028564 301.66088867]
[70.19782257 316.55462646]
[79.68614960 326.11422729]
[81.90388489 339.20208740]
[76.26231384 351.00271606]
[65.02323151 357.30450439]
[63.01921844 372.17004395]
[61.01520157 387.03555298]
[68.20037842 397.74707031]
[66.22518921 410.08734131]
[56.68707657 417.52716064]
[54.46195602 432.36120605]
[61.48685455 443.17846680]
[59.32815933 455.48797607]
[49.68033600 462.78497314]
[47.23460770 477.58422852]
[54.11654663 494.66406250]
[42.46080017 507.78314209]
[40.23567963 522.61718750]
[38.01056290 537.45123291]
[52.51052094 541.35626221]
[66.47081757 546.88867188]
[79.70944214 553.97644043]
[92.05381775 562.52716064]
[103.34299469 572.42926025]
[113.42980957 583.55377197]
[122.18274689 595.75555420]
[129.48770142 608.87554932]
[135.24943542 622.74279785]
[139.39283752 637.17645264]
[141.86389160 651.98834229]
[142.63037109 666.98535156]
[141.68229675 681.97198486]
[139.03201294 696.75280762]
[134.71408081 711.13519287]
[128.78479004 724.93164062]
[121.32145691 737.96221924]
[112.42136383 750.05712891]
[102.20053864 761.05859375]
[90.79224396 770.82324219]
[78.34520721 779.22381592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 189]
[33 188]
[34 187]
[37 185]
[38 184]
[40 181]
[41 180]
[43 177]
[44 176]
[45 175]
[48 171]
[49 170]
[50 169]
[53 168]
[54 167]
[55 166]
[60 165]
[61 164]
[64 160]
[65 159]
[66 157]
[67 156]
[68 155]
[70 153]
[71 152]
[72 151]
[73 146]
[74 145]
[75 144]
[78 141]
[79 140]
[80 138]
[81 137]
[82 136]
[83 134]
[84 133]
[86 131]
[87 130]
[89 128]
[90 127]
[91 125]
[92 124]
[93 123]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
