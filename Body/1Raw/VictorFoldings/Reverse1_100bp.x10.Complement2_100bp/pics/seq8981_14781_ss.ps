%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[36.96916580 653.38647461]
[22.17081642 656.07879639]
[7.12954855 656.08532715]
[-7.67112350 653.40576172]
[-21.75541878 648.12634277]
[-34.67058945 640.41674805]
[-46.00145721 630.52478027]
[-55.38379288 618.76843262]
[-62.51598358 605.52563477]
[-67.16876221 591.22204590]
[-69.19256592 576.31756592]
[-68.52233124 561.29125977]
[-65.17960358 546.62609863]
[-59.27184677 532.79364014]
[-50.98896027 520.23840332]
[-40.59720993 509.36404419]
[-28.43064308 500.52014160]
[-14.88036919 493.99099731]
[-0.38197121 489.98648071]
[14.59848595 488.63531494]
[15.93672085 473.69512939]
[17.27495384 458.75494385]
[7.55717230 447.52548218]
[8.70150375 432.35494995]
[20.54586029 422.23818970]
[21.88409615 407.29800415]
[23.22233009 392.35781860]
[24.56056404 377.41763306]
[25.89879799 362.47744751]
[16.93755531 374.50640869]
[3.89851189 381.92150879]
[-11.02102184 383.47311401]
[-25.30684471 378.89978027]
[-36.55154037 368.97219849]
[-42.86018753 355.36334229]
[-43.16966248 340.36654663]
[-37.42781067 326.50900269]
[-26.60224342 316.12600708]
[-12.51725388 310.96722412]
[2.45358968 311.90200806]
[15.78743649 318.77285767]
[25.23729897 330.42190552]
[29.21081161 344.88772583]
[33.39782333 330.48391724]
[31.92354584 325.94128418]
[33.28727341 320.42428589]
[37.92987061 315.71707153]
[42.54388046 301.44433594]
[39.09663391 286.95416260]
[50.70373917 276.20306396]
[55.31774521 261.93032837]
[54.38414001 254.59889221]
[60.10815811 247.48036194]
[64.93415833 233.27790833]
[69.65428925 219.03991699]
[74.26830292 204.76718140]
[78.88230896 190.49444580]
[82.20456696 175.86698914]
[84.20858002 161.00146484]
[86.21259308 146.13594055]
[88.21660614 131.27040100]
[90.22062683 116.40487671]
[81.51935577 104.81893158]
[83.45516968 90.45930481]
[94.91384888 81.59111023]
[96.91786194 66.72557831]
[98.92187500 51.86005020]
[100.92588806 36.99452209]
[102.92990112 22.12899399]
[100.94567871 17.30095673]
[101.00580597 12.65879345]
[102.69714355 8.95009613]
[105.36969757 6.65014505]
[108.03549957 -8.11107254]
[99.13299561 -18.21849823]
[97.69818878 -31.41515541]
[104.03214264 -42.85906601]
[115.62638855 -48.48071671]
[118.51166534 -63.20060730]
[113.57333374 -78.23136139]
[123.61425781 -89.23268127]
[126.49952698 -103.95257568]
[129.38479614 -118.67246246]
[124.44647217 -133.70321655]
[134.48739624 -144.70454407]
[137.37266541 -159.42442322]
[135.59478760 -165.79237366]
[137.07719421 -171.27867126]
[140.56921387 -174.53671265]
[143.89146423 -189.16418457]
[147.21372986 -203.79164124]
[142.72511292 -218.96275330]
[153.08912659 -229.66024780]
[148.60050964 -244.83135986]
[158.96453857 -255.52885437]
[162.28680420 -270.15631104]
[164.84263611 -284.93698120]
[166.62509155 -299.83068848]
[168.40756226 -314.72439575]
[170.19003296 -329.61813354]
[156.45228577 -335.95291138]
[145.34585571 -346.22436523]
[137.95881653 -359.42611694]
[135.01490784 -374.26489258]
[136.80250549 -389.28686523]
[143.14651489 -403.02035522]
[153.42538452 -414.11990356]
[166.63211060 -421.49807739]
[181.47282410 -424.43203735]
[196.49360657 -422.63436890]
[210.22283936 -416.28118896]
[221.31550598 -405.99487305]
[228.68482971 -392.78320312]
[231.60885620 -377.94052124]
[229.80111694 -362.92095947]
[223.43872070 -349.19598389]
[213.14498901 -338.11022949]
[199.92839050 -330.74972534]
[185.08374023 -327.83566284]
[183.30128479 -312.94192505]
[181.51881409 -298.04821777]
[179.73634338 -283.15451050]
[191.47373962 -292.49441528]
[206.47140503 -292.23025513]
[217.87263489 -282.48284912]
[220.46492004 -267.70855713]
[213.06311035 -254.66197205]
[199.05122375 -249.30783081]
[184.83528137 -254.09397888]
[176.91426086 -266.83404541]
[173.59199524 -252.20658875]
[178.31825256 -238.08172607]
[167.71659851 -226.33798218]
[172.44284058 -212.21311951]
[161.84118652 -200.46937561]
[158.51893616 -185.84191895]
[155.19667053 -171.21446228]
[152.09255981 -156.53915405]
[149.20729065 -141.81925964]
[154.35198975 -127.84137726]
[144.10469055 -115.78719330]
[141.21942139 -101.06729889]
[138.33415222 -86.34740448]
[143.47885132 -72.36952209]
[133.23155212 -60.31533432]
[130.34628296 -45.59544373]
[140.31657410 -32.05173111]
[137.34809875 -15.15489674]
[122.79671478 -5.44527674]
[120.13092041 9.31593990]
[117.79543304 24.13300896]
[115.79141998 38.99853516]
[113.78740692 53.86406326]
[111.78339386 68.72959137]
[109.77937317 83.59512329]
[118.48064423 95.18106842]
[116.54483032 109.54069519]
[105.08615112 118.40888977]
[103.08213806 133.27441406]
[101.07812500 148.13995361]
[99.07411194 163.00547791]
[97.07009888 177.87100220]
[106.81050110 166.46379089]
[120.50054932 160.33334351]
[135.49691772 160.66334534]
[148.90403748 167.39009094]
[158.13320923 179.21473694]
[161.40242004 193.85415649]
[158.08042908 208.48167419]
[148.80867004 220.27296448]
[135.37738037 226.95130920]
[120.37992096 227.22723389]
[106.71206665 221.04743958]
[97.01287079 209.60516357]
[93.15504456 195.10845947]
[88.54103088 209.38119507]
[83.92702484 223.65393066]
[84.26498413 232.78210449]
[79.13661194 238.10391235]
[74.31061554 252.30636597]
[69.59047699 266.54434204]
[64.97647095 280.81707764]
[68.09368896 296.32815552]
[56.81661224 306.05834961]
[52.20260239 320.33108521]
[47.80160522 334.67092896]
[43.61459351 349.07470703]
[40.83898163 363.81567383]
[39.50074768 378.75585938]
[38.16251373 393.69604492]
[36.82427979 408.63623047]
[35.48604584 423.57641602]
[45.34390640 435.63711548]
[43.77391815 450.76953125]
[32.21514130 460.09317017]
[30.87690544 475.03335571]
[29.53867149 489.97354126]
[44.04052734 493.96551514]
[57.59644318 500.48294067]
[69.77065277 509.31631470]
[80.17180634 520.18164062]
[88.46554565 532.72973633]
[94.38526917 546.55712891]
[97.74067688 561.21936035]
[98.42391205 576.24505615]
[96.41300201 591.15130615]
[91.77259064 605.45886230]
[84.65185547 618.70782471]
[75.27969360 630.47229004]
[63.95738602 640.37408447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 197]
[21 196]
[22 195]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[43 187]
[44 186]
[47 185]
[48 184]
[50 182]
[51 181]
[53 180]
[54 179]
[55 177]
[56 176]
[57 175]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[73 150]
[74 149]
[78 146]
[79 145]
[81 143]
[82 142]
[83 141]
[85 139]
[86 138]
[89 137]
[90 136]
[91 135]
[93 133]
[95 131]
[96 130]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
