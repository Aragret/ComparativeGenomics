%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[25.91556740 845.07592773]
[11.00400448 846.73553467]
[-3.97514415 847.59234619]
[-18.97868919 847.64392090]
[-33.96337509 846.89007568]
[-48.88599014 845.33294678]
[-63.70351410 842.97711182]
[-78.37322235 839.82928467]
[-92.85281372 835.89862061]
[-107.10054779 831.19635010]
[-121.07534027 825.73614502]
[-134.73690796 819.53363037]
[-148.04583740 812.60681152]
[-160.96377563 804.97552490]
[-173.45346069 796.66186523]
[-185.47889709 787.68981934]
[-197.00541687 778.08520508]
[-207.99975586 767.87573242]
[-218.43025208 757.09088135]
[-228.26679993 745.76165771]
[-237.48106384 733.92077637]
[-246.04644775 721.60235596]
[-253.93827820 708.84191895]
[-261.13381958 695.67633057]
[-267.61227417 682.14343262]
[-273.35498047 668.28234863]
[-278.34539795 654.13293457]
[-282.56912231 639.73614502]
[-286.01400757 625.13330078]
[-288.67007446 610.36663818]
[-290.52969360 595.47869873]
[-291.58749390 580.51239014]
[-291.84042358 565.51092529]
[-291.28775024 550.51745605]
[-289.93109131 535.57525635]
[-287.77432251 520.72747803]
[-284.82369995 506.01684570]
[-281.08770752 491.48577881]
[-276.57711792 477.17623901]
[-271.30493164 463.12939453]
[-265.28637695 449.38583374]
[-258.53875732 435.98510742]
[-251.08158875 422.96591187]
[-242.93632507 410.36575317]
[-234.12648010 398.22097778]
[-224.67744446 386.56658936]
[-214.61645508 375.43621826]
[-203.97253418 364.86190796]
[-192.77635193 354.87417603]
[-181.06021118 345.50183105]
[-168.85787964 336.77188110]
[-156.20454407 328.70947266]
[-143.13668823 321.33789062]
[-129.69198608 314.67837524]
[-115.90921783 308.75015259]
[-101.82809448 303.57025146]
[-87.48924255 299.15368652]
[-72.93399048 295.51312256]
[-58.20430374 292.65908813]
[-43.34266281 290.59982300]
[-28.39190865 289.34121704]
[-13.39515209 288.88696289]
[1.60436738 289.23834229]
[16.56340218 290.39434814]
[31.43882179 292.35162354]
[46.18773651 295.10452271]
[49.72740936 280.52816772]
[53.26708221 265.95178223]
[56.80675507 251.37541199]
[60.34642792 236.79902649]
[54.50588608 220.25047302]
[67.32653809 207.03257751]
[70.64879608 192.40512085]
[73.97105408 177.77766418]
[77.29331207 163.15020752]
[80.61557770 148.52273560]
[79.03160858 141.30381775]
[84.09771729 133.70300293]
[87.63739014 119.12663269]
[79.98055267 110.85743713]
[77.22595215 99.92954254]
[80.04811859 89.01889801]
[87.75597382 80.79724121]
[98.46207428 77.27783203]
[102.43417358 62.81330872]
[106.40626526 48.34878540]
[109.83732605 33.74646378]
[112.72260284 19.02657127]
[115.60787201 4.30668068]
[118.49314880 -10.41321087]
[111.95827484 -21.53338242]
[114.66445923 -33.73421478]
[124.62849426 -40.59312439]
[127.73260498 -55.26842880]
[130.83671570 -69.94373322]
[133.94082642 -84.61903381]
[135.83410645 -99.49906921]
[136.50390625 -114.48410797]
[137.17369080 -129.46914673]
[123.26799774 -135.55160522]
[112.50132751 -146.24942017]
[106.32978058 -160.11579895]
[105.58799744 -175.27542114]
[110.37631226 -189.67808533]
[120.04713440 -201.37593079]
[133.29257202 -208.78692627]
[148.32127380 -210.90881348]
[163.10075378 -207.45460510]
[175.63218689 -198.89144897]
[184.22080994 -186.37745667]
[187.70509338 -171.60504150]
[185.61378479 -156.57205200]
[178.22975159 -143.31156921]
[166.55160522 -133.61695862]
[152.15872192 -128.79936218]
[151.48893738 -113.81432343]
[150.81915283 -98.82928467]
[159.82179260 -110.82730865]
[173.32910156 -117.35053253]
[188.32353210 -116.94165039]
[201.45527649 -109.69201660]
[209.79066467 -97.22120667]
[211.46757507 -82.31523132]
[206.11135864 -68.30413055]
[194.91860962 -58.31801605]
[180.38983154 -54.58781433]
[165.77076721 -57.94685745]
[154.32737732 -67.64472961]
[148.61611938 -81.51492310]
[145.51200867 -66.83962250]
[142.40789795 -52.16431808]
[139.30378723 -37.48901367]
[145.63446045 -21.12168121]
[133.21304321 -7.52793789]
[130.32775879 7.19195318]
[127.44248962 21.91184425]
[124.55722046 36.63173676]
[138.27236938 30.55763245]
[151.64248657 37.35763168]
[154.81161499 52.01903152]
[145.44360352 63.73398972]
[130.44418335 63.86667633]
[120.87078857 52.32088089]
[116.89869690 66.78540802]
[112.92659760 81.24993134]
[122.50581360 96.51427460]
[117.99295807 113.96121216]
[102.21376801 122.66630554]
[98.67409515 137.24267578]
[95.24303436 151.84500122]
[91.92077637 166.47245789]
[88.59851837 181.09991455]
[85.27625275 195.72738647]
[81.95399475 210.35484314]
[88.15488434 221.66465759]
[85.08663177 233.77949524]
[74.92279816 240.33869934]
[71.38313293 254.91508484]
[67.84346008 269.49145508]
[64.30378723 284.06784058]
[60.76411057 298.64419556]
[75.13298035 302.96212769]
[89.24936676 308.04513550]
[103.07256317 313.87850952]
[116.56271362 320.44546509]
[129.68092346 327.72705078]
[142.38937378 335.70227051]
[154.65141296 344.34817505]
[166.43170166 353.63977051]
[177.69625854 363.55032349]
[188.41259766 374.05120850]
[198.54985046 385.11221313]
[208.07876587 396.70138550]
[216.97187805 408.78530884]
[225.20353699 421.32919312]
[232.75001526 434.29681396]
[239.58955383 447.65084839]
[245.70243835 461.35272217]
[251.07102966 475.36297607]
[255.67987061 489.64120483]
[259.51565552 504.14624023]
[262.56732178 518.83624268]
[264.82604980 533.66888428]
[266.28540039 548.60137939]
[266.94110107 563.59069824]
[266.79125977 578.59356689]
[265.83636475 593.56677246]
[264.07910156 608.46716309]
[261.52459717 623.25170898]
[258.18014526 637.87786865]
[254.05548096 652.30340576]
[249.16241455 666.48675537]
[243.51510620 680.38696289]
[237.12980652 693.96405029]
[230.02494812 707.17883301]
[222.22099304 719.99316406]
[213.74046326 732.37011719]
[204.60780334 744.27404785]
[194.84934998 755.67065430]
[184.49322510 766.52697754]
[173.56930542 776.81176758]
[162.10908508 786.49536133]
[150.14558411 795.54986572]
[137.71333313 803.94915771]
[124.84815216 811.66900635]
[111.58713531 818.68713379]
[97.96852875 824.98339844]
[84.03159332 830.53955078]
[69.81651306 835.33959961]
[55.36427689 839.36975098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[78 149]
[79 148]
[84 145]
[85 144]
[86 143]
[87 137]
[88 136]
[89 135]
[90 134]
[93 132]
[94 131]
[95 130]
[96 129]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
