%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[16.93246078 297.33334351]
[18.99694252 312.20153809]
[19.68074226 327.19677734]
[18.97802353 342.19113159]
[16.89478111 357.05667114]
[13.44879341 371.66659546]
[8.66945648 385.89624023]
[2.59754944 399.62417603]
[-4.71512413 412.73333740]
[-13.20617390 425.11181641]
[-22.80315590 436.65402222]
[-33.42419052 447.26147461]
[-44.97865677 456.84368896]
[-57.36798096 465.31890869]
[-70.48645782 472.61480713]
[-84.22216034 478.66915894]
[-98.45789337 483.43029785]
[-113.07220459 486.85760498]
[-127.94041443 488.92184448]
[-142.93565369 489.60540771]
[-157.93000793 488.90243530]
[-172.79553223 486.81893921]
[-187.40539551 483.37271118]
[-201.63494873 478.59313965]
[-215.36280823 472.52099609]
[-228.47181702 465.20809937]
[-240.85015869 456.71685791]
[-252.39219666 447.11968994]
[-262.99948120 436.49847412]
[-272.58151245 424.94384766]
[-281.05651855 412.55438232]
[-288.35220337 399.43579102]
[-294.40634155 385.69998169]
[-299.16723633 371.46417236]
[-302.59429932 356.84979248]
[-304.65829468 341.98153687]
[-305.34158325 326.98629761]
[-304.63836670 311.99194336]
[-302.55462646 297.12646484]
[-299.10815430 282.51666260]
[-294.32833862 268.28720093]
[-288.25598145 254.55943298]
[-280.94287109 241.45054626]
[-272.45141602 229.07235718]
[-262.85403442 217.53045654]
[-252.23265076 206.92335510]
[-240.67787170 197.34152222]
[-228.28826904 188.86671448]
[-215.16954041 181.57124329]
[-201.43363953 175.51734924]
[-187.19775391 170.75668335]
[-172.58331299 167.32986450]
[-157.71504211 165.26612854]
[-142.71977234 164.58306885]
[-127.72544861 165.28654480]
[-112.86000061 167.37052917]
[-98.25025177 170.81724548]
[-84.02085114 175.59729004]
[-70.29320526 181.66989136]
[-57.18443298 188.98321533]
[-44.80638123 197.47488403]
[-33.26465225 207.07244873]
[-22.65771866 217.69400024]
[-11.11141682 208.11888123]
[0.43488520 198.54376221]
[11.98118687 188.96864319]
[23.52748871 179.39352417]
[34.09453583 168.74751282]
[36.15330505 153.99588013]
[50.87561798 148.20243835]
[60.36451721 136.58517456]
[69.85341644 124.96790314]
[79.34231567 113.35063934]
[88.83121490 101.73337555]
[74.04062653 104.23109436]
[60.55576324 97.66158295]
[53.40614319 84.47511292]
[55.25839615 69.58991241]
[65.42168427 58.55779648]
[80.10533905 55.49346542]
[93.83273315 61.53984070]
[101.48388672 74.44177246]
[100.20465088 89.38824463]
[111.00680542 78.98087311]
[121.80895996 68.57349396]
[132.37600708 57.92749023]
[136.26487732 42.59167480]
[150.63868713 38.68742752]
[160.96534729 27.80809212]
[171.29202271 16.92875671]
[181.61868286 6.04942322]
[191.94535828 -4.82991123]
[201.34750366 -16.51749229]
[209.76213074 -28.93498802]
[218.17674255 -41.35248184]
[226.59136963 -53.76997757]
[215.11036682 -63.44491196]
[204.70358276 -74.26695251]
[195.48504639 -86.11753082]
[187.55574036 -98.86680603]
[181.00256348 -112.37508392]
[175.89730835 -126.49436188]
[172.29589844 -141.06994629]
[170.23782349 -155.94213867]
[169.74560547 -170.94798279]
[170.82464600 -185.92306519]
[173.46311951 -200.70333862]
[177.63212585 -215.12683105]
[183.28598022 -229.03550720]
[190.36274719 -242.27700806]
[198.78486633 -254.70623779]
[208.46008301 -266.18698120]
[219.28237915 -276.59350586]
[231.13317871 -285.81176758]
[243.88264465 -293.74075317]
[257.39108276 -300.29360962]
[271.51046753 -305.39852905]
[286.08615112 -308.99957275]
[300.95837402 -311.05728149]
[315.96423340 -311.54913330]
[330.93930054 -310.46972656]
[345.71951294 -307.83090210]
[360.14291382 -303.66156006]
[374.05145264 -298.00735474]
[387.29278564 -290.93026733]
[399.72180176 -282.50784302]
[411.20233154 -272.83236694]
[421.60858154 -262.00979614]
[430.82653809 -250.15878296]
[438.75521851 -237.40913391]
[445.30773926 -223.90052795]
[450.41232300 -209.78100586]
[454.01300049 -195.20524597]
[456.07037354 -180.33296204]
[456.56185913 -165.32708740]
[455.48208618 -150.35205078]
[452.84289551 -135.57191467]
[448.67318726 -121.14862823]
[443.01864624 -107.24021149]
[435.94125366 -93.99906158]
[427.51852417 -81.57024384]
[417.84277344 -70.08995056]
[407.01995850 -59.68395615]
[395.16870117 -50.46627808]
[382.41885376 -42.53790665]
[368.91009521 -35.98571396]
[354.79046631 -30.88148689]
[340.21459961 -27.28114891]
[325.34228516 -25.22414970]
[310.33639526 -24.73302650]
[295.36138916 -25.81315804]
[280.58129883 -28.45271301]
[266.15811157 -32.62276840]
[252.24984741 -38.27763748]
[239.00886536 -45.35536194]
[230.59423828 -32.93786621]
[222.17962646 -20.52036858]
[213.76499939 -8.10287380]
[227.71612549 -13.61343288]
[242.63969421 -12.10117912]
[255.20176697 -3.90395331]
[262.59591675 9.14696312]
[263.17028809 24.13596153]
[256.79656982 37.71446228]
[244.89866638 46.84899521]
[230.13458252 49.49887848]
[215.80267334 45.07212448]
[205.10470581 34.55767822]
[200.43064880 20.30449677]
[202.82469177 5.49675751]
[192.49801636 16.37609100]
[182.17135620 27.25542641]
[171.84468079 38.13476181]
[161.51802063 49.01409531]
[158.36778259 63.57174683]
[143.25534058 68.25415802]
[142.98123169 71.76943970]
[140.99084473 75.32659912]
[137.28303528 78.12042999]
[132.21633911 79.37565613]
[121.41417694 89.78302765]
[110.61202240 100.19039917]
[100.44847107 111.22227478]
[90.95957947 122.83953857]
[81.47068024 134.45680237]
[71.98178101 146.07406616]
[62.49288177 157.69132996]
[59.75540161 173.27391052]
[45.71179962 178.23641968]
[59.87815857 173.30546570]
[74.83197784 174.48159790]
[88.05327606 181.56658936]
[97.31403351 193.36653137]
[101.05364990 207.89289856]
[98.64192963 222.69773865]
[90.48529816 235.28620911]
[77.95828247 243.53689575]
[63.17190933 246.05943298]
[48.61794281 242.42872620]
[36.74898148 233.25660706]
[29.56515121 220.08874512]
[28.27705765 205.14414978]
[33.10260773 190.93983459]
[21.55630684 200.51495361]
[10.01000500 210.09007263]
[-1.53629673 219.66519165]
[-13.08259869 229.24031067]
[-4.60717440 241.62948608]
[2.68895221 254.74784851]
[8.74353313 268.48342896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 207]
[64 206]
[65 205]
[66 204]
[67 203]
[68 189]
[70 187]
[71 186]
[72 185]
[73 184]
[74 183]
[83 182]
[84 181]
[85 180]
[86 176]
[88 174]
[89 173]
[90 172]
[91 171]
[92 170]
[93 158]
[94 157]
[95 156]
[96 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
