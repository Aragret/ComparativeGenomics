%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[35.92485046 626.00518799]
[19.54206085 625.27294922]
[12.22598553 610.59619141]
[21.50277710 597.07312012]
[22.17256165 582.08807373]
[22.84234810 567.10302734]
[23.51213264 552.11798096]
[24.18191719 537.13293457]
[24.85170364 522.14788818]
[25.52148819 507.16287231]
[26.19127274 492.17782593]
[26.86105919 477.19281006]
[24.35645294 473.12634277]
[24.37977600 467.44335938]
[27.78046036 461.77352905]
[28.89610863 446.81506348]
[30.01175690 431.85662842]
[31.12740517 416.89816284]
[32.24305344 401.93969727]
[33.35870361 386.98126221]
[23.19376755 398.01184082]
[8.70611000 401.89874268]
[-5.61511040 397.43750000]
[-15.33230782 386.01049805]
[-17.43450165 371.15853882]
[-11.27030754 357.48364258]
[1.25023520 349.22314453]
[16.24749947 348.93661499]
[29.07441711 356.71286011]
[35.75647736 370.14260864]
[38.86058807 355.46728516]
[41.96469879 340.79199219]
[45.06880951 326.11669922]
[40.13278198 312.06375122]
[50.55841446 300.16348267]
[53.66252518 285.48815918]
[56.76663589 270.81286621]
[59.87074661 256.13757324]
[62.97485733 241.46226501]
[58.03882980 227.40933228]
[68.46446228 215.50904846]
[71.56857300 200.83374023]
[74.67268372 186.15844727]
[77.77679443 171.48313904]
[80.88090515 156.80783081]
[83.98501587 142.13253784]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[83.96182251 102.67506409]
[86.28707123 91.26303101]
[95.64781189 84.33355713]
[90.93381500 69.23094177]
[101.13742065 58.38033676]
[104.24153137 43.70503235]
[107.34564209 29.02973175]
[109.79136658 14.23046017]
[111.57383728 -0.66325730]
[109.48636627 -9.55596733]
[113.49531555 -15.76484013]
[115.49932861 -30.63036919]
[109.67510986 -45.34053421]
[119.04341888 -56.91999817]
[121.04743195 -71.78553009]
[123.05145264 -86.65105438]
[125.05546570 -101.51658630]
[127.05947876 -116.38211060]
[129.06349182 -131.24763489]
[131.06750488 -146.11317444]
[117.68510437 -153.19389343]
[107.55171204 -164.40489197]
[101.87606049 -178.38012695]
[101.32526398 -193.42561340]
[105.94652557 -207.72474670]
[115.16371918 -219.55766296]
[127.84915161 -227.50805664]
[142.46153259 -230.63272095]
[144.46554565 -245.49824524]
[146.46955872 -260.36376953]
[148.47358704 -275.22930908]
[150.47760010 -290.09484863]
[152.48161316 -304.96035767]
[153.93103027 -319.89016724]
[154.82383728 -334.86358643]
[155.71665955 -349.83697510]
[156.60946655 -364.81039429]
[141.87348938 -367.73687744]
[127.67325592 -372.64273071]
[114.27333832 -379.43652344]
[101.92335510 -387.99176025]
[90.85338593 -398.14898682]
[81.26965332 -409.71902466]
[73.35069275 -422.48632812]
[67.24404144 -436.21304321]
[63.06345749 -450.64343262]
[60.88681412 -465.50869751]
[60.75467300 -480.53189087]
[62.66948700 -495.43313599]
[66.59558868 -509.93484497]
[72.45983887 -523.76684570]
[80.15298462 -536.67144775]
[89.53171539 -548.40832520]
[100.42130280 -558.75872803]
[112.61888123 -567.52984619]
[125.89721680 -574.55828857]
[140.00895691 -579.71319580]
[154.69119263 -582.89843750]
[169.67039490 -584.05468750]
[184.66752625 -583.16046143]
[199.40321350 -580.23242188]
[213.60290527 -575.32501221]
[227.00209045 -568.52972412]
[239.35115051 -559.97320557]
[250.42001343 -549.81475830]
[260.00250244 -538.24371338]
[267.92007446 -525.47552490]
[274.02523804 -511.74816895]
[278.20425415 -497.31729126]
[280.37930298 -482.45181274]
[280.50979614 -467.42858887]
[278.59338379 -452.52755737]
[274.66571045 -438.02627563]
[268.79995728 -424.19491577]
[261.10540771 -411.29110718]
[251.72541809 -399.55529785]
[240.83471680 -389.20608521]
[228.63618469 -380.43627930]
[215.35708618 -373.40924072]
[201.24479675 -368.25588989]
[186.56221008 -365.07223511]
[171.58288574 -363.91757202]
[170.69006348 -348.94418335]
[169.79724121 -333.97076416]
[168.90443420 -318.99734497]
[181.68511963 -326.84936523]
[195.84385681 -321.89657593]
[200.94335938 -307.79000854]
[193.22445679 -294.92849731]
[178.37722778 -292.79309082]
[167.34713745 -302.95635986]
[165.34312439 -288.09082031]
[163.33911133 -273.22528076]
[161.33509827 -258.35977173]
[159.33108521 -243.49423218]
[157.32707214 -228.62870789]
[170.59037781 -221.74613953]
[180.71765137 -210.72038269]
[186.47238159 -196.86911011]
[187.14215088 -181.85668945]
[182.62689209 -167.49415588]
[173.45310974 -155.52075195]
[160.71272278 -147.39335632]
[145.93302917 -144.10916138]
[143.92901611 -129.24362183]
[141.92500305 -114.37809753]
[139.92098999 -99.51257324]
[137.91697693 -84.64704132]
[135.91296387 -69.78151703]
[133.90895081 -54.91598511]
[139.87651062 -41.26910019]
[130.36485291 -28.62635422]
[128.36083984 -13.76082611]
[126.46755219 1.11920857]
[124.68508911 16.01292610]
[137.11558533 7.61753130]
[151.86732483 10.33528519]
[160.48983765 22.60933495]
[158.04376221 37.40854645]
[145.93031311 46.25526047]
[131.08862305 44.08167648]
[122.02094269 32.13384247]
[118.91683197 46.80914307]
[115.81272125 61.48444748]
[120.74874878 75.53737640]
[110.32312012 87.43766022]
[115.93238068 103.24628448]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[103.11995697 139.34313965]
[98.66031647 145.23664856]
[95.55620575 159.91194153]
[92.45209503 174.58724976]
[89.34798431 189.26255798]
[86.24387360 203.93785095]
[83.13976288 218.61315918]
[87.85375977 233.71575928]
[77.65016174 244.56637573]
[74.54605103 259.24166870]
[71.44194031 273.91699219]
[68.33782959 288.59228516]
[65.23371887 303.26757812]
[69.94771576 318.37020874]
[59.74411011 329.22079468]
[56.63999939 343.89611816]
[53.53588867 358.57141113]
[50.43178177 373.24670410]
[48.31715775 388.09689331]
[47.20150757 403.05535889]
[46.08585739 418.01382446]
[44.97021103 432.97225952]
[43.85456085 447.93072510]
[42.73891449 462.88916016]
[41.84609604 477.86257935]
[41.17631149 492.84762573]
[40.50652695 507.83267212]
[39.83674240 522.81768799]
[39.16695786 537.80273438]
[38.49717331 552.78778076]
[37.82738495 567.77282715]
[37.15760040 582.75787354]
[36.48781586 597.74291992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[30 195]
[31 194]
[32 193]
[33 192]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 177]
[48 176]
[51 174]
[53 172]
[54 171]
[55 170]
[56 163]
[57 162]
[59 161]
[60 160]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 133]
[83 132]
[84 131]
[85 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
