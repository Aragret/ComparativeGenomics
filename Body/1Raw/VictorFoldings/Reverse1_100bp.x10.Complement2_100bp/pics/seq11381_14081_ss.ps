%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[-12.18708420 623.10150146]
[-15.39484596 637.78674316]
[-20.86050987 651.78936768]
[-28.44948006 664.76446533]
[-37.97486877 676.39263916]
[-49.20211029 686.38739014]
[-61.85472107 694.50268555]
[-75.62111664 700.53863525]
[-90.16228485 704.34661865]
[-105.12014771 705.83288574]
[-120.12634277 704.96075439]
[-134.81134033 701.75183105]
[-148.81349182 696.28497314]
[-161.78799438 688.69494629]
[-173.41534424 679.16857910]
[-183.40919495 667.94055176]
[-191.52343750 655.28723145]
[-197.55827332 641.52038574]
[-201.36505127 626.97888184]
[-202.85006714 612.02087402]
[-201.97673035 597.01477051]
[-198.76654053 582.33001709]
[-193.29856873 568.32830811]
[-185.70745850 555.35443115]
[-176.18014526 543.72790527]
[-164.95126343 533.73498535]
[-152.29731750 525.62176514]
[-138.52992249 519.58807373]
[-123.98812103 515.78247070]
[-109.03001404 514.29870605]
[-94.02396393 515.17327881]
[-79.33950043 518.38470459]
[-73.88414001 504.41189575]
[-68.42878723 490.43908691]
[-69.49191284 485.78305054]
[-67.64141846 480.40969849]
[-62.59737778 476.13546753]
[-56.72841644 462.33126831]
[-50.85945511 448.52709961]
[-44.99049759 434.72293091]
[-39.12153625 420.91876221]
[-48.18751144 409.10040283]
[-50.13358688 394.23199463]
[-44.33782959 380.29373169]
[-32.26430130 371.06732178]
[-17.09469604 369.11019897]
[-11.22573566 355.30603027]
[-17.67023277 344.14816284]
[-16.49394798 331.12130737]
[-7.90317917 321.00158691]
[5.13661480 317.62838745]
[11.21044827 303.91311646]
[17.28428268 290.19787598]
[23.35811615 276.48260498]
[29.43194962 262.76733398]
[19.59174728 249.95004272]
[17.54631424 233.82640076]
[23.94787025 218.78521729]
[37.13632202 208.96888733]
[53.56860352 207.13261414]
[51.42786026 192.39263916]
[63.94784164 182.71997070]
[69.81680298 168.91580200]
[75.68576050 155.11161804]
[81.55472565 141.30744934]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[83.88928986 102.19636536]
[86.55328369 90.85861969]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[103.19554138 55.05816650]
[106.73521423 40.48179245]
[110.27487946 25.90541649]
[113.59714508 11.27795601]
[116.70125580 -3.39734602]
[119.80536652 -18.07264900]
[122.90946960 -32.74795151]
[118.19547272 -47.85055923]
[128.39907837 -58.70116806]
[123.68508148 -73.80377960]
[133.88868713 -84.65438843]
[136.99279785 -99.32968903]
[140.09690857 -114.00498962]
[133.98448181 -131.37507629]
[146.21440125 -143.96061707]
[148.54989624 -158.77769470]
[150.33236694 -173.67140198]
[152.11482239 -188.56512451]
[140.90617371 -199.13264465]
[138.10202026 -214.09893799]
[144.57173157 -227.68594360]
[157.64495850 -234.77316284]
[159.42742920 -249.66688538]
[161.20989990 -264.56060791]
[162.99235535 -279.45431519]
[164.77482605 -294.34802246]
[166.55729675 -309.24176025]
[152.54629517 -314.84124756]
[140.46253967 -323.87701416]
[131.12992859 -335.73303223]
[125.18476105 -349.60089111]
[123.03240204 -364.53506470]
[124.81960297 -379.51733398]
[130.42449951 -393.52615356]
[139.46493530 -405.60641479]
[151.32453918 -414.93444824]
[165.19470215 -420.87426758]
[180.12969971 -423.02087402]
[195.11128235 -421.22787476]
[209.11795044 -415.61758423]
[221.19473267 -406.57247925]
[230.51818848 -394.70925903]
[236.45263672 -380.83682251]
[238.59346008 -365.90097046]
[236.79469299 -350.92010498]
[231.17898560 -336.91558838]
[222.12921143 -324.84231567]
[210.26240540 -315.52343750]
[196.38766479 -309.59432983]
[181.45100403 -307.45928955]
[179.66854858 -292.56558228]
[177.88607788 -277.67184448]
[176.10360718 -262.77813721]
[174.32115173 -247.88441467]
[172.53868103 -232.99069214]
[183.57026672 -223.01864624]
[186.65103149 -208.28863525]
[180.39434814 -194.40673828]
[167.00854492 -186.78265381]
[165.22607422 -171.88893127]
[163.44361877 -156.99522400]
[176.66900635 -164.07258606]
[190.50784302 -158.28584290]
[194.75866699 -143.90077209]
[186.28791809 -131.52149963]
[171.33992004 -130.27357483]
[160.93429565 -141.07534790]
[167.42033386 -130.86466980]
[165.13703918 -118.57767487]
[154.77221680 -110.90087891]
[151.66810608 -96.22557831]
[148.56399536 -81.55027771]
[153.50001526 -67.49734497]
[143.07438660 -55.59705734]
[148.01040649 -41.54412460]
[137.58477783 -29.64384079]
[134.48066711 -14.96853828]
[131.37655640 -0.29323584]
[128.27244568 14.38206673]
[130.08050537 18.80246925]
[129.13088989 24.40561676]
[124.85125732 29.44508934]
[121.31158447 44.02146530]
[117.77191162 58.59783936]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[115.82865906 103.71920776]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[111.51545715 119.86423492]
[125.69785309 114.97959900]
[140.60498047 116.64620209]
[153.35850525 124.54224396]
[161.49592590 137.14312744]
[163.44602966 152.01582336]
[158.83229065 166.28865051]
[148.54553223 177.20573425]
[134.57199097 182.65916443]
[119.60971832 181.59597778]
[106.54769897 174.22145081]
[97.90801239 161.95947266]
[95.35890198 147.17640686]
[89.48993683 160.98057556]
[83.62097931 174.78475952]
[77.75201416 188.58892822]
[79.47297668 204.31626892]
[67.37277985 213.00157166]
[76.35311127 223.72613525]
[79.82003784 237.20933533]
[77.15219879 250.80569458]
[68.92615509 261.87283325]
[56.79301453 268.28497314]
[43.14721680 268.84115601]
[37.07338333 282.55642700]
[30.99954987 296.27169800]
[24.92571449 309.98696899]
[18.85188103 323.70223999]
[25.45114326 339.90313721]
[18.42985344 355.55612183]
[2.57844138 361.17498779]
[-3.29051948 374.97915649]
[5.82512236 387.26135254]
[7.55769110 402.35754395]
[1.54136932 416.20205688]
[-10.51623917 425.11663818]
[-25.31735802 426.78771973]
[-31.18631935 440.59188843]
[-37.05527878 454.39605713]
[-42.92424011 468.20025635]
[-48.79320145 482.00442505]
[-54.45598984 495.89443970]
[-59.91134644 509.86724854]
[-65.36669922 523.84002686]
[-52.39094543 531.42791748]
[-40.76202774 540.95239258]
[-30.76632500 552.17877197]
[-22.64998817 564.83074951]
[-16.61289024 578.59661865]
[-12.80369949 593.13751221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 204]
[33 203]
[34 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[46 192]
[47 191]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[60 178]
[62 176]
[63 175]
[64 174]
[65 173]
[66 160]
[67 159]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 150]
[76 149]
[77 148]
[78 147]
[80 145]
[82 143]
[83 142]
[84 141]
[86 138]
[87 132]
[88 131]
[89 130]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
