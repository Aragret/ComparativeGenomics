%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[73.78321075 693.32324219]
[59.34718323 698.08447266]
[44.18835068 696.95391846]
[30.61832809 690.10388184]
[20.70644379 678.57897949]
[15.96418858 664.13671875]
[17.11472130 648.97937012]
[23.98259544 635.41839600]
[35.52051163 625.52166748]
[49.96901703 620.79840088]
[51.08466339 605.83996582]
[52.20031357 590.88146973]
[53.31596375 575.92303467]
[54.43161011 560.96459961]
[47.66235352 547.69708252]
[56.40463257 534.51062012]
[57.52027893 519.55218506]
[55.50883102 516.65625000]
[54.80011749 512.64215088]
[55.90439987 508.13284302]
[59.03443527 503.95553589]
[52.86435318 490.39901733]
[62.18671799 477.61605835]
[63.96918488 462.72232056]
[65.75164795 447.82861328]
[54.80164337 435.06396484]
[56.50517273 417.99316406]
[70.29407501 407.22814941]
[71.85459900 392.30953979]
[73.41512299 377.39093018]
[74.75335693 362.45074463]
[75.86900330 347.49230957]
[76.98465729 332.53384399]
[78.10030365 317.57537842]
[79.21595001 302.61694336]
[80.33160400 287.65847778]
[81.44725037 272.70004272]
[82.56289673 257.74157715]
[83.67855072 242.78312683]
[72.16949463 230.52015686]
[73.10906982 213.39028931]
[86.40353394 202.02032471]
[87.29635620 187.04690552]
[88.18917084 172.07350159]
[89.08198547 157.10009766]
[89.97480011 142.12669373]
[90.86761475 127.15328979]
[78.53789520 118.97576141]
[71.93244934 105.73709869]
[72.81307220 90.96825409]
[80.94487000 78.60832977]
[94.15898132 71.95389557]
[95.05179596 56.98048782]
[95.94461060 42.00708389]
[96.83742523 27.03367615]
[97.73023987 12.06027126]
[98.62305450 -2.91313457]
[87.35217285 -10.84774303]
[81.51997375 -23.21721840]
[82.55308533 -36.74505234]
[90.07502747 -47.90589905]
[102.03236389 -53.84428406]
[103.14801025 -68.80273438]
[104.26365662 -83.76119232]
[97.57419586 -98.09860992]
[106.23667908 -110.21515656]
[107.35232544 -125.17361450]
[108.46797180 -140.13206482]
[109.58362579 -155.09051514]
[110.69927216 -170.04896545]
[102.88928223 -180.31381226]
[104.12645721 -192.74977112]
[113.20483398 -200.74411011]
[100.19602966 -193.27612305]
[86.19103241 -198.64826965]
[81.51379395 -212.90040588]
[89.61221313 -225.52639771]
[104.51643372 -227.21882629]
[115.23904419 -216.73164368]
[109.85537720 -231.60870361]
[119.56430054 -242.90409851]
[122.01003265 -257.70336914]
[124.45575714 -272.50265503]
[126.90148163 -287.30191040]
[129.34721375 -302.10119629]
[120.29521179 -312.07495117]
[118.66408539 -325.24877930]
[124.82695770 -336.78573608]
[136.33622742 -342.57937622]
[139.00201416 -357.34057617]
[141.66781616 -372.10180664]
[127.44108582 -376.94515991]
[114.09517670 -383.85485840]
[101.92822266 -392.67660522]
[91.21205139 -403.21325684]
[82.18605804 -415.22946167]
[75.05189514 -428.45675659]
[69.96893311 -442.59963989]
[67.05072784 -457.34216309]
[66.36248016 -472.35494995]
[67.91956329 -487.30264282]
[71.68718719 -501.85125732]
[77.58118439 -515.67584229]
[85.46987915 -528.46746826]
[95.17704010 -539.94042969]
[106.48580170 -549.83837891]
[119.14352417 -557.94024658]
[132.86741638 -564.06494141]
[147.35090637 -568.07568359]
[162.27041626 -569.88293457]
[177.29263306 -569.44622803]
[192.08195496 -566.77532959]
[206.30798340 -561.92999268]
[219.65290833 -555.01837158]
[231.81860352 -546.19488525]
[242.53327942 -535.65667725]
[251.55755615 -523.63922119]
[258.68984985 -510.41091919]
[263.77078247 -496.26730347]
[266.68688965 -481.52438354]
[267.37301636 -466.51147461]
[265.81378174 -451.56402588]
[262.04409790 -437.01593018]
[256.14813232 -423.19219971]
[248.25761414 -410.40167236]
[238.54882812 -398.93011475]
[227.23864746 -389.03375244]
[214.57977295 -380.93371582]
[200.85499573 -374.81097412]
[186.37094116 -370.80224609]
[171.45118713 -368.99716187]
[156.42903137 -369.43600464]
[153.76322937 -354.67480469]
[151.09744263 -339.91357422]
[161.26826477 -326.51980591]
[158.55168152 -309.58065796]
[144.14648438 -299.65545654]
[141.70075989 -284.85617065]
[139.25502014 -270.05691528]
[136.80929565 -255.25764465]
[134.36357117 -240.45837402]
[139.92216492 -226.63986206]
[130.03831482 -214.28591919]
[128.14501953 -199.40588379]
[136.37577820 -183.90679932]
[125.65772247 -168.93331909]
[124.54207611 -153.97486877]
[123.42642975 -139.01641846]
[122.31078339 -124.05796051]
[121.19512939 -109.09951019]
[127.96439362 -95.83201599]
[119.22211456 -82.64553833]
[118.10646057 -67.68708801]
[116.99081421 -52.72863388]
[129.85041809 -42.52529907]
[134.13728333 -26.50704384]
[127.97059631 -10.93549347]
[113.59646606 -2.02031875]
[112.70364380 12.95308685]
[111.81082916 27.92649269]
[110.91801453 42.89989853]
[110.02519989 57.87330246]
[109.13238525 72.84671021]
[121.46210480 81.02423859]
[128.06755066 94.26290131]
[127.18692780 109.03174591]
[119.05513000 121.39167023]
[105.84101868 128.04611206]
[104.94820404 143.01951599]
[104.05538940 157.99291992]
[103.16257477 172.96632385]
[102.26976013 187.93972778]
[101.37694550 202.91313171]
[111.41744232 211.89105225]
[114.41025543 224.82369995]
[109.48107147 236.93919373]
[98.63700104 243.89877319]
[97.52135468 258.85723877]
[96.40570068 273.81567383]
[95.29005432 288.77413940]
[94.17440796 303.73257446]
[93.05875397 318.69104004]
[91.94310760 333.64950562]
[90.82746124 348.60794067]
[89.71181488 363.56640625]
[92.23380280 369.67794800]
[91.41384125 375.30154419]
[88.33372498 378.95144653]
[86.77320862 393.87005615]
[85.21268463 408.78866577]
[94.84228516 418.20596313]
[97.25463867 431.25933838]
[91.78938293 443.14266968]
[80.64537048 449.61108398]
[78.86289978 464.50479126]
[77.08043671 479.39852905]
[83.12302399 494.02035522]
[73.92815399 505.73800659]
[72.47873688 520.66778564]
[71.36308289 535.62628174]
[78.05254364 549.96368408]
[69.39006805 562.08026123]
[68.27441406 577.03869629]
[67.15876770 591.99713135]
[66.04312134 606.95556641]
[64.92746735 621.91406250]
[78.51546478 628.72833252]
[88.45764160 640.22711182]
[93.23787689 654.65686035]
[92.12722015 669.81719971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[16 200]
[17 199]
[21 198]
[23 196]
[24 195]
[25 194]
[28 190]
[29 189]
[30 188]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[62 154]
[63 153]
[64 152]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[73 144]
[79 143]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[89 134]
[90 133]
[91 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
