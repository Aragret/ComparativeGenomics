%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[89.24836731 682.54626465]
[78.34780884 671.95166016]
[72.33598328 657.99005127]
[72.12966156 642.79052734]
[77.76029205 628.67089844]
[88.36925507 617.78424072]
[102.33876038 611.79083252]
[102.11543274 596.79248047]
[101.89210510 581.79412842]
[101.66877747 566.79577637]
[101.44544983 551.79748535]
[91.64691162 537.23876953]
[100.74903870 521.23150635]
[100.30242920 506.23812866]
[96.96117401 499.64590454]
[99.96247101 491.01861572]
[99.73913574 476.02026367]
[99.51580811 461.02194214]
[88.68251038 450.86441040]
[88.24236298 435.65713501]
[98.96995544 424.36306763]
[98.74662781 409.36471558]
[98.52330017 394.36639404]
[98.29997253 379.36804199]
[87.46666718 369.21054077]
[87.02652740 354.00326538]
[97.75411224 342.70916748]
[97.53078461 327.71081543]
[83.22760010 323.35424805]
[70.95467377 314.77838135]
[61.92113495 302.81280518]
[57.02172089 288.62173462]
[56.74813080 273.59082031]
[61.13974762 259.19192505]
[69.77851868 246.83877563]
[81.82873535 237.74841309]
[96.11786652 232.82110596]
[95.89453888 217.82276917]
[95.55956268 202.82650757]
[95.11295319 187.83316040]
[94.66635132 172.83981323]
[94.21974182 157.84646606]
[93.77313995 142.85311890]
[93.32653046 127.85976410]
[80.31640625 120.81484985]
[72.55621338 108.21828461]
[72.11570740 93.42977142]
[79.11238861 80.39364624]
[91.68012238 72.58684540]
[91.23351288 57.59349442]
[83.08876038 44.02980804]
[90.44369507 31.07781029]
[89.99708557 16.08445930]
[78.94949341 26.23092461]
[63.95781326 25.73152924]
[53.60995102 14.87234974]
[53.83363724 -0.12598217]
[64.50073242 -10.67174149]
[79.50064850 -10.72383785]
[90.24035645 -0.25329983]
[91.13317108 -15.22670555]
[84.23099518 -29.46294403]
[92.71211243 -41.70711899]
[93.60493469 -56.68052292]
[94.49774933 -71.65393066]
[95.39056396 -86.62733459]
[96.28337860 -101.60073853]
[93.67031097 -110.35343933]
[97.30258942 -116.78991699]
[98.41824341 -131.74836731]
[99.53388977 -146.70681763]
[89.49755859 -158.61941528]
[90.84207153 -173.77351379]
[102.26074982 -183.26821899]
[103.37640381 -198.22666931]
[103.48806763 -213.22625732]
[102.59525299 -228.19966125]
[101.70243835 -243.17306519]
[100.80962372 -258.14648438]
[99.91680908 -273.11987305]
[99.02398682 -288.09329224]
[98.13117218 -303.06668091]
[97.23835754 -318.04010010]
[82.74386597 -322.41445923]
[70.64325714 -331.46694946]
[62.38543320 -344.08947754]
[58.95090485 -358.74807739]
[60.73540497 -373.66909790]
[67.50439453 -387.05398560]
[78.42367554 -397.29595947]
[92.16215515 -403.17300415]
[91.26934052 -418.14639282]
[90.37652588 -433.11981201]
[89.48371124 -448.09323120]
[88.59089661 -463.06661987]
[74.05629730 -467.37026978]
[61.87202072 -476.38796997]
[53.50937653 -489.03085327]
[49.97819519 -503.77215576]
[51.70487976 -518.83184814]
[58.48093033 -532.39141846]
[69.48809814 -542.81341553]
[83.39722443 -548.83935547]
[98.52870941 -549.74157715]
[113.05535126 -545.41113281]
[125.22298431 -536.37103271]
[133.56231689 -523.71276855]
[137.06632996 -508.96493530]
[135.31188965 -493.90844727]
[128.51086426 -480.36145020]
[117.48450470 -469.95974731]
[103.56430054 -463.95944214]
[104.45711517 -448.98602295]
[105.34992981 -434.01263428]
[106.24274445 -419.03921509]
[107.13556671 -404.06582642]
[121.47507477 -399.86297607]
[133.53405762 -390.99111938]
[141.84562683 -378.50543213]
[145.39056396 -363.90219116]
[143.72225952 -348.93933105]
[137.02290344 -335.42495728]
[126.08374023 -324.99868774]
[112.21176147 -318.93292236]
[113.10457611 -303.95950317]
[113.99739838 -288.98608398]
[114.89021301 -274.01269531]
[115.78302765 -259.03927612]
[116.67584229 -244.06588745]
[117.56865692 -229.09246826]
[118.46147156 -214.11906433]
[127.06158447 -226.40882874]
[140.90007019 -232.19641113]
[155.68893433 -229.68850708]
[166.84567261 -219.66218567]
[170.91325378 -205.22421265]
[166.63130188 -190.84837341]
[155.32661438 -180.98916626]
[140.50207520 -178.70156860]
[126.75123596 -184.69442749]
[118.33485413 -197.11102295]
[117.21920776 -182.15257263]
[127.10310364 -171.06906128]
[126.18476105 -155.88316345]
[114.49234009 -145.59117126]
[113.37669373 -130.63272095]
[112.26104736 -115.67427063]
[111.25678253 -100.70792389]
[110.36396790 -85.73451996]
[109.47115326 -70.76111603]
[108.57833862 -55.78770828]
[107.68552399 -40.81430054]
[114.65156555 -27.64906311]
[106.10658264 -14.33388996]
[105.21376801 0.63951606]
[104.99044037 15.63785362]
[105.43704224 30.63120270]
[113.54985046 43.12246323]
[106.22686005 57.14688873]
[106.67346954 72.14023590]
[119.68359375 79.18515015]
[127.44378662 91.78171539]
[127.88429260 106.57022858]
[120.88761139 119.60635376]
[108.31987762 127.41315460]
[108.76648712 142.40650940]
[109.21308899 157.39985657]
[109.65969849 172.39320374]
[110.10630035 187.38655090]
[110.55290985 202.37991333]
[113.93643951 210.86457825]
[110.89287567 217.59944153]
[111.11620331 232.59777832]
[125.54570007 237.09745789]
[137.86122131 245.82501221]
[146.86396790 257.91546631]
[151.68234253 272.17724609]
[151.85639954 287.20962524]
[147.38168335 301.54028320]
[138.70840454 313.76953125]
[126.69625854 322.70700073]
[112.52912140 327.48748779]
[112.75244904 342.48583984]
[123.81155396 353.45553589]
[123.82438660 368.66915894]
[113.29830933 379.14471436]
[113.52163696 394.14306641]
[113.74496460 409.14138794]
[113.96829224 424.13973999]
[125.02739716 435.10940552]
[125.04022217 450.32302856]
[114.51415253 460.79861450]
[114.73748016 475.79693604]
[114.96080780 490.79528809]
[115.29578400 505.79153442]
[115.74238586 520.78491211]
[124.57790375 530.18151855]
[124.64121246 542.67871094]
[116.44378662 551.57415771]
[116.66711426 566.57244873]
[116.89044189 581.57080078]
[117.11376953 596.56915283]
[117.33709717 611.56750488]
[131.47885132 617.14233398]
[142.40724182 627.70825195]
[148.45578003 641.65399170]
[148.70208740 656.85296631]
[143.10862732 670.98736572]
[132.52833557 681.90185547]
[118.57465363 687.93200684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[13 196]
[14 195]
[16 194]
[17 193]
[18 192]
[21 189]
[22 188]
[23 187]
[24 186]
[27 183]
[28 182]
[37 173]
[38 172]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[49 160]
[50 159]
[52 157]
[53 156]
[60 155]
[61 154]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[69 147]
[70 146]
[71 145]
[74 142]
[75 141]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
