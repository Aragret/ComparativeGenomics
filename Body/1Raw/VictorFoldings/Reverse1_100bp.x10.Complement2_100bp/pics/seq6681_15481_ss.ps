%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-89.47434998 292.02615356]
[-99.85331726 281.19940186]
[-109.61455536 269.81259155]
[-118.72788239 257.90087891]
[-127.16514587 245.50109863]
[-134.90025330 232.65159607]
[-141.90928650 219.39208984]
[-148.17060852 205.76353455]
[-153.66484070 191.80807495]
[-158.37501526 177.56883240]
[-162.28657532 163.08984375]
[-165.38742065 148.41584778]
[-167.66796875 133.59219360]
[-169.12117004 118.66471100]
[-169.74253845 103.67953491]
[-169.53015137 88.68299103]
[-168.48464966 73.72142792]
[-166.60929871 58.84108353]
[-163.90986633 44.08796310]
[-160.39471436 29.50766182]
[-156.07469177 15.14524746]
[-150.96315002 1.04511464]
[-145.07591248 -12.74915504]
[-138.43115234 -26.19492531]
[-131.04942322 -39.25063324]
[-122.95352936 -51.87592697]
[-114.16850281 -64.03178406]
[-104.72149658 -75.68062592]
[-115.82872772 -85.76176453]
[-126.93595886 -95.84290314]
[-138.04319763 -105.92404175]
[-149.15043640 -116.00518036]
[-160.25765991 -126.08631897]
[-171.36489868 -136.16746521]
[-182.47213745 -146.24859619]
[-193.57936096 -156.32974243]
[-204.68659973 -166.41087341]
[-215.79383850 -176.49201965]
[-226.72082520 -166.20442200]
[-238.42131042 -156.80584717]
[-250.82312012 -148.35427856]
[-263.84982300 -140.90180969]
[-277.42108154 -134.49436951]
[-291.45321655 -129.17147827]
[-305.85971069 -124.96596527]
[-320.55178833 -121.90373230]
[-335.43884277 -120.00368500]
[-350.42904663 -119.27751923]
[-365.43002319 -119.72971344]
[-380.34930420 -121.35749054]
[-395.09484863 -124.15081024]
[-409.57580566 -128.09245300]
[-423.70285034 -133.15811157]
[-437.38888550 -139.31654358]
[-450.54953003 -146.52981567]
[-463.10366821 -154.75341797]
[-474.97390747 -163.93666077]
[-486.08700562 -174.02291870]
[-496.37451172 -184.95002747]
[-505.77294922 -196.65060425]
[-514.22436523 -209.05250549]
[-521.67675781 -222.07926941]
[-528.08404541 -235.65058899]
[-533.40673828 -249.68278503]
[-537.61212158 -264.08935547]
[-540.67419434 -278.78143311]
[-542.57409668 -293.66848755]
[-543.30010986 -308.65872192]
[-542.84777832 -323.65969849]
[-541.21984863 -338.57894897]
[-538.42639160 -353.32449341]
[-534.48461914 -367.80538940]
[-529.41882324 -381.93237305]
[-523.26019287 -395.61834717]
[-516.04681396 -408.77893066]
[-507.82308960 -421.33297729]
[-498.63970947 -433.20312500]
[-488.55334473 -444.31613159]
[-477.62612915 -454.60351562]
[-465.92547607 -464.00183105]
[-453.52346802 -472.45315552]
[-440.49664307 -479.90536499]
[-426.92526245 -486.31250000]
[-412.89300537 -491.63510132]
[-398.48638916 -495.84033203]
[-383.79428101 -498.90228271]
[-368.90719604 -500.80203247]
[-353.91696167 -501.52786255]
[-338.91598511 -501.07537842]
[-323.99673462 -499.44729614]
[-309.25125122 -496.65365601]
[-294.77038574 -492.71173096]
[-280.64346313 -487.64578247]
[-266.95755005 -481.48706055]
[-253.79702759 -474.27352905]
[-241.24305725 -466.04968262]
[-229.37301636 -456.86618042]
[-218.26011658 -446.77969360]
[-207.97283936 -435.85238647]
[-198.57464600 -424.15161133]
[-190.12345886 -411.74954224]
[-182.67137146 -398.72262573]
[-176.26435852 -385.15118408]
[-170.94189453 -371.11886597]
[-166.73681641 -356.71221924]
[-163.67504883 -342.02008057]
[-161.77543640 -327.13296509]
[-161.04974365 -312.14273071]
[-161.50239563 -297.14175415]
[-163.13063049 -282.22253418]
[-165.92440796 -267.47708130]
[-169.86648560 -252.99624634]
[-174.93257141 -238.86936951]
[-181.09143066 -225.18351746]
[-188.30509949 -212.02307129]
[-196.52908325 -199.46919250]
[-205.71269226 -187.59924316]
[-194.60545349 -177.51811218]
[-183.49822998 -167.43696594]
[-172.39099121 -157.35583496]
[-161.28375244 -147.27468872]
[-150.17652893 -137.19355774]
[-139.06929016 -127.11241913]
[-127.96205902 -117.03128052]
[-116.85482025 -106.95014191]
[-105.74758911 -96.86900330]
[-94.64035797 -86.78786469]
[-83.95886230 -97.31626892]
[-72.70877075 -107.23477936]
[-60.92484665 -116.51274109]
[-48.64350891 -125.12147522]
[-35.90272903 -133.03437805]
[-22.74188042 -140.22698975]
[-9.20164394 -146.67706299]
[4.67612696 -152.36468506]
[18.84853745 -157.27226257]
[33.27178192 -161.38461304]
[47.90127945 -164.68905640]
[62.69181061 -167.17535400]
[77.59766388 -168.83584595]
[92.57275391 -169.66535950]
[107.57080078 -169.66137695]
[122.54545593 -168.82386780]
[137.45040894 -167.15545654]
[152.23962402 -164.66128540]
[166.86735535 -161.34906006]
[181.28840637 -157.22901917]
[195.45820618 -152.31390381]
[209.33294678 -146.61889648]
[222.86975098 -140.16160583]
[236.02676392 -132.96199036]
[248.76333618 -125.04231262]
[261.04006958 -116.42704010]
[272.81906128 -107.14280701]
[284.06387329 -97.21830750]
[294.73977661 -86.68421936]
[304.81372070 -75.57309723]
[314.25460815 -63.91929626]
[323.03326416 -51.75882721]
[331.12249756 -39.12928391]
[338.49737549 -26.06970024]
[345.13507080 -12.62044334]
[351.01507568 1.17691588]
[356.11920166 15.27973080]
[360.43170166 29.64441109]
[363.93917847 44.22655487]
[366.63085938 58.98109436]
[368.49841309 73.86241913]
[369.53604126 88.82453156]
[369.74057007 103.82118988]
[369.11132812 118.80603027]
[367.65029907 133.73274231]
[365.36193848 148.55520630]
[362.25341797 163.22756958]
[358.33425903 177.70451355]
[353.61660767 191.94126892]
[348.11502075 205.89384460]
[341.84655762 219.51910400]
[334.83056641 232.77493286]
[327.08871460 245.62037659]
[318.64492798 258.01571655]
[309.52536011 269.92263794]
[299.75814819 281.30432129]
[289.37347412 292.12561035]
[278.40350342 302.35308838]
[266.88204956 311.95507812]
[254.84481812 320.90191650]
[242.32894897 329.16598511]
[229.37315369 336.72167969]
[216.01747131 343.54571533]
[202.30319214 349.61697388]
[188.27270508 354.91665649]
[173.96936035 359.42843628]
[159.43739319 363.13830566]
[144.72169495 366.03485107]
[129.86776733 368.10910034]
[114.92153168 369.35464478]
[99.92916870 369.76760864]
[84.93702698 369.34677124]
[69.99143982 368.09338379]
[55.13860703 366.01132202]
[40.42443848 363.10705566]
[25.89441490 359.38955688]
[11.59344769 354.87026978]
[-2.43426132 349.56320190]
[-16.14535332 343.48477173]
[-29.49744606 336.65371704]
[-42.44927216 329.09118652]
[-54.96079636 320.82058716]
[-66.99334717 311.86740112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[36 119]
[37 118]
[38 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
