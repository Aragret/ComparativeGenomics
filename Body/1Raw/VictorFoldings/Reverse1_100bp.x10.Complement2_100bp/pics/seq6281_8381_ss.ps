%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[256.30249023 561.10345459]
[263.03927612 547.68212891]
[271.28863525 535.13360596]
[280.93905640 523.62774658]
[291.86001587 513.31994629]
[282.89932251 501.29058838]
[273.93859863 489.26123047]
[267.42190552 485.77493286]
[264.93563843 476.98538208]
[256.15502930 464.82391357]
[247.37443542 452.66247559]
[238.59382629 440.50100708]
[229.81323242 428.33953857]
[229.72825623 443.33932495]
[222.24026489 456.33660889]
[209.30661011 463.93402100]
[194.30810547 464.14553833]
[181.16531372 456.91592407]
[173.31375122 444.13497925]
[172.80578613 429.14358521]
[179.77420044 415.86047363]
[192.39747620 407.75781250]
[207.37590027 406.95361328]
[220.79350281 413.65753174]
[205.53663635 404.98602295]
[206.55752563 386.60015869]
[199.48040771 373.37463379]
[192.40330505 360.14910889]
[185.32620239 346.92358398]
[178.24909973 333.69805908]
[171.17199707 320.47253418]
[164.09487915 307.24700928]
[157.01777649 294.02148438]
[149.94067383 280.79592896]
[142.86357117 267.57040405]
[142.24168396 282.55752563]
[136.00163269 296.19796753]
[125.06907654 306.46826172]
[111.06579590 311.84487915]
[96.06909180 311.53024292]
[82.30364990 305.57101440]
[71.81147766 294.85119629]
[66.14903259 280.96102905]
[66.15630341 265.96102905]
[71.83220673 252.07637024]
[82.33477020 241.36674500]
[96.10598755 235.42085266]
[111.10298157 235.12075806]
[125.10104370 240.51095581]
[136.02252197 250.79029846]
[131.83551025 236.38652039]
[127.64850616 221.98272705]
[123.46149445 207.57894897]
[119.27448273 193.17517090]
[115.08747101 178.77137756]
[110.90045929 164.36759949]
[106.71344757 149.96382141]
[102.52643585 135.56004333]
[86.79222107 133.11274719]
[73.69306183 124.05918121]
[65.84235382 110.20560455]
[64.80638123 94.31593323]
[70.79183197 79.56027985]
[82.60456085 68.88251495]
[78.20355988 54.54266739]
[73.80255890 40.20281982]
[69.40156555 25.86297417]
[65.00056458 11.52312756]
[60.59956741 -2.81671977]
[53.64940643 10.47595692]
[39.82931137 16.30733490]
[25.45764160 12.01138496]
[17.10493660 -0.44784045]
[18.58993530 -15.37415218]
[29.23371887 -25.94344139]
[44.17009354 -27.32357025]
[56.57143402 -18.88206482]
[53.68616104 -33.60195541]
[43.43886566 -45.65614319]
[48.58356857 -59.63402939]
[38.33626938 -71.68821716]
[43.48097610 -85.66610718]
[35.96215439 -72.68660736]
[22.29730606 -66.50017548]
[7.58308029 -69.41419983]
[-2.69248223 -80.34181213]
[-4.69684935 -95.20729828]
[2.31755781 -108.46618652]
[15.73453903 -115.17324066]
[30.54989243 -112.82690430]
[41.23839951 -102.30125427]
[40.12274933 -117.25971222]
[39.00710297 -132.21815491]
[37.89145279 -147.17662048]
[36.77580643 -162.13507080]
[22.24586296 -166.52200317]
[10.28424835 -175.86460876]
[2.50867081 -188.89936829]
[-0.02928679 -203.86343384]
[3.01361370 -218.73303223]
[11.22584534 -231.49719238]
[23.49677086 -240.42965698]
[38.16684723 -244.32237244]
[53.25206757 -242.64889526]
[66.71228027 -235.63554382]
[76.72710419 -224.23081970]
[81.94211578 -209.97711182]
[81.65202332 -194.80212402]
[75.89606476 -180.75814819]
[65.45268250 -169.74450684]
[51.73425674 -163.25071716]
[52.84990692 -148.29226685]
[53.96555710 -133.33381653]
[55.08120346 -118.37535858]
[56.19685364 -103.41690063]
[58.20086670 -88.55137634]
[68.24179077 -77.55005646]
[63.30345917 -62.51930237]
[73.34438324 -51.51797867]
[68.40605164 -36.48722839]
[71.29132843 -21.76733780]
[74.93941498 -7.21771765]
[79.34041595 7.12212944]
[83.74140930 21.46197701]
[88.14241028 35.80182266]
[92.54340363 50.14167023]
[96.94440460 64.48152161]
[110.68997192 65.99082947]
[122.82713318 72.61713409]
[131.52973938 83.36345673]
[135.48840332 96.61289215]
[134.10749817 110.37195587]
[127.59481049 122.57045746]
[116.93022156 131.37303162]
[121.11723328 145.77680969]
[125.30424500 160.18058777]
[129.49125671 174.58436584]
[133.67826843 188.98815918]
[137.86528015 203.39193726]
[142.05229187 217.79571533]
[146.23930359 232.19950867]
[150.42631531 246.60328674]
[156.08909607 260.49331665]
[163.16619873 273.71884155]
[170.24330139 286.94436646]
[177.32041931 300.16989136]
[184.39752197 313.39541626]
[191.47462463 326.62094116]
[198.55172729 339.84646606]
[205.62882996 353.07199097]
[212.70594788 366.29751587]
[219.78305054 379.52307129]
[231.87875366 384.00152588]
[237.50100708 395.16281128]
[234.12292480 406.77810669]
[241.97468567 419.55895996]
[250.75527954 431.72039795]
[259.53588867 443.88186646]
[268.31649780 456.04330444]
[277.09710693 468.20477295]
[285.96798706 480.30053711]
[294.92868042 492.32989502]
[303.88937378 504.35928345]
[316.89212036 496.84625244]
[330.67913818 490.89358521]
[345.06402588 486.58178711]
[359.85223389 483.96914673]
[374.84375000 483.09103394]
[389.83581543 483.95928955]
[404.62573242 486.56219482]
[419.01345825 490.86453247]
[432.80438232 496.80813599]
[445.81207275 504.31259155]
[457.86053467 513.27648926]
[468.78689575 523.57849121]
[478.44332886 535.07934570]
[486.69927979 547.62347412]
[493.44308472 561.04125977]
[498.58355713 575.15130615]
[502.05114746 589.76269531]
[503.79898071 604.67779541]
[503.80340576 619.69500732]
[502.06439209 634.61120605]
[498.60543823 649.22460938]
[493.47332764 663.33764648]
[486.73742676 676.75946045]
[478.48889160 689.30847168]
[468.83926392 700.81506348]
[457.91900635 711.12353516]
[445.87582397 720.09448242]
[432.87258911 727.60662842]
[419.08517456 733.55841064]
[404.69998169 737.86920166]
[389.91162109 740.48089600]
[374.92004395 741.35797119]
[359.92803955 740.48870850]
[345.13827515 737.88482666]
[330.75085449 733.58154297]
[316.96029663 727.63702393]
[303.95315552 720.13171387]
[291.90527344 711.16705322]
[280.97961426 700.86425781]
[271.32394409 689.36279297]
[263.06881714 676.81805420]
[256.32589722 663.39984131]
[251.18638611 649.28948975]
[247.71975708 634.67785645]
[245.97291565 619.76263428]
[245.96948242 604.74542236]
[247.70950317 589.82934570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 163]
[6 162]
[7 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[24 155]
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[77 121]
[78 120]
[80 118]
[82 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
