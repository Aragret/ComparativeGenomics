%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-23.66498566 561.28881836]
[-17.69484138 575.17584229]
[-16.08485222 590.20574951]
[-18.97817993 605.04223633]
[-26.11755180 618.36590576]
[-36.86813736 628.99212646]
[-50.27400589 635.97595215]
[-65.14311218 638.69647217]
[-80.15330505 636.91168213]
[-93.96989441 630.78033447]
[-105.36431885 620.84765625]
[-113.32338715 607.99676514]
[-117.13938141 593.37042236]
[-116.47299957 578.26922607]
[-111.38348389 564.03582764]
[-102.32339478 551.93603516]
[-90.09835052 543.04559326]
[-75.79539490 538.15509033]
[-60.68632889 537.69940186]
[-56.71423340 523.23492432]
[-52.74213791 508.77038574]
[-48.77004242 494.30584717]
[-52.86087036 479.98403931]
[-41.74540329 468.72540283]
[-43.00544739 461.44293213]
[-37.60499573 454.07592773]
[-33.41798401 439.67214966]
[-29.23097229 425.26837158]
[-30.46132088 422.74957275]
[-30.76807022 419.59164429]
[-29.90279007 416.14392090]
[-27.74798203 412.83917236]
[-24.34221077 410.14572144]
[-19.30529404 396.01669312]
[-14.26837826 381.88766479]
[-17.28266716 367.30126953]
[-5.36061049 356.90054321]
[-0.32369420 342.77151489]
[-10.07703686 331.51370239]
[-12.90464592 316.78750610]
[-7.94878435 302.52899170]
[3.55417156 292.60031128]
[18.58039284 289.74374390]
[23.61730766 275.61471558]
[28.65422440 261.48568726]
[33.69113922 247.35664368]
[38.72805786 233.22761536]
[43.76497269 219.09858704]
[38.86536026 208.03874207]
[42.94606400 196.22639465]
[54.33500290 190.17205811]
[59.58171844 176.11958313]
[64.82843781 162.06712341]
[63.78883743 159.46377563]
[63.71781158 156.29177856]
[64.83712769 152.91798401]
[67.23175812 149.78265381]
[70.82843018 147.34997559]
[76.90225983 133.63470459]
[82.97609711 119.91944122]
[89.04992676 106.20417786]
[94.81596375 92.35668945]
[100.27132416 78.38388824]
[95.81674957 66.27936554]
[100.64818573 54.75369644]
[111.67256165 49.77477646]
[117.33535004 35.88475037]
[122.99813843 21.99472427]
[127.29225922 7.62251043]
[130.17753601 -7.09738064]
[133.06280518 -21.81727219]
[128.12448120 -36.84802246]
[138.16540527 -47.84934616]
[140.28002930 -62.69954300]
[141.61825562 -77.63972473]
[135.14300537 -92.07515717]
[143.98492432 -104.06138611]
[145.32315063 -119.00157166]
[133.80484009 -129.23068237]
[130.55632019 -144.10685730]
[136.61863708 -157.88047791]
[149.47505188 -165.35379028]
[150.81329346 -180.29397583]
[152.15151978 -195.23416138]
[153.48976135 -210.17434692]
[154.82798767 -225.11453247]
[140.79515076 -230.67864990]
[128.91075134 -239.96215820]
[120.13269043 -252.20594788]
[115.16539001 -266.41278076]
[114.40335846 -281.42849731]
[117.89981079 -296.03570557]
[125.36308289 -309.05264282]
[136.18090820 -319.42858887]
[149.47065735 -326.32885742]
[164.15138245 -329.20181274]
[165.48960876 -344.14199829]
[166.82785034 -359.08218384]
[168.16607666 -374.02236938]
[169.50431824 -388.96255493]
[155.76893616 -395.37463379]
[145.05715942 -406.10003662]
[138.66249084 -419.84353638]
[137.35711670 -434.94558716]
[141.29867554 -449.58251953]
[150.01119995 -461.98687744]
[162.44259644 -470.66073608]
[177.09173584 -474.55673218]
[192.18963623 -473.20437622]
[205.91317749 -466.76696777]
[216.60517883 -456.02185059]
[222.97450256 -442.26660156]
[224.25202942 -427.16217041]
[220.28350830 -412.53250122]
[211.54815674 -400.14422607]
[199.10078430 -391.49328613]
[184.44450378 -387.62429810]
[183.10626221 -372.68411255]
[181.76803589 -357.74392700]
[180.42979431 -342.80374146]
[179.09156799 -327.86355591]
[193.02799988 -322.42730713]
[204.87988281 -313.27502441]
[213.68148804 -301.14169312]
[218.71258545 -287.00561523]
[219.55738831 -272.00955200]
[216.13890076 -257.36831665]
[208.72584534 -244.27041626]
[197.91154480 -233.78155518]
[184.56648254 -226.75793457]
[169.76817322 -223.77629089]
[168.42994690 -208.83610535]
[167.09170532 -193.89591980]
[165.75347900 -178.95573425]
[164.41523743 -164.01554871]
[175.73884583 -154.37635803]
[179.25680542 -139.74461365]
[173.41621399 -125.68258667]
[160.26333618 -117.66333771]
[158.92510986 -102.72315216]
[165.49607849 -89.35634613]
[156.55844116 -76.30149078]
[155.22021484 -61.36130905]
[166.67431641 -71.04653168]
[181.67320251 -71.22904968]
[193.35958862 -61.82541275]
[196.39060974 -47.13484192]
[189.38053894 -33.87366486]
[175.53425598 -28.10471535]
[161.18212891 -32.46548080]
[152.88529968 -44.96407318]
[158.02999878 -30.98618698]
[147.78269958 -18.93199921]
[144.89743042 -4.21210814]
[142.01214600 10.50778294]
[152.17620850 -0.52363145]
[165.91592407 -6.54195690]
[180.91590881 -6.53299904]
[194.64843750 -0.49826795]
[204.79930115 10.54527855]
[209.65791321 24.73660851]
[208.40551758 39.68423462]
[201.25315857 52.86921692]
[189.40614319 62.06965637]
[174.86088562 65.73511505]
[160.06852722 63.24790573]
[147.52185059 55.02715683]
[139.33515930 42.45821381]
[136.88816833 27.65751076]
[131.22537231 41.54753876]
[125.56259155 55.43756485]
[128.88368225 72.66943359]
[114.24411774 83.83924866]
[108.78876495 97.81204224]
[109.82102203 101.52780151]
[109.21041870 105.68051147]
[106.79853058 109.52626801]
[102.76519775 112.27800751]
[96.69136047 125.99327850]
[90.61753082 139.70854187]
[84.54369354 153.42381287]
[78.88090515 167.31384277]
[73.63419342 181.36630249]
[68.38747406 195.41877747]
[71.85556793 213.50340271]
[57.89400101 224.13551331]
[52.85708618 238.26454163]
[47.82017136 252.39356995]
[42.78325272 266.52258301]
[37.74633789 280.65161133]
[32.70942307 294.78067017]
[42.53995132 306.49850464]
[45.16798782 321.46481323]
[39.98637390 335.64285278]
[28.48074913 345.25933838]
[13.80533504 347.80841064]
[8.76841927 361.93743896]
[11.42243481 377.53445435]
[-0.13934848 386.92459106]
[-5.17626476 401.05361938]
[-10.21318054 415.18264771]
[-14.82719040 429.45538330]
[-19.01420212 443.85916138]
[-23.20121193 458.26293945]
[-27.28087997 472.69747925]
[-23.47416306 488.05389404]
[-34.30551529 498.27795410]
[-38.27761459 512.74249268]
[-42.24971008 527.20697021]
[-46.22180557 541.67150879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[24 205]
[26 204]
[27 203]
[28 202]
[33 201]
[34 200]
[35 199]
[37 197]
[38 196]
[43 191]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[51 184]
[52 183]
[53 182]
[58 181]
[59 180]
[60 179]
[61 178]
[62 174]
[63 173]
[66 171]
[67 170]
[68 169]
[69 155]
[70 154]
[71 153]
[73 151]
[74 143]
[75 142]
[77 140]
[78 139]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
