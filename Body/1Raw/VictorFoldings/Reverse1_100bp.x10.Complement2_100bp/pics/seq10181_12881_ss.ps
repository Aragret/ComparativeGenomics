%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[116.16200256 467.22912598]
[113.93688202 452.39508057]
[111.71176910 437.56103516]
[109.48664856 422.72698975]
[107.26152802 407.89294434]
[96.38240051 418.21984863]
[81.50521851 416.30429077]
[73.59687805 403.55838013]
[78.48712921 389.37792969]
[92.57105255 384.21621704]
[105.46558380 391.87692261]
[104.34992981 376.91845703]
[103.23428345 361.96002197]
[102.11863708 347.00155640]
[100.00401306 332.15136719]
[96.89990234 317.47604370]
[93.79579163 302.80075073]
[83.59218597 291.95013428]
[88.30618286 276.84753418]
[85.20207214 262.17224121]
[80.81771851 276.51718140]
[71.84687805 288.53900146]
[59.34343719 296.82537842]
[44.77628708 300.40283203]
[29.85676765 298.85107422]
[16.33760262 292.35244751]
[5.80701256 281.67037964]
[-0.49787953 268.05978394]
[-1.83638132 253.11962891]
[1.94875312 238.60505676]
[10.41284943 226.22123718]
[22.56155586 217.42300415]
[36.96765137 213.24395752]
[51.93872452 214.17506409]
[65.71598816 220.10691833]
[76.68090820 230.34268188]
[83.54579163 243.68133545]
[83.99240112 228.68798828]
[84.43900299 213.69462585]
[84.88561249 198.70127869]
[85.33221436 183.70793152]
[85.77882385 168.71458435]
[73.23758698 176.94363403]
[58.93765640 172.41461182]
[53.42041397 158.46612549]
[60.75296021 145.38050842]
[75.53002167 142.80395508]
[86.85782623 152.63432312]
[88.41835022 137.71571350]
[89.97887421 122.79711151]
[91.53939819 107.87850189]
[81.83858490 119.31941223]
[67.96694946 125.02709961]
[53.02344894 123.72646332]
[40.34649277 115.70806122]
[32.76814651 102.76322937]
[31.98143578 87.78387451]
[38.16210938 74.11642456]
[49.92939377 64.81421661]
[64.65444946 61.95539856]
[79.04765320 66.17862701]
[89.89353180 76.54042816]
[94.76908875 90.72596741]
[98.74118042 76.26144409]
[102.71327972 61.79692078]
[106.68537903 47.33239746]
[108.80000305 32.48220062]
[109.02333069 17.48386192]
[109.24665833 2.48552537]
[109.46998596 -12.51281166]
[109.69331360 -27.51114845]
[96.61544800 -35.44315720]
[89.31198120 -48.76817703]
[89.65654755 -63.85948944]
[97.45648193 -76.66639709]
[110.53148651 -83.80151367]
[110.75481415 -98.79985046]
[110.97814178 -113.79819489]
[110.41992950 -128.78779602]
[109.08169556 -143.72798157]
[107.74346161 -158.66816711]
[95.41454315 -174.61685181]
[104.30411530 -191.78840637]
[102.52165222 -206.68212891]
[100.73918915 -221.57585144]
[98.95671844 -236.46955872]
[89.31811523 -245.04045105]
[88.14011383 -257.48214722]
[95.51123810 -267.07345581]
[93.95071411 -281.99206543]
[92.39019012 -296.91067505]
[90.82966614 -311.82928467]
[75.99709320 -314.74237061]
[62.68291855 -321.89947510]
[52.07104111 -332.66421509]
[45.10505676 -346.07934570]
[42.40437698 -360.95208740]
[44.20914078 -375.95986938]
[50.35887527 -389.76828003]
[60.30674744 -401.14947510]
[73.16819763 -409.09140015]
[87.79959869 -412.88793945]
[102.89994049 -412.20141602]
[117.12649536 -407.09295654]
[129.21426392 -398.01675415]
[138.08839417 -385.77987671]
[142.95982361 -371.47042847]
[143.39537048 -356.36077881]
[139.35632324 -341.79446411]
[131.20181274 -329.06671143]
[119.65693665 -319.30929565]
[105.74827576 -313.38980103]
[107.30879211 -298.47119141]
[108.86931610 -283.55258179]
[110.42984009 -268.63397217]
[121.48816681 -255.00752258]
[113.85044098 -238.25202942]
[115.63290405 -223.35830688]
[117.41536713 -208.46459961]
[119.19783783 -193.57087708]
[127.76616669 -188.00340271]
[131.94329834 -178.43785095]
[130.12872314 -167.93606567]
[122.68364716 -160.00640869]
[124.02188110 -145.06622314]
[125.36011505 -130.12603760]
[134.91062927 -141.69270325]
[149.63830566 -144.53790283]
[162.80987549 -137.36087036]
[168.40345764 -123.44282532]
[163.86174011 -109.14692688]
[151.26113892 -101.00905609]
[136.36248779 -102.74974823]
[125.97647858 -113.57486725]
[125.75315094 -98.57652283]
[125.52982330 -83.57818604]
[138.38658142 -76.05694580]
[145.80175781 -63.02347565]
[145.69683838 -47.92860031]
[137.99987793 -34.82693481]
[124.69165039 -27.28782082]
[124.46832275 -12.28948402]
[124.24499512 2.70885324]
[124.02166748 17.70719147]
[123.79833984 32.70552826]
[131.11392212 19.61040688]
[142.24104309 9.55122662]
[156.00544739 3.58955956]
[170.95451355 2.35455298]
[185.51065063 5.97654057]
[198.13771057 14.07328510]
[207.50314331 25.79031754]
[212.61856079 39.89111328]
[212.94415283 54.88757706]
[208.44554138 69.19710541]
[199.59747314 81.30957031]
[187.33372498 89.94671631]
[172.94850159 94.19704437]
[157.95991516 93.61201477]
[143.94975281 88.25336456]
[132.39653015 78.68659210]
[124.51948547 65.92131805]
[121.14990234 51.30449295]
[117.17780304 65.76902008]
[113.20571136 80.23354340]
[109.23361206 94.69806671]
[106.45800018 109.43902588]
[104.89747620 124.35763550]
[103.33695221 139.27624512]
[101.77642822 154.19483948]
[100.77217102 169.16119385]
[100.32556915 184.15454102]
[99.87895966 199.14788818]
[99.43235016 214.14123535]
[98.98574829 229.13458252]
[98.53913879 244.12792969]
[99.87737274 259.06811523]
[102.98148346 273.74343872]
[113.40711975 285.64370728]
[108.47109222 299.69665527]
[111.57520294 314.37194824]
[114.67931366 329.04724121]
[121.36119843 315.61770630]
[134.18804932 307.84133911]
[149.18530273 308.12771606]
[161.70593262 316.38809204]
[167.87025452 330.06292725]
[165.76820374 344.91491699]
[156.05111694 356.34201050]
[141.72993469 360.80337524]
[127.24224854 356.91662598]
[117.07708740 345.88589478]
[118.19273376 360.84436035]
[119.30838776 375.80282593]
[120.42403412 390.76126099]
[122.09557343 405.66784668]
[124.32069397 420.50189209]
[126.54580688 435.33593750]
[128.77091980 450.16998291]
[130.99604797 465.00402832]
[145.47439575 469.96746826]
[155.97926331 481.09878540]
[160.09672546 495.84008789]
[156.88058472 510.80386353]
[147.06993103 522.55163574]
[132.91914368 528.38372803]
[117.67999268 526.96014404]
[104.85430908 518.60784912]
[97.38935089 505.24621582]
[97.00050354 489.94564819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 182]
[16 181]
[17 180]
[19 178]
[20 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[48 170]
[49 169]
[50 168]
[51 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[76 136]
[77 135]
[78 134]
[79 126]
[80 125]
[81 124]
[83 120]
[84 119]
[85 118]
[86 117]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
