%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[109.54470825 590.70501709]
[103.12036896 577.11169434]
[99.02117920 562.64636230]
[97.35897064 547.70355225]
[98.17908478 532.69097900]
[101.45914459 518.01818848]
[107.10968018 504.08544922]
[114.97653198 491.27285767]
[124.84508514 479.92996216]
[136.44612122 470.36618042]
[149.46316528 462.84246826]
[163.54109192 457.56402588]
[160.65580750 442.84411621]
[157.77053833 428.12423706]
[147.72961426 417.12289429]
[152.66795349 402.09216309]
[149.78266907 387.37225342]
[136.21853638 381.27700806]
[128.75617981 368.20883179]
[130.43943787 353.07543945]
[140.83105469 341.70352173]
[137.94578552 326.98364258]
[135.06051636 312.26373291]
[132.17524719 297.54385376]
[129.18046570 282.84585571]
[126.07635498 268.17053223]
[122.97225189 253.49523926]
[119.86814117 238.81993103]
[116.76403046 224.14463806]
[112.30438995 218.25112915]
[113.72466278 209.22778320]
[103.68373871 198.22647095]
[108.62207031 183.19572449]
[105.73680115 168.47583008]
[102.85152435 153.75593567]
[99.96625519 139.03604126]
[97.08097839 124.31615448]
[94.19570923 109.59626007]
[85.90036011 122.09375000]
[71.54859161 126.45571136]
[57.70183563 120.68791962]
[50.69064713 107.42733002]
[53.72044754 92.73650360]
[65.40604401 83.33189392]
[80.40495300 83.51315308]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[87.84608459 48.37846756]
[86.50785065 33.43828583]
[85.16961670 18.49809837]
[83.83138275 3.55791378]
[82.49314880 -11.38227081]
[71.55335999 -26.19451141]
[79.55244446 -41.81441879]
[77.99192047 -56.73302460]
[68.86090088 -69.65336609]
[75.23213959 -83.11652374]
[72.55814362 -86.53759766]
[71.24404144 -90.25749207]
[71.21678162 -93.81201935]
[72.26007080 -96.80838013]
[74.05005646 -98.96571350]
[73.38027191 -113.95075226]
[72.71048737 -128.93579102]
[62.44300461 -144.22174072]
[71.13157654 -159.46890259]
[70.23876190 -174.44230652]
[69.34594727 -189.41571045]
[62.71196747 -175.96244812]
[51.71552277 -165.76057434]
[37.80339050 -160.15231323]
[22.80594254 -159.87554932]
[8.69635677 -164.96667480]
[-2.66901064 -174.75587463]
[-9.79485035 -187.95520020]
[-11.74363422 -202.82807922]
[-8.25896740 -217.41769409]
[0.20068270 -229.80455017]
[12.52230358 -238.35894775]
[27.08477402 -241.95539856]
[41.97215271 -240.12072754]
[55.22574234 -233.09632874]
[65.10181427 -221.80636597]
[70.30139923 -207.73388672]
[72.74713135 -222.53315735]
[75.19285583 -237.33242798]
[77.63858032 -252.13169861]
[77.97355652 -267.12796021]
[76.19109344 -282.02166748]
[74.40863037 -296.91540527]
[72.62615967 -311.80911255]
[57.78152466 -314.72320557]
[44.56492233 -322.08367920]
[34.27118301 -333.16943359]
[27.90878296 -346.89440918]
[26.10104752 -361.91397095]
[29.02507782 -376.75665283]
[36.39440536 -389.96832275]
[47.48706436 -400.25463867]
[61.21630478 -406.60784912]
[76.23707581 -408.40551758]
[91.07779694 -405.47152710]
[104.28452301 -398.09335327]
[114.56339264 -386.99380493]
[120.90739441 -373.26031494]
[122.69499969 -358.23834229]
[119.75108337 -343.39959717]
[112.36405182 -330.19781494]
[101.25762177 -319.92636108]
[87.51988220 -313.59158325]
[89.30234528 -298.69787598]
[91.08480835 -283.80413818]
[92.86727905 -268.91043091]
[98.14569092 -282.95101929]
[107.28059387 -294.84866333]
[119.48171234 -303.57406616]
[133.69352722 -308.37240601]
[148.68659973 -308.82858276]
[163.16384888 -304.90310669]
[175.87286377 -296.93560791]
[185.71417236 -285.61535645]
[191.83642578 -271.92163086]
[193.70997620 -257.03909302]
[191.17272949 -242.25523376]
[184.44421387 -228.84899902]
[174.10647583 -217.98017883]
[161.05386353 -210.58901978]
[146.41555786 -207.31492615]
[131.45788574 -208.44114685]
[117.47487640 -213.87025452]
[105.67617035 -223.13258362]
[97.08248901 -235.42683411]
[92.43785095 -249.68597412]
[89.99212646 -234.88670349]
[87.54640198 -220.08743286]
[85.10066986 -205.28816223]
[84.31935120 -190.30851746]
[85.21216583 -175.33511353]
[86.10498047 -160.36170959]
[94.94131470 -152.10061646]
[95.80767822 -139.63333130]
[87.69552612 -129.60557556]
[88.36531067 -114.62053680]
[89.03509521 -99.63549805]
[90.15074158 -84.67704773]
[99.17013550 -72.82378387]
[92.91052246 -58.29354858]
[94.47104645 -43.37494278]
[103.66744232 -35.51664352]
[105.08963776 -23.10048103]
[97.43333435 -12.72050571]
[98.77156830 2.21967959]
[100.10980225 17.15986443]
[101.44803619 32.10004807]
[102.78627014 47.04023361]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.91559601 106.71099091]
[111.80087280 121.43087769]
[114.68614197 136.15077209]
[117.57141876 150.87066650]
[120.45668793 165.59054565]
[123.34196472 180.31044006]
[133.58926392 192.36463928]
[128.44454956 206.34251404]
[131.43933105 221.04052734]
[134.54344177 235.71582031]
[137.64755249 250.39112854]
[140.75166321 265.06643677]
[143.85577393 279.74172974]
[148.69332886 287.49002075]
[146.89514160 294.65856934]
[149.78041077 309.37847900]
[152.66567993 324.09835815]
[155.55094910 338.81823730]
[169.46673584 345.42562866]
[176.73857117 358.80371094]
[174.76191711 373.72204590]
[164.50256348 384.48699951]
[167.38783264 399.20687866]
[177.63513184 411.26107788]
[172.49043274 425.23895264]
[175.37570190 439.95886230]
[178.26097107 454.67874146]
[193.28987122 454.25189209]
[208.18402100 456.30471802]
[222.53710938 460.78115845]
[235.95758057 467.55914307]
[248.07929993 476.45373535]
[258.57156372 487.22232056]
[267.14819336 499.57107544]
[273.57513428 513.16314697]
[277.67712402 527.62768555]
[279.34222412 542.57012939]
[278.52499390 557.58288574]
[275.24774170 572.25628662]
[269.59991455 586.19012451]
[261.73553467 599.00427246]
[251.86915588 610.34906006]
[240.26995850 619.91503906]
[227.25436401 627.44128418]
[213.17745972 632.72247314]
[198.42326355 635.61444092]
[183.39428711 636.03839111]
[168.50053406 633.98272705]
[154.14830017 629.50347900]
[140.72914124 622.72290039]
[128.60914612 613.82598877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[16 182]
[17 181]
[21 177]
[22 176]
[23 175]
[24 174]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[31 167]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[55 149]
[56 148]
[58 146]
[63 145]
[64 144]
[65 143]
[67 140]
[68 139]
[69 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
