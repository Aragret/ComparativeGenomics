%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[115.15359497 470.47335815]
[103.65113831 480.32080078]
[89.57353210 485.89752197]
[74.44782257 486.59857178]
[59.91471863 482.34796143]
[47.55067444 473.60675049]
[38.69684601 461.32308960]
[34.31362915 446.82940674]
[34.87648010 431.69793701]
[40.32435226 417.56997681]
[50.06629181 405.97802734]
[63.04557419 398.17947388]
[77.85430145 395.02032471]
[79.63676453 380.12658691]
[81.41922760 365.23287964]
[75.24914551 351.67636108]
[84.57151794 338.89340210]
[86.35398102 323.99966431]
[88.13644409 309.10595703]
[89.91891479 294.21224976]
[91.70137787 279.31854248]
[93.48384857 264.42480469]
[95.26631165 249.53109741]
[96.49328613 234.58135986]
[97.16307068 219.59631348]
[85.42034912 210.47236633]
[81.25255585 196.01231384]
[86.45941925 181.70350647]
[99.24108887 173.10494995]
[99.91088104 158.11991882]
[100.58066559 143.13487244]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[75.67336273 31.60548210]
[72.13368988 17.02910614]
[58.91964340 8.78127670]
[55.53755951 -6.05166483]
[63.48203659 -18.59841156]
[59.94236374 -33.17478561]
[56.40269470 -47.75116348]
[52.86302185 -62.32753754]
[49.56749725 -47.69403076]
[42.90982437 -34.25247574]
[33.26651382 -22.76306343]
[21.18295288 -13.87557125]
[7.34251928 -8.09263134]
[-7.47204208 -5.74129677]
[-22.42289543 -6.95454693]
[-36.66449738 -11.66376686]
[-49.39141846 -19.60262871]
[-59.88388824 -30.32214737]
[-67.54850006 -43.21608734]
[-71.95179749 -57.55522919]
[-72.84474182 -72.52862549]
[-70.17683411 -87.28945923]
[-64.09896088 -101.00293732]
[-54.95484924 -112.89349365]
[-43.26164627 -122.28865814]
[-29.68066406 -128.65708923]
[-14.97996807 -131.63861084]
[0.00904608 -131.06462097]
[14.43867588 -126.96757507]
[27.49285507 -119.57918549]
[38.43330765 -109.31729126]
[46.64130020 -96.76225281]
[51.65286255 -82.62308502]
[53.43532944 -97.51679993]
[55.21779251 -112.41051483]
[57.00025940 -127.30422974]
[58.67180252 -142.21080017]
[60.23232269 -157.12940979]
[61.79284668 -172.04801941]
[63.35337067 -186.96662903]
[64.91389465 -201.88522339]
[65.58367920 -216.87026978]
[65.36035156 -231.86860657]
[65.13702393 -246.86694336]
[64.91369629 -261.86526489]
[64.69036865 -276.86361694]
[49.79209518 -278.82812500]
[35.33864594 -282.94097900]
[21.63809776 -289.11456299]
[8.98248005 -297.21722412]
[-2.35845304 -307.07629395]
[-12.14296913 -318.48159790]
[-20.16250992 -331.19003296]
[-26.24613762 -344.93075562]
[-30.26418114 -359.41085815]
[-32.13099670 -374.32168579]
[-31.80678940 -389.34542847]
[-29.29847145 -404.16183472]
[-24.65950775 -418.45513916]
[-17.98877907 -431.92062378]
[-9.42847252 -444.27127075]
[0.83895046 -455.24386597]
[12.59463787 -464.60452271]
[25.58801651 -472.15368652]
[39.54213333 -477.73046875]
[54.15954971 -481.21600342]
[69.12870026 -482.53598022]
[84.13051605 -481.66226196]
[98.84523773 -478.61349487]
[112.95920563 -473.45465088]
[126.17159271 -466.29568481]
[138.20077515 -457.28921509]
[148.79032898 -446.62716675]
[157.71456909 -434.53686523]
[164.78326416 -421.27597046]
[169.84573364 -407.12713623]
[172.79408264 -392.39196777]
[173.56546021 -377.38455200]
[172.14341736 -362.42474365]
[168.55828857 -347.83142090]
[162.88645935 -333.91567993]
[155.24885559 -320.97409058]
[145.80825806 -309.28250122]
[134.76589966 -299.09014893]
[122.35713196 -290.61428833]
[108.84646606 -284.03552246]
[94.52188110 -279.49417114]
[79.68870544 -277.08694458]
[79.91203308 -262.08859253]
[80.13536072 -247.09027100]
[80.35868835 -232.09193420]
[80.58201599 -217.09359741]
[90.28785706 -228.53022766]
[104.83462524 -232.18966675]
[118.79673767 -226.70701599]
[126.96667480 -214.12719727]
[126.29724884 -199.14213562]
[117.03813171 -187.34091187]
[102.64276123 -183.12509155]
[88.48023987 -188.06706238]
[79.83249664 -200.32470703]
[78.27197266 -185.40609741]
[76.71144867 -170.48748779]
[75.15093231 -155.56889343]
[73.59040833 -140.65028381]
[76.02098083 -133.67073059]
[71.89397430 -125.52176666]
[70.11151123 -110.62805176]
[68.32904816 -95.73432922]
[66.54657745 -80.84061432]
[67.43939209 -65.86721039]
[70.97906494 -51.29083252]
[74.51873779 -36.71445847]
[78.05841064 -22.13808441]
[90.87239075 -14.63224316]
[94.66976166 0.09985071]
[86.71006775 13.48943424]
[90.24974060 28.06580925]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.28017426 110.09703827]
[124.93653870 97.19820404]
[136.01435852 87.08474731]
[149.55529785 80.63159943]
[164.38790894 78.39701843]
[179.22904968 80.57431793]
[192.79479980 86.97513580]
[203.91159058 97.04573822]
[211.61769104 109.91491699]
[215.24647522 124.46936798]
[214.48399353 139.44998169]
[209.39622498 153.56077576]
[200.42329407 165.58103943]
[188.34147644 174.47088623]
[174.19593811 179.46125793]
[159.21043396 180.12045288]
[144.68133545 176.39141846]
[131.86558533 168.59678650]
[121.87185669 157.41082764]
[115.56570435 143.80465698]
[114.89591980 158.78970337]
[114.22612762 173.77473450]
[126.18970490 183.47932434]
[130.09924316 198.19560242]
[124.65800476 212.22618103]
[112.14810944 220.26611328]
[111.47832489 235.25114441]
[124.14069366 227.20971680]
[138.37159729 231.95115662]
[143.68055725 245.98022461]
[136.15400696 258.95523071]
[121.34021759 261.31149292]
[110.16002655 251.31355286]
[108.37756348 266.20727539]
[106.59509277 281.10098267]
[104.81262970 295.99472046]
[103.03016663 310.88842773]
[101.24769592 325.78213501]
[99.46523285 340.67587280]
[105.50782013 355.29769897]
[96.31295013 367.01535034]
[94.53047943 381.90905762]
[92.74801636 396.80279541]
[106.39302063 403.36727905]
[117.16546631 414.00839233]
[123.89683533 427.57183838]
[125.85695648 442.58639526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 206]
[14 205]
[15 204]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[24 190]
[25 189]
[29 185]
[30 184]
[31 183]
[32 163]
[33 162]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[43 152]
[44 151]
[45 150]
[46 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
