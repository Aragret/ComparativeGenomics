%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUAGCACACUCCCACCCUGACAGAUGACUCAUCGGAGGAGUCUAAGUAACUUGAUCCAGACAGGGUUACAUACCCUACCGCCUAUCAUUCAAACAUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[110.69370270 610.30078125]
[107.88726807 595.46746826]
[109.18803406 580.42718506]
[114.49945831 566.29595947]
[123.42741394 554.12243652]
[135.30937195 544.80999756]
[149.26362610 539.04968262]
[147.48117065 524.15594482]
[145.69869995 509.26223755]
[143.91622925 494.36853027]
[130.26329041 484.54833984]
[127.89037323 467.55764771]
[138.74954224 453.84277344]
[136.74552917 438.97723389]
[134.74151611 424.11172485]
[120.94388580 414.49588013]
[118.31826019 397.54238892]
[128.97204590 383.66735840]
[126.74692535 368.83331299]
[124.52180481 353.99926758]
[111.20217133 352.00357056]
[98.96850586 346.33029175]
[88.81520081 337.43011475]
[81.57047272 326.01651001]
[77.82881927 313.00839233]
[77.90226746 299.45620728]
[81.79433441 286.45718384]
[89.19899750 275.06640625]
[99.52474213 266.21115112]
[111.94178772 260.61557007]
[110.15932465 245.72184753]
[108.37685394 230.82812500]
[106.59439087 215.93440247]
[104.81192780 201.04069519]
[103.02945709 186.14697266]
[101.24699402 171.25325012]
[99.35369873 156.37321472]
[97.34968567 141.50769043]
[95.34567261 126.64216614]
[93.34165955 111.77663422]
[88.55388641 125.99201965]
[81.03860474 138.97357178]
[71.09514618 150.20422363]
[59.11955643 159.23667908]
[45.58881378 165.71116638]
[31.04184532 169.36981201]
[16.05805206 170.06690979]
[1.23423231 167.77467346]
[-12.83918858 162.58441162]
[-25.60166931 154.70285034]
[-36.54488754 144.44389343]
[-45.23297882 132.21618652]
[-51.31989670 118.50671387]
[-54.56320572 103.86154938]
[-54.83372116 88.86398315]
[-52.12067413 74.11138153]
[-46.53212357 60.19131851]
[-38.29065323 47.65823746]
[-27.72452545 37.01131439]
[-15.25457954 28.67462158]
[-1.37749064 22.98020172]
[13.35402203 20.15486336]
[28.35320854 20.31113625]
[43.02265549 23.44279861]
[56.77808762 29.42511559]
[69.07162476 38.01981354]
[79.41362762 48.88457489]
[87.39218140 61.58665085]
[92.68949127 75.62013245]
[95.09431458 90.42189026]
[99.49531555 76.08203888]
[103.89630890 61.74219513]
[108.29730988 47.40234756]
[104.94950104 31.93940163]
[116.08045959 22.04238129]
[120.48146057 7.70253468]
[124.88245392 -6.63731241]
[129.28344727 -20.97715950]
[133.68444824 -35.31700516]
[136.89772034 -49.96879578]
[138.90173340 -64.83432007]
[133.07751465 -79.54448700]
[142.44583130 -91.12395477]
[144.44984436 -105.98947906]
[146.45385742 -120.85501099]
[148.45787048 -135.72053528]
[150.46188354 -150.58605957]
[152.46589661 -165.45159912]
[154.46990967 -180.31712341]
[156.03044128 -195.23573303]
[157.14608765 -210.19418335]
[158.26173401 -225.15263367]
[143.73878479 -229.08717346]
[130.22302246 -235.69932556]
[118.20303345 -244.75009155]
[108.11331940 -255.91226196]
[100.31863403 -268.78234863]
[95.10073853 -282.89511108]
[92.64826202 -297.74038696]
[93.04985046 -312.78149414]
[96.29100037 -327.47476196]
[102.25454712 -341.28897095]
[110.72489929 -353.72479248]
[121.39586639 -364.33267212]
[133.88169861 -372.72912598]
[147.73103333 -378.61062622]
[162.44323730 -381.76461792]
[177.48648071 -382.07699585]
[192.31694031 -379.53652954]
[206.39851379 -374.23504639]
[219.22215271 -366.36416626]
[230.32431030 -356.20843506]
[239.30361938 -344.13497925]
[245.83552551 -330.58026123]
[249.68386841 -316.03424072]
[250.70954895 -301.02273560]
[248.87547302 -286.08847046]
[244.24797058 -271.77124023]
[236.99430847 -258.58865356]
[227.37669373 -247.01722717]
[215.74279785 -237.47526550]
[202.51318359 -230.30770874]
[188.16610718 -225.77363586]
[173.22018433 -224.03698730]
[172.10453796 -209.07853699]
[170.98889160 -194.12008667]
[172.71385193 -191.91040039]
[173.66746521 -188.88430786]
[173.53437805 -185.33216858]
[172.11010742 -181.65304565]
[169.33543396 -178.31311035]
[167.33142090 -163.44758606]
[165.32740784 -148.58204651]
[163.32339478 -133.71652222]
[161.31938171 -118.85099792]
[159.31536865 -103.98546600]
[157.31135559 -89.11994171]
[163.27891541 -75.47305298]
[153.76727295 -62.83030701]
[151.76325989 -47.96477890]
[161.80039978 -59.11178589]
[175.83583069 -64.40393829]
[190.73397827 -62.65895081]
[203.16658020 -54.26666260]
[210.35614014 -41.10193253]
[210.69651794 -26.10579681]
[204.11164856 -12.62842560]
[192.07261658 -3.68070078]
[177.26898193 -1.26156640]
[163.00790405 -5.91146326]
[152.47534180 -16.59159279]
[148.02429199 -30.91600800]
[143.62330627 -16.57616234]
[139.22230530 -2.23631454]
[134.82130432 12.10353279]
[130.42030334 26.44338036]
[134.08290100 40.88064575]
[122.63716125 51.80334473]
[118.23616028 66.14319611]
[113.83515930 80.48303986]
[109.43416595 94.82289124]
[108.20719147 109.77262115]
[110.21120453 124.63814545]
[112.21521759 139.50367737]
[114.21923065 154.36920166]
[118.46710205 162.45582581]
[116.14070892 169.47079468]
[117.92317963 184.36450195]
[119.70564270 199.25822449]
[121.48810577 214.15194702]
[123.27057648 229.04565430]
[125.05303955 243.93937683]
[126.83550262 258.83309937]
[143.08316040 262.41867065]
[157.09973145 271.33633423]
[167.20056152 284.49346924]
[172.17880249 300.28912354]
[171.44952393 316.80892944]
[165.11843872 332.05703735]
[153.96696472 344.19723511]
[139.35585022 351.77416992]
[141.58096313 366.60821533]
[143.80609131 381.44226074]
[155.48713684 388.14804077]
[161.09146118 400.18139648]
[158.77616882 413.05468750]
[149.60705566 422.10769653]
[151.61106873 436.97323608]
[153.61508179 451.83874512]
[165.19499207 458.71771240]
[170.61953735 470.83319092]
[168.11283875 483.67059326]
[158.80995178 492.58605957]
[160.59242249 507.47976685]
[162.37487793 522.37347412]
[164.15734863 537.26721191]
[179.07682800 539.57196045]
[192.82075500 545.81750488]
[204.36924744 555.54040527]
[212.86532593 568.01916504]
[217.67854309 582.32775879]
[218.45169067 597.40435791]
[215.12742615 612.13024902]
[207.95243835 625.41265869]
[197.45912170 636.26593018]
[184.42617798 643.88464355]
[169.82073975 647.70349121]
[154.72660828 647.43908691]
[140.26388550 643.11096191]
[127.50579071 635.04046631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[10 193]
[13 189]
[14 188]
[15 187]
[18 183]
[19 182]
[20 181]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[36 167]
[37 165]
[38 164]
[39 163]
[40 162]
[70 161]
[71 160]
[72 159]
[73 158]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 140]
[81 139]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 126]
[91 125]
[92 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
