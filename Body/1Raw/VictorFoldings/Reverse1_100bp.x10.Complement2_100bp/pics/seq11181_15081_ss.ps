%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[59.95339966 788.15618896]
[45.09856033 790.29077148]
[30.12390327 791.28192139]
[15.11731339 791.12390137]
[0.16685189 789.81762695]
[-14.63974285 787.37066650]
[-29.21557808 783.79748535]
[-43.47512054 779.11895752]
[-57.33468246 773.36267090]
[-70.71292877 766.56225586]
[-83.53135681 758.75775146]
[-95.71473694 749.99487305]
[-107.19157410 740.32507324]
[-117.89451599 729.80511475]
[-127.76074982 718.49670410]
[-136.73237610 706.46618652]
[-144.75675964 693.78424072]
[-151.78678894 680.52520752]
[-157.78120422 666.76696777]
[-162.70486450 652.59020996]
[-166.52882385 638.07812500]
[-169.23068237 623.31591797]
[-170.79457092 608.39019775]
[-171.21131897 593.38861084]
[-170.47846985 578.39904785]
[-168.60031128 563.50964355]
[-165.58790588 548.80767822]
[-161.45889282 534.37939453]
[-156.23751831 520.30957031]
[-149.95442200 506.68075562]
[-142.64648438 493.57284546]
[-134.35658264 481.06286621]
[-125.13336182 469.22415161]
[-115.03096008 458.12622070]
[-104.10865021 447.83416748]
[-92.43054199 438.40841675]
[-80.06516266 429.90429688]
[-67.08508301 422.37170410]
[-53.56646347 415.85482788]
[-39.58864975 410.39190674]
[-25.23366356 406.01501465]
[-10.58574867 402.74984741]
[4.26913309 400.61553955]
[19.24380684 399.62463379]
[34.25039673 399.78295898]
[49.20083237 401.08956909]
[51.64656067 386.29028320]
[54.09228516 371.49102783]
[56.53801346 356.69174194]
[54.53437424 352.35647583]
[55.23284912 346.71652222]
[59.28318787 341.49099731]
[62.16846085 326.77108765]
[65.05373383 312.05120850]
[67.49945831 297.25192261]
[69.50347137 282.38641357]
[71.50749207 267.52087402]
[73.51150513 252.65534973]
[75.51551819 237.78982544]
[77.51953125 222.92428589]
[69.98905182 207.07315063]
[81.36501312 192.59318542]
[83.14748383 177.69947815]
[84.92994690 162.80575562]
[78.75986481 149.24923706]
[88.08222961 136.46627808]
[89.86469269 121.57255554]
[91.64716339 106.67884064]
[91.64716339 91.67884064]
[89.86469269 76.78511810]
[88.08222961 61.89140320]
[84.43177032 56.37908554]
[84.15470886 50.70279694]
[86.47524261 46.52856827]
[85.13700867 31.58838272]
[83.79877472 16.64819717]
[82.46054077 1.70801246]
[78.97581482 -3.91055036]
[78.86788177 -9.59257221]
[81.31166840 -13.69585896]
[80.41885376 -28.66926575]
[71.30747986 -37.79865646]
[70.87211609 -50.28841782]
[78.80105591 -59.42398071]
[78.13127136 -74.40901947]
[77.46148682 -89.39405823]
[76.79169464 -104.37909698]
[65.41088867 -115.01464844]
[64.94509888 -130.22114563]
[75.15460968 -141.00546265]
[74.48482513 -155.99050903]
[73.81504059 -170.97554016]
[73.14525604 -185.96058655]
[72.36393738 -200.94021606]
[71.47111511 -215.91362000]
[70.57830048 -230.88703918]
[56.20172119 -235.82487488]
[44.81243134 -245.89227295]
[38.14722443 -259.55401611]
[37.22248840 -274.72680664]
[42.17924118 -289.09689331]
[52.26161575 -300.47293091]
[65.93212128 -307.12014771]
[81.10610962 -308.02493286]
[95.46965027 -303.04928589]
[106.83241272 -292.95193481]
[113.46165466 -279.27270508]
[114.34646606 -264.09753418]
[109.35192108 -249.74055481]
[99.23965454 -238.39109802]
[85.55171204 -231.77984619]
[86.44452667 -216.80644226]
[87.33734131 -201.83303833]
[90.87339020 -195.34318542]
[88.13029480 -186.63037109]
[88.80007935 -171.64532471]
[89.46986389 -156.66029358]
[90.13964844 -141.67524719]
[101.27057648 -131.84478760]
[102.16330719 -116.65737152]
[91.77673340 -105.04888153]
[92.44652557 -90.06384277]
[93.11631012 -75.07880402]
[93.78609467 -60.09376526]
[104.01374817 -45.83326340]
[95.39225769 -29.56208038]
[96.28507233 -14.58867550]
[97.40071869 0.36977831]
[98.73896027 15.30996323]
[100.07719421 30.25014877]
[101.41542816 45.19033432]
[102.97594452 60.10893631]
[104.75841522 75.00265503]
[106.54087830 89.89636993]
[112.18754578 75.99978638]
[122.19514465 64.82624817]
[135.38800049 57.68841934]
[150.21623230 55.42484665]
[164.93782043 58.30144501]
[177.82328796 65.98027802]
[187.35888672 77.55924988]
[192.42434692 91.67807007]
[192.42462158 106.67807007]
[187.35964966 120.79706573]
[177.82447815 132.37637329]
[164.93928528 140.05567932]
[150.21778870 142.93280029]
[135.38948059 140.66975403]
[122.19638062 133.53239441]
[112.18837738 122.35922241]
[106.54087830 108.46130371]
[104.75841522 123.35501862]
[102.97594452 138.24873352]
[109.01853943 152.87055969]
[99.82366180 164.58822632]
[98.04119873 179.48193359]
[96.25872803 194.37565613]
[103.60258484 204.97898865]
[101.81134796 217.34730530]
[92.38505554 224.92831421]
[90.38104248 239.79383850]
[88.37702942 254.65936279]
[86.37301636 269.52490234]
[84.36900330 284.39041138]
[82.36499023 299.25595093]
[84.15616608 303.21139526]
[84.55534363 307.13635254]
[83.74304199 310.59692383]
[82.02214050 313.26248169]
[79.77362823 314.93649292]
[76.88835144 329.65637207]
[74.00308228 344.37625122]
[71.33728790 359.13748169]
[68.89155579 373.93673706]
[66.44583130 388.73602295]
[64.00009918 403.53527832]
[78.57600403 407.10821533]
[92.83563232 411.78643799]
[106.69530487 417.54248047]
[120.07368469 424.34262085]
[132.89225769 432.14691162]
[145.07580566 440.90954590]
[156.55282593 450.57913208]
[167.25596619 461.09890747]
[177.12242126 472.40713501]
[186.09426880 484.43743896]
[194.11889648 497.11926270]
[201.14916992 510.37814331]
[207.14385986 524.13629150]
[212.06777954 538.31292725]
[215.89201355 552.82495117]
[218.59416199 567.58709717]
[220.15832520 582.51275635]
[220.57534790 597.51440430]
[219.84278870 612.50390625]
[217.96492004 627.39337158]
[214.95277405 642.09545898]
[210.82405090 656.52374268]
[205.60293579 670.59368896]
[199.32009888 684.22265625]
[192.01240540 697.33068848]
[183.72274780 709.84082031]
[174.49975586 721.67968750]
[164.39755249 732.77783203]
[153.47544861 743.07006836]
[141.79751587 752.49603271]
[129.43229675 761.00042725]
[116.45236206 768.53326416]
[102.93386841 775.05041504]
[88.95615387 780.51354980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 176]
[47 175]
[48 174]
[49 173]
[52 172]
[53 171]
[54 170]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[62 157]
[63 156]
[64 155]
[66 153]
[67 152]
[68 151]
[69 134]
[70 133]
[71 132]
[74 131]
[75 130]
[76 129]
[77 128]
[80 127]
[81 126]
[84 124]
[85 123]
[86 122]
[87 121]
[90 118]
[91 117]
[92 116]
[93 115]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
