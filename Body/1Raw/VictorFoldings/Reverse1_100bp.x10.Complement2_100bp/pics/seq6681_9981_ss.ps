%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[128.04953003 740.61608887]
[115.85779572 731.86749268]
[104.29151917 722.30725098]
[93.40462494 711.97998047]
[83.24786377 700.93389893]
[73.86859894 689.22033691]
[65.31056213 676.89410400]
[57.61365509 664.01257324]
[50.81376266 650.63574219]
[44.94258881 636.82611084]
[40.02751160 622.64801025]
[36.09144211 608.16754150]
[33.15273666 593.45220947]
[31.22509766 578.57067871]
[30.31750870 563.59222412]
[30.43420219 548.58679199]
[31.57463646 533.62432861]
[33.73349380 518.77453613]
[36.90070724 504.10668945]
[41.06150818 489.68917847]
[46.19649887 475.58923340]
[52.28174210 461.87258911]
[59.28885651 448.60317993]
[67.18517303 435.84289551]
[75.93388367 423.65121460]
[85.49418640 412.08502197]
[95.82151794 401.19818115]
[106.86771393 391.04150391]
[118.58128357 381.66232300]
[130.90760803 373.10437012]
[143.78919983 365.40753174]
[157.16603088 358.60772705]
[151.29707336 344.80355835]
[145.42810059 330.99938965]
[139.55914307 317.19519043]
[133.69018555 303.39102173]
[127.82122040 289.58685303]
[121.95226288 275.78268433]
[116.08330536 261.97848511]
[114.82685089 276.92578125]
[109.07093048 290.77746582]
[99.36415863 302.21331787]
[86.63172150 310.14331055]
[72.08718872 313.81164551]
[57.11685944 312.86865234]
[43.14760590 307.40423584]
[31.51089287 297.93920898]
[23.31585312 285.37570190]
[19.34358788 270.91122437]
[19.97270775 255.92442322]
[25.14324951 241.84375000]
[34.36238861 230.01127625]
[46.75141525 221.55479431]
[61.12948990 217.28033447]
[76.12618256 217.59530640]
[90.31210327 222.46969604]
[102.33514404 231.43888855]
[111.04985809 243.64903259]
[109.04583740 228.78349304]
[99.67752838 217.20404053]
[105.50174713 202.49386597]
[103.49773407 187.62834167]
[101.49372101 172.76281738]
[99.48970795 157.89727783]
[95.48075867 151.68841553]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[78.21569061 46.20380783]
[84.38577271 32.64728165]
[82.38175964 17.78175545]
[80.15663910 2.94771123]
[77.93152618 -11.88633251]
[72.70111084 2.17221737]
[63.03062820 13.63876343]
[50.05614090 21.16622734]
[35.30188751 23.87029076]
[20.50117683 21.43328285]
[7.39278603 14.14150047]
[-2.48332572 2.85157442]
[-7.96692276 -11.11016464]
[-8.41379738 -26.10350609]
[-3.77145076 -40.36705017]
[5.41473770 -52.22512436]
[18.06558418 -60.28465652]
[32.69488144 -63.59882355]
[47.58399200 -61.77827454]
[60.98375702 -55.03689194]
[71.31999207 -44.16664505]
[77.37877655 -30.44303322]
[78.71701050 -45.38321686]
[80.05524445 -60.32340240]
[81.39347839 -75.26358795]
[82.73171234 -90.20377350]
[68.67050171 -95.72274017]
[56.73458099 -104.98073578]
[47.89155197 -117.22727203]
[42.85827255 -131.46955872]
[42.04277039 -146.55303955]
[45.51115799 -161.25498962]
[52.98226166 -174.38354492]
[63.85043716 -184.87448120]
[77.23464966 -191.87730408]
[92.04989624 -194.82434082]
[107.09518433 -193.47668457]
[121.15084076 -187.94360352]
[133.07745361 -178.67361450]
[141.90817261 -166.41821289]
[146.92713928 -152.17086792]
[147.72749329 -137.08656311]
[144.24433899 -122.38812256]
[136.76005554 -109.26706696]
[125.88134003 -98.78707123]
[112.49009705 -91.79769135]
[97.67189789 -88.86553955]
[96.33366394 -73.92535400]
[94.99542999 -58.98516846]
[93.65719604 -44.04498291]
[92.31896210 -29.10479927]
[92.76556396 -14.11144924]
[94.99068451 0.72259420]
[97.21579742 15.55663776]
[100.45582581 19.06538391]
[101.52606964 24.64674568]
[99.27948761 30.86481667]
[108.47435760 42.58247757]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.35523987 155.89326477]
[116.35925293 170.75878906]
[118.36326599 185.62432861]
[120.36727905 200.48985291]
[129.87893677 213.13259888]
[123.91136932 226.77947998]
[125.91538239 241.64501953]
[129.88748169 256.10952759]
[135.75643921 269.91372681]
[141.62539673 283.71789551]
[147.49435425 297.52206421]
[153.36332703 311.32623291]
[159.23228455 325.13043213]
[165.10124207 338.93460083]
[170.97019958 352.73876953]
[185.14820862 347.82342529]
[199.62860107 343.88705444]
[214.34387207 340.94805908]
[229.22540283 339.02011108]
[244.20379639 338.11221313]
[259.20922852 338.22860718]
[274.17175293 339.36874390]
[289.02157593 341.52731323]
[303.68948364 344.69421387]
[318.10708618 348.85473633]
[332.20712280 353.98944092]
[345.92388916 360.07440186]
[359.19345093 367.08126831]
[371.95388794 374.97732544]
[384.14575195 383.72576904]
[395.71215820 393.28585815]
[406.59918213 403.61294556]
[416.75607300 414.65896606]
[426.13549805 426.37234497]
[434.69369507 438.69848633]
[442.39077759 451.57992554]
[449.19085693 464.95660400]
[455.06222534 478.76617432]
[459.97747803 492.94421387]
[463.91375732 507.42462158]
[466.85266113 522.13989258]
[468.78048706 537.02148438]
[469.68829346 551.99987793]
[469.57177734 567.00531006]
[468.43154907 581.96783447]
[466.27288818 596.81762695]
[463.10589600 611.48553467]
[458.94528198 625.90307617]
[453.81048584 640.00311279]
[447.72540283 653.71984863]
[440.71847534 666.98931885]
[432.82232666 679.74969482]
[424.07379150 691.94152832]
[414.51364136 703.50781250]
[404.18646240 714.39483643]
[393.14038086 724.55163574]
[381.42694092 733.93096924]
[369.10073853 742.48907471]
[356.21923828 750.18609619]
[342.84249878 756.98608398]
[329.03292847 762.85736084]
[314.85482788 767.77252197]
[300.37438965 771.70867920]
[285.65908813 774.64746094]
[270.77752686 776.57525635]
[255.79913330 777.48291016]
[240.79368591 777.36633301]
[225.83119202 776.22601318]
[210.98138428 774.06726074]
[196.31353760 770.90014648]
[181.89599609 766.73944092]
[167.79602051 761.60449219]
[154.07931519 755.51934814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[58 144]
[59 143]
[61 141]
[62 140]
[63 139]
[64 138]
[66 137]
[67 136]
[68 135]
[70 133]
[71 132]
[72 131]
[74 129]
[75 126]
[76 125]
[77 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
