%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[168.05679321 582.70379639]
[154.87736511 590.89416504]
[139.40325928 589.74005127]
[127.58460999 579.68524170]
[123.96591949 564.59600830]
[129.93864441 550.27447510]
[143.20614624 542.22753906]
[144.32179260 527.26910400]
[137.55253601 514.00158691]
[146.29481506 500.81512451]
[139.52555847 487.54763794]
[148.26783752 474.36117554]
[149.38348389 459.40270996]
[150.49913025 444.44424438]
[143.72987366 431.17675781]
[152.47215271 417.99029541]
[153.58779907 403.03182983]
[154.70346069 388.07339478]
[154.25685120 373.08004761]
[152.25283813 358.21450806]
[150.24882507 343.34896851]
[148.24481201 328.48345947]
[146.24079895 313.61791992]
[136.87248230 302.03845215]
[142.69670105 287.32827759]
[140.69268799 272.46276855]
[138.68867493 257.59722900]
[134.67973328 251.38836670]
[136.76719666 242.49565125]
[134.98472595 227.60192871]
[133.20227051 212.70822144]
[129.66259766 198.13183594]
[124.41587067 184.07936096]
[119.16915131 170.02690125]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[70.89350891 67.34592438]
[73.47216797 52.67623901]
[61.24572754 42.63508606]
[63.82439041 27.96539688]
[52.34657669 22.08130264]
[48.09045410 10.33101749]
[52.82485962 -0.80055696]
[47.57814407 -14.85302830]
[42.33142471 -28.90549850]
[38.30403137 -32.22621918]
[36.16683960 -36.34759140]
[35.90830231 -40.41554260]
[37.17956924 -43.70434189]
[32.56555939 -57.97707748]
[27.95154953 -72.24980927]
[16.34444618 -83.00089264]
[19.79169273 -97.49108887]
[15.17768288 -111.76381683]
[10.56367302 -126.03655243]
[5.94966412 -140.30928040]
[1.30706704 -145.01649475]
[-0.05666067 -150.53349304]
[1.41761744 -155.07612610]
[-9.86423969 -166.16802979]
[-5.98709631 -180.54916382]
[-10.17410755 -194.95294189]
[-14.46823120 -209.32516479]
[-25.91398048 -220.24786377]
[-22.25137901 -234.68513489]
[-26.65237808 -249.02497864]
[-31.05337524 -263.36480713]
[-45.86627579 -260.86822510]
[-60.87832260 -260.32650757]
[-75.83264160 -261.74896240]
[-90.47334290 -265.11123657]
[-104.54991150 -270.35580444]
[-117.82146454 -277.39291382]
[-130.06091309 -286.10214233]
[-141.05883789 -296.33447266]
[-150.62704468 -307.91482544]
[-158.60179138 -320.64505005]
[-164.84663391 -334.30728149]
[-169.25471497 -348.66778564]
[-171.75061035 -363.48080444]
[-172.29161072 -378.49285889]
[-170.86843872 -393.44711304]
[-167.50547791 -408.08767700]
[-162.26025391 -422.16397095]
[-155.22251892 -435.43521118]
[-146.51269531 -447.67422485]
[-136.27983093 -458.67166138]
[-124.69902802 -468.23931885]
[-111.96843719 -476.21347046]
[-98.30589294 -482.45767212]
[-83.94519043 -486.86505127]
[-69.13204956 -489.36026001]
[-54.11994934 -489.90051270]
[-39.16576767 -488.47665405]
[-24.52538490 -485.11297607]
[-10.44932175 -479.86709595]
[2.82156467 -472.82873535]
[15.06019115 -464.11831665]
[26.05713844 -453.88494873]
[35.62423706 -442.30368042]
[43.59777451 -429.57269287]
[49.84132004 -415.90985107]
[54.24803543 -401.54895020]
[56.74251938 -386.73568726]
[57.28208160 -371.72357178]
[55.85749435 -356.76943970]
[52.49313354 -342.12924194]
[47.24656677 -328.05340576]
[40.20756912 -314.78286743]
[31.49658775 -302.54464722]
[21.26267815 -291.54818726]
[9.68095970 -281.98165894]
[-3.05039334 -274.00872803]
[-16.71352959 -267.76580811]
[-12.31253052 -253.42597961]
[-7.91153288 -239.08612061]
[3.21942735 -229.18910217]
[-0.12838410 -213.72616577]
[4.83926678 -208.25402832]
[4.22967434 -199.13995361]
[8.41668606 -184.73617554]
[19.39905930 -174.67453003]
[15.82139969 -159.26313782]
[20.22239685 -144.92329407]
[24.83640671 -130.65055847]
[29.45041656 -116.37783051]
[34.06442642 -102.10509491]
[45.34150314 -92.37489319]
[42.22428513 -76.86382294]
[46.83829117 -62.59108734]
[51.45230103 -48.31835175]
[56.38389587 -34.15221786]
[61.63061523 -20.09974670]
[66.87733459 -6.04727507]
[80.99565125 4.37578011]
[77.79718781 22.51004028]
[89.63342285 31.55176353]
[87.44496918 47.22088242]
[99.28120422 56.26260376]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.82693481 157.41435242]
[133.22161865 164.78018188]
[138.46833801 178.83265686]
[143.71505737 192.88511658]
[145.92295837 178.04850769]
[153.01123047 164.82894897]
[164.14712524 154.77947998]
[178.02241516 149.08070374]
[193.00706482 148.40208435]
[207.34066772 152.82336426]
[219.33934021 161.82513428]
[227.59349060 174.34986877]
[231.13342285 188.92617798]
[229.54327393 203.84165955]
[223.00984192 217.34403992]
[212.30068970 227.84709167]
[198.67390442 234.11691284]
[183.73034668 235.41694641]
[169.22557068 231.59443665]
[156.86358643 223.09848022]
[148.09597778 210.92575073]
[149.87844849 225.81947327]
[151.66091919 240.71318054]
[153.55419922 255.59321594]
[155.55821228 270.45874023]
[157.56222534 285.32427979]
[167.07388306 297.96701050]
[161.10632324 311.61389160]
[163.11033630 326.47943115]
[165.11434937 341.34497070]
[167.11836243 356.21047974]
[169.12237549 371.07601929]
[174.94717407 357.25314331]
[185.56423950 346.65701294]
[199.39855957 340.85946655]
[214.39791870 340.72055054]
[228.33723450 346.26089478]
[239.14871216 356.65856934]
[245.22851562 370.37121582]
[245.67475891 385.36456299]
[240.42123413 399.41448975]
[230.24726868 410.43676758]
[216.66210938 416.79629517]
[201.68104553 417.54965210]
[187.52641296 412.58514404]
[176.29797363 402.63916016]
[169.66191101 389.18902588]
[168.54626465 404.14749146]
[167.43061829 419.10592651]
[174.12007141 433.44335938]
[165.45759583 445.55990601]
[164.34194946 460.51837158]
[163.22628784 475.47680664]
[169.91575623 489.81423950]
[161.25326538 501.93078613]
[167.94273376 516.26818848]
[159.28025818 528.38476562]
[158.16459656 543.34320068]
[170.09162903 553.26922607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[10 206]
[12 204]
[13 203]
[14 202]
[16 200]
[17 199]
[18 198]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[25 177]
[26 176]
[27 175]
[29 174]
[30 173]
[31 172]
[32 155]
[33 154]
[34 153]
[35 151]
[36 150]
[37 149]
[38 148]
[40 146]
[41 145]
[43 143]
[45 141]
[48 139]
[49 138]
[50 137]
[54 136]
[55 135]
[56 134]
[58 132]
[59 131]
[60 130]
[61 129]
[64 128]
[66 126]
[67 125]
[68 123]
[70 121]
[71 120]
[72 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
