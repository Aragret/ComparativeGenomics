%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[108.32323456 532.98083496]
[107.82752228 548.06915283]
[103.27832031 562.46386719]
[95.01320648 575.09674072]
[83.64550781 585.03045654]
[70.01878357 591.52777100]
[55.14422607 594.10650635]
[40.12562561 592.57543945]
[26.07746506 587.04803467]
[14.04220963 577.93463135]
[4.91295433 565.91131592]
[-0.63284886 551.87042236]
[-2.18366432 536.85388184]
[0.37558845 521.97595215]
[6.85499620 508.34066772]
[16.77374268 496.95996094]
[29.39579391 488.67825317]
[43.78450775 484.11016846]
[58.87214279 483.59463501]
[62.41181564 469.01828003]
[65.95149231 454.44189453]
[69.49116516 439.86550903]
[73.03083801 425.28915405]
[76.57050323 410.71276855]
[80.11017609 396.13638306]
[83.32345581 381.48458862]
[86.20872498 366.76470947]
[89.09400177 352.04483032]
[90.65451813 337.12622070]
[83.10756683 324.28515625]
[91.04947662 310.60171509]
[83.50252533 297.76065063]
[91.44442749 284.07720947]
[91.66775513 269.07885742]
[84.12080383 256.23782349]
[92.06271362 242.55436707]
[92.28604126 227.55603027]
[82.92531586 212.71205139]
[92.50000000 196.98287964]
[92.50000000 181.98287964]
[92.50000000 166.98287964]
[92.50000000 151.98287964]
[78.16321564 147.76634216]
[65.59430695 139.68270874]
[55.81085205 128.38641357]
[49.60489273 114.79197693]
[47.47887039 100.00000000]
[49.60489273 85.20802307]
[55.81085205 71.61358643]
[65.59430695 60.31728745]
[78.16321564 52.23365021]
[92.50000000 48.01712418]
[92.50000000 33.01712418]
[89.37059021 24.43548203]
[92.61332703 17.79421425]
[92.83665466 2.79587626]
[83.49721527 -13.07410717]
[93.07791138 -27.77707481]
[93.07791138 -42.77707291]
[93.07791138 -57.77707291]
[93.07791138 -72.77707672]
[90.46644592 -77.29673767]
[89.90583801 -81.90531921]
[91.08652496 -85.80673218]
[93.42784882 -88.44311523]
[94.09763336 -103.42815399]
[94.76741791 -118.41319275]
[94.99074554 -133.41152954]
[94.76741791 -148.40986633]
[94.54409027 -163.40820312]
[94.32076263 -178.40653992]
[94.09743500 -193.40487671]
[93.87410736 -208.40321350]
[85.93219757 -222.08666992]
[93.47914886 -234.92771912]
[93.25582123 -249.92605591]
[93.03249359 -264.92440796]
[80.87121582 -256.14355469]
[66.38331604 -260.02954102]
[60.24874496 -273.71774292]
[66.98967743 -287.11773682]
[81.63694763 -290.35153198]
[93.39240265 -281.03680420]
[94.28521729 -296.01019287]
[95.17803955 -310.98361206]
[96.07085419 -325.95703125]
[96.96366882 -340.93041992]
[82.26220703 -344.04888916]
[68.18976593 -349.32373047]
[55.06072998 -356.63714600]
[43.16840363 -365.82574463]
[32.77846909 -376.68423462]
[24.12303734 -388.97003174]
[17.39547729 -402.40869141]
[12.74608231 -416.69998169]
[10.27872372 -431.52462769]
[10.04852295 -446.55142212]
[12.06062222 -461.44467163]
[16.27007103 -475.87167358]
[22.58282661 -489.51010132]
[30.85786247 -502.05526733]
[40.91031265 -513.22692871]
[52.51559448 -522.77551270]
[65.41445160 -530.48767090]
[79.31871033 -536.19110107]
[93.91774750 -539.75842285]
[108.88541412 -541.10992432]
[123.88733673 -540.21539307]
[138.58834839 -537.09484863]
[152.66003418 -531.81799316]
[165.78804016 -524.50268555]
[177.67904663 -515.31237793]
[188.06744385 -504.45242310]
[196.72111511 -492.16537476]
[203.44676208 -478.72576904]
[208.09413147 -464.43383789]
[210.55937195 -449.60882568]
[210.78742981 -434.58200073]
[208.77320862 -419.68902588]
[204.56170654 -405.26263428]
[198.24700928 -391.62512207]
[189.97018433 -379.08111572]
[179.91615295 -367.91088867]
[168.30950928 -358.36398315]
[155.40954590 -350.65365601]
[141.50448608 -344.95220947]
[126.90493774 -341.38696289]
[111.93707275 -340.03759766]
[111.04425812 -325.06420898]
[110.15144348 -310.09078979]
[109.25862885 -295.11740112]
[108.36580658 -280.14398193]
[108.03083038 -265.14773560]
[108.25415802 -250.14938354]
[108.47748566 -235.15104675]
[116.40341949 -222.54039001]
[108.87244415 -208.62654114]
[109.09577179 -193.62820435]
[109.31909943 -178.62986755]
[109.54242706 -163.63153076]
[109.76575470 -148.63319397]
[109.98908234 -133.63485718]
[111.90429688 -131.58789062]
[113.12408447 -128.65895081]
[113.30844116 -125.10910034]
[112.21807861 -121.31757355]
[109.75245667 -117.74340820]
[109.08267212 -102.75836945]
[108.41288757 -87.77333069]
[108.07791138 -72.77707672]
[108.07791138 -57.77707291]
[108.07791138 -42.77707291]
[108.07791138 -27.77707481]
[116.40686798 -19.00467110]
[116.52962494 -6.50792408]
[107.83499146 3.01920390]
[107.61166382 18.01754189]
[107.50000000 33.01712418]
[107.50000000 48.01712418]
[121.83678436 52.23365021]
[134.40568542 60.31728745]
[144.18914795 71.61358643]
[150.39511108 85.20802307]
[152.52113342 100.00000000]
[150.39511108 114.79197693]
[144.18914795 128.38641357]
[134.40568542 139.68270874]
[121.83678436 147.76634216]
[107.50000000 151.98287964]
[107.50000000 166.98287964]
[107.50000000 181.98287964]
[107.50000000 196.98287964]
[116.05182648 206.63839722]
[115.74301910 219.13192749]
[107.28437805 227.77935791]
[107.06105042 242.77769470]
[114.59202576 256.69152832]
[106.66609192 269.30218506]
[106.44276428 284.30053711]
[113.97374725 298.21438599]
[106.04781342 310.82504272]
[113.57878876 324.73889160]
[105.65285492 337.34954834]
[113.96871185 324.86569214]
[126.83327484 317.15188599]
[141.76260376 315.69750977]
[155.87408447 320.78341675]
[166.44299316 331.42755127]
[171.42864990 345.57476807]
[169.86840820 360.49340820]
[162.06350708 373.30291748]
[149.52098083 381.52999878]
[134.66256714 383.58612061]
[120.35720825 379.07427979]
[109.36704254 368.86566162]
[103.81388855 354.93008423]
[100.92861938 369.64999390]
[98.04334259 384.36987305]
[99.73667908 389.30746460]
[99.40035248 393.93780518]
[97.49127197 397.53927612]
[94.68655396 399.67605591]
[91.14688110 414.25244141]
[87.60720825 428.82882690]
[84.06753540 443.40518188]
[80.52786255 457.98156738]
[76.98818970 472.55795288]
[73.44851685 487.13430786]
[86.61939240 494.51202393]
[97.31056213 505.17044067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 198]
[27 197]
[28 196]
[29 183]
[31 181]
[33 179]
[34 178]
[36 176]
[37 175]
[39 172]
[40 171]
[41 170]
[42 169]
[52 159]
[53 158]
[55 157]
[56 156]
[58 153]
[59 152]
[60 151]
[61 150]
[65 149]
[66 148]
[67 147]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[75 135]
[76 134]
[77 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
