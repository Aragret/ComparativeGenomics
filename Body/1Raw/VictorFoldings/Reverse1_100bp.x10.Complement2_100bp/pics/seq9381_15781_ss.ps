%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[135.76295471 663.11901855]
[125.84545898 651.84857178]
[117.09943390 639.64672852]
[109.61180115 626.63464355]
[103.45698547 612.94171143]
[98.69614410 598.70397949]
[95.37660217 584.06292725]
[93.53134918 569.16418457]
[93.17872620 554.15570068]
[94.32223511 539.18670654]
[96.95051575 524.40594482]
[101.03743744 509.96032715]
[106.54239655 495.99343872]
[113.41065979 482.64407349]
[121.57398987 470.04492188]
[130.95123291 458.32119751]
[141.44920349 447.58941650]
[152.96354675 437.95620728]
[165.37985229 429.51736450]
[178.57470703 422.35675049]
[192.41696167 416.54553223]
[188.01597595 402.20565796]
[183.61497498 387.86581421]
[179.21397400 373.52597046]
[174.81297302 359.18612671]
[170.41197205 344.84628296]
[166.01098633 330.50643921]
[161.60998535 316.16659546]
[145.92015076 311.33889771]
[136.10116577 297.97665405]
[136.18232727 281.22869873]
[146.32975769 267.69628906]
[141.71574402 253.42355347]
[137.10173035 239.15083313]
[123.76499939 232.61883545]
[118.88241577 218.20997620]
[125.82419586 204.26547241]
[121.21018219 189.99273682]
[116.59617615 175.72000122]
[111.98217010 161.44726562]
[107.36815643 147.17453003]
[92.43664551 147.14363098]
[78.24480438 142.50221252]
[66.18056488 133.70419312]
[57.42377472 121.60999298]
[52.83082581 107.40239716]
[52.85088730 92.47086334]
[57.48200607 78.27566528]
[66.27127075 66.20503998]
[78.35910797 57.43947220]
[73.74510193 43.16674042]
[69.13108826 28.89400673]
[66.96414185 43.73666000]
[61.69872665 57.78213501]
[53.57438660 70.39145660]
[42.96072006 80.99098969]
[30.34057808 89.09852600]
[16.28809738 94.34521484]
[1.44257045 96.49237823]
[-13.52063084 95.44233704]
[-27.92078209 91.24285126]
[-41.10276794 84.08497620]
[-52.46690369 74.29434204]
[-61.49618912 62.31636047]
[-67.77985382 48.69595337]
[-71.03203583 34.05275345]
[-71.10478210 19.05293083]
[-67.99478149 4.37887478]
[-61.84352112 -9.30184078]
[-52.93083954 -21.36683464]
[-41.66220474 -31.26723099]
[-28.55026436 -38.55262756]
[-14.19152355 -42.89158630]
[0.76078999 -44.08671570]
[15.62644482 -42.08364487]
[29.72915459 -36.97349930]
[42.42733765 -28.98875618]
[53.14331436 -18.49267006]
[61.38957977 -5.96273994]
[66.79209900 8.03518867]
[68.13033295 -6.90499640]
[69.46856689 -21.84518242]
[70.80680084 -36.78536606]
[63.15050125 -47.16534042]
[64.57269287 -59.58150482]
[73.76908875 -67.43980408]
[75.32961273 -82.35840607]
[76.89013672 -97.27701569]
[78.45066071 -112.19561768]
[80.01118469 -127.11422729]
[65.50341797 -131.05389404]
[51.81555557 -137.26988220]
[39.30213547 -145.60118103]
[28.28728867 -155.83198547]
[19.05632591 -167.69729614]
[11.84835148 -180.88975525]
[6.85006809 -195.06767273]
[4.19094419 -209.86380005]
[3.93985796 -224.89486694]
[6.10331202 -239.77154541]
[10.62526894 -254.10850525]
[17.38859749 -267.53436279]
[26.21811295 -279.70135498]
[36.88510895 -290.29434204]
[49.11328506 -299.03894043]
[62.58589935 -305.70861816]
[76.95398712 -310.13064575]
[91.84536743 -312.19049072]
[106.87432861 -311.83474731]
[121.65158081 -309.07266235]
[135.79435730 -303.97579956]
[148.93632507 -296.67614746]
[160.73707581 -287.36279297]
[170.89093018 -276.27700806]
[179.13490295 -263.70587158]
[185.25544739 -249.97506714]
[189.09402466 -235.44023132]
[190.55119324 -220.47784424]
[189.58923340 -205.47549438]
[186.23303223 -190.82174683]
[180.56954956 -176.89619446]
[172.74548340 -164.05952454]
[162.96347046 -152.64424133]
[151.47691345 -142.94604492]
[138.58332825 -135.21612549]
[124.61669922 -129.65470886]
[109.93878174 -126.40584564]
[94.92978668 -125.55370331]
[93.36926270 -110.63509369]
[91.80873871 -95.71649170]
[90.24821472 -80.79788971]
[88.68769836 -65.87928009]
[96.68678284 -50.25937271]
[85.74698639 -35.44713211]
[84.40875244 -20.50694656]
[83.07051849 -5.56676245]
[81.73228455 9.37342262]
[83.40382385 24.27999687]
[88.01782990 38.55273056]
[92.63184357 52.82546234]
[107.56335449 52.85636520]
[121.75519562 57.49778748]
[133.81942749 66.29580688]
[142.57621765 78.39000702]
[147.16917419 92.59760284]
[147.14910889 107.52913666]
[142.51799011 121.72433472]
[133.72872925 133.79496765]
[121.64089203 142.56053162]
[126.25489807 156.83326721]
[130.86891174 171.10598755]
[135.48292542 185.37872314]
[140.09692383 199.65145874]
[153.88781738 206.89363098]
[158.36376953 221.43394470]
[151.37446594 234.53681946]
[155.98847961 248.80955505]
[160.60249329 263.08227539]
[173.98728943 266.37442017]
[183.91874695 275.77572632]
[187.87632751 288.75289917]
[184.92858887 301.88510132]
[175.94982910 311.76559448]
[180.35083008 326.10543823]
[184.75183105 340.44528198]
[189.15281677 354.78512573]
[193.55381775 369.12496948]
[197.95481873 383.46481323]
[202.35581970 397.80468750]
[206.75682068 412.14453125]
[221.47584534 409.19009399]
[236.41590881 407.71591187]
[251.42851257 407.73663330]
[266.36444092 409.25204468]
[281.07528687 412.24710083]
[295.41479492 416.69198608]
[309.24044800 422.54257202]
[322.41488647 429.74069214]
[334.80715942 438.21481323]
[346.29406738 447.88070679]
[356.76147461 458.64230347]
[366.10531616 470.39263916]
[374.23278809 483.01498413]
[381.06304932 496.38381958]
[386.52825928 510.36630249]
[390.57409668 524.82348633]
[393.16033936 539.61163330]
[394.26126099 554.58386230]
[393.86596680 569.59124756]
[391.97833252 584.48474121]
[388.61715698 599.11621094]
[383.81585693 613.34039307]
[377.62213135 627.01574707]
[370.09750366 640.00646973]
[361.31683350 652.18341064]
[351.36730957 663.42559814]
[340.34790039 673.62121582]
[328.36804199 682.66894531]
[315.54684448 690.47894287]
[302.01174927 696.97351074]
[287.89724731 702.08813477]
[273.34362793 705.77197266]
[258.49551392 707.98840332]
[243.50051880 708.71539307]
[228.50764465 707.94573975]
[213.66590881 705.68707275]
[199.12281799 701.96191406]
[185.02291870 696.80712891]
[171.50633240 690.27410889]
[158.70739746 682.42773438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[32 158]
[33 157]
[34 156]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[50 140]
[51 139]
[52 138]
[80 137]
[81 136]
[82 135]
[83 134]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
