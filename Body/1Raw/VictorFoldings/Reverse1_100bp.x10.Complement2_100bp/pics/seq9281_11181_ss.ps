%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[98.91889191 520.78631592]
[86.17003632 528.78955078]
[72.07099152 534.06231689]
[57.19910431 536.38867188]
[42.16337585 535.67333984]
[27.57949829 531.94567871]
[14.04468155 525.35833740]
[2.11316276 516.18096924]
[-7.72646809 504.78945923]
[-15.07128429 491.65023804]
[-19.62051964 477.30139160]
[-21.18788910 462.33047485]
[-19.70920563 447.35055542]
[-15.24502182 432.97503662]
[-7.97814369 419.79257202]
[1.79385459 408.34298706]
[13.67081642 399.09512329]
[27.16638565 392.42770386]
[41.72793198 388.61373901]
[56.75916290 387.80941772]
[58.98427963 372.97537231]
[61.20939636 358.14132690]
[55.44567871 344.40710449]
[65.14450836 331.90737915]
[67.36962891 317.07333374]
[69.59474182 302.23928833]
[71.81986237 287.40524292]
[74.04497528 272.57119751]
[76.27009583 257.73715210]
[74.15360260 250.65605164]
[78.64035797 242.69949341]
[73.08175659 228.88098145]
[82.96561432 216.52702332]
[85.41133881 201.72775269]
[87.85707092 186.92848206]
[89.52861023 172.02191162]
[90.42142487 157.04850769]
[91.20275116 142.06887817]
[91.87253571 127.08383179]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[85.82152557 28.77733803]
[93.74745941 16.16667366]
[93.97078705 1.16833591]
[93.74745941 -13.83000183]
[93.07767487 -28.81504059]
[92.40789032 -43.80007935]
[91.73810577 -58.78511810]
[91.06832123 -73.77015686]
[76.60976410 -86.01206970]
[75.70623779 -104.61573792]
[88.46531677 -117.74287415]
[87.34967041 -132.70132446]
[78.60739136 -145.88780212]
[85.37664795 -159.15528870]
[84.26100159 -174.11375427]
[75.51872253 -187.30021667]
[82.28797913 -200.56771851]
[81.17233276 -215.52616882]
[79.38986206 -230.41989136]
[76.94413757 -245.21916199]
[74.49840546 -260.01843262]
[72.05268097 -274.81768799]
[69.60695648 -289.61697388]
[67.16122437 -304.41622925]
[52.12353897 -304.92593384]
[37.47893906 -308.35858154]
[23.78985023 -314.58047485]
[11.58161545 -323.35073853]
[1.32235122 -334.33081055]
[-6.59500980 -347.09741211]
[-11.86776638 -361.15884399]
[-14.29502010 -375.97406006]
[-13.78533268 -390.97332764]
[-10.36016369 -405.58023071]
[-4.15297937 -419.23382568]
[4.59595108 -431.41009521]
[15.54885197 -441.64221191]
[28.28348541 -449.53820801]
[42.30942535 -454.79626465]
[39.86369705 -469.59555054]
[37.41796875 -484.39480591]
[34.97224045 -499.19409180]
[19.93778229 -500.22448730]
[5.54638958 -504.69491577]
[-7.42582893 -512.36419678]
[-18.27929688 -522.81884766]
[-26.42869949 -535.49493408]
[-31.43455315 -549.70892334]
[-33.02689362 -564.69433594]
[-31.11985016 -579.64288330]
[-25.81626892 -593.74853516]
[-17.40216255 -606.25048828]
[-6.33129549 -616.47460938]
[6.79929590 -623.86950684]
[21.28149414 -628.03637695]
[36.33429337 -628.75048828]
[51.14591599 -625.97332764]
[64.91758728 -619.85467529]
[76.90662384 -610.72448730]
[86.46646118 -599.07519531]
[93.08155823 -585.53497314]
[96.39517212 -570.83410645]
[96.22859955 -555.76525879]
[92.59082794 -541.14123535]
[85.67802429 -527.75054932]
[75.86300659 -516.31542969]
[63.67507553 -507.45251465]
[49.77151108 -501.63980103]
[52.21723938 -486.84054565]
[54.66296768 -472.04125977]
[57.10869598 -457.24200439]
[72.08057404 -456.77612305]
[86.67852020 -453.39709473]
[100.34106445 -447.23294067]
[112.54232788 -438.51889038]
[122.81229401 -427.58831787]
[130.75488281 -414.86001587]
[136.06323242 -400.82223511]
[138.53157043 -386.01382446]
[138.06320190 -371.00363159]
[134.67422485 -356.36856079]
[128.49310303 -342.67153931]
[119.75566101 -330.43978882]
[108.79620361 -320.14447021]
[96.03465271 -312.18267822]
[81.96049500 -306.86196899]
[84.40622711 -292.06268311]
[86.85195160 -277.26342773]
[89.29767609 -262.46414185]
[91.74340820 -247.66488647]
[94.18913269 -232.86561584]
[103.78211212 -244.39707947]
[118.70611572 -245.90507507]
[130.41200256 -236.52572632]
[132.19412231 -221.63195801]
[123.03157043 -209.75561523]
[108.17308807 -207.69998169]
[96.13078308 -216.64181519]
[97.24642944 -201.68336487]
[105.90891266 -189.56681824]
[99.21945190 -175.22940063]
[100.33509827 -160.27093506]
[108.99758148 -148.15438843]
[102.30812073 -133.81697083]
[103.42376709 -118.85852051]
[113.47702026 -113.46422577]
[119.74275208 -103.78660583]
[120.56725311 -92.16704559]
[115.63030243 -81.48400116]
[106.05335999 -74.43994141]
[106.72314453 -59.45490265]
[107.39292908 -44.46986389]
[108.06271362 -29.48482513]
[108.73249817 -14.49978638]
[110.70781708 -12.51074886]
[112.01426697 -9.61941719]
[112.30422974 -6.07663250]
[111.32723999 -2.25432825]
[108.96912384 1.39166355]
[108.74579620 16.39000130]
[116.29274750 29.23106003]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[110.19876099 118.26441956]
[109.71498108 123.92683411]
[106.85757446 127.75361633]
[106.18778992 142.73866272]
[108.93088531 151.45147705]
[105.39482880 157.94132996]
[104.50201416 172.91473389]
[115.66267395 162.89277649]
[130.64947510 162.26376343]
[142.61067200 171.31527710]
[146.07774353 185.90908813]
[139.46560669 199.37310791]
[125.79723358 205.55175781]
[111.32162476 201.62023926]
[102.65634155 189.37422180]
[100.21060944 204.17349243]
[97.76488495 218.97276306]
[103.14855194 233.84980774]
[93.43962860 245.14521790]
[91.10414124 259.96228027]
[88.87902069 274.79632568]
[86.65390778 289.63037109]
[84.42878723 304.46441650]
[82.20366669 319.29846191]
[79.97855377 334.13250732]
[85.58311462 348.92776489]
[76.04344177 360.36645508]
[73.81832123 375.20050049]
[71.59320831 390.03454590]
[85.72692108 395.21362305]
[98.52859497 403.13208008]
[109.47399902 413.46566772]
[118.11493683 425.79122925]
[124.09756470 439.60400391]
[127.17689514 454.33840942]
[127.22682953 469.39105225]
[124.24532318 484.14556885]
[118.35446930 497.99774170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 201]
[21 200]
[22 199]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[31 191]
[33 189]
[34 188]
[35 187]
[36 179]
[37 178]
[38 176]
[39 175]
[40 172]
[42 170]
[43 169]
[44 168]
[45 167]
[47 165]
[48 164]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[56 150]
[57 149]
[59 147]
[60 146]
[62 144]
[63 143]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[84 116]
[85 115]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
