%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[170.01849365 518.29406738]
[168.23602295 503.40036011]
[166.45356750 488.50665283]
[163.31944275 484.90298462]
[162.41584778 479.29223633]
[164.84657288 473.14379883]
[163.50833130 458.20361328]
[162.17010498 443.26342773]
[153.32818604 431.27722168]
[159.80343628 416.84176636]
[158.46520996 401.90158081]
[157.12696838 386.96139526]
[146.27275085 373.17181396]
[154.15910339 356.53189087]
[152.59857178 341.61328125]
[143.57917786 329.76004028]
[149.83879089 315.22979736]
[148.27827454 300.31118774]
[146.71774292 285.39257812]
[144.16191101 270.61193848]
[140.62223816 256.03555298]
[137.08256531 241.45918274]
[133.54289246 226.88279724]
[129.46322632 212.44825745]
[124.84922028 198.17552185]
[120.23521423 183.90278625]
[115.62120056 169.63005066]
[110.90106964 155.39205933]
[99.48036957 145.83084106]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[87.42245483 110.30458069]
[83.75758362 99.24972534]
[88.42597961 88.57979584]
[83.81196594 74.30706024]
[79.11717987 88.55342865]
[67.99427032 98.61726379]
[53.35072327 101.86789703]
[39.01433945 97.45562744]
[28.73261261 86.53381348]
[25.19316101 71.95738220]
[29.32118797 57.53658676]
[40.03763962 47.04098511]
[54.54125595 43.21409988]
[69.04083252 47.05627060]
[79.74575806 57.56240463]
[77.30003357 42.76313400]
[74.85430145 27.96386337]
[72.40857697 13.16459179]
[69.96285248 -1.63467860]
[61.29907990 10.61028385]
[46.82380295 14.54300690]
[33.15491486 8.36550236]
[26.54165268 -5.09795809]
[30.00750923 -19.69206047]
[41.96794128 -28.74457932]
[56.95479965 -28.11682510]
[68.11717224 -18.09416389]
[67.22435760 -33.06756973]
[66.33154297 -48.04097748]
[65.43872833 -63.01438141]
[62.56287766 -67.37059021]
[61.72895432 -71.93763733]
[62.67533112 -75.90240479]
[64.85558319 -78.67347717]
[64.63225555 -93.67181396]
[64.40892792 -108.67015076]
[61.35174561 -114.53233337]
[61.66672516 -120.20664978]
[64.40892792 -124.11680603]
[64.63225555 -139.11514282]
[64.85558319 -154.11347961]
[65.07891083 -169.11181641]
[54.47611618 -186.25659180]
[65.10388947 -202.41015625]
[64.88056183 -217.40849304]
[64.65723419 -232.40682983]
[64.43390656 -247.40516663]
[64.21057892 -262.40350342]
[62.98360443 -277.35324097]
[60.75848770 -292.18728638]
[58.53337097 -307.02133179]
[56.30825424 -321.85537720]
[51.94045639 -329.87783813]
[54.16214371 -336.92666626]
[52.15813065 -351.79220581]
[50.15411758 -366.65771484]
[45.90624619 -374.74435425]
[48.23263550 -381.75930786]
[46.45017242 -396.65301514]
[31.51350594 -398.78808594]
[17.63877106 -404.71716309]
[5.77196932 -414.03604126]
[-3.27780271 -426.10931396]
[-8.89351559 -440.11383057]
[-10.69228077 -455.09472656]
[-8.55145550 -470.03054810]
[-2.61700487 -483.90298462]
[6.70645046 -495.76620483]
[18.78322220 -504.81130981]
[32.78989410 -510.42163086]
[47.77147293 -512.21459961]
[62.70648193 -510.06799316]
[76.57663727 -504.12820435]
[88.43623352 -494.80017090]
[97.47668457 -482.71990967]
[103.08158112 -468.71105957]
[104.86877441 -453.72879028]
[102.71641541 -438.79461670]
[96.77125549 -424.92675781]
[87.43864441 -413.07077026]
[75.35488892 -404.03497314]
[61.34388733 -398.43548584]
[63.12635422 -383.54177856]
[65.01964569 -368.66174316]
[67.02365875 -353.79620361]
[69.02767181 -338.93069458]
[71.14229584 -324.08047485]
[73.36741638 -309.24642944]
[75.59252930 -294.41238403]
[77.81764984 -279.57833862]
[85.28702545 -292.58636475]
[98.55399323 -299.58547974]
[113.50762177 -298.40698242]
[125.51437378 -289.41598511]
[130.85383606 -275.39849854]
[127.87149811 -260.69793701]
[117.49149323 -249.86950684]
[102.93016052 -246.26844788]
[88.69949341 -251.01062012]
[79.20891571 -262.62683105]
[79.43224335 -247.62849426]
[79.65557098 -232.63015747]
[79.87889862 -217.63182068]
[80.10222626 -202.63348389]
[88.04485321 -196.20481873]
[91.20417023 -186.25659180]
[88.30689240 -176.00056458]
[80.07724762 -168.88848877]
[79.85391998 -153.89015198]
[79.63059235 -138.89181519]
[79.40726471 -123.89347839]
[79.40726471 -108.89347839]
[79.63059235 -93.89514160]
[79.85391998 -78.89680481]
[80.41213226 -63.90719604]
[81.30494690 -48.93379211]
[82.19776154 -33.96038437]
[83.09057617 -18.98698044]
[84.76212311 -4.08040619]
[87.20784760 10.71886444]
[89.65357208 25.51813507]
[92.09930420 40.31740570]
[94.54502869 55.11667633]
[98.08470154 69.69305420]
[102.69870758 83.96578979]
[115.43373108 94.88345337]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[128.33465576 136.02615356]
[125.10352325 150.56607056]
[130.82754517 157.68458557]
[129.89393616 165.01603699]
[134.50794983 179.28877258]
[139.12196350 193.56150818]
[143.73596191 207.83424377]
[152.78573608 195.87171936]
[167.77615356 195.33593750]
[177.65686035 206.62184143]
[175.14416504 221.40989685]
[162.09031677 228.79888916]
[148.11927795 223.34312439]
[151.65895081 237.91950989]
[155.19862366 252.49588013]
[158.73829651 267.07226562]
[165.01736450 253.44973755]
[177.60699463 245.29490662]
[192.60614014 245.13462830]
[205.36715698 253.01856995]
[211.93589783 266.50381470]
[210.27697754 281.41177368]
[200.90441895 293.12310791]
[186.72242737 298.00891113]
[172.12542725 294.55523682]
[161.63635254 283.83206177]
[163.19686890 298.75067139]
[164.75740051 313.66928101]
[173.88841248 326.58959961]
[167.51718140 340.05276489]
[169.07769775 354.97137451]
[178.58763123 363.68481445]
[179.58026123 376.14266968]
[172.06715393 385.62316895]
[173.40539551 400.56335449]
[174.74362183 415.50354004]
[183.68125916 428.55841064]
[177.11029053 441.92520142]
[178.44851685 456.86538696]
[179.78675842 471.80557251]
[181.34727478 486.72418213]
[183.12974548 501.61788940]
[184.91221619 516.51159668]
[198.83432007 523.15832520]
[206.93342590 536.28869629]
[206.62515259 551.71301270]
[198.00784302 564.50933838]
[183.83126831 570.59442139]
[168.61911011 568.02655029]
[157.22552490 557.62512207]
[153.28616333 542.70916748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[6 199]
[7 198]
[8 197]
[10 195]
[11 194]
[12 193]
[14 190]
[15 189]
[17 187]
[18 186]
[19 185]
[20 175]
[21 174]
[22 173]
[23 172]
[24 166]
[25 165]
[26 164]
[27 163]
[28 161]
[30 159]
[31 158]
[34 156]
[35 155]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[58 149]
[59 148]
[60 147]
[61 146]
[65 145]
[66 144]
[67 143]
[70 142]
[71 141]
[72 140]
[73 139]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 121]
[81 120]
[82 119]
[83 118]
[85 117]
[86 116]
[87 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
