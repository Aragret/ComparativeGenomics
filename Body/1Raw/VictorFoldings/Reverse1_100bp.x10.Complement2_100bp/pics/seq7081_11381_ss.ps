%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[120.30205536 655.16369629]
[112.15210724 642.38269043]
[108.86805725 627.58435059]
[110.84646606 612.55566406]
[117.84843445 599.11138916]
[129.02844238 588.87500000]
[143.03643799 583.08264160]
[142.36665344 568.09759521]
[141.69686890 553.11254883]
[141.02708435 538.12750244]
[140.02282715 523.16119385]
[138.68458557 508.22097778]
[137.34635925 493.28079224]
[128.26797485 485.28643799]
[127.03079987 472.85049438]
[134.84078979 462.58566284]
[133.72514343 447.62719727]
[132.60949707 432.66873169]
[131.38252258 417.71902466]
[130.04428101 402.77883911]
[121.20236206 390.79260254]
[127.67761993 376.35717773]
[111.04300690 372.38955688]
[96.74816895 362.95800781]
[86.52675629 349.18609619]
[81.62532043 332.72509766]
[82.65128326 315.55578613]
[89.49772644 299.75030518]
[101.35427856 287.22195435]
[116.80295563 279.49359131]
[114.79894257 264.62805176]
[112.79492950 249.76252747]
[98.18254089 246.63786316]
[85.49710846 238.68746948]
[76.27991486 226.85456848]
[71.65865326 212.55541992]
[72.20944977 197.50993347]
[77.88510132 183.53469849]
[88.01849365 172.32369995]
[101.40089417 165.24298096]
[99.39688110 150.37745667]
[97.39286804 135.51191711]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[89.50009155 60.05698776]
[74.94208527 55.89890289]
[62.70803833 47.02759171]
[54.26319504 34.52939987]
[50.61080170 19.92357445]
[52.17295456 4.97763348]
[58.74191284 -8.50655270]
[69.50749207 -18.90998077]
[83.15695190 -24.99090195]
[82.04130554 -39.94935608]
[80.92565918 -54.90781021]
[72.18337250 -68.09428406]
[78.95263672 -81.36177826]
[77.83698273 -96.32022858]
[76.49874878 -111.26041412]
[74.93823242 -126.17902374]
[73.37770844 -141.09762573]
[71.81718445 -156.01623535]
[62.68616867 -168.93656921]
[69.05740356 -182.39973450]
[67.49687958 -197.31832886]
[65.49286652 -212.18386841]
[63.04713821 -226.98313904]
[60.60141373 -241.78240967]
[50.58971024 -249.91435242]
[48.85733032 -262.29104614]
[55.79283142 -272.20193481]
[53.56771469 -287.03598022]
[51.34259415 -301.87002563]
[36.31688309 -301.77670288]
[21.43084335 -303.82284546]
[6.98753881 -307.96670532]
[-6.71898413 -314.12399292]
[-19.40967751 -322.16928101]
[-30.82617569 -331.93884277]
[-40.73605347 -343.23376465]
[-48.93756104 -355.82409668]
[-55.26372147 -369.45349121]
[-59.58574295 -383.84448242]
[-61.81563568 -398.70410156]
[-61.90800476 -413.72982788]
[-59.86096573 -428.61572266]
[-55.71619415 -443.05877686]
[-49.55807495 -456.76492310]
[-41.51197815 -469.45510864]
[-31.74171066 -480.87100220]
[-20.44618225 -490.78018188]
[-7.85535860 -498.98092651]
[5.77442980 -505.30624390]
[20.16569710 -509.62738037]
[35.02545547 -511.85635376]
[50.05118179 -511.94778442]
[64.93696594 -509.89981079]
[79.37976074 -505.75415039]
[93.08551788 -499.59518433]
[105.77521515 -491.54830933]
[117.19050598 -481.77734375]
[127.09898376 -470.48120117]
[135.29893494 -457.88986206]
[141.62341309 -444.25967407]
[145.94364929 -429.86813354]
[148.17170715 -415.00823975]
[148.26220703 -399.98251343]
[146.21333313 -385.09686279]
[142.06677246 -370.65432739]
[135.90695190 -356.94894409]
[127.85928345 -344.25973511]
[118.08760834 -332.84506226]
[106.79085541 -322.93728638]
[94.19901276 -314.73809814]
[80.56844330 -308.41448975]
[66.17664337 -304.09512329]
[68.40175629 -289.26107788]
[70.62687683 -274.42703247]
[82.28262329 -261.30795288]
[75.40068054 -244.22813416]
[77.84641266 -229.42886353]
[80.29213715 -214.62959290]
[82.48981476 -212.88937378]
[84.13059235 -210.17378235]
[84.83949280 -206.69055176]
[84.32363892 -202.77923584]
[82.41548920 -198.87886047]
[83.97600555 -183.96025085]
[92.99540710 -172.10699463]
[86.73578644 -157.57675171]
[88.29631042 -142.65815735]
[89.85683441 -127.73954773]
[91.41735840 -112.82093811]
[94.49747467 -109.17102051]
[95.31742859 -103.54743195]
[92.79544067 -97.43588257]
[93.91108704 -82.47742462]
[102.57357025 -70.36087799]
[95.88410950 -56.02345657]
[96.99975586 -41.06500626]
[98.11540985 -26.10655212]
[112.51589966 -22.11768341]
[124.70563507 -13.42633533]
[133.20217896 -1.06578147]
[136.96414185 13.48307037]
[135.51879883 28.46909904]
[129.02139282 42.08173370]
[118.23867798 52.66970444]
[104.45854950 58.94134140]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[112.25839233 133.50790405]
[114.26240540 148.37344360]
[116.26641846 163.23896790]
[131.04611206 166.52317810]
[143.78649902 174.65057373]
[152.96028137 186.62396240]
[157.47555542 200.98649597]
[156.80577087 215.99891663]
[151.05104065 229.85018921]
[140.92376709 240.87594604]
[127.66045380 247.75851440]
[129.66447449 262.62405396]
[131.66848755 277.48956299]
[144.51434326 279.45999146]
[156.39907837 284.68499756]
[166.51437378 292.80154419]
[174.17417908 303.25024414]
[178.86132812 315.31378174]
[180.26245117 328.16622925]
[178.28883362 340.92965698]
[173.08212280 352.73397827]
[165.00407410 362.77630615]
[154.61148071 370.37564087]
[142.61781311 375.01892090]
[151.55545044 388.07379150]
[144.98446655 401.44058228]
[146.32270813 416.38076782]
[150.20524597 424.64901733]
[147.56794739 431.55310059]
[148.68359375 446.51153564]
[149.79924011 461.47000122]
[160.51728821 476.44348145]
[152.28654480 491.94256592]
[153.62477112 506.88275146]
[154.96301270 521.82293701]
[157.96728516 526.09161377]
[158.93681335 530.63177490]
[158.10890198 534.62298584]
[156.01211548 537.45770264]
[156.68190002 552.44274902]
[157.35168457 567.42779541]
[158.02146912 582.41284180]
[172.49038696 586.93237305]
[184.53904724 596.13055420]
[192.71253967 608.89648438]
[196.02384949 623.68878174]
[194.07313538 638.72106934]
[187.09596252 652.17822266]
[175.93484497 662.43518066]
[161.93754578 668.25335693]
[146.79429626 668.93023682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[9 199]
[10 198]
[11 194]
[12 193]
[13 192]
[16 190]
[17 189]
[18 188]
[19 186]
[20 185]
[22 183]
[30 172]
[31 171]
[32 170]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[49 157]
[50 156]
[51 155]
[59 147]
[60 146]
[61 145]
[63 143]
[64 142]
[65 139]
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[72 128]
[73 127]
[74 126]
[77 124]
[78 123]
[79 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
