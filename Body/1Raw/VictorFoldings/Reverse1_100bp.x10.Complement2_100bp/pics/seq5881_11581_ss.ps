%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[30.79081345 400.56076050]
[31.01082802 415.57922363]
[29.34674072 430.50686646]
[25.82480049 445.10821533]
[20.50055122 459.15298462]
[13.45796204 472.41967773]
[4.80810833 484.69903564]
[-5.31259155 495.79745483]
[-16.74451828 505.53985596]
[-29.30737495 513.77258301]
[-42.80302811 520.36578369]
[-57.01862717 525.21551514]
[-71.72998047 528.24530029]
[-86.70505524 529.40728760]
[-101.70768738 528.68322754]
[-116.50125885 526.08441162]
[-130.85244751 521.65197754]
[-144.53492737 515.45574951]
[-157.33288574 507.59350586]
[-169.04449463 498.18917847]
[-179.48504639 487.39111328]
[-188.48988342 475.36962891]
[-195.91696167 462.31427002]
[-201.64916992 448.43103027]
[-205.59609985 433.93878174]
[-207.69549561 419.06613159]
[-207.91424561 404.04763794]
[-206.24890137 389.12014771]
[-202.72572327 374.51910400]
[-197.40029907 360.47476196]
[-190.35659790 347.20867920]
[-181.70570374 334.93002319]
[-171.58407593 323.83245850]
[-160.15132141 314.09103394]
[-147.58776855 305.85934448]
[-134.09156799 299.26727295]
[-119.87555695 294.41873169]
[-105.16394806 291.39019775]
[-90.18877411 290.22946167]
[-75.18620300 290.95483398]
[-60.39285278 293.55484009]
[-46.04203796 297.98849487]
[-32.36008453 304.18585205]
[-32.29060364 289.29141235]
[-18.47428513 281.58300781]
[-10.62252903 268.80215454]
[-2.77077389 256.02130127]
[5.08098125 243.24046326]
[12.93273735 230.45962524]
[20.78449249 217.67878723]
[20.85397339 202.78433228]
[34.67029190 195.07591248]
[42.42668533 182.23696899]
[50.08728027 169.34063721]
[57.74787903 156.44432068]
[65.40847778 143.54798889]
[73.06907654 130.65165710]
[80.72966766 117.75533295]
[88.39026642 104.85900879]
[95.76095581 91.79482269]
[102.83806610 78.56929016]
[109.91516876 65.34376526]
[116.99227142 52.11823654]
[123.87168884 38.78881073]
[130.55187988 25.35843277]
[137.23207092 11.92805672]
[131.50476074 -0.26261157]
[133.81062317 -13.33523369]
[143.08720398 -22.55624962]
[155.78979492 -24.71810150]
[162.66920471 -38.04753113]
[169.54861450 -51.37696075]
[169.30084229 -56.59095001]
[170.91629028 -60.94337845]
[173.75477600 -63.86878967]
[177.04446411 -65.13776398]
[184.51220703 -78.14672089]
[191.97994995 -91.15567017]
[192.34536743 -97.75703430]
[195.51408386 -102.47469330]
[199.86865234 -104.43601227]
[207.72041321 -117.21685028]
[215.57215881 -129.99769592]
[223.42391968 -142.77853394]
[211.28363037 -151.60134888]
[199.86357117 -161.33839417]
[189.23239136 -171.93115234]
[179.45404053 -183.31588745]
[170.58734131 -195.42414856]
[162.68560791 -208.18310547]
[155.79635620 -221.51602173]
[149.96102905 -235.34269714]
[145.21472168 -249.58001709]
[141.58598328 -264.14230347]
[139.09661865 -278.94201660]
[137.76162720 -293.89013672]
[137.58901978 -308.89675903]
[138.57983398 -323.87161255]
[140.72810364 -338.72467041]
[144.02093506 -353.36657715]
[148.43850708 -367.70928955]
[153.95425415 -381.66653442]
[160.53498840 -395.15438843]
[168.14115906 -408.09173584]
[176.72700500 -420.40072632]
[186.24090576 -432.00738525]
[196.62561035 -442.84185791]
[207.81869507 -452.83901978]
[219.75282288 -461.93872070]
[232.35623169 -470.08627319]
[245.55311584 -477.23263550]
[259.26409912 -483.33483887]
[273.40676880 -488.35620117]
[287.89599609 -492.26651001]
[302.64465332 -495.04223633]
[317.56408691 -496.66671753]
[332.56454468 -497.13012695]
[347.55581665 -496.42974854]
[362.44772339 -494.56976318]
[377.15069580 -491.56134033]
[391.57632446 -487.42257690]
[405.63787842 -482.17837524]
[419.25073242 -475.86029053]
[432.33303833 -468.50628662]
[444.80615234 -460.16061401]
[456.59500122 -450.87347412]
[467.62872314 -440.70071411]
[477.84094238 -429.70349121]
[487.17025757 -417.94796753]
[495.56054688 -405.50485229]
[502.96133423 -392.44894409]
[509.32815552 -378.85879517]
[514.62268066 -364.81613159]
[518.81304932 -350.40539551]
[521.87414551 -335.71328735]
[523.78747559 -320.82815552]
[524.54150391 -305.83950806]
[524.13183594 -290.83749390]
[522.56079102 -275.91232300]
[519.83789062 -261.15380859]
[515.97955322 -246.65066528]
[511.00885010 -232.49012756]
[504.95578003 -218.75737000]
[497.85671997 -205.53497314]
[489.75439453 -192.90246582]
[480.69747925 -180.93582153]
[470.74044800 -169.70700073]
[459.94323730 -159.28355408]
[448.37072754 -149.72814941]
[436.09255981 -141.09828186]
[423.18255615 -133.44581604]
[409.71835327 -126.81681061]
[395.78094482 -121.25112152]
[381.45416260 -116.78221130]
[366.82412720 -113.43696594]
[351.97885132 -111.23550415]
[337.00762939 -110.19106293]
[322.00051880 -110.30992889]
[307.04769897 -111.59137726]
[292.23916626 -114.02771759]
[277.66397095 -117.60427856]
[263.40975952 -122.29956818]
[249.56225586 -128.08532715]
[236.20475769 -134.92678833]
[228.35299683 -122.14594269]
[220.50125122 -109.36509705]
[212.64949036 -96.58425903]
[204.98889160 -83.68792725]
[197.52114868 -70.67897797]
[190.05342102 -57.67002487]
[182.87805176 -44.49754715]
[175.99864197 -31.16811943]
[169.11921692 -17.83868980]
[174.91270447 -2.05026412]
[167.34573364 13.34635353]
[150.66244507 18.60825157]
[143.98225403 32.03862762]
[137.30206299 45.46900558]
[137.94555664 50.20133591]
[135.62306213 55.38814926]
[130.21780396 59.19534302]
[123.14069366 72.42086792]
[116.06359100 85.64640045]
[108.98648834 98.87192535]
[109.56988525 102.68401337]
[108.47013855 106.73474884]
[105.61833954 110.26664734]
[101.28659821 112.51959991]
[93.62599945 125.41593170]
[85.96540070 138.31225586]
[78.30480194 151.20858765]
[70.64420319 164.10490417]
[62.98360825 177.00123596]
[55.32300949 189.89756775]
[53.63083649 198.87388611]
[47.45113373 202.92765808]
[46.82004547 218.73628235]
[33.56533432 225.53053284]
[25.71357918 238.31137085]
[17.86182404 251.09222412]
[10.01006889 263.87307739]
[2.15831304 276.65390015]
[-5.69344234 289.43475342]
[-6.32453299 305.24337769]
[-19.57924271 312.03762817]
[-7.86683893 321.44094849]
[2.57462192 332.23815918]
[11.58046246 344.25888062]
[19.00864792 357.31359863]
[24.74202347 371.19638062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 205]
[45 203]
[46 202]
[47 201]
[48 200]
[49 199]
[50 198]
[52 196]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[58 189]
[59 188]
[60 184]
[61 183]
[62 182]
[63 181]
[64 178]
[65 177]
[66 176]
[70 173]
[71 172]
[72 171]
[76 170]
[77 169]
[78 168]
[81 167]
[82 166]
[83 165]
[84 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
