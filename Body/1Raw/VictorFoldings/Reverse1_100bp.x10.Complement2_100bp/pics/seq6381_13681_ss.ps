%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[110.33771515 411.90115356]
[106.97883606 396.21365356]
[117.26060486 383.89843750]
[117.26060486 368.89843750]
[117.26060486 353.89843750]
[117.26060486 338.89843750]
[117.26060486 323.89843750]
[117.26060486 308.89843750]
[114.57691956 304.94787598]
[114.34645844 299.26950073]
[117.49057770 293.45349121]
[117.93718719 278.46014404]
[114.99423218 271.68069458]
[118.50370789 263.24734497]
[119.17349243 248.26229858]
[119.84327698 233.27726746]
[112.68199921 220.21719360]
[121.02779388 206.77627563]
[121.69757843 191.79124451]
[119.47245789 176.95719910]
[114.43554688 162.82817078]
[102.87376404 153.43804932]
[105.52777863 137.84103394]
[100.49085999 123.71200562]
[95.45394135 109.58296967]
[89.68791199 95.73548889]
[83.20841217 82.20714569]
[76.72891998 68.67879486]
[70.24942017 55.15045166]
[57.31002045 46.04647064]
[58.79045868 31.22562218]
[52.31096268 17.69727707]
[45.83146667 4.16893101]
[38.07507324 -8.67000961]
[29.11437988 -20.69938660]
[20.15368271 -32.72876358]
[11.19298744 -44.75814438]
[2.23229098 -56.78752136]
[-6.72840500 -68.81689453]
[-15.68910122 -80.84627533]
[-26.52461815 -81.79507446]
[-34.87722778 -88.41429901]
[-38.13919449 -98.32933044]
[-35.46277618 -108.19086456]
[-44.06134033 -120.48169708]
[-58.31197739 -127.35410309]
[-59.26786804 -142.21800232]
[-67.86643219 -154.50883484]
[-76.46499634 -166.79968262]
[-85.06356049 -179.09051514]
[-93.66212463 -191.38134766]
[-107.10725403 -192.18331909]
[-117.48414612 -200.46163940]
[-121.14419556 -213.01895142]
[-116.96627045 -225.20806885]
[-125.38088989 -237.62556458]
[-133.79551697 -250.04306030]
[-142.21012878 -262.46054077]
[-150.62474060 -274.87805176]
[-159.03936768 -287.29553223]
[-172.39660645 -280.42959595]
[-186.48408508 -275.22378540]
[-201.09634399 -271.75402832]
[-216.02030945 -270.07092285]
[-231.03833008 -270.19903564]
[-245.93139648 -272.13644409]
[-260.48236084 -275.85494995]
[-274.47897339 -281.30032349]
[-287.71716309 -288.39312744]
[-300.00384521 -297.02993774]
[-311.15988159 -307.08477783]
[-321.02255249 -318.41107178]
[-329.44805908 -330.84362793]
[-336.31350708 -344.20114136]
[-341.51879883 -358.28881836]
[-344.98800659 -372.90121460]
[-346.67056274 -387.82522583]
[-346.54190063 -402.84323120]
[-344.60391235 -417.73623657]
[-340.88485718 -432.28704834]
[-335.43896484 -446.28347778]
[-328.34567261 -459.52139282]
[-319.70840454 -471.80776978]
[-309.65313721 -482.96340942]
[-298.32647705 -492.82568359]
[-285.89358521 -501.25070190]
[-272.53582764 -508.11566162]
[-258.44796753 -513.32043457]
[-243.83544922 -516.78906250]
[-228.91136169 -518.47106934]
[-213.89335632 -518.34185791]
[-199.00042725 -516.40332031]
[-184.44975281 -512.68371582]
[-170.45353699 -507.23730469]
[-157.21588135 -500.14349365]
[-144.92984009 -491.50576782]
[-133.77455139 -481.45007324]
[-123.91272736 -470.12304688]
[-115.48815918 -457.68988037]
[-108.62370300 -444.33184814]
[-103.41947174 -430.24380493]
[-99.95135498 -415.63113403]
[-98.26992798 -400.70700073]
[-98.39971161 -385.68899536]
[-100.33881378 -370.79614258]
[-104.05895233 -356.24560547]
[-109.50588226 -342.24960327]
[-116.60016632 -329.01220703]
[-125.23834991 -316.72647095]
[-135.29446411 -305.57156372]
[-146.62187195 -295.71017456]
[-138.20724487 -283.29266357]
[-129.79263306 -270.87518311]
[-121.37801361 -258.45767212]
[-112.96339417 -246.04017639]
[-104.54877472 -233.62268066]
[-87.91257477 -231.15779114]
[-78.01152802 -217.14765930]
[-81.37128448 -199.97991943]
[-72.77272034 -187.68907166]
[-64.17415619 -175.39823914]
[-55.57559204 -163.10740662]
[-46.97703171 -150.81655884]
[-33.34141922 -144.82328796]
[-31.77050209 -129.08026123]
[-23.17193794 -116.78942871]
[-5.09945774 -109.91392517]
[-3.65972328 -89.80696869]
[5.30097294 -77.77759552]
[14.26166916 -65.74821472]
[23.22236443 -53.71883774]
[32.18305969 -41.68946075]
[41.14375687 -29.66008377]
[50.10445404 -17.63070488]
[48.76689911 -32.57094955]
[53.54456711 -46.78973770]
[63.63233566 -57.89094925]
[77.33023834 -64.00383759]
[92.32994843 -64.09827423]
[106.10372925 -58.15834045]
[116.33047485 -47.18502426]
[121.28679657 -33.02751923]
[120.13745880 -18.07161713]
[113.07615662 -4.83764696]
[101.29283142 4.44423342]
[86.77319336 8.20986462]
[71.96404266 5.82467175]
[59.35981369 -2.31056476]
[65.83930969 11.21778107]
[72.31880188 24.74612617]
[84.79474640 32.88246918]
[83.77777100 48.67095566]
[90.25726318 62.19929886]
[96.73676300 75.72764587]
[103.21625519 89.25598907]
[108.11766815 75.07938385]
[120.91983032 67.26243591]
[135.76976013 69.37895203]
[145.87826538 80.46128082]
[146.62388611 95.44273376]
[137.66572571 107.47399902]
[123.09933472 111.05453491]
[109.58296967 104.54605865]
[114.61988831 118.67508698]
[119.65680695 132.80412292]
[131.57885742 143.20484924]
[128.56457520 157.79125977]
[133.60148621 171.92028809]
[135.32739258 157.01989746]
[140.28239441 142.86193848]
[148.22473145 130.13719177]
[158.76687622 119.46651459]
[171.39443970 111.37056732]
[185.49133301 106.24436951]
[200.36970520 104.33803558]
[215.30360413 105.74457550]
[229.56439209 110.39537048]
[242.45625305 118.06349182]
[253.35014343 128.37478638]
[261.71456909 140.82617188]
[267.14135742 154.81008911]
[269.36575317 169.64424133]
[268.27920532 184.60482788]
[263.93475342 198.96191406]
[256.54437256 212.01496887]
[246.46862793 223.12709045]
[234.19915771 231.75611877]
[220.33460999 237.48101807]
[205.55146790 240.02244568]
[190.57104492 239.25642395]
[176.12425232 235.22030640]
[162.91600037 228.11102295]
[151.59072876 218.27546692]
[142.70101929 206.19352722]
[136.68261719 192.46102905]
[136.01283264 207.44606018]
[143.12620544 221.57795715]
[134.82832336 233.94705200]
[134.15853882 248.93208313]
[133.48875427 263.91711426]
[132.93054199 278.90673828]
[132.48393250 293.90008545]
[132.26060486 308.89843750]
[132.26060486 323.89843750]
[132.26060486 338.89843750]
[132.26060486 353.89843750]
[132.26060486 368.89843750]
[132.26060486 383.89843750]
[142.54237366 396.21365356]
[139.18348694 411.90115356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[11 202]
[12 201]
[14 200]
[15 199]
[16 198]
[18 196]
[19 195]
[20 168]
[21 167]
[23 165]
[24 164]
[25 163]
[26 155]
[27 154]
[28 153]
[29 152]
[31 150]
[32 149]
[33 148]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[40 128]
[44 126]
[45 125]
[47 123]
[48 122]
[49 121]
[50 120]
[51 119]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
