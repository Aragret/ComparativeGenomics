%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[58.16154861 698.09484863]
[47.69155502 708.94116211]
[34.92972946 716.96606445]
[20.61803246 721.70300293]
[5.58852530 722.87658691]
[-9.28499794 720.41864014]
[-23.13780785 714.47192383]
[-35.16452026 705.38226318]
[-44.66592026 693.67816162]
[-51.08960724 680.03997803]
[-54.06211853 665.26068115]
[-53.41063309 650.19952393]
[-49.17302704 635.73211670]
[-41.59567261 622.69952393]
[-31.11910439 611.85955811]
[-18.35241890 603.84240723]
[-4.03785181 599.11413574]
[10.99236488 597.94964600]
[13.43809223 583.15039062]
[15.88381958 568.35107422]
[18.32954788 553.55181885]
[16.31871414 546.44000244]
[20.92343330 538.55108643]
[23.58922768 523.78991699]
[26.25502396 509.02865601]
[28.92082024 494.26745605]
[20.24362946 482.21582031]
[22.73684692 467.20785522]
[35.43654633 458.18814087]
[38.10234070 443.42694092]
[40.76813507 428.66571045]
[43.43393326 413.90447998]
[46.09972763 399.14328003]
[40.74748230 385.24353027]
[50.81417847 373.03811646]
[53.47997284 358.27691650]
[39.77865219 350.52041626]
[29.54419327 338.52081299]
[24.02799225 323.71697998]
[23.91422081 307.89236450]
[29.23501015 292.96017456]
[39.36435318 280.73199463]
[53.09169769 272.69796753]
[68.76659393 269.84536743]
[71.21232605 255.04609680]
[73.65805054 240.24682617]
[76.10377502 225.44755554]
[78.32889557 210.61351013]
[80.33290863 195.74798584]
[82.33692169 180.88246155]
[84.34093475 166.01692200]
[76.81046295 150.16577148]
[88.18641663 135.68582153]
[89.96888733 120.79210663]
[91.75135040 105.89839172]
[89.50618744 98.15682983]
[93.67283630 90.79680634]
[95.67684937 75.93128204]
[97.68086243 61.06575012]
[99.68487549 46.20022202]
[90.37538147 33.71138000]
[92.61950684 18.66416931]
[104.58307648 9.86595821]
[106.58708954 -4.99956989]
[108.59110260 -19.86509895]
[110.59511566 -34.73062515]
[97.26582336 -27.85095024]
[83.51467133 -33.84309387]
[79.47849274 -48.28986740]
[88.13261414 -60.54164886]
[103.09753418 -61.56688309]
[113.34117889 -50.61137772]
[116.44528198 -65.28668213]
[119.54939270 -79.96198273]
[122.65350342 -94.63728333]
[125.75761414 -109.31258392]
[127.98273468 -124.14662933]
[129.32096863 -139.08682251]
[130.65919495 -154.02699280]
[131.99743652 -168.96717834]
[122.13957214 -181.02787781]
[123.70956421 -196.16029358]
[135.26834106 -205.48393250]
[132.91702271 -214.31054688]
[136.73933411 -220.63601685]
[138.29986572 -235.55462646]
[132.04025269 -250.08486938]
[141.05964661 -261.93811035]
[134.80003357 -276.46835327]
[143.81942749 -288.32162476]
[145.37994385 -303.24023438]
[146.94047546 -318.15884399]
[148.50099182 -333.07742310]
[150.06150818 -347.99603271]
[135.71063232 -352.53884888]
[122.56815338 -359.87780762]
[111.17224884 -369.71234131]
[101.98956299 -381.63977051]
[95.39613342 -395.17163086]
[91.66194916 -409.75384521]
[90.93993378 -424.78924561]
[93.25963593 -439.66217041]
[98.52607727 -453.76358032]
[106.52360535 -466.51599121]
[116.92471313 -477.39724731]
[129.30349731 -485.96176147]
[143.15303040 -491.85879517]
[157.90620422 -494.84692383]
[172.95887756 -494.80371094]
[187.69465637 -491.73095703]
[201.51011658 -485.75451660]
[213.83952332 -477.11907959]
[224.17799377 -466.17831421]
[232.10218811 -453.38015747]
[237.28759766 -439.24877930]
[239.52188110 -424.36276245]
[238.71356201 -409.33175659]
[234.89573669 -394.77124023]
[228.22473145 -381.27743530]
[218.97373962 -369.40292358]
[207.52156067 -359.63397217]
[194.33715820 -352.37057495]
[179.96044922 -347.91021729]
[164.98011780 -346.43551636]
[163.41960144 -331.51690674]
[161.85906982 -316.59829712]
[160.29855347 -301.67971802]
[158.73802185 -286.76110840]
[165.10926819 -273.29794312]
[155.97824097 -260.37759399]
[162.34948730 -246.91444397]
[153.21847534 -233.99411011]
[151.65794373 -219.07550049]
[150.20852661 -204.14569092]
[159.92631531 -192.91625977]
[158.78198242 -177.74571228]
[146.93762207 -167.62895203]
[145.59938049 -152.68876648]
[144.26115417 -137.74858093]
[142.92291260 -122.80839539]
[153.76589966 -133.17323303]
[168.61444092 -135.29943848]
[181.93040466 -128.39399719]
[188.74726868 -115.03247070]
[186.52250671 -100.19837189]
[176.08589172 -89.42445374]
[161.33004761 -86.72912598]
[147.75851440 -93.11767578]
[140.43292236 -106.20847321]
[137.32881165 -91.53317261]
[134.22470093 -76.85787201]
[131.12059021 -62.18256760]
[128.01647949 -47.50726700]
[125.46064758 -32.72661209]
[123.45663452 -17.86108398]
[121.45262146 -2.99555635]
[119.44860840 11.86997223]
[128.65527344 23.52213097]
[126.83468628 38.62643814]
[114.55039978 48.20423508]
[112.54638672 63.06976318]
[110.54237366 77.93529510]
[108.53836060 92.80081940]
[106.64507294 107.68085480]
[104.86260223 122.57456970]
[103.08013916 137.46829224]
[110.42398834 148.07162476]
[108.63275146 160.43994141]
[99.20646667 168.02093506]
[97.20245361 182.88647461]
[95.19843292 197.75199890]
[93.19441986 212.61752319]
[95.34817505 218.86834717]
[94.19495392 224.43316650]
[90.90304565 227.89328003]
[88.45732117 242.69255066]
[86.01159668 257.49182129]
[83.56586456 272.29110718]
[96.20977783 279.03149414]
[106.13903046 289.33187866]
[112.39237976 302.17590332]
[114.37036896 316.30209351]
[111.89272308 330.32748413]
[105.21472931 342.88311768]
[95.00098419 352.74768066]
[82.25928497 358.96621704]
[68.24118805 360.94268799]
[65.57539368 375.70391846]
[70.73696136 390.65948486]
[60.86094666 401.80908203]
[58.19514847 416.57028198]
[55.52935410 431.33151245]
[52.86355972 446.09271240]
[50.19776154 460.85394287]
[58.94031143 473.74600220]
[56.02653885 488.67800903]
[43.68203735 496.93325806]
[41.01624298 511.69445801]
[38.35044479 526.45568848]
[35.68465042 541.21691895]
[33.12881851 555.99755859]
[30.68309021 570.79681396]
[28.23736382 585.59606934]
[25.79163551 600.39538574]
[39.64804840 606.33367920]
[51.68027115 615.41601562]
[61.18876648 627.11437988]
[67.62071991 640.74865723]
[70.60218811 655.52612305]
[69.95983124 670.58770752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 204]
[19 203]
[20 202]
[21 201]
[23 200]
[24 199]
[25 198]
[26 197]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[35 188]
[36 187]
[44 178]
[45 177]
[46 176]
[47 175]
[48 172]
[49 171]
[50 170]
[51 169]
[53 166]
[54 165]
[55 164]
[57 163]
[58 162]
[59 161]
[60 160]
[63 157]
[64 156]
[65 155]
[66 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 140]
[78 139]
[79 138]
[80 137]
[83 134]
[85 133]
[86 132]
[88 130]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
