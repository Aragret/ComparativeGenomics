%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[110.68863678 171.09013367]
[115.97195435 157.04135132]
[122.44341278 143.49876404]
[130.05511475 130.56263733]
[117.82863617 121.87281799]
[105.60214996 113.18299103]
[91.70182800 111.67543030]
[85.70803070 99.04349518]
[73.48154449 90.35366821]
[61.25505447 81.66384125]
[45.86900711 84.09432220]
[33.59339905 75.10743713]
[31.37112808 60.42420959]
[19.14464378 51.73438644]
[6.91815758 43.04455948]
[-5.30832815 34.35473633]
[-17.53481293 25.66491127]
[-29.76129913 16.97508812]
[-39.12538910 28.69826508]
[-49.13207245 39.87794876]
[-59.74986267 50.47896576]
[-70.94535828 60.46795654]
[-82.68332672 69.81349945]
[-94.92684174 78.48618317]
[-107.63737488 86.45871735]
[-120.77493286 93.70603180]
[-134.29818726 100.20530701]
[-148.16458130 105.93610382]
[-162.33050537 110.88038635]
[-176.75135803 115.02259827]
[-191.38179016 118.34970856]
[-206.17575073 120.85124969]
[-221.08670044 122.51934814]
[-236.06771851 123.34876251]
[-251.07168579 123.33686829]
[-266.05139160 122.48371887]
[-280.95965576 120.79199219]
[-295.74963379 118.26700592]
[-310.37478638 114.91670990]
[-324.78906250 110.75164032]
[-338.94711304 105.78491211]
[-352.80441284 100.03215027]
[-366.31735229 93.51144409]
[-379.44342041 86.24332428]
[-392.14129639 78.25064850]
[-404.37103271 69.55857086]
[-416.09417725 60.19443893]
[-427.27383423 50.18771744]
[-437.87481689 39.56988525]
[-447.86376953 28.37435532]
[-457.20925903 16.63635063]
[-465.88189697 4.39280605]
[-473.85440063 -8.31775761]
[-481.10165405 -21.45534706]
[-487.60089111 -34.97862625]
[-493.33163452 -48.84504700]
[-498.27584839 -63.01097870]
[-502.41799927 -77.43184662]
[-505.74505615 -92.06228638]
[-508.24655151 -106.85626221]
[-509.91461182 -121.76721954]
[-510.74395752 -136.74824524]
[-510.73199463 -151.75221252]
[-509.87881470 -166.73190308]
[-508.18701172 -181.64018250]
[-505.66198730 -196.43014526]
[-502.31161499 -211.05526733]
[-498.14651489 -225.46952820]
[-493.17971802 -239.62757874]
[-487.42691040 -253.48484802]
[-480.90615845 -266.99777222]
[-473.63800049 -280.12380981]
[-465.64526367 -292.82165527]
[-456.95315552 -305.05136108]
[-447.58895874 -316.77447510]
[-437.58221436 -327.95410156]
[-426.96432495 -338.55502319]
[-415.76876831 -348.54394531]
[-404.03073120 -357.88937378]
[-391.78713989 -366.56198120]
[-379.07656860 -374.53442383]
[-365.93893433 -381.78164673]
[-352.41564941 -388.28082275]
[-338.54919434 -394.01150513]
[-324.38323975 -398.95568848]
[-309.96234131 -403.09777832]
[-295.33190918 -406.42480469]
[-280.53793335 -408.92623901]
[-265.62695312 -410.59420776]
[-250.64591980 -411.42352295]
[-235.64196777 -411.41149902]
[-220.66227722 -410.55825806]
[-205.75399780 -408.86639404]
[-190.96403503 -406.34130859]
[-176.33892822 -402.99090576]
[-161.92468262 -398.82574463]
[-147.76666260 -393.85891724]
[-133.90940857 -388.10604858]
[-120.39652252 -381.58523560]
[-107.27051544 -374.31701660]
[-94.57269287 -366.32424927]
[-82.34300232 -357.63208008]
[-70.61993408 -348.26785278]
[-59.44036102 -338.26104736]
[-48.83946228 -327.64312744]
[-38.85059357 -316.44754028]
[-29.50518417 -304.70947266]
[-20.83263588 -292.46585083]
[-12.86023903 -279.75521851]
[-5.61307573 -266.61758423]
[0.88605088 -253.09425354]
[6.61669254 -239.22779846]
[11.56081772 -225.06182861]
[15.70287132 -210.64093018]
[19.02981949 -196.01046753]
[21.53119659 -181.21647644]
[23.19912910 -166.30549622]
[24.02837372 -151.32446289]
[24.01631546 -136.32049561]
[23.16299629 -121.34082031]
[21.47110176 -106.43254852]
[18.94595146 -91.64260101]
[15.59549332 -77.01750183]
[11.43026733 -62.60327530]
[6.46338129 -48.44527054]
[0.71046132 -34.58803558]
[-5.81039143 -21.07517052]
[-13.07866001 -7.94919157]
[-21.07147598 4.74860144]
[-8.84498978 13.43842602]
[3.38149619 22.12825012]
[15.60798168 30.81807518]
[27.83446693 39.50790024]
[40.06095505 48.19772339]
[54.65854645 45.46900940]
[67.18173218 54.10755920]
[69.94487762 69.43735504]
[82.17136383 78.12718201]
[94.39785004 86.81700897]
[108.29817200 88.32456970]
[114.29196930 100.95650482]
[126.51845551 109.64633179]
[138.74494934 118.33615875]
[148.45941162 106.89454651]
[159.12152100 96.33040619]
[170.65229797 86.72193909]
[182.96638489 78.14029694]
[195.97261047 70.64900208]
[209.57469177 64.30353546]
[223.67190552 59.15086365]
[238.15988159 55.22914505]
[252.93136597 52.56740952]
[267.87698364 51.18536377]
[282.88607788 51.09324265]
[297.84753418 52.29172897]
[312.65057373 54.77194595]
[327.18557739 58.51553345]
[341.34500122 63.49477386]
[355.02392578 69.67279816]
[368.12112427 77.00387573]
[380.53964233 85.43372345]
[392.18750000 94.89992523]
[402.97845459 105.33239746]
[412.83264160 116.65390015]
[421.67709351 128.78060913]
[429.44631958 141.62275696]
[436.08279419 155.08523560]
[441.53741455 169.06838989]
[445.76977539 183.46868896]
[448.74850464 198.17951965]
[450.45159912 213.09196472]
[450.86645508 228.09561157]
[449.98995972 243.07937622]
[447.82861328 257.93231201]
[444.39843750 272.54449463]
[439.72482300 286.80767822]
[433.84234619 300.61630249]
[426.79458618 313.86810303]
[418.63372803 326.46499634]
[409.42019653 338.31372070]
[399.22216797 349.32650757]
[388.11517334 359.42187500]
[376.18142700 368.52502441]
[363.50933838 376.56860352]
[350.19265747 383.49304199]
[336.33001709 389.24707031]
[322.02404785 393.78808594]
[307.38067627 397.08245850]
[292.50830078 399.10583496]
[277.51705933 399.84320068]
[262.51791382 399.28909302]
[247.62191772 397.44763184]
[232.93937683 394.33245850]
[218.57899475 389.96661377]
[204.64706421 384.38244629]
[191.24676514 377.62127686]
[178.47731018 369.73315430]
[166.43321228 360.77651978]
[155.20367432 350.81765747]
[144.87182617 339.93032837]
[135.51416016 328.19509888]
[127.19995880 315.69885254]
[119.99078369 302.53417969]
[113.94000244 288.79846191]
[109.09241486 274.59344482]
[105.48391724 260.02429199]
[103.14122772 245.19888306]
[102.08168030 230.22694397]
[102.31312561 215.21936035]
[103.83385468 200.28721619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 143]
[5 142]
[6 141]
[8 139]
[9 138]
[10 137]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
