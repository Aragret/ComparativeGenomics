%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[116.15122986 609.60174561]
[124.41065216 596.76647949]
[137.42565918 588.79321289]
[135.86512756 573.87463379]
[134.30461121 558.95599365]
[121.33834076 551.67492676]
[115.07164001 537.99310303]
[118.09831238 523.07019043]
[129.46305847 512.67077637]
[127.90252686 497.75213623]
[126.34201050 482.83355713]
[112.08470154 480.82009888]
[98.71708679 475.44384766]
[87.02053833 467.01409912]
[77.67988586 456.01885986]
[71.24340057 443.09649658]
[68.09053802 428.99868774]
[68.40961456 414.54666138]
[72.18655396 400.58346558]
[79.20544434 387.92468262]
[89.06089020 377.31082153]
[101.18137360 369.36404419]
[114.86248016 364.55160522]
[113.52424622 349.61141968]
[112.18601227 334.67123413]
[109.16057587 330.97586060]
[108.42443848 325.34066772]
[111.03713989 319.26736450]
[110.14432526 304.29394531]
[109.25151062 289.32052612]
[108.35869598 274.34713745]
[107.46587372 259.37371826]
[106.23889923 244.42399597]
[104.67837524 229.50538635]
[103.11785889 214.58677673]
[90.98902130 209.00704956]
[83.13811493 198.07510376]
[81.70268250 184.58403015]
[87.16400909 172.04638672]
[98.19365692 163.77972412]
[96.85542297 148.83953857]
[95.51718903 133.89935303]
[86.67527008 121.91312408]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[83.16300201 79.11889648]
[89.93225861 65.85140228]
[88.81661224 50.89294815]
[87.70095825 35.93449783]
[86.58531189 20.97604179]
[85.46966553 6.01758909]
[72.43764496 -2.19659114]
[66.80706787 -16.34402657]
[70.54248047 -30.92177200]
[82.00833893 -40.39130020]
[80.89269257 -55.34975433]
[77.13368225 -63.67487335]
[79.87348175 -70.53893280]
[78.98066711 -85.51233673]
[78.08785248 -100.48574066]
[74.45320129 -108.86590576]
[77.29489136 -115.68840790]
[76.62510681 -130.67344666]
[68.27931976 -144.11436462]
[75.44059753 -157.17443848]
[74.77081299 -172.15946960]
[74.10102844 -187.14451599]
[73.43124390 -202.12954712]
[72.76145935 -217.11459351]
[63.97932053 -204.95423889]
[50.05619812 -199.37332153]
[35.30631638 -202.10115051]
[24.30009079 -212.29246521]
[20.44791603 -226.78938293]
[24.94343376 -241.09988403]
[36.39365768 -250.78968811]
[51.25061035 -252.85632324]
[64.91070557 -246.65939331]
[73.14128876 -234.11886597]
[74.47952271 -249.05905151]
[75.81775665 -263.99923706]
[77.15599060 -278.93942261]
[70.68073273 -293.37484741]
[79.52265167 -305.36108398]
[80.86088562 -320.30126953]
[82.19911957 -335.24145508]
[83.53735352 -350.18164062]
[68.93525696 -353.73641968]
[55.02611160 -359.42791748]
[42.12063980 -367.12899780]
[30.50716591 -376.66760254]
[20.44513512 -387.83062744]
[12.15933514 -400.36868286]
[5.83487558 -414.00170898]
[1.61304736 -428.42507935]
[-0.41183269 -443.31661987]
[-0.19452788 -458.34359741]
[2.26010704 -473.17034912]
[6.89723444 -487.46560669]
[13.61326027 -500.91003418]
[22.25814438 -513.20324707]
[32.63875580 -524.07067871]
[44.52319336 -533.26947021]
[57.64595032 -540.59417725]
[71.71385956 -545.88110352]
[86.41263580 -549.01214600]
[101.41390991 -549.91741943]
[116.38253784 -548.57659912]
[130.98413086 -545.01977539]
[144.89247131 -539.32629395]
[157.79684448 -531.62335205]
[169.40895081 -522.08312988]
[179.46939087 -510.91864014]
[187.75340271 -498.37939453]
[194.07592773 -484.74548340]
[198.29570007 -470.32150269]
[200.31846619 -455.42971802]
[200.09901428 -440.40274048]
[197.64227295 -425.57635498]
[193.00309753 -411.28173828]
[186.28517151 -397.83825684]
[177.63853455 -385.54626465]
[167.25636292 -374.68032837]
[155.37062073 -365.48324585]
[142.24682617 -358.16043091]
[128.17816162 -352.87548828]
[113.47894287 -349.74652100]
[98.47753906 -348.84341431]
[97.13930511 -333.90322876]
[95.80107117 -318.96304321]
[94.46283722 -304.02285767]
[101.03381348 -290.65603638]
[92.09617615 -277.60119629]
[90.75794220 -262.66101074]
[89.41970825 -247.72082520]
[88.08147430 -232.78063965]
[87.74649811 -217.78437805]
[88.41628265 -202.79933167]
[89.08606720 -187.81430054]
[89.75585175 -172.82925415]
[90.42563629 -157.84422302]
[98.72351837 -145.47512817]
[91.61014557 -131.34323120]
[92.27993011 -116.35819244]
[93.06125641 -101.37855530]
[93.95407104 -86.40515137]
[94.84688568 -71.43174744]
[95.85115051 -56.46540070]
[96.96679688 -41.50694656]
[109.71052551 -33.84304810]
[115.56709290 -19.98070335]
[112.09745026 -5.15454435]
[100.42811584 4.90194035]
[101.54376984 19.86039352]
[102.65941620 34.81884766]
[103.77506256 49.77730179]
[104.89070892 64.73575592]
[113.55319214 76.85230255]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[117.02834320 119.19431305]
[110.45736694 132.56111145]
[111.79560089 147.50129700]
[113.13384247 162.44148254]
[127.76703644 170.92474365]
[134.39462280 186.30578613]
[130.58657837 202.44456482]
[118.03646088 213.02626038]
[119.59698486 227.94487000]
[121.15750885 242.86346436]
[124.22499847 247.08692932]
[125.26202393 251.61216736]
[124.49362183 255.61524963]
[122.43928528 258.48089600]
[123.33209991 273.45431519]
[124.22491455 288.42773438]
[125.11772919 303.40112305]
[126.01054382 318.37454224]
[127.12619781 333.33297729]
[128.46443176 348.27316284]
[129.80265808 363.21334839]
[145.23130798 365.84985352]
[159.44436646 372.37936401]
[171.47859192 382.35305786]
[180.52005005 395.08889771]
[185.95915222 409.71823120]
[187.43174744 425.24517822]
[184.84353638 440.61422729]
[178.37602234 454.78219604]
[168.47384644 466.78884888]
[155.81423950 475.82214355]
[141.26060486 481.27301025]
[142.82113647 496.19161987]
[144.38165283 511.11022949]
[157.65246582 518.93273926]
[163.70176697 532.90625000]
[160.40205383 547.58880615]
[149.22320557 557.39550781]
[150.78373718 572.31408691]
[152.34425354 587.23272705]
[166.72750854 592.34002686]
[177.46429443 603.18823242]
[182.42280579 617.62347412]
[180.61853027 632.77960205]
[172.40971375 645.64727783]
[159.42622375 653.67175293]
[144.24592590 655.25964355]
[129.88288879 650.09570312]
[119.18891144 639.20526123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[9 195]
[10 194]
[11 193]
[23 182]
[24 181]
[25 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 171]
[34 170]
[35 169]
[40 165]
[41 164]
[42 163]
[44 161]
[46 160]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[56 150]
[57 149]
[59 148]
[60 147]
[61 146]
[63 145]
[64 144]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[80 137]
[81 136]
[82 135]
[83 134]
[85 132]
[86 131]
[87 130]
[88 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
