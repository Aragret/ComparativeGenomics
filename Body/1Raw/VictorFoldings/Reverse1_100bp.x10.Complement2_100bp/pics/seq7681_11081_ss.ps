%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[233.89605713 424.52816772]
[238.05451965 410.10061646]
[243.74851990 396.20724487]
[250.91131592 383.01098633]
[259.45889282 370.66650391]
[269.29107666 359.31857300]
[280.29257202 349.10025024]
[271.33187866 337.07086182]
[262.37118530 325.04147339]
[253.41049194 313.01211548]
[244.44978333 300.98272705]
[235.48908997 288.95333862]
[226.52839661 276.92398071]
[212.72038269 271.33932495]
[210.68144226 255.65005493]
[196.35128784 262.38137817]
[180.93386841 266.00631714]
[165.09465027 266.36605835]
[149.51780701 263.44281006]
[134.87663269 257.36062622]
[121.80445099 248.38017273]
[110.86725616 236.88749695]
[102.53912354 223.37750244]
[97.18175507 208.43261719]
[95.02868652 192.69764709]
[96.17517853 176.85202026]
[100.57395935 161.58036804]
[108.03717804 147.54304504]
[118.24443817 135.34747314]
[108.92955780 123.59022522]
[99.61466980 111.83297729]
[101.66619110 126.69202423]
[97.94964600 141.22430420]
[89.01635742 153.27404785]
[76.19152832 161.05374146]
[61.37763977 163.40931702]
[46.77224731 159.99134827]
[34.54197693 151.30683899]
[26.50111580 138.64411926]
[23.84247589 123.88161469]
[26.96045113 109.20925140]
[35.39250946 96.80359650]
[47.88780212 88.50494385]
[62.59273148 85.54435730]
[77.32590485 88.36101532]
[89.90037537 96.53575897]
[83.22017670 83.10538483]
[76.53998566 69.67501068]
[69.85978699 56.24463272]
[63.17959595 42.81425858]
[56.49940109 29.38388252]
[43.42588806 20.47356033]
[44.68550110 5.63231230]
[38.00530624 -7.79806376]
[31.32511139 -21.22843933]
[24.34665871 -34.50628662]
[17.07342911 -47.62498093]
[9.80020046 -60.74367523]
[2.52697110 -73.86236572]
[-4.74625826 -86.98106384]
[-18.20459747 -95.29873657]
[-17.60893822 -110.18142700]
[-24.88216782 -123.30011749]
[-32.15539551 -136.41880798]
[-39.42862701 -149.53750610]
[-46.70185471 -162.65620422]
[-60.71033859 -157.22700500]
[-75.32763672 -153.75593567]
[-90.28144073 -152.30764771]
[-105.29316711 -152.90913391]
[-120.08316040 -155.54917908]
[-134.37588501 -160.17861938]
[-147.90509033 -166.71118164]
[-160.41873169 -175.02519226]
[-171.68367004 -184.96575928]
[-181.49006653 -196.34768677]
[-189.65521240 -208.95895386]
[-196.02702332 -222.56460571]
[-200.48678589 -236.91119385]
[-202.95140076 -251.73143005]
[-203.37498474 -266.74923706]
[-201.74961853 -281.68481445]
[-198.10559082 -296.25997925]
[-192.51078796 -310.20312500]
[-185.06945801 -323.25457764]
[-175.92019653 -335.17114258]
[-165.23345947 -345.73086548]
[-153.20834351 -354.73699951]
[-140.06884766 -362.02172852]
[-126.05978394 -367.44943237]
[-111.44210815 -370.91891479]
[-96.48814392 -372.36557007]
[-81.47648621 -371.76245117]
[-66.68677521 -369.12081909]
[-52.39455032 -364.48983765]
[-38.86605453 -357.95581055]
[-26.35332108 -349.64044189]
[-15.08945560 -339.69866943]
[-5.28429461 -328.31567383]
[2.87949681 -315.70352173]
[9.24983215 -302.09716797]
[13.70803642 -287.75012207]
[16.17105484 -272.92959595]
[16.59300613 -257.91174316]
[14.96602535 -242.97633362]
[11.32042408 -228.40159607]
[5.72411776 -214.45903015]
[-1.71863794 -201.40838623]
[-10.86918926 -189.49279785]
[-21.55706596 -178.93424988]
[-33.58316040 -169.92942810]
[-26.30993271 -156.81072998]
[-19.03670311 -143.69204712]
[-11.76347351 -130.57334900]
[-4.49024391 -117.45465088]
[8.44786549 -110.07531738]
[8.37243557 -94.25428772]
[15.64566517 -81.13559723]
[22.91889381 -68.01690674]
[30.19212341 -54.89820862]
[37.46535492 -41.77951431]
[40.73578262 -40.46170044]
[43.53039932 -37.49435425]
[45.08086777 -33.11835861]
[44.75548935 -27.90863419]
[51.43568420 -14.47825813]
[58.11587524 -1.04788220]
[70.71157837 6.90180969]
[69.92977905 22.70368767]
[76.60997009 36.13406372]
[83.29016876 49.56444168]
[89.97035980 62.99481583]
[96.65055847 76.42519379]
[103.33074951 89.85556793]
[111.37192535 102.51808929]
[120.68680573 114.27534485]
[130.00169373 126.03259277]
[142.61953735 119.50714111]
[156.22206116 115.42768097]
[170.33998108 113.93329620]
[184.48660278 115.07390594]
[198.17448425 118.80863953]
[210.93231201 125.00724792]
[222.32110596 133.45469666]
[231.94929504 143.85856628]
[239.48622131 155.85923767]
[244.67347717 169.04229736]
[247.33375549 182.95280457]
[247.37690735 197.11106873]
[244.80305481 211.02912903]
[239.70243835 224.22761536]
[232.25231934 236.25222778]
[222.71081543 246.68936157]
[237.15975952 253.13442993]
[238.55776978 267.96328735]
[247.51846313 279.99264526]
[256.47915649 292.02203369]
[265.43984985 304.05142212]
[274.40054321 316.08078003]
[283.36126709 328.11016846]
[292.32196045 340.13955688]
[305.26208496 332.52374268]
[318.94976807 326.35168457]
[333.22454834 321.69577026]
[347.91906738 318.61050415]
[362.86102295 317.13214111]
[377.87521362 317.27795410]
[392.78561401 319.04629517]
[407.41741943 322.41635132]
[421.59906006 327.34869385]
[435.16430664 333.78543091]
[447.95407104 341.65112305]
[459.81842041 350.85354614]
[470.61822510 361.28482056]
[480.22689819 372.82260132]
[488.53176880 385.33166504]
[495.43545532 398.66531372]
[500.85702515 412.66723633]
[504.73291016 427.17324829]
[507.01766968 442.01330566]
[507.68450928 457.01339722]
[506.72564697 471.99765015]
[504.15228271 486.79037476]
[499.99459839 501.21817017]
[494.30133057 515.11181641]
[487.13925171 528.30847168]
[478.59231567 540.65344238]
[468.76074219 552.00189209]
[457.75982666 562.22082520]
[445.71847534 571.19042969]
[432.77795410 578.80554199]
[419.08993530 584.97680664]
[404.81488037 589.63201904]
[390.12020874 592.71643066]
[375.17819214 594.19403076]
[360.16400146 594.04736328]
[345.25369263 592.27825928]
[330.62207031 588.90740967]
[316.44067383 583.97430420]
[302.87579346 577.53686523]
[290.08645630 569.67047119]
[278.22259521 560.46740723]
[267.42333984 550.03552246]
[257.81530762 538.49725342]
[249.51110840 525.98773193]
[242.60813904 512.65368652]
[237.18731689 498.65148926]
[233.31221008 484.14526367]
[231.02824402 469.30508423]
[230.36219788 454.30496216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[15 153]
[29 137]
[30 136]
[31 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[53 127]
[54 126]
[55 125]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
