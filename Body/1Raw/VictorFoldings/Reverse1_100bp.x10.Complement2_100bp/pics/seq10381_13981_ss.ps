%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[127.04666901 386.96200562]
[135.91853333 374.79711914]
[147.12599182 364.74295044]
[160.17912292 357.23898315]
[155.56512451 342.96627808]
[150.95111084 328.69354248]
[146.33709717 314.42080688]
[141.61695862 300.18280029]
[136.79096985 285.98034668]
[122.98924255 275.14157104]
[126.72621155 257.11056519]
[121.68929291 242.98153687]
[116.65237427 228.85250854]
[111.61546326 214.72348022]
[106.57854462 200.59445190]
[101.54162598 186.46542358]
[96.50471497 172.33639526]
[94.71971130 187.22981262]
[89.33461761 201.22984314]
[80.67872620 213.48036194]
[69.28134918 223.23228455]
[55.83943939 229.88923645]
[41.17497635 233.04417419]
[26.18470192 232.50415039]
[11.78527164 228.30220032]
[-1.14278257 220.69526672]
[-11.80890465 210.14851379]
[-19.56085777 197.30690002]
[-23.92460632 182.95567322]
[-24.63330650 167.97242737]
[-21.64361954 153.27339172]
[-15.13836670 139.75740051]
[-5.51534748 128.25099182]
[6.63698816 119.45777130]
[20.57551956 113.91545105]
[35.44789886 111.96294403]
[50.34467697 113.71964264]
[64.35491180 119.07813263]
[76.62186432 127.71073151]
[86.39541626 139.08956909]
[93.07791138 152.51882935]
[83.49721527 137.81585693]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[92.50000000 31.72462654]
[90.19642639 28.04393005]
[89.27645111 24.20750427]
[89.61914062 20.66942787]
[90.96849060 17.79786873]
[92.97319794 15.83846092]
[93.86601257 0.86505514]
[94.75883484 -14.10835075]
[95.65164948 -29.08175659]
[96.54446411 -44.05516052]
[97.43727875 -59.02856827]
[85.61951447 -68.91020203]
[81.92951965 -83.68305969]
[87.57904816 -97.63105774]
[100.20726013 -105.48384857]
[101.10007477 -120.45725250]
[101.99288940 -135.43066406]
[87.95962524 -139.38313293]
[75.06388092 -146.17115784]
[63.87102890 -155.49429321]
[54.87118530 -166.94097900]
[48.45775604 -180.00677490]
[44.91022491 -194.11653137]
[44.38199615 -208.64976501]
[46.89374924 -222.96788025]
[52.33263779 -236.44227600]
[60.45737457 -248.48193359]
[70.90890503 -258.55932617]
[83.22631836 -266.23352051]
[96.86712646 -271.16955566]
[111.23117828 -273.15292358]
[112.34682465 -288.11135864]
[113.35108948 -303.07769775]
[114.24390411 -318.05111694]
[115.13671875 -333.02450562]
[116.02953339 -347.99792480]
[109.12735748 -362.23416138]
[117.60847473 -374.47833252]
[118.50128937 -389.45175171]
[119.39411163 -404.42514038]
[120.28692627 -419.39855957]
[121.17974091 -434.37194824]
[122.07255554 -449.34536743]
[107.51203918 -453.15029907]
[93.97373199 -459.72299194]
[81.97801208 -468.81085205]
[71.98596954 -480.06454468]
[64.38166809 -493.05148315]
[59.45739746 -507.27252197]
[57.40243149 -522.18103027]
[58.29576111 -537.20391846]
[62.10304642 -551.76385498]
[68.67794037 -565.30108643]
[77.76773834 -577.29534912]
[89.02303314 -587.28552246]
[102.01121521 -594.88775635]
[116.23303986 -599.80969238]
[131.14187622 -601.86224365]
[146.16465759 -600.96649170]
[160.72393799 -597.15686035]
[174.26011658 -590.57977295]
[186.25288391 -581.48803711]
[196.24128723 -570.23114014]
[203.84138489 -557.24169922]
[208.76104736 -543.01910400]
[210.81118774 -528.10992432]
[209.91300964 -513.08728027]
[206.10099792 -498.52862549]
[199.52172852 -484.99353027]
[190.42805481 -473.00222778]
[179.16952515 -463.01562500]
[166.17887878 -455.41763306]
[151.95545959 -450.50027466]
[137.04595947 -448.45254517]
[136.15315247 -433.47915649]
[135.26033020 -418.50573730]
[134.36750793 -403.53231812]
[133.47470093 -388.55892944]
[132.58187866 -373.58551025]
[139.54792786 -360.42028809]
[131.00294495 -347.10510254]
[130.11012268 -332.13171387]
[129.21731567 -317.15829468]
[128.32449341 -302.18490601]
[131.06430054 -295.32083130]
[127.30528259 -286.99572754]
[126.18963623 -272.03726196]
[140.98489380 -267.57357788]
[154.42620850 -259.93347168]
[165.84130859 -249.49551392]
[174.65849304 -236.77827454]
[180.43524170 -222.41458130]
[182.88043213 -207.12002563]
[181.86898804 -191.65733337]
[177.44830322 -176.79826355]
[169.83599854 -163.28520203]
[159.40924072 -151.79394531]
[146.68601990 -142.89999390]
[132.29946899 -137.04969788]
[116.96629333 -134.53784180]
[116.07347870 -119.56443787]
[115.18066406 -104.59103394]
[126.78624725 -95.29325867]
[130.73828125 -80.77274323]
[125.31896210 -66.54305267]
[112.41068268 -58.13575363]
[111.51786804 -43.16234589]
[110.62505341 -28.18894005]
[109.73223877 -13.21553516]
[108.83942413 1.75787103]
[107.94660950 16.73127747]
[107.50000000 31.72462654]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[116.52962494 131.24967957]
[116.40686798 143.74642944]
[108.07791138 152.51882935]
[110.63374329 167.29948425]
[115.67065430 181.42851257]
[120.70757294 195.55754089]
[125.74449158 209.68656921]
[130.78140259 223.81559753]
[135.81832886 237.94462585]
[140.85523987 252.07365417]
[152.15277100 258.29687500]
[156.05715942 270.16867065]
[150.99342346 281.15435791]
[155.81941223 295.35681152]
[161.54344177 302.47534180]
[160.60983276 309.80679321]
[165.22384644 324.07952881]
[169.83784485 338.35226440]
[174.45185852 352.62500000]
[189.42749023 351.06796265]
[204.39953613 352.65896606]
[218.71350098 357.32846069]
[231.74363708 364.87228394]
[242.92031860 374.96066284]
[251.75495911 387.15258789]
[257.86132812 400.91506958]
[260.97250366 415.64645386]
[260.95245361 430.70278931]
[257.80206299 445.42587280]
[251.65905762 459.17205811]
[242.79199219 471.34039307]
[231.58848572 481.39898682]
[218.53829956 488.90808105]
[204.21194458 493.53942871]
[189.23571777 495.09054565]
[174.26428223 493.49365234]
[159.95216370 488.81854248]
[146.92498779 481.26959229]
[135.75227356 471.17681885]
[126.92243958 458.98141479]
[120.82148743 445.21652222]
[117.71611786 430.48391724]
[117.74208832 415.42758179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 183]
[8 181]
[9 180]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[41 170]
[43 167]
[44 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[64 151]
[65 150]
[66 149]
[80 136]
[81 135]
[82 133]
[83 132]
[84 131]
[85 130]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
