%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[92.70411682 736.99200439]
[79.52468109 745.18237305]
[64.05058289 744.02832031]
[52.23192978 733.97351074]
[48.61323547 718.88427734]
[54.58596039 704.56274414]
[67.85346985 696.51580811]
[68.96911621 681.55737305]
[62.19985962 668.28985596]
[70.94213867 655.10339355]
[72.05778503 640.14495850]
[73.17343140 625.18646240]
[74.28908539 610.22802734]
[75.40473175 595.26959229]
[76.29754639 580.29620361]
[76.96733093 565.31115723]
[77.63711548 550.32611084]
[75.84712982 548.16876221]
[74.80384827 545.17242432]
[74.83110046 541.61785889]
[76.14521027 537.89801025]
[78.81919861 534.47692871]
[80.37972260 519.55828857]
[81.94024658 504.63970947]
[79.50967407 497.66015625]
[83.63667297 489.51119995]
[85.41914368 474.61746216]
[87.20160675 459.72375488]
[88.98406982 444.83004761]
[90.54459381 429.91143799]
[91.88282776 414.97125244]
[92.55261230 399.98620605]
[92.55261230 384.98620605]
[92.55261230 369.98620605]
[92.55261230 354.98620605]
[92.55261230 339.98620605]
[92.44094849 324.98663330]
[92.21762085 309.98828125]
[91.99429321 294.98995972]
[89.25209045 291.07977295]
[88.93711090 285.40548706]
[91.99429321 279.54330444]
[92.21762085 264.54495239]
[92.44094849 249.54661560]
[92.66427612 234.54827881]
[92.88760376 219.54994202]
[93.11093140 204.55160522]
[78.01924133 196.26431274]
[69.15805054 181.39849854]
[69.04602814 164.00334167]
[77.80422974 148.87043762]
[93.09796143 140.21394348]
[92.87463379 125.21559906]
[92.65130615 110.21726227]
[92.09309387 95.22765350]
[91.20027924 80.25424957]
[90.30746460 65.28084564]
[89.41464996 50.30743790]
[76.12017822 38.93745804]
[75.18060303 21.80760002]
[86.68965912 9.54463196]
[85.57400513 -5.41382170]
[84.45835876 -20.37227440]
[83.34271240 -35.33072662]
[82.22706604 -50.28918076]
[81.11141205 -65.24763489]
[70.52790833 -54.61798859]
[55.52887344 -54.44747162]
[44.70644760 -64.83376312]
[44.26020050 -79.82712555]
[54.44576645 -90.83867645]
[69.42839050 -91.56050110]
[80.62492371 -81.57996368]
[73.09394836 -95.49380493]
[81.01987457 -108.10446930]
[81.24320221 -123.10280609]
[81.46652985 -138.10113525]
[81.46652985 -153.10113525]
[81.24320221 -168.09947205]
[73.30130005 -181.78292847]
[80.84825134 -194.62397766]
[80.62492371 -209.62231445]
[80.40159607 -224.62065125]
[72.45968628 -238.30410767]
[80.00664520 -251.14515686]
[68.94754028 -262.11483765]
[68.93471527 -277.32846069]
[79.46078491 -287.80404663]
[79.23745728 -302.80236816]
[71.29554749 -316.48580933]
[78.84250641 -329.32687378]
[78.61917877 -344.32522583]
[78.39585114 -359.32354736]
[78.17252350 -374.32189941]
[77.94919586 -389.32022095]
[77.72586823 -404.31857300]
[69.78395844 -418.00201416]
[77.33090973 -430.84307861]
[77.10758209 -445.84140015]
[63.42215347 -452.69470215]
[54.49860764 -465.12969971]
[52.38751602 -480.28890991]
[57.57398605 -494.68887329]
[68.86621094 -505.02059937]
[83.66931152 -508.90988159]
[98.58165741 -505.46304321]
[110.17648315 -495.47213745]
[115.78939819 -481.23297119]
[114.13058472 -466.01760864]
[105.58123779 -453.32244873]
[92.10591888 -446.06472778]
[92.32924652 -431.06640625]
[100.25518036 -418.45571899]
[92.72420502 -404.54190063]
[92.94753265 -389.54354858]
[93.17086029 -374.54522705]
[93.39418793 -359.54687500]
[93.61751556 -344.54855347]
[93.84084320 -329.55020142]
[101.76677704 -316.93954468]
[94.23579407 -303.02569580]
[94.45912170 -288.02737427]
[105.29242706 -277.86984253]
[105.73256683 -262.66259766]
[95.00498199 -251.36848450]
[102.93091583 -238.75782776]
[95.39993286 -224.84397888]
[95.62326050 -209.84564209]
[95.84658813 -194.84730530]
[103.77252197 -182.23664856]
[96.24154663 -168.32279968]
[96.46487427 -153.32446289]
[99.20707703 -149.41430664]
[99.52204895 -143.73999023]
[96.46487427 -137.87780762]
[96.24154663 -122.87947845]
[96.01821899 -107.88113403]
[103.56517029 -95.04007721]
[95.62326050 -81.35663605]
[96.06987000 -66.36328125]
[97.18551636 -51.40483093]
[98.30116272 -36.44637680]
[99.41681671 -21.48792458]
[100.53246307 -6.52947044]
[101.64810944 8.42898273]
[112.49217987 15.38855743]
[117.42136383 27.50405312]
[114.42855072 40.43670654]
[104.38805389 49.41461945]
[105.28086853 64.38802338]
[106.17368317 79.36143494]
[107.06649780 94.33483887]
[109.55902863 97.27757263]
[110.74234009 101.30468750]
[110.16122437 105.80683136]
[107.64964294 109.99393463]
[107.87297058 124.99227142]
[108.09629822 139.99061584]
[119.92187500 145.18052673]
[128.87371826 154.42388916]
[133.64733887 166.32293701]
[133.56637573 179.09684753]
[128.67820740 190.84817505]
[119.74160767 199.84472656]
[108.10926819 204.77493286]
[107.88594055 219.77326965]
[107.66261292 234.77160645]
[107.43928528 249.76994324]
[107.21595764 264.76828003]
[106.99263000 279.76663208]
[106.99263000 294.76663208]
[107.21595764 309.76495361]
[107.43928528 324.76330566]
[110.69611359 333.29739380]
[107.55261230 339.98620605]
[107.55261230 354.98620605]
[107.55261230 369.98620605]
[107.55261230 384.98620605]
[107.55261230 399.98620605]
[118.89740753 390.17315674]
[133.86756897 391.11868286]
[143.88752747 402.28115845]
[143.21739197 417.26617432]
[132.24102783 427.48965454]
[117.24622345 427.09512329]
[106.82301331 416.30947876]
[105.48477936 431.24966431]
[107.91550446 437.39810181]
[107.01190948 443.00885010]
[103.87779236 446.61248779]
[102.09532166 461.50622559]
[100.31285858 476.39993286]
[98.53039551 491.29364014]
[96.85884857 506.20022583]
[95.29833221 521.11883545]
[93.73780823 536.03741455]
[92.62215424 550.99591064]
[91.95236969 565.98095703]
[91.28258514 580.96594238]
[93.98542023 586.99969482]
[93.33326721 592.64520264]
[90.36318207 596.38525391]
[89.24753571 611.34368896]
[88.13188934 626.30212402]
[87.01624298 641.26062012]
[85.90058899 656.21905518]
[92.59004974 670.55645752]
[83.92756653 682.67303467]
[82.81192017 697.63146973]
[94.73895264 707.55749512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 199]
[16 198]
[17 197]
[22 196]
[23 195]
[24 194]
[26 193]
[27 192]
[28 191]
[29 190]
[30 187]
[31 186]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 173]
[38 172]
[39 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 165]
[52 158]
[53 157]
[54 156]
[55 152]
[56 151]
[57 150]
[58 149]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[73 139]
[75 137]
[76 136]
[77 135]
[78 132]
[79 131]
[81 129]
[82 128]
[83 127]
[85 125]
[88 122]
[89 121]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
