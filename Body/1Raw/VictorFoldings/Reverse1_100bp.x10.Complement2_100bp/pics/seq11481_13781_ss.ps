%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[245.76144409 348.05459595]
[237.16288757 335.76376343]
[230.75285339 332.08499146]
[228.52940369 323.22531128]
[220.11477661 310.80780029]
[211.70016479 298.39031982]
[205.34561157 294.61651611]
[203.25431824 285.72470093]
[195.02551270 273.18331909]
[186.79670715 260.64190674]
[178.56788635 248.10050964]
[165.11677551 241.70390320]
[164.01527405 225.92108154]
[155.78646851 213.37968445]
[153.07237244 212.67840576]
[150.47251892 210.85978699]
[148.41389465 207.96194458]
[147.30178833 204.17674255]
[147.46716309 199.83776855]
[139.90278625 186.88478088]
[132.24218750 173.98844910]
[124.58158875 161.09211731]
[121.27336884 159.87226868]
[118.39163971 156.98944092]
[116.71157074 152.66154480]
[116.88169861 147.44444275]
[109.80458832 134.21891785]
[102.72748566 120.99339294]
[90.24577332 118.78874207]
[81.26068115 109.84884644]
[78.99312592 97.37841034]
[84.25595093 85.84774017]
[77.37653351 72.51831055]
[70.49712372 59.18888092]
[63.51866913 45.91103363]
[56.44156265 32.68550873]
[49.36445999 19.45998001]
[34.50602341 14.78401089]
[27.51723671 1.27062881]
[32.06662750 -12.86580086]
[24.98952103 -26.09132767]
[19.61665916 -12.08660221]
[5.97132444 -5.85724878]
[-8.12981510 -10.97172451]
[-14.60898685 -24.50022507]
[-9.75462627 -38.69301224]
[3.65246725 -45.41981125]
[17.93137550 -40.82781982]
[12.06241512 -54.63199615]
[6.19345427 -68.43617249]
[0.32449353 -82.24034882]
[-5.54446745 -96.04452515]
[-11.41342831 -109.84870148]
[-17.28238869 -123.65287781]
[-23.15135002 -137.45706177]
[-35.67133331 -147.12973022]
[-33.53058624 -161.86968994]
[-39.39954758 -175.67387390]
[-45.26850510 -189.47804260]
[-51.13746643 -203.28222656]
[-57.00642776 -217.08639526]
[-63.08026123 -230.80166626]
[-69.35762024 -244.42498779]
[-84.63607025 -254.70362854]
[-82.34652710 -272.10263062]
[-88.82601929 -285.63098145]
[-95.30551910 -299.15930176]
[-101.78501129 -312.68765259]
[-108.26451111 -326.21600342]
[-114.74400330 -339.74435425]
[-129.11367798 -335.34320068]
[-143.97883606 -333.13302612]
[-159.00737000 -333.16314697]
[-173.86354065 -335.43292236]
[-188.21545410 -339.89166260]
[-201.74247742 -346.43972778]
[-214.14242554 -354.93081665]
[-225.13829041 -365.17529297]
[-234.48437500 -376.94421387]
[-241.97193909 -389.97473145]
[-247.43367004 -403.97570801]
[-250.74755859 -418.63433838]
[-251.83958435 -433.62316895]
[-250.68533325 -448.60736084]
[-247.31059265 -463.25210571]
[-241.79078674 -477.23028564]
[-234.24919128 -490.22958374]
[-224.85429382 -501.95962524]
[-213.81600952 -512.15832520]
[-201.38090515 -520.59790039]
[-187.82679749 -527.08972168]
[-173.45649719 -531.48883057]
[-158.59103394 -533.69689941]
[-143.56250000 -533.66461182]
[-128.70664978 -531.39270020]
[-114.35537720 -526.93194580]
[-100.82927704 -520.38195801]
[-88.43053436 -511.88909912]
[-77.43614197 -501.64306641]
[-68.09172058 -489.87277222]
[-60.60602570 -476.84121704]
[-55.14628601 -462.83944702]
[-51.83448410 -448.18035889]
[-50.74459839 -433.19134521]
[-51.90098190 -418.20733643]
[-55.27779770 -403.56307983]
[-60.79960632 -389.58569336]
[-68.34305573 -376.58746338]
[-77.73960876 -364.85876465]
[-88.77935791 -354.66162109]
[-101.21566010 -346.22384644]
[-94.73616791 -332.69549561]
[-88.25666809 -319.16714478]
[-81.77717590 -305.63882446]
[-75.29767609 -292.11047363]
[-68.81818390 -278.58212280]
[-57.51699829 -274.26821899]
[-52.00810623 -263.05053711]
[-55.73430634 -250.70234680]
[-49.45694733 -237.07902527]
[-45.36629868 -234.61415100]
[-42.78064346 -229.55337524]
[-43.20225143 -222.95535278]
[-37.33329010 -209.15118408]
[-31.46432877 -195.34700012]
[-25.59536934 -181.54283142]
[-19.72640800 -167.73864746]
[-7.62621355 -159.05334473]
[-9.34717274 -143.32601929]
[-3.47821188 -129.52183533]
[2.39074874 -115.71766663]
[8.25970936 -101.91349030]
[14.12867069 -88.10930634]
[19.99763107 -74.30513000]
[25.86659241 -60.50095749]
[31.73555183 -46.69678116]
[38.21504974 -33.16843414]
[45.29215240 -19.94290543]
[59.57745361 -15.88509846]
[66.94304657 -2.57334852]
[62.58998489 12.38287449]
[69.66709137 25.60840225]
[76.74419403 38.83393097]
[82.67165375 43.24834061]
[83.82655334 52.30946732]
[90.70596313 65.63890076]
[97.58537292 78.96833038]
[113.41812897 83.62577057]
[121.09608459 98.23455811]
[115.95301056 113.91628265]
[123.03012085 127.14181519]
[130.10722351 140.36734009]
[137.47792053 153.43151855]
[145.13850403 166.32785034]
[152.79910278 179.22418213]
[159.87232971 185.00408936]
[160.47612000 192.37004089]
[168.32786560 205.15087891]
[176.55667114 217.69227600]
[190.59637451 224.98593140]
[191.10929871 239.87170410]
[199.33810425 252.41310120]
[207.56690979 264.95449829]
[215.79571533 277.49591064]
[224.11766052 289.97567749]
[232.53227234 302.39318848]
[240.94689941 314.81066895]
[249.45372009 327.16519165]
[258.05227661 339.45602417]
[271.46414185 332.68084717]
[285.70370483 327.88342285]
[300.48110962 325.16140747]
[315.49548340 324.57022095]
[330.44113159 326.12188721]
[345.01382446 329.78485107]
[358.91687012 335.48452759]
[371.86721802 343.10485840]
[383.60119629 352.49072266]
[393.87994385 363.45101929]
[402.49417114 375.76263428]
[409.26852417 389.17492676]
[414.06506348 403.41479492]
[416.78616333 418.19235229]
[417.37643433 433.20675659]
[415.82382202 448.15231323]
[412.15994263 462.72479248]
[406.45941162 476.62747192]
[398.83828735 489.57733154]
[389.45169067 501.31076050]
[378.49075317 511.58880615]
[366.17861938 520.20227051]
[352.76593018 526.97576904]
[338.52575684 531.77148438]
[323.74801636 534.49163818]
[308.73358154 535.08099365]
[293.78811646 533.52746582]
[279.21588135 529.86267090]
[265.31353760 524.16131592]
[252.36413574 516.53936768]
[240.63131714 507.15203857]
[230.35394287 496.19046021]
[221.74122620 483.87777710]
[214.96853638 470.46469116]
[210.17375183 456.22421265]
[207.45446777 441.44631958]
[206.86607361 426.43182373]
[208.42053223 411.48645020]
[212.08621216 396.91442871]
[217.78845215 383.01245117]
[225.41119385 370.06353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[4 167]
[5 166]
[6 165]
[8 164]
[9 163]
[10 162]
[11 161]
[13 159]
[14 158]
[19 157]
[20 155]
[21 154]
[22 153]
[26 152]
[27 151]
[28 150]
[32 147]
[33 146]
[34 145]
[35 143]
[36 142]
[37 141]
[40 138]
[41 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 120]
[63 119]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
