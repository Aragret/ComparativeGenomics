%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[100.05412292 784.24487305]
[85.05606842 783.57452393]
[70.20278931 781.39019775]
[55.64669800 777.71447754]
[41.53717041 772.58489990]
[28.01899147 766.05419922]
[15.23088074 758.18939209]
[3.30406332 749.07116699]
[-7.63907099 738.79309082]
[-17.48622894 727.46063232]
[-26.13636017 715.19012451]
[-33.50070190 702.10742188]
[-39.50368500 688.34674072]
[-44.08370590 674.04937744]
[-47.19376755 659.36206055]
[-48.80195618 644.43536377]
[-48.89176941 629.42260742]
[-47.46228409 614.47784424]
[-44.52817154 599.75427246]
[-40.11953735 585.40313721]
[-34.28162384 571.57171631]
[-27.07433510 558.40179443]
[-18.57163239 546.02862549]
[-8.86076736 534.57916260]
[1.95861292 524.17089844]
[13.77548218 514.91064453]
[26.46858025 506.89340210]
[39.90765381 500.20144653]
[53.95479965 494.90344238]
[68.46586609 491.05377197]
[83.29195404 488.69195557]
[98.28091431 487.84219360]
[98.95069885 472.85714722]
[99.62048340 457.87210083]
[100.29026794 442.88708496]
[100.96005249 427.90203857]
[101.62983704 412.91699219]
[101.96481323 397.92074585]
[101.96481323 382.92074585]
[101.74148560 367.92239380]
[101.29488373 352.92904663]
[100.84827423 337.93569946]
[85.94878387 332.53836060]
[74.23283386 321.81057739]
[67.51440430 307.37319946]
[66.84906769 291.42449951]
[72.36826324 276.40536499]
[83.25461578 264.62582397]
[97.86289215 257.90966797]
[97.19310760 242.92462158]
[96.52332306 227.93959045]
[87.81096649 219.54785156]
[87.13031769 207.06904602]
[95.39086914 197.16317749]
[94.94425964 182.16983032]
[94.49765778 167.17648315]
[94.05104828 152.18313599]
[79.59507751 148.39533997]
[66.79106140 140.68949890]
[56.67560959 129.68949890]
[50.06764984 116.28586578]
[47.50215149 101.56375122]
[49.18682480 86.71503448]
[54.98527145 72.94184875]
[64.42806244 61.35926437]
[76.75070953 52.90499115]
[90.95560455 48.26347351]
[90.50899506 33.27012634]
[81.67348480 23.87350273]
[81.61016846 11.37631226]
[89.80759430 2.48087692]
[81.86569214 -11.20256901]
[89.41264343 -24.04362679]
[89.18931580 -39.04196548]
[88.96598816 -54.04030228]
[88.51937866 -69.03365326]
[87.84959412 -84.01869202]
[87.17980957 -99.00373077]
[86.51002502 -113.98876953]
[85.84024048 -128.97380066]
[85.17045593 -143.95884705]
[84.50067139 -158.94387817]
[83.83088684 -173.92892456]
[75.04875183 -161.76856995]
[61.12562561 -156.18765259]
[46.37574768 -158.91548157]
[35.36951828 -169.10679626]
[31.51734543 -183.60371399]
[36.01286316 -197.91421509]
[47.46308517 -207.60401917]
[62.32003784 -209.67065430]
[75.98013306 -203.47373962]
[84.21071625 -190.93319702]
[85.54895020 -205.87338257]
[86.88718414 -220.81356812]
[88.22541809 -235.75375366]
[89.56365204 -250.69393921]
[90.90188599 -265.63412476]
[76.84067535 -271.15310669]
[64.90475464 -280.41110229]
[56.06172562 -292.65762329]
[51.02844620 -306.89990234]
[50.21294403 -321.98339844]
[53.68133163 -336.68533325]
[61.15243530 -349.81390381]
[72.02060699 -360.30484009]
[85.40482330 -367.30764771]
[100.22006989 -370.25469971]
[115.26535797 -368.90704346]
[129.32101440 -363.37396240]
[141.24761963 -354.10397339]
[150.07835388 -341.84857178]
[155.09732056 -327.60122681]
[155.89765930 -312.51693726]
[152.41450500 -297.81848145]
[144.93022156 -284.69741821]
[134.05151367 -274.21743774]
[120.66027069 -267.22805786]
[105.84207153 -264.29589844]
[104.50383759 -249.35571289]
[103.16560364 -234.41552734]
[101.82736969 -219.47534180]
[100.48913574 -204.53515625]
[99.15090179 -189.59497070]
[98.81592560 -174.59870911]
[99.48571014 -159.61366272]
[100.15549469 -144.62863159]
[100.82527924 -129.64358521]
[101.49506378 -114.65855408]
[102.16484833 -99.67351532]
[102.83463287 -84.68847656]
[103.50441742 -69.70343781]
[106.36183167 -65.87665558]
[106.84561157 -60.21423721]
[103.96432495 -54.26362991]
[104.18765259 -39.26529312]
[104.41098022 -24.26695442]
[112.33691406 -11.65629005]
[104.80593109 2.25754905]
[114.60446930 16.81624413]
[105.50234222 32.82351685]
[105.94895172 47.81686783]
[120.40492249 51.60466766]
[133.20893860 59.31049347]
[143.32438660 70.31050110]
[149.93235779 83.71413422]
[152.49784851 98.43624878]
[150.81317139 113.28496552]
[145.01472473 127.05815125]
[135.57194519 138.64073181]
[123.24929047 147.09501648]
[109.04439545 151.73652649]
[109.49100494 166.72987366]
[109.93761444 181.72322083]
[110.38421631 196.71656799]
[120.42297363 212.15370178]
[111.50836182 227.26980591]
[112.17814636 242.25483704]
[112.84793091 257.23986816]
[126.37287140 261.70385742]
[137.53831482 270.49783325]
[145.01565552 282.54949951]
[147.92404175 296.40042114]
[145.93408203 310.38262939]
[139.30499268 322.81945801]
[128.85104370 332.22653198]
[115.84162140 337.48910522]
[116.28823090 352.48245239]
[116.73483276 367.47579956]
[119.87895966 373.29180908]
[119.64849854 378.97018433]
[116.96481323 382.92074585]
[116.96481323 397.92074585]
[119.57627869 402.44039917]
[120.13688660 407.04898071]
[118.95619965 410.95037842]
[116.61487579 413.58679199]
[115.94509125 428.57180786]
[115.27530670 443.55685425]
[114.60552216 458.54190063]
[113.93573761 473.52694702]
[113.26595306 488.51196289]
[128.11932373 490.69558716]
[142.67558289 494.37072754]
[156.78532410 499.49966431]
[170.30380249 506.02975464]
[183.09225464 513.89398193]
[195.01947021 523.01171875]
[205.96305847 533.28930664]
[215.81071472 544.62127686]
[224.46138000 556.89147949]
[231.82630920 569.97387695]
[237.82989502 583.73425293]
[242.41053772 598.03137207]
[245.52125549 612.71862793]
[247.13009644 627.64520264]
[247.22056580 642.65795898]
[245.79174805 657.60284424]
[242.85827637 672.32647705]
[238.45027161 686.67779541]
[232.61297607 700.50952148]
[225.40626526 713.67974854]
[216.90409851 726.05328369]
[207.19374084 737.50317383]
[196.37481689 747.91192627]
[184.55836487 757.17266846]
[171.86561584 765.19049072]
[158.42683411 771.88305664]
[144.37992859 777.18164062]
[129.86901855 781.03198242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 173]
[39 172]
[40 169]
[41 168]
[42 167]
[49 159]
[50 158]
[51 157]
[54 155]
[55 154]
[56 153]
[57 152]
[67 142]
[68 141]
[71 139]
[73 137]
[74 136]
[75 135]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
