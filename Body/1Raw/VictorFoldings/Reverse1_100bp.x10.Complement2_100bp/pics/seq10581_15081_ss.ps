%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[32.72714233 637.24969482]
[29.00415421 651.82830811]
[22.58918190 665.43878174]
[13.71412373 677.58905029]
[2.69980621 687.83996582]
[-10.05560970 695.82098389]
[-24.09102440 701.24346924]
[-38.89906693 703.91149902]
[-53.94443130 703.72863770]
[-68.68324280 700.70141602]
[-82.58270264 694.93933105]
[-95.14035034 686.65063477]
[-105.90222931 676.13507080]
[-114.47931671 663.77258301]
[-120.56155396 650.01019287]
[-123.92906952 635.34539795]
[-124.46012115 620.30834961]
[-122.13552856 605.44250488]
[-117.03930664 591.28533936]
[-109.35569763 578.34863281]
[-99.36244202 567.09997559]
[-87.42080688 557.94610596]
[-73.96246338 551.21783447]
[-59.47392654 547.15844727]
[-44.47894287 545.91461182]
[-29.51958084 547.53137207]
[-25.11858177 533.19152832]
[-20.71758461 518.85168457]
[-16.31658554 504.51187134]
[-25.86840820 496.24258423]
[-31.60436630 484.93331909]
[-32.64082718 472.24813843]
[-28.78859901 460.06866455]
[-20.58626747 450.21490479]
[-9.22519207 444.17327881]
[3.62345243 442.87255859]
[8.44945049 428.67010498]
[5.21832466 414.13018799]
[16.98420906 403.55310059]
[21.81020737 389.35064697]
[26.63620377 375.14819336]
[31.46220207 360.94573975]
[35.86320114 346.60589600]
[39.83529663 332.14138794]
[43.80739212 317.67684937]
[47.77948761 303.21234131]
[51.75158310 288.74780273]
[40.43864822 279.02755737]
[34.44324875 265.30297852]
[35.00362778 250.27476501]
[42.06216431 236.92570496]
[54.26618195 227.92854309]
[69.22687531 225.11093140]
[73.19897461 210.64640808]
[77.17106628 196.18188477]
[81.14316559 181.71736145]
[85.11526489 167.25283813]
[87.89087677 152.51187134]
[89.45139313 137.59326172]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.69516754 62.78147125]
[95.58798981 47.80806732]
[96.48080444 32.83465958]
[82.13530731 21.74572182]
[77.35987854 4.41728115]
[83.88462067 -12.16218376]
[98.92134094 -21.42332649]
[99.36794281 -36.41667557]
[99.81455231 -51.41002655]
[100.26115417 -66.40337372]
[89.70290375 -77.85593414]
[90.36941528 -93.05496216]
[101.35274506 -103.05006409]
[101.79935455 -118.04341125]
[102.13433075 -133.03967285]
[102.35765839 -148.03800964]
[94.82668304 -161.95184326]
[102.75260925 -174.56251526]
[102.97593689 -189.56085205]
[94.56881714 -199.34262085]
[95.06359863 -211.83018494]
[103.65005493 -220.35070801]
[104.09665680 -235.34405518]
[104.54326630 -250.33740234]
[104.98986816 -265.33074951]
[105.43647766 -280.32409668]
[105.88307953 -295.31744385]
[103.09071350 -301.31030273]
[103.65874481 -306.96490479]
[106.57281494 -310.74871826]
[103.96010590 -316.82202148]
[104.69625092 -322.45721436]
[107.72167969 -326.15258789]
[109.05991364 -341.09277344]
[110.39814758 -356.03295898]
[111.73638153 -370.97314453]
[97.81612396 -376.89608765]
[86.40879822 -386.83230591]
[78.63197327 -399.80828857]
[75.24755859 -414.55279541]
[76.58711243 -429.62133789]
[82.51940155 -443.53762817]
[92.46324158 -454.93829346]
[105.44443512 -462.70642090]
[120.19122314 -466.08096313]
[135.25885010 -464.73132324]
[149.17117310 -458.78970337]
[160.56517029 -448.83822632]
[168.32460022 -435.85180664]
[171.68925476 -421.10278320]
[170.32949829 -406.03604126]
[164.37857056 -392.12771606]
[154.41946411 -380.74038696]
[141.42785645 -372.98968506]
[126.67656708 -369.63488770]
[125.33833313 -354.69470215]
[124.00009918 -339.75451660]
[122.66186523 -324.81433105]
[121.54621887 -309.85589600]
[120.87643433 -294.87084961]
[120.42982483 -279.87750244]
[119.98322296 -264.88415527]
[119.53661346 -249.89080811]
[119.09001160 -234.89744568]
[118.64340210 -219.90409851]
[127.78208923 -204.92239380]
[117.97427368 -189.33752441]
[117.75094604 -174.33918762]
[125.29790497 -161.49812317]
[117.35599518 -147.81468201]
[117.13266754 -132.81634521]
[120.17623138 -126.08147430]
[116.79270172 -117.59680939]
[116.34609985 -102.60345459]
[126.71504211 -91.97233582]
[126.47570038 -76.76058960]
[115.25450897 -65.95677185]
[114.80789948 -50.96342087]
[114.36129761 -35.97006989]
[113.91468811 -20.97672081]
[124.51383972 -15.05783367]
[131.63279724 -5.13546753]
[133.87071228 6.94314146]
[130.74253845 18.89697075]
[122.78254700 28.44197464]
[111.45420837 33.72747803]
[110.56139374 48.70088196]
[109.66857910 63.67428970]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[108.27007294 129.88027954]
[107.45011902 135.50386047]
[104.37000275 139.15379333]
[102.80947876 154.07238770]
[112.51028442 142.63148499]
[126.38191986 136.92379761]
[141.32542419 138.22444153]
[154.00238037 146.24284363]
[161.58073425 159.18766785]
[162.36743164 174.16702271]
[156.18676758 187.83447266]
[144.41947937 197.13668823]
[129.69442749 199.99549866]
[115.30122375 195.77227783]
[104.45534515 185.41047668]
[99.57978821 171.22492981]
[95.60768890 185.68945312]
[91.63559723 200.15397644]
[87.66349792 214.61849976]
[83.69139862 229.08302307]
[95.11495972 239.14601135]
[101.01251984 253.11404419]
[100.26367950 268.19580078]
[93.07046509 281.40255737]
[80.90665436 290.14047241]
[66.21611023 292.71990967]
[62.24401093 307.18441772]
[58.27191544 321.64895630]
[54.29981995 336.11346436]
[50.32772446 350.57800293]
[51.57439041 354.73730469]
[51.44561005 358.68038940]
[50.17825699 362.00140381]
[48.11666489 364.41314697]
[45.66465759 365.77175903]
[40.83866119 379.97421265]
[36.01266098 394.17666626]
[31.18666458 408.37911987]
[34.07260132 423.93487549]
[22.65190506 433.49609375]
[17.82590866 447.69854736]
[29.71538544 460.63970947]
[33.39406586 477.73294067]
[27.93671036 494.25024414]
[14.93241692 505.66958618]
[-1.97673857 508.91284180]
[-6.37773657 523.25268555]
[-10.77873516 537.59252930]
[-15.17973232 551.93237305]
[-1.88891590 558.98583984]
[9.82668209 568.42730713]
[19.54354858 579.91546631]
[26.91042709 593.03515625]
[31.66100883 607.31201172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 205]
[27 204]
[28 203]
[29 202]
[36 197]
[37 196]
[39 194]
[40 193]
[41 192]
[42 191]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 160]
[59 159]
[60 156]
[61 155]
[62 153]
[63 152]
[64 151]
[65 150]
[66 149]
[70 143]
[71 142]
[72 141]
[73 140]
[76 137]
[77 136]
[78 134]
[79 133]
[81 131]
[82 130]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[93 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
