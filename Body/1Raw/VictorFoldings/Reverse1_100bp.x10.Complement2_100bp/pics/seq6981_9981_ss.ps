%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[93.30589294 383.89431763]
[93.16699982 368.87313843]
[94.99001312 353.96234131]
[98.74373627 339.41708374]
[104.36393738 325.48623657]
[111.75444794 312.40820312]
[120.78880310 300.40670776]
[131.31242371 289.68719482]
[143.14523315 280.43301392]
[156.08474731 272.80255127]
[150.21578979 258.99838257]
[144.34681702 245.19419861]
[132.24662781 236.50888062]
[133.96759033 220.78155518]
[128.09863281 206.97738647]
[115.99843597 198.29206848]
[117.71939087 182.56474304]
[111.85043335 168.76057434]
[105.98146820 154.95639038]
[100.11251068 141.15222168]
[98.96311188 156.10810852]
[93.51233673 170.08270264]
[84.23174286 181.86703491]
[71.92419434 190.44165039]
[57.65440369 195.06477356]
[42.65686417 195.33644104]
[28.22900772 191.23315430]
[15.61898994 183.10987854]
[5.91770172 171.66938782]
[-0.03559747 157.90136719]
[-1.72588813 142.99691772]
[0.99305689 128.24539185]
[7.88602161 114.92296600]
[18.35669518 104.18215942]
[31.49926186 96.95215607]
[46.17675400 93.85842133]
[61.11942673 95.16860199]
[75.03458405 100.76934814]
[86.71842957 110.17613983]
[95.15866089 122.57202911]
[93.37619781 107.67830658]
[89.36759949 100.68519592]
[91.67977142 92.54979706]
[90.11924744 77.63118744]
[88.55872345 62.71258545]
[86.99819946 47.79397964]
[84.88357544 32.94378281]
[82.21778107 18.18256378]
[79.55198669 3.42134714]
[76.88619232 -11.33987045]
[74.22039795 -26.10108757]
[71.55460358 -40.86230469]
[62.13437653 -29.18928528]
[47.23447418 -27.45927238]
[35.39023590 -36.66329575]
[33.38657761 -51.52886963]
[42.37128830 -63.54032516]
[57.19751358 -65.81694794]
[69.37162018 -57.05539322]
[68.03338623 -71.99558258]
[66.69515228 -86.93576050]
[65.35691833 -101.87594604]
[64.01868439 -116.81613159]
[60.53395844 -122.43470001]
[60.42602921 -128.11671448]
[62.86981201 -132.22000122]
[61.97699738 -147.19340515]
[61.08417892 -162.16682434]
[60.19136429 -177.14022827]
[45.18799210 -177.59306335]
[30.28561401 -179.38899231]
[15.60421658 -182.51354980]
[1.26200914 -186.94155884]
[-12.62553215 -192.63739014]
[-25.94659042 -199.55517578]
[-38.59391022 -207.63920593]
[-50.46566010 -216.82440186]
[-61.46625519 -227.03680420]
[-71.50711823 -238.19418335]
[-80.50741577 -250.20671082]
[-88.39466858 -262.97769165]
[-95.10538483 -276.40423584]
[-100.58551788 -290.37829590]
[-104.79095459 -304.78735352]
[-107.68783569 -319.51535034]
[-109.25283051 -334.44375610]
[-109.47333527 -349.45233154]
[-108.34758759 -364.42025757]
[-105.88464355 -379.22702026]
[-102.10433197 -393.75338745]
[-97.03709412 -407.88241577]
[-90.72372437 -421.50033569]
[-83.21505737 -434.49749756]
[-74.57155609 -446.76925659]
[-64.86280823 -458.21682739]
[-54.16698456 -468.74798584]
[-42.57020187 -478.27798462]
[-30.16583633 -486.73007202]
[-17.05375862 -494.03622437]
[-3.33954525 -500.13757324]
[10.86638546 -504.98504639]
[25.44965172 -508.53955078]
[40.29283524 -510.77249146]
[55.27642822 -511.66592407]
[70.27978516 -511.21261597]
[85.18211365 -509.41622925]
[99.86341095 -506.29122925]
[114.20548248 -501.86279297]
[128.09284973 -496.16653442]
[141.41369629 -489.24835205]
[154.06077576 -481.16394043]
[165.93223572 -471.97836304]
[176.93252563 -461.76562500]
[186.97305298 -450.60794067]
[195.97297668 -438.59515381]
[203.85984802 -425.82394409]
[210.57014465 -412.39715576]
[216.04985046 -398.42294312]
[220.25485229 -384.01376343]
[223.15127563 -369.28567505]
[224.71582031 -354.35723877]
[224.93586731 -339.34863281]
[223.80966187 -324.38073730]
[221.34626770 -309.57406616]
[217.56550598 -295.04779053]
[212.49784851 -280.91891479]
[206.18405151 -267.30120850]
[198.67500305 -254.30427551]
[190.03111267 -242.03277588]
[180.32202148 -230.58552551]
[169.62586975 -220.05467224]
[158.02880859 -210.52502441]
[145.62417603 -202.07331848]
[132.51187134 -194.76757812]
[118.79747772 -188.66662598]
[104.59140015 -183.81961060]
[90.00802612 -180.26554871]
[75.16477203 -178.03303528]
[76.05758667 -163.05963135]
[76.95040131 -148.08622742]
[77.84321594 -133.11282349]
[78.95886993 -118.15436554]
[80.29710388 -103.21417999]
[81.63533783 -88.27400208]
[82.97357178 -73.33381653]
[84.31180573 -58.39362717]
[86.31581879 -43.52809906]
[88.98161316 -28.76688194]
[91.64740753 -14.00566578]
[94.31320190 0.75555158]
[96.97899628 15.51676846]
[99.64479828 30.27798653]
[110.21163177 19.63176918]
[125.13925934 21.10352135]
[133.42358398 33.60832214]
[128.95770264 47.92809677]
[115.03370667 53.50683975]
[101.91680908 46.23345566]
[103.47732544 61.15206146]
[105.03784943 76.07066345]
[106.59837341 90.98927307]
[108.26991272 105.89584351]
[110.05238342 120.78955841]
[113.91668701 135.28324890]
[119.78564453 149.08743286]
[125.65460968 162.89160156]
[131.52357483 176.69578552]
[144.04354858 186.36845398]
[141.90280151 201.10841370]
[147.77175903 214.91259766]
[160.29174805 224.58526611]
[158.15100098 239.32522583]
[164.01995850 253.12940979]
[169.88891602 266.93359375]
[184.36170959 262.90948486]
[199.23594666 260.80892944]
[214.25709534 260.66790771]
[229.16815186 262.48876953]
[243.71394348 266.24041748]
[257.64559937 271.85864258]
[270.72470093 279.24728394]
[282.72744751 288.27993774]
[293.44848633 298.80200195]
[302.70434570 310.63348389]
[310.33666992 323.57192993]
[316.21481323 337.39590454]
[320.23825073 351.86886597]
[322.33807373 366.74322510]
[322.47839355 381.76437378]
[320.65679932 396.67532349]
[316.90447998 411.22094727]
[311.28558350 425.15234375]
[303.89633179 438.23107910]
[294.86309814 450.23342896]
[284.34051514 460.95394897]
[272.50857544 470.20925903]
[259.56979370 477.84094238]
[245.74554443 483.71844482]
[231.27236938 487.74118042]
[216.39794922 489.84030151]
[201.37677002 489.97991943]
[186.46589661 488.15759277]
[171.92045593 484.40457153]
[157.98934937 478.78503418]
[144.91094971 471.39514160]
[132.90904236 462.36135864]
[122.18901062 451.83825684]
[112.93427277 440.00588989]
[105.30319214 427.06674194]
[99.42635345 413.24218750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 174]
[11 173]
[12 172]
[14 170]
[15 169]
[17 167]
[18 166]
[19 165]
[20 164]
[40 163]
[41 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[66 141]
[67 140]
[68 139]
[69 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
