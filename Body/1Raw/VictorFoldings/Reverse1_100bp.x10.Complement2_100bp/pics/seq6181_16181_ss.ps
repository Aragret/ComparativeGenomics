%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-6.88305473 547.68719482]
[-12.02598667 561.79333496]
[-18.63919449 575.27282715]
[-26.64774323 587.97302246]
[-35.96089172 599.75000000]
[-46.47311783 610.47033691]
[-58.06530380 620.01251221]
[-70.60610199 628.26849365]
[-83.95342255 635.14459229]
[-97.95602417 640.56298828]
[-112.45524597 644.46234131]
[-127.28680420 646.79833984]
[-142.28263855 647.54461670]
[-157.27284241 646.69268799]
[-172.08757019 644.25213623]
[-186.55894470 640.25073242]
[-200.52301025 634.73376465]
[-213.82153320 627.76373291]
[-226.30381775 619.41961670]
[-237.82846069 609.79595947]
[-248.26486206 599.00177002]
[-257.49478149 587.15948486]
[-265.41360474 574.40313721]
[-271.93164062 560.87731934]
[-276.97500610 546.73529053]
[-280.48657227 532.13732910]
[-282.42657471 517.24877930]
[-282.77297974 502.23840332]
[-281.52191162 487.27621460]
[-278.68750000 472.53176880]
[-274.30187988 458.17214966]
[-268.41476440 444.36007690]
[-261.09283447 431.25198364]
[-252.41908264 418.99645996]
[-242.49174500 407.73236084]
[-231.42333984 397.58731079]
[-219.33926392 388.67623901]
[-206.37644958 381.10012817]
[-192.68176270 374.94482422]
[-178.41038513 370.28005981]
[-163.72401428 367.15872192]
[-148.78907776 365.61614990]
[-133.77476501 365.66983032]
[-118.85124207 367.31915283]
[-104.18756866 370.54544067]
[-89.94991302 375.31213379]
[-76.29959869 381.56518555]
[-68.63899994 368.66888428]
[-60.97840118 355.77255249]
[-53.31780624 342.87622070]
[-45.65720749 329.97988892]
[-37.99660873 317.08355713]
[-38.14889145 302.18972778]
[-24.44887161 294.27645874]
[-16.78827477 281.38012695]
[-9.12767696 268.48379517]
[-8.41429806 261.12765503]
[-1.25580156 255.45370483]
[6.59595394 242.67286682]
[14.44770908 229.89202881]
[14.51718998 214.99757385]
[28.33350945 207.28915405]
[36.18526459 194.50830078]
[28.69371033 178.51617432]
[32.33370209 161.07481384]
[45.83256531 149.20634460]
[63.90998840 147.80471802]
[71.37773132 134.79576111]
[78.84546661 121.78681183]
[86.31320953 108.77786255]
[83.95391083 97.37281799]
[89.82715607 87.31566620]
[100.91963196 83.76628876]
[101.31529236 67.95003510]
[114.46737671 60.95918274]
[122.12796783 48.06285858]
[129.78857422 35.16653061]
[137.44917297 22.27020264]
[137.84481812 6.45394516]
[150.99690247 -0.53690273]
[158.65750122 -13.43322945]
[166.31809998 -26.32955742]
[173.97869873 -39.22588348]
[179.43405151 -53.19868088]
[182.53816223 -67.87398529]
[185.64227295 -82.54928589]
[175.42111206 -94.07465363]
[173.96336365 -109.23144531]
[181.61944580 -122.18707275]
[195.27282715 -128.07969666]
[198.37693787 -142.75498962]
[201.48104858 -157.43029785]
[203.48506165 -172.29582214]
[204.37788391 -187.26922607]
[205.27070618 -202.24264526]
[206.16351318 -217.21604919]
[207.05633545 -232.18945312]
[192.83703613 -237.28730774]
[180.63076782 -246.18583679]
[171.42703247 -258.16363525]
[165.97193909 -272.24975586]
[164.70770264 -287.30227661]
[167.73681641 -302.10095215]
[174.81372070 -315.44616699]
[185.36473083 -326.25601196]
[198.53450012 -333.65423584]
[213.25544739 -337.04107666]
[228.33418274 -336.14196777]
[242.54835510 -331.02981567]
[254.74568176 -322.11904907]
[263.93737793 -310.13198853]
[269.37832642 -296.04040527]
[270.62741089 -280.98663330]
[267.58343506 -266.19097900]
[260.49313354 -252.85292053]
[249.93127441 -242.05366516]
[236.75407410 -234.66868591]
[222.02973938 -231.29663086]
[221.13691711 -216.32322693]
[220.24411011 -201.34982300]
[219.35128784 -186.37641907]
[218.45848083 -171.40301514]
[228.01303101 -182.96633911]
[242.03436279 -188.29570007]
[256.85733032 -185.99801636]
[268.60726929 -176.67388916]
[274.21273804 -162.76063538]
[272.20849609 -147.89514160]
[263.11846924 -135.96319580]
[249.31872559 -130.08381653]
[234.41650391 -131.79382324]
[222.30722046 -140.64624023]
[216.15635681 -154.32618713]
[213.05224609 -139.65087891]
[209.94813538 -124.97558594]
[220.04608154 -114.05909729]
[221.80039978 -99.11298370]
[214.33018494 -85.84462738]
[200.31758118 -79.44517517]
[197.21347046 -64.76987457]
[194.10935974 -50.09457016]
[203.45886230 -61.82430267]
[215.49403381 -70.77722168]
[229.41661072 -76.35951233]
[244.30314636 -78.20092010]
[259.16629028 -76.17931366]
[273.02023315 -70.42877960]
[284.94604492 -61.33071899]
[294.15277100 -49.48858643]
[300.02975464 -35.68782425]
[302.18719482 -20.84378815]
[300.48199463 -5.94102669]
[295.02725220 8.03201103]
[286.18478394 20.14854431]
[274.54104614 29.60492897]
[260.86831665 35.77395248]
[246.07350159 38.24644852]
[231.13784790 36.85842896]
[217.05201721 31.70194817]
[204.75025940 23.11902237]
[195.04849243 11.67892456]
[188.59022522 -1.85956395]
[185.80378723 -16.59848404]
[186.87501526 -31.56528664]
[179.21443176 -18.66895866]
[171.55383301 -5.77263212]
[163.89323425 7.12369490]
[164.04551697 22.01752090]
[150.34548950 29.93080139]
[142.68489075 42.82712936]
[135.02429199 55.72345352]
[127.36370087 68.61978149]
[127.51598358 83.51361084]
[113.81596375 91.42688751]
[114.04082489 108.19965363]
[99.32216644 116.24560547]
[91.85442352 129.25456238]
[84.38668060 142.26350403]
[76.91893768 155.27246094]
[83.49092865 165.90621948]
[84.90995789 178.25347900]
[80.96768188 189.96406555]
[72.47041321 198.83522034]
[61.07501602 203.22587585]
[48.96610641 202.36006165]
[41.11435318 215.14089966]
[40.48326111 230.94952393]
[27.22855186 237.74377441]
[19.37679672 250.52462769]
[11.52504063 263.30545044]
[3.76864958 276.14440918]
[-3.89194775 289.04074097]
[-11.55254555 301.93704224]
[-11.94819927 317.75332642]
[-25.10028267 324.74417114]
[-32.76087952 337.64050293]
[-40.42147827 350.53680420]
[-48.08207703 363.43313599]
[-55.74267197 376.32946777]
[-63.40327072 389.22579956]
[-51.38230515 398.22183228]
[-40.38567734 408.44467163]
[-30.53799057 419.77847290]
[-21.95082092 432.09481812]
[-14.72147179 445.25418091]
[-8.93185520 459.10742188]
[-4.64757347 473.49758911]
[-1.91716981 488.26162720]
[-0.77158207 503.23226929]
[-1.22379053 518.23986816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[52 195]
[54 193]
[55 192]
[56 191]
[58 190]
[59 189]
[60 188]
[62 186]
[63 185]
[67 179]
[68 178]
[69 177]
[70 176]
[73 174]
[75 172]
[76 171]
[77 170]
[78 169]
[80 167]
[81 166]
[82 165]
[83 164]
[84 141]
[85 140]
[86 139]
[90 135]
[91 134]
[92 133]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
