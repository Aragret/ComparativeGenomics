%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[162.09826660 419.87319946]
[170.77938843 407.61007690]
[181.08277893 396.67449951]
[192.80789185 387.27938843]
[185.14729309 374.38308716]
[171.99520874 367.39221191]
[171.59954834 351.57595825]
[163.93894958 338.67962646]
[156.27835083 325.78332520]
[148.61775208 312.88699341]
[149.23912048 327.87411499]
[145.02366638 342.26959229]
[136.41625977 354.55426025]
[124.32527924 363.43164062]
[110.02669525 367.96490479]
[95.02948761 367.67568970]
[80.91633606 362.59445190]
[69.17663574 353.25744629]
[61.04931259 340.65005493]
[57.39205551 326.10272217]
[58.59082794 311.15069580]
[64.51911926 297.37188721]
[74.55130005 286.22042847]
[87.62865448 278.87313843]
[102.37109375 276.10537720]
[117.22281647 278.20925903]
[130.61648560 284.96273804]
[141.13873291 295.65328979]
[136.95172119 281.24951172]
[132.76470947 266.84573364]
[121.78234100 256.78408813]
[125.36000061 241.37269592]
[121.17298889 226.96891785]
[118.78409576 225.50218201]
[116.83224487 223.00080872]
[115.71444702 219.62649536]
[115.76187134 215.68159485]
[117.19301605 211.58210754]
[113.87075043 196.95465088]
[110.54849243 182.32717896]
[107.22623444 167.69972229]
[103.90397644 153.07226562]
[100.58171844 138.44480896]
[96.03482056 132.61834717]
[97.32060242 123.57486725]
[94.21649170 108.89956665]
[90.24439240 94.43504333]
[85.41839600 80.23258209]
[80.59239960 66.03012848]
[69.38877106 59.63939285]
[65.66156769 47.71078110]
[70.88830566 36.80171204]
[66.27429962 22.52898026]
[54.66719437 11.77789879]
[58.11443710 -2.71229649]
[53.50043106 -16.98502922]
[48.88642120 -31.25776291]
[35.50162888 -34.54989624]
[25.57015610 -43.95119095]
[21.61257935 -56.92837143]
[24.56032372 -70.06057739]
[33.53908157 -79.94107056]
[29.13808250 -94.28091431]
[24.73708344 -108.62076569]
[20.33608627 -122.96060944]
[15.93508816 -137.30046082]
[10.42555237 -144.58625793]
[11.57703018 -151.88665771]
[7.39001846 -166.29043579]
[-7.43953562 -170.03631592]
[-18.33113098 -180.63206482]
[-22.42952347 -195.16029358]
[-18.73040962 -209.69207764]
[-8.32428360 -220.34938049]
[-12.51129436 -234.75315857]
[-16.69830513 -249.15693665]
[-19.93772316 -252.04833984]
[-21.89200783 -255.47547913]
[-22.55054283 -258.96856689]
[-22.05637360 -262.10263062]
[-20.67828369 -264.54376221]
[-24.00054359 -279.17120361]
[-27.32280350 -293.79867554]
[-30.64506340 -308.42614746]
[-45.70503235 -308.31951904]
[-60.43573761 -311.45324707]
[-74.14819336 -317.68081665]
[-86.20104980 -326.71093750]
[-96.03056335 -338.12121582]
[-103.17699432 -351.37802124]
[-107.30609131 -365.86126709]
[-108.22473907 -380.89358521]
[-105.88995361 -395.77185059]
[-100.41094208 -409.80020142]
[-92.04397583 -422.32247925]
[-81.18038177 -432.75305176]
[-68.32827759 -440.60400391]
[-54.08877945 -445.50814819]
[-39.12789154 -447.23611450]
[-24.14536285 -445.70709229]
[-9.84195328 -440.99261475]
[3.11334062 -433.31311035]
[14.11457634 -423.02786255]
[22.64720726 -410.61782837]
[28.31214523 -396.66354370]
[30.84443092 -381.81759644]
[30.12562561 -366.77441406]
[26.18934822 -352.23757935]
[19.21970749 -338.88699341]
[9.54268360 -327.34710693]
[-2.38911057 -318.15762329]
[-16.01760292 -311.74838257]
[-12.69534302 -297.12094116]
[-9.37308407 -282.49346924]
[-6.05082417 -267.86599731]
[-2.29452372 -253.34394836]
[1.89248753 -238.94017029]
[6.07949877 -224.53639221]
[20.57716942 -221.11833191]
[31.49001312 -210.83407593]
[35.81855011 -196.37274170]
[32.30435944 -181.58940125]
[21.79380035 -170.47744751]
[25.98081207 -156.07366943]
[30.27493477 -141.70146179]
[34.67593384 -127.36161041]
[39.07693100 -113.02175903]
[43.47792816 -98.68191528]
[47.87892914 -84.34207153]
[63.56876373 -79.51437378]
[73.38774872 -66.15214539]
[73.30657959 -49.40417099]
[63.15915298 -35.87177277]
[67.77316284 -21.59903908]
[72.38716888 -7.32630587]
[83.66425323 2.40389323]
[80.54702759 17.91497040]
[85.16104126 32.18770218]
[98.79985809 43.23077774]
[94.79485321 61.20413208]
[99.62084961 75.40658569]
[104.44684601 89.60904694]
[110.16419220 75.74138641]
[122.88002777 67.78477478]
[137.85165405 68.70684052]
[149.49504089 78.16367340]
[153.46748352 92.62809753]
[148.28735352 106.70525360]
[135.88671875 115.14470673]
[120.89071655 114.79874420]
[108.89179230 105.79545593]
[111.99590302 120.47075653]
[115.20917511 135.12254333]
[118.53143311 149.75000000]
[121.85369110 164.37747192]
[125.17595673 179.00492859]
[128.49821472 193.63238525]
[131.82048035 208.25984192]
[135.57676697 222.78190613]
[139.76377869 237.18568420]
[151.04563904 248.27758789]
[147.16850281 262.65872192]
[151.35551453 277.06250000]
[155.54252625 291.46627808]
[161.51408386 305.22637939]
[169.17468262 318.12271118]
[176.83528137 331.01904297]
[184.49588013 343.91537476]
[198.19589233 351.82864380]
[198.04360962 366.72247314]
[205.70420837 379.61880493]
[219.56346130 373.81646729]
[234.09538269 369.99948120]
[249.01712036 368.24218750]
[264.03820801 368.57876587]
[278.86624146 371.00268555]
[293.21261597 375.46676636]
[306.79803467 381.88409424]
[319.35812378 390.12973022]
[330.64831543 400.04324341]
[340.44888306 411.43161011]
[348.56909180 424.07315063]
[354.85079956 437.72180176]
[359.17178345 452.11190796]
[361.44793701 466.96334839]
[361.63491821 481.98706055]
[359.72912598 496.89053345]
[355.76763916 511.38372803]
[349.82757568 525.18450928]
[342.02456665 538.02429199]
[332.51046753 549.65301514]
[321.47052002 559.84448242]
[309.11956787 568.40020752]
[295.69805908 575.15368652]
[281.46725464 579.97338867]
[266.70413208 582.76562500]
[251.69607544 583.47601318]
[236.73522949 582.09063721]
[222.11280823 578.63653564]
[208.11343384 573.18096924]
[195.00961304 565.83001709]
[183.05639648 556.72692871]
[172.48649597 546.04876709]
[163.50561523 534.00341797]
[156.28860474 520.82537842]
[150.97592163 506.77111816]
[147.67100525 492.11425781]
[146.43815613 477.14007568]
[147.30139160 462.14004517]
[150.24389648 447.40615845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[7 168]
[8 167]
[9 166]
[10 165]
[28 164]
[29 163]
[30 162]
[32 160]
[33 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[45 152]
[46 151]
[47 142]
[48 141]
[49 140]
[52 138]
[53 137]
[55 135]
[56 134]
[57 133]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[68 124]
[69 123]
[74 118]
[75 117]
[76 116]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
