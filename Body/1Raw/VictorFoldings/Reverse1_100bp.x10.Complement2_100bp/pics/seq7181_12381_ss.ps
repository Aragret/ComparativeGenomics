%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[109.24371338 570.98077393]
[97.03100586 579.72070312]
[83.87030029 586.95477295]
[69.94635773 592.58154297]
[55.45464325 596.52191162]
[40.59859848 598.72058105]
[25.58677864 599.14672852]
[10.62992573 597.79437256]
[-4.06198788 594.68249512]
[-18.28271294 589.85467529]
[-31.83260918 583.37884521]
[-44.52146149 575.34582520]
[-56.17113113 565.86840820]
[-66.61808777 555.07965088]
[-75.71565247 543.13098145]
[-83.33613586 530.19018555]
[-89.37253571 516.43884277]
[-93.74011993 502.07012939]
[-96.37757111 487.28567505]
[-97.24786377 472.29302979]
[-96.33879089 457.30270386]
[-93.66309357 442.52511597]
[-89.25835419 428.16772461]
[-83.18640137 414.43209839]
[-75.53247070 401.51104736]
[-66.40402222 389.58593750]
[-55.92919540 378.82424927]
[-44.25504303 369.37698364]
[-31.54545403 361.37683105]
[-17.97885132 354.93603516]
[-3.74568486 350.14508057]
[10.95423031 347.07116699]
[25.91453171 345.75750732]
[40.92519760 346.22247314]
[55.77550888 348.45959473]
[59.74760437 333.99508667]
[63.71969986 319.53054810]
[67.69179535 305.06604004]
[63.60096741 290.74423218]
[74.71643066 279.48556519]
[78.68852997 265.02105713]
[82.66062927 250.55653381]
[86.63272095 236.09201050]
[90.60482025 221.62748718]
[92.60883331 206.76196289]
[84.87152863 194.03468323]
[92.60883331 180.23451233]
[92.60883331 165.23451233]
[92.60883331 150.23451233]
[92.60883331 135.23451233]
[92.60883331 120.23451233]
[92.60883331 105.23451233]
[90.29588318 102.14863586]
[89.35436249 98.05822754]
[90.20242310 93.59865570]
[92.95877075 89.56846619]
[93.62855530 74.58342743]
[94.29833984 59.59838867]
[94.96812439 44.61334991]
[95.63790894 29.62831306]
[94.52226257 14.66985893]
[91.63698578 -0.05003254]
[88.75171661 -14.76992416]
[85.86643982 -29.48981476]
[75.61705780 -37.32007599]
[73.51695251 -49.63970566]
[80.15428925 -59.75268173]
[77.48849487 -74.51390076]
[74.82270050 -89.27511597]
[60.82261276 -91.89211273]
[48.58238602 -99.11555481]
[39.56196213 -110.06018829]
[34.82914734 -123.39837646]
[34.93323517 -137.52110291]
[39.84133530 -150.73208618]
[48.94476318 -161.45150757]
[61.13447571 -168.40495300]
[58.68874741 -183.20422363]
[56.24301910 -198.00349426]
[53.79729080 -212.80276489]
[51.35156631 -227.60203552]
[48.90583801 -242.40130615]
[46.46010971 -257.20056152]
[42.56715012 -262.54440308]
[42.03690720 -268.20263672]
[44.16873550 -272.47631836]
[42.16472244 -287.34185791]
[40.16070938 -302.20739746]
[38.15669632 -317.07290649]
[36.15267944 -331.93844604]
[21.20054626 -334.02081299]
[7.36515236 -340.06103516]
[-4.32682133 -349.61093140]
[-13.00775337 -361.96179199]
[-18.03346062 -376.19714355]
[-19.03100204 -391.26058960]
[-15.92635441 -406.03433228]
[-8.94990253 -419.42208862]
[1.38065410 -430.43035889]
[14.29872036 -438.24227905]
[28.84568977 -442.27816772]
[43.94208145 -442.23849487]
[58.46763992 -438.12622070]
[71.34447479 -430.24652100]
[81.61703491 -419.18411255]
[88.52304077 -405.75988770]
[91.55000305 -390.97003174]
[90.47332001 -375.91201782]
[85.37287140 -361.70330811]
[76.62715149 -349.39822388]
[64.88515472 -339.90991211]
[51.01820755 -333.94244385]
[53.02222443 -319.07693481]
[55.02623749 -304.21139526]
[57.03025055 -289.34588623]
[59.03426361 -274.48034668]
[61.25938034 -259.64630127]
[63.70510864 -244.84703064]
[66.15083313 -230.04776001]
[68.59656525 -215.24848938]
[71.04228973 -200.44921875]
[73.48802185 -185.64994812]
[75.93374634 -170.85067749]
[91.42075348 -167.49230957]
[104.46491241 -158.42594910]
[113.05196381 -145.01559448]
[115.84209442 -129.29876709]
[112.37895203 -113.67691040]
[103.16394043 -100.54853058]
[89.58391571 -91.94091034]
[92.24971008 -77.17969513]
[94.91550446 -62.41847610]
[106.95669556 -49.65224075]
[100.58633423 -32.37508774]
[103.47161102 -17.65519714]
[106.35688019 -2.93530512]
[109.24214935 11.78458595]
[113.83959961 -2.49349141]
[122.98843384 -14.38041019]
[135.61386108 -22.47970772]
[150.23265076 -25.83988571]
[165.12741089 -24.06619453]
[178.54832458 -17.36700630]
[188.91871643 -6.52933216]
[195.02026367 7.17362595]
[196.13618469 22.13205910]
[192.13536072 36.58866501]
[183.48782349 48.84509659]
[171.20947266 57.46148300]
[156.74275208 61.42557526]
[141.78720093 60.27167892]
[128.09979248 54.13534927]
[117.28848267 43.73748016]
[110.62294769 30.29809761]
[109.95316315 45.28313446]
[109.28337860 60.26817322]
[108.61359406 75.25321198]
[107.94380951 90.23825073]
[107.60883331 105.23451233]
[107.60883331 120.23451233]
[107.60883331 135.23451233]
[107.60883331 150.23451233]
[107.60883331 165.23451233]
[107.60883331 180.23451233]
[115.34613037 194.03468323]
[107.60883331 206.76196289]
[114.61344910 193.49789429]
[125.33016968 183.00256348]
[138.73753357 176.27632141]
[153.55764771 173.96025085]
[168.37796021 176.27511597]
[181.78587341 183.00028992]
[192.50343323 193.49475098]
[199.50912476 206.75823975]
[202.13520813 221.52658081]
[200.13136292 236.39213562]
[193.68859863 249.93800354]
[183.42100525 260.87310791]
[170.30720520 268.15515137]
[155.59713745 271.09008789]
[140.69285583 269.39816284]
[127.01496124 263.24063110]
[115.86713409 253.20440674]
[108.31191254 240.24606323]
[105.06934357 225.59957886]
[101.09724426 240.06410217]
[97.12515259 254.52862549]
[93.15305328 268.99316406]
[89.18095398 283.45767212]
[92.98767090 298.81408691]
[82.15631866 309.03814697]
[78.18422699 323.50265503]
[74.21212769 337.96719360]
[70.24002838 352.43170166]
[84.15016937 358.09246826]
[97.29314423 365.35873413]
[109.48443604 374.12850952]
[120.55290222 384.27865601]
[130.34315491 395.66668701]
[138.71777344 408.13272095]
[145.55917358 421.50177002]
[150.77130127 435.58618164]
[154.28102112 450.18817139]
[156.03903198 465.10278320]
[156.02067566 480.12063599]
[154.22618103 495.03091431]
[150.68077087 509.62426758]
[145.43420410 523.69586182]
[138.56011963 537.04815674]
[130.15504456 549.49365234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 194]
[36 193]
[37 192]
[38 191]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 166]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 137]
[62 136]
[63 135]
[64 134]
[67 132]
[68 131]
[69 130]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
