%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[123.23995209 571.27026367]
[115.08879089 558.65777588]
[108.45700073 545.18420410]
[103.43426514 531.03186035]
[100.08851624 516.39215088]
[98.46499634 501.46295166]
[98.58566284 486.44622803]
[100.44889069 471.54504395]
[104.02947235 456.96093750]
[109.27899170 442.89114380]
[116.12645721 429.52593994]
[124.47924805 417.04608154]
[134.22442627 405.62030029]
[145.23017883 395.40316772]
[157.34767151 386.53283691]
[170.41304016 379.12927246]
[184.24957275 373.29257202]
[180.06256104 358.88879395]
[175.87554932 344.48501587]
[171.68853760 330.08123779]
[160.70616150 320.01959229]
[164.28382874 304.60821533]
[153.30145264 294.54656982]
[156.87910461 279.13516235]
[152.69209290 264.73138428]
[148.50508118 250.32760620]
[144.31806946 235.92382812]
[140.13105774 221.52003479]
[135.94404602 207.11625671]
[131.75703430 192.71247864]
[126.61508179 178.62133789]
[120.54124451 164.90606689]
[114.46741486 151.19081116]
[108.39357758 137.47554016]
[102.31974792 123.76026917]
[87.96652222 120.61861420]
[78.17147827 109.66680908]
[76.64487457 95.05330658]
[83.96498871 82.31356049]
[77.89115143 68.59829712]
[70.52046204 55.53411102]
[61.92189789 43.24327469]
[53.32333755 30.95243645]
[49.32590103 29.25700760]
[46.37289810 26.64084435]
[44.62553406 23.54534531]
[44.08509064 20.41892052]
[44.60452271 17.66422653]
[36.75276947 4.88338470]
[28.90101242 -7.89745808]
[21.04925728 -20.67830086]
[7.23293734 -28.38673019]
[7.16345644 -43.28117371]
[-0.68829894 -56.06201553]
[-14.15800858 -49.43620300]
[-28.18898964 -44.10084534]
[-42.65793228 -40.10282516]
[-57.43768311 -37.47728348]
[-72.39835358 -36.24728775]
[-87.40846252 -36.42365646]
[-102.33609772 -38.00483322]
[-117.05007172 -40.97692108]
[-131.42108154 -45.31380844]
[-145.32283020 -50.97737122]
[-158.63313293 -57.91784668]
[-171.23503113 -66.07423401]
[-183.01777649 -75.37485504]
[-193.87780762 -85.73796844]
[-203.71968079 -97.07250977]
[-212.45692444 -109.27886963]
[-220.01274109 -122.24976349]
[-226.32072449 -135.87121582]
[-231.32543945 -150.02349854]
[-234.98292542 -164.58224487]
[-237.26100159 -179.41952515]
[-238.13967896 -194.40493774]
[-237.61122131 -209.40676880]
[-235.68026733 -224.29321289]
[-232.36380005 -238.93341064]
[-227.69096375 -253.19871521]
[-221.70281982 -266.96377563]
[-214.45199585 -280.10760498]
[-206.00221252 -292.51467896]
[-196.42771912 -304.07595825]
[-185.81268311 -314.68988037]
[-174.25036621 -324.26315308]
[-161.84239197 -332.71163940]
[-148.69779968 -339.96105957]
[-134.93211365 -345.94775391]
[-120.66631317 -350.61907959]
[-106.02576447 -353.93399048]
[-91.13912201 -355.86337280]
[-76.13722992 -356.39022827]
[-61.15191269 -355.50997925]
[-46.31487656 -353.23031616]
[-31.75650978 -349.57128906]
[-17.60475349 -344.56506348]
[-3.98397493 -338.25564575]
[8.98612118 -330.69845581]
[21.19155121 -321.95993042]
[32.52505112 -312.11685181]
[42.88701630 -301.25570679]
[52.18638992 -289.47198486]
[60.34144211 -276.86923218]
[67.28050232 -263.55819702]
[72.94259644 -249.65583801]
[77.27796173 -235.28437805]
[80.24848938 -220.57008362]
[81.82808685 -205.64227295]
[82.00286102 -190.63215637]
[80.77128601 -175.67161560]
[78.14418030 -160.89213562]
[74.14463043 -146.42362976]
[68.80777740 -132.39320374]
[62.18054199 -118.92420197]
[54.32115173 -106.13496399]
[45.29868317 -94.13790131]
[35.19242477 -83.03844452]
[24.09119034 -72.93413544]
[12.09254360 -63.91377258]
[19.94429970 -51.13292694]
[33.19900894 -44.33866882]
[33.83010101 -28.53005600]
[41.68185425 -15.74921322]
[49.53361130 -2.96837091]
[57.38536453 9.81247139]
[65.61417389 22.35387230]
[74.21273804 34.64471054]
[82.81130219 46.93554688]
[81.91916656 31.96210098]
[87.11806488 17.89186859]
[97.53188324 7.09592867]
[111.40572357 1.39358890]
[126.40158844 1.74579322]
[139.99241638 8.09318924]
[149.88790894 19.36612892]
[154.42050171 33.66492462]
[152.82638550 48.57997513]
[145.37419128 61.59783554]
[133.31973267 70.52477264]
[118.69441223 73.85643005]
[103.96284485 71.03136444]
[91.60642242 62.52446365]
[97.68025208 76.23973083]
[112.03347778 79.38138580]
[121.82852173 90.33319092]
[123.35512543 104.94669342]
[116.03501129 117.68643951]
[122.10884857 131.40170288]
[128.18267822 145.11697388]
[134.25651550 158.83222961]
[140.33035278 172.54750061]
[144.08847046 158.02590942]
[155.02841187 147.76347351]
[169.76031494 144.94010925]
[183.71931458 150.43066406]
[192.58007812 162.53382874]
[193.59701538 177.49931335]
[186.45498657 190.68991089]
[173.36705017 198.01834106]
[158.38864136 197.21383667]
[146.16082764 188.52546692]
[150.34783936 202.92924500]
[154.53485107 217.33302307]
[158.72186279 231.73681641]
[162.90887451 246.14059448]
[167.09588623 260.54437256]
[171.28289795 274.94815063]
[182.56474304 286.04006958]
[178.68760681 300.42120361]
[189.96946716 311.51309204]
[186.09231567 325.89422607]
[190.27932739 340.29800415]
[194.46633911 354.70178223]
[198.65335083 369.10556030]
[213.46263123 366.61523438]
[228.46089172 365.86105347]
[243.44528198 366.85317993]
[258.21319580 369.57821655]
[272.56484985 373.99932861]
[286.30621338 380.05667114]
[299.25140381 387.66839600]
[311.22540283 396.73150635]
[322.06622314 407.12347412]
[331.62728882 418.70373535]
[339.77929688 431.31570435]
[346.41198730 444.78875732]
[351.43566895 458.94076538]
[354.78240967 473.58032227]
[356.40692139 488.50939941]
[356.28726196 503.52612305]
[354.42501831 518.42742920]
[350.84539795 533.01177979]
[345.59683228 547.08190918]
[338.75024414 560.44757080]
[330.39828491 572.92797852]
[320.65390015 584.35443115]
[309.64880371 594.57226562]
[297.53192139 603.44342041]
[284.46704102 610.84783936]
[270.63088989 616.68548584]
[256.21060181 620.87725830]
[241.40113831 623.36663818]
[226.40283203 624.11981201]
[211.41850281 623.12670898]
[196.65078735 620.40069580]
[182.29942322 615.97863770]
[168.55847168 609.92034912]
[155.61376953 602.30773926]
[143.64038086 593.24383545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 175]
[18 174]
[19 173]
[20 172]
[22 170]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[39 144]
[40 143]
[41 129]
[42 128]
[43 127]
[48 126]
[49 125]
[50 124]
[51 123]
[53 121]
[54 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
