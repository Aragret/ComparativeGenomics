%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[65.32509613 523.48712158]
[62.87937164 508.68783569]
[60.43364334 493.88854980]
[57.98791504 479.08929443]
[55.54219055 464.29000854]
[53.09646225 449.49075317]
[38.66096878 434.74011230]
[46.53009796 414.80798340]
[43.42598724 400.13265991]
[40.32188034 385.45736694]
[37.21776962 370.78207397]
[34.11365891 356.10678101]
[31.00954819 341.43145752]
[26.22897530 355.64926147]
[16.42943573 367.00573730]
[3.06463027 373.81616211]
[-11.88284969 375.07028198]
[-26.19563675 370.58206177]
[-37.75051117 361.01727295]
[-44.83337784 347.79483032]
[-46.39353180 332.87619019]
[-42.19954300 318.47445679]
[-32.87355423 306.72601318]
[-19.79902458 299.37368774]
[-4.91548395 297.50814819]
[9.56918335 301.40612793]
[21.50626373 310.48944092]
[29.12432861 323.40875244]
[29.12432861 308.40875244]
[29.12432861 293.40875244]
[29.12432861 278.40875244]
[29.12432861 263.40875244]
[29.12432861 248.40875244]
[22.49683571 261.86520386]
[13.16631317 273.61004639]
[1.55723870 283.10897827]
[-11.80225277 289.92980957]
[-26.30439377 293.76229858]
[-41.28943253 294.43206787]
[-56.07565308 291.90863037]
[-69.99037933 286.30679321]
[-82.40058136 277.88143921]
[-92.74168396 267.01580811]
[-100.54322815 254.20425415]
[-105.45029449 240.02961731]
[-107.23966217 225.13671875]
[-105.82990265 210.20310974]
[-101.28517151 195.90817261]
[-93.81221008 182.90222168]
[-83.75099182 171.77693176]
[-71.55923462 163.03845215]
[-57.79158401 157.08430481]
[-43.07437515 154.18537903]
[-28.07714272 154.47355652]
[-13.48216152 157.93571472]
[0.04659508 164.41435242]
[11.89365864 173.61473083]
[21.52006531 185.11831665]
[28.48788071 198.40173340]
[32.48011398 212.86071777]
[33.31492615 227.84178162]
[39.18388748 214.03761292]
[45.05284882 200.23342896]
[50.92180634 186.42926025]
[56.79076767 172.62507629]
[55.86845016 169.97792053]
[55.93913269 166.80590820]
[57.20797729 163.48545837]
[59.74022293 160.46018982]
[63.44192886 158.19052124]
[70.12212372 144.76014709]
[76.70215607 131.28041077]
[83.18164825 117.75207520]
[89.66114044 104.22372437]
[96.03974915 90.64752197]
[102.31710815 77.02420044]
[101.06517792 61.25260544]
[113.41860199 52.93141937]
[119.69596100 39.30810165]
[115.96975708 26.95989418]
[121.47865295 15.74223614]
[132.77983093 11.42832565]
[139.25932312 -2.10001969]
[145.73883057 -15.62836552]
[152.21832275 -29.15671158]
[158.69781494 -42.68505478]
[165.17730713 -56.21340179]
[170.84010315 -70.10343170]
[167.95416260 -85.65919495]
[179.37486267 -95.22042084]
[184.20085144 -109.42287445]
[181.31492615 -124.97864532]
[192.73561096 -134.53987122]
[197.56161499 -148.74232483]
[202.38760376 -162.94477844]
[206.57461548 -177.34855652]
[210.11428833 -191.92492676]
[213.65396118 -206.50131226]
[200.00144958 -212.83335876]
[187.84675598 -221.70745850]
[177.65708923 -232.78251648]
[169.82409668 -245.63282776]
[164.64889526 -259.76446533]
[162.33036804 -274.63427734]
[162.95764160 -289.67065430]
[166.50662231 -304.29565430]
[172.84088135 -317.94717407]
[181.71694946 -330.10040283]
[192.79365540 -340.28829956]
[205.64524841 -348.11920166]
[219.77772522 -353.29211426]
[234.64788818 -355.60824585]
[249.68417358 -354.97851562]
[264.30859375 -351.42718506]
[277.95907593 -345.09069824]
[290.11090088 -336.21267700]
[300.29696655 -325.13430786]
[308.12579346 -312.28146362]
[313.29644775 -298.14813232]
[315.61013794 -283.27761841]
[314.97799683 -268.24142456]
[311.42428589 -253.61756897]
[305.08560181 -239.96812439]
[296.20559692 -227.81773376]
[285.12561035 -217.63345337]
[272.27148438 -209.80670166]
[258.13732910 -204.63835144]
[243.26641846 -202.32705688]
[228.23034668 -202.96163940]
[224.69067383 -188.38525391]
[221.15100098 -173.80888367]
[234.49105835 -180.66766357]
[248.81532288 -176.21620178]
[255.91819763 -163.00450134]
[251.73083496 -148.60081482]
[238.65196228 -141.25624084]
[224.17372131 -145.17807007]
[216.59007263 -158.11877441]
[211.76406860 -143.91632080]
[206.93806458 -129.71386719]
[210.16918945 -115.17395020]
[198.40330505 -104.59687805]
[193.57731628 -90.39442444]
[196.80844116 -75.85450745]
[185.04255676 -65.27742767]
[198.02519226 -72.79083252]
[212.95611572 -71.35306549]
[224.26649475 -61.50037003]
[227.73780823 -46.90756226]
[222.07534790 -33.01740265]
[209.39108276 -25.01057053]
[194.41590881 -25.87342262]
[182.73522949 -35.28413010]
[178.70565796 -49.73390579]
[172.22616577 -36.20555878]
[165.74667358 -22.67721558]
[159.26716614 -9.14886951]
[152.78767395 4.37947607]
[146.30818176 17.90782166]
[148.59771729 35.30681229]
[133.31927490 45.58546448]
[127.04191589 59.20877838]
[128.74284363 74.00594330]
[115.94042969 83.30156708]
[109.66306305 96.92488098]
[109.41806793 104.98171234]
[103.18949127 110.70322418]
[96.70999146 124.23156738]
[90.23049927 137.75991821]
[89.34590149 146.85140991]
[83.55249786 151.44035339]
[76.87230682 164.87072754]
[70.59494781 178.49403381]
[64.72598267 192.29821777]
[58.85702515 206.10238647]
[52.98806381 219.90657043]
[47.11910248 233.71073914]
[44.12432861 248.40875244]
[44.12432861 263.40875244]
[44.12432861 278.40875244]
[44.12432861 293.40875244]
[44.12432861 308.40875244]
[44.12432861 323.40875244]
[45.68485260 338.32736206]
[48.78895950 353.00265503]
[51.89307022 367.67794800]
[54.99718094 382.35327148]
[58.10129166 397.02856445]
[61.20540237 411.70385742]
[69.72241211 415.74954224]
[75.33970642 423.15075684]
[76.89817810 432.17105103]
[74.17289734 440.76565552]
[67.89573669 447.04501343]
[70.34146118 461.84429932]
[72.78718567 476.64355469]
[75.23291779 491.44284058]
[77.67864227 506.24209595]
[80.12436676 521.04138184]
[94.78611755 525.28350830]
[106.14956665 535.47344971]
[111.95848846 549.58795166]
[111.05951691 564.82458496]
[103.63115692 578.15808105]
[91.14830017 586.94110107]
[76.08943176 589.42968750]
[61.44450378 585.12982178]
[50.12127304 574.89526367]
[44.36797714 560.75799561]
[45.32693863 545.52502441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[70 172]
[71 171]
[72 169]
[73 168]
[74 167]
[75 165]
[76 164]
[78 162]
[79 161]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 145]
[90 143]
[91 142]
[93 140]
[94 139]
[95 138]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
