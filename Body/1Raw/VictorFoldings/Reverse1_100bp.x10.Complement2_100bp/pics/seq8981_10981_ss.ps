%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[50.76796722 565.82080078]
[60.67850876 553.20489502]
[60.23190308 538.21154785]
[59.78529739 523.21820068]
[59.33869171 508.22485352]
[55.99743271 501.63259888]
[58.99872589 493.00531006]
[58.77539825 478.00698853]
[50.31675720 469.35955811]
[50.00795364 456.86602783]
[58.55977631 447.21051025]
[58.55977631 432.21051025]
[58.55977631 417.21051025]
[55.41627502 410.52169800]
[58.67310715 401.98757935]
[58.89643478 386.98925781]
[59.11976242 371.99090576]
[56.07619476 365.25604248]
[59.45972443 356.77139282]
[59.90633011 341.77804565]
[60.35293579 326.78466797]
[60.79954147 311.79132080]
[61.24615097 296.79797363]
[53.89121628 283.84597778]
[62.03596878 270.28228760]
[52.37371445 281.75576782]
[38.07406616 286.28567505]
[23.56792450 282.46838379]
[13.35017776 271.48666382]
[10.58690453 256.74340820]
[16.13433647 242.80690002]
[28.27353859 233.99555969]
[43.24304962 233.03965759]
[56.40440369 240.23541260]
[63.67946625 253.35336304]
[66.12519836 238.55409241]
[68.57092285 223.75482178]
[71.01664734 208.95555115]
[73.46237946 194.15628052]
[71.71730804 191.09245300]
[71.36954498 187.03115845]
[72.87171936 182.63835144]
[76.36195374 178.75694275]
[79.46606445 164.08163452]
[82.57017517 149.40632629]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[103.68718719 46.32579803]
[89.56655121 39.84329224]
[77.24276733 30.39218521]
[67.32892609 18.44654655]
[60.31733322 4.60443735]
[56.55512238 -10.44202328]
[56.22702408 -25.94126511]
[59.34631348 -41.11981201]
[65.75431061 -55.22087097]
[75.12844086 -67.54208374]
[86.99847412 -77.47048950]
[100.77010345 -84.51303101]
[115.75472260 -88.32104492]
[131.20384216 -88.70751190]
[134.08911133 -103.42739868]
[129.15078735 -118.45815277]
[139.19171143 -129.45947266]
[142.07698059 -144.17936707]
[144.96224976 -158.89926147]
[147.84751892 -173.61915588]
[150.73280334 -188.33903503]
[153.61807251 -203.05892944]
[156.50334167 -217.77882385]
[159.38861084 -232.49871826]
[162.16423035 -247.23968506]
[163.72474670 -262.15829468]
[164.17135620 -277.15164185]
[164.61796570 -292.14498901]
[165.06455994 -307.13833618]
[165.51116943 -322.13168335]
[165.73449707 -337.13000488]
[165.73449707 -352.13000488]
[156.15982056 -367.85919189]
[165.52053833 -382.70318604]
[165.29721069 -397.70150757]
[165.07388306 -412.69985962]
[164.85055542 -427.69818115]
[162.17208862 -432.17846680]
[161.54292297 -436.77819824]
[162.66540527 -440.69674683]
[164.96720886 -443.36770630]
[157.64422607 -457.39212036]
[165.75703430 -469.88339233]
[166.20364380 -484.87673950]
[166.65023804 -499.87008667]
[167.09684753 -514.86346436]
[153.00416565 -520.44665527]
[141.67298889 -530.51544189]
[134.47163391 -543.85394287]
[132.26969910 -558.85150146]
[135.33305359 -573.69708252]
[143.29180908 -586.59802246]
[155.18489075 -595.99645996]
[169.57615662 -600.75744629]
[184.72779846 -600.30615234]
[198.81016541 -594.69702148]
[210.12275696 -584.60736084]
[217.29951477 -571.25555420]
[219.47383118 -556.25396729]
[216.38311768 -541.41406250]
[208.40060425 -528.52783203]
[196.49021912 -519.15130615]
[182.09019470 -514.41680908]
[181.64360046 -499.42349243]
[181.19699097 -484.43014526]
[180.75038147 -469.43676758]
[188.10531616 -456.48477173]
[179.96055603 -442.92111206]
[179.84889221 -427.92150879]
[180.07221985 -412.92318726]
[180.29554749 -397.92483521]
[180.51887512 -382.92651367]
[188.97752380 -374.27908325]
[189.28633118 -361.78555298]
[180.73449707 -352.13000488]
[180.73449707 -337.13000488]
[183.41818237 -333.17947388]
[183.64865112 -327.50109863]
[180.50451660 -321.68508911]
[180.05792236 -306.69171143]
[179.61131287 -291.69836426]
[179.16470337 -276.70501709]
[178.71809387 -261.71166992]
[187.92413330 -273.55435181]
[201.78057861 -279.29882812]
[216.66539001 -277.44348145]
[228.68772888 -268.47332764]
[234.70495605 -254.73313904]
[233.14421082 -239.81455994]
[224.41345215 -227.61727905]
[210.79489136 -221.32962036]
[195.84837341 -222.59516907]
[183.48089600 -231.08312988]
[176.92544556 -244.57388306]
[178.83016968 -237.43289185]
[174.10850525 -229.61344910]
[171.22323608 -214.89355469]
[168.33796692 -200.17366028]
[165.45268250 -185.45376587]
[162.56741333 -170.73387146]
[159.68214417 -156.01399231]
[156.79687500 -141.29409790]
[153.91159058 -126.57420349]
[159.05630493 -112.59632111]
[148.80900574 -100.54212952]
[145.92373657 -85.82223511]
[159.24980164 -80.10597992]
[171.09655762 -71.73399353]
[180.94207764 -61.07201767]
[188.35195923 -48.58675003]
[192.99847412 -34.82540894]
[194.67509460 -20.39177513]
[193.30566406 -5.91966391]
[188.94779968 7.95487738]
[181.79054260 20.62153816]
[172.14616394 31.52258873]
[160.43644714 40.17743301]
[147.17433167 46.20380020]
[132.94143677 49.33463287]
[118.36249542 49.42990875]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[101.70512390 146.61694336]
[97.24548340 152.51043701]
[94.14137268 167.18574524]
[91.03726196 181.86105347]
[88.26165009 196.60200500]
[85.81591797 211.40127563]
[83.37019348 226.20054626]
[80.92446899 240.99981689]
[78.47873688 255.79908752]
[77.02931976 270.72891235]
[84.35231018 284.75332642]
[76.23950195 297.24459839]
[75.79289246 312.23794556]
[75.34629059 327.23129272]
[74.89968109 342.22463989]
[74.45307159 357.21798706]
[74.11810303 372.21423340]
[73.89476776 387.21258545]
[73.67144012 402.21090698]
[73.55977631 417.21051025]
[73.55977631 432.21051025]
[73.55977631 447.21051025]
[83.13446045 462.93966675]
[73.77373505 477.78366089]
[73.99706268 492.78198242]
[74.33203888 507.77825928]
[74.77864838 522.77160645]
[75.22525024 537.76495361]
[75.67185974 552.75830078]
[86.31574249 564.76196289]
[83.42542267 580.54248047]
[69.21810913 587.99444580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[7 203]
[8 202]
[11 200]
[12 199]
[13 198]
[15 197]
[16 196]
[17 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[25 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[43 182]
[44 181]
[45 180]
[46 178]
[47 177]
[48 176]
[50 175]
[51 174]
[52 173]
[53 172]
[66 158]
[67 157]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 146]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 128]
[84 127]
[86 124]
[87 123]
[88 122]
[89 121]
[93 120]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
