%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[117.85153961 366.97433472]
[130.85569763 359.24472046]
[127.53343201 344.61724854]
[124.21117401 329.98980713]
[120.88891602 315.36233521]
[111.99931335 327.44433594]
[97.19152069 329.83795166]
[84.94812012 321.17196655]
[82.28267670 306.41070557]
[90.72208405 294.01004028]
[105.43186951 291.07366943]
[117.98505402 299.28286743]
[115.98104095 284.41732788]
[113.97702789 269.55181885]
[111.97300720 254.68627930]
[109.96899414 239.82075500]
[107.96498108 224.95523071]
[105.96096802 210.08970642]
[103.95695496 195.22416687]
[99.94800568 189.01530457]
[102.03547668 180.12258911]
[100.25300598 165.22886658]
[98.47054291 150.33515930]
[96.68807983 135.44143677]
[94.90560913 120.54772186]
[84.08045959 113.95456696]
[78.96202850 102.35908508]
[81.38512421 89.91793060]
[90.48114777 81.09092712]
[88.92062378 66.17232513]
[87.36009979 51.25371933]
[85.79957581 36.33511353]
[84.23905182 21.41650772]
[82.67852783 6.49790335]
[76.82559204 20.30887985]
[66.65274048 31.33218002]
[53.35507584 38.27279663]
[38.49479675 40.31534958]
[23.81766701 37.21988678]
[11.04794502 29.35005569]
[1.68580604 17.63039970]
[-3.16889691 3.43772984]
[-2.94583797 -11.56061172]
[2.32877851 -25.60263443]
[12.03529549 -37.03869629]
[25.03340149 -44.52530289]
[39.79609299 -47.18292999]
[54.58905792 -44.69936371]
[67.67444611 -37.36637497]
[77.51498413 -26.04543114]
[82.95493317 -12.06497097]
[84.95894623 -26.93050003]
[86.96295929 -41.79602814]
[88.85625458 -56.67606354]
[90.63871765 -71.56977844]
[92.42118835 -86.46349335]
[94.20365143 -101.35721588]
[79.43730164 -104.01952362]
[64.85460663 -107.55192566]
[50.50677872 -111.94201660]
[36.44422531 -117.17436981]
[22.71633720 -123.23061371]
[9.37133694 -130.08947754]
[-3.54390216 -137.72685242]
[-15.98401356 -146.11592102]
[-27.90530205 -155.22723389]
[-39.26589203 -165.02876282]
[-50.02587891 -175.48608398]
[-60.14746857 -186.56246948]
[-69.59510803 -198.21902466]
[-78.33560944 -210.41477966]
[-86.33827972 -223.10691833]
[-93.57499695 -236.25083923]
[-100.02034760 -249.80039978]
[-105.65169525 -263.70797729]
[-110.44925690 -277.92474365]
[-114.39617920 -292.40075684]
[-117.47859955 -307.08514404]
[-119.68568420 -321.92636108]
[-121.00969696 -336.87228394]
[-121.44596863 -351.87036133]
[-120.99298096 -366.86795044]
[-119.65232086 -381.81237793]
[-117.42869568 -396.65112305]
[-114.32991791 -411.33206177]
[-110.36686707 -425.80368042]
[-105.55346680 -440.01507568]
[-99.90662384 -453.91638184]
[-93.44618225 -467.45874023]
[-86.19481659 -480.59460449]
[-78.17801666 -493.27780151]
[-69.42392731 -505.46383667]
[-59.96330643 -517.10986328]
[-49.82938004 -528.17492676]
[-39.05774689 -538.62023926]
[-27.68624306 -548.40911865]
[-15.75481033 -557.50714111]
[-3.30535817 -565.88238525]
[9.61838245 -573.50531006]
[22.97101784 -580.34930420]
[36.70564651 -586.39025879]
[50.77402115 -591.60693359]
[65.12672424 -595.98101807]
[79.71335602 -599.49719238]
[94.48265839 -602.14306641]
[109.38277435 -603.90930176]
[124.36134338 -604.78979492]
[139.36578369 -604.78137207]
[154.34335327 -603.88403320]
[169.24147034 -602.10107422]
[184.00779724 -599.43865967]
[198.59046936 -595.90612793]
[212.93824768 -591.51586914]
[227.00076294 -586.28338623]
[240.72859192 -580.22705078]
[254.07353210 -573.36804199]
[266.98870850 -565.73059082]
[279.42874146 -557.34136963]
[291.34994507 -548.22998047]
[302.71044922 -538.42834473]
[313.47033691 -527.97094727]
[323.59185791 -516.89447021]
[333.03936768 -505.23782349]
[341.77978516 -493.04199219]
[349.78231812 -480.34979248]
[357.01895142 -467.20581055]
[363.46417236 -453.65618896]
[369.09539795 -439.74856567]
[373.89282227 -425.53173828]
[377.83963013 -411.05569458]
[380.92190552 -396.37127686]
[383.12887573 -381.53002930]
[384.45275879 -366.58413696]
[384.88891602 -351.58602905]
[384.43579102 -336.58843994]
[383.09500122 -321.64404297]
[380.87124634 -306.80532837]
[377.77230835 -292.12438965]
[373.80914307 -277.65283203]
[368.99563599 -263.44146729]
[363.34866333 -249.54020691]
[356.88809204 -235.99789429]
[349.63662720 -222.86210632]
[341.61972046 -210.17897034]
[332.86550903 -197.99302673]
[323.40478516 -186.34709167]
[313.27075195 -175.28208923]
[302.49905396 -164.83685303]
[291.12744141 -155.04808044]
[279.19595337 -145.95018005]
[266.74639893 -137.57507324]
[253.82260132 -129.95220947]
[240.46990967 -123.10833740]
[226.73522949 -117.06752014]
[212.66680908 -111.85095978]
[198.31405640 -107.47698212]
[183.72740173 -103.96096039]
[168.95808411 -101.31523895]
[154.05795288 -99.54911041]
[139.07936096 -98.66877747]
[124.07493591 -98.67733002]
[109.09736633 -99.57474518]
[107.31490326 -84.68103027]
[105.53244019 -69.78731537]
[103.74996948 -54.89359665]
[106.07636261 -47.87863159]
[101.82849121 -39.79201508]
[99.82447815 -24.92648506]
[97.82046509 -10.06095695]
[97.59713745 4.93738031]
[99.15765381 19.85598564]
[100.71817780 34.77458954]
[102.27870178 49.69319534]
[103.83922577 64.61180115]
[105.39974976 79.53040314]
[118.45440674 89.62712097]
[120.29349518 106.02790070]
[109.79933167 118.76525879]
[111.58179474 133.65896606]
[113.36425781 148.55268860]
[115.14672852 163.44641113]
[116.92919159 178.34011841]
[118.82248688 193.22015381]
[120.82649994 208.08569336]
[122.83051300 222.95121765]
[124.83452606 237.81674194]
[126.83853912 252.68226624]
[128.84255981 267.54779053]
[130.84657288 282.41333008]
[132.85058594 297.27886963]
[135.51637268 312.04006958]
[138.83863831 326.66754150]
[142.16088867 341.29498291]
[145.48315430 355.92245483]
[160.55039978 357.27636719]
[174.46104431 363.22192383]
[185.85221863 373.17660522]
[193.60797119 386.16519165]
[196.96846008 400.91519165]
[195.60444641 415.98153687]
[189.64958191 429.88818359]
[179.68725586 441.27270508]
[166.69346619 449.01974487]
[151.94122314 452.37033081]
[136.87580872 450.99624634]
[122.97315216 445.03207397]
[111.59531403 435.06210327]
[103.85697937 422.06314087]
[100.51626587 407.30865479]
[101.90045929 392.24414062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[51 169]
[52 168]
[53 167]
[54 165]
[55 164]
[56 163]
[57 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
