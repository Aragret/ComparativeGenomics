%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[141.10542297 256.91690063]
[143.95225525 242.17997742]
[148.05543518 227.74234009]
[153.38455200 213.71087646]
[159.90016174 200.18948364]
[167.55403137 187.27825928]
[176.28948975 175.07279968]
[164.88702393 165.32682800]
[153.48455811 155.58085632]
[142.08209229 145.83489990]
[127.29927063 147.25039673]
[115.59671783 137.52903748]
[114.21224976 122.01384735]
[102.80978394 112.26788330]
[91.19252014 102.77898407]
[79.36624908 93.55188751]
[67.53997803 84.32478333]
[55.71371078 75.09768677]
[43.88743973 65.87059021]
[31.28512955 57.73537445]
[18.00728416 50.75691986]
[4.72943687 43.77846909]
[-8.54840946 36.80001831]
[-21.82625580 29.82156372]
[-35.10410309 22.84311295]
[-48.38194656 15.86466026]
[-61.65979385 8.88620758]
[-69.60323334 21.61840820]
[-78.46529388 33.72919464]
[-88.19757080 45.15241623]
[-98.74691010 55.82568741]
[-110.05568695 65.69071198]
[-122.06214905 74.69361115]
[-134.70071411 82.78520966]
[-147.90234375 89.92131805]
[-161.59495544 96.06296539]
[-175.70373535 101.17658997]
[-190.15165710 105.23428345]
[-204.85980225 108.21386719]
[-219.74781799 110.09908295]
[-234.73440552 110.87962341]
[-249.73773193 110.55123138]
[-264.67581177 109.11569214]
[-279.46710205 106.58085632]
[-294.03076172 102.96055603]
[-308.28729248 98.27458191]
[-322.15884399 92.54851532]
[-335.56958008 85.81362915]
[-348.44635010 78.10671234]
[-360.71875000 69.46985626]
[-372.31979370 59.95023346]
[-383.18609619 49.59983444]
[-393.25830078 38.47519684]
[-402.48144531 26.63707542]
[-410.80508423 14.15012550]
[-418.18383789 1.08254981]
[-424.57733154 -12.49428082]
[-429.95068359 -26.50621414]
[-434.27453613 -40.87672043]
[-437.52529907 -55.52731323]
[-439.68518066 -70.37797546]
[-440.74237061 -85.34759521]
[-440.69116211 -100.35441589]
[-439.53179932 -115.31646729]
[-437.27056885 -130.15203857]
[-433.91989136 -144.78010559]
[-429.49804688 -159.12075806]
[-424.02917480 -173.09568787]
[-417.54315186 -186.62855530]
[-410.07537842 -199.64546204]
[-401.66668701 -212.07530212]
[-392.36294556 -223.85018921]
[-382.21502686 -234.90580750]
[-371.27832031 -245.18179321]
[-359.61257935 -254.62199402]
[-347.28149414 -263.17489624]
[-334.35244751 -270.79373169]
[-320.89602661 -277.43688965]
[-306.98571777 -283.06814575]
[-292.69754028 -287.65670776]
[-278.10949707 -291.17749023]
[-263.30123901 -293.61129761]
[-248.35371399 -294.94482422]
[-233.34851074 -295.17080688]
[-218.36758423 -294.28799438]
[-203.49278259 -292.30117798]
[-188.80532837 -289.22128296]
[-174.38545227 -285.06506348]
[-160.31188965 -279.85522461]
[-146.66152954 -273.62026978]
[-133.50891113 -266.39419556]
[-120.92588043 -258.21652222]
[-108.98115540 -249.13186646]
[-97.73998260 -239.18988037]
[-87.26374817 -228.44483948]
[-77.60967255 -216.95545959]
[-68.83049011 -204.78445435]
[-60.97414780 -191.99833679]
[-54.08354950 -178.66690063]
[-48.19633484 -164.86299133]
[-43.34465790 -150.66198730]
[-39.55501556 -136.14146423]
[-36.84810257 -121.38070679]
[-35.23870850 -106.46035004]
[-34.73562241 -91.46188354]
[-35.34159088 -76.46721649]
[-37.05330276 -61.55824661]
[-39.86141205 -46.81641006]
[-43.75057983 -32.32221985]
[-48.69956970 -18.15483665]
[-54.68134308 -4.39163876]
[-41.40349579 2.58681369]
[-28.12565041 9.56526566]
[-14.84780312 16.54371834]
[-1.56995690 23.52217102]
[11.70788956 30.50062370]
[24.98573494 37.47907639]
[38.26358032 44.45752716]
[30.88652039 31.39694023]
[29.82043076 16.43487167]
[35.27115631 2.46026731]
[46.18624878 -7.82859850]
[60.45817566 -12.44510651]
[75.33124542 -10.49787998]
[87.93370819 -2.36289978]
[95.83222961 10.38909817]
[97.50171661 25.29590225]
[92.61982727 39.47924042]
[82.12917328 50.20053864]
[68.05533600 55.38967514]
[53.11454010 54.04431915]
[64.94081116 63.27141953]
[76.76708221 72.49851990]
[88.59334564 81.72561646]
[100.41961670 90.95271301]
[104.27536774 91.02738190]
[108.07948303 92.80124664]
[111.07381439 96.21313477]
[112.55574799 100.86541748]
[123.95821381 110.61138153]
[139.49974060 109.56327057]
[150.92462158 119.60949707]
[151.82806396 134.43243408]
[163.23052979 144.17840576]
[174.63299561 153.92436218]
[186.03544617 163.67033386]
[196.73196411 153.14103699]
[208.29402161 143.57023621]
[220.63604736 135.02880859]
[233.66665649 127.58000183]
[247.28935242 121.27893829]
[261.40332031 116.17229462]
[275.90399170 112.29785919]
[290.68408203 109.68433380]
[305.63412476 108.35105896]
[320.64346313 108.30790710]
[335.60092163 109.55519867]
[350.39578247 112.08370209]
[364.91851807 115.87468719]
[379.06158447 120.90010071]
[392.72030640 127.12272644]
[405.79351807 134.49649048]
[418.18444824 142.96681213]
[429.80136108 152.47096252]
[440.55822754 162.93858337]
[450.37542725 174.29217529]
[459.18026733 186.44767761]
[466.90756226 199.31509399]
[473.50009155 212.79916382]
[478.90902710 226.80004883]
[483.09439087 241.21408081]
[486.02511597 255.93455505]
[487.67956543 270.85247803]
[488.04544067 285.85739136]
[487.12005615 300.83819580]
[484.91027832 315.68402100]
[481.43243408 330.28491211]
[476.71231079 344.53280640]
[470.78482056 358.32214355]
[463.69387817 371.55090332]
[455.49197388 384.12109375]
[446.23980713 395.93969727]
[436.00588989 406.91915894]
[424.86602783 416.97821045]
[412.90264893 426.04238892]
[400.20437622 434.04458618]
[386.86520386 440.92553711]
[372.98385620 446.63430786]
[358.66314697 451.12860107]
[344.00909424 454.37521362]
[329.13021851 456.35003662]
[314.13662720 457.03848267]
[299.13937378 456.43545532]
[284.24948120 454.54541016]
[269.57717896 451.38232422]
[255.23109436 446.96966553]
[241.31747437 441.34005737]
[227.93930054 434.53521729]
[215.19563293 426.60546875]
[203.18083191 417.60958862]
[191.98385620 407.61413574]
[181.68757629 396.69314575]
[172.36824036 384.92745972]
[164.09486389 372.40417480]
[156.92866516 359.21603394]
[150.92274475 345.46066284]
[146.12152100 331.23989868]
[142.56057739 316.65905762]
[140.26626587 301.82608032]
[139.25556946 286.85076904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 146]
[8 145]
[9 144]
[10 143]
[13 140]
[14 139]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 118]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
