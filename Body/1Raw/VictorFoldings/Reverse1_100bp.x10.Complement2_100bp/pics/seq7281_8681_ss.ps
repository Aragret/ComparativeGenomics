%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[68.48136902 369.92938232]
[60.85306931 383.07766724]
[48.77077484 392.30191040]
[34.07694244 396.19546509]
[19.01228142 394.16461182]
[5.87403822 386.51901245]
[-3.33429956 374.42462158]
[-7.20852757 359.72567749]
[-5.15785313 344.66369629]
[2.50500965 331.53552246]
[14.61153030 322.34310913]
[29.31555367 318.48822021]
[31.31956673 303.62268066]
[33.32358170 288.75714111]
[35.32759476 273.89163208]
[37.33160782 259.02609253]
[27.59120560 270.43331909]
[13.90115166 276.56375122]
[-1.09521806 276.23376465]
[-14.50233936 269.50701904]
[-23.73150826 257.68234253]
[-27.00071526 243.04295349]
[-23.67872810 228.41542053]
[-14.40697289 216.62413025]
[-0.97567683 209.94578552]
[14.02178574 209.66987610]
[27.68963814 215.84965515]
[37.38883591 227.29193115]
[41.24666214 241.78863525]
[45.86067200 227.51589966]
[50.47468185 213.24317932]
[55.08868790 198.97044373]
[53.81742477 195.68164062]
[54.07596207 191.61369324]
[56.21315002 187.49230957]
[60.24054718 184.17160034]
[65.48726654 170.11912537]
[62.69047928 155.48945618]
[74.76606750 145.26737976]
[71.96927643 130.63771057]
[84.04486847 120.41563416]
[89.29158783 106.36316681]
[78.22058105 116.48407745]
[64.77205658 123.12765503]
[50.00661469 125.76996613]
[35.08872604 124.20262146]
[21.19487381 118.54922485]
[9.42078590 109.25563049]
[0.69501555 97.05477905]
[-4.29428577 82.90885925]
[-5.15364170 67.93350220]
[-1.81527913 53.30970383]
[5.45752430 40.19077301]
[16.09120560 29.61132050]
[29.24714661 22.40568542]
[43.88781738 19.14213181]
[58.85858917 20.07803726]
[72.97881317 25.13959694]
[85.13489532 33.92763138]
[94.36817169 45.74907684]
[99.95046234 59.67165375]
[101.44152069 74.59735870]
[98.72265625 89.35238647]
[107.86145782 77.45775604]
[117.00025940 65.56312561]
[119.27256775 49.90594482]
[133.16220093 44.52750778]
[133.84498596 39.35248184]
[136.20823669 35.35643768]
[139.52143860 32.98205185]
[142.98428345 32.31791687]
[152.64509583 20.84321785]
[162.30589294 9.36851883]
[171.96670532 -2.10618162]
[174.93588257 -17.64627647]
[189.05181885 -22.39914703]
[198.71263123 -33.87384796]
[208.37344360 -45.34854507]
[218.03425598 -56.82324600]
[227.69505310 -68.29794312]
[224.12078857 -83.28229523]
[229.98657227 -97.33384705]
[242.84951782 -105.14465332]
[257.66790771 -103.89842224]
[267.32870483 -115.37312317]
[276.98953247 -126.84782410]
[286.65032959 -138.32252502]
[279.72436523 -151.82461548]
[278.49871826 -166.90907288]
[283.12918091 -181.27474976]
[292.88049316 -192.74208069]
[306.24295044 -199.58381653]
[321.16616821 -200.78509521]
[335.37356567 -196.19389343]
[345.03436279 -207.66859436]
[354.69519043 -219.14329529]
[364.35598755 -230.61799622]
[374.01681519 -242.09269714]
[363.55178833 -252.85662842]
[354.21054077 -264.60906982]
[346.08590698 -277.23318481]
[339.25860596 -290.60357666]
[333.79653931 -304.58728027]
[329.75393677 -319.04534912]
[327.17098999 -333.83410645]
[326.07339478 -348.80654907]
[326.47204590 -363.81387329]
[328.36297607 -378.70690918]
[331.72741699 -393.33767700]
[336.53189087 -407.56072998]
[342.72869873 -421.23474121]
[350.25619507 -434.22378540]
[359.03961182 -446.39877319]
[368.99160767 -457.63870239]
[380.01330566 -467.83187866]
[391.99517822 -476.87695312]
[404.81811523 -484.68408203]
[418.35467529 -491.17562866]
[432.47030640 -496.28710938]
[447.02474976 -499.96768188]
[461.87335205 -502.18081665]
[476.86849976 -502.90447998]
[491.86120605 -502.13146973]
[506.70245361 -499.86950684]
[521.24468994 -496.14105225]
[535.34344482 -490.98318481]
[548.85858154 -484.44714355]
[561.65576172 -476.59786987]
[573.60778809 -467.51339722]
[584.59588623 -457.28402710]
[594.51086426 -446.01141357]
[603.25421143 -433.80758667]
[610.73889160 -420.79385376]
[616.89068604 -407.09954834]
[621.64831543 -392.86074829]
[624.96459961 -378.21899414]
[626.80657959 -363.31979370]
[627.15582275 -348.31124878]
[626.00897217 -333.34249878]
[623.37738037 -318.56234741]
[619.28723145 -304.11764526]
[613.77917480 -290.15197754]
[606.90795898 -276.80413818]
[598.74182129 -264.20681763]
[589.36193848 -252.48516846]
[578.86157227 -241.75572205]
[567.34509277 -232.12510681]
[554.92687988 -223.68902588]
[541.73046875 -216.53135681]
[527.88690186 -210.72320557]
[513.53381348 -206.32231140]
[498.81387329 -203.37240601]
[483.87338257 -201.90281677]
[468.86077881 -201.92813110]
[453.92529297 -203.44813538]
[439.21539307 -206.44767761]
[424.87725830 -210.89697266]
[411.05337524 -216.75180054]
[397.88116455 -223.95396423]
[385.49151611 -232.43188477]
[375.83068848 -220.95718384]
[366.16989136 -209.48248291]
[356.50906372 -198.00778198]
[346.84826660 -186.53308105]
[353.79309082 -173.31573486]
[355.15213013 -158.40605164]
[350.68725586 -144.07322693]
[341.04913330 -132.51062012]
[327.68249512 -125.50012970]
[312.60980225 -124.13761139]
[298.12503052 -128.66171265]
[288.46423340 -117.18701172]
[278.80340576 -105.71231079]
[269.14260864 -94.23760986]
[272.89550781 -79.84825134]
[267.39062500 -65.84252930]
[254.54400635 -57.66829681]
[239.16975403 -58.63713455]
[229.50895691 -47.16243744]
[219.84814453 -35.68773651]
[210.18733215 -24.21303558]
[200.52651978 -12.73833561]
[198.24835205 1.98101234]
[183.44140625 7.55462885]
[173.78059387 19.02932930]
[164.11979675 30.50402832]
[154.45898438 41.97872925]
[145.05682373 53.66630936]
[143.43818665 68.47270203]
[128.89489746 74.70192719]
[119.75608826 86.59655762]
[110.61728668 98.49118805]
[103.34405518 111.60988617]
[98.09733582 125.66235352]
[100.51884460 141.29714966]
[88.81853485 150.51409912]
[91.24004364 166.14889526]
[79.53973389 175.36584473]
[74.29301453 189.41831970]
[69.36141968 203.58444214]
[64.74741364 217.85717773]
[60.13340378 232.12991333]
[55.51939392 246.40264893]
[52.19713593 261.03012085]
[50.19312286 275.89562988]
[48.18910980 290.76116943]
[46.18509293 305.62667847]
[44.18107986 320.49221802]
[57.33939362 328.10321045]
[66.57952118 340.17337036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[29 203]
[30 202]
[31 201]
[32 200]
[36 199]
[37 198]
[39 196]
[41 194]
[42 193]
[63 192]
[64 191]
[65 190]
[67 188]
[71 187]
[72 186]
[73 185]
[74 184]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[84 174]
[85 173]
[86 172]
[87 171]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
