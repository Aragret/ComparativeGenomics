%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[222.97280884 642.48986816]
[231.88502502 630.38726807]
[242.54031372 619.78698730]
[254.68890381 610.93762207]
[247.80949402 597.60815430]
[240.93008423 584.27874756]
[234.05067444 570.94927979]
[227.17124939 557.61987305]
[220.29183960 544.29046631]
[207.58924866 542.12860107]
[198.31266785 532.90759277]
[196.00680542 519.83496094]
[201.73413086 507.64428711]
[195.05393982 494.21392822]
[188.37373352 480.78353882]
[181.69354248 467.35314941]
[175.01335144 453.92279053]
[168.33316040 440.49240112]
[161.65295410 427.06204224]
[154.87297058 413.68176270]
[147.99356079 400.35232544]
[141.11413574 387.02288818]
[134.23472595 373.69348145]
[127.35531616 360.36404419]
[127.60605621 375.36193848]
[124.30831909 389.99496460]
[117.64860535 403.43548584]
[108.00355530 414.92346191]
[95.91864777 423.80911255]
[82.07733154 429.58996582]
[67.26241302 431.93902588]
[52.31174850 430.72351074]
[38.07085800 426.01214600]
[25.34514236 418.07135010]
[14.85429859 407.35025024]
[7.19163656 394.45513916]
[2.79051661 380.11532593]
[1.89984310 365.14181519]
[4.56998825 350.38137817]
[10.64994240 336.66882324]
[19.79585457 324.77966309]
[31.49047852 315.38626099]
[45.07242584 309.01989746]
[59.77357483 306.04058838]
[74.76250458 306.61685181]
[89.19151306 310.71609497]
[102.24456787 318.10644531]
[113.18347168 328.36999512]
[121.39002991 340.92724609]
[119.60756683 326.03353882]
[117.82510376 311.13980103]
[116.04263306 296.24609375]
[114.26016998 281.35238647]
[112.47769928 266.45864868]
[110.69523621 251.56494141]
[108.91277313 236.67123413]
[107.13030243 221.77751160]
[97.93543243 210.05984497]
[103.97801971 195.43803406]
[102.19555664 180.54431152]
[100.41308594 165.65058899]
[98.63062286 150.75688171]
[96.84815979 135.86315918]
[95.06568909 120.96943665]
[93.28322601 106.07572174]
[90.61996460 103.28656006]
[89.19905090 99.33702087]
[89.51116180 94.80826569]
[91.76907349 90.47909546]
[90.65341949 75.52064514]
[89.53777313 60.56219101]
[86.13709259 54.89236832]
[86.11376953 49.20936966]
[88.61837006 45.14292145]
[87.94858551 30.15788269]
[87.27880096 15.17284298]
[86.27454376 0.20649910]
[84.93630981 -14.73368549]
[83.59807587 -29.67387009]
[76.62609863 -16.39262199]
[64.63385010 -7.38229942]
[49.93683624 -4.38265419]
[35.37282944 -7.97287083]
[23.75390434 -17.45973587]
[17.32349586 -31.01148224]
[17.32321548 -46.01148224]
[23.75311661 -59.56346893]
[35.37168503 -69.05076599]
[49.93556213 -72.64153290]
[64.63268280 -69.64243317]
[76.62527466 -60.63256073]
[83.59807587 -47.35033798]
[84.93630981 -62.29052353]
[86.27454376 -77.23071289]
[87.50151825 -92.18044281]
[88.61716461 -107.13889313]
[89.73281097 -122.09735107]
[90.84846497 -137.05580139]
[76.76971436 -142.55856323]
[64.93945312 -151.96792603]
[56.40960693 -164.44723511]
[51.93864822 -178.88684082]
[51.92413330 -194.00276184]
[56.36735535 -208.45091248]
[64.87321472 -220.94657898]
[76.68539429 -230.37864685]
[90.75354767 -235.90843201]
[105.82674408 -237.04421997]
[120.56469727 -233.68502808]
[133.65690613 -226.12953186]
[143.93922424 -215.04959106]
[150.49736023 -201.43040466]
[152.74816895 -186.48298645]
[150.49150085 -171.53645325]
[143.92802429 -157.91983032]
[133.64135742 -146.84391785]
[120.54618073 -139.29356384]
[105.80691528 -135.94015503]
[104.69126892 -120.98170471]
[103.57561493 -106.02324677]
[102.45996857 -91.06479645]
[105.09727478 -84.16070557]
[101.21472931 -75.89247894]
[99.87649536 -60.95228958]
[98.53826141 -46.01210403]
[98.53826141 -31.01210594]
[99.87649536 -16.07192039]
[101.21472931 -1.13173509]
[103.67143250 1.39747846]
[105.02515411 5.24228048]
[104.67088318 9.87129688]
[102.26383972 14.50305843]
[102.93362427 29.48809624]
[103.60340881 44.47313690]
[104.49622345 59.44654083]
[105.61187744 74.40499878]
[106.72752380 89.36344910]
[108.17694092 104.29325867]
[109.95941162 119.18697357]
[111.74187469 134.08068848]
[113.52433777 148.97441101]
[115.30680847 163.86813354]
[117.08927155 178.76184082]
[118.87173462 193.65556335]
[128.19410706 206.43852234]
[122.02402496 219.99504089]
[123.80648804 234.88876343]
[125.58895111 249.78248596]
[127.37142181 264.67620850]
[129.15388489 279.56991577]
[130.93635559 294.46362305]
[132.71881104 309.35736084]
[134.50128174 324.25106812]
[136.28375244 339.14477539]
[140.68475342 353.48461914]
[147.56416321 366.81405640]
[154.44357300 380.14349365]
[161.32298279 393.47293091]
[168.20239258 406.80233765]
[174.91905212 412.99301147]
[175.08332825 420.38183594]
[181.76353455 433.81222534]
[188.44372559 447.24258423]
[195.12391663 460.67297363]
[201.80410767 474.10333252]
[208.48431396 487.53372192]
[215.16450500 500.96408081]
[231.84777832 506.22598267]
[239.41474915 521.62261963]
[233.62127686 537.41101074]
[240.50068665 550.74047852]
[247.38009644 564.06988525]
[254.25950623 577.39935303]
[261.13891602 590.72875977]
[268.01834106 604.05816650]
[282.26940918 599.28253174]
[297.08251953 596.73834229]
[312.11038208 596.48535156]
[327.00070190 598.52935791]
[341.40447998 602.82257080]
[354.98406982 609.26428223]
[367.42111206 617.70349121]
[378.42407227 627.94238281]
[387.73504639 639.74096680]
[395.13574219 652.82263184]
[400.45272827 666.88073730]
[403.56127930 681.58575439]
[404.38861084 696.59295654]
[402.91531372 711.55053711]
[399.17587280 726.10791016]
[393.25799561 739.92382812]
[385.30038452 752.67437744]
[375.48959351 764.06072998]
[364.05557251 773.81591797]
[351.26638794 781.71130371]
[337.42181396 787.56176758]
[322.84640503 791.23022461]
[307.88180542 792.63067627]
[292.87881470 791.73022461]
[278.18911743 788.55004883]
[264.15710449 783.16461182]
[251.11164856 775.70025635]
[239.35858154 766.33190918]
[229.17341614 755.27917480]
[220.79489136 742.80120850]
[214.41943359 729.19036865]
[210.19647217 714.76586914]
[208.22500610 699.86572266]
[208.55125427 684.83929443]
[211.16757202 670.03875732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[69 137]
[70 136]
[71 135]
[74 134]
[75 133]
[76 132]
[77 128]
[78 127]
[79 126]
[92 125]
[93 124]
[94 123]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
