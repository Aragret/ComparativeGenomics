%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[96.18898010 682.76312256]
[88.62543488 669.75244141]
[83.74578094 655.51599121]
[81.73757172 640.60113525]
[82.67800140 625.58111572]
[86.53092194 611.03320312]
[93.14823914 597.51666260]
[102.27559662 585.55096436]
[113.56216431 575.59606934]
[126.57411957 568.03466797]
[140.81130981 563.15728760]
[138.80729675 548.29174805]
[136.80328369 533.42626953]
[125.34414673 520.13507080]
[132.47961426 503.15960693]
[130.25450134 488.32556152]
[128.02938843 473.49151611]
[125.80426788 458.65747070]
[123.57915497 443.82342529]
[121.35403442 428.98937988]
[119.12891388 414.15533447]
[116.90380096 399.32128906]
[114.73227692 397.54855347]
[113.13211060 394.80883789]
[112.47514343 391.31542969]
[113.04917908 387.41223145]
[115.01519012 383.54067993]
[113.67695618 368.60049438]
[104.83503723 356.61428833]
[111.31029510 342.17883301]
[109.97206116 327.23864746]
[108.63382721 312.29849243]
[94.63555908 307.14932251]
[84.21827698 296.38876343]
[79.48667145 282.11386108]
[81.43007660 267.13909912]
[89.71614838 254.44152832]
[102.74624634 246.56892395]
[101.40801239 231.62873840]
[100.06977844 216.68855286]
[98.73154449 201.74836731]
[97.39331055 186.80818176]
[96.05507660 171.86799622]
[93.59836578 169.33879089]
[92.24465179 165.49398804]
[92.59891510 160.86497498]
[95.00596619 156.23320007]
[94.33618164 141.24816895]
[86.03829193 128.87907410]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[89.06243134 25.91639519]
[86.17715454 11.19650459]
[83.29188538 -3.52338672]
[80.40661621 -18.24327850]
[77.52133942 -32.96316910]
[74.19908142 -47.59062958]
[70.44277954 -62.11268997]
[66.68647766 -76.63475037]
[62.82217407 -91.12844086]
[58.85007858 -105.59296417]
[54.77041245 -120.02751923]
[50.58340073 -134.43130493]
[46.39638901 -148.83508301]
[42.20937729 -163.23886108]
[37.91525269 -177.61108398]
[33.40762329 -191.91777039]
[28.79361534 -206.19049072]
[24.17960548 -220.46322632]
[19.56559753 -234.73596191]
[14.95158768 -249.00869751]
[10.33757877 -263.28143311]
[-4.54571533 -261.13769531]
[-19.57721329 -261.54025269]
[-34.32443237 -264.47753906]
[-48.36306000 -269.86502075]
[-61.28918076 -277.54769897]
[-72.73088837 -287.30450439]
[-82.35897064 -298.85473633]
[-89.89641571 -311.86608887]
[-95.12635803 -325.96414185]
[-97.89832306 -340.74334717]
[-98.13254547 -355.77841187]
[-95.82229614 -370.63674927]
[-91.03404236 -384.89089966]
[-83.90554810 -398.13070679]
[-74.64192200 -409.97525024]
[-63.50969315 -420.08374023]
[-50.82915497 -428.16531372]
[-36.96515656 -433.98748779]
[-22.31659126 -437.38272095]
[-7.30492640 -438.25329590]
[7.63792133 -436.57421875]
[22.08201599 -432.39376831]
[35.61177444 -425.83224487]
[47.83791733 -417.07843018]
[58.40867233 -406.38415527]
[67.01989746 -394.05718994]
[73.42383575 -380.45211792]
[77.43623352 -365.96044922]
[78.94163513 -350.99908447]
[77.89673615 -335.99856567]
[74.33159637 -321.39041138]
[68.34880066 -307.59497070]
[60.12047577 -295.00915527]
[49.88336945 -283.99508667]
[37.93202972 -274.86965942]
[24.61031151 -267.89544678]
[29.22432137 -253.62271118]
[33.83832932 -239.34997559]
[38.45233917 -225.07723999]
[43.06634903 -210.80450439]
[47.68035889 -196.53176880]
[52.72893143 -191.13420105]
[52.25510025 -182.01206970]
[57.22275162 -176.53994751]
[56.61315918 -167.42587280]
[60.80017090 -153.02209473]
[64.98718262 -138.61831665]
[69.17419434 -124.21453094]
[74.05982208 -118.66904449]
[73.31459808 -109.56506348]
[77.28669739 -95.10054016]
[82.08921814 -89.48292542]
[81.20854187 -80.39105225]
[84.96483612 -65.86898804]
[88.72113800 -51.34693146]
[91.06530762 -49.80972290]
[92.94181061 -47.25133514]
[93.95864868 -43.84524536]
[93.79380035 -39.90349960]
[92.24123383 -35.84844208]
[95.12650299 -21.12855148]
[98.01177979 -6.40865946]
[100.89704895 8.31123161]
[103.78231812 23.03112411]
[109.69943237 9.24751759]
[121.28594208 -0.27891204]
[135.95338440 -3.41993761]
[150.42501831 0.52615440]
[161.46786499 10.67779732]
[166.61488342 24.76708794]
[164.71624756 39.64644241]
[156.19612122 51.99177551]
[142.95788574 59.04510498]
[127.95903778 59.23070526]
[114.55033875 52.50711060]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[116.48249817 127.51831818]
[109.32122040 140.57838440]
[109.99100494 155.56341553]
[110.99526215 170.52976990]
[112.33349609 185.46995544]
[113.67173004 200.41014099]
[115.00996399 215.35032654]
[116.34819794 230.29051208]
[117.68643188 245.23069763]
[131.90821838 250.66226196]
[142.31900024 261.68508911]
[146.89277649 276.07608032]
[144.77342224 290.96466064]
[136.43434143 303.40527344]
[123.57401276 310.96023560]
[124.91224670 325.90042114]
[126.25048065 340.84060669]
[135.18812561 353.89547729]
[128.61714172 367.26226807]
[129.95538330 382.20245361]
[131.73783875 397.09619141]
[133.96296692 411.93020630]
[136.18807983 426.76425171]
[138.41319275 441.59829712]
[140.63830566 456.43234253]
[142.86343384 471.26638794]
[145.08854675 486.10043335]
[147.31365967 500.93447876]
[157.20318604 509.21459961]
[158.75109863 521.61572266]
[151.66880798 531.42224121]
[153.67282104 546.28778076]
[155.67683411 561.15325928]
[170.69734192 562.08642578]
[185.24710083 565.93225098]
[198.76687622 572.54302979]
[210.73698425 581.66455078]
[220.69734192 592.94628906]
[228.26510620 605.95458984]
[233.14936829 620.18939209]
[235.16239929 635.10363770]
[234.22683716 650.12396240]
[230.37861633 664.67309570]
[223.76568604 678.19183350]
[214.64219666 690.16046143]
[203.35885620 700.11901855]
[190.34934998 707.68463135]
[176.11373901 712.56658936]
[161.19918823 714.57720947]
[146.17900085 713.63922119]
[131.63047791 709.78863525]
[118.11284637 703.17352295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 191]
[12 190]
[13 189]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[27 178]
[28 177]
[30 175]
[31 174]
[32 173]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[47 161]
[48 160]
[50 158]
[53 156]
[54 155]
[55 154]
[56 153]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[62 132]
[63 131]
[64 130]
[65 128]
[66 127]
[67 125]
[68 124]
[69 123]
[70 122]
[71 120]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
