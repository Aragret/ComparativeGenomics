%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[69.06385803 796.37756348]
[54.29853058 793.69476318]
[39.77497482 789.91607666]
[25.57441139 785.06262207]
[11.77626228 779.16149902]
[-1.54231048 772.24572754]
[-14.30682278 764.35400391]
[-26.44588852 755.53045654]
[-37.89162445 745.82440186]
[-48.58001328 735.29010010]
[-58.45128632 723.98657227]
[-67.45023346 711.97692871]
[-75.52653503 699.32843018]
[-82.63502502 686.11169434]
[-88.73594666 672.40069580]
[-93.79517365 658.27215576]
[-97.78442383 643.80499268]
[-100.68137360 629.08020020]
[-102.46984100 614.18005371]
[-103.13980865 599.18798828]
[-102.68753815 584.18774414]
[-101.11555481 569.26318359]
[-98.43264771 554.49792480]
[-94.65382385 539.97436523]
[-89.80021667 525.77386475]
[-83.89897156 511.97576904]
[-76.98308563 498.65725708]
[-69.09123993 485.89279175]
[-60.26757050 473.75381470]
[-50.56142044 462.30816650]
[-40.02707291 451.61987305]
[-28.72343636 441.74868774]
[-16.71373177 432.74984741]
[-4.06512165 424.67367554]
[9.15165901 417.56530762]
[22.86269379 411.46450806]
[36.99130630 406.40539551]
[51.45848083 402.41625977]
[66.18331146 399.51943970]
[81.08345032 397.73110962]
[80.41365814 382.74606323]
[79.74387360 367.76104736]
[76.30484009 361.21926880]
[79.17735291 352.54824829]
[78.73075104 337.55490112]
[70.61794281 325.06362915]
[77.94092560 311.03921509]
[77.49432373 296.04586792]
[77.04771423 281.05252075]
[76.60111237 266.05917358]
[67.63890076 278.08740234]
[53.63422775 283.46041870]
[38.92659378 280.51330566]
[28.07332039 270.15924072]
[24.43741226 255.60656738]
[29.14549255 241.36459351]
[40.73871231 231.84632874]
[55.62478638 230.00112915]
[69.19110870 236.40074158]
[77.23406982 249.06242371]
[78.79458618 234.14381409]
[80.35511017 219.22521973]
[70.80559540 207.85234070]
[72.17566681 192.70051575]
[84.16933441 182.76121521]
[85.72985840 167.84262085]
[87.29038239 152.92401123]
[88.85090637 138.00540161]
[80.85182190 122.38549805]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[89.10289764 16.39196968]
[99.54174042 2.28532362]
[100.43456268 -12.68808270]
[98.35414886 -16.49936485]
[97.66415405 -20.38374710]
[98.21681976 -23.89515114]
[99.73470306 -26.68130684]
[101.85248566 -28.51791763]
[103.63494873 -43.41163635]
[105.41741180 -58.30535126]
[99.37482452 -72.92717743]
[108.56970215 -84.64483643]
[99.07530212 -96.99369049]
[101.09513855 -112.07263947]
[112.92639160 -121.04799652]
[114.70886230 -135.94171143]
[116.49132538 -150.83543396]
[114.40385437 -159.72814941]
[118.41281128 -165.93701172]
[120.41682434 -180.80255127]
[114.59259796 -195.51271057]
[123.96091461 -207.09217834]
[125.96492767 -221.95770264]
[127.96894073 -236.82322693]
[114.10199738 -242.79067993]
[102.35999298 -252.27899170]
[93.61428070 -264.58407593]
[88.51383209 -278.79281616]
[87.43714142 -293.85079956]
[90.46411133 -308.64065552]
[97.37010956 -322.06488037]
[107.64267731 -333.12728882]
[120.51950836 -341.00698853]
[135.04507446 -345.11926270]
[150.14146423 -345.15893555]
[164.68843079 -341.12304688]
[177.60649109 -333.31112671]
[187.93705750 -322.30285645]
[194.91349792 -308.91510010]
[198.01815796 -294.14135742]
[197.02061462 -279.07791138]
[191.99490356 -264.84259033]
[183.31396484 -252.49169922]
[171.62199402 -242.94181824]
[157.78660583 -236.90158081]
[142.83447266 -234.81921387]
[140.83045959 -219.95368958]
[138.82644653 -205.08816528]
[144.79400635 -191.44128418]
[135.28234863 -178.79853821]
[133.27833557 -163.93299866]
[131.38504028 -149.05296326]
[129.60258484 -134.15925598]
[127.82011414 -119.26553345]
[137.19924927 -107.75173950]
[135.60372925 -92.62200165]
[123.46341705 -82.86237335]
[129.63349915 -69.30584717]
[120.31113434 -56.52288437]
[118.52866364 -41.62916946]
[116.74620056 -26.73545074]
[115.40796661 -11.79526615]
[114.51515198 3.17813945]
[122.30719757 12.43073654]
[121.68592072 24.91263580]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[114.38809967 119.29146576]
[112.96590424 131.70762634]
[103.76950836 139.56593323]
[102.20898438 154.48452759]
[100.64846039 169.40313721]
[99.08794403 184.32174683]
[108.76514435 196.52786255]
[106.97003174 211.63522339]
[95.27371979 220.78573608]
[93.71319580 235.70434570]
[92.15267181 250.62294006]
[91.59445953 265.61254883]
[92.04106903 280.60589600]
[92.48767090 295.59924316]
[92.93428040 310.59262085]
[101.07903290 324.15628052]
[93.72409821 337.10827637]
[94.17070770 352.10165405]
[94.72891235 367.09124756]
[95.39869690 382.07629395]
[96.06848907 397.06134033]
[111.06875610 397.51321411]
[125.99330902 399.08477783]
[140.75868225 401.76730347]
[155.28230286 405.54574585]
[169.48295593 410.39898682]
[183.28120422 416.29986572]
[196.59989929 423.21539307]
[209.36454773 431.10690308]
[221.50376892 439.93023682]
[232.94967651 449.63610840]
[243.63825989 460.17016602]
[253.50973511 471.47354126]
[262.50888062 483.48300171]
[270.58541870 496.13140869]
[277.69412231 509.34799194]
[283.79528809 523.05883789]
[288.85476685 537.18731689]
[292.84426880 551.65441895]
[295.74148560 566.37915039]
[297.53021240 581.27923584]
[298.20043945 596.27136230]
[297.74844360 611.27160645]
[296.17672729 626.19616699]
[293.49407959 640.96148682]
[289.71551514 655.48510742]
[284.86215210 669.68572998]
[278.96115112 683.48388672]
[272.04550171 696.80255127]
[264.15386963 709.56713867]
[255.33042908 721.70623779]
[245.62448120 733.15209961]
[235.09031677 743.84057617]
[223.78684998 753.71191406]
[211.77731323 762.71099854]
[199.12884521 770.78741455]
[185.91218567 777.89599609]
[172.20126343 783.99707031]
[158.07273865 789.05639648]
[143.60563660 793.04577637]
[128.88085938 795.94287109]
[113.98075104 797.73144531]
[98.98864746 798.40155029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 168]
[41 167]
[42 166]
[44 165]
[45 164]
[47 162]
[48 161]
[49 160]
[50 159]
[60 158]
[61 157]
[62 156]
[65 153]
[66 152]
[67 151]
[68 150]
[70 147]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[77 138]
[78 137]
[83 136]
[84 135]
[85 134]
[87 132]
[90 129]
[91 128]
[92 127]
[94 126]
[95 125]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
