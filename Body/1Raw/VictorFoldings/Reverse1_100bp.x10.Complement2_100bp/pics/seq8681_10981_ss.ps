%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[19.63710022 662.00256348]
[23.09501839 676.64630127]
[23.71883202 691.67987061]
[21.48599052 706.55975342]
[16.47721100 720.74804688]
[8.87355328 733.73193359]
[-1.05011070 745.04199219]
[-12.93504906 754.26940918]
[-26.35162735 761.08056641]
[-40.81484604 765.22924805]
[-55.80186844 766.56555176]
[-70.77091980 765.04107666]
[-85.18088531 760.71105957]
[-98.51084900 753.73187256]
[-110.27894592 744.35595703]
[-120.05975342 732.92211914]
[-127.49971771 719.84375000]
[-132.32987976 705.59362793]
[-134.37564087 690.68688965]
[-133.56303406 675.66235352]
[-129.92143250 661.06323242]
[-123.58250427 647.41717529]
[-114.77537537 635.21752930]
[-103.81842041 624.90533447]
[-91.10772705 616.85333252]
[-77.10279083 611.35260010]
[-62.30986404 608.60198975]
[-47.26371002 608.70092773]
[-32.50823975 611.64581299]
[-26.84545135 597.75579834]
[-21.18266487 583.86578369]
[-15.51987934 569.97576904]
[-9.85709190 556.08569336]
[-4.19430590 542.19567871]
[1.46848083 528.30566406]
[7.13126755 514.41564941]
[4.77130175 499.70916748]
[17.14588356 489.85116577]
[21.54688263 475.51132202]
[24.65099335 460.83602905]
[27.75510216 446.16073608]
[30.85921288 431.48541260]
[33.96332169 416.81011963]
[37.06743240 402.13482666]
[40.17154312 387.45950317]
[43.27565384 372.78421021]
[41.58438492 365.58966064]
[46.53676987 357.91427612]
[49.85902786 343.28680420]
[53.18128967 328.65936279]
[56.50354767 314.03189087]
[54.94393921 310.86962891]
[54.83852005 306.79483032]
[56.59949875 302.49923706]
[60.31457138 298.83242798]
[64.28666687 284.36791992]
[68.25876617 269.90338135]
[71.14403534 255.18350220]
[72.92650604 240.28977966]
[74.70896912 225.39607239]
[76.49143219 210.50234985]
[67.66352081 203.27502441]
[63.37629700 192.57290649]
[64.80223083 181.01173401]
[71.70188904 171.47781372]
[82.45493317 166.40744019]
[84.68004608 151.57339478]
[86.90516663 136.73934937]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[96.36685181 62.38212585]
[96.14352417 47.38378906]
[95.92019653 32.38545227]
[81.83253479 19.71848106]
[81.48331451 1.09615767]
[94.62757874 -11.64526844]
[93.95779419 -26.63030815]
[93.28800964 -41.61534500]
[92.50669098 -56.59498215]
[91.61386871 -71.56838989]
[80.07598114 -82.03331757]
[79.38383484 -97.23120117]
[89.43165588 -108.16632843]
[88.53884125 -123.13973236]
[87.64602661 -138.11314392]
[86.53037262 -153.07159424]
[85.19213867 -168.01177979]
[83.85390472 -182.95196533]
[82.51567078 -197.89215088]
[79.51139832 -202.16079712]
[78.54187012 -206.70098877]
[79.36978149 -210.69218445]
[81.46656036 -213.52694702]
[80.79677582 -228.51197815]
[80.12699127 -243.49702454]
[65.93659973 -249.02447510]
[55.22587585 -259.85037231]
[49.85050583 -274.09909058]
[50.74180984 -289.30187988]
[57.74536133 -302.82482910]
[69.64775085 -312.32498169]
[84.38682556 -316.15640259]
[99.40894318 -313.65524292]
[112.11143494 -305.25482178]
[120.29351807 -292.41064453]
[122.53759766 -277.34796143]
[118.45486450 -262.67651367]
[108.75269318 -250.93823242]
[95.11203003 -244.16680908]
[95.78181458 -229.18176270]
[96.45159912 -214.19673157]
[97.45585632 -199.23037720]
[98.79409027 -184.29019165]
[100.13232422 -169.35000610]
[101.47055817 -154.40982056]
[104.49599457 -150.71444702]
[105.23213196 -145.07928467]
[102.61943054 -139.00595093]
[103.51224518 -124.03254700]
[104.40505981 -109.05914307]
[115.68111420 -99.39549255]
[116.79985809 -84.22304535]
[106.58728027 -72.46120453]
[107.48009491 -57.48780060]
[111.01614380 -50.99795151]
[108.27304840 -42.28513336]
[108.94283295 -27.30009270]
[109.61261749 -12.31505394]
[119.50080109 -6.62382507]
[125.47561646 3.23605609]
[125.95379639 14.87501144]
[120.70095825 25.40632629]
[110.91853333 32.16212463]
[111.14186096 47.16046143]
[111.36518860 62.15879822]
[120.03324127 49.91686630]
[133.61936951 43.55940628]
[148.57217407 44.74824524]
[160.98304749 53.17262268]
[167.60781860 66.63042450]
[166.71478271 81.60382080]
[158.53736877 94.17878723]
[145.21313477 101.06827545]
[130.22502136 100.47137451]
[117.49086761 92.54412842]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[101.73921204 138.96446228]
[99.51409149 153.79850769]
[97.28897858 168.63255310]
[109.12278748 183.42698669]
[106.43099213 201.85704041]
[91.38515472 212.28482056]
[89.60268402 227.17852783]
[87.82022095 242.07225037]
[86.03775787 256.96597290]
[96.26363373 245.99183655]
[110.57731628 241.50648499]
[125.23725128 244.68238831]
[136.41136169 254.68934631]
[141.17877197 268.91156006]
[138.29327393 283.63140869]
[128.50914001 295.00115967]
[114.38392639 300.04873657]
[99.60991669 297.45477295]
[88.04901123 287.89727783]
[82.72328949 273.87548828]
[78.75119019 288.33999634]
[74.77909851 302.80453491]
[71.13101196 317.35415649]
[67.80874634 331.98162842]
[64.48648834 346.60906982]
[61.16423035 361.23654175]
[57.95095444 375.88833618]
[54.84684753 390.56362915]
[51.74273682 405.23892212]
[48.63862610 419.91424561]
[45.53451538 434.58953857]
[42.43040466 449.26483154]
[39.32629395 463.94012451]
[36.22218323 478.61544800]
[46.78403854 467.96426392]
[60.89213562 462.86901855]
[75.82242584 464.31350708]
[88.69210052 472.01879883]
[97.01622772 484.49713135]
[99.18755341 499.33914185]
[94.78681946 513.67907715]
[84.66374969 524.74810791]
[70.77294159 530.40899658]
[55.79649734 529.56866455]
[42.62613297 522.38940430]
[33.80483627 510.25744629]
[31.03591156 495.51397705]
[32.99083710 511.21392822]
[21.02129364 520.07843018]
[15.35850811 533.96844482]
[9.69572163 547.85845947]
[4.03293467 561.74853516]
[-1.62985194 575.63854980]
[-7.29263878 589.52856445]
[-12.95542526 603.41857910]
[-18.61821175 617.30859375]
[-6.00966883 625.51965332]
[4.81688499 635.96868896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[38 199]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[48 178]
[49 177]
[50 176]
[51 175]
[55 174]
[56 173]
[57 172]
[58 161]
[59 160]
[60 159]
[61 158]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 149]
[72 148]
[73 137]
[74 136]
[75 135]
[78 130]
[79 129]
[80 128]
[81 126]
[82 125]
[85 122]
[86 121]
[87 120]
[88 117]
[89 116]
[90 115]
[91 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
