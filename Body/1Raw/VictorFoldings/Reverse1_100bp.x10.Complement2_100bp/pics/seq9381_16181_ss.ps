%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-41.47851181 608.70526123]
[-48.84297943 621.78338623]
[-57.29003143 634.18994141]
[-66.75880432 645.83532715]
[-77.18107605 656.63580322]
[-88.48175812 666.51348877]
[-100.57941437 675.39721680]
[-113.38688660 683.22296143]
[-126.81189728 689.93438721]
[-140.75770569 695.48309326]
[-155.12385559 699.82910156]
[-169.80680847 702.94110107]
[-184.70079041 704.79669189]
[-199.69848633 705.38250732]
[-214.69181824 704.69427490]
[-229.57276917 702.73699951]
[-244.23413086 699.52478027]
[-258.57025146 695.08074951]
[-272.47784424 689.43688965]
[-285.85668945 682.63397217]
[-298.61041260 674.72088623]
[-310.64712524 665.75476074]
[-321.88006592 655.80010986]
[-332.22833252 644.92871094]
[-341.61734009 633.21887207]
[-349.97943115 620.75494385]
[-357.25442505 607.62677002]
[-363.38980103 593.92895508]
[-368.34146118 579.76013184]
[-372.07363892 565.22247314]
[-374.55947876 550.42059326]
[-375.78106689 535.46130371]
[-375.72961426 520.45227051]
[-374.40548706 505.50164795]
[-371.81820679 490.71719360]
[-367.98645020 476.20544434]
[-362.93777466 462.07092285]
[-356.70861816 448.41546631]
[-349.34381104 435.33749390]
[-340.89642334 422.93121338]
[-331.42736816 411.28601074]
[-321.00482178 400.48580933]
[-309.70388794 390.60842896]
[-297.60598755 381.72503662]
[-284.79830933 373.89959717]
[-271.37313843 367.18853760]
[-257.42718506 361.64019775]
[-243.06091309 357.29455566]
[-228.37788391 354.18292236]
[-213.48385620 352.32772827]
[-198.48614502 351.74230957]
[-183.49282837 352.43093872]
[-168.61192322 354.38858032]
[-153.95063782 357.60119629]
[-139.61463928 362.04559326]
[-125.70719147 367.68978882]
[-112.32851410 374.49307251]
[-99.57499695 382.40646362]
[-90.61429596 370.37707520]
[-81.65360260 358.34771729]
[-72.69290924 346.31832886]
[-71.29488373 331.48947144]
[-56.84595108 325.04440308]
[-55.44792938 310.21557617]
[-40.99899292 303.77050781]
[-32.03829575 291.74111938]
[-23.07760048 279.71176147]
[-14.11690426 267.68237305]
[-5.15620852 255.65299988]
[3.80448747 243.62361145]
[12.76518345 231.59423828]
[21.72587967 219.56486511]
[30.68657494 207.53549194]
[39.64727020 195.50610352]
[48.60796738 183.47673035]
[56.45972443 170.69589233]
[63.13991928 157.26551819]
[69.82011414 143.83512878]
[76.50030518 130.40475464]
[83.18050385 116.97438049]
[89.86069489 103.54400635]
[94.15482330 89.17179871]
[95.93728638 74.27807617]
[97.71974945 59.38436127]
[91.67716217 44.76253891]
[100.87203217 33.04487610]
[102.65450287 18.15115929]
[100.40792084 11.93308830]
[101.47816467 6.35172653]
[104.71818542 2.84297991]
[106.94330597 -11.99106407]
[109.16842651 -26.82510757]
[102.03295135 -43.80057907]
[113.49208832 -57.09174728]
[115.49610138 -71.95727539]
[117.50011444 -86.82279968]
[119.50412750 -101.68833160]
[113.67990875 -116.39849854]
[123.04821777 -127.97795868]
[109.18127441 -133.94540405]
[97.43927765 -143.43371582]
[88.69355774 -155.73880005]
[83.59310913 -169.94752502]
[82.51641846 -185.00552368]
[85.54338837 -199.79539490]
[92.44938660 -213.21961975]
[102.72195435 -224.28202820]
[115.59878540 -232.16172791]
[130.12434387 -236.27398682]
[145.22073364 -236.31365967]
[159.76770020 -232.27778625]
[172.68577576 -224.46586609]
[183.01632690 -213.45758057]
[189.99278259 -200.06983948]
[193.09742737 -185.29609680]
[192.09988403 -170.23263550]
[187.07418823 -155.99729919]
[178.39324951 -143.64643860]
[166.70127869 -134.09654236]
[152.86587524 -128.05630493]
[137.91374207 -125.97394562]
[143.88130188 -112.32706451]
[134.36965942 -99.68431854]
[132.36564636 -84.81878662]
[130.36163330 -69.95326233]
[128.35762024 -55.08773422]
[135.43991089 -45.28121567]
[133.89198303 -32.88010025]
[124.00246429 -24.59999084]
[121.77735138 -9.76594639]
[119.55223083 5.06809711]
[117.54821777 19.93362617]
[115.76575470 34.82734299]
[121.93583679 48.38386536]
[112.61347198 61.16682816]
[110.83100128 76.06054688]
[109.04853821 90.95426178]
[117.27947998 78.41426086]
[128.33593750 68.27745056]
[141.54177856 61.16370773]
[156.08950806 57.50802994]
[171.08947754 57.53396606]
[185.62446594 61.23993683]
[198.80563354 68.39931488]
[209.82696533 78.57430267]
[218.01448059 91.14269257]
[222.86753845 105.33592987]
[224.08934021 120.28608704]
[221.60519409 135.07894897]
[215.56700134 148.80995178]
[206.34399414 160.63940430]
[194.50016785 169.84396362]
[180.75978088 175.86074829]
[165.96305847 178.32183838]
[151.01483154 177.07673645]
[136.82917786 172.20156860]
[124.27355957 163.99446106]
[114.11576080 152.95729065]
[106.97693634 139.76496887]
[103.29362488 125.22422791]
[103.29106903 110.22420502]
[96.61087799 123.65457916]
[89.93067932 137.08496094]
[83.25048828 150.51533508]
[76.57029724 163.94570923]
[69.89009857 177.37608337]
[82.78268433 169.70919800]
[97.71721649 168.30923462]
[111.81005859 173.44653320]
[122.34011078 184.12913513]
[127.27418518 198.29440308]
[125.65958405 213.20726013]
[117.80806732 225.98825073]
[105.23564148 234.16957092]
[90.36983490 236.17152405]
[76.08100891 231.60758972]
[65.12811279 221.35897827]
[59.62598038 207.40454102]
[60.63734436 192.43742371]
[51.67665100 204.46679688]
[42.71595383 216.49618530]
[33.75525665 228.52555847]
[24.79456139 240.55493164]
[15.83386517 252.58432007]
[6.87316942 264.61367798]
[-2.08752680 276.64306641]
[-11.04822254 288.67245483]
[-20.00891876 300.70181274]
[-28.96961403 312.73120117]
[-31.00856400 328.42047119]
[-44.81657410 334.00512695]
[-46.85552216 349.69439697]
[-60.66352844 355.27902222]
[-69.62422943 367.30841064]
[-78.58492279 379.33776855]
[-87.54561615 391.36715698]
[-76.31241608 401.32150269]
[-65.96387482 412.19262695]
[-56.57456589 423.90222168]
[-48.21213150 436.36593628]
[-40.93682480 449.49389648]
[-34.80106735 463.19158936]
[-29.84906769 477.36026001]
[-26.11650658 491.89785767]
[-23.63027763 506.69964600]
[-22.40829468 521.65893555]
[-22.45936012 536.66796875]
[-23.78310776 551.61859131]
[-26.36999893 566.40313721]
[-30.20139503 580.91497803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 196]
[59 195]
[60 194]
[61 193]
[63 191]
[65 189]
[66 188]
[67 187]
[68 186]
[69 185]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 166]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
[82 137]
[83 136]
[84 135]
[86 133]
[87 132]
[90 131]
[91 130]
[92 129]
[94 126]
[95 125]
[96 124]
[97 123]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
