%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[56.61655426 741.81866455]
[46.37860107 730.78375244]
[38.57183075 717.91363525]
[33.51591873 703.73541260]
[31.41790581 688.82958984]
[32.36370087 673.80657959]
[36.31457520 659.28161621]
[43.10874557 645.84936523]
[52.46799088 634.05999756]
[64.00906372 624.39624023]
[77.25935364 617.25378418]
[91.67627716 612.92510986]
[90.33803558 597.98492432]
[88.99980164 583.04473877]
[87.66156769 568.10455322]
[86.32333374 553.16436768]
[77.48142242 541.17816162]
[83.95667267 526.74273682]
[82.61843872 511.80255127]
[74.38805389 524.34289551]
[60.72801971 530.53997803]
[45.87104416 528.47344971]
[34.42073059 518.78375244]
[29.92507744 504.47332764]
[33.77711105 489.97634888]
[44.78324127 479.78494263]
[59.53309631 477.05697632]
[73.45627594 482.63775635]
[82.23860931 494.79824829]
[82.90839386 479.81323242]
[83.57817841 464.82818604]
[84.24796295 449.84313965]
[84.91774750 434.85809326]
[85.58753967 419.87307739]
[78.42625427 406.81298828]
[86.77204895 393.37207031]
[87.44183350 378.38705444]
[88.11161804 363.40200806]
[88.78140259 348.41696167]
[89.45118713 333.43191528]
[79.51097107 325.23306274]
[76.05640411 312.61767578]
[80.56481934 300.13229370]
[91.60102844 292.41110229]
[92.49384308 277.43768311]
[93.16362762 262.45266724]
[93.61023712 247.45930481]
[94.05683899 232.46595764]
[94.50344849 217.47261047]
[94.83842468 202.47634888]
[95.06175232 187.47801208]
[95.28507996 172.47967529]
[95.06175232 157.48133850]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[83.61677551 74.70264435]
[90.77805328 61.64257812]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[88.76869965 16.68746376]
[87.54172516 1.73772979]
[85.75925446 -13.15598774]
[83.97679138 -28.04970551]
[82.19432831 -42.94342041]
[72.87195587 -55.72638321]
[79.04203796 -69.28290558]
[77.25957489 -84.17662048]
[75.47711182 -99.07034302]
[65.37879181 -87.97872162]
[50.40233994 -87.13863373]
[39.12693405 -97.03131866]
[38.01164246 -111.98979950]
[47.69535828 -123.44517517]
[62.63080597 -124.83528900]
[74.26182556 -115.36465454]
[73.81522369 -130.35800171]
[73.36861420 -145.35134888]
[63.32985687 -160.78848267]
[72.24447632 -175.90458679]
[71.57468414 -190.88961792]
[70.90489960 -205.87466431]
[70.23511505 -220.85969543]
[61.26068115 -230.12373352]
[61.01131439 -242.61859131]
[69.07539368 -251.63508606]
[68.62878418 -266.62844849]
[58.59002686 -282.06558228]
[67.50463867 -297.18167114]
[66.83485413 -312.16671753]
[52.07235336 -315.25204468]
[38.54129410 -321.91247559]
[27.09225464 -331.72930908]
[18.44493294 -344.08544922]
[13.14290333 -358.20422363]
[11.51945782 -373.19805908]
[13.67664814 -388.12445068]
[19.47887039 -402.04513550]
[28.56139183 -414.08499146]
[40.35327911 -423.48724365]
[54.11328125 -429.66082764]
[68.97643280 -432.21768188]
[84.00843048 -430.99703979]
[98.26434326 -426.07568359]
[110.84803772 -417.76296997]
[120.96848297 -406.58139038]
[127.98950958 -393.23388672]
[131.46977234 -378.55947876]
[131.19047546 -363.48059082]
[127.16920471 -348.94509888]
[119.65872955 -335.86672974]
[109.13115692 -325.06762695]
[96.24827576 -317.22656250]
[81.81989288 -312.83648682]
[82.48967743 -297.85144043]
[91.20204163 -289.45971680]
[91.88268280 -276.98089600]
[83.62213135 -267.07504272]
[84.06874084 -252.08169556]
[94.08294678 -237.67050171]
[85.22015381 -221.52947998]
[85.88993835 -206.54444885]
[86.55972290 -191.55940247]
[87.22951508 -176.57437134]
[95.94187164 -168.18261719]
[96.62252045 -155.70382690]
[88.36196899 -145.79795837]
[88.80857086 -130.80461121]
[89.25518036 -115.81125641]
[90.37082672 -100.85280609]
[92.15328979 -85.95909119]
[93.93576050 -71.06536865]
[103.13063049 -59.34770966]
[97.08804321 -44.72588730]
[98.87050629 -29.83217049]
[100.65297699 -14.93845367]
[102.43544006 -0.04473608]
[113.61721802 -10.04312897]
[128.43077087 -7.68547821]
[135.95611572 5.29024315]
[130.64582825 19.31881714]
[116.41446686 24.05889893]
[103.75373840 16.01767731]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[105.76309204 60.97279358]
[114.06097412 73.34188080]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.04679108 156.81155396]
[112.51241302 160.38571167]
[113.60277557 164.17723083]
[113.41841888 167.72708130]
[112.19863129 170.65603638]
[110.28341675 172.70300293]
[110.06008911 187.70133972]
[109.83676147 202.69967651]
[112.83805084 211.32696533]
[109.49679565 217.91921997]
[109.05019379 232.91256714]
[108.60358429 247.90591431]
[108.15698242 262.89926147]
[110.94934845 268.89212036]
[110.38131714 274.54669189]
[107.46724701 278.33050537]
[106.57443237 293.30392456]
[118.42359924 306.17312622]
[117.32096100 323.29327393]
[104.43622589 334.10171509]
[103.76644135 349.08676147]
[103.09665680 364.07177734]
[102.42687225 379.05682373]
[101.75708771 394.04187012]
[108.87046051 408.17376709]
[100.57257843 420.54284668]
[99.90278625 435.52789307]
[99.23300171 450.51293945]
[98.56321716 465.49795532]
[97.89343262 480.48300171]
[97.22364807 495.46804810]
[97.55862427 510.46429443]
[98.89685822 525.40447998]
[107.83449554 538.45935059]
[101.26351929 551.82617188]
[102.60175323 566.76635742]
[103.93998718 581.70654297]
[105.27822113 596.64672852]
[106.61645508 611.58691406]
[121.57316589 613.28448486]
[135.88188171 617.95837402]
[148.95668030 625.41723633]
[160.26213074 635.35565186]
[169.33531189 647.36657715]
[175.80467224 660.95819092]
[179.40530396 675.57391357]
[179.98974609 690.61535645]
[177.53407288 705.46643066]
[172.13883972 719.51904297]
[164.02497864 732.19775391]
[153.52476501 742.98339844]
[141.06816101 751.43432617]
[127.16524506 757.20440674]
[112.38535309 760.05743408]
[97.33370209 759.87652588]
[82.62665558 756.66906738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[18 187]
[19 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[44 171]
[45 170]
[46 167]
[47 166]
[48 165]
[49 164]
[50 162]
[51 161]
[52 160]
[53 155]
[54 154]
[55 153]
[56 152]
[58 150]
[60 148]
[61 147]
[62 146]
[63 145]
[64 139]
[65 138]
[66 137]
[67 136]
[69 134]
[70 133]
[71 132]
[78 131]
[79 130]
[80 129]
[82 126]
[83 125]
[84 124]
[85 123]
[88 121]
[89 120]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
