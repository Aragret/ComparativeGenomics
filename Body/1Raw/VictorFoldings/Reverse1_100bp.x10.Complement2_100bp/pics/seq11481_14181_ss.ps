%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[28.67456245 576.88525391]
[19.69385910 588.91711426]
[9.50466728 599.94427490]
[-1.78137457 609.84594727]
[-14.04061031 618.51361084]
[-27.13871956 625.85235596]
[-40.93219376 631.78173828]
[-55.26990509 636.23681641]
[-69.99475861 639.16876221]
[-84.94542694 640.54547119]
[-99.95809937 640.35186768]
[-114.86827850 638.59002686]
[-129.51261902 635.27923584]
[-143.73065186 630.45587158]
[-157.36660767 624.17266846]
[-170.27108765 616.49853516]
[-182.30268860 607.51751709]
[-193.32958984 597.32806396]
[-203.23097229 586.04180908]
[-211.89837646 573.78234863]
[-219.23680115 560.68408203]
[-225.16586304 546.89044189]
[-229.62059021 532.55261230]
[-232.55218506 517.82769775]
[-233.92852783 502.87698364]
[-233.73452759 487.86431885]
[-231.97232056 472.95419312]
[-228.66120911 458.30993652]
[-223.83746338 444.09201050]
[-217.55393982 430.45620728]
[-209.87950134 417.55194092]
[-200.89820862 405.52053833]
[-190.70848083 394.49389648]
[-179.42196655 384.59277344]
[-167.16230774 375.92568970]
[-154.06384277 368.58755493]
[-140.27008057 362.65884399]
[-125.93215179 358.20443726]
[-111.20715332 355.27322388]
[-96.25641632 353.89724731]
[-81.24375916 354.09161377]
[-66.33366394 355.85418701]
[-51.68948364 359.16564941]
[-37.47168350 363.98974609]
[-31.19432259 350.36642456]
[-24.91696167 336.74310303]
[-24.97274971 329.35266113]
[-18.44338608 322.96475220]
[-11.96389008 309.43640137]
[-5.48439455 295.90808105]
[0.69137412 282.23840332]
[6.56033516 268.43423462]
[12.42929554 254.63005066]
[-2.24594545 257.73443604]
[-13.91944790 248.31481934]
[-13.98594093 233.31497192]
[-2.39640689 223.79222107]
[12.30577946 226.76638794]
[19.28264809 240.04338074]
[26.16206169 226.71395874]
[25.12355232 211.85560608]
[38.32827759 203.14091492]
[45.20768738 189.81147766]
[40.44833374 175.74435425]
[47.23515320 162.12841797]
[62.02231979 157.23175049]
[68.90173340 143.90231323]
[75.78114319 130.57289124]
[82.66056061 117.24345398]
[89.53997040 103.91402435]
[96.31996155 90.53375244]
[103.00016022 77.10337830]
[99.64326477 64.64970398]
[105.48370361 53.60103607]
[116.90831757 49.62551498]
[116.36186981 33.81375122]
[129.07453918 26.05247116]
[135.95394897 12.72304153]
[142.83335876 -0.60638762]
[149.71276855 -13.93581676]
[142.90847778 -27.75637245]
[145.51638794 -42.75811386]
[156.32989502 -53.22386932]
[171.05627441 -55.29062653]
[177.93569946 -68.62005615]
[179.09059143 -77.68118286]
[185.01805115 -82.09559631]
[192.09515381 -95.32112122]
[199.17225647 -108.54665375]
[206.24935913 -121.77217865]
[213.32646179 -134.99771118]
[220.20588684 -148.32713318]
[226.88607788 -161.75750732]
[233.56626892 -175.18788147]
[240.24645996 -188.61825562]
[227.68493652 -196.84896851]
[216.18507385 -206.50761414]
[205.90832520 -217.45863342]
[196.99894714 -229.54826355]
[189.58200073 -242.60679626]
[183.76164246 -256.45092773]
[179.61956787 -270.88629150]
[177.21391296 -285.71020508]
[176.57844543 -300.71463013]
[177.72212219 -315.68890381]
[180.62884521 -330.42279053]
[185.25782776 -344.70944214]
[191.54409790 -358.34832764]
[199.39938354 -371.14797974]
[208.71342468 -382.92868042]
[219.35545349 -393.52505493]
[231.17608643 -402.78839111]
[244.00938416 -410.58859253]
[257.67517090 -416.81616211]
[271.98159790 -421.38369751]
[286.72784424 -424.22708130]
[301.70687866 -425.30636597]
[316.70840454 -424.60641479]
[331.52188110 -422.13705444]
[345.93930054 -417.93295288]
[359.75827026 -412.05316162]
[372.78482056 -404.58016968]
[384.83602905 -395.61889648]
[395.74276733 -385.29516602]
[405.35189819 -373.75387573]
[413.52853394 -361.15710449]
[420.15786743 -347.68164062]
[425.14688110 -333.51666260]
[428.42547607 -318.86105347]
[429.94763184 -303.92050171]
[429.69201660 -288.90481567]
[427.66220093 -274.02474976]
[423.88668823 -259.48922729]
[418.41848755 -245.50227356]
[411.33432007 -232.26023865]
[402.73370361 -219.94905090]
[392.73730469 -208.74153137]
[381.48550415 -198.79499817]
[369.13626099 -190.24909973]
[355.86291504 -183.22381592]
[341.85183716 -177.81774902]
[327.29968262 -174.10679626]
[312.41073608 -172.14306641]
[297.39407349 -171.95413208]
[282.46044922 -173.54261780]
[267.81951904 -176.88624573]
[253.67683411 -181.93806458]
[246.99664307 -168.50769043]
[240.31645203 -155.07731628]
[233.63626099 -141.64694214]
[234.27975464 -136.91461182]
[231.95724487 -131.72779846]
[226.55200195 -127.92060089]
[219.47488403 -114.69507599]
[212.39778137 -101.46954346]
[205.32067871 -88.24401855]
[198.24357605 -75.01848602]
[191.26512146 -61.74064255]
[184.38571167 -48.41121292]
[191.23240662 -35.21043015]
[188.96627808 -20.33331299]
[178.24919128 -9.51677799]
[163.04220581 -7.05640411]
[156.16278076 6.27302504]
[149.28337097 19.60245323]
[142.40396118 32.93188477]
[143.44247437 47.79024124]
[130.23774719 56.50492859]
[132.00823975 73.96437836]
[116.43053436 83.78356934]
[109.75033569 97.21395111]
[109.26556396 105.25991058]
[102.86940002 110.79344177]
[95.98999023 124.12287140]
[89.11057281 137.45230103]
[82.23116302 150.78172302]
[75.35175323 164.11116028]
[79.92700195 179.00091553]
[72.76042175 192.42085266]
[58.53711700 196.69088745]
[51.65770721 210.02032471]
[52.20415497 225.83209229]
[39.49148941 233.59336853]
[32.61207581 246.92279053]
[26.23347282 260.49899292]
[20.36451149 274.30319214]
[14.49555111 288.10736084]
[15.13044453 293.28848267]
[13.84318829 297.74899292]
[11.23014450 300.87744141]
[8.04395103 302.38757324]
[1.56445539 315.91592407]
[-4.91504049 329.44424438]
[-11.29364586 343.02047729]
[-17.57100677 356.64376831]
[-23.84836769 370.26708984]
[-10.94352150 377.94061279]
[1.08851600 386.92102051]
[12.11591530 397.10992432]
[22.01785469 408.39572144]
[30.68584251 420.65475464]
[38.02490997 433.75268555]
[43.95463943 447.54602051]
[48.41007233 461.88363647]
[51.34238434 476.60839844]
[52.71944809 491.55905151]
[52.52617645 506.57171631]
[50.76469040 521.48193359]
[47.45428467 536.12634277]
[42.63123322 550.34448242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 196]
[45 195]
[46 194]
[48 193]
[49 192]
[50 191]
[51 187]
[52 186]
[53 185]
[59 184]
[60 183]
[62 181]
[63 180]
[66 177]
[67 176]
[68 175]
[69 174]
[70 173]
[71 171]
[72 170]
[75 168]
[77 166]
[78 165]
[79 164]
[80 163]
[84 159]
[85 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
