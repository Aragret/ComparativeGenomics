%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[124.85470581 393.54724121]
[124.18492126 378.56219482]
[123.51513672 363.57714844]
[115.21724701 351.20806885]
[122.33061981 337.07617188]
[121.66083527 322.09112549]
[120.99105072 307.10610962]
[112.69316864 294.73699951]
[119.80654144 280.60510254]
[119.13675690 265.62008667]
[118.46696472 250.63504028]
[117.12873077 235.69485474]
[115.12471771 220.82931519]
[113.12070465 205.96379089]
[111.11669159 191.09826660]
[109.11267853 176.23274231]
[106.44688416 161.47151184]
[103.12462616 146.84405518]
[92.76059723 136.14656067]
[97.24922180 120.97544861]
[93.92696381 106.34799194]
[91.49493408 104.51094055]
[89.67758179 101.74837494]
[88.81899261 98.28625488]
[89.17494202 94.47448730]
[90.86988068 90.75156403]
[88.42414856 75.95229340]
[85.97842407 61.15302277]
[83.53269196 46.35375214]
[81.08696747 31.55448151]
[77.33066559 17.03242302]
[72.29375458 2.90339303]
[67.25683594 -11.22563648]
[62.11487579 -25.31677818]
[56.86815643 -39.36924744]
[51.62144089 -53.42171860]
[46.37472153 -67.47418976]
[41.12800217 -81.52666473]
[29.05241585 -91.74873352]
[31.84920120 -106.37840271]
[26.60248375 -120.43087769]
[21.35576439 -134.48335266]
[16.10904694 -148.53581238]
[10.86232853 -162.58828735]
[5.30310249 -176.52009583]
[-0.56585830 -190.32426453]
[-6.43481922 -204.12844849]
[-12.30377960 -217.93261719]
[-17.34782028 -222.20686340]
[-19.19831276 -227.58020020]
[-18.13518715 -232.23625183]
[-23.59054375 -246.20904541]
[-29.04590225 -260.18185425]
[-34.50125885 -274.15463257]
[-40.06048584 -288.08645630]
[-45.72327042 -301.97647095]
[-60.05209732 -297.50897217]
[-74.70817566 -294.27273560]
[-89.58590698 -292.29107666]
[-104.57810211 -291.57830811]
[-119.57672882 -292.13955688]
[-134.47372437 -293.97073364]
[-149.16175842 -297.05871582]
[-163.53500366 -301.38119507]
[-177.48988342 -306.90704346]
[-190.92587280 -313.59646606]
[-203.74613953 -321.40121460]
[-215.85832214 -330.26513672]
[-227.17515564 -340.12429810]
[-237.61511230 -350.90768433]
[-247.10293579 -362.53759766]
[-255.57029724 -374.93023682]
[-262.95617676 -387.99633789]
[-269.20733643 -401.64172363]
[-274.27877808 -415.76809692]
[-278.13394165 -430.27365112]
[-280.74502563 -445.05392456]
[-282.09326172 -460.00234985]
[-282.16891479 -475.01129150]
[-280.97140503 -489.97256470]
[-278.50942993 -504.77841187]
[-274.80068970 -519.32208252]
[-269.87188721 -533.49884033]
[-263.75857544 -547.20660400]
[-256.50476074 -560.34643555]
[-248.16276550 -572.82379150]
[-238.79263306 -584.54876709]
[-228.46191406 -595.43682861]
[-217.24502563 -605.40954590]
[-205.22279358 -614.39508057]
[-192.48184204 -622.32867432]
[-179.11396790 -629.15319824]
[-165.21549988 -634.81945801]
[-150.88655090 -639.28656006]
[-136.23039246 -642.52239990]
[-121.35260773 -644.50366211]
[-106.36039734 -645.21606445]
[-91.36178589 -644.65441895]
[-76.46483612 -642.82287598]
[-61.77688217 -639.73449707]
[-47.40375137 -635.41168213]
[-33.44901276 -629.88543701]
[-20.01320267 -623.19567871]
[-7.19313288 -615.39056396]
[4.91882658 -606.52636719]
[16.23540878 -596.66693115]
[26.67507362 -585.88330078]
[36.16260529 -574.25311279]
[44.62964249 -561.86022949]
[52.01517868 -548.79394531]
[58.26600266 -535.14843750]
[63.33707047 -521.02191162]
[67.19185638 -506.51623535]
[69.80256653 -491.73590088]
[71.15041351 -476.78744507]
[71.22566986 -461.77850342]
[70.02779388 -446.81726074]
[67.56542206 -432.01147461]
[63.85630035 -417.46789551]
[58.92714310 -403.29122925]
[52.81347275 -389.58370972]
[45.55933380 -376.44400024]
[37.21699524 -363.96685791]
[27.84656906 -352.24215698]
[17.51556587 -341.35433960]
[6.29842234 -331.38189697]
[-5.72403908 -322.39666748]
[-18.46519470 -314.46340942]
[-31.83324432 -307.63925171]
[-26.17045784 -293.74923706]
[-20.73441696 -288.74209595]
[-20.52846146 -279.61001587]
[-15.07310390 -265.63720703]
[-9.61774635 -251.66439819]
[-4.16238976 -237.69160461]
[1.50039697 -223.80157471]
[7.36935759 -209.99740601]
[13.23831844 -196.19322205]
[19.10727882 -182.38905334]
[22.22286415 -180.73814392]
[24.69360924 -177.49617004]
[25.78040886 -172.98260498]
[24.91479874 -167.83500671]
[30.16151810 -153.78253174]
[35.40823746 -139.73007202]
[40.65495300 -125.67759705]
[45.90167236 -111.62512207]
[57.60197830 -102.40818024]
[55.18047333 -86.77338409]
[60.42719269 -72.72090912]
[65.67391205 -58.66843796]
[70.92063141 -44.61596680]
[76.16734314 -30.56349564]
[81.45189667 -25.39674377]
[81.38586426 -16.26255226]
[86.42278290 -2.13352323]
[91.45969391 11.99550629]
[94.88363647 -2.60848784]
[104.23741150 -14.33481789]
[117.71496582 -20.91931152]
[132.71398926 -21.09060860]
[146.33840942 -14.81563282]
[155.95755005 -3.30598402]
[159.71412659 11.21600533]
[156.88278198 25.94636536]
[148.01022339 38.04089737]
[134.80958557 45.16433334]
[119.82972717 45.94124985]
[105.96300507 40.22163773]
[95.88623810 29.10875511]
[98.33197021 43.90802383]
[100.77769470 58.70729446]
[103.22341919 73.50656891]
[105.66915131 88.30583954]
[108.55442047 103.02572632]
[111.87667847 117.65319061]
[122.47833252 129.39692688]
[117.75208282 143.52180481]
[121.07434082 158.14926147]
[129.96394348 146.06724548]
[144.77172852 143.67364502]
[157.01513672 152.33961487]
[159.68058777 167.10089111]
[151.24118042 179.50155640]
[136.53138733 182.43792725]
[123.97821045 174.22872925]
[125.98222351 189.09425354]
[127.98623657 203.95977783]
[129.99024963 218.82530212]
[131.99426270 233.69084167]
[141.92631531 222.45008850]
[156.88861084 221.38711548]
[168.31004333 231.11083984]
[169.64793396 246.05105591]
[160.13583374 257.64932251]
[145.22274780 259.26165771]
[133.45201111 249.96524048]
[134.12179565 264.95028687]
[134.79158020 279.93533325]
[143.13737488 293.37625122]
[135.97608948 306.43630981]
[136.64587402 321.42135620]
[137.31565857 336.40640259]
[145.66145325 349.84732056]
[138.50016785 362.90737915]
[139.16995239 377.89242554]
[139.83973694 392.87744141]
[149.11653137 406.40051270]
[141.80046082 421.07727051]
[125.41767120 421.80953979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[5 203]
[6 202]
[7 201]
[9 199]
[10 198]
[11 197]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 179]
[18 178]
[20 176]
[21 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 157]
[32 156]
[33 155]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[45 139]
[46 138]
[47 137]
[48 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 130]
[56 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
