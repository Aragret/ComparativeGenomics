%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[275.10064697 537.07751465]
[288.10479736 529.34790039]
[284.78253174 514.72045898]
[281.46029663 500.09298706]
[278.13803101 485.46554565]
[265.43722534 477.76974487]
[261.85961914 462.98275757]
[270.01776123 449.71316528]
[266.69552612 435.08569336]
[263.37326050 420.45822144]
[253.00923157 409.76074219]
[257.49786377 394.58963013]
[254.17558289 379.96215820]
[248.72023010 365.98937988]
[241.25248718 352.98040771]
[233.78474426 339.97146606]
[226.31701660 326.96249390]
[210.84017944 329.85333252]
[195.28262329 327.26541138]
[181.52836609 319.49349976]
[171.24943542 307.46130371]
[165.70260620 292.61160278]
[165.57572937 276.73342896]
[170.90252686 261.74639893]
[181.05628967 249.46873474]
[173.39569092 236.57241821]
[165.73509216 223.67608643]
[158.07449341 210.77975464]
[150.41389465 197.88343811]
[142.75329590 184.98710632]
[135.09269714 172.09077454]
[127.43209839 159.19445801]
[119.67571259 146.35551453]
[111.82395172 133.57467651]
[103.97219849 120.79383087]
[87.83689880 117.32687378]
[79.09365082 103.32960510]
[83.05612946 87.30879211]
[75.01495361 74.64626312]
[61.08539963 67.14439392]
[60.79417038 52.25263596]
[52.75299835 39.59011078]
[44.52418900 27.04871178]
[36.10956955 14.63121605]
[27.69495201 2.21372032]
[19.28033257 -10.20377541]
[5.13359451 -17.28758430]
[4.39911127 -32.16407013]
[-4.01550722 -44.58156586]
[-7.98725700 -46.33632278]
[-10.90098000 -48.99616241]
[-12.60206604 -52.11733246]
[-13.09589958 -55.25145721]
[-12.53551197 -57.99811172]
[-20.19610977 -70.89443970]
[-27.85670662 -83.79076385]
[-35.51730347 -96.68709564]
[-38.24110413 -81.93647003]
[-49.03513718 -71.52066803]
[-63.87350082 -69.32453918]
[-77.22184753 -76.16716766]
[-84.10157776 -89.49643707]
[-81.94671631 -104.34084320]
[-71.56098175 -115.16381073]
[-56.81798935 -117.92861938]
[-43.21565628 -111.60328674]
[-49.28948975 -125.31855011]
[-55.36332321 -139.03381348]
[-61.43715668 -152.74908447]
[-75.87414551 -148.59130859]
[-90.74282837 -146.43817139]
[-105.76621246 -146.32977295]
[-120.66442108 -148.26814270]
[-135.15989685 -152.21716309]
[-148.98262024 -158.10327148]
[-161.87506104 -165.81680298]
[-173.59706116 -175.21408081]
[-183.93022156 -186.12001038]
[-192.68206787 -198.33143616]
[-199.68954468 -211.62088013]
[-204.82209778 -225.74073792]
[-207.98413086 -240.42799377]
[-209.11672974 -255.40901184]
[-208.19880676 -270.40472412]
[-205.24743652 -285.13574219]
[-200.31761169 -299.32766724]
[-193.50117493 -312.71609497]
[-184.92510986 -325.05160522]
[-174.74919128 -336.10440063]
[-163.16297913 -345.66857910]
[-150.38232422 -353.56594849]
[-136.64532471 -359.64941406]
[-122.20787811 -363.80563354]
[-107.33895874 -365.95715332]
[-92.31556702 -366.06393433]
[-77.41757202 -364.12393188]
[-62.92251968 -360.17337036]
[-49.10044098 -354.28576660]
[-36.20883179 -346.57083130]
[-24.48785400 -337.17227173]
[-14.15586662 -326.26522827]
[-5.40534687 -314.05285645]
[1.60068989 -300.76266479]
[6.73172426 -286.64224243]
[9.89216900 -271.95465088]
[11.02314663 -256.97351074]
[10.10358715 -241.97790527]
[7.15062189 -227.24719238]
[2.21926308 -213.05581665]
[-4.59862137 -199.66812134]
[-13.17601871 -187.33354187]
[-23.35313606 -176.28184509]
[-34.94038010 -166.71891785]
[-47.72189331 -158.82292175]
[-41.64805603 -145.10765076]
[-35.57422256 -131.39237976]
[-29.50038910 -117.67711639]
[-22.62097740 -104.34768677]
[-14.96037960 -91.45136261]
[-7.29978228 -78.55503845]
[0.36081517 -65.65870667]
[8.40198803 -52.99618530]
[16.81660652 -40.57868958]
[30.36147499 -34.38306046]
[31.69782829 -18.61839294]
[40.11244583 -6.20089817]
[48.52706528 6.21659708]
[56.94168472 18.63409233]
[61.37948608 20.39901543]
[64.75569153 24.97047615]
[65.41551971 31.54893875]
[73.45669556 44.21146393]
[86.81108856 50.80762482]
[87.67748260 66.60509491]
[95.71865082 79.26761627]
[108.32976532 80.53781128]
[117.95488739 88.78466797]
[121.14367676 101.05191040]
[116.75304413 112.94207001]
[124.60479736 125.72291565]
[132.45655823 138.50375366]
[139.61505127 144.17770386]
[140.32843018 151.53385925]
[147.98902893 164.43017578]
[155.64962769 177.32650757]
[163.31022644 190.22283936]
[170.97082520 203.11917114]
[178.63140869 216.01548767]
[186.29200745 228.91181946]
[193.95260620 241.80815125]
[207.96614075 238.82106018]
[222.19580078 240.30566406]
[235.25175476 246.10360718]
[245.86291504 255.63592529]
[253.00067139 267.96081543]
[255.97863770 281.86660767]
[254.51863098 295.99099731]
[248.77656555 308.95440674]
[239.32595825 319.49478149]
[246.79370117 332.50372314]
[254.26144409 345.51266479]
[261.72918701 358.52163696]
[261.00564575 343.53909302]
[264.47650146 328.94616699]
[271.86795044 315.89370728]
[282.59713745 305.41113281]
[295.81787109 298.32507324]
[310.48751831 295.19442749]
[325.44918823 296.26605225]
[339.52294922 301.45544434]
[351.59884644 310.35333252]
[360.72454834 322.25802612]
[366.18035889 336.23065186]
[367.53601074 351.16925049]
[364.68460083 365.89575195]
[357.85098267 379.24871826]
[347.57409668 390.17507935]
[334.66442871 397.81317139]
[320.14007568 401.56060791]
[305.14648438 401.12182617]
[290.86614990 396.53146362]
[278.42523193 388.15148926]
[268.80303955 376.63989258]
[272.12530518 391.26736450]
[282.72695923 403.01110840]
[278.00070190 417.13598633]
[281.32296753 431.76342773]
[284.64523315 446.39089966]
[297.73501587 454.83453369]
[300.89587402 469.71618652]
[292.76547241 482.14328003]
[296.08773804 496.77072144]
[299.41000366 511.39819336]
[302.73226929 526.02563477]
[317.79953003 527.37957764]
[331.71014404 533.32513428]
[343.10134888 543.27978516]
[350.85708618 556.26843262]
[354.21755981 571.01837158]
[352.85357666 586.08471680]
[346.89868164 599.99139404]
[336.93637085 611.37591553]
[323.94256592 619.12292480]
[309.19033813 622.47357178]
[294.12490845 621.09942627]
[280.22225952 615.13525391]
[268.84442139 605.16528320]
[261.10607910 592.16632080]
[257.76538086 577.41186523]
[259.14956665 562.34735107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[8 188]
[9 187]
[10 186]
[12 184]
[13 183]
[14 162]
[15 161]
[16 160]
[17 159]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[32 143]
[33 141]
[34 140]
[35 139]
[38 135]
[39 134]
[41 132]
[42 131]
[43 128]
[44 127]
[45 126]
[46 125]
[48 123]
[49 122]
[54 121]
[55 120]
[56 119]
[57 118]
[66 117]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
