%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-81.07642365 508.42950439]
[-74.92668915 522.14544678]
[-70.99842834 536.65460205]
[-69.38838959 551.59960938]
[-70.13621521 566.61254883]
[-73.22349548 581.32360840]
[-78.57419586 595.37054443]
[-86.05654907 608.40740967]
[-95.48630524 620.11328125]
[-106.63123322 630.19970703]
[-119.21689606 638.41845703]
[-132.93334961 644.56707764]
[-147.44282532 648.49414062]
[-162.38800049 650.10290527]
[-177.40083313 649.35388184]
[-192.11164856 646.26538086]
[-206.15814209 640.91351318]
[-219.19442749 633.43011475]
[-230.89947510 623.99938965]
[-240.98501587 612.85357666]
[-249.20271301 600.26727295]
[-255.35018921 586.55029297]
[-259.27606201 572.04052734]
[-260.88363647 557.09521484]
[-260.13333130 542.08239746]
[-257.04360962 527.37188721]
[-251.69059753 513.32580566]
[-244.20610046 500.29016113]
[-234.77441406 488.58587646]
[-223.62780762 478.50125122]
[-211.04078674 470.28460693]
[-197.32331848 464.13824463]
[-182.81320190 460.21359253]
[-167.86776733 458.60723877]
[-152.85504150 459.35879517]
[-138.14476013 462.44970703]
[-124.09914398 467.80389404]
[-116.63140106 454.79492188]
[-109.16365814 441.78598022]
[-101.69591522 428.77703857]
[-112.07661438 418.79876709]
[-119.76746368 406.61483765]
[-124.31605530 392.93344116]
[-125.45278931 378.55114746]
[-123.10685730 364.30639648]
[-117.41059113 351.03079224]
[-108.69207001 339.50039673]
[-97.45617676 330.39047241]
[-84.35539246 324.23587036]
[-70.15189362 321.39965820]
[-55.67319489 322.05169678]
[-41.76397705 326.15850830]
[-34.10337830 313.26217651]
[-26.44278145 300.36584473]
[-18.78218460 287.46951294]
[-11.12158775 274.57318115]
[-21.02825165 263.37411499]
[-26.99644089 249.64274597]
[-28.43012619 234.71878052]
[-25.17638016 220.06259155]
[-17.54156685 207.11221313]
[-6.26254606 197.14231873]
[7.56442642 191.13871765]
[22.59024429 189.70091248]
[37.34458160 192.98222351]
[45.00517654 180.08589172]
[52.66577530 167.18957520]
[60.23015594 154.23657227]
[67.69789886 141.22761536]
[75.16563416 128.21867371]
[82.63337708 115.20971680]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[105.43872070 76.15857697]
[102.14942169 65.79087830]
[105.04930115 55.53559494]
[112.94861603 48.71289825]
[123.08126068 47.39288330]
[131.12243652 34.73035812]
[139.16360474 22.06783104]
[140.02999878 6.27036572]
[153.38438416 -0.32579637]
[161.42556763 -12.98832130]
[161.45410156 -17.33034325]
[162.73411560 -21.06211090]
[164.92007446 -23.86513710]
[167.59854126 -25.56585884]
[170.34124756 -26.14524651]
[179.12185669 -38.30670166]
[187.90245056 -50.46815872]
[196.68305969 -62.62961578]
[185.34965515 -72.47136688]
[174.94409180 -83.28942871]
[165.55015564 -94.99669647]
[157.24346924 -107.49890900]
[150.09092712 -120.69540405]
[144.15011597 -134.47991943]
[139.46887207 -148.74148560]
[136.08488464 -163.36526489]
[134.02539062 -178.23350525]
[133.30699158 -193.22651672]
[133.93544006 -208.22355652]
[135.90571594 -223.10388184]
[139.20191956 -237.74769592]
[143.79754639 -252.03707886]
[149.65556335 -265.85699463]
[156.72882080 -279.09616089]
[164.96035767 -291.64797974]
[174.28390503 -303.41137695]
[184.62438965 -314.29165649]
[195.89855957 -324.20120239]
[208.01564026 -333.06027222]
[220.87805176 -340.79745483]
[234.38226318 -347.35052490]
[248.41952515 -352.66668701]
[262.87680054 -356.70315552]
[277.63772583 -359.42742920]
[292.58340454 -360.81753540]
[307.59356689 -360.86233521]
[322.54727173 -359.56143188]
[337.32418823 -356.92532349]
[351.80532837 -352.97518921]
[365.87405396 -347.74288940]
[379.41711426 -341.27053833]
[392.32550049 -333.61022949]
[404.49520874 -324.82363892]
[415.82830811 -314.98153687]
[426.23355103 -304.16317749]
[435.62713623 -292.45562744]
[443.93344116 -279.95315552]
[451.08557129 -266.75643921]
[457.02597046 -252.97174072]
[461.70678711 -238.71003723]
[465.09033203 -224.08615112]
[467.14935303 -209.21784973]
[467.86730957 -194.22482300]
[467.23837280 -179.22779846]
[465.26766968 -164.34751892]
[461.97100830 -149.70381165]
[457.37493896 -135.41456604]
[451.51651001 -121.59483337]
[444.44284058 -108.35589600]
[436.21093750 -95.80432892]
[426.88702393 -84.04121399]
[416.54620361 -73.16123962]
[405.27172852 -63.25202942]
[393.15438843 -54.39335251]
[380.29171753 -46.65653992]
[366.78732300 -40.10388184]
[352.74990845 -34.78814697]
[338.29248047 -30.75212479]
[323.53149414 -28.02831650]
[308.58575439 -26.63865280]
[293.57562256 -26.59432220]
[278.62191772 -27.89568138]
[263.84509277 -30.53225136]
[249.36410522 -34.48280716]
[235.29551697 -39.71553802]
[221.75265503 -46.18830872]
[208.84451294 -53.84901047]
[200.06391907 -41.68755722]
[191.28330994 -29.52610016]
[182.50270081 -17.36464310]
[174.08808899 -4.94714832]
[166.04692078 7.71537638]
[165.75569153 22.60713387]
[151.82612610 30.10900497]
[143.78495789 42.77153015]
[135.74378967 55.43405533]
[136.34365845 74.76090240]
[118.33504486 83.81917572]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[95.64233398 122.67745209]
[88.17459106 135.68640137]
[80.70684814 148.69535828]
[73.23910522 161.70431519]
[71.68076324 170.70483398]
[65.56210327 174.85017395]
[57.90150452 187.74649048]
[50.24090576 200.64282227]
[60.18029404 212.02992249]
[66.10536957 225.91285706]
[67.44746399 240.92709351]
[64.08766174 255.60110474]
[56.36726379 268.50064087]
[45.05316162 278.36886597]
[31.26164246 284.24887085]
[16.34829330 285.57632446]
[1.77473950 282.23379517]
[-5.88585806 295.13012695]
[-13.54645538 308.02642822]
[-21.20705223 320.92276001]
[-28.86765099 333.81909180]
[-17.90199471 344.98818970]
[-10.20077229 358.60202026]
[-6.28219843 373.73287964]
[-6.40693092 389.35125732]
[-10.56073952 404.39608765]
[-18.45586205 417.84677124]
[-29.55093384 428.79238892]
[-43.08810425 436.49331665]
[-58.14480591 440.43142700]
[-73.69661713 440.34469604]
[-88.68696594 436.24478149]
[-96.15470886 449.25372314]
[-103.62244415 462.26266479]
[-111.09018707 475.27163696]
[-99.38359070 484.70040894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 209]
[38 208]
[39 207]
[40 206]
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[65 182]
[66 181]
[67 180]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[74 173]
[75 172]
[79 170]
[80 169]
[81 168]
[83 166]
[84 165]
[89 164]
[90 163]
[91 162]
[92 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
