%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[200.70489502 376.83822632]
[194.83593750 363.03405762]
[188.96697998 349.22985840]
[183.09802246 335.42568970]
[177.22904968 321.62152100]
[165.12886047 312.93621826]
[166.84982300 297.20889282]
[152.98350525 291.89279175]
[146.83489990 277.97698975]
[152.50492859 263.46878052]
[146.63597107 249.66458130]
[134.53578186 240.97927856]
[136.25672913 225.25195312]
[129.65585327 238.72149658]
[115.50917816 243.70863342]
[101.92056274 237.35650635]
[96.67417908 223.30390930]
[102.77540588 209.60079956]
[116.72917175 204.09695435]
[130.54145813 209.94453430]
[125.92745209 195.67179871]
[121.31343842 181.39906311]
[116.69943237 167.12632751]
[111.76783752 152.96018982]
[106.52111816 138.90773010]
[94.82081604 129.69078064]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[67.71833801 34.98085403]
[56.32939911 28.92652321]
[52.24869537 17.11417389]
[57.14830780 6.05432081]
[52.11139297 -8.07470894]
[46.96943283 -22.16584969]
[41.72271347 -36.21832275]
[29.64712715 -46.44039536]
[32.44391251 -61.07006454]
[27.19719505 -75.12253571]
[21.95047760 -89.17500305]
[20.02784920 -74.29873657]
[13.65915966 -60.71787262]
[3.45143032 -49.72686386]
[-9.62240314 -42.37330246]
[-24.31622696 -39.35808182]
[-39.22951889 -40.96859360]
[-52.94083786 -47.05133057]
[-64.14331055 -57.02653122]
[-71.76918793 -69.94342041]
[-75.09161377 -84.57084656]
[-73.79393005 -99.51460266]
[-67.99980927 -113.35036469]
[-58.26151657 -124.75937653]
[-45.50724411 -132.65422058]
[-30.95264626 -136.28239441]
[-15.98497581 -135.29811096]
[-2.03085446 -129.79515076]
[9.57969856 -120.29804230]
[17.74050331 -107.71095276]
[16.40226936 -122.65113831]
[15.06403542 -137.59132385]
[13.72580147 -152.53150940]
[-0.49314442 -155.13186646]
[-13.54163742 -161.32270813]
[-24.53099251 -170.67543030]
[-32.71456909 -182.54632568]
[-37.53850555 -196.12091064]
[-38.67918396 -210.46972656]
[-36.06495285 -224.61210632]
[-29.88058281 -237.58305359]
[-20.55422020 -248.49920654]
[-8.72776031 -256.61892700]
[4.78734064 -261.39273071]
[3.67169189 -276.35116577]
[-5.07058764 -289.53765869]
[1.69867134 -302.80514526]
[0.58302259 -317.76361084]
[-0.53262603 -332.72204590]
[-1.64827478 -347.68051147]
[-2.76392341 -362.63894653]
[-17.74743652 -363.81994629]
[-32.37504578 -367.27444458]
[-46.30385590 -372.92144775]
[-59.20735931 -380.62860107]
[-70.78307343 -390.21520996]
[-80.75965881 -401.45657349]
[-88.90323639 -414.08917236]
[-95.02291107 -427.81689453]
[-98.97524261 -442.31790161]
[-100.66756439 -457.25231934]
[-100.06021881 -472.27001953]
[-97.16743469 -487.01898193]
[-92.05702972 -501.15350342]
[-84.84880066 -514.34222412]
[-75.71170807 -526.27593994]
[-64.85994720 -536.67492676]
[-52.54789352 -545.29553223]
[-39.06416321 -551.93548584]
[-24.72483444 -556.43927002]
[-9.86603928 -558.70129395]
[5.16390991 -558.66845703]
[20.01268959 -556.34161377]
[34.33222198 -551.77526855]
[47.78683853 -545.07653809]
[60.06114197 -536.40228271]
[70.86740875 -525.95599365]
[79.95231628 -513.98248291]
[87.10291290 -500.76245117]
[92.15156555 -486.60577393]
[94.97993469 -471.84432983]
[95.52172089 -456.82409668]
[93.76422119 -441.89721680]
[89.74863434 -427.41360474]
[83.56908417 -413.71273804]
[75.37043762 -401.11581421]
[65.34488678 -389.91809082]
[53.72742844 -380.38211060]
[40.79040527 -372.73135376]
[26.83707809 -367.14520264]
[12.19452953 -363.75460815]
[13.31017876 -348.79614258]
[14.42582703 -333.83770752]
[15.54147625 -318.87924194]
[16.65712547 -303.92080688]
[25.31960487 -291.80426025]
[18.63014603 -277.46682739]
[19.74579430 -262.50836182]
[35.02425003 -259.37570190]
[48.81589127 -252.06207275]
[60.00149155 -241.15179443]
[67.67071533 -227.52136230]
[71.19620514 -212.26910400]
[70.28485870 -196.62669373]
[65.00222778 -181.85969543]
[55.76783371 -169.16510010]
[43.32189941 -159.57441711]
[28.66598701 -153.86973572]
[30.00422096 -138.92955017]
[31.34245491 -123.98937225]
[32.68068695 -109.04918671]
[36.00294876 -94.42172241]
[41.24966812 -80.36925507]
[46.49638367 -66.31678009]
[58.19668961 -57.09983826]
[55.77518463 -41.46503830]
[61.02190399 -27.41256714]
[66.30645752 -22.24581718]
[66.24042511 -13.11162472]
[71.27733612 1.01740444]
[85.23890686 11.64950466]
[81.77080536 29.73413467]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[123.37037659 119.03133392]
[120.57359314 133.66101074]
[125.82031250 147.71347046]
[129.84770203 151.03419495]
[131.98489380 155.15556335]
[132.24343872 159.22351074]
[130.97216797 162.51231384]
[135.58618164 176.78504944]
[140.20018005 191.05778503]
[144.81419373 205.33052063]
[150.06091309 219.38299561]
[162.58088684 229.05566406]
[160.44013977 243.79562378]
[166.30911255 257.59979248]
[180.69111633 263.58273315]
[186.44644165 277.66574097]
[180.65399170 291.33990479]
[193.17398071 301.01260376]
[191.03323364 315.75256348]
[196.90219116 329.55673218]
[202.77114868 343.36090088]
[208.64012146 357.16506958]
[214.50907898 370.96926880]
[229.28607178 368.08239746]
[244.34036255 368.33129883]
[259.01385498 371.70513916]
[272.66503906 378.05639648]
[284.69720459 387.10742188]
[294.58432007 398.46252441]
[301.89416504 411.62533569]
[306.30718994 426.02044678]
[307.63049316 441.01852417]
[305.80618286 455.96395874]
[300.91406250 470.20336914]
[293.16796875 483.11425781]
[282.90649414 494.13226318]
[270.57830811 502.77569580]
[256.72225952 508.66671753]
[241.94412231 511.54776001]
[226.88993835 511.29290771]
[212.21778870 507.91333008]
[198.56907654 501.55670166]
[186.54049683 492.50094604]
[176.65785217 481.14193726]
[169.35317993 467.97625732]
[164.94580078 453.57940674]
[163.62841797 438.58081055]
[165.45858765 423.63610840]
[170.35632324 409.39862061]
[178.10749817 396.49075317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[7 177]
[10 174]
[11 173]
[13 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 163]
[25 162]
[27 160]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[36 152]
[37 151]
[38 149]
[39 148]
[41 146]
[42 145]
[43 144]
[62 143]
[63 142]
[64 141]
[65 140]
[76 130]
[77 129]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
