%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[28.85354424 497.63146973]
[31.21303368 512.47833252]
[31.16022682 527.51135254]
[28.69649506 542.34130859]
[23.88565254 556.58392334]
[16.85231209 569.87030029]
[7.77865410 581.85632324]
[-3.10029101 592.23150635]
[-15.50273323 600.72717285]
[-29.10741806 607.12310791]
[-43.56195450 611.25384521]
[-58.49193192 613.01220703]
[-73.51062775 612.35278320]
[-88.22902679 609.29254150]
[-102.26588440 603.91082764]
[-115.25760651 596.34698486]
[-126.86768341 586.79699707]
[-136.79537964 575.50823975]
[-144.78355408 562.77301025]
[-150.62528992 548.92132568]
[-154.16926575 534.31182861]
[-155.32369995 519.32305908]
[-154.05865479 504.34320068]
[-150.40693665 489.76031494]
[-144.46311951 475.95208740]
[-136.38116455 463.27618408]
[-126.37040710 452.06097412]
[-114.69014740 442.59695435]
[-101.64294434 435.12924194]
[-87.56674957 429.85128784]
[-72.82616425 426.89981079]
[-57.80300522 426.35122681]
[-42.88641357 428.21975708]
[-28.46276474 432.45703125]
[-21.98326874 418.92868042]
[-15.50377274 405.40036011]
[-9.02427673 391.87200928]
[-2.54478073 378.34365845]
[3.93471503 364.81530762]
[10.21207619 351.19198608]
[16.28590965 337.47671509]
[22.35974312 323.76144409]
[20.43869019 308.99127197]
[33.10129547 299.50607300]
[38.76408386 285.61602783]
[44.01079941 271.56356812]
[49.25751877 257.51107788]
[54.50423813 243.45861816]
[59.75095749 229.40614319]
[64.99767303 215.35368347]
[69.29179382 200.98146057]
[72.61405945 186.35400391]
[75.93631744 171.72654724]
[67.80591583 159.29946899]
[70.96678162 144.41781616]
[84.05657196 135.97416687]
[87.37882996 121.34670258]
[90.70108795 106.71924591]
[79.38900757 116.56997681]
[64.68636322 119.54186249]
[50.43637848 114.85806274]
[40.36397552 103.74290466]
[37.10205078 89.10187531]
[41.50326538 74.76209259]
[52.41715240 64.47194672]
[66.99084473 60.92125702]
[81.41482544 65.03816986]
[91.91868591 75.74652100]
[95.75675201 90.24629974]
[101.21210480 76.27349854]
[106.66746521 62.30070496]
[112.12281799 48.32790756]
[117.15973663 34.19887543]
[121.77374268 19.92614365]
[126.38775635 5.65340996]
[130.78875732 -8.68643761]
[127.21109009 -24.09782600]
[138.19346619 -34.15947342]
[142.38047791 -48.56325531]
[146.56748962 -62.96703720]
[150.43179321 -77.46073151]
[153.97146606 -92.03710175]
[157.51113892 -106.61347961]
[161.05081177 -121.18985748]
[164.59048462 -135.76623535]
[168.13015747 -150.34260559]
[169.91262817 -165.23632812]
[169.91262817 -180.23632812]
[169.46601868 -195.22967529]
[168.57319641 -210.20307922]
[167.68038940 -225.17648315]
[166.78756714 -240.14988708]
[165.89476013 -255.12329102]
[165.00193787 -270.09671021]
[150.35707092 -273.88919067]
[137.60200500 -282.02328491]
[127.98635101 -293.70208740]
[122.45215607 -307.78143311]
[121.54160309 -322.88195801]
[125.34390259 -337.52429199]
[133.48654175 -350.27389526]
[145.17178345 -359.88171387]
[159.25483704 -365.40649414]
[174.35597229 -366.30691528]
[188.99574280 -362.49481201]
[201.73989868 -354.34362793]
[211.33988953 -342.65194702]
[216.85520935 -328.56518555]
[217.74552917 -313.46347046]
[213.92359924 -298.82623291]
[205.76388550 -286.08755493]
[194.06578064 -276.49539185]
[179.97534180 -270.98953247]
[180.86816406 -256.01611328]
[181.76097107 -241.04270935]
[182.65379333 -226.06930542]
[183.54660034 -211.09590149]
[184.43942261 -196.12248230]
[186.44413757 -194.16308594]
[187.79348755 -191.29151917]
[188.13616943 -187.75344849]
[187.21620178 -183.91702271]
[184.91262817 -180.23632812]
[184.91262817 -165.23632812]
[192.17062378 -178.36344910]
[203.43507385 -188.26860046]
[217.38265991 -193.78813171]
[232.37480164 -194.27362061]
[246.65023804 -189.66801453]
[258.53192139 -180.51239014]
[266.62402344 -167.88233948]
[269.97586060 -153.26162720]
[268.19363403 -138.36787415]
[261.48678589 -124.95079803]
[250.64320374 -114.58660889]
[236.93675232 -108.49288177]
[221.97769165 -107.38551331]
[207.52337646 -111.39458466]
[195.27188110 -120.04911804]
[186.66250610 -132.33239746]
[182.70652771 -146.80293274]
[179.16685486 -132.22656250]
[175.62718201 -117.65018463]
[172.08750916 -103.07380676]
[168.54783630 -88.49742889]
[165.00816345 -73.92105865]
[166.52052307 -70.73591614]
[166.56526184 -66.66000366]
[164.74052429 -62.39109039]
[160.97126770 -58.78002548]
[156.78425598 -44.37624359]
[152.59724426 -29.97246170]
[156.47439575 -15.59132671]
[145.19253540 -4.49942589]
[146.66680908 0.04321074]
[145.30308533 5.56020927]
[140.66049194 10.26741886]
[136.04647827 24.54015350]
[131.43246460 38.81288528]
[132.58728027 41.36720657]
[132.79986572 44.53286743]
[131.83232117 47.95328522]
[129.58007812 51.19240952]
[126.09561920 53.78326416]
[120.64025879 67.75605774]
[115.18490601 81.72885895]
[109.72954559 95.70166016]
[105.32855225 110.04150391]
[102.00628662 124.66896057]
[98.68402863 139.29641724]
[106.84220123 152.56600952]
[103.26457977 167.35301208]
[90.56377411 175.04879761]
[87.24151611 189.67626953]
[83.91925812 204.30372620]
[95.60802460 194.90304565]
[110.51197815 193.20828247]
[124.01296234 199.74459839]
[131.92756653 212.48661804]
[131.80334473 227.48609924]
[123.67879486 240.09530640]
[110.07140350 246.40710449]
[95.19756317 244.46574402]
[83.66609955 234.87275696]
[79.05014801 220.60040283]
[73.80342865 234.65286255]
[68.55670929 248.70533752]
[63.30998993 262.75781250]
[58.06327438 276.81027222]
[52.81655502 290.86276245]
[53.68717575 295.11669922]
[53.20712280 299.03256226]
[51.64853668 302.22729492]
[49.38000107 304.44546509]
[46.81656265 305.57989502]
[48.30317688 321.33111572]
[36.07501221 329.83529663]
[30.00117683 343.55056763]
[23.92734337 357.26583862]
[24.25066948 363.86938477]
[21.58995438 368.89111328]
[17.46306038 371.29479980]
[10.98356438 384.82315063]
[4.50406885 398.35150146]
[-1.97542691 411.87985229]
[-8.45492268 425.40817261]
[-14.93441868 438.93652344]
[-2.59196615 447.51907349]
[8.21382236 457.97042847]
[17.20305252 470.01992798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[39 202]
[40 199]
[41 198]
[42 197]
[44 195]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[51 175]
[52 174]
[53 173]
[56 170]
[57 169]
[58 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 159]
[74 158]
[75 157]
[76 154]
[78 152]
[79 151]
[80 150]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 124]
[88 123]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
