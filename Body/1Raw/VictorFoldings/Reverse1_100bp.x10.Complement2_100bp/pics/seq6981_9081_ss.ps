%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[34.22330093 746.16461182]
[22.58785820 755.65399170]
[10.00965595 763.85284424]
[-3.36878276 770.66821289]
[-17.39587021 776.02294922]
[-31.91266823 779.85632324]
[-46.75469208 782.12487793]
[-61.75376892 782.80297852]
[-76.73994446 781.88287354]
[-91.54341888 779.37506104]
[-105.99645996 775.30792236]
[-119.93529510 769.72747803]
[-133.20199585 762.69708252]
[-145.64622498 754.29632568]
[-157.12699890 744.62036133]
[-167.51422119 733.77886963]
[-176.69020081 721.89471436]
[-184.55096436 709.10247803]
[-191.00744629 695.54718018]
[-195.98648071 681.38238525]
[-199.43165588 666.76861572]
[-201.30393982 651.87139893]
[-201.58210754 636.85961914]
[-200.26303101 621.90325928]
[-197.36163330 607.17187500]
[-192.91079712 592.83233643]
[-186.96095276 579.04711914]
[-179.57951355 565.97247314]
[-170.85011292 553.75653076]
[-160.87168884 542.53765869]
[-149.75726318 532.44299316]
[-137.63281250 523.58697510]
[-124.63568115 516.06988525]
[-110.91316223 509.97686768]
[-96.62072754 505.37704468]
[-81.92032623 502.32250977]
[-66.97852325 500.84783936]
[-51.96461868 500.96978760]
[-37.04874039 502.68692017]
[-22.39988708 505.97982788]
[-17.57389069 491.77737427]
[-12.74789238 477.57492065]
[-7.92189503 463.37246704]
[-3.09589720 449.17001343]
[1.73010051 434.96755981]
[6.23772907 420.66088867]
[10.42473984 406.25708008]
[14.61175156 391.85330200]
[18.79876328 377.44952393]
[8.39263630 366.79223633]
[4.69352245 352.26043701]
[8.79191399 337.73220825]
[19.68350983 327.13647461]
[34.51306534 323.39059448]
[38.70007706 308.98681641]
[42.88708878 294.58303833]
[39.00994492 280.20190430]
[50.29180145 269.10998535]
[54.47881317 254.70620728]
[58.66582489 240.30242920]
[62.85283279 225.89865112]
[67.03984833 211.49485779]
[71.22686005 197.09107971]
[74.87494659 182.54145813]
[77.97905731 167.86616516]
[81.08316803 153.19085693]
[76.14714050 139.13792419]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[83.92377472 102.43598175]
[86.41867065 91.05983734]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[96.32518005 43.70576096]
[99.39343262 31.59091187]
[109.55725861 25.03170967]
[113.09693146 10.45533371]
[116.63660431 -4.12104177]
[120.17627716 -18.69741631]
[115.91403198 -33.93368530]
[126.43618011 -44.47568130]
[129.97584534 -59.05205917]
[132.20097351 -73.88610077]
[133.09378052 -88.85950470]
[133.98660278 -103.83291626]
[134.87940979 -118.80632019]
[123.06165314 -128.68795776]
[119.37165070 -143.46080017]
[125.02117920 -157.40881348]
[137.64939880 -165.26159668]
[138.54220581 -180.23500061]
[139.43502808 -195.20840454]
[140.32783508 -210.18180847]
[130.11526489 -221.94364929]
[131.23400879 -237.11610413]
[142.51005554 -246.77975464]
[143.40287781 -261.75317383]
[144.29568481 -276.72656250]
[130.37548828 -282.72686768]
[119.34912109 -293.12857056]
[112.54809570 -306.67559814]
[110.79366302 -321.73208618]
[114.29767609 -336.47988892]
[122.63700104 -349.13812256]
[134.80464172 -358.17828369]
[149.33128357 -362.50869751]
[164.46276855 -361.60647583]
[178.37188721 -355.58050537]
[189.37905884 -345.15850830]
[196.15510559 -331.59896851]
[197.88179016 -316.53927612]
[194.35061646 -301.79797363]
[185.98796082 -289.15509033]
[173.80369568 -280.13739014]
[159.26908875 -275.83374023]
[158.37628174 -260.86035156]
[157.48345947 -245.88693237]
[167.53128052 -234.95181274]
[166.83914185 -219.75393677]
[155.30123901 -209.28900146]
[154.40843201 -194.31559753]
[153.51560974 -179.34219360]
[152.62280273 -164.36877441]
[164.22837830 -155.07101440]
[168.18041992 -140.55049133]
[162.76109314 -126.32080078]
[149.85281372 -117.91350555]
[148.96000671 -102.94009399]
[148.06718445 -87.96669006]
[147.17437744 -72.99328613]
[156.03936768 -85.09336090]
[169.23553467 -92.22505188]
[184.21492004 -93.01133728]
[198.08522034 -87.30039978]
[208.16830444 -76.19493103]
[212.51727295 -61.83922577]
[210.29243469 -47.00514221]
[201.92335510 -34.55690765]
[189.02598572 -26.89808655]
[174.09057617 -25.50747490]
[160.00094604 -30.65357780]
[149.47758484 -41.34276199]
[144.55223083 -55.51238632]
[141.01255798 -40.93600845]
[145.52798462 -26.74234390]
[134.75265503 -15.15774441]
[131.21298218 -0.58136928]
[127.67330933 13.99500561]
[124.13363647 28.57138062]
[129.97418213 45.11994553]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[115.88227844 103.48313141]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[105.96207428 145.44435120]
[95.75846863 156.29496765]
[92.65435791 170.97027588]
[89.55024719 185.64556885]
[103.35430908 179.77633667]
[116.62169647 186.77464294]
[119.57219696 201.48159790]
[110.03079987 213.05578613]
[95.03107452 212.96514893]
[85.63063812 201.27809143]
[81.44362640 215.68186951]
[77.25661469 230.08566284]
[73.06960297 244.48944092]
[68.88259125 258.89321899]
[64.69557953 273.29699707]
[68.27324677 288.70840454]
[57.29087067 298.77005005]
[53.10385895 313.17382812]
[48.91684723 327.57760620]
[59.42740631 338.68954468]
[62.94159317 353.47290039]
[58.61306000 367.93423462]
[47.70021439 378.21847534]
[33.20254517 381.63653564]
[29.01553345 396.04031372]
[24.82852173 410.44409180]
[20.64151192 424.84790039]
[21.88758278 429.91683960]
[21.13949776 434.49874878]
[18.91672325 437.91549683]
[15.93255615 439.79354858]
[11.10655880 453.99600220]
[6.28056097 468.19845581]
[1.45456314 482.40093994]
[-3.37143445 496.60339355]
[-8.19743252 510.80584717]
[5.42496490 517.11950684]
[18.29907227 524.84539795]
[30.27901840 533.89599609]
[41.22906113 544.16870117]
[51.02512360 555.54711914]
[59.55621719 567.90240479]
[66.72566986 581.09448242]
[72.45225525 594.97393799]
[76.67107391 609.38342285]
[79.33433533 624.15972900]
[80.41185760 639.13537598]
[79.89142609 654.14074707]
[77.77895355 669.00579834]
[74.09835815 683.56207275]
[68.89135742 697.64471436]
[62.21694183 711.09399414]
[54.15073776 723.75769043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 193]
[41 192]
[42 191]
[43 190]
[44 189]
[45 188]
[46 184]
[47 183]
[48 182]
[49 181]
[54 176]
[55 175]
[56 174]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[64 161]
[65 160]
[66 159]
[68 157]
[69 156]
[72 154]
[73 153]
[74 152]
[77 150]
[78 149]
[79 148]
[80 147]
[82 145]
[83 144]
[84 131]
[85 130]
[86 129]
[87 128]
[91 124]
[92 123]
[93 122]
[94 121]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
