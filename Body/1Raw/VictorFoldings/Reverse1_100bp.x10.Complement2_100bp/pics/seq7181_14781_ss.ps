%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[172.36471558 555.75915527]
[184.87712097 547.39105225]
[179.21434021 533.50103760]
[173.55154419 519.61102295]
[167.88876343 505.72097778]
[162.22598267 491.83096313]
[156.56318665 477.94091797]
[150.90040588 464.05090332]
[145.23762512 450.16088867]
[139.57482910 436.27084351]
[136.80641174 451.01315308]
[127.98557281 463.14547729]
[114.81547546 470.32519531]
[99.83905792 471.16607666]
[85.94804382 465.50570679]
[75.82455444 454.43707275]
[71.42329407 440.09729004]
[73.59406281 425.25518799]
[81.91772461 412.77655029]
[94.78710938 405.07077026]
[109.71733856 403.62576294]
[123.82563019 408.72048950]
[134.38856506 419.37231445]
[131.28445435 404.69702148]
[121.08084106 393.84640503]
[125.79483795 378.74380493]
[122.69073486 364.06851196]
[119.58662415 349.39318848]
[116.48251343 334.71789551]
[113.37840271 320.04260254]
[110.27429199 305.36730957]
[107.17018127 290.69198608]
[101.01875305 304.37261963]
[88.90920258 313.22467041]
[74.00694275 314.93423462]
[60.20738220 309.05444336]
[51.11769485 297.12222290]
[49.11390686 282.25665283]
[54.71979904 268.34356689]
[66.47000885 259.01980591]
[81.29305267 256.72256470]
[95.31423187 262.05236816]
[104.86806488 273.61517334]
[103.97525024 258.64175415]
[103.08242798 243.66836548]
[102.07817078 228.70201111]
[100.96252441 213.74356079]
[99.84687042 198.78511047]
[86.37036133 192.44087219]
[77.82197571 180.12094116]
[76.57977295 165.07688904]
[83.07717133 151.34077454]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[80.77581024 84.85285950]
[66.00739288 87.47848511]
[52.94414139 80.10613251]
[47.55840302 66.10635376]
[52.31245804 51.87965775]
[65.03282166 43.93029404]
[79.90391541 45.89260864]
[90.12759399 56.87115860]
[90.57420349 41.87780762]
[91.02081299 26.88445854]
[91.46741486 11.89110851]
[91.91402435 -3.10224128]
[79.37277985 5.12681389]
[65.07285309 0.59778792]
[59.55561447 -13.35068989]
[66.88816071 -26.43632126]
[81.66522217 -29.01286507]
[92.99302673 -19.18250275]
[94.55355072 -34.10110855]
[96.11407471 -49.01971054]
[97.67459869 -63.93831635]
[91.41497803 -78.46855164]
[100.43437195 -90.32181549]
[101.99489594 -105.24041748]
[103.55541992 -120.15902710]
[105.11594391 -135.07762146]
[106.67646790 -149.99623108]
[108.23699188 -164.91484070]
[109.79751587 -179.83343506]
[111.24693298 -194.76324463]
[112.58516693 -209.70343018]
[113.92340088 -224.64361572]
[111.49268341 -230.79205322]
[112.39627075 -236.40280151]
[115.53038788 -240.00645447]
[117.31285858 -254.90017700]
[109.96900177 -265.50350952]
[111.76023865 -277.87182617]
[121.18653107 -285.45281982]
[123.19054413 -300.31835938]
[125.19455719 -315.18386841]
[127.19857025 -330.04940796]
[113.47231293 -336.38040161]
[102.22308350 -346.47723389]
[94.45114136 -359.44210815]
[90.84757233 -374.12222290]
[91.73279572 -389.21221924]
[97.02810669 -403.37030029]
[106.26264954 -415.33752441]
[118.61528778 -424.04980469]
[132.98764038 -428.73242188]
[148.10171509 -428.96902466]
[162.61358643 -424.73855591]
[175.23287964 -416.41720581]
[184.83747864 -404.74490356]
[190.57336426 -390.75952148]
[191.93049622 -375.70462036]
[188.78819275 -360.91891479]
[181.42587280 -347.71710205]
[170.49819946 -337.27310181]
[156.97683716 -330.51556396]
[142.06410217 -328.04541016]
[140.06008911 -313.17987061]
[138.05607605 -298.31433105]
[136.05206299 -283.44882202]
[143.58253479 -267.59765625]
[132.20657349 -253.11770630]
[130.42410278 -238.22399902]
[128.86358643 -223.30538940]
[127.52535248 -208.36520386]
[126.18711853 -193.42501831]
[128.72132874 -186.48242188]
[124.71611786 -178.27291870]
[123.15559387 -163.35430908]
[121.59506989 -148.43571472]
[120.03454590 -133.51710510]
[118.47402191 -118.59850311]
[116.91350555 -103.67989349]
[115.35298157 -88.76129150]
[121.72421265 -75.29813385]
[112.59320068 -62.37779236]
[111.03267670 -47.45919037]
[109.47215271 -32.54058456]
[107.91162872 -17.62197876]
[106.90737152 -2.65563536]
[106.46076202 12.33771515]
[106.01416016 27.33106422]
[105.56755066 42.32441330]
[105.12094879 57.31776428]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[124.35155487 148.26240540]
[132.81469727 160.88270569]
[133.81788635 175.94458008]
[127.19162750 189.39630127]
[114.80532837 197.66946411]
[115.92097473 212.62791443]
[117.03662872 227.58636475]
[120.79563904 235.91148376]
[118.05583954 242.77554321]
[118.94865417 257.74896240]
[119.84146881 272.72235107]
[121.84548187 287.58789062]
[124.94959259 302.26318359]
[128.05369568 316.93847656]
[131.15780640 331.61380005]
[134.26191711 346.28909302]
[137.36602783 360.96438599]
[140.47013855 375.63970947]
[150.89578247 387.53997803]
[145.95974731 401.59292603]
[149.06385803 416.26821899]
[153.46485901 430.60806274]
[159.12763977 444.49807739]
[164.79043579 458.38812256]
[170.45321655 472.27813721]
[176.11601257 486.16818237]
[181.77879333 500.05819702]
[187.44157410 513.94824219]
[193.10437012 527.83825684]
[198.76715088 541.72827148]
[213.56367493 538.96282959]
[228.61399841 539.23291016]
[243.30178833 542.52734375]
[257.02563477 548.71130371]
[269.22348022 557.53155518]
[279.39590454 568.62689209]
[287.12634277 581.54302979]
[292.09820557 595.75097656]
[294.10791016 610.66894531]
[293.07315063 625.68603516]
[289.03634644 640.18737793]
[282.16275024 653.57910156]
[272.73382568 665.31286621]
[261.13574219 674.90814209]
[247.84338379 681.97198486]
[233.40109253 686.21520996]
[218.40023804 687.46398926]
[203.45512390 685.66723633]
[189.17773438 680.89849854]
[176.15270996 673.35302734]
[164.91343689 663.33984375]
[155.92013550 651.26898193]
[149.54109192 637.63476562]
[146.03752136 622.99542236]
[145.55288696 607.95050049]
[148.10704041 593.11602783]
[153.59538269 579.09948730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[23 174]
[24 173]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[32 165]
[43 164]
[44 163]
[45 162]
[46 160]
[47 159]
[48 158]
[53 153]
[54 152]
[55 151]
[57 149]
[58 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[76 142]
[77 141]
[78 140]
[79 139]
[81 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 129]
[89 128]
[90 127]
[93 126]
[94 125]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
