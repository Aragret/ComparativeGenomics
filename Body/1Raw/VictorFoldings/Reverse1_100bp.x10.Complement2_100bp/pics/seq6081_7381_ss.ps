%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[184.24691772 252.95208740]
[185.22875977 237.97764587]
[187.28857422 223.11309814]
[190.41561890 208.43592834]
[194.59358215 194.02265930]
[199.80068970 179.94844055]
[206.00979614 166.28663635]
[191.13194275 166.99307251]
[182.71430969 153.59703064]
[169.54183960 146.42166138]
[156.36936951 139.24629211]
[143.19688416 132.07092285]
[130.02441406 124.89556122]
[116.85193634 117.72019196]
[103.67945862 110.54483032]
[90.45393372 103.46772003]
[77.17608643 96.48926544]
[84.55314636 109.54985809]
[85.61923981 124.51192474]
[80.16851044 138.48652649]
[69.25341797 148.77539062]
[54.98149490 153.39190674]
[40.10842133 151.44467163]
[27.50595665 143.30969238]
[19.60744095 130.55769348]
[17.93795204 115.65089417]
[22.81984329 101.46755219]
[33.31049728 90.74626160]
[47.38433456 85.55712128]
[62.32513046 86.90247345]
[46.84589767 88.64350891]
[34.98382187 79.11744690]
[33.41940689 64.34963989]
[21.59313774 55.12254333]
[9.76686859 45.89544296]
[-2.05940151 36.66834641]
[-13.88567162 27.44124794]
[-25.71194077 18.21414948]
[-35.90203857 29.23360634]
[-46.97849274 39.36172485]
[-58.86360168 48.52745819]
[-71.47400665 56.66651917]
[-84.72124481 63.72181320]
[-98.51239777 69.64385986]
[-112.75073242 74.39110565]
[-127.33637238 77.93026733]
[-142.16700745 80.23650360]
[-157.13861084 81.29364777]
[-172.14617920 81.09429169]
[-187.08441162 79.63981628]
[-201.84855652 76.94042969]
[-216.33503723 73.01507568]
[-230.44224548 67.89128113]
[-244.07122803 61.60498428]
[-257.12637329 54.20028305]
[-269.51611328 45.72911835]
[-281.15356445 36.25090408]
[-291.95706177 25.83213234]
[-301.85086060 14.54587746]
[-310.76553345 2.47130966]
[-318.63854980 -10.30687714]
[-325.41470337 -23.69905090]
[-331.04644775 -37.61127472]
[-335.49429321 -51.94596100]
[-338.72702026 -66.60256195]
[-340.72198486 -81.47827148]
[-341.46517944 -96.46874237]
[-340.95135498 -111.46882629]
[-339.18417358 -126.37330627]
[-336.17602539 -141.07763672]
[-331.94796753 -155.47868347]
[-326.52966309 -169.47541809]
[-319.95916748 -182.96968079]
[-312.28250122 -195.86680603]
[-303.55358887 -208.07630920]
[-293.83358765 -219.51258850]
[-283.19070435 -230.09539795]
[-271.69961548 -239.75050354]
[-259.44088745 -248.41018677]
[-246.50051880 -256.01373291]
[-232.96929932 -262.50775146]
[-218.94212341 -267.84674072]
[-204.51737976 -271.99322510]
[-189.79624939 -274.91812134]
[-174.88200378 -276.60092163]
[-159.87925720 -277.02981567]
[-144.89321899 -276.20178223]
[-130.02905273 -274.12268066]
[-115.39097595 -270.80703735]
[-101.08169556 -266.27813721]
[-87.20156860 -260.56771851]
[-73.84796143 -253.71589661]
[-61.11454010 -245.77067566]
[-49.09061813 -236.78781128]
[-37.86054230 -226.83030701]
[-27.50308228 -215.96800232]
[-18.09088707 -204.27709961]
[-9.68997955 -191.83961487]
[-2.35928679 -178.74275208]
[3.84977102 -165.07841492]
[8.89364052 -150.94244385]
[12.73694324 -136.43397522]
[15.35272026 -121.65479279]
[16.72262383 -106.70855713]
[16.83704185 -91.70011139]
[15.69517708 -76.73472595]
[13.30503464 -61.91738129]
[9.68338203 -47.35200500]
[4.85562229 -33.14076614]
[-1.14438033 -19.38335037]
[-8.27453995 -6.17625523]
[-16.48484230 6.38787889]
[-4.65857315 15.61497784]
[7.16769695 24.84207535]
[18.99396706 34.06917572]
[30.82023621 43.29627228]
[42.64650726 52.52336884]
[57.35138321 50.44919586]
[69.47634888 59.63831711]
[71.55223083 75.07621002]
[84.15454102 83.21142578]
[97.43238831 90.18987274]
[105.46551514 90.85420227]
[110.85482788 97.37235260]
[124.02730560 104.54771423]
[137.19978333 111.72308350]
[150.37225342 118.89845276]
[163.54472351 126.07381439]
[176.71720886 133.24917603]
[189.88967896 140.42454529]
[205.70970154 140.23133850]
[213.18515015 153.11415100]
[221.29568481 140.48811340]
[230.29612732 128.48020935]
[240.13958740 117.15306854]
[250.77473450 106.56574249]
[262.14611816 96.77342987]
[274.19445801 87.82717896]
[286.85693359 79.77363586]
[300.06750488 72.65478516]
[313.75735474 66.50774384]
[327.85507202 61.36455917]
[342.28713989 57.25204468]
[356.97836304 54.19164276]
[371.85211182 52.19931030]
[386.83084106 51.28543472]
[401.83648682 51.45477676]
[416.79077148 52.70645523]
[431.61578369 55.03394318]
[446.23416138 58.42510986]
[460.56976318 62.86227417]
[474.54782104 68.32230377]
[488.09545898 74.77672577]
[501.14202881 82.19189453]
[513.61950684 90.52915192]
[525.46289062 99.74502563]
[536.61041260 109.79146576]
[547.00390625 120.61610413]
[556.58923340 132.16250610]
[565.31640625 144.37046814]
[573.13989258 157.17633057]
[580.01898193 170.51335144]
[585.91772461 184.31198120]
[590.80548096 198.50028992]
[594.65661621 213.00430298]
[597.45117188 227.74838257]
[599.17456055 242.65570068]
[599.81768799 257.64849854]
[599.37738037 272.64862061]
[597.85577393 287.57788086]
[595.26092529 302.35842896]
[591.60626221 316.91317749]
[586.91088867 331.16629028]
[581.19927979 345.04345703]
[574.50122070 358.47229004]
[566.85156250 371.38278198]
[558.29034424 383.70767212]
[548.86206055 395.38262939]
[538.61590576 406.34686279]
[527.60528564 416.54315186]
[515.88763428 425.91836548]
[503.52404785 434.42361450]
[490.57894897 442.01455688]
[477.11984253 448.65161133]
[463.21691895 454.30017090]
[448.94265747 458.93081665]
[434.37145996 462.51937866]
[419.57928467 465.04718018]
[404.64328003 466.50097656]
[389.64129639 466.87326050]
[374.65158081 466.16204834]
[359.75225830 464.37106323]
[345.02099609 461.50964355]
[330.53460693 457.59268188]
[316.36862183 452.64062500]
[302.59689331 446.67932129]
[289.29122925 439.73977661]
[276.52099609 431.85821533]
[264.35278320 423.07574463]
[252.85000610 413.43811035]
[242.07264709 402.99560547]
[232.07688904 391.80261230]
[222.91485596 379.91754150]
[214.63430786 367.40234375]
[207.27842712 354.32226562]
[200.88554382 340.74548340]
[195.48901367 326.74279785]
[191.11694336 312.38720703]
[187.79216003 297.75357056]
[185.53196716 282.91815186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 132]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 122]
[17 121]
[30 120]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
