%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[38.77658463 471.86203003]
[34.53406525 486.27136230]
[28.48369980 500.01986694]
[20.72484016 512.88177490]
[11.38489532 524.64587402]
[0.61723429 535.11895752]
[-11.40132713 544.12908936]
[-24.47343445 551.52832031]
[-38.38442993 557.19512939]
[-52.90588379 561.03643799]
[-67.79933929 562.98919678]
[-82.82023621 563.02130127]
[-97.72190857 561.13232422]
[-112.25967407 557.35321045]
[-126.19479370 551.74597168]
[-139.29844666 544.40277100]
[-151.35545349 535.44415283]
[-162.16783142 525.01721191]
[-171.55804443 513.29321289]
[-179.37187195 500.46466064]
[-185.48101807 486.74215698]
[-189.78517151 472.35110474]
[-192.21363831 457.52777100]
[-192.72654724 442.51559448]
[-191.31547546 427.56109619]
[-188.00360107 412.90982056]
[-182.84530640 398.80236816]
[-175.92527771 385.47039795]
[-167.35716248 373.13281250]
[-157.28167725 361.99224854]
[-145.86422729 352.23159790]
[-133.29232788 344.01113892]
[-119.77241516 337.46591187]
[-105.52648926 332.70333862]
[-90.78849792 329.80163574]
[-75.80043030 328.80850220]
[-60.80842590 329.74017334]
[-46.05865479 332.58139038]
[-31.79332352 337.28552246]
[-25.31382751 323.75717163]
[-18.83433151 310.22882080]
[-12.35483551 296.70046997]
[-5.87533951 283.17211914]
[0.60415637 269.64376831]
[-0.19904086 266.95806885]
[0.01321061 263.79238892]
[1.42905569 260.53189087]
[4.09386063 257.62271118]
[7.89322042 255.52061462]
[15.16644955 242.40193176]
[22.34181595 229.22944641]
[29.41892242 216.00392151]
[28.60174561 201.13174438]
[41.93475723 192.61462402]
[49.01185989 179.38909912]
[56.08896637 166.16357422]
[55.27179337 151.29139709]
[68.60480499 142.77427673]
[75.68190765 129.54875183]
[82.75901031 116.32321930]
[89.83612061 103.09769440]
[96.01188660 89.42802429]
[101.25860596 75.37554932]
[106.50532532 61.32308197]
[111.75204468 47.27061081]
[109.33053589 31.63581085]
[121.03084564 22.41886520]
[126.27755737 8.36639404]
[123.85605621 -7.26840258]
[135.55636597 -16.48534775]
[133.13485718 -32.12014771]
[144.83515930 -41.33709335]
[150.08187866 -55.38956451]
[155.32859802 -69.44203186]
[160.57531738 -83.49450684]
[165.18933105 -97.76724243]
[169.16142273 -112.23176575]
[173.13351440 -126.69628906]
[177.10562134 -141.16081238]
[181.07771301 -155.62533569]
[185.04980469 -170.08985901]
[189.02191162 -184.55438232]
[192.99400330 -199.01890564]
[178.97683716 -204.39347839]
[165.55398560 -211.11611938]
[152.85470581 -219.12205505]
[141.00131226 -228.33421326]
[130.10795593 -238.66386414]
[120.27956390 -250.01152039]
[111.61076355 -262.26788330]
[104.18505859 -275.31494141]
[98.07396698 -289.02703857]
[93.33633423 -303.27209473]
[90.01779938 -317.91293335]
[88.15030670 -332.80853271]
[87.75186157 -347.81549072]
[88.82627869 -362.78921509]
[91.36322784 -377.58551025]
[95.33827209 -392.06188965]
[100.71312714 -406.07894897]
[107.43602753 -419.50167847]
[115.44223022 -432.20077515]
[124.65462494 -444.05398560]
[134.98448181 -454.94714355]
[146.33233643 -464.77532959]
[158.58888245 -473.44387817]
[171.63609314 -480.86932373]
[185.34831238 -486.98013306]
[199.59346008 -491.71746826]
[214.23435974 -495.03573608]
[229.13000488 -496.90292358]
[244.13694763 -497.30105591]
[259.11065674 -496.22634888]
[273.90692139 -493.68908691]
[288.38320923 -489.71377563]
[302.40017700 -484.33862305]
[315.82275391 -477.61544800]
[328.52169800 -469.60900879]
[340.37472534 -460.39636230]
[351.26766968 -450.06628418]
[361.09561157 -438.71823120]
[369.76391602 -426.46151733]
[377.18911743 -413.41415405]
[383.29965210 -399.70184326]
[388.03671265 -385.45657349]
[391.35467529 -370.81561279]
[393.22155762 -355.91992188]
[393.61941528 -340.91299438]
[392.54437256 -325.93930054]
[390.00683594 -311.14309692]
[386.03121948 -296.66687012]
[380.65582275 -282.65002441]
[373.93237305 -269.22756958]
[365.92565918 -256.52877808]
[356.71279907 -244.67594910]
[346.38250732 -233.78320312]
[335.03424072 -223.95549011]
[322.77734375 -215.28742981]
[309.72985840 -207.86250305]
[296.01739502 -201.75222778]
[281.77206421 -197.01545715]
[267.13101196 -193.69779968]
[252.23529053 -191.83120728]
[237.22833252 -191.43365479]
[222.25468445 -192.50897217]
[207.45852661 -195.04681396]
[203.48643494 -180.58229065]
[199.51432800 -166.11776733]
[195.54223633 -151.65324402]
[191.57014465 -137.18872070]
[187.59803772 -122.72418976]
[183.62594604 -108.25966644]
[179.65385437 -93.79514313]
[193.19219971 -100.25370026]
[207.37757874 -95.37772369]
[214.08395386 -81.96039581]
[209.46960449 -67.68777466]
[196.17784119 -60.73586273]
[181.82279968 -65.08702850]
[174.62779236 -78.24778748]
[169.38107300 -64.19531250]
[164.13435364 -50.14284515]
[158.88763428 -36.09037399]
[161.68441772 -21.46070290]
[149.60884094 -11.23863029]
[152.40562439 3.39103985]
[140.33003235 13.61311245]
[135.08331299 27.66558456]
[137.88009644 42.29525375]
[125.80451202 52.51732635]
[120.55779266 66.56980133]
[115.31107330 80.62226868]
[110.06436157 94.67474365]
[122.90427399 86.91996765]
[137.90103149 87.23158264]
[150.40773010 95.51303864]
[156.54902649 109.19823456]
[154.42198181 124.04665375]
[144.68566895 135.45736694]
[130.35700989 139.89462280]
[115.87586975 135.98350525]
[105.72941589 124.93591309]
[103.06164551 110.17479706]
[95.98454285 123.40032959]
[88.90743256 136.62585449]
[81.83032990 149.85137939]
[82.14130402 165.66952515]
[69.31449127 173.24067688]
[62.23738861 186.46620178]
[55.16028214 199.69172668]
[55.47125626 215.50988770]
[42.64444733 223.08102417]
[35.56734467 236.30654907]
[34.27766800 245.34948730]
[28.28514481 249.67515564]
[21.01191521 262.79385376]
[14.13250160 276.12329102]
[7.65300608 289.65161133]
[1.17351031 303.17996216]
[-5.30598545 316.70831299]
[-11.78548145 330.23666382]
[-18.26497650 343.76501465]
[-5.65801287 351.93157959]
[5.80109596 361.64328003]
[15.92418003 372.74063110]
[24.54500961 385.04144287]
[31.52202225 398.34368896]
[36.74065018 412.42892456]
[40.11520004 427.06588745]
[41.59025192 442.01422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[49 196]
[50 195]
[51 193]
[52 192]
[54 190]
[55 189]
[56 188]
[58 186]
[59 185]
[60 184]
[61 183]
[62 173]
[63 172]
[64 171]
[65 170]
[67 168]
[68 167]
[70 165]
[72 163]
[73 162]
[74 161]
[75 160]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
