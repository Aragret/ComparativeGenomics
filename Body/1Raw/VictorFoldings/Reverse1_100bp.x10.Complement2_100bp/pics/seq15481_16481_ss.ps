%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCCGCUUAUCCUUUAUAGUAAGCCCGAACUACACCCCUCCCCACAAAUUCCCCAACCGAUCCCAUAUUAACAGACCCAGCGGAUCCUCCAGACCACUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[88.86891937 584.64471436]
[75.61548615 591.78894043]
[61.16618347 596.02117920]
[46.15268707 597.15631104]
[31.23131180 595.14477539]
[17.05436325 590.07446289]
[4.24159241 582.16711426]
[-6.64687920 571.76831055]
[-15.13505554 559.33270264]
[-20.85186958 545.40386963]
[-23.54740524 530.59075928]
[-23.10382843 515.54095459]
[-19.54052734 500.91235352]
[-13.01327705 487.34442139]
[-3.80741835 475.43032837]
[7.67460680 465.69085693]
[20.93085289 458.55184937]
[35.38181686 454.32534790]
[50.39575958 453.19610596]
[52.39977264 438.33059692]
[54.40378952 423.46505737]
[45.19712067 411.81289673]
[47.01770782 396.70858765]
[59.30199051 387.13079834]
[61.30600357 372.26525879]
[63.31001663 357.39974976]
[61.71963882 355.09130859]
[60.94783401 352.01382446]
[61.29210281 348.47589111]
[62.93283844 344.88806152]
[65.90138245 341.71920776]
[68.78665161 326.99932861]
[71.67192841 312.27941895]
[74.55719757 297.55953979]
[77.44247437 282.83963013]
[80.32774353 268.11975098]
[82.22103882 253.23971558]
[83.11385345 238.26631165]
[84.00666809 223.29290771]
[84.89948273 208.31950378]
[85.79229736 193.34608459]
[75.97525024 185.00013733]
[72.70890045 172.33470154]
[77.40269470 159.91783142]
[88.55264282 152.36181641]
[89.66828918 137.40336609]
[90.78393555 122.44491577]
[91.89958954 107.48646545]
[79.00341034 115.14731598]
[64.91997528 109.98427582]
[60.03107071 95.80335999]
[67.94061279 83.05818939]
[82.81797791 81.14405060]
[93.69553375 91.47042084]
[95.92065430 76.63637543]
[98.14577484 61.80233002]
[99.92823792 46.90861511]
[101.26647186 31.96842957]
[102.49344635 17.01869583]
[103.60909271 2.06024241]
[104.72474670 -12.89821053]
[105.84039307 -27.85666466]
[105.28218079 -42.84627533]
[103.05706787 -57.68031693]
[100.83194733 -72.51435852]
[86.00499725 -75.57815552]
[73.14501953 -83.51496887]
[63.79399109 -95.35044861]
[59.06538391 -109.64416504]
[59.51158142 -124.66489410]
[65.05944061 -138.60031128]
[75.02143097 -149.77563477]
[88.18080139 -156.85490417]
[85.95568848 -171.68894958]
[83.73056793 -186.52299500]
[81.50545502 -201.35704041]
[77.13765717 -209.37951660]
[79.35934448 -216.42834473]
[77.35533142 -231.29386902]
[62.33070755 -231.37672424]
[47.46384811 -233.54986572]
[33.04413223 -237.77099609]
[19.35225296 -243.95796204]
[6.65471888 -251.99032593]
[-4.80130434 -261.71173096]
[-14.79282284 -272.93295288]
[-23.12534904 -285.43554688]
[-29.63668823 -298.97616577]
[-34.20009232 -313.29125977]
[-36.72673798 -328.10214233]
[-37.16744232 -343.12051392]
[-35.51362610 -358.05407715]
[-31.79747772 -372.61209106]
[-26.09133720 -386.51123047]
[-18.50627518 -399.48092651]
[-9.18993855 -411.26873779]
[1.67632997 -421.64517212]
[13.88101387 -430.40826416]
[27.18654442 -437.38745117]
[41.33392715 -442.44683838]
[56.04777908 -445.48800659]
[71.04169464 -446.45175171]
[86.02380371 -445.31924438]
[100.70247650 -442.11260986]
[114.79199982 -436.89422607]
[128.01809692 -429.76565552]
[140.12335205 -420.86572266]
[150.87208557 -410.36758423]
[160.05511475 -398.47564697]
[167.49365234 -385.42135620]
[173.04293823 -371.45886230]
[176.59494019 -356.85989380]
[178.08050537 -341.90869141]
[177.47073364 -326.89620972]
[174.77748108 -312.11471558]
[170.05317688 -297.85192871]
[163.38978577 -284.38546753]
[154.91702271 -271.97747803]
[144.79978943 -260.86947632]
[133.23503113 -251.27767944]
[120.44786072 -243.38879395]
[106.68718719 -237.35638428]
[92.22085571 -233.29788208]
[94.22487640 -218.43235779]
[96.33950043 -203.58215332]
[98.56461334 -188.74810791]
[100.78973389 -173.91406250]
[103.01484680 -159.08003235]
[117.67213440 -156.17326355]
[130.47453308 -148.41261292]
[139.86688232 -136.71824646]
[144.70051575 -122.48949432]
[144.37379456 -107.43747711]
[138.90684509 -93.37928772]
[128.94148254 -82.01866150]
[115.66599274 -74.73947906]
[117.89110565 -59.90543365]
[120.11622620 -45.07139206]
[125.52350616 -59.06286240]
[135.56593323 -70.20510864]
[148.92224121 -77.03218079]
[163.83518982 -78.64585114]
[178.34272766 -74.83382416]
[190.53611755 -66.09763336]
[198.81112671 -53.58666611]
[202.07904053 -38.94696808]
[199.90989685 -24.10463715]
[192.58908081 -11.01243782]
[181.07977295 -1.39287460]
[166.89624023 3.48843336]
[151.90454102 2.98926640]
[138.07711792 -2.82470155]
[127.23318481 -13.18854332]
[120.79884338 -26.74101639]
[119.68319702 -11.78256226]
[118.56755066 3.17589116]
[117.45189667 18.13434410]
[120.08920288 25.03843307]
[116.20665741 33.30666351]
[114.86842346 48.24684906]
[116.56029510 50.48196030]
[117.46874237 53.52191162]
[117.28279114 57.07167816]
[115.80390167 60.72919083]
[112.97981262 64.02745056]
[110.75469971 78.86149597]
[108.52957916 93.69553375]
[106.85803986 108.60211182]
[105.74239349 123.56056213]
[104.62673950 138.51901245]
[103.51109314 153.47747803]
[115.16734314 166.52166748]
[113.80992889 183.62348938]
[100.76570892 194.23890686]
[99.87289429 209.21231079]
[98.98007202 224.18571472]
[98.08725739 239.15911865]
[97.19444275 254.13253784]
[107.19402313 242.95181274]
[121.62220764 238.84967041]
[136.00825500 243.09719849]
[145.89451599 254.37825012]
[148.21759033 269.19726562]
[142.25767517 282.96240234]
[129.86151123 291.40841675]
[114.87017822 291.91818237]
[101.92890167 284.33377075]
[95.04763794 271.00503540]
[92.16236115 285.72491455]
[89.27709198 300.44479370]
[86.39181519 315.16470337]
[83.50654602 329.88458252]
[80.62127686 344.60449219]
[78.17554474 359.40374756]
[76.17153168 374.26928711]
[74.16751862 389.13479614]
[83.47700500 401.62365723]
[81.23288727 416.67086792]
[69.26931763 425.46908569]
[67.26530457 440.33459473]
[65.26129150 455.20013428]
[79.44023132 460.26483154]
[92.25611115 468.16717529]
[103.14867401 478.56167603]
[111.64173889 490.99395752]
[117.36403656 504.92050171]
[120.06539917 519.73254395]
[119.62773895 534.78253174]
[116.07019806 549.41253662]
[109.54828644 562.98303223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 201]
[20 200]
[21 199]
[24 196]
[25 195]
[26 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[45 171]
[46 170]
[47 169]
[48 168]
[54 167]
[55 166]
[56 165]
[57 160]
[58 159]
[59 157]
[60 156]
[61 155]
[62 154]
[63 138]
[64 137]
[65 136]
[73 128]
[74 127]
[75 126]
[76 125]
[78 124]
[79 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
