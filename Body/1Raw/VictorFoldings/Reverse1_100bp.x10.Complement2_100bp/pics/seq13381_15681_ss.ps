%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[36.60570145 409.19906616]
[32.73479080 423.70492554]
[27.39287186 437.73590088]
[20.63656616 451.14321899]
[12.53749752 463.78479004]
[3.18151832 475.52658081]
[-7.33219242 486.24411011]
[-18.89218330 495.82382202]
[-31.37590981 504.16412354]
[-44.65104294 511.17660522]
[-58.57685089 516.78692627]
[-73.00572205 520.93566895]
[-87.78469086 523.57873535]
[-102.75710297 524.68823242]
[-117.76423645 524.25231934]
[-132.64700317 522.27569580]
[-147.24765015 518.77923584]
[-161.41139221 513.80004883]
[-174.98808289 507.39086914]
[-187.83381653 499.61968994]
[-199.81240845 490.56887817]
[-210.79687500 480.33435059]
[-220.67079163 469.02462769]
[-229.32946777 456.75958252]
[-236.68113708 443.66925049]
[-242.64785767 429.89236450]
[-247.16638184 415.57498169]
[-250.18881226 400.86889648]
[-251.68310547 385.92999268]
[-251.63340759 370.91662598]
[-250.04028320 355.98791504]
[-246.92057800 341.30215454]
[-242.30738831 327.01501465]
[-236.24960327 313.27795410]
[-228.81146240 300.23654175]
[-220.07177734 288.02908325]
[-210.12322998 276.78497314]
[-199.07125854 266.62338257]
[-187.03302002 257.65203857]
[-174.13612366 249.96604919]
[-160.51730347 243.64689636]
[-146.32092285 238.76155090]
[-131.69744873 235.36180115]
[-116.80192566 233.48370361]
[-101.79223633 233.14715576]
[-86.82749939 234.35571289]
[-72.06634521 237.09658813]
[-57.66525269 241.34071350]
[-43.77688217 247.04310608]
[-30.54846001 254.14329529]
[-22.13384056 241.72579956]
[-13.71922207 229.30830383]
[-5.30460358 216.89080811]
[3.11001492 204.47331238]
[-11.60369873 207.38992310]
[-24.80992126 200.27685547]
[-30.47094345 186.38610840]
[-25.99862289 172.06834412]
[-13.43764496 163.86946106]
[1.46928084 165.53785706]
[11.90690899 176.31079102]
[13.10280991 191.26478577]
[22.76362038 179.79008484]
[32.42443085 168.31538391]
[42.08524323 156.84068298]
[51.74605179 145.36598206]
[61.40686417 133.89128113]
[71.06767273 122.41658783]
[73.34584045 107.69723511]
[88.15277863 102.12361908]
[74.14597321 107.49106598]
[59.14944077 107.81339264]
[44.92494965 103.05273438]
[33.14358139 93.76836395]
[25.18940544 81.05101776]
[21.99686432 66.39469910]
[23.94101524 51.52122116]
[30.79346466 38.17790985]
[41.74919128 27.93232155]
[55.52112579 21.98809814]
[70.49135590 21.04356194]
[84.90119934 25.20967293]
[97.05779266 33.99700546]
[105.53299713 46.37322617]
[109.33115387 60.88439560]
[108.00606537 75.82575226]
[101.71249390 89.44329071]
[113.80824280 80.57239532]
[125.90399933 71.70149994]
[137.99975586 62.83060455]
[140.72831726 50.22434616]
[150.98551941 43.08477020]
[162.96104431 44.79165268]
[175.18753052 36.10182953]
[187.41401672 27.41200447]
[199.64050293 18.72217941]
[211.32807922 9.32002926]
[222.43531799 -0.76110959]
[233.54254150 -10.84224796]
[244.64978027 -20.92338753]
[235.62960815 -32.92176437]
[227.75498962 -45.70124435]
[221.09312439 -59.15279388]
[215.70083618 -73.16164398]
[211.62414551 -87.60827637]
[208.89782715 -102.36943817]
[207.54513550 -117.31918335]
[207.57762146 -132.32995605]
[208.99499512 -147.27371216]
[211.78518677 -162.02293396]
[215.92436218 -176.45178223]
[221.37722778 -190.43716431]
[228.09725952 -203.85975647]
[236.02711487 -216.60504150]
[245.09913635 -228.56425476]
[255.23593140 -239.63539124]
[266.35101318 -249.72399902]
[278.34951782 -258.74395752]
[291.12915039 -266.61837769]
[304.58081055 -273.28002930]
[318.58975220 -278.67205811]
[333.03643799 -282.74850464]
[347.79763794 -285.47457886]
[362.74740601 -286.82702637]
[377.75820923 -286.79431152]
[392.70193481 -285.37667847]
[407.45111084 -282.58624268]
[421.87988281 -278.44680786]
[435.86517334 -272.99371338]
[449.28765869 -266.27346802]
[462.03280640 -258.34341431]
[473.99188232 -249.27117920]
[485.06283569 -239.13420105]
[495.15124512 -228.01895142]
[504.17102051 -216.02027893]
[512.04522705 -203.24053955]
[518.70660400 -189.78877258]
[524.09844971 -175.77973938]
[528.17468262 -161.33296204]
[530.90051270 -146.57171631]
[532.25268555 -131.62193298]
[532.21966553 -116.61114502]
[530.80181885 -101.66744232]
[528.01116943 -86.91831207]
[523.87145996 -72.48960114]
[518.41815186 -58.50439835]
[511.69766235 -45.08203506]
[503.76739502 -32.33702087]
[494.69497681 -20.37810135]
[484.55780029 -9.30730057]
[473.44241333 0.78092331]
[461.44357300 9.80049992]
[448.66369629 17.67447662]
[435.21182251 24.33567238]
[421.20269775 29.72725487]
[406.75585938 33.80322647]
[391.99456787 36.52881241]
[377.04473877 37.88075256]
[362.03396606 37.84751892]
[347.09030151 36.42938995]
[332.34121704 33.63846970]
[317.91256714 29.49856377]
[303.92745972 24.04500008]
[290.50518799 17.32430267]
[277.76031494 9.39381218]
[265.80154419 0.32119182]
[254.73092651 -9.81615353]
[243.62368774 0.26498529]
[232.51644897 10.34612370]
[221.40921021 20.42726326]
[236.40667725 20.15123749]
[248.76782227 28.64842415]
[253.88224792 42.74958420]
[249.84239197 57.19533157]
[238.15502930 66.59776306]
[223.17926025 67.44999695]
[210.50067139 59.43417740]
[204.84806824 45.54000854]
[208.33032227 30.94866562]
[196.10383606 39.63848877]
[183.87734985 48.32831573]
[171.65086365 57.01813889]
[165.21679688 73.34510040]
[146.87065125 74.92635345]
[134.77488708 83.79724884]
[122.67913818 92.66814423]
[110.58338928 101.53903961]
[99.62747955 111.78443146]
[96.65830231 127.32453156]
[82.54237366 132.07739258]
[72.88156128 143.55209351]
[63.22075272 155.02679443]
[53.55994034 166.50149536]
[43.89913177 177.97619629]
[34.23831940 189.45089722]
[24.57751083 200.92559814]
[15.52751064 212.88793945]
[7.11289167 225.30543518]
[-1.30172670 237.72293091]
[-9.71634579 250.14042664]
[-18.13096428 262.55792236]
[-6.63374186 272.21286011]
[3.80979586 282.99880981]
[13.08894253 294.80139160]
[21.10533333 307.49554443]
[27.77399063 320.94668579]
[33.02422333 335.01220703]
[36.80037689 349.54302979]
[39.06241608 364.38510132]
[39.78636932 379.38110352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 201]
[51 200]
[52 199]
[53 198]
[54 197]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[70 188]
[87 187]
[88 186]
[89 185]
[90 184]
[93 182]
[94 181]
[95 180]
[96 179]
[97 170]
[98 169]
[99 168]
[100 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
