%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[202.32458496 460.47393799]
[200.76405334 445.55532837]
[199.20353699 430.63674927]
[197.64300537 415.71813965]
[195.74971008 400.83810425]
[193.52459717 386.00405884]
[191.29948425 371.17001343]
[187.86842346 356.56768799]
[183.25440979 342.29495239]
[178.64039612 328.02221680]
[165.30366516 321.49023438]
[160.42108154 307.08139038]
[167.36285400 293.13687134]
[162.74885559 278.86413574]
[158.13484192 264.59140015]
[153.52082825 250.31866455]
[148.37887573 236.22752380]
[142.71607971 222.33749390]
[137.05329895 208.44746399]
[131.39051819 194.55744934]
[119.42097473 185.69294739]
[121.37589264 169.99298096]
[106.95350647 159.99490356]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[81.64292908 78.27348328]
[74.17518616 65.26453400]
[66.70744324 52.25558090]
[59.72105408 46.37100983]
[59.22701263 38.99688339]
[51.95378494 25.87819099]
[44.68055344 12.75949669]
[38.10079193 26.23936081]
[23.49335289 29.64857292]
[11.62629795 20.47398949]
[11.24757671 5.47877169]
[22.63636971 -4.28316450]
[37.39593887 -1.61664510]
[31.11857986 -15.23996162]
[24.84121895 -28.86327744]
[18.56385803 -42.48659515]
[11.98383045 -55.96632767]
[5.10441780 -69.29575348]
[-1.77499449 -82.62518311]
[-16.56216431 -87.52185822]
[-23.34898376 -101.13779449]
[-18.58962631 -115.20492554]
[-25.46903992 -128.53434753]
[-32.34845352 -141.86378479]
[-47.55545044 -144.32415771]
[-58.27253723 -155.14068604]
[-60.53866196 -170.01780701]
[-53.69196320 -183.21859741]
[-60.57137299 -196.54801941]
[-67.45078278 -209.87745667]
[-82.23795319 -214.77412415]
[-89.02477264 -228.39006042]
[-84.26541901 -242.45718384]
[-91.14482880 -255.78662109]
[-98.02424622 -269.11605835]
[-104.90365601 -282.44546509]
[-111.78306580 -295.77490234]
[-118.66248322 -309.10433960]
[-132.79588318 -304.01492310]
[-147.47268677 -300.81390381]
[-162.44174194 -299.55606079]
[-177.44692993 -300.26284790]
[-192.23146057 -302.92224121]
[-206.54238892 -307.48870850]
[-220.13481140 -313.88409424]
[-232.77613831 -321.99899292]
[-244.25009155 -331.69454956]
[-254.36029053 -342.80484009]
[-262.93377686 -355.13977051]
[-269.82382202 -368.48825073]
[-274.91256714 -382.62191772]
[-278.11288452 -397.29885864]
[-279.37002563 -412.26797485]
[-278.66250610 -427.27313232]
[-276.00244141 -442.05755615]
[-271.43527222 -456.36825562]
[-265.03924561 -469.96035767]
[-256.92373657 -482.60131836]
[-247.22763062 -494.07479858]
[-236.11686707 -504.18447876]
[-223.78152466 -512.75738525]
[-210.43270874 -519.64678955]
[-196.29882812 -524.73486328]
[-181.62171936 -527.93444824]
[-166.65254211 -529.19091797]
[-151.64743042 -528.48266602]
[-136.86314392 -525.82189941]
[-122.55265045 -521.25402832]
[-108.96083832 -514.85736084]
[-96.32028198 -506.74124146]
[-84.84725952 -497.04461670]
[-74.73810577 -485.93334961]
[-66.16579437 -473.59762573]
[-59.27701187 -460.24847412]
[-54.18963242 -446.11434937]
[-50.99070740 -431.43707275]
[-49.73497391 -416.46783447]
[-50.44392395 -401.46276855]
[-53.10542297 -386.67858887]
[-57.67393112 -372.36834717]
[-64.07127380 -358.77682495]
[-72.18798065 -346.13665771]
[-81.88516998 -334.66409302]
[-92.99690247 -324.55548096]
[-105.33305359 -315.98373413]
[-98.45363617 -302.65432739]
[-91.57422638 -289.32489014]
[-84.69481659 -275.99545288]
[-77.81539917 -262.66601562]
[-70.93598938 -249.33659363]
[-56.71268845 -245.06655884]
[-49.54610443 -231.64662170]
[-54.12135696 -216.75686646]
[-47.24194336 -203.42742920]
[-40.36253357 -190.09800720]
[-25.63614464 -188.03125000]
[-14.82263565 -177.56549072]
[-12.21472931 -162.56375122]
[-19.01902199 -148.74319458]
[-12.13961029 -135.41377258]
[-5.26019764 -122.08433533]
[8.96310329 -117.81429291]
[16.12968826 -104.39435577]
[11.55443478 -89.50460052]
[18.43384743 -76.17517090]
[25.31325912 -62.84574127]
[28.54300308 -61.43113708]
[31.24803352 -58.38190079]
[32.66752625 -53.96168137]
[32.18717575 -48.76395416]
[38.46453476 -35.14063644]
[44.74189758 -21.51732254]
[51.01925659 -7.89400578]
[57.79924774 5.48626757]
[65.07247925 18.60496140]
[72.34570312 31.72365570]
[79.71640015 44.78784180]
[87.18413544 57.79679489]
[94.65187836 70.80574799]
[97.59499359 56.09730911]
[108.54290771 45.84337616]
[123.41231537 43.86840439]
[136.65731812 50.90901566]
[143.33782959 64.33923340]
[140.96218872 79.14991760]
[130.41647339 89.81704712]
[115.63394928 92.36205292]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[135.06271362 141.44424438]
[139.66680908 153.06259155]
[135.26593018 164.33020020]
[147.64050293 174.18820190]
[145.28053284 188.89465332]
[150.94332886 202.78468323]
[156.60610962 216.67471313]
[162.26890564 230.56474304]
[170.40386963 217.96226501]
[185.31292725 216.31301880]
[196.00567627 226.83277893]
[194.59980774 241.76675415]
[182.13169861 250.10617065]
[167.79356384 245.70465088]
[172.40757751 259.97738647]
[177.02159119 274.25012207]
[181.63558960 288.52285767]
[195.42648315 295.76501465]
[199.90243530 310.30532837]
[192.91313171 323.40820312]
[197.52714539 337.68093872]
[202.14115906 351.95367432]
[206.37841797 337.56460571]
[216.75079346 326.72882080]
[230.94107056 321.86712646]
[245.77908325 324.06558228]
[257.95001221 332.83303833]
[264.73480225 346.21087646]
[264.61776733 361.21041870]
[257.62500000 374.48074341]
[245.31872559 383.05722046]
[230.44821167 385.02383423]
[216.33554077 379.94122314]
[206.13352966 368.94488525]
[208.35864258 383.77893066]
[210.58375549 398.61297607]
[213.83679199 402.69525146]
[215.07482910 407.16967773]
[214.48594666 411.20306396]
[212.56161499 414.15762329]
[214.12213135 429.07620239]
[215.68266296 443.99481201]
[217.24317932 458.91342163]
[230.74440002 466.56173706]
[237.14088440 480.69909668]
[233.97305298 495.88937378]
[222.45899963 506.29159546]
[207.02613831 507.90591431]
[193.60868835 500.11157227]
[187.36593628 485.90567017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 196]
[6 195]
[7 194]
[8 182]
[9 181]
[10 180]
[13 177]
[14 176]
[15 175]
[16 174]
[17 168]
[18 167]
[19 166]
[20 165]
[22 163]
[24 160]
[25 159]
[26 158]
[28 156]
[29 147]
[30 146]
[31 145]
[33 144]
[34 143]
[35 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 134]
[46 133]
[47 132]
[50 129]
[51 128]
[52 127]
[56 123]
[57 122]
[58 121]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
