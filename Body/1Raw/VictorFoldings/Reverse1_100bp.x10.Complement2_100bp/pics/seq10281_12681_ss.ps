%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[83.43595123 583.30883789]
[74.01461792 571.51300049]
[68.12619781 557.61230469]
[66.20763397 542.63830566]
[68.40129852 527.70208740]
[74.54441833 513.91204834]
[84.18112183 502.29153442]
[96.59630585 493.70281982]
[110.86868286 488.78329468]
[109.97586823 473.80987549]
[109.08304596 458.83648682]
[108.19023132 443.86306763]
[105.80991364 441.26184082]
[104.57127380 437.37841797]
[105.06320953 432.76202393]
[107.60709381 428.20397949]
[107.38376617 413.20562744]
[107.16043854 398.20730591]
[103.91769409 391.56604004]
[107.04710388 382.98437500]
[107.04710388 367.98437500]
[107.04710388 352.98437500]
[106.37731934 337.99935913]
[105.03908539 323.05917358]
[101.31137085 316.67745972]
[103.79383850 307.88684082]
[102.67819214 292.92837524]
[91.25951385 283.43368530]
[89.91499329 268.27957153]
[99.95133209 256.36700439]
[98.83567810 241.40853882]
[97.72003174 226.45008850]
[96.60438538 211.49163818]
[87.94190216 199.37509155]
[94.63136292 185.03767395]
[93.51571655 170.07920837]
[84.85323334 157.96266174]
[91.54269409 143.62524414]
[82.53478241 155.61930847]
[68.23161316 160.13809204]
[53.96792221 155.49621582]
[45.06370926 143.42497253]
[44.84002304 128.42663574]
[53.38029861 116.09522247]
[67.49922180 111.03004456]
[81.93077850 115.12028503]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[82.71196747 82.67575836]
[67.73619080 83.52782440]
[55.64156723 74.65539551]
[51.95759583 60.11481857]
[58.36854172 46.55385208]
[71.94340515 40.17238998]
[86.47594452 43.88794708]
[95.32259369 56.00360107]
[97.54771423 41.16955566]
[99.77282715 26.33551216]
[101.99794769 11.50146961]
[104.22306061 -3.33257437]
[106.44818115 -18.16661835]
[108.34146881 -33.04665375]
[109.90199280 -47.96525955]
[111.46251678 -62.88386154]
[113.02304077 -77.80246735]
[114.58356476 -92.72106934]
[115.92179871 -107.66125488]
[117.03744507 -122.61971283]
[118.15309906 -137.57817078]
[118.82288361 -152.56320190]
[119.04621124 -167.56153870]
[119.26953888 -182.55987549]
[110.86241913 -192.34165955]
[111.35720062 -204.82920837]
[119.94364929 -213.34973145]
[120.39025879 -228.34307861]
[113.06726837 -242.36750793]
[121.18007660 -254.85876465]
[121.62668610 -269.85211182]
[121.18007660 -284.84545898]
[119.84184265 -299.78564453]
[118.50360870 -314.72583008]
[117.16537476 -329.66601562]
[108.22773743 -342.72088623]
[114.79871368 -356.08767700]
[113.46047974 -371.02786255]
[98.53198242 -373.04971313]
[84.42785645 -378.34323120]
[71.85556030 -386.64294434]
[61.44571686 -397.53250122]
[53.72047043 -410.46572876]
[49.06732559 -424.79388428]
[47.71967697 -439.79827881]
[49.74512100 -454.72628784]
[55.04206467 -468.82910156]
[63.34481812 -481.39941406]
[74.23691559 -491.80661011]
[87.17201233 -499.52871704]
[101.50128937 -504.17840576]
[116.50600433 -505.52239990]
[131.43351746 -503.49334717]
[145.53506470 -498.19299316]
[158.10334778 -489.88717651]
[168.50791931 -478.99255371]
[176.22688293 -466.05560303]
[180.87309265 -451.72518921]
[182.21347046 -436.72015381]
[180.18078613 -421.79315186]
[174.87701416 -407.69287109]
[166.56817627 -395.12661743]
[155.67103577 -384.72467041]
[142.73219299 -377.00885010]
[128.40066528 -372.36611938]
[129.73889160 -357.42593384]
[138.58081055 -345.43969727]
[132.10556030 -331.00427246]
[133.44378662 -316.06408691]
[134.78202820 -301.12390137]
[136.12025452 -286.18371582]
[144.94860840 -298.31054688]
[159.18290710 -303.04177856]
[173.51412964 -298.61279297]
[182.59707642 -286.67544556]
[183.04403687 -271.68209839]
[174.68830872 -259.22491455]
[160.64636230 -253.95008850]
[146.15550232 -257.82501221]
[136.62002563 -269.40551758]
[136.17343140 -254.41215515]
[143.52835083 -241.46015930]
[135.38360596 -227.89648438]
[134.93699646 -212.90312195]
[144.07568359 -197.92143250]
[134.26786804 -182.33654785]
[134.04454041 -167.33821106]
[133.82121277 -152.33987427]
[135.67463684 -150.23678589]
[136.80668640 -147.27282715]
[136.88526917 -143.71905518]
[135.68249512 -139.96168518]
[133.11155701 -136.46250916]
[131.99589539 -121.50405884]
[130.88024902 -106.54560852]
[133.26268005 -102.40639496]
[133.07015991 -96.72660828]
[129.50216675 -91.16055298]
[127.94164276 -76.24194336]
[126.38112640 -61.32334137]
[124.82060242 -46.40473557]
[123.26007843 -31.48612976]
[125.18441010 -28.53159523]
[125.77329254 -24.49820137]
[124.53524780 -20.02377129]
[121.28222656 -15.94150066]
[119.05710602 -1.10745728]
[116.83199310 13.72658634]
[114.60687256 28.56063080]
[112.38175201 43.39467239]
[110.15663910 58.22871780]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[106.50114441 142.50959778]
[115.24342346 155.69607544]
[108.47416687 168.96356201]
[109.58981323 183.92201233]
[118.33209229 197.10848999]
[111.56283569 210.37599182]
[112.67848206 225.33444214]
[113.79413605 240.29289246]
[114.90978241 255.25134277]
[126.60220337 265.54333496]
[127.52053833 280.72921753]
[117.63665009 291.81274414]
[118.75229645 306.77117920]
[119.97927094 321.72091675]
[121.31750488 336.66110229]
[131.74157715 325.87506104]
[146.73640442 325.48126221]
[157.71228027 335.70526123]
[158.38169861 350.69033813]
[148.36120605 361.85229492]
[133.39099121 362.79711914]
[122.04710388 352.98437500]
[122.04710388 367.98437500]
[122.04710388 382.98437500]
[122.15877533 397.98397827]
[122.38210297 412.98229980]
[122.60543060 427.98065186]
[123.16363525 442.97024536]
[124.05645752 457.94366455]
[124.94927216 472.91705322]
[125.84208679 487.89047241]
[140.59793091 491.07916260]
[153.94575500 498.13168335]
[164.89505005 508.52474976]
[172.63331604 521.48706055]
[176.58633423 536.05676270]
[176.46073914 551.15264893]
[172.26586914 565.65460205]
[164.31301880 578.48638916]
[153.19230652 588.69580078]
[139.72900391 595.52526855]
[124.92214966 598.46801758]
[109.87052155 597.30566406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[16 194]
[17 193]
[18 192]
[20 191]
[21 190]
[22 189]
[23 182]
[24 181]
[26 180]
[27 179]
[30 176]
[31 175]
[32 174]
[33 173]
[35 171]
[36 170]
[38 168]
[47 167]
[48 166]
[50 164]
[51 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 158]
[64 157]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 146]
[71 145]
[72 144]
[73 139]
[74 138]
[75 137]
[78 135]
[79 134]
[81 132]
[82 131]
[83 122]
[84 121]
[85 120]
[86 119]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
