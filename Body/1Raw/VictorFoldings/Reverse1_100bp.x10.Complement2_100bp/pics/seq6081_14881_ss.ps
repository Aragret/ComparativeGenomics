%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[179.98860168 435.79489136]
[178.42808533 420.87628174]
[176.86756897 405.95767212]
[175.30703735 391.03906250]
[173.74652100 376.12045288]
[172.18598938 361.20187378]
[169.63015747 346.42120361]
[166.09048462 331.84481812]
[162.55081177 317.26846313]
[158.90272522 302.71884155]
[154.50172424 288.37899780]
[149.46481323 274.24996948]
[144.42790222 260.12094116]
[139.39097595 245.99189758]
[134.35406494 231.86286926]
[120.39249420 221.23077393]
[123.86059570 203.14613342]
[118.61387634 189.09367371]
[113.36715698 175.04119873]
[108.12043762 160.98872375]
[102.81852722 175.02046204]
[90.34523010 183.35214233]
[75.35277557 182.87625122]
[63.43299103 173.77027893]
[59.03165054 159.43052673]
[63.79035187 145.20538330]
[75.93421173 136.40046692]
[90.93387604 136.29978943]
[103.19554138 144.94183350]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[75.56707764 61.22154999]
[80.29332733 47.09668350]
[76.97106934 32.46922302]
[73.64881134 17.84176254]
[70.32655334 3.21430206]
[67.00428772 -11.41315842]
[63.68202972 -26.04061890]
[60.13439178 -29.86963272]
[58.56698227 -34.23958969]
[58.85424423 -38.30561066]
[60.55350113 -41.39508820]
[57.88770294 -56.15630341]
[55.22190857 -70.91751862]
[52.55611420 -85.67874146]
[42.48941803 -97.88415527]
[47.84166336 -111.78389740]
[45.17586899 -126.54511261]
[42.51007462 -141.30633545]
[39.84427643 -156.06755066]
[37.17848206 -170.82876587]
[33.80535507 -174.81236267]
[32.43463516 -179.24795532]
[32.90317154 -183.29708862]
[34.73868561 -186.30761719]
[32.73466873 -201.17314148]
[30.73065567 -216.03866577]
[27.53877258 -220.16891479]
[26.36747932 -224.66128540]
[27.01634979 -228.68547058]
[28.98445892 -231.61102295]
[27.64622498 -246.55120850]
[26.30799103 -261.49139404]
[20.87817955 -247.50865173]
[12.30022621 -235.20341492]
[1.05925739 -225.27162170]
[-12.20899677 -218.27494812]
[-26.75415039 -214.60910034]
[-41.75360870 -214.48138428]
[-56.35907364 -217.89903259]
[-69.74453735 -224.66877747]
[-81.15299225 -234.40773010]
[-89.93923187 -246.56510925]
[-95.60634613 -260.45336914]
[-97.83383942 -275.28704834]
[-96.49572754 -290.22726440]
[-91.66770172 -304.42901611]
[-83.62279510 -317.08917236]
[-72.81599426 -327.49172974]
[-59.85847855 -335.04837036]
[-45.48305130 -339.33172607]
[-30.50271606 -340.09954834]
[-15.76468277 -337.30841064]
[-2.10245895 -331.11618042]
[9.71129036 -321.87307739]
[19.00844002 -310.10177612]
[25.26319122 -296.46807861]
[28.12188530 -281.74191284]
[32.09398270 -296.20642090]
[36.06607819 -310.67095947]
[40.03817368 -325.13546753]
[44.01026917 -339.60000610]
[47.98236847 -354.06454468]
[51.95446396 -368.52905273]
[55.92655945 -382.99359131]
[42.46861649 -389.72930908]
[30.58352852 -398.96136475]
[20.72812462 -410.33489990]
[13.28121853 -423.41271973]
[8.52905083 -437.69219971]
[6.65428305 -452.62442017]
[7.72897577 -467.63546753]
[11.71181965 -482.14831543]
[18.44972610 -495.60519409]
[27.68370819 -507.48876953]
[39.05883408 -517.34234619]
[52.13787842 -524.78710938]
[66.41811371 -529.53698730]
[81.35064697 -531.40936279]
[96.36151123 -530.33221436]
[110.87372589 -526.34704590]
[124.32948303 -519.60693359]
[136.21159363 -510.37103271]
[146.06330872 -498.99429321]
[153.50598145 -485.91406250]
[158.25352478 -471.63305664]
[160.12345886 -456.70022583]
[159.04391479 -441.68954468]
[155.05636597 -427.17794800]
[148.31410217 -413.72329712]
[139.07627869 -401.84268188]
[127.69795990 -391.99279785]
[114.61650848 -384.55224609]
[100.33473969 -379.80700684]
[85.40159607 -377.93951416]
[70.39108276 -379.02148438]
[66.41898346 -364.55694580]
[62.44689178 -350.09243774]
[58.47479630 -335.62789917]
[54.50269699 -321.16339111]
[50.53060150 -306.69885254]
[46.55850601 -292.23434448]
[42.58641052 -277.76980591]
[41.24817657 -262.82962036]
[42.58641052 -247.88945007]
[43.92464447 -232.94926453]
[45.59618378 -218.04267883]
[47.60019684 -203.17715454]
[49.60421371 -188.31163025]
[51.93969727 -173.49456787]
[54.60549545 -158.73333740]
[57.27128983 -143.97212219]
[59.93708420 -129.21090698]
[62.60288239 -114.44969177]
[72.47889709 -103.30009460]
[67.31732941 -88.34453583]
[69.98312378 -73.58331299]
[72.64891815 -58.82209778]
[75.31472015 -44.06088257]
[78.30949402 -29.36287880]
[81.63175201 -14.73541737]
[84.95401001 -0.10795747]
[88.27626801 14.51950264]
[91.59852600 29.14696312]
[94.92079163 43.77442169]
[105.28481293 54.47191238]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[117.77191162 141.40216064]
[122.17291260 155.74200439]
[127.41963196 169.79447937]
[132.66635132 183.84695435]
[137.91307068 197.89941406]
[149.30200195 203.95375061]
[153.38270569 215.76609802]
[148.48309326 226.82595825]
[153.52000427 240.95498657]
[158.55693054 255.08401489]
[163.59384155 269.21304321]
[168.63075256 283.34207153]
[176.02165222 270.28930664]
[190.44009399 266.15304565]
[203.62652588 273.30270386]
[208.02719116 287.64266968]
[201.12115479 300.95831299]
[186.86453247 305.62185669]
[173.42478943 298.96252441]
[178.60350037 306.48709106]
[177.12719727 313.72879028]
[180.66687012 328.30514526]
[184.20654297 342.88153076]
[190.48561096 329.25900269]
[203.07524109 321.10418701]
[218.07438660 320.94390869]
[230.83538818 328.82785034]
[237.40414429 342.31307983]
[235.74522400 357.22106934]
[226.37266541 368.93240356]
[212.19067383 373.81817627]
[197.59367371 370.36453247]
[187.10459900 359.64132690]
[188.66511536 374.55993652]
[190.22564697 389.47854614]
[191.78616333 404.39715576]
[193.34669495 419.31576538]
[194.90721130 434.23437500]
[208.40843201 441.88269043]
[214.80490112 456.02001953]
[211.63708496 471.21029663]
[200.12303162 481.61254883]
[184.69015503 483.22686768]
[171.27270508 475.43252563]
[165.02996826 461.22662354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 188]
[8 187]
[9 186]
[10 184]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[17 170]
[18 169]
[19 168]
[20 167]
[29 166]
[30 165]
[31 164]
[34 162]
[35 161]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[46 153]
[47 152]
[48 151]
[49 150]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[59 143]
[60 142]
[61 141]
[65 140]
[66 139]
[67 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
