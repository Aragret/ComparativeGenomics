%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[63.79799652 692.05798340]
[51.04914093 700.06121826]
[36.95009613 705.33392334]
[22.07821274 707.66027832]
[7.04248095 706.94500732]
[-7.54139423 703.21734619]
[-21.07621193 696.62994385]
[-33.00773239 687.45263672]
[-42.84736252 676.06109619]
[-50.19217682 662.92187500]
[-54.74141312 648.57305908]
[-56.30878067 633.60211182]
[-54.83009720 618.62219238]
[-50.36591339 604.24664307]
[-43.09903717 591.06420898]
[-33.32703781 579.61462402]
[-21.45007706 570.36676025]
[-7.95450687 563.69934082]
[6.60703754 559.88537598]
[21.63826942 559.08105469]
[23.86338615 544.24700928]
[26.08850479 529.41296387]
[17.05633926 517.62506104]
[19.10160828 502.54949951]
[31.52712631 493.15567017]
[33.75224304 478.32162476]
[35.97735977 463.48757935]
[38.20247650 448.65353394]
[32.43875885 434.91931152]
[42.13758850 422.41958618]
[44.36270523 407.58554077]
[46.58782578 392.75149536]
[48.81294250 377.91744995]
[39.78077698 366.12951660]
[41.82604599 351.05398560]
[54.25156403 341.66015625]
[56.47668076 326.82611084]
[58.70179749 311.99206543]
[60.92691422 297.15802002]
[47.25411224 292.21011353]
[34.80936432 284.68014526]
[24.07470322 274.85751343]
[15.46635914 263.12048340]
[9.31864166 249.92156982]
[5.87093735 235.77009583]
[5.25840044 221.21258545]
[7.50665140 206.81167603]
[12.53071117 193.12429810]
[20.13821411 180.68014526]
[30.03676796 169.96125793]
[41.84519958 161.38327026]
[55.10822296 155.27931213]
[69.31400299 151.88706970]
[83.91389465 151.33958435]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[89.22877502 74.59822083]
[77.26940918 83.65215302]
[63.19330597 88.83513641]
[48.21818924 89.69879913]
[33.63956070 86.16842651]
[20.71861076 78.54943848]
[10.57313347 67.50093842]
[4.08081579 53.97874069]
[1.80330646 39.15265274]
[3.93763328 24.30527306]
[10.29915524 10.72105217]
[20.33753777 -0.42483813]
[33.18436050 -8.16816807]
[47.72824478 -11.83906269]
[62.71099472 -11.11995220]
[76.83646393 -6.07304668]
[88.88264465 2.86504555]
[97.80742645 14.92109013]
[102.83872986 29.05212021]
[103.54164886 44.03215790]
[109.81900787 30.40884018]
[116.09637451 16.78552437]
[110.00862885 4.77078438]
[111.92424774 -8.36469650]
[120.92217255 -17.85782242]
[133.55476379 -20.39691925]
[140.03427124 -33.92526627]
[146.51376343 -47.45360947]
[152.99325562 -60.98195648]
[159.47274780 -74.51029968]
[165.95223999 -88.03865051]
[172.43174744 -101.56699371]
[177.78292847 -115.58001709]
[181.96994019 -129.98379517]
[186.15695190 -144.38757324]
[190.34396362 -158.79136658]
[194.42362976 -173.22592163]
[198.39572144 -187.69044495]
[184.86634827 -194.26846313]
[172.77616882 -203.22068787]
[162.53700256 -214.24221802]
[154.49757385 -226.95765686]
[148.93171692 -240.93391418]
[146.02899170 -255.69497681]
[145.88825989 -270.73806763]
[148.51432800 -285.55084229]
[153.81773376 -299.62878418]
[161.61787415 -312.49240112]
[171.64904785 -323.70355225]
[183.56962585 -332.88040161]
[196.97357178 -339.71038818]
[211.40437317 -343.96090698]
[226.37051392 -345.48712158]
[241.36224365 -344.23712158]
[255.86897278 -340.25341797]
[269.39657593 -333.67175293]
[281.48434448 -324.71627808]
[291.72052002 -313.69198608]
[299.75653076 -300.97439575]
[305.31863403 -286.99661255]
[308.21737671 -272.23477173]
[308.35403442 -257.19165039]
[305.72399902 -242.37957764]
[300.41677856 -228.30307007]
[292.61318970 -215.44155884]
[282.57897949 -204.23310852]
[270.65594482 -195.05946350]
[257.25015259 -188.23309326]
[242.81819153 -183.98648071]
[227.85165405 -182.46429443]
[212.86024475 -183.71833801]
[208.88815308 -169.25381470]
[210.14819336 -161.97137451]
[204.74774170 -154.60435486]
[200.56072998 -140.20057678]
[196.37371826 -125.79678345]
[192.18670654 -111.39300537]
[203.76637268 -120.92775726]
[218.43154907 -124.07933044]
[232.90602112 -120.14363861]
[243.95614624 -109.99993896]
[249.11331177 -95.91435242]
[247.22537231 -81.03363800]
[238.71409607 -68.68218231]
[225.48095703 -61.61933517]
[210.48223877 -61.42295456]
[197.06871033 -68.13690948]
[188.23698425 -80.26129150]
[185.96008301 -95.08749390]
[179.48059082 -81.55915070]
[173.00109863 -68.03080750]
[166.52160645 -54.50246048]
[160.04209900 -40.97411728]
[153.56260681 -27.44577026]
[147.08311462 -13.91742420]
[153.34410095 1.69150829]
[146.23890686 17.30659676]
[129.71968079 23.06288528]
[123.44232941 36.68620300]
[117.16496277 50.30951691]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[98.71316528 153.78530884]
[113.15158844 159.40251160]
[126.10680389 167.88829041]
[137.01702881 178.87182617]
[145.40971375 191.87409973]
[150.92204285 206.32870483]
[153.31661987 221.60653687]
[152.49168396 237.04322815]
[148.48544312 251.96795654]
[141.47425842 265.73260498]
[131.76496887 277.74002075]
[119.78140259 287.46975708]
[106.04588318 294.50076294]
[91.15647888 298.52951050]
[75.76095581 299.38314819]
[73.53584290 314.21719360]
[71.31072235 329.05120850]
[69.08560944 343.88525391]
[78.20812225 356.51132202]
[75.74022675 371.52346802]
[63.64698410 380.14257812]
[61.42186737 394.97662354]
[59.19675064 409.81066895]
[56.97163391 424.64471436]
[62.57619858 439.43997192]
[53.03652191 450.87866211]
[50.81140518 465.71270752]
[48.58628845 480.54675293]
[46.36117172 495.38079834]
[55.48368835 508.00683594]
[53.01578522 523.01898193]
[40.92254639 531.63812256]
[38.69742966 546.47216797]
[36.47231293 561.30621338]
[50.60602951 566.48529053]
[63.40769958 574.40374756]
[74.35311127 584.73730469]
[82.99404907 597.06286621]
[88.97666931 610.87567139]
[92.05599976 625.61004639]
[92.10593414 640.66271973]
[89.12442780 655.41723633]
[83.23357391 669.26940918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 201]
[21 200]
[22 199]
[25 196]
[26 195]
[27 194]
[28 193]
[30 191]
[31 190]
[32 189]
[33 188]
[36 185]
[37 184]
[38 183]
[39 182]
[54 168]
[55 167]
[56 166]
[57 165]
[58 163]
[59 162]
[60 161]
[80 160]
[81 159]
[82 158]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
[92 149]
[93 137]
[94 136]
[95 135]
[96 134]
[97 132]
[98 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
