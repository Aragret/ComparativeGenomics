%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[132.97764587 693.15051270]
[124.98769379 680.18591309]
[122.96813202 665.09149170]
[127.26884460 650.48248291]
[137.14471436 638.88989258]
[150.88467407 632.32232666]
[150.43806458 617.32897949]
[149.99147034 602.33563232]
[139.00813293 592.34051514]
[138.34162903 577.14147949]
[148.89987183 565.68896484]
[148.45326233 550.69561768]
[148.00666809 535.70227051]
[147.56005859 520.70886230]
[145.88851929 505.80230713]
[143.00323486 491.08242798]
[140.11796570 476.36254883]
[137.23269653 461.64263916]
[134.34742737 446.92276001]
[131.46215820 432.20285034]
[117.86764526 431.13549805]
[105.00240326 426.57659912]
[93.74802399 418.83157349]
[84.87754059 408.42440796]
[79.00231934 396.06213379]
[76.52993011 382.58694458]
[77.63587189 368.91873169]
[82.25113678 355.99230957]
[90.06649017 344.69348145]
[100.55315399 335.79830933]
[112.99860382 329.91986084]
[110.55287933 315.12060547]
[108.10714722 300.32131958]
[97.38297272 310.80902100]
[82.47891998 309.11520386]
[74.38169098 296.48843384]
[79.06027222 282.23675537]
[93.06578064 276.86593628]
[106.07294464 284.33380127]
[104.73471069 269.39361572]
[103.39647675 254.45343018]
[102.05824280 239.51324463]
[90.49945831 230.18960571]
[88.92947388 215.05718994]
[98.78733063 202.99650574]
[97.44909668 188.05632019]
[96.11086273 173.11613464]
[93.65415955 170.58691406]
[92.30043793 166.74211121]
[92.65470123 162.11309814]
[95.06175232 157.48133850]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[77.05039978 67.92114258]
[65.92822266 57.65759659]
[59.59999084 43.95478439]
[59.00174332 28.91384888]
[64.19352722 14.82803345]
[74.35498810 3.83302498]
[87.91479492 -2.41684341]
[87.24501038 -17.40188217]
[86.57522583 -32.38692093]
[85.90544128 -47.37195969]
[85.23565674 -62.35699844]
[81.72617340 -70.79034424]
[84.66912842 -77.56978607]
[84.22252655 -92.56314087]
[75.38700867 -101.95976257]
[75.32369995 -114.45694733]
[83.52112579 -123.35238647]
[83.29779816 -138.35072327]
[83.07447052 -153.34906006]
[82.85114288 -168.34739685]
[82.62781525 -183.34573364]
[82.40448761 -198.34407043]
[74.84905243 -201.70915222]
[68.63749695 -207.11912537]
[64.30263519 -214.08372498]
[62.20857620 -221.98051453]
[62.52022171 -230.11053467]
[65.19041443 -237.76013184]
[69.96585846 -244.26365662]
[76.41098022 -249.06135559]
[83.94763184 -251.74749756]
[85.06327820 -266.70596313]
[86.17892456 -281.66439819]
[78.36893463 -291.92922974]
[79.60610962 -304.36520386]
[88.68448639 -312.35955811]
[90.02272034 -327.29974365]
[91.36095428 -342.23992920]
[92.69918823 -357.18011475]
[93.92617035 -372.12985229]
[95.04181671 -387.08828735]
[80.96307373 -392.59103394]
[69.13280487 -402.00042725]
[60.60295868 -414.47973633]
[56.13200378 -428.91931152]
[56.11748886 -444.03524780]
[60.56070709 -458.48339844]
[69.06657410 -470.97906494]
[80.87874603 -480.41113281]
[94.94689941 -485.94091797]
[110.02009583 -487.07672119]
[124.75804901 -483.71752930]
[137.85026550 -476.16201782]
[148.13258362 -465.08209229]
[154.69071960 -451.46289062]
[156.94152832 -436.51547241]
[154.68486023 -421.56893921]
[148.12138367 -407.95233154]
[137.83471680 -396.87640381]
[124.73954010 -389.32604980]
[110.00026703 -385.97265625]
[108.88462067 -371.01419067]
[111.52192688 -364.11010742]
[107.63937378 -355.84185791]
[106.30113983 -340.90167236]
[104.96290588 -325.96148682]
[103.62467194 -311.02133179]
[111.85543060 -295.52224731]
[101.13738251 -280.54876709]
[100.02172852 -265.59030151]
[98.90608215 -250.63185120]
[114.82148743 -235.54177856]
[114.35478973 -213.33843994]
[97.40282440 -198.56739807]
[97.62615204 -183.56906128]
[97.84947968 -168.57072449]
[98.07280731 -153.57238770]
[98.29613495 -138.57405090]
[98.51946259 -123.57571411]
[108.31800079 -109.01702118]
[99.21587372 -93.00974274]
[99.66248322 -78.01639557]
[100.22069550 -63.02678299]
[100.89048004 -48.04174423]
[101.56026459 -33.05670547]
[102.23004913 -18.07166672]
[102.89983368 -3.08662868]
[116.96315765 1.92857087]
[128.06501770 11.97317410]
[134.49278259 25.53963089]
[135.23880005 40.57395935]
[130.15830994 54.78670883]
[119.99615479 66.00159454]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.04679108 156.81155396]
[111.05104828 171.77789307]
[112.38928223 186.71807861]
[113.72751617 201.65826416]
[125.57187653 211.77502441]
[126.71620941 226.94557190]
[116.99842834 238.17500305]
[118.33666229 253.11518860]
[119.67489624 268.05538940]
[121.01313019 282.99557495]
[122.90641785 297.87561035]
[125.35214996 312.67486572]
[127.79787445 327.47415161]
[144.09085083 329.76358032]
[158.86442566 336.96295166]
[170.68037415 348.35858154]
[178.39233398 362.82894897]
[181.25708008 378.95495605]
[179.00605774 395.15921021]
[171.87059021 409.86022949]
[160.55809021 421.62686157]
[146.18203735 429.31759644]
[149.06732178 444.03747559]
[151.95259094 458.75735474]
[154.83786011 473.47726440]
[157.72312927 488.19714355]
[160.60839844 502.91705322]
[166.52551270 489.13345337]
[178.11203003 479.60699463]
[192.77946472 476.46597290]
[207.25111389 480.41207886]
[218.29394531 490.56372070]
[223.44096375 504.65301514]
[221.54234314 519.53234863]
[213.02220154 531.87768555]
[199.78398132 538.93103027]
[184.78512573 539.11663818]
[171.37641907 532.39300537]
[162.55340576 520.26226807]
[163.00001526 535.25561523]
[163.44660950 550.24896240]
[163.89321899 565.24230957]
[175.11442566 576.04614258]
[175.35375977 591.25787354]
[164.98481750 601.88903809]
[165.43142700 616.88238525]
[165.87802124 631.87573242]
[179.98454285 637.61383057]
[190.53289795 648.59802246]
[195.69554138 662.92517090]
[194.57798767 678.11303711]
[187.37387085 691.53021240]
[175.33135986 700.85211182]
[160.53686523 704.46362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[11 198]
[12 197]
[13 196]
[14 195]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[31 169]
[32 168]
[33 167]
[39 166]
[40 165]
[41 164]
[42 163]
[45 160]
[46 159]
[47 158]
[51 157]
[52 156]
[53 155]
[54 154]
[56 152]
[57 151]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[70 139]
[71 138]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[88 128]
[89 127]
[90 126]
[93 124]
[94 123]
[95 122]
[96 121]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
