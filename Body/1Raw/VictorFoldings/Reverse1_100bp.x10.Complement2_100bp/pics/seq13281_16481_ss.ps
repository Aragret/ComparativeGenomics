%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[146.17553711 708.09368896]
[132.90036011 701.09692383]
[120.14559174 693.19122314]
[107.97337341 684.41497803]
[96.44300079 674.81109619]
[85.61065674 664.42620850]
[75.52911377 653.31103516]
[66.24748993 641.51971436]
[57.81100082 629.10961914]
[50.26075363 616.14123535]
[43.63352966 602.67779541]
[37.96161652 588.78479004]
[33.27264786 574.53002930]
[29.58946609 559.98291016]
[26.93001747 545.21429443]
[25.30726051 530.29614258]
[24.72909927 515.30114746]
[25.19834900 500.30233765]
[26.71272659 485.37277222]
[29.26485062 470.58523560]
[32.84228897 456.01174927]
[37.42761612 441.72329712]
[42.99848557 427.78952026]
[49.52776337 414.27828979]
[56.98363495 401.25543213]
[65.32977295 388.78442383]
[74.52552795 376.92596436]
[84.52608490 365.73785400]
[95.28272247 355.27462769]
[106.74304199 345.58721924]
[118.85121155 336.72283936]
[131.54823303 328.72470093]
[144.77224731 321.63174438]
[158.45883179 315.47851562]
[172.54130554 310.29501343]
[168.35429382 295.89123535]
[164.16728210 281.48745728]
[159.98027039 267.08367920]
[155.79325867 252.67988586]
[150.75634766 238.55085754]
[144.88739014 224.74667358]
[139.01841736 210.94250488]
[133.14945984 197.13832092]
[127.28050232 183.33415222]
[115.18030548 174.64884949]
[116.90126801 158.92150879]
[111.03230286 145.11734009]
[105.16334534 131.31315613]
[95.54329681 131.42152405]
[86.33280945 128.64231873]
[78.37830353 123.23093414]
[72.41078949 115.68469238]
[68.97866058 106.69705963]
[68.39732361 97.09397888]
[70.72019958 87.75795746]
[75.73383331 79.54695129]
[82.97747040 73.21553802]
[78.15146637 59.01308060]
[73.32546997 44.81062317]
[68.49947357 30.60816765]
[63.67347717 16.40571213]
[58.84748077 2.20325685]
[54.02148056 -11.99919891]
[52.05746460 2.87166667]
[47.17954636 17.05637360]
[39.58200455 29.98994827]
[29.56744766 41.15725327]
[17.53475571 50.11349869]
[3.96318460 56.50195694]
[-10.60671616 60.06818771]
[-25.59463310 60.67013931]
[-40.40360260 58.28384018]
[-54.44379044 53.00433731]
[-67.15597534 45.04191208]
[-78.03385162 34.71369934]
[-86.64413452 22.43107224]
[-92.64389801 8.68324184]
[-95.79416656 -5.98222065]
[-95.96947479 -20.98119545]
[-93.16282654 -35.71628189]
[-87.48601532 -49.60058212]
[-79.16514587 -62.08109283]
[-68.53163910 -72.66072083]
[-56.00902176 -80.91808319]
[-42.09606171 -86.52429199]
[-27.34690857 -89.25605011]
[-12.34901714 -89.00456238]
[2.30025387 -85.77983093]
[16.01742935 -79.71031189]
[28.25615883 -71.03774261]
[38.52898026 -60.10754776]
[46.42673111 -47.35507584]
[51.63379288 -33.29229355]
[45.37417603 -47.82252884]
[54.39356995 -59.67578888]
[55.95409393 -74.59439850]
[57.51461792 -89.51300049]
[43.37312317 -94.75408173]
[30.97978401 -103.34803009]
[21.11365509 -114.75462341]
[14.39493084 -128.25683594]
[11.24595451 -143.00588989]
[11.86467457 -158.07466125]
[16.21219635 -172.51591492]
[24.01523209 -185.42187500]
[34.78327560 -195.98123169]
[47.83943939 -203.53022766]
[62.36300278 -207.59432983]
[77.44100189 -207.91807556]
[92.12561798 -204.48109436]
[105.49376678 -197.49943542]
[116.70511627 -187.41200256]
[125.05490875 -174.85287476]
[130.01826477 -160.61152649]
[131.28320312 -145.58319092]
[128.77018738 -130.71257019]
[122.63719177 -116.93442535]
[113.26974487 -105.11486816]
[101.25669861 -95.99689484]
[87.35319519 -90.15366364]
[72.43321991 -87.95247650]
[70.87269592 -73.03387451]
[69.31217194 -58.11526871]
[75.68341064 -44.65211105]
[66.55239868 -31.73177147]
[68.22393799 -16.82519722]
[73.04993439 -2.62274075]
[77.87593079 11.57971478]
[82.70192719 25.78217125]
[87.52793121 39.98462677]
[92.35392761 54.18708038]
[97.17992401 68.38953400]
[116.81787109 73.08655548]
[129.64782715 88.67831421]
[130.47615051 108.85316467]
[118.96752167 125.44419861]
[124.83647919 139.24838257]
[130.70544434 153.05255127]
[143.22541809 162.72523499]
[141.08467102 177.46519470]
[146.95364380 191.26936340]
[152.82260132 205.07354736]
[158.69155884 218.87771606]
[164.56051636 232.68190002]
[169.23059082 218.42741394]
[181.31942749 209.54708862]
[196.31817627 209.35305786]
[208.63267517 217.91769409]
[213.66992188 232.04660034]
[209.55116272 246.47004700]
[197.81257629 255.80844116]
[182.83236694 256.57879639]
[170.19703674 248.49287415]
[174.38404846 262.89666748]
[178.57106018 277.30044556]
[182.75807190 291.70422363]
[186.94508362 306.10800171]
[201.61183167 302.93444824]
[216.46421814 300.79171753]
[231.42988586 299.69027710]
[246.43594360 299.63543701]
[261.40927124 300.62753296]
[276.27691650 302.66171265]
[290.96646118 305.72805786]
[305.40631104 309.81161499]
[319.52612305 314.89251709]
[333.25711060 320.94598389]
[346.53237915 327.94253540]
[359.28726196 335.84808350]
[371.45962524 344.62408447]
[382.99014282 354.22784424]
[393.82263184 364.61254883]
[403.90432739 375.72756958]
[413.18612671 387.51879883]
[421.62277222 399.92877197]
[429.17321777 412.89703369]
[435.80062866 426.36041260]
[441.47274780 440.25326538]
[446.16192627 454.50796509]
[449.84530640 469.05505371]
[452.50497437 483.82360840]
[454.12792969 498.74176025]
[454.70632935 513.73675537]
[454.23727417 528.73559570]
[452.72311401 543.66516113]
[450.17120361 558.45275879]
[446.59396362 573.02624512]
[442.00885010 587.31475830]
[436.43817139 601.24865723]
[429.90908813 614.75994873]
[422.45343018 627.78289795]
[414.10745239 640.25408936]
[404.91186523 652.11267090]
[394.91146851 663.30090332]
[384.15499878 673.76428223]
[372.69479370 683.45184326]
[360.58676147 692.31640625]
[347.88986206 700.31475830]
[334.66595459 707.40789795]
[320.97946167 713.56127930]
[306.89706421 718.74499512]
[292.48736572 722.93371582]
[277.82055664 726.10705566]
[262.96813965 728.24957275]
[248.00245667 729.35083008]
[232.99639893 729.40545654]
[218.02308655 728.41314697]
[203.15547180 726.37872314]
[188.46598816 723.31219482]
[174.02619934 719.22845459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[46 138]
[47 137]
[48 136]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[93 125]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
