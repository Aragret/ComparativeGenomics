%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-7.86737823 563.95819092]
[-8.76019382 548.98480225]
[-9.65301037 534.01135254]
[-10.54582596 519.03796387]
[-11.43864155 504.06454468]
[-12.33145809 489.09115601]
[-20.81258011 476.84698486]
[-13.91039944 462.61074829]
[-19.72519875 476.43780518]
[-28.34011269 488.71719360]
[-39.36322021 498.89025879]
[-52.29304123 506.49420166]
[-66.54135895 511.18304443]
[-81.45996857 512.74353027]
[-96.37017059 511.10467529]
[-110.59365082 506.34100342]
[-123.48333740 498.66925049]
[-134.45283508 488.43841553]
[-143.00309753 476.11392212]
[-148.74516296 462.25646973]
[-151.41780090 447.49649048]
[-150.89939880 432.50546265]
[-147.21357727 417.96536255]
[-140.52798462 404.53765869]
[-131.14680481 392.83325195]
[-119.49678040 383.38458252]
[-106.10794067 376.62155151]
[-91.58937073 372.85177612]
[-76.60157776 372.24676514]
[-61.82640076 374.83407593]
[-47.93601608 380.49600220]
[-35.56233978 388.97491455]
[-25.26829338 399.88513184]
[-17.52218819 412.73028564]
[-12.67641830 426.92599487]
[-10.95139885 441.83081055]
[-5.91448259 427.70178223]
[-0.87756658 413.57275391]
[4.15934944 399.44372559]
[9.19626617 385.31469727]
[14.23318195 371.18566895]
[19.27009773 357.05664062]
[24.30701447 342.92761230]
[21.29272461 328.34118652]
[33.21478271 317.94046021]
[37.82879257 303.66772461]
[42.01580429 289.26394653]
[28.78049088 279.16036987]
[20.42264175 264.71640015]
[18.24886513 248.13372803]
[22.62064171 231.95259094]
[32.89457703 218.66267395]
[47.51691055 210.32002258]
[64.25846100 208.22901917]
[68.01476288 193.70695496]
[71.77106476 179.18489075]
[75.52736664 164.66284180]
[71.22376251 150.40351868]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.33464050 71.73081207]
[102.65690613 57.10335159]
[105.97916412 42.47589111]
[107.20613861 27.52615738]
[106.31332397 12.55275154]
[105.42050934 -2.42065382]
[104.52768707 -17.39406013]
[94.03376007 -32.52545166]
[102.49436188 -47.90027237]
[101.37871552 -62.85872650]
[100.26306915 -77.81717682]
[98.92483521 -92.75736237]
[97.36431122 -107.67597198]
[95.80378723 -122.59457397]
[94.24326324 -137.51318359]
[92.68273926 -152.43177795]
[91.12221527 -167.35038757]
[89.56169128 -182.26899719]
[85.99370575 -187.83505249]
[85.80118561 -193.51483154]
[88.18360901 -197.65405273]
[87.06796265 -212.61250305]
[75.45088196 -203.12338257]
[60.75737762 -206.14013672]
[53.81894684 -219.43893433]
[59.75034332 -233.21640015]
[74.17916870 -237.31629944]
[86.46820068 -228.71775818]
[86.46820068 -243.71775818]
[86.46820068 -258.71777344]
[86.46820068 -273.71777344]
[71.89108276 -277.61264038]
[58.81922150 -285.14846802]
[48.14387131 -295.81146240]
[40.59290314 -308.87457275]
[36.68115234 -323.44717407]
[36.67532349 -338.53567505]
[40.57582092 -353.11126709]
[48.11670303 -366.18023682]
[58.78381348 -376.85147095]
[71.84985352 -384.39739990]
[86.42395782 -388.30352783]
[101.51244354 -388.30352783]
[116.08655548 -384.39739990]
[129.15260315 -376.85147095]
[139.81970215 -366.18023682]
[147.36058044 -353.11126709]
[151.26107788 -338.53567505]
[151.25526428 -323.44717407]
[147.34350586 -308.87457275]
[139.79254150 -295.81146240]
[129.11718750 -285.14846802]
[116.04532623 -277.61264038]
[101.46820068 -273.71777344]
[101.46820068 -258.71777344]
[101.46820068 -243.71775818]
[101.46820068 -228.71775818]
[102.02641296 -213.72814941]
[103.14206696 -198.76969910]
[104.48030090 -183.82951355]
[106.04082489 -168.91091919]
[107.60134125 -153.99230957]
[109.16186523 -139.07369995]
[110.72238922 -124.15509796]
[112.28291321 -109.23649597]
[113.84343719 -94.31788635]
[116.92355347 -90.66796875]
[117.74350739 -85.04438019]
[115.22151947 -78.93283081]
[116.33716583 -63.97437668]
[117.45281982 -49.01592255]
[126.41116333 -40.88729477]
[127.46305084 -28.43429184]
[119.50109863 -18.28687477]
[120.39391327 -3.31346965]
[121.28672791 11.65993595]
[122.17954254 26.63334274]
[128.28431702 12.93181610]
[138.11117554 1.59899735]
[150.81001282 -6.38471270]
[165.28224182 -10.32864380]
[180.27586365 -9.89160538]
[194.49380493 -5.11140585]
[206.70605469 3.59841919]
[215.85612488 15.48438358]
[221.15245056 29.51823044]
[222.13685608 44.48589325]
[218.72416687 59.09252167]
[211.20960999 72.07449341]
[200.24330139 82.30873871]
[186.77389526 88.90988922]
[171.96664429 91.30688477]
[157.10253906 89.29235840]
[143.46746826 83.04059601]
[132.24098206 73.09242249]
[124.39430237 60.30846024]
[120.60662079 45.79814911]
[117.28436279 60.42560959]
[113.96210480 75.05307007]
[115.70414734 79.49990082]
[114.67121887 85.08828735]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[100.72735596 158.03497314]
[90.04942322 168.41914368]
[86.29312134 182.94119263]
[82.53681946 197.46325684]
[78.78052521 211.98532104]
[89.94989014 219.46223450]
[98.25776672 229.99914551]
[102.90669250 242.56193542]
[103.45741272 255.92320251]
[99.87036133 268.78210449]
[92.50814056 279.89102173]
[82.09890747 288.17663574]
[69.66438293 292.84362793]
[56.41958618 293.45095825]
[52.23257446 307.85473633]
[53.41717529 312.03213501]
[53.22970581 315.97286987]
[51.91304398 319.27465820]
[49.81577682 321.65545654]
[47.34381104 322.97738647]
[49.99782562 338.57440186]
[38.43604279 347.96450806]
[33.39912796 362.09353638]
[28.36221123 376.22256470]
[23.32529449 390.35162354]
[18.28837967 404.48065186]
[13.25146294 418.60968018]
[8.21454716 432.73870850]
[3.17763042 446.86773682]
[1.06300652 461.71792603]
[9.60799026 475.03311157]
[2.64194798 488.19833374]
[3.53476381 503.17175293]
[4.42757988 518.14514160]
[5.32039547 533.11853027]
[6.21321154 548.09197998]
[7.10602760 563.06536865]
[18.10258293 574.74676514]
[15.68339157 590.60638428]
[1.70425069 598.47802734]
[-13.11123943 592.32330322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[8 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[45 189]
[46 184]
[47 183]
[54 174]
[55 173]
[56 172]
[57 171]
[59 169]
[60 168]
[61 167]
[63 165]
[64 162]
[65 161]
[66 160]
[67 140]
[68 139]
[69 138]
[70 137]
[72 134]
[73 133]
[74 132]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[84 122]
[85 121]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
