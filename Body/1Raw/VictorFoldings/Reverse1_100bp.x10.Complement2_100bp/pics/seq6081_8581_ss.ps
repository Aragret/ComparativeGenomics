%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[240.60345459 403.05566406]
[243.06430054 388.24792480]
[246.88096619 373.73043823]
[252.02085876 359.62701416]
[258.44012451 346.05804443]
[266.08401489 333.13922119]
[274.88732910 320.98083496]
[284.77490234 309.68658447]
[274.44824219 298.80725098]
[264.12158203 287.92791748]
[253.79490662 277.04858398]
[243.46824646 266.16925049]
[226.39729309 262.10110474]
[222.24548340 244.16110229]
[211.75798035 233.43672180]
[194.94854736 233.96766663]
[182.71524048 221.94015503]
[182.97047424 204.44860840]
[172.32446289 193.88156128]
[169.76892090 208.66226196]
[156.69372559 216.01341248]
[142.73741150 210.51599121]
[138.18806458 196.22251892]
[146.39929199 183.66960144]
[161.31652832 182.11022949]
[151.48594666 170.78063965]
[141.65536499 159.45103455]
[131.82478333 148.12144470]
[121.99419403 136.79185486]
[112.16362000 125.46226501]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[76.50679016 84.36831665]
[66.67620850 73.03872681]
[56.43081665 62.08281708]
[45.78480911 51.51576996]
[35.13880157 40.94871902]
[24.49279213 30.38167191]
[13.84678268 19.81462479]
[3.04462624 9.40725136]
[-7.91128302 -0.83813983]
[-18.86719322 -11.08353138]
[-34.23153305 -14.85813236]
[-38.24267578 -29.20246887]
[-49.47698212 -19.24632263]
[-61.59424210 -10.38593292]
[-74.48796844 -2.69916749]
[-88.04483795 3.74642015]
[-102.14572906 8.89418507]
[-116.66670227 12.69888783]
[-131.48014832 15.12709045]
[-146.45588684 16.15745544]
[-161.46231079 15.78092670]
[-176.36753845 14.00081253]
[-191.04057312 10.83275890]
[-205.35246277 6.30460501]
[-219.17744446 0.45614681]
[-232.39401245 -6.66121817]
[-244.88601685 -14.98494148]
[-256.54367065 -24.44187164]
[-267.26452637 -34.94889832]
[-276.95437622 -46.41368484]
[-285.52804565 -58.73547745]
[-292.91021729 -71.80598450]
[-299.03598022 -85.51034546]
[-303.85150146 -99.72811890]
[-307.31451416 -114.33435822]
[-309.39450073 -129.20069885]
[-310.07324219 -144.19648743]
[-309.34478760 -159.18994141]
[-307.21548462 -174.04930115]
[-303.70407104 -188.64398193]
[-298.84140015 -202.84570312]
[-292.67019653 -216.52966309]
[-285.24472046 -229.57562256]
[-276.63024902 -241.86891174]
[-266.90240479 -253.30148315]
[-256.14675903 -263.77288818]
[-244.45780945 -273.19110107]
[-231.93826294 -281.47335815]
[-218.69816589 -288.54684448]
[-204.85386658 -294.34942627]
[-190.52703857 -298.83007812]
[-175.84358215 -301.94946289]
[-160.93252563 -303.68011475]
[-145.92494202 -304.00686646]
[-130.95269775 -302.92684937]
[-116.14738464 -300.44952393]
[-101.63911438 -296.59667969]
[-87.55537415 -291.40216064]
[-74.01995087 -284.91165161]
[-61.15179443 -277.18215942]
[-49.06399155 -268.28164673]
[-37.86277008 -258.28829956]
[-27.64657021 -247.28993225]
[-18.50517464 -235.38323975]
[-10.51892090 -222.67283630]
[-3.75799322 -209.27044678]
[1.71819139 -195.29382324]
[5.86150694 -180.86581421]
[8.63554096 -166.11322021]
[10.01591587 -151.16566467]
[9.99049854 -136.15455627]
[8.55951405 -121.21176910]
[5.73553705 -106.46864319]
[1.54338622 -92.05474854]
[-3.98009729 -78.09675598]
[-10.78637218 -64.71733093]
[-18.81562233 -52.03404617]
[-27.99728584 -40.15837860]
[-13.41658497 -37.11659622]
[-8.62180042 -22.03944016]
[2.33410859 -11.79404926]
[13.29001808 -1.54865754]
[18.00850487 -0.81047130]
[22.31336403 2.89967871]
[24.41382980 9.16861629]
[35.05983734 19.73566437]
[45.70584869 30.30271149]
[56.35185623 40.86975861]
[66.99786377 51.43680573]
[69.55340576 36.65610504]
[82.62860107 29.30496597]
[96.58490753 34.80237961]
[101.13425446 49.09585571]
[92.92302704 61.64877701]
[78.00580597 63.20814514]
[87.83638000 74.53773499]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[123.49320984 115.63168335]
[133.32379150 126.96127319]
[143.15437317 138.29086304]
[152.98495483 149.62046814]
[162.81553650 160.95005798]
[172.64611816 172.27964783]
[182.89151001 183.23554993]
[193.53752136 193.80259705]
[206.91113281 192.20234680]
[218.59405518 198.50469971]
[224.42753601 210.21165466]
[222.48236084 222.94923401]
[232.96986389 233.67361450]
[245.83488464 234.59776306]
[254.34916687 243.74601746]
[254.34757996 255.84257507]
[264.67425537 266.72192383]
[275.00091553 277.60125732]
[285.32757568 288.48059082]
[295.65423584 299.35992432]
[307.44821167 290.07403564]
[320.04864502 281.91601562]
[333.34805298 274.95538330]
[347.23300171 269.25161743]
[361.58499146 264.85333252]
[376.28158569 261.79803467]
[391.19738770 260.11184692]
[406.20516968 259.80908203]
[421.17681885 260.89239502]
[435.98468018 263.35250854]
[450.50238037 267.16845703]
[464.60604858 272.30761719]
[478.17535400 278.72622681]
[491.09454346 286.36947632]
[503.25338745 295.17218018]
[514.54809570 305.05920410]
[524.88244629 315.94619751]
[534.16809082 327.74029541]
[542.32592773 340.34088135]
[549.28631592 353.64041138]
[554.98986816 367.52545166]
[559.38793945 381.87753296]
[562.44293213 396.57415771]
[564.12890625 411.48999023]
[564.43139648 426.49777222]
[563.34783936 441.46942139]
[560.88751221 456.27725220]
[557.07128906 470.79486084]
[551.93188477 484.89843750]
[545.51306152 498.46765137]
[537.86956787 511.38671875]
[529.06671143 523.54541016]
[519.17950439 534.83996582]
[508.29229736 545.17407227]
[496.49804688 554.45959473]
[483.89733887 562.61718750]
[470.59768677 569.57733154]
[456.71255493 575.28070068]
[442.36041260 579.67846680]
[427.66372681 582.73327637]
[412.74786377 584.41900635]
[397.74008179 584.72125244]
[382.76843262 583.63745117]
[367.96066284 581.17681885]
[353.44311523 577.36041260]
[339.33963013 572.22076416]
[325.77050781 565.80169678]
[312.85159302 558.15802002]
[300.69305420 549.35491943]
[289.39862061 539.46752930]
[279.06469727 528.58013916]
[269.77941895 516.78576660]
[261.62200928 504.18490601]
[254.66206360 490.88513184]
[248.95896912 476.99990845]
[244.56140137 462.64770508]
[241.50685120 447.95095825]
[239.82138062 433.03506470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 152]
[9 151]
[10 150]
[11 149]
[12 148]
[14 145]
[15 144]
[18 140]
[19 139]
[25 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[33 130]
[34 129]
[35 128]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 115]
[42 114]
[43 113]
[45 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
