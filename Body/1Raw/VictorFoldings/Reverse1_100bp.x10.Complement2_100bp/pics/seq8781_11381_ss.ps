%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[173.57635498 420.54370117]
[186.28860474 412.45999146]
[181.25169373 398.33096313]
[176.21476746 384.20193481]
[162.25320435 373.56982422]
[165.72129822 355.48519897]
[160.47457886 341.43273926]
[155.22787476 327.38024902]
[149.98115540 313.32778931]
[144.67922974 327.35952759]
[132.20593262 335.69119263]
[117.21348572 335.21530151]
[105.29370117 326.10934448]
[100.89235687 311.76959229]
[105.65106201 297.54446411]
[117.79492188 288.73953247]
[132.79458618 288.63885498]
[145.05624390 297.28088379]
[141.51657104 282.70452881]
[137.97689819 268.12814331]
[125.19720459 256.10125732]
[130.52790833 238.47555542]
[126.77161407 223.95349121]
[122.90731049 209.45980835]
[118.93521118 194.99528503]
[114.96311951 180.53076172]
[110.88344574 166.09620667]
[106.69644165 151.69242859]
[96.24986267 145.59359741]
[92.64371490 133.62783813]
[98.33340454 122.05242157]
[94.36131287 107.58789825]
[90.50821686 104.02873993]
[88.92353058 98.56411743]
[90.49315643 92.63341522]
[86.95348358 78.05704498]
[83.41381073 63.48066711]
[79.87413788 48.90428925]
[76.26988983 45.12852097]
[74.63758850 40.78238678]
[74.86428070 36.71253586]
[76.51734924 33.59810257]
[73.63208008 18.87821198]
[70.20101929 4.27588987]
[66.22891998 -10.18863392]
[62.25682449 -24.65315819]
[58.28472900 -39.11768341]
[54.31263351 -53.58220673]
[50.23296738 -68.01676178]
[46.04595566 -82.42053986]
[41.64495850 -96.76039124]
[37.03094864 -111.03311920]
[32.41693878 -125.30585480]
[30.21316338 -110.46862793]
[25.19518661 -96.33285522]
[17.55060768 -83.42703247]
[7.56522274 -72.23363495]
[-4.38765478 -63.17114639]
[-17.86115837 -56.57836914]
[-32.35157013 -52.70178223]
[-47.31715775 -51.68631363]
[-62.19842148 -53.56992722]
[-76.43901825 -58.28220367]
[-89.50653839 -65.64697266]
[-100.91246033 -75.38888550]
[-110.23035431 -87.14375305]
[-117.11186981 -100.47209930]
[-121.29973602 -114.87563324]
[-122.63738251 -129.81587219]
[-121.07479858 -144.73425293]
[-116.67041016 -159.07305908]
[-109.58888245 -172.29621887]
[-100.09494781 -183.90937805]
[-88.54355621 -193.47834778]
[-75.36655426 -200.64540100]
[-61.05658722 -205.14260864]
[-46.14863586 -206.80180359]
[-31.20004272 -205.56098938]
[-16.76967812 -201.46653748]
[-3.39702821 -194.67152405]
[8.41796017 -185.42997742]
[18.23357582 -174.08741760]
[25.68285179 -161.06788635]
[30.48590851 -146.86405945]
[32.48992157 -161.72958374]
[34.49393463 -176.59512329]
[36.49795151 -191.46064758]
[22.54711723 -199.45330811]
[12.75509167 -212.15711975]
[8.59784889 -227.60874939]
[10.68340302 -243.43449402]
[18.66308022 -257.21490479]
[31.28939819 -266.85467529]
[46.61100006 -270.90121460]
[48.39346695 -285.79492188]
[50.17593384 -300.68865967]
[51.95839691 -315.58236694]
[53.74086380 -330.47607422]
[55.52333069 -345.36981201]
[57.30579758 -360.26351929]
[43.56805420 -366.59832764]
[32.46162033 -376.86975098]
[25.07459259 -390.07153320]
[22.13067436 -404.91027832]
[23.91827965 -419.93225098]
[30.26227951 -433.66574097]
[40.54115295 -444.76528931]
[53.74787903 -452.14346313]
[68.58860016 -455.07745361]
[83.60936737 -453.27978516]
[97.33860779 -446.92657471]
[108.43126678 -436.64025879]
[115.80059814 -423.42861938]
[118.72462463 -408.58590698]
[116.91689301 -393.56634521]
[110.55449677 -379.84136963]
[100.26075745 -368.75561523]
[87.04415131 -361.39514160]
[72.19951630 -358.48104858]
[70.41704559 -343.58734131]
[68.63458252 -328.69363403]
[66.85211182 -313.79989624]
[65.06964874 -298.90618896]
[63.28718185 -284.01248169]
[61.50471878 -269.11874390]
[73.99275970 -262.71655273]
[83.56575775 -252.41430664]
[89.05886078 -239.43565369]
[89.79345703 -225.33166504]
[85.66094208 -211.79545593]
[77.13822174 -200.45895386]
[65.23274231 -192.69615173]
[51.36347961 -189.45663452]
[49.35946655 -174.59111023]
[47.35544968 -159.72557068]
[45.35143661 -144.86004639]
[46.68967056 -129.91986084]
[51.30368042 -115.64713287]
[55.91769028 -101.37439728]
[59.68645096 -98.44088745]
[61.65240860 -93.10871124]
[60.44973755 -86.60755157]
[64.63674927 -72.20377350]
[69.52237701 -66.65827942]
[68.77715302 -57.55430222]
[72.74925232 -43.08977890]
[76.72135162 -28.62525368]
[80.69344330 -14.16073036]
[84.66554260 0.30379379]
[94.24043274 -11.24269676]
[109.23983765 -11.10859108]
[118.60674286 0.60725373]
[115.43622589 15.26835251]
[102.06546783 22.06708908]
[88.35196686 15.99293995]
[91.23724365 30.71283150]
[94.45051575 45.36462021]
[97.99018860 59.94099426]
[101.52986145 74.51737213]
[105.06953430 89.09374237]
[108.82583618 103.61580658]
[112.79792786 118.08032990]
[126.19599915 130.71255493]
[121.10021973 147.50541687]
[125.28723145 161.90919495]
[130.68768311 169.27621460]
[129.42764282 176.55865479]
[133.39973450 191.02317810]
[137.37182617 205.48770142]
[142.66200256 212.93431091]
[141.29367065 220.19718933]
[145.04997253 234.71925354]
[155.74725342 241.92558289]
[158.57691956 254.09837341]
[152.55328369 264.58847046]
[156.09295654 279.16485596]
[159.63262939 293.74121094]
[164.03361511 308.08108521]
[169.28033447 322.13354492]
[174.52705383 336.18600464]
[179.77377319 350.23849487]
[191.16271973 356.29281616]
[195.24342346 368.10516357]
[190.34379578 379.16500854]
[195.38072205 393.29403687]
[200.41763306 407.42306519]
[215.37677002 405.64208984]
[230.35710144 407.23498535]
[244.60722351 412.12188721]
[257.41235352 420.05767822]
[268.13018799 430.64425659]
[276.22314453 443.35061646]
[281.28524780 457.53945923]
[283.06259155 472.49902344]
[281.46606445 487.47897339]
[276.57571411 501.72790527]
[268.63684082 514.53112793]
[258.04766846 525.24639893]
[245.33932495 533.33624268]
[231.14927673 538.39489746]
[216.18928528 540.16864014]
[201.20971680 538.56848145]
[186.96195984 533.67468262]
[174.16069031 525.73272705]
[163.44798279 515.14093018]
[155.36119080 502.43063354]
[150.30596924 488.23934937]
[148.53585815 473.27893066]
[150.13964844 458.29974365]
[155.03691101 444.05319214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[6 181]
[7 180]
[8 179]
[9 178]
[18 177]
[19 176]
[20 175]
[22 172]
[23 171]
[24 169]
[25 168]
[26 167]
[27 165]
[28 164]
[31 162]
[32 161]
[35 160]
[36 159]
[37 158]
[38 157]
[42 156]
[43 155]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 143]
[50 142]
[51 139]
[52 138]
[53 137]
[84 136]
[85 135]
[86 134]
[87 133]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
