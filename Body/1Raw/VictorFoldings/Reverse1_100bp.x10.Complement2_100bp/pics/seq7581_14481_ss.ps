%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[85.54798889 526.92974854]
[70.04638672 526.23687744]
[57.93360901 516.53839111]
[53.86725616 501.56359863]
[59.41092682 487.07061768]
[72.43296814 478.63223267]
[73.10275269 463.64718628]
[73.77253723 448.66213989]
[74.44232178 433.67712402]
[75.11210632 418.69207764]
[75.78189087 403.70703125]
[76.45167542 388.72198486]
[69.29039764 375.66192627]
[77.63619232 362.22100830]
[78.30597687 347.23596191]
[78.86418915 332.24636841]
[79.31079102 317.25302124]
[79.75740051 302.25967407]
[80.20400238 287.26632690]
[80.65061188 272.27297974]
[81.09721375 257.27960205]
[81.54382324 242.28627014]
[81.99042511 227.29292297]
[82.43703461 212.29956055]
[82.88363647 197.30621338]
[70.34239960 205.53527832]
[56.04247284 201.00624084]
[50.52523041 187.05776978]
[57.85778046 173.97213745]
[72.63483429 171.39559937]
[83.96264648 181.22595215]
[85.52317047 166.30734253]
[87.08368683 151.38874817]
[88.64421082 136.47013855]
[75.56287384 129.35731506]
[66.19499969 117.78334045]
[61.96414948 103.50700378]
[63.51323318 88.69774628]
[70.60685730 75.60597992]
[82.16706848 66.22113800]
[96.43717957 61.96933746]
[90.17756653 47.43909836]
[99.19696045 35.58583832]
[100.75748444 20.66723442]
[102.31800842 5.74863005]
[99.97909546 -0.43530393]
[100.96612549 -6.03198147]
[104.15354919 -9.58857822]
[106.15756226 -24.45410728]
[108.16157532 -39.31963348]
[109.72209930 -54.23823929]
[110.83774567 -69.19669342]
[111.95339966 -84.15514374]
[113.06904602 -99.11360168]
[114.18469238 -114.07205200]
[115.30034637 -129.03050232]
[116.41599274 -143.98895264]
[117.53163910 -158.94741821]
[118.64729309 -173.90586853]
[119.76293945 -188.86431885]
[104.90280151 -190.94645691]
[90.20861053 -193.98611450]
[75.74198914 -197.97056580]
[61.56362152 -202.88308716]
[47.73297501 -208.70306396]
[34.30806351 -215.40609741]
[21.34519577 -222.96406555]
[8.89873886 -231.34527588]
[-2.97909832 -240.51457214]
[-14.23849678 -250.43348694]
[-24.83223152 -261.06042480]
[-34.71586609 -272.35079956]
[-43.84794617 -284.25726318]
[-52.19016647 -296.72988892]
[-59.70754242 -309.71633911]
[-66.36853790 -323.16217041]
[-72.14521027 -337.01095581]
[-77.01334381 -351.20462036]
[-80.95249939 -365.68362427]
[-83.94617462 -380.38726807]
[-85.98180389 -395.25384521]
[-87.05084991 -410.22100830]
[-87.14882660 -425.22598267]
[-86.27532959 -440.20584106]
[-84.43401337 -455.09771729]
[-81.63260651 -469.83920288]
[-77.88285828 -484.36840820]
[-73.20049286 -498.62445068]
[-67.60515594 -512.54748535]
[-61.12031937 -526.07916260]
[-53.77317429 -539.16265869]
[-45.59453964 -551.74316406]
[-36.61872101 -563.76788330]
[-26.88336754 -575.18634033]
[-16.42931175 -585.95074463]
[-5.30040216 -596.01580811]
[6.45668268 -605.33941650]
[18.79262924 -613.88244629]
[31.65569496 -621.60906982]
[44.99192810 -628.48687744]
[58.74539185 -634.48693848]
[72.85839844 -639.58422852]
[87.27175140 -643.75720215]
[101.92500305 -646.98852539]
[116.75667572 -649.26452637]
[131.70457458 -650.57574463]
[146.70600891 -650.91656494]
[161.69802856 -650.28564453]
[176.61778259 -648.68566895]
[191.40266418 -646.12322998]
[205.99067688 -642.60919189]
[220.32064819 -638.15820312]
[234.33242798 -632.78900146]
[247.96728516 -626.52404785]
[261.16802979 -619.38964844]
[273.87927246 -611.41571045]
[286.04769897 -602.63574219]
[297.62228394 -593.08648682]
[308.55444336 -582.80804443]
[318.79837036 -571.84350586]
[328.31109619 -560.23889160]
[337.05270386 -548.04284668]
[344.98651123 -535.30651855]
[352.07925415 -522.08337402]
[358.30120850 -508.42886353]
[363.62622070 -494.40020752]
[368.03201294 -480.05630493]
[371.50009155 -465.45727539]
[374.01589966 -450.66439819]
[375.56887817 -435.73965454]
[376.15252686 -420.74572754]
[375.76437378 -405.74545288]
[374.40609741 -390.80175781]
[372.08334351 -375.97732544]
[368.80587769 -361.33435059]
[364.58746338 -346.93420410]
[359.44573975 -332.83734131]
[353.40234375 -319.10284424]
[346.48254395 -305.78836060]
[338.71545410 -292.94970703]
[330.13357544 -280.64074707]
[320.77294922 -268.91311646]
[310.67282104 -257.81597900]
[299.87554932 -247.39590454]
[288.42645264 -237.69659424]
[276.37350464 -228.75872803]
[263.76730347 -220.61978149]
[250.66069031 -213.31390381]
[237.10865784 -206.87174988]
[223.16804504 -201.32032776]
[208.89733887 -196.68292236]
[194.35636902 -192.97898865]
[179.60614014 -190.22406006]
[164.70851135 -188.42968750]
[149.72598267 -187.60339355]
[134.72138977 -187.74867249]
[133.60574341 -172.79022217]
[132.49009705 -157.83177185]
[131.37445068 -142.87330627]
[130.25878906 -127.91485596]
[129.14314270 -112.95640564]
[128.02749634 -97.99794769]
[126.91184998 -83.03949738]
[125.79620361 -68.08104706]
[124.68054962 -53.12258911]
[126.40550995 -50.91291809]
[127.35912323 -47.88682556]
[127.22604370 -44.33468628]
[125.80177307 -40.65556335]
[123.02710724 -37.31562042]
[121.02309418 -22.45009232]
[119.01908112 -7.58456469]
[117.23661041 7.30915308]
[115.67608643 22.22775841]
[114.11556244 37.14636230]
[120.48680115 50.60951996]
[111.35578918 63.52985764]
[124.43712616 70.64268494]
[133.80499268 82.21665955]
[138.03585815 96.49299622]
[136.48677063 111.30225372]
[129.39314270 124.39402008]
[117.83293152 133.77886963]
[103.56282043 138.03067017]
[102.00229645 152.94926453]
[100.44177246 167.86787415]
[98.88124847 182.78648376]
[97.87699127 197.75282288]
[97.43038177 212.74617004]
[96.98377991 227.73951721]
[96.53717041 242.73287964]
[96.09056854 257.72622681]
[95.64395905 272.71957397]
[95.19734955 287.71292114]
[94.75074768 302.70626831]
[94.30413818 317.69961548]
[93.85753632 332.69296265]
[96.73004913 341.36398315]
[93.29101562 347.90576172]
[92.62123108 362.89080811]
[99.73460388 377.02270508]
[91.43671417 389.39178467]
[90.76692963 404.37683105]
[90.09714508 419.36187744]
[89.42736053 434.34689331]
[88.75757599 449.33193970]
[88.08779144 464.31698608]
[87.41800690 479.30203247]
[99.63528442 488.86849976]
[103.86384583 503.79830933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[14 200]
[15 199]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[31 187]
[32 186]
[33 185]
[34 184]
[41 177]
[43 175]
[44 174]
[45 173]
[48 172]
[49 171]
[50 170]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
