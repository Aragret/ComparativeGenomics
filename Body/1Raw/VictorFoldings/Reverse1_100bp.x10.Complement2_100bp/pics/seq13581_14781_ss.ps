%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[252.31167603 609.54235840]
[249.99508667 594.71032715]
[249.12081909 579.72399902]
[249.69705200 564.72320557]
[251.71838379 549.84802246]
[255.16596985 535.23742676]
[260.00759888 521.02777100]
[266.19805908 507.35177612]
[273.67959595 494.33706665]
[282.38229370 482.10519409]
[292.22491455 470.77038574]
[303.11557007 460.43844604]
[314.95257568 451.20587158]
[306.91140747 438.54333496]
[292.36386108 435.55926514]
[284.02859497 422.83221436]
[287.25720215 407.59362793]
[279.21603394 394.93112183]
[271.17486572 382.26858521]
[263.13369751 369.60607910]
[255.09251404 356.94354248]
[247.05134583 344.28100586]
[239.01017761 331.61849976]
[230.96899414 318.95596313]
[216.42146301 315.97189331]
[208.08618164 303.24484253]
[211.31480408 288.00628662]
[203.27362061 275.34375000]
[195.23245239 262.68121338]
[187.19128418 250.01870728]
[179.15010071 237.35617065]
[171.10893250 224.69364929]
[163.06776428 212.03112793]
[155.02658081 199.36860657]
[146.98541260 186.70606995]
[138.94424438 174.04354858]
[130.90306091 161.38102722]
[122.86189270 148.71850586]
[114.72667694 136.11619568]
[106.49787140 123.57479095]
[98.26906586 111.03338623]
[89.94712067 98.55359650]
[74.68284607 95.44879150]
[66.32611847 82.73581696]
[69.38014221 68.20280457]
[60.96552277 55.78530884]
[52.55090714 43.36781311]
[38.40416718 36.28400040]
[37.66968536 21.40751648]
[23.52294540 14.32370663]
[22.78846169 -0.55277777]
[14.37384415 -12.97027302]
[5.95922518 -25.38776779]
[-2.45539331 -37.80526352]
[-15.64833546 -30.64194870]
[-29.47988319 -24.80628014]
[-43.81683350 -20.35445595]
[-58.52110291 -17.32935524]
[-73.45108032 -15.76011086]
[-88.46298218 -15.66183472]
[-103.41222382 -17.03547287]
[-118.15483856 -19.86779976]
[-132.54884338 -24.13153267]
[-146.45561218 -29.78561211]
[-159.74121094 -36.77558517]
[-172.27767944 -45.03413010]
[-183.94430542 -54.48171234]
[-194.62870789 -65.02734375]
[-204.22799683 -76.56945801]
[-212.64971924 -88.99690247]
[-219.81277466 -102.18998718]
[-225.64816284 -116.02165222]
[-230.09970093 -130.35868835]
[-233.12449646 -145.06301880]
[-234.69345093 -159.99302673]
[-234.79142761 -175.00492859]
[-233.41748047 -189.95414734]
[-230.58486938 -204.69671631]
[-226.32084656 -219.09062195]
[-220.66648865 -232.99728394]
[-213.67625427 -246.28274536]
[-205.41744995 -258.81906128]
[-195.96963501 -270.48547363]
[-185.42379761 -281.16967773]
[-173.88148499 -290.76873779]
[-161.45387268 -299.19021606]
[-148.26065063 -306.35299683]
[-134.42886353 -312.18811035]
[-120.09173584 -316.63934326]
[-105.38734436 -319.66387939]
[-90.45730591 -321.23251343]
[-75.44540405 -321.33020020]
[-60.49621201 -319.95596313]
[-45.75370789 -317.12304688]
[-31.35987473 -312.85873413]
[-17.45333290 -307.20410156]
[-4.16801596 -300.21359253]
[8.36812973 -291.95455933]
[20.03437042 -282.50650024]
[30.71835136 -271.96044922]
[40.31717682 -260.41793823]
[48.73840332 -247.99015808]
[55.90092468 -234.79678345]
[61.73576736 -220.96488953]
[66.18672943 -206.62767029]
[69.21094513 -191.92321777]
[70.77929688 -176.99314880]
[70.87667084 -161.98124695]
[69.50213623 -147.03207397]
[66.66893005 -132.28962708]
[62.40432739 -117.89588165]
[56.74941635 -103.98945618]
[49.75864792 -90.70427704]
[41.49934769 -78.16829681]
[32.05106735 -66.50225067]
[21.50479507 -55.81847763]
[9.96210194 -46.21988297]
[18.37672043 -33.80238724]
[26.79133987 -21.38489151]
[35.20595932 -8.96739674]
[48.75082779 -2.77176905]
[50.08718109 12.99289799]
[63.63204956 19.18852615]
[64.96839905 34.95319366]
[73.38301849 47.37068939]
[81.79763794 59.78818512]
[96.42757416 62.33780289]
[105.13808441 74.81104279]
[102.36461639 90.13897705]
[109.13400269 94.51480865]
[110.81046295 102.80458069]
[119.03926849 115.34597778]
[127.26808167 127.88738251]
[134.59233093 133.34568787]
[135.52441406 140.67732239]
[143.56559753 153.33985901]
[151.60676575 166.00238037]
[159.64793396 178.66490173]
[167.68911743 191.32742310]
[175.73028564 203.98995972]
[183.77145386 216.65248108]
[191.81263733 229.31500244]
[199.85380554 241.97752380]
[207.89497375 254.64004517]
[215.93614197 267.30258179]
[223.97732544 279.96508789]
[239.14237976 283.52301025]
[247.11689758 296.47915649]
[243.63153076 310.91479492]
[251.67269897 323.57733154]
[259.71386719 336.23983765]
[267.75503540 348.90237427]
[275.79620361 361.56488037]
[283.83740234 374.22741699]
[291.87857056 386.88995361]
[299.91973877 399.55245972]
[315.08480835 403.11038208]
[323.05929565 416.06652832]
[319.57394409 430.50216675]
[327.61511230 443.16467285]
[341.00491333 436.37731934]
[354.98730469 430.91394043]
[369.43170166 426.82559204]
[384.20327759 424.15042114]
[399.16406250 422.91342163]
[414.17440796 423.12615967]
[429.09414673 424.78662109]
[443.78396606 427.87930298]
[458.10671997 432.37530518]
[471.92868042 438.23272705]
[485.12075806 445.39682007]
[497.55981445 453.80068970]
[509.12973022 463.36587524]
[519.72241211 474.00311279]
[529.23901367 485.61300659]
[537.59063721 498.08721924]
[544.69934082 511.30923462]
[550.49871826 525.15563965]
[554.93463135 539.49713135]
[557.96569824 554.19976807]
[559.56353760 569.12634277]
[559.71331787 584.13745117]
[558.41357422 599.09295654]
[555.67645264 613.85314941]
[551.52758789 628.28027344]
[546.00561523 642.23962402]
[539.16210938 655.60083008]
[531.06103516 668.23919678]
[521.77801514 680.03668213]
[511.39962769 690.88311768]
[500.02288818 700.67724609]
[487.75396729 709.32763672]
[474.70742798 716.75347900]
[461.00509644 722.88549805]
[446.77490234 727.66638184]
[432.14971924 731.05157471]
[417.26608276 733.00933838]
[402.26296997 733.52154541]
[387.28048706 732.58325195]
[372.45846558 730.20336914]
[357.93536377 726.40399170]
[343.84677124 721.22070312]
[330.32421875 714.70184326]
[317.49392700 706.90826416]
[305.47576904 697.91278076]
[294.38189697 687.79931641]
[284.31591797 676.66235352]
[275.37182617 664.60589600]
[267.63311768 651.74243164]
[261.17205811 638.19213867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 160]
[14 159]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 133]
[40 132]
[41 131]
[42 129]
[45 126]
[46 125]
[47 124]
[49 122]
[51 120]
[52 119]
[53 118]
[54 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
