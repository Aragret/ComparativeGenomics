%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[176.05798340 387.66772461]
[186.96112061 377.28433228]
[199.78504944 369.39505005]
[194.74813843 355.26602173]
[189.71121216 341.13699341]
[184.67430115 327.00796509]
[179.63739014 312.87893677]
[174.28619385 298.86590576]
[162.31665039 290.00143433]
[164.27157593 274.30145264]
[158.60879517 260.41143799]
[146.63925171 251.54693604]
[148.59417725 235.84696960]
[142.93139648 221.95693970]
[137.26860046 208.06690979]
[131.60581970 194.17689514]
[125.83978271 180.32940674]
[119.97082520 166.52522278]
[114.10186005 152.72105408]
[108.23290253 138.91687012]
[102.36393738 125.11269379]
[96.49497986 111.30851746]
[94.53849792 126.18038177]
[87.10638428 139.20971680]
[75.30114746 148.46371460]
[60.87402725 152.56958008]
[45.96519852 150.91825867]
[32.78630066 143.75469971]
[23.29234314 132.14157104]
[18.89169693 117.80161285]
[20.23717308 102.86208344]
[27.12917709 89.53915405]
[38.54532242 79.80921936]
[52.79209137 75.11565399]
[67.75605774 76.15471649]
[81.21741486 82.77226257]
[91.17826843 93.98498535]
[88.29299164 79.26509094]
[85.40772247 64.54520416]
[82.52244568 49.82530975]
[79.63717651 35.10541916]
[76.75189972 20.38552666]
[73.86663055 5.66563606]
[70.98136139 -9.05425549]
[68.09608459 -23.77414703]
[63.31894684 -9.55518150]
[53.78406525 2.02437067]
[40.74591827 9.44102192]
[25.91989899 11.71898365]
[11.25662231 8.55855179]
[-1.31470299 0.37553403]
[-10.14010334 -11.75345230]
[-14.05844593 -26.23262978]
[-12.55420589 -41.15701294]
[-5.82529068 -54.56304550]
[5.24299479 -64.68693542]
[19.19442749 -70.19670105]
[34.19345474 -70.36744690]
[48.26670074 -65.17670441]
[59.56258011 -55.30740738]
[66.59564972 -42.05575943]
[67.04225922 -57.04911041]
[67.48886108 -72.04245758]
[67.93547058 -87.03580475]
[55.70839310 -99.54652405]
[56.30081558 -116.69189453]
[68.85802460 -127.87918091]
[69.08135223 -142.87751770]
[69.30467987 -157.87585449]
[69.52800751 -172.87419128]
[61.12088776 -182.65596008]
[61.61566925 -195.14352417]
[70.20211792 -203.66404724]
[67.72637939 -208.25946045]
[67.30323792 -212.88269043]
[68.59955597 -216.74722290]
[71.01834106 -219.31272888]
[72.13398743 -234.27117920]
[73.24963379 -249.22962952]
[74.36528778 -264.18807983]
[75.48093414 -279.14654541]
[60.73069763 -281.96224976]
[46.39758682 -286.44107056]
[32.66846085 -292.52456665]
[19.72231102 -300.13342285]
[7.72791195 -309.16848755]
[-3.15836167 -319.51193237]
[-12.79458523 -331.02890015]
[-21.05513191 -343.56930542]
[-27.83230782 -356.96957397]
[-33.03775787 -371.05508423]
[-36.60361862 -385.64212036]
[-38.48340225 -400.54058838]
[-38.65260315 -415.55621338]
[-37.10901260 -430.49325562]
[-33.87275696 -445.15698242]
[-28.98602486 -459.35620117]
[-22.51252747 -472.90579224]
[-14.53665924 -485.62911987]
[-5.16240168 -497.36032104]
[5.48803234 -507.94644165]
[17.27579308 -517.24945068]
[30.04720116 -525.14813232]
[43.63575745 -531.53942871]
[57.86430740 -536.34008789]
[72.54734802 -539.48748779]
[87.49346161 -540.94061279]
[102.50778961 -540.68041992]
[117.39459229 -538.71044922]
[131.95979309 -535.05633545]
[146.01350403 -529.76568604]
[159.37249756 -522.90747070]
[171.86260986 -514.57110596]
[183.32102966 -504.86529541]
[193.59834290 -493.91659546]
[202.56059265 -481.86767578]
[210.09091187 -468.87570190]
[216.09114075 -455.10995483]
[220.48306274 -440.75000000]
[223.20939636 -425.98297119]
[224.23461914 -411.00143433]
[223.54534912 -396.00067139]
[221.15058899 -381.17626953]
[217.08154297 -366.72149658]
[211.39126587 -352.82476807]
[204.15396118 -339.66729736]
[195.46394348 -327.42062378]
[185.43453979 -316.24435425]
[174.19648743 -306.28424072]
[161.89630127 -297.67013550]
[148.69433594 -290.51428223]
[134.76271057 -284.91006470]
[120.28304291 -280.93045044]
[105.44412231 -278.62741089]
[90.43938446 -278.03088379]
[89.32373810 -263.07244873]
[88.20809174 -248.11398315]
[87.09244537 -233.15553284]
[85.97679138 -218.19708252]
[85.19547272 -203.21743774]
[94.33415222 -188.23573303]
[84.52634430 -172.65086365]
[84.30301666 -157.65252686]
[84.07968903 -142.65419006]
[83.85636139 -127.65585327]
[94.03628540 -119.75656891]
[97.86492157 -107.24962616]
[93.73024750 -94.63555145]
[82.92881775 -86.58920288]
[82.48221588 -71.59585571]
[82.03560638 -56.60250092]
[81.58900452 -41.60915375]
[82.81597900 -26.65942001]
[85.70124817 -11.93952751]
[88.58652496 2.78036356]
[91.47179413 17.50025558]
[94.35707092 32.22014618]
[97.24234009 46.94003677]
[100.12760925 61.65992737]
[103.01288605 76.37982178]
[105.89815521 91.09970856]
[110.29915619 105.43955994]
[116.16811371 119.24373627]
[122.03707886 133.04791260]
[127.90603638 146.85209656]
[133.77499390 160.65626526]
[139.64396667 174.46044922]
[145.88157654 181.13351440]
[145.49584961 188.51409912]
[151.15863037 202.40412903]
[156.82141113 216.29415894]
[162.48420715 230.18418884]
[174.85877991 240.04219055]
[172.49882507 254.74864197]
[178.16160583 268.63867188]
[190.53619385 278.49667358]
[188.17622375 293.20312500]
[192.30070496 296.40246582]
[194.55966187 300.45837402]
[194.93919373 304.51684570]
[193.76641846 307.84204102]
[198.80332947 321.97106934]
[203.84024048 336.10009766]
[208.87716675 350.22912598]
[213.91407776 364.35815430]
[228.83670044 362.35592651]
[243.84948730 363.50045776]
[258.29614258 367.74169922]
[271.54510498 374.89422607]
[283.01721191 384.64535522]
[292.21090698 396.56881714]
[298.72433472 410.14340210]
[302.27273560 424.77563477]
[302.70098877 439.82589722]
[299.99035645 454.63623047]
[294.25933838 468.55920410]
[285.75851440 480.98617554]
[274.85943604 491.37387085]
[262.03863525 499.26818848]
[247.85652161 504.32403564]
[232.93310547 506.32037354]
[217.92077637 505.16992188]
[203.47579956 500.92303467]
[190.22964478 493.76528931]
[178.76138306 484.00964355]
[169.57235718 472.08255005]
[163.06427002 458.50540161]
[159.52163696 443.87176514]
[159.09931946 428.82135010]
[161.81576538 414.01208496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 177]
[10 175]
[11 174]
[13 172]
[14 171]
[15 170]
[16 169]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[61 152]
[62 151]
[63 150]
[64 149]
[67 145]
[68 144]
[69 143]
[70 142]
[73 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
