%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[3.06503773 454.72479248]
[4.13994312 469.71353149]
[3.02092242 484.69906616]
[-0.26817220 499.36193848]
[-5.65723324 513.38958740]
[-13.03139305 526.48309326]
[-22.23347092 538.36334229]
[-33.06732178 548.77703857]
[-45.30202484 557.50225830]
[-58.67679596 564.35308838]
[-72.90654755 569.18341064]
[-87.68798065 571.89025879]
[-102.70601654 572.41601562]
[-117.64055634 570.74945068]
[-132.17324829 566.92602539]
[-145.99435425 561.02728271]
[-158.80926514 553.17901611]
[-170.34483337 543.54840088]
[-180.35516357 532.34075928]
[-188.62689209 519.79498291]
[-194.98371887 506.17849731]
[-199.29014587 491.78155518]
[-201.45436096 476.91098022]
[-201.43025208 461.88375854]
[-199.21832275 447.02020264]
[-194.86573792 432.63711548]
[-188.46524048 419.04110718]
[-180.15328979 406.52194214]
[-170.10705566 395.34649658]
[-158.54064941 385.75296021]
[-145.70062256 377.94580078]
[-131.86065674 372.09146118]
[-117.31575775 368.31469727]
[-102.37595367 366.69604492]
[-87.35968018 367.26998901]
[-72.58701324 370.02429199]
[-58.37283325 374.90023804]
[-51.49341965 361.57080078]
[-44.61400604 348.24136353]
[-37.73459244 334.91195679]
[-30.85518265 321.58251953]
[-31.42814636 316.84112549]
[-29.02868271 311.68948364]
[-23.56734085 307.96316528]
[-16.29411125 294.84448242]
[-9.02088261 281.72579956]
[-14.26960278 269.95800781]
[-11.74445629 257.12423706]
[-2.14749742 247.95315552]
[11.17246628 245.95486450]
[18.64020729 232.94592285]
[26.10794830 219.93696594]
[25.73393631 205.04705811]
[39.31462097 196.93067932]
[46.78236389 183.92172241]
[46.40834808 169.03181458]
[59.98903656 160.91545105]
[67.45677948 147.90649414]
[74.92451477 134.89753723]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[103.32081604 56.38293076]
[115.67424011 48.06174469]
[121.95160675 34.43842697]
[128.22895813 20.81511116]
[134.50633240 7.19179583]
[140.78369141 -6.43152046]
[144.32336426 -21.00789642]
[144.99314880 -35.99293518]
[145.66293335 -50.97797394]
[146.33271790 -65.96301270]
[147.00250244 -80.94805145]
[147.67228699 -95.93309021]
[147.44895935 -110.93142700]
[146.33331299 -125.88987732]
[145.21765137 -140.84832764]
[131.48428345 -147.58195496]
[123.02114868 -160.20227051]
[122.01795197 -175.26412964]
[128.64421082 -188.71585083]
[141.03050232 -196.98901367]
[139.91485596 -211.94746399]
[131.17257690 -225.13394165]
[137.94183350 -238.40142822]
[136.82618713 -253.35989380]
[135.71054077 -268.31832886]
[134.59489441 -283.27679443]
[133.47924805 -298.23526001]
[118.63142395 -300.87966919]
[104.90805817 -307.13427734]
[93.17181396 -316.60589600]
[84.16043091 -328.69909668]
[78.44038391 -342.65374756]
[76.37123871 -357.59259033]
[78.08306122 -372.57659912]
[83.46823883 -386.66384888]
[92.18826294 -398.96881104]
[103.69497681 -408.71798706]
[117.26506805 -415.29852295]
[132.04551697 -418.29675293]
[147.10717773 -417.52423096]
[161.50331116 -413.02951050]
[174.32891846 -405.09512329]
[184.77780151 -394.21984863]
[192.19311523 -381.08728027]
[196.10873413 -366.52301025]
[196.27853394 -351.44247437]
[192.69181824 -336.79373169]
[185.57406616 -323.49752808]
[175.37269592 -312.38977051]
[162.72897339 -304.16860962]
[148.43769836 -299.35089111]
[149.55334473 -284.39245605]
[150.66899109 -269.43399048]
[151.78465271 -254.47554016]
[152.90029907 -239.51708984]
[161.56277466 -227.40054321]
[154.87332153 -213.06311035]
[155.98896790 -198.10466003]
[169.46546936 -191.76043701]
[178.01385498 -179.44049072]
[179.25605774 -164.39643860]
[172.75866699 -150.66033936]
[160.17611694 -141.96398926]
[161.29176331 -127.00553131]
[162.40740967 -112.04707336]
[171.41532898 -124.04113770]
[185.71849060 -128.55992126]
[199.98217773 -123.91804504]
[208.88639832 -111.84679413]
[209.11007690 -96.84846497]
[200.56980896 -84.51705170]
[186.45088196 -79.45187378]
[172.01931763 -83.54211426]
[162.65731812 -95.26330566]
[161.98753357 -80.27826691]
[161.31774902 -65.29322815]
[160.64796448 -50.30818939]
[159.97817993 -35.32315063]
[159.30839539 -20.33810997]
[166.53176880 -33.48432541]
[176.46501160 -44.72401810]
[188.62345886 -53.50877762]
[202.41387939 -59.40998077]
[217.16342163 -62.13969040]
[232.15238953 -61.56471634]
[246.64947510 -57.71311951]
[259.94729614 -50.77282333]
[271.39706421 -41.08245850]
[280.44006348 -29.11484528]
[286.63513184 -15.45390415]
[289.67996216 -0.76618624]
[289.42596436 14.23166370]
[285.88558960 28.80786705]
[279.23153687 42.25121689]
[269.78851318 53.90578461]
[258.01721191 63.20291901]
[244.49201965 69.68898773]
[229.87283325 73.04752350]
[214.87298584 73.11466217]
[200.22433472 69.88711548]
[186.64163208 63.52236938]
[174.78758240 54.33097839]
[165.24060059 42.76140213]
[158.46649170 29.37815094]
[154.79577637 14.83422279]
[154.40699768 -0.15415967]
[148.12963867 13.46915627]
[141.85227966 27.09247208]
[135.57492065 40.71578979]
[129.29756165 54.33910370]
[130.99848938 69.13626862]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[109.83748627 123.68075562]
[123.03801727 130.80438232]
[127.46696472 145.13562012]
[120.58723450 158.46488953]
[106.33984375 163.15657043]
[92.88634491 156.52305603]
[87.93347168 142.36528015]
[80.46572876 155.37423706]
[72.99798584 168.38317871]
[72.83786011 184.20358276]
[59.79131317 191.38946533]
[52.32357407 204.39842224]
[52.16344452 220.21881104]
[39.11690140 227.40470886]
[31.64916039 240.41366577]
[24.18141937 253.42260742]
[29.05941200 270.22213745]
[20.44776535 285.05975342]
[4.09781170 288.99902344]
[-3.17541766 302.11770630]
[-10.44864750 315.23638916]
[-17.52575302 328.46194458]
[-24.40516472 341.79135132]
[-31.28457832 355.12078857]
[-38.16399002 368.45022583]
[-45.04340363 381.77966309]
[-32.83443451 390.54086304]
[-22.03128242 400.98641968]
[-12.86421490 412.89367676]
[-5.52862883 426.00881958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[44 201]
[45 200]
[46 199]
[50 196]
[51 195]
[52 194]
[54 192]
[55 191]
[57 189]
[58 188]
[59 187]
[60 180]
[61 179]
[63 177]
[64 176]
[66 174]
[67 173]
[68 172]
[69 171]
[70 170]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 129]
[78 128]
[79 127]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
