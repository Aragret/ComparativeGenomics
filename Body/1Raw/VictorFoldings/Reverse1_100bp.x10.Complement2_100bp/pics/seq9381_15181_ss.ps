%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[179.11216736 601.19354248]
[171.12243652 588.48876953]
[164.18092346 575.18231201]
[158.33264160 561.36047363]
[153.61553955 547.11279297]
[150.06021118 532.53179932]
[147.68969727 517.71197510]
[146.51936340 502.74948120]
[146.55683899 487.74133301]
[147.80183411 472.78485107]
[150.24630737 457.97705078]
[153.87440491 443.41397095]
[158.66256714 429.19006348]
[164.57977295 415.39755249]
[171.58763123 402.12591553]
[179.64070129 389.46121216]
[188.68673706 377.48559570]
[198.66708374 366.27673340]
[209.51702881 355.90728760]
[221.16616821 346.44454956]
[233.53898621 337.94985962]
[226.07124329 324.94088745]
[218.60350037 311.93194580]
[211.13575745 298.92300415]
[196.73597717 295.29229736]
[188.97731018 282.20574951]
[192.88313293 267.12655640]
[185.41540527 254.11761475]
[177.94766235 241.10865784]
[170.47991943 228.09970093]
[163.01217651 215.09075928]
[155.54443359 202.08180237]
[147.78804016 189.24285889]
[139.74687195 176.58033752]
[131.70568848 163.91781616]
[123.66452026 151.25527954]
[110.31012726 144.65911865]
[109.44374084 128.86166382]
[101.40256500 116.19913483]
[86.33931732 108.81842804]
[85.81501007 92.05235291]
[77.58620453 79.51095581]
[69.35739136 66.96955109]
[65.25539398 81.39777374]
[52.22023010 88.81966400]
[37.71902847 84.98362732]
[30.05874252 72.08712006]
[33.62752533 57.51784134]
[46.38102341 49.62174606]
[61.01266861 52.92152405]
[53.93556213 39.69599533]
[46.85845566 26.47046852]
[39.78135300 13.24494076]
[32.70424652 0.01941366]
[25.62714195 -13.20611382]
[10.38519859 -15.43980598]
[-0.49174342 -26.09557915]
[-2.97911763 -40.93730927]
[3.67028570 -54.23856735]
[-3.40681958 -67.46409607]
[-16.73983002 -75.98121643]
[-15.92265415 -90.85339355]
[-22.99975967 -104.07891846]
[-30.07686424 -117.30444336]
[-44.08944702 -111.89822388]
[-58.66019058 -108.25501251]
[-73.56821442 -106.43003082]
[-88.58750153 -106.45095062]
[-103.49037933 -108.31745148]
[-118.05092621 -112.00124359]
[-132.04838562 -117.44647980]
[-145.27058411 -124.57060242]
[-157.51705933 -133.26562500]
[-168.60217285 -143.39971924]
[-178.35786438 -154.81927490]
[-186.63624573 -167.35115051]
[-193.31181335 -180.80538940]
[-198.28338623 -194.97799683]
[-201.47557068 -209.65415955]
[-202.83998108 -224.61135864]
[-202.35594177 -239.62287903]
[-200.03079224 -254.46110535]
[-195.89978027 -268.90112305]
[-190.02551270 -282.72402954]
[-182.49707031 -295.72027588]
[-173.42855835 -307.69281006]
[-162.95745850 -318.46014404]
[-151.24252319 -327.85906982]
[-138.46133423 -335.74710083]
[-124.80764771 -342.00463867]
[-110.48847198 -346.53680420]
[-95.72085571 -349.27493286]
[-80.72869110 -350.17749023]
[-65.73925018 -349.23080444]
[-50.97976685 -346.44921875]
[-36.67399216 -341.87487793]
[-23.03879738 -335.57717896]
[-10.28088760 -327.65158081]
[1.40632749 -318.21820068]
[11.84567451 -307.42004395]
[20.87889481 -295.42086792]
[28.36904907 -282.40252686]
[34.20258713 -268.56237793]
[38.29107285 -254.11026001]
[40.57252502 -239.26524353]
[41.01236343 -224.25238037]
[39.60391235 -209.29925537]
[36.36853027 -194.63256836]
[31.35525894 -180.47463989]
[24.64010239 -167.04011536]
[16.32485962 -154.53266907]
[6.53558779 -143.14189148]
[-4.57931089 -133.04048157]
[-16.85133743 -124.38155365]
[-9.77423191 -111.15602112]
[-2.69712687 -97.93049622]
[10.12968159 -90.35935211]
[9.81870747 -74.54119873]
[16.89581299 -61.31567383]
[31.65134048 -59.46839523]
[42.61946869 -49.16479874]
[45.45043945 -34.20354843]
[38.85266876 -20.28321838]
[45.92977524 -7.05769157]
[53.00687790 6.16783571]
[60.08398438 19.39336395]
[67.16108704 32.61889267]
[74.23819733 45.84441757]
[81.89879608 58.74074554]
[90.12760162 71.28214264]
[98.35640717 83.82354736]
[109.59631348 86.87407684]
[115.91277313 96.65894318]
[114.06509399 108.15795898]
[122.10626221 120.82048035]
[136.03581238 128.32235718]
[136.32704163 143.21411133]
[144.36822510 155.87663269]
[152.40939331 168.53916931]
[160.45056152 181.20169067]
[165.07797241 183.61709595]
[168.02177429 187.20698547]
[169.11654663 191.13337708]
[168.55339050 194.61405945]
[176.02113342 207.62301636]
[183.48886108 220.63195801]
[190.95660400 233.64091492]
[198.42434692 246.64987183]
[205.89208984 259.65881348]
[220.88316345 263.89031982]
[228.27119446 277.18963623]
[224.14471436 291.45526123]
[231.61245728 304.46420288]
[239.08020020 317.47314453]
[246.54794312 330.48211670]
[260.12289429 324.08157349]
[274.16885376 318.79412842]
[288.59475708 314.65408325]
[303.30700684 311.68826294]
[318.21020508 309.91592407]
[333.20767212 309.34854126]
[348.20217896 309.98977661]
[363.09646606 311.83554077]
[377.79391479 314.87377930]
[392.19924927 319.08486938]
[406.21899414 324.44143677]
[419.76226807 330.90875244]
[432.74118042 338.44491577]
[445.07162476 347.00097656]
[456.67361450 356.52151489]
[467.47186279 366.94476318]
[477.39639282 378.20309448]
[486.38278198 390.22354126]
[494.37280273 402.92810059]
[501.31460571 416.23440552]
[507.16317749 430.05615234]
[511.88058472 444.30368042]
[515.43627930 458.88461304]
[517.80712891 473.70437622]
[518.97778320 488.66687012]
[518.94061279 503.67501831]
[517.69592285 518.63153076]
[515.25177002 533.43939209]
[511.62402344 548.00256348]
[506.83618164 562.22656250]
[500.91928101 576.01916504]
[493.91171265 589.29095459]
[485.85891724 601.95587158]
[476.81314087 613.93164062]
[466.83303833 625.14074707]
[455.98333740 635.51043701]
[444.33441162 644.97344971]
[431.96176147 653.46844482]
[418.94570923 660.94024658]
[405.37060547 667.34045410]
[391.32452393 672.62762451]
[376.89852905 676.76733398]
[362.18621826 679.73284912]
[347.28298950 681.50488281]
[332.28549194 682.07189941]
[317.29101562 681.43029785]
[302.39675903 679.58422852]
[287.69937134 676.54565430]
[273.29415894 672.33428955]
[259.27450562 666.97741699]
[245.73139954 660.50976562]
[232.75262451 652.97332764]
[220.42236328 644.41699219]
[208.82060242 634.89617920]
[198.02258301 624.47271729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 155]
[22 154]
[23 153]
[24 152]
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[33 140]
[34 139]
[35 138]
[36 137]
[38 135]
[39 134]
[41 131]
[42 130]
[43 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[59 119]
[60 118]
[62 116]
[63 115]
[64 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
