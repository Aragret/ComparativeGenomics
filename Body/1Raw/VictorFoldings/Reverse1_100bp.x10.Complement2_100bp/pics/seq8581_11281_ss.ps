%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[174.36045837 538.09222412]
[174.83587646 523.07122803]
[177.54484558 508.28881836]
[182.42684937 494.07531738]
[189.37283325 480.74822998]
[198.22761536 468.60531616]
[208.79336548 457.91781616]
[220.83407593 448.92453003]
[234.08071899 441.82635498]
[229.04379272 427.69732666]
[224.00688171 413.56829834]
[218.96997070 399.43927002]
[213.93304443 385.31024170]
[208.89613342 371.18121338]
[203.13009644 357.33374023]
[196.65060425 343.80538940]
[190.17111206 330.27703857]
[183.69160461 316.74868774]
[177.21211243 303.22033691]
[170.73262024 289.69201660]
[164.25312805 276.16366577]
[146.65231323 271.13107300]
[138.17407227 254.54696655]
[144.61882019 236.73182678]
[137.73941040 223.40238953]
[130.76121521 236.68037415]
[116.05875397 239.65316772]
[104.47012329 230.12931824]
[104.53803253 215.12947083]
[116.21242523 205.71095276]
[130.88606262 208.81573486]
[125.01709747 195.01155090]
[119.14813995 181.20738220]
[112.54725647 194.67691040]
[98.40058136 199.66404724]
[84.81196594 193.31193542]
[79.56558228 179.25933838]
[85.66680145 165.55622864]
[99.62056732 160.05236816]
[113.43286133 165.89996338]
[108.81885529 151.62722778]
[104.20484161 137.35449219]
[99.59083557 123.08175659]
[94.97682190 108.80902100]
[89.69794464 102.71755981]
[90.40208435 94.28932953]
[86.00108337 79.94947815]
[74.55533600 69.02677917]
[78.21793365 54.58951187]
[67.20954895 47.86803436]
[63.83916473 35.83374023]
[69.38838959 25.08512688]
[65.20137787 10.68134499]
[61.01436234 -3.72243690]
[56.82735443 -18.12621880]
[52.64034271 -32.53000259]
[39.05567932 -44.96135330]
[43.90087509 -61.82821274]
[39.49987793 -76.16806030]
[35.09888077 -90.50790405]
[29.64176369 -76.53579712]
[17.55984306 -67.64607239]
[2.59683132 -66.59331512]
[-10.61081791 -73.70372772]
[-17.97057152 -86.77407837]
[-17.20192909 -101.75437164]
[-8.54306412 -114.00279999]
[5.32298088 -119.72406006]
[20.09966087 -117.14535522]
[31.20839500 -107.06549835]
[28.76266861 -121.86476898]
[26.31694031 -136.66404724]
[23.87121391 -151.46331787]
[9.00028896 -154.30601501]
[-3.97643089 -162.05047607]
[-13.50263214 -173.74542236]
[-18.44352913 -187.96716309]
[-18.22101784 -202.99285889]
[-12.88125229 -217.00933838]
[-3.08674717 -228.33174133]
[9.96576786 -235.60615540]
[7.52004004 -250.40542603]
[5.07431269 -265.20468140]
[2.62858534 -280.00396729]
[0.18285787 -294.80325317]
[-2.26286960 -309.60250854]
[-4.70859718 -324.40179443]
[-19.74305534 -325.43218994]
[-34.13444901 -329.90258789]
[-47.10666656 -337.57189941]
[-57.96013641 -348.02651978]
[-66.10954285 -360.70263672]
[-71.11539459 -374.91665649]
[-72.70773315 -389.90200806]
[-70.80068970 -404.85058594]
[-65.49710846 -418.95620728]
[-57.08300018 -431.45819092]
[-46.01213455 -441.68231201]
[-32.88154221 -449.07720947]
[-18.39934540 -453.24404907]
[-3.34654498 -453.95816040]
[11.46507645 -451.18099976]
[25.23674965 -445.06237793]
[37.22578049 -435.93218994]
[46.78562164 -424.28289795]
[53.40072250 -410.74270630]
[56.71433258 -396.04177856]
[56.54776001 -380.97299194]
[52.90998459 -366.34890747]
[45.99718857 -352.95825195]
[36.18216705 -341.52313232]
[23.99423790 -332.66021729]
[10.09067345 -326.84750366]
[12.53640175 -312.04824829]
[14.98212910 -297.24896240]
[17.42785645 -282.44970703]
[19.87358284 -267.65042114]
[22.31931114 -252.85115051]
[24.76503754 -238.05187988]
[39.46397781 -235.36366272]
[52.38050461 -227.79449463]
[61.94591904 -216.24125671]
[66.99086761 -202.08604431]
[66.88828278 -187.03082275]
[61.63123703 -172.89280701]
[51.83613586 -161.38507080]
[38.67048264 -153.90904236]
[41.11621094 -139.10977173]
[43.56193924 -124.31050110]
[46.00766754 -109.51123047]
[49.43872833 -94.90890503]
[53.83972549 -80.56906128]
[58.24072266 -66.22920990]
[68.77693939 -60.28659821]
[72.56084442 -48.37585449]
[67.04412079 -36.71701050]
[71.23113251 -22.31323051]
[75.41814423 -7.90944815]
[79.60515594 6.49433422]
[83.79216766 20.89811516]
[97.09614563 32.34237289]
[92.55778503 50.18851471]
[103.68874359 60.08553314]
[100.34093475 75.54848480]
[104.74192810 89.88832855]
[109.24955750 104.19501495]
[113.86357117 118.46775055]
[118.47757721 132.74047852]
[123.09158325 147.01321411]
[127.70559692 161.28594971]
[132.95231628 175.33842468]
[138.82127380 189.14259338]
[144.69023132 202.94677734]
[151.06884766 216.52297974]
[157.94825745 229.85241699]
[169.76086426 231.19358826]
[179.36105347 238.00074768]
[184.43078613 248.48844910]
[183.81474304 260.00088501]
[177.78146362 269.68417358]
[184.26097107 283.21249390]
[190.74046326 296.74084473]
[197.21995544 310.26919556]
[203.69944763 323.79754639]
[210.17895508 337.32589722]
[216.65844727 350.85424805]
[221.55986023 336.67764282]
[234.36201477 328.86068726]
[249.21194458 330.97720337]
[259.32046509 342.05950928]
[260.06607056 357.04098511]
[251.10791016 369.07223511]
[236.54151917 372.65277100]
[223.02516174 366.14428711]
[228.06207275 380.27331543]
[233.09899902 394.40234375]
[238.13591003 408.53137207]
[243.17282104 422.66043091]
[248.20974731 436.78945923]
[262.95932007 433.90713501]
[277.97375488 433.25543213]
[292.91760254 434.84887695]
[307.45700073 438.65191650]
[321.26718140 444.57952881]
[334.03958130 452.49935913]
[345.48886108 462.23440552]
[355.35928345 473.56723022]
[363.43026733 486.24462891]
[369.52157593 499.98339844]
[373.49707031 514.47662354]
[375.26797485 529.40045166]
[374.79470825 544.42156982]
[372.08786011 559.20434570]
[367.20788574 573.41857910]
[360.26379395 586.74664307]
[351.41073608 598.89080811]
[340.84649658 609.57977295]
[328.80706787 618.57476807]
[315.56143188 625.67486572]
[301.40551758 630.72137451]
[286.65551758 633.60156250]
[271.64102173 634.25115967]
[256.69738770 632.65557861]
[242.15850830 628.85046387]
[228.34918213 622.92083740]
[215.57791138 614.99920654]
[204.13000488 605.26257324]
[194.26121521 593.92834473]
[186.19201660 581.24975586]
[180.10267639 567.51013184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[24 155]
[25 154]
[31 153]
[32 152]
[33 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[46 145]
[47 144]
[49 142]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[58 133]
[59 132]
[60 131]
[70 130]
[71 129]
[72 128]
[73 127]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
