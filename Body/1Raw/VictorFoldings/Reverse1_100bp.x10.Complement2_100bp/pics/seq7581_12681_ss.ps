%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[99.01345825 701.69628906]
[84.88138580 696.62652588]
[71.35668182 690.10736084]
[58.58751297 682.21008301]
[46.71379852 673.02136230]
[35.86563110 662.64184570]
[26.16186523 651.18518066]
[17.70882416 638.77697754]
[10.59912205 625.55316162]
[4.91065788 611.65856934]
[0.70575660 597.24554443]
[-1.96950984 582.47186279]
[-3.08582997 567.49951172]
[-2.63097262 552.49249268]
[-0.60992187 537.61523438]
[2.95517898 523.03070068]
[8.02526855 508.89877319]
[14.54479599 495.37420654]
[22.44232941 482.60525513]
[31.63134003 470.73175049]
[42.01115036 459.88381958]
[53.46802521 450.18035889]
[65.87644958 441.72760010]
[79.10045624 434.61822510]
[92.99516296 428.93008423]
[107.40833282 424.72555542]
[122.18204498 422.05062866]
[121.06639862 407.09219360]
[119.95075226 392.13372803]
[118.72377014 377.18399048]
[117.38553619 362.24380493]
[116.04730225 347.30361938]
[114.70906830 332.36343384]
[101.13959503 326.22055054]
[92.40872955 314.02926636]
[90.94268799 299.00537109]
[97.23484802 285.17404175]
[109.68653870 276.29132080]
[108.34829712 261.35113525]
[107.01006317 246.41096497]
[95.45128632 237.08732605]
[93.88130188 221.95491028]
[103.73915863 209.89422607]
[92.88493347 196.10462952]
[100.77128601 179.46470642]
[99.21076202 164.54609680]
[97.65023804 149.62750244]
[88.63084412 137.77423096]
[94.89045715 123.24400330]
[93.32994080 108.32539368]
[90.33515930 93.62739563]
[85.93416595 79.28754425]
[81.53316498 64.94770050]
[77.13217163 50.60784912]
[63.36392975 38.38013458]
[67.95746613 21.44300461]
[63.34345627 7.17027044]
[58.51745987 -7.03218508]
[53.48054123 -21.16121483]
[48.44362640 -35.29024506]
[43.40671158 -49.41927338]
[38.36979294 -63.54830170]
[23.34357262 -66.40486145]
[11.84061718 -76.33354950]
[6.88475561 -90.59208679]
[9.71236420 -105.31827545]
[19.46570778 -116.57606506]
[14.42879105 -130.70509338]
[9.39187527 -144.83412170]
[-2.53018188 -155.23484802]
[0.48410758 -169.82125854]
[-4.55280876 -183.95028687]
[-9.58972454 -198.07931519]
[-21.51178169 -208.48004150]
[-18.49749184 -223.06645203]
[-23.53440857 -237.19548035]
[-38.34727859 -234.60957336]
[-53.38409805 -234.56442261]
[-68.21223450 -237.06130981]
[-82.40504456 -242.02841187]
[-95.55417633 -249.32283020]
[-107.28130341 -258.73464966]
[-117.24900818 -269.99310303]
[-125.17050934 -282.77426147]
[-130.81788635 -296.71035767]
[-134.02865601 -311.40045166]
[-134.71041870 -326.42187500]
[-132.84358215 -341.34243774]
[-128.48185730 -355.73281860]
[-121.75071716 -369.17901611]
[-112.84385681 -381.29412842]
[-102.01753235 -391.72958374]
[-89.58323669 -400.18511963]
[-75.89872742 -406.41748047]
[-61.35774612 -410.24734497]
[-46.37865829 -411.56451416]
[-31.39244080 -410.33108521]
[-16.83028221 -406.58255005]
[-3.11116123 -400.42675781]
[9.37019444 -392.04083252]
[20.25467110 -381.66604614]
[29.22910118 -369.60089111]
[36.03527451 -356.19253540]
[40.47735977 -341.82675171]
[42.42755127 -326.91687012]
[41.82973862 -311.89187622]
[38.70112228 -297.18405151]
[33.13171387 -283.21658325]
[25.28176498 -270.39138794]
[15.37712955 -259.07739258]
[3.70278287 -249.60017395]
[-9.40537930 -242.23240662]
[-4.36846304 -228.10337830]
[7.19332027 -218.71324158]
[4.53930473 -203.11624146]
[9.57622051 -188.98721313]
[14.61313725 -174.85816956]
[26.17492104 -165.46804810]
[23.52090454 -149.87103271]
[28.55782127 -135.74200439]
[33.59473801 -121.61298370]
[48.27014923 -119.06389618]
[59.77577591 -109.44742584]
[64.95738983 -95.26937103]
[62.32935333 -80.30307007]
[52.49882507 -68.58522034]
[57.53573990 -54.45618820]
[62.57265472 -40.32715988]
[67.60957336 -26.19813156]
[72.64649200 -12.06910133]
[76.50091553 -9.24909973]
[78.62476349 -3.97782731]
[77.61618805 2.55626130]
[82.23020172 16.82899475]
[92.85372925 22.61408043]
[96.81454468 34.46716690]
[91.47201538 46.20685196]
[95.87301636 60.54669952]
[100.27400970 74.88655090]
[104.67501068 89.22639465]
[108.43196869 74.70450592]
[117.70681763 62.91564178]
[130.93656921 55.84643936]
[145.89178467 54.68817139]
[160.05224609 59.63603973]
[171.03166199 69.85623169]
[176.97981262 83.62646484]
[176.89433289 98.62622833]
[170.78962708 112.32777405]
[159.69444275 122.42217255]
[145.47851562 127.20832825]
[130.53747559 125.87969971]
[117.38914490 118.66017151]
[108.24854279 106.76487732]
[109.80906677 121.68347931]
[118.94007874 134.60382080]
[112.56884766 148.06697083]
[114.12936401 162.98558044]
[115.68988800 177.90419006]
[125.19982147 186.61763000]
[126.19245148 199.07548523]
[118.67934418 208.55598450]
[130.52369690 218.67274475]
[131.66802979 233.84329224]
[121.95024872 245.07272339]
[123.28848267 260.01290894]
[124.62671661 274.95309448]
[138.45881653 281.48150635]
[147.10891724 293.97439575]
[148.33625793 309.01968384]
[141.91101074 322.56854248]
[129.64926147 331.02520752]
[130.98748779 345.96539307]
[132.32572937 360.90557861]
[133.66395569 375.84576416]
[137.54650879 384.11398315]
[134.90919495 391.01809692]
[136.02485657 405.97653198]
[137.14050293 420.93499756]
[152.14755249 421.38876343]
[167.02497864 423.40872192]
[181.60974121 426.97274780]
[195.74205017 432.04180908]
[209.26707458 438.56036377]
[222.03662109 446.45697021]
[233.91078186 455.64511108]
[244.75946045 466.02413940]
[254.46377563 477.48028564]
[262.91741943 489.88809204]
[270.02777100 503.11160278]
[275.71691895 517.00585938]
[279.92251587 531.41876221]
[282.59848022 546.19226074]
[283.71554565 561.16455078]
[283.26141357 576.17163086]
[281.24108887 591.04901123]
[277.67669678 605.63366699]
[272.60729980 619.76586914]
[266.08840942 633.29071045]
[258.19149780 646.06005859]
[249.00306702 657.93402100]
[238.62379456 668.78240967]
[227.16738892 678.48651123]
[214.75936890 686.93981934]
[201.53570557 694.04986572]
[187.64128113 699.73864746]
[173.22831726 703.94390869]
[158.45472717 706.61950684]
[143.48240662 707.73620605]
[128.47535706 707.28173828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 179]
[28 178]
[29 177]
[30 175]
[31 174]
[32 173]
[33 172]
[38 167]
[39 166]
[40 165]
[43 162]
[45 159]
[46 158]
[47 157]
[49 155]
[50 154]
[51 140]
[52 139]
[53 138]
[54 137]
[56 134]
[57 133]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[67 121]
[68 120]
[69 119]
[71 117]
[72 116]
[73 115]
[75 113]
[76 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
