%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[32.33234406 375.43447876]
[33.94365311 390.36874390]
[33.63193130 405.38644409]
[31.40229416 420.24096680]
[27.29135323 434.68841553]
[21.36661530 448.49151611]
[13.72537041 461.42364502]
[4.49309349 473.27239990]
[-6.17861223 483.84326172]
[-18.11450768 492.96261597]
[-31.11859512 500.48074341]
[-44.97733688 506.27416992]
[-59.46315384 510.24774170]
[-74.33818817 512.33624268]
[-89.35816193 512.50537109]
[-104.27644348 510.75231934]
[-118.84806824 507.10592651]
[-132.83374023 501.62600708]
[-146.00381470 494.40261841]
[-158.14201355 485.55432129]
[-169.04904175 475.22644043]
[-178.54576111 463.58856201]
[-186.47625732 450.83175659]
[-192.71029663 437.16555786]
[-197.14549255 422.81433105]
[-199.70904541 408.01379395]
[-200.35882568 393.00692749]
[-199.08419800 378.04016113]
[-195.90606689 363.35931396]
[-190.87663269 349.20538330]
[-184.07847595 335.81085205]
[-175.62322998 323.39566040]
[-165.64973450 312.16366577]
[-154.32177734 302.29928589]
[-141.82537842 293.96453857]
[-128.36570740 287.29629517]
[-114.16381073 282.40399170]
[-99.45288849 279.36804199]
[-84.47450256 278.23825073]
[-69.47462463 279.03317261]
[-54.69955826 281.73977661]
[-40.39192200 286.31359863]
[-26.78666115 292.67953491]
[-18.74548721 280.01702881]
[-18.45425797 265.12524414]
[-4.52470303 257.62338257]
[3.51646996 244.96086121]
[11.55764294 232.29833984]
[19.59881592 219.63581848]
[27.63998795 206.97328186]
[35.68115997 194.31076050]
[43.72233582 181.64823914]
[51.57408905 168.86740112]
[51.42180634 153.97357178]
[65.12182617 146.06028748]
[72.78242493 133.16395569]
[80.25016785 120.15501404]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[113.90436554 59.45306396]
[113.82894135 43.63203812]
[126.76705170 36.25270462]
[134.04028320 23.13401031]
[141.31350708 10.01531601]
[142.73767090 0.99259102]
[148.79394531 -3.24338102]
[133.85377502 -1.90485215]
[123.38233185 -12.64490891]
[125.09876251 -27.54638100]
[137.73777771 -35.62445831]
[151.98236084 -30.92428207]
[157.33207703 -16.91229439]
[165.74670410 -29.32979012]
[174.16131592 -41.74728394]
[182.57592773 -54.16477966]
[190.99055481 -66.58227539]
[199.40516663 -78.99977112]
[196.63169861 -94.32770538]
[205.34220886 -106.80094147]
[219.97215271 -109.35056305]
[228.38676453 -121.76805878]
[236.80139160 -134.18556213]
[245.21600342 -146.60305786]
[235.81103516 -159.46331787]
[231.38572693 -174.74081421]
[232.45745850 -190.58328247]
[238.87832642 -205.07649231]
[249.85519409 -216.47557068]
[264.04766846 -223.41503906]
[279.73165894 -225.07237244]
[295.00900269 -221.26545715]
[303.23779297 -233.80685425]
[311.46661377 -246.34826660]
[319.69543457 -258.88964844]
[327.92422485 -271.43106079]
[316.35177612 -280.99877930]
[305.90209961 -291.78152466]
[296.70205688 -303.64837646]
[288.86331177 -316.45532227]
[282.48107910 -330.04687500]
[277.63278198 -344.25802612]
[274.37725830 -358.91629028]
[272.75405884 -373.84375000]
[272.78289795 -388.85913086]
[274.46340942 -403.78024292]
[277.77517700 -418.42590332]
[282.67803955 -432.61831665]
[289.11245728 -446.18527222]
[297.00030518 -458.96200562]
[306.24584961 -470.79342651]
[316.73684692 -481.53598022]
[328.34597778 -491.05917358]
[340.93228149 -499.24746704]
[354.34298706 -506.00140381]
[368.41531372 -511.23907471]
[382.97842407 -514.89685059]
[397.85552979 -516.93029785]
[412.86602783 -517.31481934]
[427.82772827 -516.04565430]
[442.55899048 -513.13830566]
[456.88101196 -508.62796021]
[470.61993408 -502.56945801]
[483.60894775 -495.03628540]
[495.69039917 -486.11990356]
[506.71765137 -475.92858887]
[516.55682373 -464.58599854]
[525.08843994 -452.22985840]
[532.20898438 -439.01013184]
[537.83203125 -425.08731079]
[541.88928223 -410.63043213]
[544.33148193 -395.81494141]
[545.12902832 -380.82070923]
[544.27221680 -365.82974243]
[541.77142334 -351.02401733]
[537.65704346 -336.58328247]
[531.97900391 -322.68280029]
[524.80621338 -309.49133301]
[516.22583008 -297.16903687]
[506.34188843 -285.86544800]
[495.27444458 -275.71777344]
[483.15783691 -266.84924316]
[470.13912964 -259.36752319]
[456.37637329 -253.36335754]
[442.03662109 -248.90969849]
[427.29397583 -246.06059265]
[412.32736206 -244.85061646]
[397.31851196 -245.29446411]
[382.44955444 -247.38674927]
[367.90103149 -251.10206604]
[353.84951782 -256.39532471]
[340.46563721 -263.20223999]
[332.23681641 -250.66085815]
[324.00802612 -238.11944580]
[315.77920532 -225.57804871]
[307.55038452 -213.03665161]
[316.35687256 -201.95245361]
[321.31716919 -188.67025757]
[321.93386841 -174.48400879]
[318.13348389 -160.78012085]
[310.27481079 -148.90194702]
[299.11511230 -140.01811218]
[285.73718262 -135.00755310]
[271.44439697 -134.37254333]
[257.63351440 -138.18843079]
[249.21888733 -125.77093506]
[240.80426025 -113.35343933]
[232.38964844 -100.93594360]
[235.44366455 -86.40293121]
[227.08694458 -73.68995667]
[211.82266235 -70.58515167]
[203.40805054 -58.16765976]
[194.99342346 -45.75016403]
[186.57881165 -33.33266830]
[178.16419983 -20.91517067]
[169.74957275 -8.49767590]
[161.80288696 4.22435999]
[154.43220520 17.28854561]
[147.15896606 30.40723991]
[139.88574219 43.52593231]
[140.48139954 58.40862274]
[127.02306366 66.72629547]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[93.36885834 127.42823792]
[93.10176086 134.03431702]
[90.00363922 138.79862976]
[85.67874908 140.82455444]
[78.01815796 153.72088623]
[77.62249756 169.53713989]
[64.47041321 176.52799988]
[64.00674438 183.12318420]
[60.76814651 187.79313660]
[56.38486099 189.68940735]
[48.34368515 202.35194397]
[40.30251312 215.01446533]
[32.26134109 227.67698669]
[24.22016716 240.33950806]
[16.17899513 253.00202942]
[8.13782215 265.66455078]
[7.27143431 281.46203613]
[-6.08296251 288.05819702]
[-14.12413597 300.72070312]
[-2.57693934 310.32751465]
[7.64692402 321.33209229]
[16.37957001 333.55377197]
[23.47760010 346.79183960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 206]
[44 205]
[46 203]
[47 202]
[48 201]
[49 200]
[50 199]
[51 198]
[52 197]
[53 194]
[55 192]
[56 191]
[57 188]
[58 187]
[60 185]
[61 184]
[62 183]
[64 181]
[65 180]
[66 179]
[68 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[82 169]
[83 168]
[84 167]
[85 166]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
