%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[74.91094208 628.93457031]
[63.99534607 639.26654053]
[51.63043594 647.81109619]
[38.10607147 654.36791992]
[23.73927498 658.78332520]
[8.86683178 660.95379639]
[-6.16263008 660.82843018]
[-20.99679756 658.41015625]
[-35.28793716 653.75573730]
[-48.70104218 646.97418213]
[-60.92169189 638.22454834]
[-71.66342163 627.71191406]
[-80.67441559 615.68267822]
[-87.74346161 602.41888428]
[-92.70483398 588.23138428]
[-95.44224548 573.45275879]
[-95.89151764 558.42950439]
[-94.04212189 543.51373291]
[-89.93740845 529.05511475]
[-83.67360687 515.39257812]
[-75.39753723 502.84637451]
[-65.30320740 491.71060181]
[-53.62724686 482.24633789]
[-40.64335251 474.67541504]
[-26.65588570 469.17532349]
[-11.99273396 465.87493896]
[3.00237846 464.85168457]
[17.97794342 466.12951660]
[21.51761627 451.55316162]
[25.05728912 436.97677612]
[20.54186058 422.78311157]
[31.31718636 411.19851685]
[34.85685730 396.62213135]
[38.39653015 382.04577637]
[41.93620300 367.46939087]
[45.47587585 352.89300537]
[49.01554871 338.31665039]
[52.55522156 323.74026489]
[56.09489441 309.16387939]
[59.30816650 294.51208496]
[62.19343948 279.79220581]
[65.07871246 265.07232666]
[67.96398163 250.35243225]
[70.84925842 235.63253784]
[73.73452759 220.91264343]
[76.29035950 206.13198853]
[78.51548004 191.29794312]
[72.75176239 177.56372070]
[82.45059204 165.06399536]
[84.67570496 150.22994995]
[86.90082550 135.39590454]
[89.12594604 120.56186676]
[87.00944519 113.48074341]
[91.49620056 105.52418518]
[89.59895325 97.69009399]
[94.09008789 90.52346039]
[96.75588226 75.76224518]
[99.42167664 61.00102997]
[102.08747101 46.23981094]
[104.75327301 31.47859383]
[105.86891937 16.52014160]
[105.42230988 1.52679110]
[104.97570801 -13.46655846]
[104.52909851 -28.45990944]
[104.08249664 -43.45325851]
[103.63588715 -58.44660950]
[95.49113464 -72.01029205]
[102.84606934 -84.96229553]
[102.39945984 -99.95564270]
[101.95285797 -114.94898987]
[101.50624847 -129.94233704]
[101.05964661 -144.93569946]
[100.61303711 -159.92904663]
[100.16643524 -174.92239380]
[96.78290558 -183.40705872]
[99.82646942 -190.14193726]
[99.60314178 -205.14027405]
[99.37981415 -220.13861084]
[99.15648651 -235.13694763]
[98.93315887 -250.13528442]
[84.85302734 -255.79438782]
[74.04136658 -266.38452148]
[68.12392426 -280.26968384]
[67.97376251 -295.32177734]
[73.58263397 -309.24676514]
[84.06694794 -319.93435669]
[97.80683136 -325.77770996]
[97.58350372 -340.77606201]
[94.90503693 -345.25634766]
[94.27587128 -349.85604858]
[95.39834595 -353.77462769]
[97.70015717 -356.44558716]
[98.14675903 -371.43893433]
[98.59336853 -386.43228149]
[99.03997803 -401.42562866]
[99.48657990 -416.41897583]
[85.12180328 -421.09121704]
[72.65599823 -429.62237549]
[63.09972382 -441.32083130]
[57.22765350 -455.23828125]
[55.51581192 -470.24649048]
[58.10297394 -485.12881470]
[64.77940369 -498.67877197]
[75.00388336 -509.79800415]
[87.94754791 -517.58502197]
[102.56111908 -521.40869141]
[117.65994263 -520.95892334]
[132.02001953 -516.27227783]
[144.47724915 -507.72860718]
[154.02175903 -496.02053833]
[159.87985229 -482.09719849]
[161.57661438 -467.08728027]
[158.97450256 -452.20755005]
[152.28445435 -438.66430664]
[142.04881287 -427.55535889]
[129.09733582 -419.78131104]
[114.47992706 -415.97238159]
[114.03332520 -400.97900391]
[113.58671570 -385.98565674]
[113.14011383 -370.99230957]
[112.69350433 -355.99896240]
[112.58184052 -340.99938965]
[112.80516815 -326.00103760]
[126.71293640 -320.56936646]
[137.51080322 -310.19866943]
[143.53179932 -296.44683838]
[143.82986450 -281.39697266]
[138.32844543 -267.34176636]
[127.83689117 -256.43441772]
[113.93149567 -250.35861206]
[114.15482330 -235.36027527]
[114.37815094 -220.36193848]
[114.60147858 -205.36360168]
[114.82480621 -190.36526489]
[115.15978241 -175.36900330]
[115.60639191 -160.37564087]
[116.05299377 -145.38229370]
[116.49960327 -130.38894653]
[116.94620514 -115.39559937]
[117.39281464 -100.40224457]
[117.83941650 -85.40889740]
[125.95222473 -72.91764069]
[118.62924194 -58.89321518]
[119.07584381 -43.89986420]
[119.52245331 -28.90651512]
[119.96905518 -13.91316509]
[120.41566467 1.08018517]
[120.86226654 16.07353592]
[128.09352112 2.93165803]
[139.75534058 -6.50244093]
[154.11773682 -10.82926941]
[169.05015564 -9.40696812]
[182.33744812 -2.44652629]
[192.00852966 9.01951504]
[196.62875366 23.29023743]
[195.51274109 38.24866104]
[188.82603455 51.67580032]
[177.56057739 61.57981110]
[163.38752747 66.49149323]
[148.40937805 65.68223572]
[134.84803772 59.27207565]
[124.71526337 48.21192932]
[119.51448822 34.14439011]
[116.84869385 48.90560532]
[114.18289948 63.66682434]
[111.51709747 78.42803955]
[108.85130310 93.18926239]
[106.29547119 107.96990967]
[103.95998383 122.78697968]
[101.73487091 137.62101746]
[99.50975037 152.45506287]
[97.28463745 167.28910828]
[102.88919830 182.08436584]
[93.34952545 193.52305603]
[91.12440491 208.35710144]
[93.03652954 213.21415710]
[92.90728760 217.85490417]
[91.16092682 221.53800964]
[88.45442200 223.79791260]
[85.56914520 238.51780701]
[82.68387604 253.23770142]
[79.79860687 267.95758057]
[76.91333008 282.67749023]
[74.02806091 297.39736938]
[75.72138977 302.33496094]
[75.38506317 306.96530151]
[73.47598267 310.56677246]
[70.67127228 312.70355225]
[67.13159943 327.27993774]
[63.59192276 341.85632324]
[60.05224991 356.43267822]
[56.51257706 371.00906372]
[52.97290802 385.58544922]
[49.43323517 400.16180420]
[45.89356232 414.73818970]
[50.15580750 429.97445679]
[39.63366318 440.51644897]
[36.09399033 455.09283447]
[32.55431747 469.66918945]
[46.44808960 475.40188599]
[59.30388260 483.18835449]
[70.82034302 492.84606934]
[80.72750092 504.14865112]
[88.79312897 516.83117676]
[94.82814789 530.59631348]
[98.69109344 545.12139893]
[100.29141235 560.06591797]
[99.59159088 575.07965088]
[96.60803223 589.81048584]
[91.41067505 603.91326904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 199]
[29 198]
[30 197]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 188]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 175]
[47 174]
[49 172]
[50 171]
[51 170]
[52 169]
[54 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[87 123]
[88 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
