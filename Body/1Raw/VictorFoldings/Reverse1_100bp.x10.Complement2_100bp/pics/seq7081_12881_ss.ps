%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[55.55910110 655.42895508]
[45.29378510 666.39379883]
[33.73513031 675.98547363]
[21.06543159 684.05279541]
[7.48451042 690.46856689]
[-6.79344320 695.13153076]
[-21.54324532 697.96820068]
[-36.53227234 698.93377686]
[-51.52412033 698.01306152]
[-66.28234863 695.22058105]
[-80.57420349 690.60040283]
[-94.17427826 684.22534180]
[-106.86808014 676.19598389]
[-118.45540619 666.63897705]
[-128.75350952 655.70495605]
[-137.59997559 643.56646729]
[-144.85528564 630.41491699]
[-150.40501404 616.45770264]
[-154.16162109 601.91491699]
[-156.06587219 587.01605225]
[-156.08773804 571.99597168]
[-154.22685242 557.09161377]
[-150.51258850 542.53796387]
[-145.00350952 528.56469727]
[-137.78649902 515.39202881]
[-128.97540283 503.22784424]
[-118.70915985 492.26394653]
[-107.14969635 482.67321777]
[-94.47932434 474.60693359]
[-80.89785767 468.19232178]
[-66.61951447 463.53054810]
[-51.86947250 460.69515991]
[-36.88036728 459.73083496]
[-21.88859558 460.65280151]
[-7.13059998 463.44650269]
[-2.51659083 449.17376709]
[2.09741831 434.90103149]
[6.71142769 420.62829590]
[11.32543659 406.35556030]
[15.93944645 392.08282471]
[20.34044456 377.74298096]
[24.52745628 363.33920288]
[28.71446609 348.93542480]
[32.90147781 334.53164673]
[37.08848953 320.12783813]
[41.27550125 305.72406006]
[35.56860352 297.24795532]
[35.46713638 286.81063843]
[41.24601746 277.85604858]
[51.20015717 273.47152710]
[55.81416321 259.19879150]
[60.42817307 244.92607117]
[65.04218292 230.65333557]
[69.12184906 216.21878052]
[72.66152191 201.64241028]
[76.20119476 187.06604004]
[79.30530548 172.39073181]
[81.97109985 157.62951660]
[84.63689423 142.86830139]
[87.30268860 128.10708618]
[76.45626831 119.92291260]
[70.17948151 107.87187195]
[69.69060516 94.29296875]
[75.08451843 81.82175446]
[85.31431580 72.87878418]
[98.39448547 69.19980621]
[101.27975464 54.47991562]
[104.16503143 39.76002502]
[107.05030060 25.04013252]
[109.38578796 10.22306347]
[107.29831696 1.33035409]
[111.30726624 -4.87851906]
[113.31127930 -19.74404716]
[115.31529236 -34.60957718]
[117.31931305 -49.47510529]
[111.49508667 -64.18527222]
[120.86340332 -75.76473236]
[122.86741638 -90.63026428]
[124.87142944 -105.49578857]
[119.04720306 -120.20595551]
[128.41551208 -131.78541565]
[130.41952515 -146.65095520]
[132.42353821 -161.51647949]
[134.42756653 -176.38200378]
[136.43157959 -191.24754333]
[127.12208557 -203.73637390]
[129.36619568 -218.78358459]
[141.32977295 -227.58180237]
[143.33378601 -242.44732666]
[145.33779907 -257.31286621]
[147.34181213 -272.17837524]
[149.34582520 -287.04391479]
[151.34983826 -301.90945435]
[137.04071045 -306.54498291]
[123.78932953 -313.66122437]
[112.02169037 -323.02938843]
[102.11607361 -334.34832764]
[94.39090729 -347.25421143]
[89.09451294 -361.33212280]
[86.39715576 -376.12957764]
[86.38553619 -391.17083740]
[89.06004333 -405.97241211]
[94.33468628 -420.05850220]
[102.03991699 -432.97628784]
[111.92803955 -444.31051636]
[123.68119812 -453.69683838]
[136.92156982 -460.83352661]
[151.22352600 -465.49118042]
[166.12733459 -467.52005005]
[181.15390015 -466.85491943]
[195.82015991 -463.51715088]
[209.65466309 -457.61410522]
[222.21270752 -449.33547974]
[233.09057617 -438.94741821]
[241.93859863 -426.78387451]
[248.47235107 -413.23580933]
[252.48181152 -398.73876953]
[253.83807373 -383.75878906]
[252.49754333 -368.77737427]
[248.50332642 -354.27612305]
[241.98379517 -340.72122192]
[233.14855957 -328.54837036]
[222.28160095 -318.14889526]
[209.73226929 -309.85708618]
[195.90396118 -303.93948364]
[181.24122620 -300.58633423]
[166.21537781 -299.90542603]
[164.21136475 -285.03988647]
[162.20735168 -270.17437744]
[160.20332336 -255.30883789]
[158.19931030 -240.44331360]
[156.19529724 -225.57778931]
[165.40197754 -213.92562866]
[163.58137512 -198.82131958]
[151.29710388 -189.24351501]
[149.29309082 -174.37799072]
[147.28907776 -159.51246643]
[145.28506470 -144.64694214]
[143.28105164 -129.78140259]
[149.24861145 -116.13452148]
[139.73695374 -103.49177551]
[137.73294067 -88.62625122]
[135.72892761 -73.76071930]
[141.69648743 -60.11383820]
[132.18484497 -47.47108841]
[130.18081665 -32.60556030]
[128.17680359 -17.74003410]
[126.17279816 -2.87450528]
[124.27950287 12.00552940]
[137.50489807 4.92816353]
[151.34373474 10.71490574]
[155.59455872 25.09998703]
[147.12380981 37.47925949]
[132.17581177 38.72718430]
[121.77019501 27.92540359]
[118.88491821 42.64529419]
[115.99964905 57.36518860]
[113.11437225 72.08507538]
[125.37612152 82.47053528]
[130.74960327 97.61430359]
[127.77620697 113.40566254]
[117.26306152 125.55809784]
[102.06391144 130.77287292]
[99.39810944 145.53408813]
[96.73231506 160.29530334]
[94.06652069 175.05653381]
[95.67929077 179.08802795]
[95.90280914 183.02687073]
[94.93679810 186.44772339]
[93.09859467 189.03376770]
[90.77757263 190.60571289]
[87.23789978 205.18208313]
[83.69822693 219.75845337]
[97.67091370 214.30282593]
[110.72406006 221.69305420]
[113.23536682 236.48133850]
[103.35359192 247.76631165]
[88.36321259 247.22909546]
[79.31491852 235.26734924]
[74.70090485 249.54008484]
[70.08689880 263.81280518]
[65.47288513 278.08554077]
[70.57878113 297.58663940]
[55.67928314 309.91107178]
[51.49227142 324.31484985]
[47.30525970 338.71865845]
[43.11824799 353.12243652]
[38.93123627 367.52621460]
[34.74422455 381.92999268]
[35.94689560 388.43115234]
[33.98093796 393.76333618]
[30.21217918 396.69683838]
[25.59816933 410.96957397]
[20.98416138 425.24230957]
[16.37015152 439.51504517]
[11.75614262 453.78778076]
[7.14213324 468.06051636]
[20.74274254 474.43441772]
[33.43721771 482.46270752]
[45.02534866 492.01876831]
[55.32437515 502.95190430]
[64.17186737 515.08966064]
[71.42828369 528.24060059]
[76.97917938 542.19738770]
[80.73701477 556.73980713]
[82.64251709 571.63848877]
[82.66564178 586.65856934]
[80.80601501 601.56311035]
[77.09297180 616.11706543]
[71.58507538 630.09082031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[50 182]
[51 181]
[52 180]
[53 179]
[54 173]
[55 172]
[56 171]
[57 166]
[58 165]
[59 164]
[60 163]
[66 158]
[67 157]
[68 156]
[69 155]
[70 149]
[72 148]
[73 147]
[74 146]
[75 145]
[77 143]
[78 142]
[79 141]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
