%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[159.80735779 444.65927124]
[165.41316223 430.72689819]
[172.62748718 417.55532837]
[181.34904480 405.32952881]
[191.45541382 394.22106934]
[202.80470276 384.38592529]
[194.39007568 371.96841431]
[185.97546387 359.55093384]
[177.56083679 347.13342285]
[169.14622498 334.71594238]
[160.73159790 322.29843140]
[157.35664368 321.27764893]
[154.30844116 318.57147217]
[152.37374878 314.35125732]
[152.23304749 309.13327026]
[144.38128662 296.35241699]
[136.52952576 283.57159424]
[137.89506531 298.50930786]
[135.69480896 313.34704590]
[130.05320740 327.24569702]
[121.28930664 339.41918945]
[109.89875793 349.17907715]
[96.52574158 355.97335815]
[81.92657471 359.41784668]
[66.92691040 359.31765747]
[52.37504959 355.67852783]
[39.09397125 348.70623779]
[27.83478546 338.79507446]
[19.23425484 326.50561523]
[13.77877808 312.53286743]
[11.77689171 297.66705322]
[13.34181023 282.74890137]
[18.38503075 268.62213135]
[26.62133598 256.08566284]
[37.58491898 245.84848022]
[50.65574265 238.48956299]
[65.09458160 234.42509460]
[80.08485413 233.88493347]
[94.77877808 236.89962769]
[108.34535980 243.29869080]
[120.01732635 252.72021484]
[129.13511658 264.63229370]
[126.24985504 249.91241455]
[116.20892334 238.91108704]
[121.14725494 223.88034058]
[118.26198578 209.16044617]
[115.37670898 194.44055176]
[112.49143982 179.72065735]
[109.60617065 165.00077820]
[106.17510223 150.39845276]
[102.20301056 135.93392944]
[98.23091125 121.46939850]
[94.25881958 107.00487518]
[91.21127319 104.64164734]
[89.22020721 100.94657898]
[88.85706329 96.42163086]
[90.44779205 91.80541992]
[87.12553406 77.17795563]
[83.80327606 62.55049896]
[80.48101807 47.92303848]
[76.27688599 42.82040787]
[75.41079712 37.20374298]
[77.28447723 32.81074905]
[67.03717804 20.75656128]
[72.18187714 6.77867651]
[69.29660797 -7.94121504]
[66.41133118 -22.66110611]
[62.87166214 -37.23748016]
[51.58980560 -48.32938385]
[55.46694946 -62.71051788]
[51.27993774 -77.11429596]
[47.09292603 -91.51808167]
[42.90591431 -105.92185974]
[38.71890259 -120.32564545]
[34.53189087 -134.72943115]
[22.05965805 -139.81449890]
[14.89790916 -150.99125671]
[15.47256660 -164.05845642]
[23.34999084 -174.25531006]
[19.37789536 -188.71983337]
[15.40579891 -203.18435669]
[0.39528468 -202.10237122]
[-14.53785324 -203.96989441]
[-28.81962395 -208.71511841]
[-41.90107727 -216.15567017]
[-53.27939224 -226.00555420]
[-62.51721954 -237.88615417]
[-69.25948334 -251.34083557]
[-73.24702454 -265.85241699]
[-74.32657623 -280.86309814]
[-72.45664215 -295.79592896]
[-67.70909882 -310.07693481]
[-60.26642609 -323.15716553]
[-50.41470337 -334.53390503]
[-38.53260422 -343.76980591]
[-25.07684326 -350.50988770]
[-10.56462574 -354.49508667]
[4.44623804 -355.57220459]
[19.37877083 -353.69985962]
[33.65900421 -348.95001221]
[46.73804855 -341.50521851]
[58.11317444 -331.65164185]
[67.34715271 -319.76803589]
[74.08506012 -306.31118774]
[78.06790924 -291.79833984]
[79.14260101 -276.78729248]
[77.26782990 -261.85507202]
[72.51566315 -247.57560730]
[65.06875610 -234.49777222]
[55.21335220 -223.12423706]
[43.32826614 -213.89218140]
[29.87032318 -207.15644836]
[33.84241867 -192.69192505]
[37.81451416 -178.22740173]
[52.77313995 -170.54115295]
[57.64022827 -154.09042358]
[48.93567276 -138.91644287]
[53.12268448 -124.51265717]
[57.30969620 -110.10887146]
[61.49670792 -95.70509338]
[65.68371582 -81.30130768]
[69.87072754 -66.89752960]
[80.85310364 -56.83588028]
[77.27544403 -41.42449188]
[85.43015289 -54.01420212]
[100.06921387 -57.28493881]
[112.80672455 -49.36307144]
[116.34604645 -34.78661346]
[108.65969849 -21.90561485]
[94.15077209 -18.09889984]
[81.13122559 -25.54637909]
[84.01649475 -10.82648754]
[86.90177155 3.89340401]
[96.94269562 14.89472675]
[92.00436401 29.92547798]
[95.10847473 44.60078049]
[98.43073273 59.22824097]
[101.75299072 73.85569763]
[105.07525635 88.48316193]
[108.72334290 103.03278351]
[112.69543457 117.49730682]
[116.66753387 131.96182251]
[120.63963318 146.42634583]
[130.21452332 134.87986755]
[145.21392822 135.01396179]
[154.58082581 146.72981262]
[151.41030884 161.39091492]
[138.03955078 168.18965149]
[124.32605743 162.11549377]
[127.21133423 176.83538818]
[130.09660339 191.55528259]
[132.98187256 206.27517700]
[135.86714172 220.99505615]
[146.11444092 233.04925537]
[140.96974182 247.02713013]
[143.85501099 261.74703979]
[149.31037903 275.71981812]
[157.16212463 288.50067139]
[165.01388550 301.28152466]
[173.14909363 313.88381958]
[181.56372070 326.30133057]
[189.97833252 338.71881104]
[198.39295959 351.13632202]
[206.80757141 363.55380249]
[215.22219849 375.97131348]
[228.56315613 369.07528687]
[242.62611389 363.80560303]
[257.21362305 360.23620605]
[272.12094116 358.41720581]
[287.13873291 358.37417603]
[302.05621338 360.10766602]
[316.66397095 363.59335327]
[330.75689697 368.78234863]
[344.13717651 375.60174561]
[356.61697388 383.95587158]
[368.02108765 393.72738647]
[378.18942261 404.77917480]
[386.97918701 416.95602417]
[394.26705933 430.08703613]
[399.95068359 443.98785400]
[403.95028687 458.46334839]
[406.20971680 473.31027222]
[406.69726562 488.32022095]
[405.40606689 503.28247070]
[402.35424805 517.98699951]
[397.58468628 532.22735596]
[391.16430664 545.80358887]
[383.18322754 558.52520752]
[373.75354004 570.21356201]
[363.00756836 580.70452881]
[351.09622192 589.85089111]
[338.18667603 597.52423096]
[324.46017456 603.61682129]
[310.10940552 608.04309082]
[295.33587646 610.74096680]
[280.34692383 611.67260742]
[265.35299683 610.82482910]
[250.56459045 608.20959473]
[236.18931580 603.86358643]
[222.42895508 597.84783936]
[209.47671509 590.24682617]
[197.51438904 581.16723633]
[186.70994568 570.73651123]
[177.21502686 559.10107422]
[169.16294861 546.42431641]
[162.66674805 532.88415527]
[157.81761169 518.67071533]
[154.68363953 503.98348999]
[153.30879211 489.02868652]
[153.71238708 474.01623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[15 159]
[16 158]
[17 157]
[42 156]
[43 155]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 143]
[51 142]
[52 141]
[53 140]
[57 139]
[58 138]
[59 137]
[60 136]
[63 135]
[65 133]
[66 132]
[67 131]
[68 124]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
