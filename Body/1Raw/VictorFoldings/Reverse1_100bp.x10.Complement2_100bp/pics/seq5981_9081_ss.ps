%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[25.32169724 544.94158936]
[27.68118477 559.78845215]
[27.62837982 574.82153320]
[25.16464615 589.65142822]
[20.35380363 603.89404297]
[13.32046318 617.18041992]
[4.24680614 629.16644287]
[-6.63213921 639.54168701]
[-19.03458214 648.03729248]
[-32.63926697 654.43328857]
[-47.09380341 658.56396484]
[-62.02378082 660.32232666]
[-77.04248047 659.66290283]
[-91.76087952 656.60266113]
[-105.79772949 651.22094727]
[-118.78945923 643.65716553]
[-130.39953613 634.10717773]
[-140.32723999 622.81835938]
[-148.31541443 610.08319092]
[-154.15713501 596.23144531]
[-157.70111084 581.62194824]
[-158.85554504 566.63317871]
[-157.59051514 551.65332031]
[-153.93879700 537.07043457]
[-147.99496460 523.26220703]
[-139.91300964 510.58633423]
[-129.90225220 499.37112427]
[-118.22200012 489.90710449]
[-105.17479706 482.43939209]
[-91.09859467 477.16143799]
[-76.35800934 474.20993042]
[-61.33485413 473.66134644]
[-46.41826248 475.52990723]
[-31.99461174 479.76718140]
[-25.51511574 466.23883057]
[-19.03562164 452.71047974]
[-12.55612469 439.18212891]
[-6.07662916 425.65377808]
[0.40286684 412.12545776]
[6.88236284 398.59710693]
[12.44158840 384.66531372]
[17.05559731 370.39257812]
[12.46206093 353.45544434]
[26.23030090 341.22772217]
[30.63129997 326.88787842]
[35.03229904 312.54803467]
[39.43329620 298.20819092]
[43.83429337 283.86831665]
[48.23529053 269.52847290]
[44.57269287 255.09121704]
[56.01844025 244.16851807]
[60.09810638 229.73396301]
[63.85440826 215.21189880]
[67.61071014 200.68984985]
[62.01720047 184.05615234]
[75.03322601 171.03062439]
[78.57289886 156.45423889]
[82.11256409 141.87786865]
[85.65223694 127.30149078]
[73.86646271 116.37887573]
[69.17453766 101.01027679]
[72.85009003 85.36743927]
[83.89538574 73.69655609]
[99.31223297 69.16565704]
[102.63449097 54.53819656]
[98.14587402 39.36708069]
[108.50989532 28.66959000]
[111.83215332 14.04212952]
[115.15441132 -0.58533108]
[118.47666931 -15.21279144]
[121.79893494 -29.84025192]
[124.79370880 -44.53825378]
[127.45950317 -59.29947281]
[122.29793549 -74.25503540]
[132.17395020 -85.40463257]
[134.83975220 -100.16584778]
[126.09719849 -113.05792236]
[129.01097107 -127.98992157]
[141.35546875 -136.24516296]
[144.02127075 -151.00637817]
[146.68705750 -165.76759338]
[149.35285950 -180.52880859]
[152.01866150 -195.29002380]
[143.27610779 -208.18209839]
[146.18988037 -223.11408997]
[158.53437805 -231.36933899]
[161.20018005 -246.13055420]
[163.86596680 -260.89175415]
[166.53176880 -275.65298462]
[152.24794006 -280.30981445]
[138.73130798 -286.86834717]
[126.23364258 -295.20632935]
[114.98779297 -305.16848755]
[105.20325470 -316.56921387]
[97.06230927 -329.19613647]
[90.71661377 -342.81399536]
[86.28439331 -357.16909790]
[83.84820557 -371.99401855]
[83.45344543 -387.01260376]
[85.10746002 -401.94506836]
[88.77943420 -416.51318359]
[94.40097046 -430.44561768]
[101.86734009 -443.48275757]
[111.03945160 -455.38174438]
[121.74642181 -465.92092896]
[133.78880310 -474.90396118]
[146.94223022 -482.16351318]
[160.96170044 -487.56430054]
[175.58599854 -491.00573730]
[190.54270935 -492.42370605]
[205.55317688 -491.79180908]
[220.33779907 -489.12176514]
[234.62110901 -484.46337891]
[248.13703918 -477.90341187]
[260.63378906 -469.56405640]
[271.87857056 -459.60067749]
[281.66186523 -448.19888306]
[289.80145264 -435.57110596]
[296.14569092 -421.95257568]
[300.57635498 -407.59698486]
[303.01092529 -392.77178955]
[303.40405273 -377.75314331]
[301.74844360 -362.82089233]
[298.07489014 -348.25314331]
[292.45184326 -334.32135010]
[284.98406982 -321.28500366]
[275.81066895 -309.38702393]
[265.10253906 -298.84896851]
[253.05920410 -289.86724854]
[239.90496826 -282.60913086]
[225.88493347 -277.20986938]
[211.26025391 -273.77001953]
[196.30339050 -272.35366821]
[181.29298401 -272.98718262]
[178.62719727 -258.22598267]
[175.96139526 -243.46475220]
[173.29559326 -228.70353699]
[181.97279358 -216.65190125]
[179.47956848 -201.64395142]
[166.77987671 -192.62422180]
[164.11407471 -177.86300659]
[161.44828796 -163.10179138]
[158.78248596 -148.34057617]
[156.11668396 -133.57936096]
[164.79388428 -121.52772522]
[162.30065918 -106.51977539]
[149.60096741 -97.50005341]
[146.93516541 -82.73883820]
[152.28741455 -68.83909607]
[142.22071838 -56.63367844]
[139.55491638 -41.87245941]
[141.25418091 -38.78298187]
[141.54144287 -34.71696091]
[139.97402954 -30.34700584]
[136.42639160 -26.51799202]
[133.10412598 -11.89053154]
[129.78187561 2.73692846]
[126.45960999 17.36438942]
[123.13735199 31.99184799]
[127.86360168 46.11671448]
[117.26194763 57.86045837]
[113.93968964 72.48791504]
[124.40985107 81.14824677]
[130.14227295 93.46753693]
[130.02433777 107.05471802]
[124.07892609 119.27264404]
[113.46000671 127.74991608]
[100.22861481 130.84117126]
[96.68894196 145.41754150]
[93.14926910 159.99391174]
[89.60959625 174.57029724]
[95.64141083 185.97116089]
[92.39312744 198.03898621]
[82.13276672 204.44615173]
[78.37646484 218.96820068]
[74.62016296 233.49026489]
[76.01660919 238.51988220]
[75.40527344 243.12200928]
[73.28521729 246.60343933]
[70.35828400 248.56951904]
[73.70610046 264.03247070]
[62.57513809 273.92947388]
[58.17414093 288.26931763]
[53.77314377 302.60916138]
[49.37214279 316.94903564]
[44.97114563 331.28887939]
[40.57014847 345.62872314]
[45.91267776 357.36840820]
[41.95185852 369.22149658]
[31.32833099 375.00656128]
[26.71432114 389.27929688]
[39.19516373 380.95892334]
[54.19088364 380.60061646]
[67.05489349 388.31533813]
[73.80113983 401.71267700]
[72.33922577 416.64126587]
[63.12214279 428.47534180]
[49.00590134 433.54797363]
[34.36457443 430.28738403]
[23.73493385 419.70385742]
[20.41070747 405.07659912]
[13.93121243 418.60494995]
[7.45171642 432.13327026]
[0.97222072 445.66162109]
[-5.50727510 459.18997192]
[-11.98677063 472.71832275]
[-18.46626663 486.24667358]
[-6.12381458 494.82922363]
[4.68197441 505.28057861]
[13.67120361 517.33007812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[39 202]
[40 201]
[41 191]
[42 190]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[51 180]
[52 176]
[53 175]
[54 174]
[56 171]
[57 170]
[58 169]
[59 168]
[64 162]
[65 161]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 151]
[73 150]
[75 148]
[76 147]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[86 137]
[87 136]
[88 135]
[89 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
