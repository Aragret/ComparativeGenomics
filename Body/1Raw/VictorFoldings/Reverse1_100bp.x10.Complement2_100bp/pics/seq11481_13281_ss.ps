%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[249.91949463 636.39428711]
[246.37982178 621.81793213]
[242.84014893 607.24157715]
[239.30047607 592.66516113]
[235.76080322 578.08880615]
[220.79917908 577.77423096]
[206.41777039 573.59423828]
[193.59861755 565.82806396]
[183.21865845 554.99987793]
[175.98979187 541.84375000]
[172.41004944 527.25354004]
[172.72929382 512.22235107]
[176.93176270 497.77502441]
[184.73675537 484.89797974]
[195.61735535 474.47216797]
[208.83604431 467.21255493]
[205.29637146 452.63619995]
[201.75669861 438.05981445]
[198.21702576 423.48342896]
[187.69487000 412.94143677]
[191.95712280 397.70516968]
[188.41744995 383.12878418]
[169.86701965 376.92428589]
[158.74908447 360.65551758]
[159.72212219 340.83020020]
[172.56515503 325.50711060]
[168.16415405 311.16726685]
[163.76315308 296.82739258]
[159.25552368 282.52072144]
[145.91877747 275.98873901]
[141.03619385 261.57986450]
[147.97798157 247.63536072]
[143.36396790 233.36262512]
[138.74996948 219.08988953]
[134.13595581 204.81716919]
[129.52194214 190.54443359]
[124.90793610 176.27169800]
[119.55674744 162.25866699]
[113.48291779 148.54341125]
[107.40908051 134.82814026]
[101.33525085 121.11286926]
[95.26141357 107.39760590]
[92.52144623 106.06266022]
[90.20664978 103.70125580]
[88.69814301 100.46894073]
[88.31425476 96.65988922]
[89.26142120 92.68046570]
[84.41326904 88.18524933]
[82.80455017 82.73464966]
[84.07452393 78.13071442]
[79.24852753 63.92825699]
[74.42252350 49.72579956]
[69.59652710 35.52334595]
[57.83064651 24.94626999]
[61.06177139 10.40635490]
[56.23577118 -3.79610038]
[51.40977478 -17.99855614]
[46.58377838 -32.20101166]
[40.03247070 -18.70729637]
[26.39212227 -12.46702862]
[11.89892006 -16.33317375]
[3.17895889 -28.53818512]
[4.21888828 -43.50209427]
[14.54326534 -54.38360214]
[29.43192482 -56.20783234]
[42.07910538 -48.13930130]
[38.75684738 -62.76676178]
[25.93619728 -75.98464966]
[31.77673721 -92.53321075]
[28.23706436 -107.10958862]
[24.69739151 -121.68596649]
[21.15771866 -136.26234436]
[17.61804581 -150.83871460]
[14.07837391 -165.41508484]
[-0.56912690 -169.81939697]
[-10.97673416 -180.89091492]
[-14.42231846 -195.58766174]
[-10.07801628 -209.93977356]
[0.79360425 -220.12179565]
[-2.74606824 -234.69816589]
[-13.52139378 -246.28276062]
[-9.00596619 -260.47644043]
[-12.54563808 -275.05279541]
[-16.08530998 -289.62918091]
[-31.14855957 -289.41412354]
[-45.88188934 -292.55685425]
[-59.54627609 -298.89974976]
[-71.45632172 -308.12463379]
[-81.01462555 -319.76879883]
[-87.74174500 -333.24819946]
[-91.30025482 -347.88665771]
[-91.51165009 -362.94995117]
[-88.36534119 -377.68252563]
[-82.01914215 -391.34536743]
[-72.79137421 -403.25317383]
[-61.14488983 -412.80865479]
[-47.66388321 -419.53253174]
[-33.02455521 -423.08749390]
[-17.96120262 -423.29522705]
[-3.22939992 -420.14535522]
[10.43191147 -413.79583740]
[22.33748627 -404.56518555]
[31.89014626 -392.91638184]
[38.61073303 -379.43374634]
[42.16214752 -364.79354858]
[42.36624908 -349.73016357]
[39.21279907 -334.99911499]
[32.85997772 -321.33935547]
[23.62643623 -309.43600464]
[11.97532749 -299.88616943]
[-1.50893521 -293.16885376]
[2.03073716 -278.59246826]
[5.57040977 -264.01611328]
[16.09255409 -253.47410583]
[11.83030701 -238.23783875]
[15.36997986 -223.66146851]
[29.70056534 -219.59945679]
[40.14330673 -208.83818054]
[43.82179642 -194.19798279]
[39.65100098 -179.58630371]
[28.65474892 -168.95475769]
[32.19442368 -154.37838745]
[35.73409271 -139.80201721]
[39.27376556 -125.22563934]
[42.81343842 -110.64926147]
[46.35311127 -96.07288361]
[56.51694107 -89.51367950]
[59.58519363 -77.39883423]
[53.38430786 -66.08901978]
[56.70656586 -51.46156311]
[60.78623199 -37.02700806]
[65.61222839 -22.82455444]
[70.43822479 -8.62209797]
[75.26422882 5.58035755]
[86.68492126 15.14157963]
[83.79898834 30.69734764]
[88.62498474 44.89980316]
[93.45098114 59.10226059]
[98.27697754 73.30471802]
[103.31389618 87.43374634]
[108.97667694 101.32376862]
[115.05051422 115.03903961]
[121.12435150 128.75430298]
[127.19818115 142.46957397]
[133.27201843 156.18484497]
[138.59335327 142.16044617]
[151.62257385 134.72813416]
[166.40290833 137.28584290]
[176.17697144 148.66423035]
[176.47619629 163.66123962]
[167.16378784 175.42045593]
[152.49725342 178.56571960]
[139.18066406 171.65768433]
[143.79467773 185.93041992]
[148.40869141 200.20315552]
[153.02268982 214.47589111]
[157.63670349 228.74862671]
[162.25071716 243.02134705]
[176.04161072 250.26351929]
[180.51754761 264.80383301]
[173.52825928 277.90670776]
[179.14566040 285.10968018]
[178.10299683 292.42642212]
[182.50399780 306.76626587]
[186.90499878 321.10610962]
[197.43460083 322.40539551]
[206.89791870 327.11676025]
[214.22814941 334.68060303]
[218.60845947 344.21755981]
[219.56289673 354.63049316]
[217.00807190 364.73071289]
[211.25968933 373.37380981]
[202.99382019 379.58914185]
[206.53349304 394.16549683]
[217.30882263 405.75009155]
[212.79339600 419.94375610]
[216.33306885 434.52014160]
[219.87274170 449.09652710]
[223.41241455 463.67288208]
[238.48835754 464.06152344]
[252.93875122 468.33605957]
[265.78024292 476.19937134]
[276.14062500 487.11035156]
[283.31802368 500.32104492]
[286.82843018 514.92810059]
[286.43841553 529.93438721]
[282.18057251 544.31713867]
[274.35092163 557.09759521]
[263.48825073 567.40777588]
[250.33718872 574.54913330]
[253.87686157 589.12548828]
[257.41653442 603.70190430]
[260.95620728 618.27825928]
[264.49588013 632.85461426]
[279.57507324 634.23168945]
[293.38909912 640.43261719]
[304.43951416 650.78479004]
[311.52761841 664.16528320]
[313.88455200 679.12268066]
[311.25469971 694.03448486]
[303.92327881 707.28320312]
[292.68557739 717.43176270]
[278.76055908 723.37921143]
[263.65872192 724.48052979]
[249.01815796 720.61614990]
[236.42701721 712.20532227]
[227.25108337 700.16040039]
[222.48567200 685.78790283]
[222.64770508 670.64678955]
[227.71961975 656.37951660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 190]
[16 179]
[17 178]
[18 177]
[19 176]
[21 174]
[22 173]
[26 165]
[27 164]
[28 163]
[29 161]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[47 140]
[50 139]
[51 138]
[52 137]
[53 136]
[55 134]
[56 133]
[57 132]
[58 131]
[66 130]
[67 129]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[79 116]
[80 115]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
