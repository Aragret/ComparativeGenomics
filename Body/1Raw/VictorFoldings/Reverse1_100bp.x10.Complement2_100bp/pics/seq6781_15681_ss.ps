%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[85.25363922 472.78335571]
[77.62533569 485.93164062]
[65.54304504 495.15588379]
[50.84921646 499.04943848]
[35.78455353 497.01858521]
[22.64630890 489.37298584]
[13.43797112 477.27856445]
[9.56374359 462.57965088]
[11.61441803 447.51766968]
[19.27728081 434.38949585]
[31.38380241 425.19705200]
[46.08782578 421.34216309]
[48.09183884 406.47665405]
[50.09585190 391.61111450]
[52.09986496 376.74560547]
[50.26435089 373.73507690]
[49.79581833 369.68594360]
[51.16653824 365.25033569]
[54.53966141 361.26675415]
[57.20545959 346.50552368]
[59.87125397 331.74432373]
[62.53704834 316.98309326]
[64.98278046 302.18380737]
[67.20789337 287.34976196]
[69.43301392 272.51574707]
[63.66929245 258.78152466]
[73.36812592 246.28178406]
[66.07448578 230.32026672]
[77.66476440 216.01129150]
[79.66877747 201.14576721]
[81.67279053 186.28024292]
[68.64597321 176.71914673]
[62.18118286 161.80732727]
[64.12978363 145.57711792]
[74.05395508 132.46961975]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[90.22437286 46.60097122]
[92.01560974 34.23265457]
[101.44190216 26.65165138]
[103.44591522 11.78612328]
[105.44992828 -3.07940483]
[107.45394135 -17.94493294]
[96.80442810 -26.69585419]
[91.90837860 -39.46484756]
[93.94478607 -52.87837219]
[102.27600098 -63.44884872]
[114.64188385 -68.48143768]
[116.86700439 -83.31548309]
[119.09212494 -98.14952850]
[111.95664978 -115.12500000]
[123.41578674 -128.41616821]
[125.41979980 -143.28169250]
[127.42381287 -158.14721680]
[129.42782593 -173.01275635]
[128.20085144 -187.96247864]
[123.79985046 -202.30233765]
[119.39885712 -216.64218140]
[107.95310211 -227.56488037]
[111.61570740 -242.00215149]
[107.21470642 -256.34197998]
[102.81371307 -270.68185425]
[98.41271210 -285.02169800]
[94.01171112 -299.36154175]
[89.61071777 -313.70138550]
[84.89057922 -327.93936157]
[79.85366821 -342.06838989]
[74.81674957 -356.19741821]
[69.77983093 -370.32644653]
[55.04164505 -367.39324951]
[40.03343582 -366.63726807]
[25.07510185 -368.07467651]
[10.48548317 -371.67480469]
[-3.42444420 -377.36090088]
[-16.35818672 -385.01177979]
[-28.04006386 -394.46438599]
[-38.22107315 -405.51721191]
[-46.68420792 -417.93466187]
[-53.24907303 -431.45208740]
[-57.77573776 -445.78131104]
[-60.16772079 -460.61697388]
[-60.37403107 -475.64279175]
[-58.39027405 -490.53851318]
[-54.25873566 -504.98663330]
[-48.06747437 -518.67919922]
[-39.94846344 -531.32434082]
[-30.07475662 -542.65252686]
[-18.65681267 -552.42230225]
[-5.93800688 -560.42541504]
[7.81056023 -566.49127197]
[22.29583549 -570.49060059]
[37.20906448 -572.33813477]
[52.23237228 -571.99450684]
[67.04553986 -569.46704102]
[81.33280945 -564.80963135]
[94.78966522 -558.12152100]
[107.12926483 -549.54522705]
[118.08858490 -539.26367188]
[127.43402863 -527.49591064]
[134.96640015 -514.49273682]
[140.52514648 -500.53146362]
[143.99179077 -485.90954590]
[145.29243469 -470.93869019]
[144.39933777 -455.93801880]
[141.33155823 -441.22726440]
[136.15447998 -427.11996460]
[128.97845459 -413.91683960]
[119.95643616 -401.89932251]
[109.28072357 -391.32354736]
[97.17888641 -382.41491699]
[83.90885925 -375.36337280]
[88.94577789 -361.23434448]
[93.98269653 -347.10531616]
[99.01960754 -332.97628784]
[102.03141022 -331.14288330]
[104.30480957 -327.75958252]
[105.12102509 -323.18933105]
[103.95056152 -318.10238647]
[108.35156250 -303.76254272]
[112.75255585 -289.42269897]
[117.15355682 -275.08282471]
[121.55455780 -260.74298096]
[125.95555115 -246.40313721]
[137.08651733 -236.50611877]
[133.73870850 -221.04318237]
[138.13969421 -206.70332336]
[142.54069519 -192.36347961]
[144.94660950 -207.16928101]
[150.24468994 -221.20246887]
[158.22395325 -233.90409851]
[168.56655884 -244.76828003]
[180.86058044 -253.36228943]
[194.61633301 -259.34384155]
[209.28596497 -262.47470093]
[224.28515625 -262.63012695]
[239.01651001 -259.80398560]
[252.89328003 -254.10877991]
[265.36276245 -245.77140808]
[275.92831421 -235.12388611]
[284.16906738 -222.59034729]
[289.75683594 -208.66998291]
[292.46908569 -193.91722107]
[292.19772339 -178.91967773]
[288.95361328 -164.27468872]
[282.86593628 -150.56556702]
[274.17715454 -138.33833313]
[263.23336792 -128.07998657]
[250.47044373 -120.19913483]
[236.39674377 -115.00965118]
[221.57278442 -112.71823883]
[206.58903503 -113.41616058]
[192.04226685 -117.07562256]
[178.51188660 -123.55086517]
[166.53680420 -132.58398438]
[156.59396362 -143.81518555]
[149.07940674 -156.79714966]
[144.29335022 -171.00874329]
[142.28933716 -156.14320374]
[140.28532410 -141.27767944]
[138.28131104 -126.41215515]
[145.36360168 -116.60563660]
[143.81568909 -104.20452118]
[133.92616272 -95.92440796]
[131.70104980 -81.09037018]
[129.47593689 -66.25632477]
[141.54103088 -55.12479782]
[144.62463379 -38.83206558]
[137.31687927 -23.76230240]
[122.31947327 -15.94091892]
[120.31546021 -1.07539105]
[118.31144714 13.79013729]
[116.30742645 28.65566444]
[123.83790588 44.50681305]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[115.83121490 135.69355774]
[122.92395782 147.67309570]
[124.15735626 161.47370911]
[119.34750366 174.39710999]
[109.48647308 183.94114685]
[96.53832245 188.28425598]
[94.53430939 203.14978027]
[92.53029633 218.01530457]
[99.71546936 228.72680664]
[97.74028015 241.06707764]
[88.20216370 248.50689697]
[93.80673218 263.30215454]
[84.26705170 274.74084473]
[82.04193878 289.57489014]
[79.81681824 304.40893555]
[81.87727356 310.69113159]
[80.64131927 316.23815918]
[77.29826355 319.64889526]
[74.63246918 334.41009521]
[71.96667480 349.17132568]
[69.30088043 363.93252563]
[66.96539307 378.74960327]
[64.96138000 393.61514282]
[62.95736694 408.48065186]
[60.95335388 423.34619141]
[74.11166382 430.95718384]
[83.35179138 443.02734375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 198]
[24 197]
[25 196]
[27 194]
[29 191]
[30 190]
[31 189]
[36 183]
[37 182]
[39 180]
[40 179]
[41 178]
[44 176]
[45 175]
[46 174]
[47 173]
[52 169]
[53 168]
[54 167]
[56 164]
[57 163]
[58 162]
[59 161]
[60 131]
[61 130]
[62 129]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 118]
[71 117]
[72 116]
[73 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
