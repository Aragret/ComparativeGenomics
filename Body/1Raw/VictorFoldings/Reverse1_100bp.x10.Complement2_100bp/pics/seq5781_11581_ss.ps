%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[9.75632763 539.79559326]
[13.84240913 554.26666260]
[15.42392445 569.22015381]
[14.45536900 584.22583008]
[10.96461201 598.85192871]
[5.05208778 612.67761230]
[-3.11208797 625.30517578]
[-13.29301548 636.37115479]
[-25.19776917 645.55731201]
[-38.48382568 652.59918213]
[-52.76891708 657.29431152]
[-67.64203644 659.50756836]
[-82.67525482 659.17523193]
[-97.43602753 656.30682373]
[-111.49966431 650.98498535]
[-124.46153259 643.36279297]
[-135.94868469 633.65954590]
[-145.63061523 622.15435791]
[-153.22874451 609.17840576]
[-158.52449036 595.10491943]
[-161.36544800 580.33880615]
[-161.66989136 565.30499268]
[-159.42907715 550.43603516]
[-154.70744324 536.15966797]
[-147.64088440 522.88671875]
[-138.43267822 510.99902344]
[-127.34778595 500.83865356]
[-114.70513153 492.69793701]
[-100.86847687 486.81106567]
[-86.23593140 483.34747314]
[-71.22850037 482.40676880]
[-56.27796936 484.01602173]
[-41.81450653 488.12896729]
[-35.33501053 474.60061646]
[-28.85551453 461.07226562]
[-22.37601852 447.54394531]
[-15.89652252 434.01559448]
[-9.41702652 420.48724365]
[-3.13966608 406.86392212]
[2.93416786 393.14865112]
[9.00800228 379.43338013]
[14.14996147 365.34225464]
[18.33697319 350.93847656]
[22.52398491 336.53469849]
[21.37250710 329.23428345]
[26.88204193 321.94848633]
[23.21944237 307.51123047]
[34.66519165 296.58853149]
[39.06618881 282.24868774]
[31.88259125 269.25131226]
[36.14155197 254.64596558]
[49.82308960 247.19927979]
[54.22409058 232.85943604]
[58.62508774 218.51957703]
[54.96248627 204.08232117]
[66.40823364 193.15962219]
[70.59524536 178.75582886]
[74.56734467 164.29130554]
[78.53943634 149.82678223]
[74.44860840 135.50497437]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.83570099 57.28787994]
[107.59200287 42.76582336]
[111.34830475 28.24376297]
[98.96045685 36.70196152]
[83.96393585 36.37868118]
[71.95208740 27.39450455]
[67.40502930 13.10030079]
[72.01869965 -1.17254233]
[84.07231140 -10.10060787]
[99.07017517 -10.35394859]
[111.41844940 -1.83807397]
[116.51157379 12.27197266]
[121.96693420 -1.70082521]
[127.42229462 -15.67362309]
[132.87765503 -29.64642143]
[138.33300781 -43.61921692]
[143.47496033 -57.71036148]
[148.19509888 -71.94834900]
[152.80911255 -86.22108459]
[157.42311096 -100.49381256]
[162.03712463 -114.76654816]
[166.65113831 -129.03927612]
[170.62322998 -143.50379944]
[173.94549561 -158.13127136]
[175.72795105 -173.02497864]
[175.95127869 -188.02331543]
[176.17460632 -203.02165222]
[168.64363098 -216.93550110]
[176.56956482 -229.54615784]
[176.79289246 -244.54449463]
[173.91160583 -250.49510193]
[174.39538574 -256.15753174]
[177.25279236 -259.98431396]
[177.92259216 -274.96936035]
[178.59237671 -289.95437622]
[164.95170593 -296.72579956]
[155.24952698 -308.46411133]
[151.16680908 -323.13555908]
[153.41087341 -338.19821167]
[161.59295654 -351.04241943]
[174.29545593 -359.44281006]
[189.31756592 -361.94396973]
[204.05664062 -358.11257935]
[215.95903015 -348.61242676]
[222.96258545 -335.08947754]
[223.85389709 -319.88665771]
[218.47851562 -305.63796997]
[207.76779175 -294.81207275]
[193.57740784 -289.28460693]
[192.90762329 -274.29956055]
[192.23783875 -259.31451416]
[191.79122925 -244.32116699]
[191.56790161 -229.32283020]
[199.11485291 -216.48178101]
[191.17294312 -202.79832458]
[190.94961548 -187.79998779]
[190.72628784 -172.80165100]
[198.53715515 -185.60752869]
[210.60858154 -194.51148987]
[225.14987183 -198.19268799]
[240.00387573 -196.10504150]
[252.96711731 -188.55822754]
[262.11657715 -176.67179871]
[266.09497070 -162.20899963]
[264.31213379 -147.31532288]
[257.03256226 -134.20016479]
[245.33609009 -124.80905914]
[230.95785522 -120.53513336]
[216.03077698 -122.01239777]
[202.76919556 -129.02169800]
[193.14039612 -140.52326965]
[188.57295227 -154.80900574]
[185.25068665 -140.18154907]
[198.48715210 -147.23817444]
[212.87609863 -143.00047302]
[220.17489624 -129.89599609]
[216.20245361 -115.43156433]
[203.23437500 -107.89307404]
[188.69935608 -111.59891510]
[180.92387390 -124.42527008]
[176.30986023 -110.15254211]
[171.69584656 -95.87980652]
[167.08184814 -81.60707092]
[162.46783447 -67.33434296]
[163.40144348 -60.00288773]
[157.67741394 -52.88436127]
[158.89958191 -49.57699585]
[158.58050537 -45.51334763]
[156.38218689 -41.42425156]
[152.30580139 -38.16386032]
[146.85044861 -24.19106293]
[141.39509583 -10.21826649]
[135.93972778 3.75453186]
[130.48437500 17.72732925]
[125.87036896 32.00006485]
[122.11406708 46.52212143]
[118.35776520 61.04418182]
[119.72608948 68.30706787]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[103.83531952 143.57484436]
[93.00395966 153.79888916]
[89.03186798 168.26341248]
[85.05976868 182.72793579]
[86.35910034 189.21046448]
[84.47274780 194.57131958]
[80.74808502 197.56060791]
[84.09589386 213.02355957]
[72.96493530 222.92057800]
[68.56393433 237.26042175]
[64.16294098 251.60028076]
[71.31156158 265.43988037]
[66.64405060 279.91983032]
[53.40603638 286.64965820]
[49.00503922 300.98953247]
[52.35284805 316.45245361]
[41.22188950 326.34948730]
[36.92776489 340.72171021]
[32.74075317 355.12548828]
[28.55374336 369.52926636]
[40.78132248 360.84097290]
[55.75972748 360.03631592]
[68.84773254 367.36462402]
[75.98987579 380.55514526]
[74.97309113 395.52066040]
[66.11243439 407.62390137]
[52.15348434 413.11459351]
[37.42156601 410.29138184]
[26.48152924 400.02902222]
[22.72326851 385.50723267]
[16.64943504 399.22250366]
[10.57560062 412.93774414]
[10.89892769 419.54132080]
[8.23821259 424.56301880]
[4.11131907 426.96673584]
[-2.36817694 440.49508667]
[-8.84767246 454.02343750]
[-15.32716846 467.55178833]
[-21.80666542 481.08010864]
[-28.28615952 494.60845947]
[-16.01563263 503.29995728]
[-5.39059687 513.94030762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 208]
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[39 200]
[40 199]
[41 198]
[42 188]
[43 187]
[44 186]
[46 185]
[48 183]
[49 182]
[52 179]
[53 178]
[54 177]
[56 175]
[57 172]
[58 171]
[59 170]
[61 168]
[62 167]
[64 165]
[65 164]
[66 162]
[67 161]
[68 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 151]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 138]
[89 137]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
