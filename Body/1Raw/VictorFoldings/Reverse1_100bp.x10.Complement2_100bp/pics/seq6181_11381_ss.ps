%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[112.22499847 652.62573242]
[101.40147400 642.19268799]
[92.39178467 630.15850830]
[85.42931366 616.83483887]
[80.69440460 602.56683350]
[78.30970001 587.72399902]
[78.33696747 572.69085693]
[80.77550507 557.85675049]
[85.56214142 543.60601807]
[92.57290649 530.30767822]
[101.62618256 518.30627441]
[112.48748779 507.91259766]
[124.87548065 499.39593506]
[138.46928406 492.97683716]
[152.91677856 488.82159424]
[151.13432312 473.92788696]
[141.93943787 462.21020508]
[147.98202515 447.58837891]
[146.19956970 432.69467163]
[144.41709900 417.80096436]
[142.63462830 402.90722656]
[129.56140137 395.82000732]
[123.09169006 382.23300171]
[125.89585114 367.26672363]
[137.10449219 356.69918823]
[135.32203674 341.80548096]
[133.53956604 326.91177368]
[131.75709534 312.01803589]
[129.97463989 297.12432861]
[128.19216919 282.23062134]
[125.74644470 267.43133545]
[122.64233398 252.75604248]
[119.53822327 238.08073425]
[115.07858276 232.18722534]
[116.49885559 223.16389465]
[113.61358643 208.44400024]
[110.72830963 193.72410583]
[107.84304047 179.00421143]
[97.80211639 168.00289917]
[102.74044800 152.97213745]
[99.85517120 138.25225830]
[96.96990204 123.53236389]
[94.08462524 108.81246948]
[90.32833099 94.29041290]
[85.71431732 80.01767731]
[81.10031128 65.74494171]
[65.38217163 58.06644440]
[60.18286896 41.71767807]
[68.25431824 26.96334457]
[63.42832565 12.76088905]
[58.60232544 -1.44156659]
[53.77632904 -15.64402199]
[48.05231094 -22.76254845]
[48.98591614 -30.09399986]
[44.37190628 -44.36673355]
[39.75790024 -58.63946533]
[34.61594009 -72.73060608]
[28.95315170 -86.62063599]
[23.18711853 -100.46811676]
[17.31815720 -114.27229309]
[11.44919682 -128.07647705]
[5.58023643 -141.88064575]
[-0.59553206 -155.55032349]
[-7.07502794 -169.07865906]
[-13.55452347 -182.60700989]
[-20.03401947 -196.13536072]
[-26.61404800 -209.61509705]
[-33.29424286 -223.04547119]
[-39.97443771 -236.47584534]
[-54.25963593 -231.81205750]
[-69.07167816 -229.27801514]
[-84.09482574 -228.92770386]
[-99.00888062 -230.76861572]
[-113.49593353 -234.76150513]
[-127.24720001 -240.82124329]
[-139.96955872 -248.81869507]
[-151.39186096 -258.58337402]
[-161.27059937 -269.90716553]
[-169.39523315 -282.54870605]
[-175.59259033 -296.23849487]
[-179.73056030 -310.68478394]
[-181.72094727 -325.57962036]
[-181.52131653 -340.60552979]
[-179.13594055 -355.44223022]
[-174.61564636 -369.77349854]
[-168.05679321 -383.29382324]
[-159.59919739 -395.71505737]
[-149.42309570 -406.77239990]
[-137.74543762 -416.23019409]
[-124.81509399 -423.88684082]
[-110.90769958 -429.57913208]
[-96.31968689 -433.18576050]
[-81.36199188 -434.62979126]
[-66.35344696 -433.88052368]
[-51.61395645 -430.95385742]
[-37.45769501 -425.91220093]
[-24.18640709 -418.86303711]
[-12.08296490 -409.95660400]
[-1.40535820 -399.38275146]
[7.61882067 -387.36685181]
[14.79722023 -374.16500854]
[19.97683334 -360.05865479]
[23.04725456 -345.34844971]
[23.94303894 -330.34793091]
[22.64509201 -315.37683105]
[19.18108177 -300.75430298]
[13.62484074 -286.79199219]
[6.09480190 -273.78753662]
[-3.24853110 -262.01806641]
[-14.20600510 -251.73451233]
[-26.54405975 -243.15603638]
[-19.86386490 -229.72566223]
[-13.18367100 -216.29528809]
[-7.39027405 -211.70634460]
[-6.50567389 -202.61485291]
[-0.02617818 -189.08650208]
[6.45331764 -175.55816650]
[12.93281364 -162.02981567]
[16.11900711 -160.51968384]
[18.73204994 -157.39125061]
[20.01930618 -152.93072510]
[19.38441277 -147.74961853]
[25.25337410 -133.94543457]
[31.12233543 -120.14125824]
[36.99129486 -106.33708191]
[42.50128174 -101.41145325]
[42.84317780 -92.28342438]
[48.50596619 -78.39339447]
[56.64093399 -90.99586487]
[71.54998779 -92.64510345]
[82.24273682 -82.12535095]
[80.83687592 -67.19138336]
[68.36875916 -58.85195541]
[54.03063202 -63.25347519]
[58.64464188 -48.98074341]
[63.25865173 -34.70800781]
[67.97878265 -20.47002029]
[72.80477905 -6.26756430]
[77.63078308 7.93489122]
[82.45677948 22.13734627]
[94.69814301 26.15959740]
[102.50423431 36.65469360]
[102.84537506 49.92473984]
[95.37303925 61.13093567]
[99.98705292 75.40367126]
[104.60105896 89.67639923]
[110.52423859 75.89540100]
[123.35712433 68.12899780]
[138.31336975 69.27386475]
[149.81466675 78.90299988]
[153.57130432 93.42497253]
[148.18217468 107.42343903]
[135.65725708 115.67733002]
[120.66806793 115.10813904]
[108.80451965 105.92720032]
[111.68979645 120.64708710]
[114.57506561 135.36697388]
[117.46033478 150.08686829]
[127.70763397 162.14105225]
[122.56293488 176.11894226]
[125.44820404 190.83883667]
[128.33348083 205.55873108]
[131.21875000 220.27862549]
[134.21353149 234.97662354]
[137.31762695 249.65193176]
[140.42173767 264.32723999]
[149.49024963 252.37890625]
[164.33203125 250.20603943]
[176.44505310 259.05334473]
[178.89042664 273.85266113]
[170.26733398 286.12631226]
[155.51545715 288.84335327]
[143.08589172 280.44815063]
[144.86834717 295.34185791]
[146.65081787 310.23556519]
[148.43328857 325.12930298]
[150.21574402 340.02301025]
[151.99821472 354.91671753]
[165.38401794 362.54080200]
[171.64070129 376.42269897]
[168.55993652 391.15270996]
[157.52835083 401.12478638]
[159.31082153 416.01849365]
[161.09327698 430.91220093]
[162.87574768 445.80593872]
[172.19812012 458.58889771]
[166.02803040 472.14541626]
[167.81050110 487.03912354]
[182.83052063 487.66772461]
[197.55517578 490.69769287]
[211.60305786 496.05053711]
[224.61030579 503.58764648]
[236.23997498 513.11376953]
[246.19085693 524.38214111]
[254.20518494 537.10089111]
[260.07537842 550.94055176]
[263.64935303 565.54272461]
[264.83459473 580.52911377]
[263.60034180 595.51153564]
[259.97860718 610.10186768]
[254.06317139 623.92230225]
[246.00727844 636.61474609]
[236.01957703 647.85052490]
[224.35879517 657.33856201]
[211.32698059 664.83306885]
[197.26165771 670.13989258]
[182.52716064 673.12170410]
[167.50515747 673.70111084]
[152.58476257 671.86328125]
[138.15243530 667.65563965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 188]
[16 187]
[18 185]
[19 184]
[20 183]
[21 182]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[31 166]
[32 165]
[33 164]
[35 163]
[36 162]
[37 161]
[38 160]
[40 158]
[41 157]
[42 156]
[43 155]
[44 146]
[45 145]
[46 144]
[49 140]
[50 139]
[51 138]
[52 137]
[54 136]
[55 135]
[56 134]
[57 128]
[58 127]
[59 125]
[60 124]
[61 123]
[62 122]
[63 118]
[64 117]
[65 116]
[66 115]
[67 113]
[68 112]
[69 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
