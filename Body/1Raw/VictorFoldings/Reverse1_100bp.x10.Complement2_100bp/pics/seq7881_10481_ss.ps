%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[54.24686813 566.31341553]
[41.42057419 558.33453369]
[31.36277962 547.06433105]
[24.88882637 533.41644287]
[22.52352715 518.49725342]
[24.45862961 503.51620483]
[30.53725815 489.68771362]
[40.26665115 478.13284302]
[52.85808563 469.78823853]
[67.29083252 465.33038330]
[67.06750488 450.33203125]
[66.84417725 435.33370972]
[66.62084961 420.33535767]
[66.39752197 405.33700562]
[66.17419434 390.33868408]
[65.95086670 375.34033203]
[58.02493668 362.72967529]
[65.55591583 348.81582642]
[65.33258820 333.81750488]
[56.19228745 345.71099854]
[42.10916901 350.87487793]
[27.44704628 347.70910645]
[16.74913216 337.19461060]
[13.33029366 322.58941650]
[18.24989510 308.41912842]
[29.98354340 299.07452393]
[44.89543915 297.45117188]
[58.36497116 304.05203247]
[66.21852875 316.83206177]
[68.00099182 301.93835449]
[69.78346252 287.04464722]
[71.56592560 272.15090942]
[65.39584351 258.59439087]
[74.71820831 245.81143188]
[68.54812622 232.25491333]
[77.87049866 219.47195435]
[79.65296173 204.57823181]
[81.43542480 189.68452454]
[83.21789551 174.79080200]
[73.83876038 163.27700806]
[75.43426514 148.14726257]
[87.57458496 138.38763428]
[89.35705566 123.49391937]
[91.13951874 108.60020447]
[82.69689941 120.99868011]
[71.01240540 130.40466309]
[57.09686279 136.00445557]
[42.15409851 137.31359863]
[27.47681999 134.21885681]
[14.33475304 126.98794556]
[3.86481953 116.24641418]
[-3.02722645 102.92350769]
[-5.74515390 88.17179871]
[-4.05383539 73.26745605]
[1.90041387 59.49985504]
[11.60249138 48.06002426]
[24.21306992 39.93762970]
[38.64120865 35.83533859]
[53.63872910 36.10803604]
[67.90819550 40.73213959]
[80.21515656 49.30760956]
[89.49494171 61.09258270]
[94.94474792 75.06755066]
[96.09336853 90.02001190]
[101.96232605 76.21583557]
[107.83129120 62.41166306]
[113.70024872 48.60748291]
[119.56920624 34.80330658]
[124.50080109 20.63717270]
[128.47290039 6.17264891]
[132.44499207 -8.29187489]
[128.63827515 -23.64829063]
[139.46963501 -33.87233353]
[143.44172668 -48.33685684]
[147.41381836 -62.80138016]
[146.11450195 -69.28391266]
[148.00085449 -74.64476776]
[151.72550964 -77.63406372]
[156.12651062 -91.97390747]
[160.52751160 -106.31375885]
[164.39181519 -120.80744934]
[167.71408081 -135.43490601]
[171.03633118 -150.06237793]
[174.35859680 -164.68983459]
[164.53225708 -174.35595703]
[160.79493713 -187.51083374]
[164.01991272 -200.68919373]
[173.26095581 -210.47424316]
[186.02651978 -214.38354492]
[189.56619263 -228.95991516]
[193.10586548 -243.53628540]
[196.64553833 -258.11267090]
[182.69647217 -263.69876099]
[169.68443298 -271.21322632]
[157.87429810 -280.50311279]
[147.50651550 -291.37921143]
[138.79217529 -303.62017822]
[131.90867615 -316.97674561]
[126.99614716 -331.17703247]
[124.15462494 -345.93191528]
[123.44194794 -360.94100952]
[124.87262726 -375.89874268]
[128.41752625 -390.50061035]
[134.00448608 -404.44931030]
[141.51977539 -417.46090698]
[150.81036377 -429.27044678]
[161.68711853 -439.63757324]
[173.92861938 -448.35116577]
[187.28561401 -455.23382568]
[201.48620605 -460.14547729]
[216.24125671 -462.98608398]
[231.25039673 -463.69781494]
[246.20803833 -462.26623535]
[260.80969238 -458.72042847]
[274.75805664 -453.13259888]
[287.76916504 -445.61651611]
[299.57815552 -436.32519531]
[309.94458008 -425.44778442]
[318.65740967 -413.20574951]
[325.53927612 -399.84832764]
[330.45004272 -385.64743042]
[333.28973389 -370.89221191]
[334.00054932 -355.88302612]
[332.56802368 -340.92547607]
[329.02130127 -326.32403564]
[323.43261719 -312.37600708]
[315.91574097 -299.36535645]
[306.62368774 -287.55694580]
[295.74563599 -277.19119263]
[283.50305176 -268.47912598]
[270.14520264 -261.59808350]
[255.94401550 -256.68820190]
[241.18861389 -253.84942627]
[226.17938232 -253.13954163]
[211.22190857 -254.57299805]
[207.68223572 -239.99661255]
[204.14256287 -225.42024231]
[200.60289001 -210.84387207]
[211.62678528 -198.68032837]
[213.24452209 -182.17747498]
[204.62144470 -167.81976318]
[188.98605347 -161.36756897]
[185.66378784 -146.74011230]
[182.34153748 -132.11265564]
[179.01927185 -117.48519135]
[192.90919495 -123.14825439]
[206.07092285 -115.95318604]
[208.80212402 -101.20393372]
[199.08946228 -89.77308655]
[184.09274292 -90.08705139]
[174.86735535 -101.91275787]
[170.46635437 -87.57291412]
[166.06535339 -73.23306274]
[161.87835693 -58.82928467]
[157.90625000 -44.36476135]
[153.93415833 -29.90023613]
[158.02497864 -15.57842064]
[146.90951538 -4.31977892]
[142.93742371 10.14474487]
[138.96533203 24.60926819]
[151.06219482 15.73989677]
[166.02696228 14.71232796]
[179.22262573 21.84496689]
[186.56036377 34.92768860]
[185.76649475 49.90666580]
[177.08703613 62.14050293]
[163.21138000 67.83840942]
[148.43905640 65.23483276]
[137.34744263 55.13651276]
[133.37338257 40.67226791]
[127.50442505 54.47644424]
[121.63546753 68.28062439]
[115.76650238 82.08480072]
[109.89754486 95.88897705]
[106.03324127 110.38266754]
[104.25077057 125.27639008]
[102.46830750 140.17010498]
[111.96270752 152.51895142]
[109.94286346 167.59791565]
[98.11161041 176.57327271]
[96.32914734 191.46697998]
[94.54667664 206.36070251]
[92.76421356 221.25442505]
[98.80680084 235.87623596]
[89.61193085 247.59390259]
[95.65451813 262.21572876]
[86.45964050 273.93338013]
[84.67717743 288.82711792]
[82.89471436 303.72082520]
[81.11224365 318.61453247]
[80.33092499 333.59417725]
[80.55425262 348.59249878]
[88.49615479 362.27597046]
[80.94920349 375.11700439]
[81.17253113 390.11535645]
[81.39585876 405.11367798]
[81.61918640 420.11203003]
[81.84251404 435.11038208]
[82.06584167 450.10870361]
[82.28916931 465.10705566]
[96.84825134 469.13320923]
[109.68254852 477.09921265]
[119.75166321 488.35931396]
[126.23932648 502.00067139]
[128.61961365 516.91748047]
[126.69956207 531.90045166]
[120.63482666 545.73504639]
[110.91704559 557.29974365]
[98.33399963 565.65698242]
[83.90573883 570.12933350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[18 192]
[19 191]
[29 190]
[30 189]
[31 188]
[32 187]
[34 185]
[36 183]
[37 182]
[38 181]
[39 180]
[42 177]
[43 176]
[44 175]
[64 174]
[65 173]
[66 172]
[67 171]
[68 170]
[69 160]
[70 159]
[71 158]
[73 156]
[74 155]
[75 154]
[78 153]
[79 152]
[80 151]
[81 145]
[82 144]
[83 143]
[84 142]
[89 138]
[90 137]
[91 136]
[92 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
