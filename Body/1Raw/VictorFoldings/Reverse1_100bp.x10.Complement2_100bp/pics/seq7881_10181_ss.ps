%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[174.27752686 795.62615967]
[160.62341309 789.40612793]
[147.34667969 782.41674805]
[134.49060059 774.68084717]
[122.09712219 766.22357178]
[110.20668030 757.07257080]
[98.85805511 747.25769043]
[88.08824921 736.81091309]
[77.93241119 725.76635742]
[68.42365265 714.16003418]
[59.59299850 702.02978516]
[51.46924973 689.41516113]
[44.07890701 676.35736084]
[37.44606781 662.89892578]
[31.59237671 649.08380127]
[26.53692245 634.95703125]
[22.29619598 620.56469727]
[18.88403130 605.95373535]
[16.31155396 591.17175293]
[14.58716011 576.26708984]
[13.71647072 561.28826904]
[13.70232677 546.28417969]
[14.54477501 531.30371094]
[16.24106789 516.39581299]
[18.78567123 501.60900879]
[22.17028427 486.99163818]
[26.38386917 472.59133911]
[31.41268158 458.45504761]
[37.24031830 444.62890625]
[43.84777069 431.15802002]
[51.21348572 418.08630371]
[59.31343842 405.45639038]
[68.12120819 393.30953979]
[77.60806274 381.68527222]
[87.74306488 370.62161255]
[98.49314880 360.15454102]
[109.82325745 350.31829834]
[121.69642639 341.14489746]
[134.07392883 332.66427612]
[146.91540527 324.90411377]
[160.17895508 317.88970947]
[173.82130432 311.64395142]
[168.36595154 297.67114258]
[162.91059875 283.69836426]
[157.45523071 269.72555542]
[151.99987793 255.75276184]
[146.54452515 241.77996826]
[135.59548950 236.63746643]
[130.93618774 225.04113770]
[135.57048035 213.00427246]
[130.32377625 198.95179749]
[114.73906708 192.63075256]
[108.42372131 176.67985535]
[115.73980713 160.78977966]
[110.28444672 146.81698608]
[104.82909393 132.84419250]
[92.99285889 123.80245972]
[95.18131256 108.13334656]
[90.97885132 104.99435425]
[88.83425903 99.72425079]
[89.77836609 93.66243744]
[83.94899750 86.62992096]
[84.77334595 79.28537750]
[79.94734955 65.08292389]
[75.12135315 50.88047028]
[63.35546494 40.30339432]
[66.58659363 25.76347923]
[54.82070541 15.18640232]
[58.05183029 0.64648861]
[46.56886292 -2.43215179]
[38.08467484 -10.58809662]
[34.62678909 -21.71180916]
[36.94378662 -33.00548935]
[44.34673309 -41.68665314]
[39.94573593 -56.02650070]
[35.54473495 -70.36634827]
[31.14373779 -84.70619965]
[16.24080086 -82.71814728]
[1.21390414 -83.21031189]
[-13.52700901 -86.16925049]
[-27.57979393 -91.51425934]
[-40.56108093 -99.09951019]
[-52.11673355 -108.71807098]
[-61.93150330 -120.10755157]
[-69.73763275 -132.95722961]
[-75.32217407 -146.91654968]
[-78.53276062 -161.60470581]
[-79.28182220 -176.62098694]
[-77.54891968 -191.55574036]
[-73.38132477 -206.00154114]
[-66.89273071 -219.56428528]
[-58.26015091 -231.87397766]
[-47.71909332 -242.59478760]
[-35.55712509 -251.43426514]
[-22.10603142 -258.15124512]
[-7.73276758 -262.56250000]
[7.17055225 -264.54769897]
[22.19735336 -264.05264282]
[36.93769836 -261.09085083]
[50.98945236 -255.74313354]
[63.96928024 -248.15539551]
[75.52307892 -238.53459167]
[85.33565521 -227.14323425]
[93.13930511 -214.29205322]
[98.72115326 -200.33164978]
[101.92891693 -185.64286804]
[102.67508698 -170.62644958]
[100.93930054 -155.69203186]
[96.76892090 -141.24703979]
[90.27771759 -127.68553925]
[81.64276886 -115.37751007]
[71.09964752 -104.65872192]
[58.93597412 -95.82159424]
[45.48358536 -89.10719299]
[49.88458252 -74.76734924]
[54.28557968 -60.42750168]
[58.68658066 -46.08765411]
[75.34613037 -38.49982452]
[81.27045441 -20.84153366]
[72.25428772 -4.17950916]
[83.67498016 5.38171244]
[80.78904724 20.93748093]
[92.20973969 30.49870300]
[89.32380676 46.05447006]
[94.14980316 60.25692749]
[98.97579956 74.45938110]
[103.90739441 88.62551880]
[109.15411377 102.67798615]
[121.38055420 112.71913910]
[118.80188751 127.38883209]
[124.25724792 141.36163330]
[129.71260071 155.33442688]
[142.58877563 159.28649902]
[150.71910095 169.77973938]
[151.31253052 182.84611511]
[144.37623596 193.70509338]
[149.62295532 207.75755310]
[164.09458923 219.14408875]
[160.51731873 236.32461548]
[165.97267151 250.29740906]
[171.42803955 264.27020264]
[176.88339233 278.24301147]
[182.33874512 292.21578979]
[187.79409790 306.18859863]
[202.05943298 301.53845215]
[216.56695557 297.71026611]
[231.26937866 294.71655273]
[246.11872864 292.56707764]
[261.06655884 291.26882935]
[276.06414795 290.82604980]
[291.06253052 291.24020386]
[306.01284790 292.50988770]
[320.86627197 294.63104248]
[335.57437134 297.59667969]
[350.08917236 301.39715576]
[364.36334229 306.02008057]
[378.35034180 311.45034790]
[392.00448608 317.67028809]
[405.28128052 324.65954590]
[418.13742065 332.39538574]
[430.53097534 340.85256958]
[442.42147827 350.00344849]
[453.77020264 359.81826782]
[464.54006958 370.26492310]
[474.69601440 381.30941772]
[484.20483398 392.91567993]
[493.03558350 405.04586792]
[501.15945435 417.66040039]
[508.54989624 430.71813965]
[515.18286133 444.17651367]
[521.03662109 457.99157715]
[526.09222412 472.11831665]
[530.33300781 486.51062012]
[533.74530029 501.12158203]
[536.31793213 515.90350342]
[538.04241943 530.80816650]
[538.91320801 545.78698730]
[538.92749023 560.79113770]
[538.08514404 575.77154541]
[536.38897705 590.67950439]
[533.84448242 605.46630859]
[530.46002197 620.08367920]
[526.24652100 634.48400879]
[521.21783447 648.62036133]
[515.39031982 662.44653320]
[508.78295898 675.91748047]
[501.41732788 688.98925781]
[493.31747437 701.61920166]
[484.50979614 713.76617432]
[475.02304077 725.39050293]
[464.88812256 736.45422363]
[454.13812256 746.92138672]
[442.80810547 756.75775146]
[430.93499756 765.93121338]
[418.55755615 774.41192627]
[405.71615601 782.17218018]
[392.45266724 789.18670654]
[378.81033325 795.43255615]
[364.83370972 800.88940430]
[350.56835938 805.53942871]
[336.06079102 809.36749268]
[321.35836792 812.36114502]
[306.50900269 814.51049805]
[291.56112671 815.80859375]
[276.56356812 816.25128174]
[261.56515503 815.83703613]
[246.61488342 814.56719971]
[231.76147461 812.44592285]
[217.05339050 809.48016357]
[202.53860474 805.67956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[50 137]
[51 136]
[54 132]
[55 131]
[56 130]
[58 128]
[61 127]
[63 126]
[64 125]
[65 124]
[67 122]
[69 120]
[74 117]
[75 116]
[76 115]
[77 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
