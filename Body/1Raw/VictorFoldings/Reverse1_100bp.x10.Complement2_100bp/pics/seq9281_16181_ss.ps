%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-45.59773636 563.81738281]
[-51.84047699 578.02325439]
[-65.25792694 585.81762695]
[-80.69080353 584.20330811]
[-92.20484161 573.80108643]
[-95.37267303 558.61077881]
[-88.97618866 544.47344971]
[-75.47497559 536.82513428]
[-73.91445160 521.90649414]
[-72.35393524 506.98791504]
[-70.79341125 492.06930542]
[-69.23288727 477.15069580]
[-67.67236328 462.23208618]
[-66.11183929 447.31350708]
[-74.12985992 459.99069214]
[-84.91455841 470.41616821]
[-97.85601044 478.00027466]
[-112.22231293 482.31411743]
[-127.20098877 483.11373901]
[-141.94491577 480.35388184]
[-155.62023926 474.19067383]
[-167.45358276 464.97265625]
[-176.77569580 453.22113037]
[-183.05935669 439.60070801]
[-185.94921875 424.88171387]
[-185.28182983 409.89657593]
[-181.09495544 395.49276733]
[-173.62535095 382.48486328]
[-163.29547119 371.60858154]
[-150.68952942 363.47900391]
[-136.52044678 358.55587769]
[-121.58956146 357.11764526]
[-106.74127197 359.24563599]
[-92.81533051 364.81951904]
[-80.59931946 373.52407837]
[-70.78411102 384.86697388]
[-63.92479706 398.20675659]
[-60.40931320 412.78900146]
[-60.43659973 427.79003906]
[-53.75640488 414.35964966]
[-47.07621002 400.92929077]
[-40.39601517 387.49890137]
[-33.71582031 374.06854248]
[-27.03562737 360.63815308]
[-20.35543251 347.20779419]
[-13.87593651 333.67944336]
[-7.59857559 320.05612183]
[-1.32121480 306.43280029]
[4.95614576 292.80947876]
[11.23350620 279.18615723]
[17.51086807 265.56286621]
[23.78822708 251.93954468]
[30.06558800 238.31622314]
[36.34294891 224.69290161]
[33.79461670 207.32992554]
[48.91833496 196.82495117]
[46.99728012 182.05474854]
[59.65988922 172.56954956]
[65.73371887 158.85427856]
[71.80755615 145.13902283]
[77.88138580 131.42375183]
[83.95522308 117.70848083]
[90.02906036 103.99321747]
[93.67714691 89.44359589]
[94.79279327 74.48514557]
[95.90843964 59.52668762]
[88.09844971 49.26185608]
[89.33562469 36.82589340]
[98.41400909 28.83154488]
[99.75224304 13.89136028]
[101.09047699 -1.04882503]
[100.53226471 -16.03843498]
[98.08653259 -30.83770561]
[94.19357300 -36.18152618]
[93.66333008 -41.83978271]
[95.79515839 -46.11346436]
[93.79114532 -60.97899246]
[91.78713226 -75.84452057]
[89.78311920 -90.71004486]
[87.77910614 -105.57557678]
[85.77509308 -120.44110107]
[82.58320618 -124.57135010]
[81.41191864 -129.06372070]
[82.06078339 -133.08790588]
[84.02889252 -136.01345825]
[82.69065857 -150.95364380]
[73.31151581 -159.80770874]
[72.50447083 -172.27897644]
[80.15789795 -181.64656067]
[79.04225159 -196.60501099]
[77.92659760 -211.56346130]
[76.81095123 -226.52191162]
[75.69530487 -241.48036194]
[74.57965088 -256.43881226]
[59.92676163 -260.25610352]
[47.30865097 -268.62640381]
[38.09403229 -280.64178467]
[33.28244400 -294.99890137]
[33.39580917 -310.14044189]
[38.42182922 -324.42391968]
[47.81532288 -336.29998779]
[60.55735016 -344.48040771]
[75.26575470 -348.07785034]
[90.34507751 -346.70208740]
[104.15962982 -340.50231934]
[115.21089935 -330.15109253]
[122.30014801 -316.77120972]
[124.65836334 -301.81402588]
[122.02976227 -286.90197754]
[114.69947052 -273.65261841]
[103.46262360 -263.50314331]
[89.53810883 -257.55447388]
[90.65375519 -242.59602356]
[91.76940155 -227.63755798]
[92.88505554 -212.67910767]
[94.00070190 -197.72065735]
[95.11634827 -182.76220703]
[105.76406097 -168.81254578]
[97.63084412 -152.29187012]
[98.96907806 -137.35168457]
[100.64061737 -122.44511414]
[102.64463043 -107.57958984]
[104.64865112 -92.71405792]
[106.65266418 -77.84853363]
[108.65667725 -62.98300552]
[110.66069031 -48.11747742]
[112.88580322 -33.28343201]
[115.33153534 -18.48416138]
[120.20339966 -32.67094803]
[129.36567688 -44.54750443]
[141.85145569 -52.86047363]
[156.34306335 -56.73256683]
[171.31118774 -55.75514984]
[185.17619324 -50.03137207]
[196.47488403 -40.16528320]
[204.01486206 -27.19806862]
[207.00044250 -12.49819183]
[205.11651611 2.38303304]
[198.56193542 15.87515640]
[188.02839661 26.55432129]
[174.62753296 33.29352951]
[159.77357483 35.38158035]
[145.03410339 32.59811020]
[131.96458435 25.23687172]
[121.94429779 14.07470989]
[116.03065491 0.28940919]
[114.69242096 15.22959423]
[113.35418701 30.16977882]
[121.58494568 45.66886520]
[110.86689758 60.64233780]
[109.75124359 75.60079193]
[108.63559723 90.55924225]
[116.29839325 77.66422272]
[126.89118195 67.04383087]
[139.76622009 59.34750366]
[154.13618469 55.04588318]
[169.12236023 54.40201187]
[183.80833435 57.45526505]
[197.29603577 64.01892853]
[208.76071167 73.69163513]
[217.50128174 85.88190460]
[222.98324585 99.84428406]
[224.87139893 114.72496796]
[223.05026245 129.61401367]
[217.63121033 143.60092163]
[208.94561768 155.83041382]
[197.52461243 165.55464172]
[184.06658936 172.17897034]
[169.39451599 175.29830933]
[154.40559387 174.72192383]
[140.01640320 170.48504639]
[127.10684967 162.84675598]
[116.46634674 152.27416992]
[108.74557495 139.41377258]
[104.41666412 125.05200195]
[103.74432373 110.06704712]
[97.67048645 123.78231812]
[91.59665680 137.49758911]
[85.52281952 151.21284485]
[79.44898987 164.92811584]
[73.37515259 178.64338684]
[74.86176300 194.39459229]
[62.63360214 202.89878845]
[66.54323578 215.19013977]
[61.20196915 226.48858643]
[49.96626663 230.97027588]
[43.68890381 244.59358215]
[37.41154480 258.21688843]
[31.13418388 271.84020996]
[24.85682297 285.46353149]
[18.57946205 299.08685303]
[12.30210114 312.71017456]
[6.02474070 326.33349609]
[-0.25261998 339.95678711]
[-0.02764592 346.56445312]
[-2.76283216 351.54598999]
[-6.92505598 353.88796997]
[-13.60525036 367.31835938]
[-20.28544617 380.74871826]
[-26.96563911 394.17910767]
[-33.64583588 407.60946655]
[-40.32603073 421.03985596]
[-47.00622559 434.47024536]
[-51.19323349 448.87402344]
[-52.75375748 463.79263306]
[-54.31428146 478.71121216]
[-55.87480545 493.62982178]
[-57.43532562 508.54843140]
[-58.99584961 523.46704102]
[-60.55637360 538.38562012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[56 183]
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[64 152]
[65 151]
[66 150]
[69 148]
[70 147]
[71 146]
[72 128]
[73 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[85 120]
[86 119]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
