%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[103.05225372 422.24478149]
[88.73536682 426.90530396]
[73.76232147 428.48693848]
[58.78767395 426.92056274]
[44.46604538 422.27462769]
[31.42352486 414.75222778]
[20.23027039 404.68225098]
[11.37560177 392.50488281]
[5.24661064 378.75244141]
[2.11122775 364.02618408]
[2.10651946 348.96981812]
[5.23269129 334.24160767]
[11.35308075 320.48535156]
[20.20013046 308.30242920]
[31.38708496 298.22543335]
[44.42490005 290.69488525]
[58.74361801 286.04000854]
[73.71728516 284.46426392]
[75.27780914 269.54565430]
[76.83833313 254.62704468]
[78.39885712 239.70843506]
[68.84933472 228.33555603]
[70.21940613 213.18374634]
[82.21308136 203.24444580]
[83.77359772 188.32583618]
[85.33412170 173.40724182]
[86.89464569 158.48863220]
[88.45516968 143.57002258]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[98.72314453 40.11552811]
[97.38491058 25.17534447]
[93.19789886 10.77156258]
[89.01088715 -3.63221955]
[84.82387543 -18.03600121]
[77.94446564 -31.36543083]
[68.62957764 -43.12268066]
[59.31469727 -54.87993240]
[49.99981689 -66.63718414]
[40.68493271 -78.39443207]
[39.04513931 -63.48433685]
[28.29226112 -53.02605438]
[13.34237194 -51.80097961]
[1.03035867 -60.36919403]
[-3.01489210 -74.81343079]
[3.05605388 -88.52997589]
[16.46764183 -95.24781036]
[31.08983421 -91.89463043]
[23.04866219 -104.55715942]
[15.00748825 -117.21968079]
[6.96631575 -129.88220215]
[-1.07485723 -142.54473877]
[-9.11603069 -155.20726013]
[-17.15720367 -167.86978149]
[-25.19837570 -180.53230286]
[-33.23954773 -193.19482422]
[-46.79529953 -186.72961426]
[-61.03152466 -181.94555664]
[-75.74061584 -178.91239929]
[-90.70806885 -177.67437744]
[-105.71561432 -178.24957275]
[-120.54440308 -180.62956238]
[-134.97819519 -184.77966309]
[-148.80647278 -190.63932800]
[-161.82762146 -198.12313843]
[-173.85171509 -207.12193298]
[-184.70343018 -217.50450134]
[-194.22450256 -229.11943054]
[-202.27610779 -241.79731750]
[-208.74081421 -255.35331726]
[-213.52435303 -269.58972168]
[-216.55696106 -284.29891968]
[-217.79440308 -299.26641846]
[-217.21865845 -314.27395630]
[-214.83811951 -329.10266113]
[-210.68748474 -343.53628540]
[-204.82728577 -357.36434937]
[-197.34298706 -370.38519287]
[-188.34375000 -382.40896606]
[-177.96076965 -393.26028442]
[-166.34548950 -402.78094482]
[-153.66729736 -410.83206177]
[-140.11106873 -417.29626465]
[-125.87448120 -422.07925415]
[-111.16516876 -425.11132812]
[-96.19761658 -426.34820557]
[-81.19010925 -425.77191162]
[-66.36150360 -423.39080811]
[-51.92802811 -419.23962402]
[-38.10017776 -413.37890625]
[-25.07960129 -405.89413452]
[-13.05617523 -396.89443970]
[-2.20523739 -386.51107788]
[7.31497431 -374.89544678]
[15.36562634 -362.21691895]
[21.82931709 -348.66046143]
[26.61178780 -334.42370605]
[29.64329338 -319.71426392]
[30.87962723 -304.74667358]
[30.30275917 -289.73919678]
[27.92110252 -274.91067505]
[23.76938820 -260.47735596]
[17.90816116 -246.64971924]
[10.42289448 -233.62942505]
[1.42274654 -221.60633850]
[-8.96103477 -210.75578308]
[-20.57702446 -201.23600769]
[-12.53585148 -188.57348633]
[-4.49467802 -175.91094971]
[3.54649472 -163.24842834]
[11.58766747 -150.58590698]
[19.62884140 -137.92338562]
[27.67001343 -125.26085663]
[35.71118546 -112.59832764]
[43.75236130 -99.93580627]
[52.44218445 -87.70932007]
[61.75706482 -75.95206451]
[71.07195282 -64.19481659]
[80.38683319 -52.43756485]
[89.70171356 -40.68031311]
[86.54190826 -55.34372330]
[86.67836761 -70.34310150]
[90.10443878 -84.94660187]
[96.65294647 -98.44167328]
[106.00438690 -110.16986847]
[117.70246887 -119.55894470]
[131.17643738 -126.15078735]
[145.76884460 -129.62376404]
[160.76770020 -129.80842590]
[175.44119263 -126.69574738]
[189.07336426 -120.43762207]
[200.99905396 -111.33938599]
[210.63638306 -99.84497070]
[217.51515198 -86.51520538]
[221.29971313 -72.00048828]
[221.80540466 -57.00901031]
[219.00755310 -42.27225113]
[213.04267883 -28.50924873]
[204.20181274 -16.39152718]
[192.91633606 -6.51033831]
[179.73687744 0.65219355]
[165.30648804 4.74659204]
[150.32928467 5.57308197]
[135.53601074 3.09133792]
[121.64846802 -2.57755089]
[109.34426880 -11.15698719]
[99.22766113 -22.22301292]
[103.41467285 -7.81923056]
[107.60168457 6.58455133]
[111.78868866 20.98833275]
[114.39842224 6.21710110]
[120.18733978 -7.62083483]
[128.87298584 -19.85029221]
[140.03155518 -29.87456512]
[153.11862183 -37.20455170]
[167.49563599 -41.48260117]
[182.46109009 -42.49998093]
[197.28480530 -40.20705032]
[211.24348450 -34.71568680]
[223.65606689 -26.29382324]
[233.91691589 -15.35238552]
[241.52537537 -2.42522717]
[246.11021423 11.85690498]
[247.44770813 26.79715538]
[245.47262573 41.66655731]
[240.28134155 55.73959351]
[232.12712097 68.32962036]
[221.40783691 78.82232666]
[208.64651489 86.70576477]
[194.46578979 91.59528351]
[179.55760193 93.25230408]
[164.64932251 91.59597778]
[150.46838379 86.70712280]
[137.70669556 78.82427979]
[126.98692322 68.33206940]
[118.83211517 55.74242783]
[113.64174652 41.67605209]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[107.19608307 138.80506897]
[103.37377167 145.13055420]
[101.81324768 160.04914856]
[100.25273132 174.96775818]
[98.69220734 189.88636780]
[97.13168335 204.80496216]
[106.80888367 217.01109314]
[105.01377106 232.11845398]
[93.31745911 241.26896667]
[91.75693512 256.18756104]
[90.19641113 271.10617065]
[88.63588715 286.02478027]
[102.95934296 290.66506958]
[116.00482178 298.18234253]
[127.20204163 308.24792480]
[136.06149292 320.42181396]
[142.19589233 334.17181396]
[145.33706665 348.89685059]
[145.34770203 363.95321655]
[142.22732544 378.68267822]
[136.11235046 392.44131470]
[127.27009583 404.62771606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 200]
[19 199]
[20 198]
[21 197]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 188]
[30 187]
[33 185]
[34 184]
[35 183]
[36 182]
[37 155]
[38 154]
[39 153]
[40 152]
[41 125]
[42 124]
[43 123]
[44 122]
[45 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
