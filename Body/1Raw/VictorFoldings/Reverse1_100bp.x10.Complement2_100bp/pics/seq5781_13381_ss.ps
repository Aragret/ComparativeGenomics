%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[151.38113403 384.24063110]
[162.11940002 373.70834351]
[174.56584167 365.26287842]
[168.49201965 351.54760742]
[162.41818237 337.83233643]
[156.14082336 324.20901489]
[149.66133118 310.68069458]
[143.18182373 297.15234375]
[136.70233154 283.62399292]
[130.22283936 270.09564209]
[123.74333954 256.56729126]
[123.26290131 271.55960083]
[118.44156647 285.76364136]
[109.69642639 297.95062256]
[97.78402710 307.06625366]
[83.73490906 312.32192993]
[68.76445770 313.26300049]
[54.16776657 309.80804443]
[41.20760345 302.25595093]
[31.00514793 291.26004028]
[24.44301224 277.77160645]
[22.08888817 262.95748901]
[24.14643097 248.09927368]
[30.43764305 234.48234558]
[40.41827011 223.28469849]
[53.22489166 215.47506714]
[67.74960327 211.72903442]
[82.73587036 212.37068176]
[96.88723755 217.34449768]
[108.97946930 226.22019958]
[117.96479034 238.22683716]
[115.51905823 223.42756653]
[105.81013489 212.13217163]
[111.19380188 197.25511169]
[108.74806976 182.45584106]
[106.30234528 167.65657043]
[103.52673340 152.91561890]
[100.42262268 138.24031067]
[97.31851196 123.56501007]
[94.21440125 108.88970947]
[90.45810699 94.36764526]
[86.05710602 80.02780151]
[74.61135864 69.10510254]
[78.27395630 54.66783524]
[73.87295532 40.32798767]
[69.47196198 25.98814011]
[65.07096100 11.64829254]
[60.35082626 -2.58969665]
[55.31391144 -16.71872520]
[50.27699661 -30.84775543]
[45.24007797 -44.97678375]
[40.20316315 -59.10581589]
[34.69292450 -45.15456772]
[22.09696198 -37.00952530]
[7.11325979 -37.70858383]
[-4.66963148 -46.99100876]
[-8.85698509 -61.39469147]
[-3.88702202 -75.54740906]
[8.38658428 -84.17055511]
[23.38608360 -84.04789734]
[35.51772308 -75.22425079]
[32.19546127 -89.85171509]
[28.87320137 -104.47917175]
[13.05630493 -106.39373779]
[-1.12489331 -113.59644318]
[-11.96411324 -125.20005035]
[-18.16424751 -139.78906250]
[-18.99257469 -155.59237671]
[-14.36729527 -170.69830322]
[-4.86521053 -183.28579712]
[8.35014439 -191.84405518]
[4.81047153 -206.42042542]
[1.27079904 -220.99679565]
[-2.26887345 -235.57318115]
[-6.54850531 -240.61264038]
[-7.49812031 -246.21578979]
[-5.69005966 -250.63619995]
[-8.79417038 -265.31149292]
[-11.89828014 -279.98681641]
[-26.90984917 -279.21264648]
[-41.85768890 -280.79650879]
[-56.37369919 -284.69931030]
[-70.10040283 -290.82501221]
[-82.69977570 -299.02270508]
[-93.86154938 -309.09054565]
[-103.31083679 -320.78060913]
[-110.81496429 -333.80499268]
[-116.18911743 -347.84295654]
[-119.30096436 -362.54882812]
[-120.07386780 -377.56048584]
[-118.48879242 -392.50817871]
[-114.58477783 -407.02386475]
[-108.45796204 -420.75006104]
[-100.25922394 -433.34875488]
[-90.19046021 -444.50970459]
[-78.49962616 -453.95803833]
[-65.47462463 -461.46109009]
[-51.43619919 -466.83407593]
[-36.73006058 -469.94470215]
[-21.71836472 -470.71636963]
[-6.77078629 -469.13006592]
[7.74457836 -465.22485352]
[21.47027397 -459.09692383]
[34.06829453 -450.89712524]
[45.22840118 -440.82745361]
[54.67576599 -429.13583374]
[62.17773819 -416.11019897]
[67.54957581 -402.07135010]
[70.65899658 -387.36495972]
[71.42942047 -372.35317993]
[69.84188080 -357.40573120]
[65.93547058 -342.89068604]
[59.80639267 -329.16549683]
[51.60557175 -316.56817627]
[41.53496933 -305.40890503]
[29.84257698 -295.96249390]
[16.81633377 -288.46157837]
[2.77702236 -283.09091187]
[5.88113260 -268.41561890]
[8.98524284 -253.74031067]
[12.30750179 -239.11285400]
[15.84717464 -224.53646851]
[19.38684654 -209.96009827]
[22.92651939 -195.38372803]
[37.03740311 -194.24513245]
[50.12664413 -188.79600525]
[60.90942764 -179.55686951]
[68.32290649 -167.42097473]
[71.63096619 -153.56793213]
[70.49729156 -139.34906006]
[65.01951599 -126.15557098]
[55.72095871 -115.28247833]
[43.50066376 -107.80142975]
[46.82292175 -93.17397308]
[50.14517975 -78.54651642]
[54.33219147 -64.14273071]
[59.36911011 -50.01370239]
[64.40602875 -35.88467026]
[69.44293976 -21.75564194]
[74.47985840 -7.62661266]
[77.49165344 -5.79319620]
[79.76505280 -2.40989780]
[80.58127594 2.16034079]
[79.41081238 7.24729443]
[83.81180573 21.58714104]
[88.21280670 35.92699051]
[92.61380005 50.26683426]
[103.74476624 60.16385651]
[100.39694977 75.62680054]
[104.79795074 89.96665192]
[112.76431274 77.25692749]
[127.35305786 73.76860046]
[140.20709229 81.49993896]
[143.96304321 96.02208710]
[136.46932983 109.01609802]
[122.01869202 113.03840637]
[108.88970947 105.78559875]
[111.99382019 120.46089935]
[115.09792328 135.13619995]
[118.20203400 149.81150818]
[121.69227600 153.69291687]
[123.19445038 158.08572388]
[122.84667969 162.14701843]
[121.10161591 165.21084595]
[123.54734039 180.01011658]
[125.99307251 194.80938721]
[135.87692261 207.16333008]
[130.31832886 220.98184204]
[132.76405334 235.78111267]
[137.27168274 250.08779907]
[143.75119019 263.61614990]
[150.23068237 277.14450073]
[156.71017456 290.67285156]
[163.18966675 304.20117188]
[169.66915894 317.72952271]
[174.89903259 321.77429199]
[176.98760986 327.05963135]
[176.13345337 331.75851440]
[182.20727539 345.47378540]
[188.28111267 359.18905640]
[202.89978027 355.64865112]
[217.91569519 354.77566528]
[232.84616089 356.59808350]
[247.21119690 361.05737305]
[260.54907227 368.01016235]
[272.43099976 377.23294067]
[282.47500610 388.42926025]
[290.35824585 401.23916626]
[295.82733154 415.25091553]
[298.70639038 430.01406860]
[298.90292358 445.05404663]
[296.41061401 459.88739014]
[291.30953979 474.03726196]
[283.76370239 487.04879761]
[274.01565552 498.50375366]
[262.37878418 508.03384399]
[249.22715759 515.33276367]
[234.98353577 520.16589355]
[220.10578918 522.37786865]
[205.07218933 521.89752197]
[190.36601257 518.74029541]
[176.45997620 513.00781250]
[163.80111694 504.88418579]
[152.79635620 494.63064575]
[143.79945374 482.57678223]
[137.09963989 469.11007690]
[132.91226196 454.66342163]
[131.37193298 439.70123291]
[132.52816772 424.70446777]
[136.34381104 410.15521240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 180]
[4 179]
[5 178]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[31 169]
[32 168]
[34 166]
[35 165]
[36 164]
[37 160]
[38 159]
[39 158]
[40 157]
[41 150]
[42 149]
[44 147]
[45 146]
[46 145]
[47 144]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[61 135]
[62 134]
[63 133]
[71 124]
[72 123]
[73 122]
[74 121]
[77 120]
[78 119]
[79 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
