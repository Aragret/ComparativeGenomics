%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[91.81061554 655.33758545]
[89.14482117 640.57635498]
[86.47902679 625.81512451]
[81.02303314 639.78771973]
[70.41302490 650.39086914]
[56.43696976 655.83789062]
[41.45008469 655.21081543]
[27.97791672 648.61529541]
[18.29076767 637.16284180]
[14.02109146 622.78332520]
[15.88840103 607.90002441]
[23.57802391 595.02099609]
[35.79412460 586.31658936]
[50.47807312 583.25360107]
[65.15536499 586.34826660]
[77.35262299 595.07910156]
[85.01493073 607.97631836]
[85.23825836 592.97796631]
[85.46158600 577.97961426]
[85.68491364 562.98126221]
[85.90824127 547.98297119]
[85.90824127 532.98297119]
[85.68491364 517.98461914]
[85.46158600 502.98626709]
[85.23825836 487.98794556]
[70.11804199 484.60482788]
[56.23559570 477.70446777]
[44.39629364 467.68258667]
[35.28808975 455.11599731]
[29.44154358 440.72961426]
[27.19891548 425.35458374]
[28.69413185 409.88021851]
[33.84479904 395.20254517]
[42.35673523 382.17251587]
[53.74075699 371.54653931]
[67.34079742 363.94274902]
[82.37172699 359.80490112]
[81.92512512 344.81155396]
[81.47851562 329.81817627]
[81.03191376 314.82482910]
[79.08642578 312.80661011]
[77.82317352 309.89614868]
[77.58598328 306.34942627]
[78.61977386 302.54211426]
[81.03191376 298.93164062]
[81.47851562 283.93826294]
[81.92512512 268.94491577]
[82.37172699 253.95158386]
[75.01679993 240.99957275]
[83.16155243 227.43589783]
[72.93301392 223.25927734]
[64.44099426 216.15007019]
[58.50197601 206.77067566]
[55.69338226 196.00276184]
[56.29748154 184.86437988]
[60.27309418 174.41369629]
[67.25796509 165.64845276]
[76.60174561 159.41079712]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[83.76078796 75.11535645]
[85.33078003 59.98294449]
[96.88955688 50.65930557]
[98.22779083 35.71912003]
[99.56602478 20.77893639]
[100.90425873 5.83875179]
[102.24249268 -9.10143280]
[103.58072662 -24.04161835]
[104.47354126 -39.01502228]
[104.92015076 -54.00837326]
[105.36675262 -69.00172424]
[103.17378998 -72.74937439]
[102.36845398 -76.61148834]
[102.81632233 -80.13779449]
[104.25057220 -82.96790314]
[106.31273651 -84.86676025]
[107.65097046 -99.80694580]
[108.98920441 -114.74713135]
[110.32743835 -129.68731689]
[111.66567230 -144.62750244]
[105.19041443 -159.06292725]
[114.03233337 -171.04916382]
[115.37056732 -185.98934937]
[116.70880127 -200.92953491]
[118.04703522 -215.86972046]
[119.16268921 -230.82817078]
[120.05550385 -245.80157471]
[120.94831848 -260.77499390]
[114.04613495 -275.01123047]
[122.52725983 -287.25540161]
[123.42007446 -302.22879028]
[124.31288910 -317.20220947]
[109.99344635 -321.95782471]
[97.39329529 -330.25833130]
[87.37154388 -341.53784180]
[80.61149597 -355.02725220]
[77.57405853 -369.80682373]
[78.46632385 -384.86889648]
[83.22746277 -399.18652344]
[91.53284454 -411.78347778]
[102.81620789 -421.80084229]
[116.30822754 -428.55569458]
[131.08898926 -431.58743286]
[146.15072632 -430.68936157]
[160.46649170 -425.92266846]
[173.06022644 -417.61242676]
[183.07327271 -406.32519531]
[189.82290649 -392.83056641]
[192.84892273 -378.04864502]
[191.94502258 -362.98724365]
[187.17283630 -348.67333984]
[178.85772705 -336.08279419]
[167.56663513 -326.07412720]
[154.06939697 -319.32971191]
[139.28630066 -316.30938721]
[138.39347839 -301.33596802]
[137.50067139 -286.36257935]
[144.46670532 -273.19732666]
[135.92172241 -259.88217163]
[135.02890015 -244.90875244]
[134.13609314 -229.93534851]
[136.57987976 -225.83206177]
[136.47193909 -220.15003967]
[132.98722839 -214.53147888]
[131.64898682 -199.59129333]
[130.31076050 -184.65110779]
[128.97251892 -169.71092224]
[135.54350281 -156.34411621]
[126.60585785 -143.28926086]
[125.26762390 -128.34907532]
[123.92938995 -113.40889740]
[122.59115601 -98.46871185]
[121.25292206 -83.52852631]
[120.36010742 -68.55511475]
[119.91349792 -53.56176758]
[119.46689606 -38.56841660]
[121.28880310 -36.43797302]
[122.37658691 -33.45748138]
[122.40225220 -29.90294075]
[121.14367676 -26.16388893]
[118.52091217 -22.70338440]
[117.18267822 -7.76319885]
[115.84444427 7.17698622]
[114.50621033 22.11717033]
[113.16797638 37.05735779]
[111.82974243 51.99753952]
[121.54752350 63.22697830]
[120.40319061 78.39751434]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[118.55837250 168.02297974]
[127.19422913 185.11585999]
[125.95288086 204.14416504]
[115.26164246 219.83496094]
[98.15489960 227.88250732]
[105.47789001 241.90692139]
[97.36508179 254.39817810]
[96.91847229 269.39154053]
[96.47187042 284.38488770]
[96.02526093 299.37823486]
[96.02526093 314.37823486]
[96.47187042 329.37158203]
[96.91847229 344.36492920]
[97.36508179 359.35827637]
[111.61631775 362.26092529]
[124.85446930 368.26559448]
[136.41410828 377.06677246]
[145.71499634 388.21850586]
[152.29125977 401.15692139]
[155.81459045 415.22879028]
[156.11082458 429.72448730]
[153.16835022 443.91384888]
[147.13867188 457.08276367]
[138.32856750 468.56939697]
[127.18445587 477.79711914]
[114.26979065 484.30377197]
[100.23659515 487.76461792]
[100.45992279 502.76293945]
[100.68325043 517.76129150]
[100.90657806 532.75964355]
[103.96376038 538.62182617]
[103.64878082 544.29614258]
[100.90657806 548.20629883]
[100.68325043 563.20458984]
[100.45992279 578.20294189]
[100.23659515 593.20129395]
[100.01326752 608.19964600]
[101.24024200 623.14935303]
[103.90603638 637.91058350]
[106.57183075 652.67181396]
[121.37348175 656.25384521]
[133.43453979 665.55175781]
[140.66535950 678.95452881]
[141.81315613 694.14013672]
[136.67906189 708.47753906]
[126.15260315 719.48272705]
[112.05754089 725.24890137]
[96.83593750 724.77716064]
[83.12502289 718.14910889]
[73.30029297 706.51318359]
[69.06394958 691.88537598]
[71.14995575 676.79998779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 188]
[23 187]
[24 186]
[25 185]
[37 172]
[38 171]
[39 170]
[40 169]
[45 168]
[46 167]
[47 166]
[48 165]
[50 163]
[59 158]
[60 157]
[61 156]
[62 155]
[64 153]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 140]
[74 139]
[75 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[86 131]
[87 130]
[88 129]
[89 128]
[90 125]
[91 124]
[92 123]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
