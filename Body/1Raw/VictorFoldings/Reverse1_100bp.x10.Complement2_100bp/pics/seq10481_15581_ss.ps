%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[91.38844299 385.54724121]
[88.87687683 400.37500000]
[83.82847595 414.54135132]
[76.39665222 427.61569214]
[66.80724335 439.20080566]
[55.35166931 448.94454956]
[42.37804794 456.55090332]
[28.28063583 461.78863525]
[13.48783207 464.49865723]
[-1.55082297 464.59854126]
[-16.37832260 462.08529663]
[-30.54407501 457.03527832]
[-43.61759949 449.60198975]
[-55.20160675 440.01126099]
[-64.94406891 428.55459595]
[-72.54892731 415.58010864]
[-77.78507996 401.48208618]
[-80.49340820 386.68899536]
[-80.59159851 371.65032959]
[-78.07667542 356.82308960]
[-73.02505493 342.65792847]
[-65.59026337 329.58523560]
[-55.99823380 318.00231934]
[-44.54044724 308.26116943]
[-31.56510162 300.65777588]
[-17.46649933 295.42321777]
[-2.67308307 292.71658325]
[12.36559391 292.62008667]
[27.19252205 295.13668823]
[32.22943878 281.00765991]
[37.26635361 266.87863159]
[42.30327225 252.74960327]
[47.34018707 238.62057495]
[52.37710571 224.49154663]
[57.09723663 210.25355530]
[61.49823761 195.91371155]
[65.89923096 181.57385254]
[70.30023193 167.23400879]
[64.91165924 156.40397644]
[68.46083832 144.42118835]
[79.56807709 137.86434937]
[84.18209076 123.59162140]
[83.24848175 116.26016998]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[93.06092072 64.33622742]
[78.44255066 60.97417450]
[69.30525970 49.07838058]
[69.82649231 34.08744049]
[79.76794434 22.85500908]
[94.58451843 20.51640129]
[107.50228119 28.14080048]
[112.61540222 42.24428558]
[118.89276123 28.62096786]
[125.17012787 14.99765205]
[131.44747925 1.37433600]
[130.19555664 -14.39725971]
[142.54898071 -22.71844864]
[148.82633972 -36.34176254]
[155.10369873 -49.96508026]
[161.38105774 -63.58839798]
[167.65841675 -77.21171570]
[163.93222046 -89.55992126]
[169.44111633 -100.77758026]
[180.74229431 -105.09149170]
[187.22178650 -118.61983490]
[193.70127869 -132.14817810]
[200.18078613 -145.67652893]
[206.55938721 -159.25273132]
[212.83674622 -172.87605286]
[219.11410522 -186.49935913]
[225.39146423 -200.12268066]
[212.22831726 -207.32768250]
[199.59361267 -215.42366028]
[187.54756165 -224.37203979]
[176.14758301 -234.13017273]
[165.44799805 -244.65155029]
[155.49978638 -255.88604736]
[146.35035706 -267.78012085]
[138.04331970 -280.27706909]
[130.61827087 -293.31735229]
[124.11057281 -306.83883667]
[118.55124664 -320.77706909]
[113.96678925 -335.06564331]
[110.37904358 -349.63647461]
[107.80511475 -364.42010498]
[106.25725555 -379.34606934]
[105.74285126 -394.34329224]
[106.26435089 -409.34024048]
[107.81927490 -424.26547241]
[110.40019989 -439.04788208]
[113.99484253 -453.61700439]
[118.58605957 -467.90341187]
[124.15197754 -481.83901978]
[130.66607666 -495.35742188]
[138.09729004 -508.39419556]
[146.41024780 -520.88720703]
[155.56529236 -532.77697754]
[165.51881409 -544.00671387]
[176.22338867 -554.52307129]
[187.62797546 -564.27575684]
[199.67826843 -573.21844482]
[212.31678772 -581.30847168]
[225.48335266 -588.50726318]
[239.11520386 -594.78045654]
[253.14735413 -600.09826660]
[267.51296997 -604.43536377]
[282.14355469 -607.77093506]
[296.96942139 -610.08923340]
[311.91992188 -611.37908936]
[326.92376709 -611.63446045]
[341.90948486 -610.85406494]
[356.80563354 -609.04168701]
[371.54129028 -606.20587158]
[386.04614258 -602.36016846]
[400.25115967 -597.52294922]
[414.08856201 -591.71722412]
[427.49246216 -584.97070312]
[440.39898682 -577.31542969]
[452.74661255 -568.78802490]
[464.47647095 -559.42901611]
[475.53271484 -549.28308105]
[485.86260986 -538.39849854]
[495.41696167 -526.82720947]
[504.15023804 -514.62432861]
[512.02081299 -501.84796143]
[518.99114990 -488.55905151]
[525.02807617 -474.82092285]
[530.10278320 -460.69903564]
[534.19110107 -446.26068115]
[537.27355957 -431.57464600]
[539.33551025 -416.71096802]
[540.36700439 -401.74044800]
[540.36328125 -386.73443604]
[539.32421875 -371.76443481]
[537.25488281 -356.90176392]
[534.16503906 -342.21731567]
[530.06945801 -327.78100586]
[524.98767090 -313.66165161]
[518.94390869 -299.92654419]
[511.96688843 -286.64111328]
[504.08993530 -273.86871338]
[495.35055542 -261.67019653]
[485.79040527 -250.10368347]
[475.45504761 -239.22430420]
[464.39373779 -229.08387756]
[452.65917969 -219.73077393]
[440.30731201 -211.20951843]
[427.39694214 -203.56076050]
[413.98965454 -196.82090759]
[400.14935303 -191.02212524]
[385.94192505 -186.19201660]
[371.43511963 -182.35360718]
[356.69805908 -179.52517700]
[341.80099487 -177.72023010]
[326.81488037 -176.94735718]
[311.81118774 -177.21023560]
[296.86132812 -178.50761414]
[282.03665161 -180.83331299]
[267.40771484 -184.17623901]
[253.04428101 -188.52047729]
[239.01478577 -193.84532166]
[232.73742676 -180.22200012]
[226.46006775 -166.59869385]
[220.18269348 -152.97537231]
[220.23849487 -145.58493042]
[213.70912170 -139.19703674]
[207.22962952 -125.66868591]
[200.75013733 -112.14034271]
[194.27064514 -98.61199188]
[196.56018066 -81.21300507]
[181.28173828 -70.93434906]
[175.00437927 -57.31103516]
[168.72700500 -43.68772125]
[162.44964600 -30.06440353]
[156.17228699 -16.44108772]
[157.87322998 -1.64392233]
[145.07080078 7.65169668]
[138.79344177 21.27501297]
[132.51608276 34.89833069]
[126.23871613 48.52164459]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.45482635 128.20562744]
[93.84081268 142.47836304]
[98.11297607 160.39009094]
[84.64008331 171.63500977]
[80.23908234 185.97485352]
[75.83808136 200.31469727]
[71.43708801 214.65455627]
[72.60755157 219.74150085]
[71.79132843 224.31173706]
[69.51792908 227.69503784]
[66.50613403 229.52845764]
[61.46921921 243.65748596]
[56.43230057 257.78652954]
[51.39538574 271.91555786]
[46.35846710 286.04458618]
[41.32155228 300.17361450]
[54.39676285 307.60394287]
[65.98294830 317.19204712]
[75.72800446 328.64651489]
[83.33580780 341.61926270]
[88.57515717 355.71609497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[34 200]
[35 196]
[36 195]
[37 194]
[38 193]
[41 191]
[42 190]
[44 189]
[46 187]
[47 186]
[48 185]
[56 184]
[57 183]
[58 182]
[59 181]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[68 173]
[69 172]
[70 171]
[71 170]
[72 168]
[73 167]
[74 166]
[75 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
