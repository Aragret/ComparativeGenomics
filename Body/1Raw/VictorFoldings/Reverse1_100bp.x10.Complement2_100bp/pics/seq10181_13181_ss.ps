%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[41.40340805 767.90093994]
[26.39525032 767.67114258]
[11.46612930 766.11584473]
[-3.26711178 763.24719238]
[-17.68916321 759.08764648]
[-31.68715096 753.66967773]
[-45.15151596 747.03582764]
[-57.97688675 739.23791504]
[-70.06288147 730.33697510]
[-81.31490326 720.40270996]
[-91.64490509 709.51287842]
[-100.97201538 697.75268555]
[-109.22325897 685.21411133]
[-116.33403778 671.99542236]
[-122.24871063 658.19995117]
[-126.92098999 643.93579102]
[-130.31430054 629.31445312]
[-132.40208435 614.45043945]
[-133.16799927 599.46008301]
[-132.60604858 584.46069336]
[-130.72065735 569.56964111]
[-127.52654266 554.90350342]
[-123.04872894 540.57708740]
[-117.32225037 526.70245361]
[-110.39192963 513.38824463]
[-102.31201172 500.73864746]
[-93.14572144 488.85266113]
[-82.96481323 477.82330322]
[-71.84896088 467.73690796]
[-59.88515854 458.67239380]
[-47.16704559 450.70074463]
[-33.79415894 443.88433838]
[-19.87116432 438.27648926]
[-5.50702715 433.92114258]
[9.18583012 430.85232544]
[24.09241486 429.09408569]
[39.09606171 428.66021729]
[39.98887634 413.68679810]
[40.88169098 398.71340942]
[41.77450562 383.73999023]
[42.66732407 368.76660156]
[30.75856400 377.88696289]
[15.87121487 376.05206299]
[6.53342628 364.31301880]
[8.09430695 349.39443970]
[19.65971375 339.84240723]
[34.60445786 341.12875366]
[44.36720657 352.51568604]
[46.59232712 337.68164062]
[48.81744385 322.84759521]
[51.04256058 308.01354980]
[53.26767731 293.17950439]
[40.59272385 301.20108032]
[25.92844391 298.04531860]
[17.67519760 285.51998901]
[20.56082344 270.80017090]
[32.93230057 262.31802368]
[47.70269012 264.93255615]
[56.41061783 277.14505005]
[59.95029068 262.56869507]
[55.43486404 248.37501526]
[66.21018982 236.79042053]
[69.74986267 222.21405029]
[73.28953552 207.63766479]
[76.82920837 193.06129456]
[72.31377411 178.86763000]
[83.08910370 167.28302002]
[86.62877655 152.70664978]
[89.07450104 137.90737915]
[82.50352478 124.54057312]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[97.63335419 42.35549164]
[98.97158813 27.41530609]
[96.62027740 18.58869171]
[100.44258881 12.26320934]
[102.00310516 -2.65539551]
[103.56362915 -17.57399940]
[97.30401611 -32.10423660]
[106.32341003 -43.95749664]
[107.21622467 -58.93090439]
[107.43955231 -73.92923737]
[107.66287994 -88.92757416]
[97.43376160 -94.10244751]
[89.90843201 -102.68207550]
[86.14529419 -113.40172577]
[86.65187836 -124.70005035]
[91.31673431 -134.94650269]
[99.43109894 -142.67665100]
[109.79627228 -146.80145264]
[102.89408875 -161.03768921]
[111.37521362 -173.28186035]
[112.26802826 -188.25526428]
[113.04934692 -203.23490906]
[113.71913910 -218.21994019]
[114.38892365 -233.20498657]
[100.48323822 -239.28744507]
[89.71656799 -249.98526001]
[83.54501343 -263.85162354]
[82.80323792 -279.01126099]
[87.59154510 -293.41390991]
[97.26236725 -305.11175537]
[110.50780487 -312.52276611]
[125.53651428 -314.64465332]
[140.31597900 -311.19042969]
[152.84742737 -302.62728882]
[161.43605042 -290.11331177]
[164.92031860 -275.34088135]
[162.82902527 -260.30789185]
[155.44499207 -247.04740906]
[143.76684570 -237.35279846]
[129.37396240 -232.53520203]
[128.70417786 -217.55015564]
[128.03439331 -202.56512451]
[130.87608337 -195.74261475]
[127.24143219 -187.36245728]
[126.34861755 -172.38903809]
[133.31466675 -159.22380066]
[124.76967621 -145.90863037]
[139.87161255 -134.89843750]
[145.32980347 -116.86688995]
[138.76544189 -99.04783630]
[122.66121674 -88.70424652]
[122.43788910 -73.70590973]
[122.21456146 -58.70757675]
[133.70419312 -68.35061646]
[148.65863037 -67.18230438]
[158.51127625 -55.87190247]
[157.61810303 -40.89852142]
[146.49075317 -30.83959007]
[131.50347900 -31.45732689]
[121.24201202 -42.39697266]
[127.61325073 -28.93381500]
[118.48223877 -16.01347733]
[116.92171478 -1.09487236]
[115.36119080 13.82373238]
[113.91177368 28.75354004]
[112.57353973 43.69372559]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[112.85660553 127.25938416]
[104.01468658 139.24562073]
[113.90928650 127.97189331]
[128.08308411 123.06236267]
[142.83108521 125.80036163]
[154.29818726 135.47018433]
[159.48692322 149.54417419]
[157.04096985 164.34339905]
[147.59970093 175.99940491]
[133.63102722 181.46531677]
[118.78633118 179.31237793]
[106.94599152 170.10334778]
[101.20515442 156.24632263]
[97.66548157 170.82269287]
[101.92772675 186.05895996]
[91.40557861 196.60096741]
[87.86590576 211.17733765]
[84.32623291 225.75372314]
[80.78656006 240.33009338]
[85.04881287 255.56636047]
[74.52666473 266.10836792]
[70.98699188 280.68472290]
[68.10172272 295.40463257]
[65.87660217 310.23867798]
[63.65148544 325.07272339]
[61.42636871 339.90676880]
[59.20125198 354.74078369]
[57.64072800 369.65939331]
[56.74791336 384.63281250]
[55.85509872 399.60620117]
[54.96228027 414.57962036]
[54.06946564 429.55303955]
[68.91524506 431.76675415]
[83.50727081 435.28387451]
[97.73135376 440.07690430]
[111.47616577 446.10830688]
[124.63412476 453.33090210]
[137.10224915 461.68814087]
[148.78297424 471.11462402]
[159.58485413 481.53656006]
[169.42337036 492.87237549]
[178.22151184 505.03341675]
[185.91043091 517.92443848]
[192.42993164 531.44451904]
[197.72900391 545.48797607]
[201.76617432 559.94476318]
[204.50984192 574.70178223]
[205.93852234 589.64355469]
[206.04104614 604.65313721]
[204.81661987 619.61303711]
[202.27479553 634.40612793]
[198.43550110 648.91674805]
[193.32878113 663.03125000]
[186.99456787 676.63916016]
[179.48248291 689.63397217]
[170.85128784 701.91406250]
[161.16854858 713.38323975]
[150.51004028 723.95178223]
[138.95918274 733.53692627]
[126.60639191 742.06372070]
[113.54832458 749.46539307]
[99.88719177 755.68402100]
[85.72991943 760.67089844]
[71.18729401 764.38702393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[59 168]
[60 167]
[62 165]
[63 164]
[64 163]
[65 162]
[67 160]
[68 159]
[69 148]
[71 146]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[79 139]
[80 138]
[81 137]
[83 135]
[84 128]
[85 127]
[86 126]
[93 122]
[95 120]
[96 119]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
