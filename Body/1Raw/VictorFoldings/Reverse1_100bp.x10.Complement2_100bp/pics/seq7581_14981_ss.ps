%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[188.40074158 353.05310059]
[186.37124634 338.18405151]
[185.44541931 323.20574951]
[185.62831116 308.19995117]
[186.91893005 293.24862671]
[189.31021118 278.43347168]
[192.78910828 263.83538818]
[197.33662415 249.53407288]
[202.92790222 235.60766602]
[209.53242493 222.13223267]
[217.11412048 209.18135071]
[225.63156128 196.82575989]
[213.94398499 187.42361450]
[202.25639343 178.02146912]
[190.56881714 168.61930847]
[178.88124084 159.21716309]
[166.65475464 150.52734375]
[153.93270874 142.58065796]
[141.21067810 134.63397217]
[128.48864746 126.68728638]
[115.76660156 118.74060059]
[103.04457092 110.79391479]
[106.50671387 125.38890076]
[99.89002991 138.85067749]
[86.21958160 145.02470398]
[71.74530029 141.08831787]
[63.08464050 128.84114075]
[64.19714355 113.88246155]
[74.57418060 103.05115509]
[89.47331238 101.29958344]
[77.64704895 92.07248688]
[65.82077789 82.84539032]
[53.99450684 73.61829376]
[60.52698517 87.12113190]
[64.04725647 101.70220184]
[64.39516449 116.69816589]
[61.55488968 131.42680359]
[55.65564346 145.21806335]
[46.96579742 157.44453430]
[35.88068390 167.55000305]
[22.90460205 175.07470703]
[8.62787724 179.67636108]
[-6.29999447 181.14558411]
[-21.19989586 179.41557312]
[-35.39397812 174.56500244]
[-48.23650742 166.81455994]
[-59.14323425 156.51683044]
[-67.61797333 144.14028931]
[-73.27518463 130.24798584]
[-75.85750580 115.47193146]
[-75.24744415 100.48434448]
[-71.47277069 85.96704865]
[-64.70519257 72.58049774]
[-55.25259781 60.93367386]
[-43.54501724 51.55643845]
[-30.11506462 44.87539291]
[-15.57371426 41.19447708]
[-0.58249998 40.68115234]
[14.17657757 43.35877228]
[28.03207779 49.10551834]
[40.35694504 57.66278839]
[33.08371353 44.54409409]
[25.81048584 31.42539978]
[18.53725624 18.30670547]
[4.59222412 23.88696671]
[-9.94225311 27.67539978]
[-24.83694458 29.61225700]
[-39.85693741 29.66699028]
[-54.76535034 27.83873940]
[-69.32704926 24.15633583]
[-83.31238556 18.67785645]
[-96.50077820 11.48970413]
[-108.68422699 2.70524883]
[-119.67059326 -7.53696728]
[-129.28660583 -19.07541084]
[-137.38058472 -31.72810173]
[-143.82490540 -45.29549026]
[-148.51791382 -59.56359863]
[-151.38560486 -74.30739594]
[-152.38273621 -89.29435730]
[-151.49359131 -104.28810883]
[-148.73219299 -119.05218506]
[-144.14208984 -133.35372925]
[-137.79568481 -146.96719360]
[-129.79306030 -159.67785645]
[-120.26042175 -171.28527832]
[-109.34812164 -181.60636902]
[-97.22826385 -190.47836304]
[-84.09199524 -197.76133728]
[-70.14649963 -203.34042358]
[-55.61170197 -207.12763977]
[-40.71684647 -209.06324768]
[-25.69684792 -209.11671448]
[-10.78859043 -207.28720093]
[3.77280092 -203.60357666]
[17.75767136 -198.12391663]
[30.94545937 -190.93466187]
[43.12817383 -182.14918518]
[54.11367798 -171.90603638]
[63.72871399 -160.36679077]
[71.82164001 -147.71340942]
[78.26481628 -134.14547729]
[82.95661926 -119.87697601]
[85.82306671 -105.13294220]
[86.81893921 -90.14589691]
[85.92853546 -75.15221405]
[83.16589355 -60.38837433]
[78.57458496 -46.08721542]
[72.22702789 -32.47428894]
[64.22332764 -19.76428986]
[54.68972015 -8.15767670]
[43.77655411 2.16250014]
[31.65595055 11.03347588]
[38.92918015 24.15217018]
[46.20240784 37.27086258]
[53.47563934 50.38955688]
[63.22160339 61.79202271]
[75.04787445 71.01911926]
[86.87414551 80.24621582]
[98.70041656 89.47331238]
[110.99124908 98.07187653]
[123.71328735 106.01856232]
[136.43531799 113.96524811]
[149.15736389 121.91193390]
[161.87939453 129.85861206]
[174.60144043 137.80529785]
[170.25683594 123.44826508]
[175.07174683 109.24205017]
[187.25033569 100.48522186]
[202.25028992 100.44386292]
[214.47697449 109.13339233]
[219.37016296 123.31284332]
[215.10481262 137.69361877]
[203.27178955 146.91204834]
[188.28338623 147.52958679]
[199.97096252 156.93173218]
[211.65855408 166.33387756]
[223.34613037 175.73603821]
[235.03370667 185.13818359]
[245.27787781 174.17167664]
[256.30398560 163.99168396]
[268.05178833 154.65379333]
[280.45715332 146.20901489]
[293.45230103 138.70346069]
[306.96627808 132.17814636]
[320.92526245 126.66869354]
[335.25299072 122.20520020]
[349.87127686 118.81204224]
[364.70019531 116.50775146]
[379.65884399 115.30490875]
[394.66543579 115.21009827]
[409.63806152 116.22382355]
[424.49493408 118.34054565]
[439.15490723 121.54872131]
[453.53793335 125.83081818]
[467.56539917 131.16343689]
[481.16073608 137.51747131]
[494.24969482 144.85821533]
[506.76077271 153.14556885]
[518.62567139 162.33425903]
[529.77947998 172.37413025]
[540.16143799 183.21031189]
[549.71472168 194.78364563]
[558.38714600 207.03089905]
[566.13146973 219.88520813]
[572.90527344 233.27635193]
[578.67163086 247.13119507]
[583.39898682 261.37405396]
[587.06158447 275.92715454]
[589.63940430 290.71099854]
[591.11828613 305.64486694]
[591.49029541 320.64715576]
[590.75329590 335.63595581]
[588.91131592 350.52938843]
[585.97448730 365.24612427]
[581.95880127 379.70574951]
[576.88616943 393.82934570]
[570.78430176 407.53973389]
[563.68658447 420.76205444]
[555.63177490 433.42407227]
[546.66375732 445.45663452]
[536.83166504 456.79400635]
[526.18902588 467.37429810]
[514.79412842 477.13973999]
[502.70916748 486.03692627]
[490.00009155 494.01733398]
[476.73635864 501.03732300]
[462.99038696 507.05859375]
[448.83728027 512.04821777]
[434.35430908 515.97900391]
[419.62057495 518.82940674]
[404.71658325 520.58392334]
[389.72372437 521.23297119]
[374.72387695 520.77294922]
[359.79895020 519.20635986]
[345.03048706 516.54187012]
[330.49914551 512.79388428]
[316.28427124 507.98303223]
[302.46353149 502.13546753]
[289.11236572 495.28317261]
[276.30374146 487.46356201]
[264.10757446 478.71936035]
[252.59051514 469.09832764]
[241.81546021 458.65298462]
[231.84123230 447.44039917]
[222.72232056 435.52178955]
[214.50854492 422.96231079]
[207.24476624 409.83047485]
[200.97062683 396.19808960]
[195.72042847 382.13952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[22 121]
[30 120]
[31 119]
[32 118]
[33 117]
[61 116]
[62 115]
[63 114]
[64 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
