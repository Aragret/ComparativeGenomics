%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[199.63960266 552.60736084]
[208.43151855 540.37963867]
[219.64678955 530.32818604]
[232.76083374 522.92309570]
[228.35983276 508.58322144]
[223.95883179 494.24337769]
[219.23870850 480.00540161]
[214.20178223 465.87637329]
[209.16487122 451.74734497]
[204.12796021 437.61831665]
[199.09103394 423.48928833]
[194.05412292 409.36026001]
[189.01721191 395.23123169]
[183.98028564 381.10220337]
[169.66204834 377.08648682]
[160.34370422 365.26986694]
[159.76342773 350.05419922]
[168.35316467 337.26660156]
[163.31623840 323.13757324]
[158.27932739 309.00854492]
[153.24241638 294.87951660]
[148.20549011 280.75048828]
[134.24392700 270.11837769]
[137.71202087 252.03375244]
[132.46530151 237.98129272]
[127.21858978 223.92881775]
[121.93403625 218.76206970]
[122.00006866 209.62786865]
[116.96315765 195.49884033]
[111.92623901 181.36981201]
[106.41600037 195.32106018]
[93.82003784 203.46609497]
[78.83633423 202.76704407]
[67.05344391 193.48461914]
[62.86609268 179.08093262]
[67.83605194 164.92820740]
[80.10965729 156.30506897]
[95.10916138 156.42773438]
[107.24079895 165.25137329]
[103.91854095 150.62391663]
[100.59627533 135.99645996]
[97.27401733 121.36899567]
[93.95175934 106.74153137]
[91.01277924 104.24458313]
[89.18869019 100.46429443]
[89.02796173 95.92764282]
[90.82322693 91.38706207]
[88.15743256 76.62584686]
[85.49163818 61.86463165]
[82.71602631 47.12366867]
[79.83075714 32.40377426]
[76.83597565 17.70577240]
[73.73187256 3.03046942]
[58.89785004 -6.24159765]
[55.42760468 -23.04255867]
[64.99022675 -36.87711716]
[61.66796875 -51.50457764]
[58.34570694 -66.13204193]
[55.02344894 -80.75949860]
[51.96187210 -83.83857727]
[50.21503830 -87.37596130]
[49.76558685 -90.90206909]
[50.44541931 -94.00116730]
[51.96636581 -96.35591888]
[49.52063751 -111.15519714]
[37.50946045 -125.11273956]
[44.32463455 -141.28433228]
[41.65883636 -156.04554749]
[38.99304199 -170.80676270]
[36.32724762 -185.56797791]
[33.66145325 -200.32920837]
[30.99565697 -215.09042358]
[28.32986069 -229.85163879]
[25.66406441 -244.61285400]
[10.67067432 -243.74360657]
[-4.31817102 -244.68800354]
[-19.08388901 -247.43225098]
[-33.41115189 -251.93635559]
[-47.09102631 -258.13461304]
[-59.92401886 -265.93664551]
[-71.72298431 -275.22866821]
[-82.31586456 -285.87518311]
[-91.54818726 -297.72091675]
[-99.28530121 -310.59317017]
[-105.41439056 -324.30416870]
[-109.84607697 -338.65399170]
[-112.51572418 -353.43338013]
[-113.38440704 -368.42678833]
[-112.43945312 -383.41561890]
[-109.69464874 -398.18121338]
[-105.19001007 -412.50833130]
[-98.99124146 -426.18795776]
[-91.18873596 -439.02066040]
[-81.89627075 -450.81927490]
[-71.24935913 -461.41177368]
[-59.40326691 -470.64364624]
[-46.53074646 -478.38027954]
[-32.81951523 -484.50885010]
[-18.46952248 -488.94000244]
[-3.69003320 -491.60910034]
[11.30342293 -492.47723389]
[26.29219818 -491.53170776]
[41.05770874 -488.78634644]
[55.38463593 -484.28118896]
[69.06404877 -478.08190918]
[81.89645386 -470.27890015]
[93.69473267 -460.98599243]
[104.28681183 -450.33868408]
[113.51824188 -438.49224854]
[121.25440216 -425.61944580]
[127.38246918 -411.90798950]
[131.81307983 -397.55783081]
[134.48161316 -382.77822876]
[135.34918213 -367.78475952]
[134.40310669 -352.79602051]
[131.65719604 -338.03060913]
[127.15148926 -323.70385742]
[120.95169830 -310.02465820]
[113.14822388 -297.19253540]
[103.85488129 -285.39462280]
[93.20717621 -274.80294800]
[81.36039734 -265.57196045]
[68.48729706 -257.83627319]
[54.77560806 -251.70872498]
[40.42528152 -247.27865601]
[43.09107971 -232.51742554]
[45.75687408 -217.75621033]
[48.42266846 -202.99499512]
[51.08846283 -188.23377991]
[53.75426102 -173.47256470]
[56.42005539 -158.71134949]
[59.08584976 -143.95013428]
[68.84124756 -136.79759216]
[71.18297577 -124.52159882]
[64.31990814 -113.60092163]
[66.76563263 -98.80165100]
[69.65090942 -84.08175659]
[72.97316742 -69.45429993]
[76.29542542 -54.82683945]
[79.61768341 -40.19937897]
[91.37416840 -34.92542648]
[98.04604340 -23.67517281]
[97.00479126 -10.44164562]
[88.40717316 -0.07364078]
[91.51128387 14.60166168]
[95.97092438 20.49516487]
[94.55064392 29.51850319]
[97.43592072 44.23839569]
[101.80731964 50.19764328]
[100.25285339 59.19883347]
[102.91864777 73.96005249]
[105.58444214 88.72126770]
[108.57921600 103.41927338]
[111.90148163 118.04673004]
[115.22373962 132.67419434]
[118.54599762 147.30165100]
[121.86825562 161.92910767]
[126.05526733 176.33290100]
[131.09217834 190.46192932]
[136.12910461 204.59095764]
[141.27105713 218.68209839]
[146.51777649 232.73457336]
[151.76449585 246.78703308]
[163.15344238 252.84136963]
[167.23414612 264.65371704]
[162.33451843 275.71356201]
[167.37144470 289.84259033]
[172.40835571 303.97161865]
[177.44526672 318.10064697]
[182.48219299 332.22967529]
[197.22415161 336.69967651]
[206.40007019 348.85104370]
[206.65827942 363.89755249]
[198.10931396 376.06527710]
[203.14624023 390.19430542]
[208.18315125 404.32333374]
[213.22006226 418.45236206]
[218.25698853 432.58139038]
[223.29389954 446.71041870]
[228.33081055 460.83944702]
[233.36773682 474.96847534]
[237.34524536 478.34878540]
[239.42083740 482.50152588]
[239.61877441 486.57287598]
[238.29869080 489.84237671]
[242.69967651 504.18222046]
[247.10067749 518.52209473]
[262.11099243 517.29565430]
[277.03399658 519.32507324]
[291.17166138 524.51550293]
[303.86276245 532.62414551]
[314.51370239 543.27178955]
[322.62634277 555.96032715]
[327.82119751 570.09637451]
[329.85534668 585.01867676]
[328.63363647 600.02941895]
[324.21316528 614.42639160]
[316.80075073 627.53631592]
[306.74304199 638.74597168]
[294.51046753 647.53106689]
[280.67514038 653.48077393]
[265.88421631 656.31665039]
[250.82946777 655.90625000]
[236.21502686 652.26861572]
[222.72444153 645.57397461]
[210.98869324 636.13543701]
[201.55668640 624.39440918]
[194.86956787 610.90014648]
[191.24011230 596.28363037]
[190.83805847 581.22869873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[24 163]
[25 162]
[26 161]
[28 160]
[29 159]
[30 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[47 152]
[48 151]
[49 150]
[50 148]
[51 147]
[52 145]
[53 144]
[56 140]
[57 139]
[58 138]
[59 137]
[64 136]
[65 135]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
