%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[114.19342804 722.16558838]
[99.17106628 722.27502441]
[84.26815033 720.38122559]
[69.75064850 716.51782227]
[55.87764359 710.75390625]
[42.89670944 703.19219971]
[31.03951073 693.96777344]
[20.51765060 683.24517822]
[11.51890469 671.21582031]
[4.20386648 658.09429932]
[-1.29691875 644.11486816]
[-4.88528299 629.52697754]
[-6.49718714 614.59094238]
[-6.10386562 599.57330322]
[-3.71233702 584.74212646]
[0.63471830 570.36206055]
[6.85972261 556.68975830]
[14.85158253 543.96911621]
[24.46767616 532.42730713]
[35.53638840 522.27014160]
[47.86019135 513.67907715]
[61.21914673 506.80725098]
[75.37485504 501.77737427]
[90.07467651 498.67922974]
[105.05629730 497.56808472]
[105.94911194 482.59469604]
[106.84192657 467.62127686]
[107.73474121 452.64788818]
[108.62755585 437.67446899]
[109.52037811 422.70108032]
[110.41319275 407.72766113]
[111.30600739 392.75427246]
[112.19882202 377.78085327]
[113.09163666 362.80743408]
[113.98445129 347.83404541]
[102.11350250 341.08145142]
[94.27242279 329.81884766]
[92.03822327 316.21157837]
[95.90316010 302.90594482]
[105.16773224 292.51440430]
[118.06649780 287.10287476]
[119.18214417 272.14440918]
[120.29779816 257.18597412]
[121.41344452 242.22750854]
[122.52909088 227.26905823]
[121.07967377 212.33924866]
[117.10757446 197.87472534]
[113.13548279 183.41020203]
[109.16338348 168.94567871]
[105.52937317 165.84680176]
[103.80347443 160.43217468]
[105.29523468 153.99119568]
[101.75556183 139.41481018]
[98.21588898 124.83843994]
[94.67621613 110.26206970]
[89.38047791 124.29613495]
[78.23090363 134.33042908]
[63.71834183 138.12326050]
[49.08493423 134.82730103]
[37.59981918 125.17886353]
[31.82880592 111.33345795]
[33.06114960 96.38416290]
[41.02154160 83.67070007]
[53.93161011 76.03328705]
[68.90721130 75.17813873]
[82.60276794 81.29629517]
[91.95864868 93.02097321]
[83.21636963 79.83449554]
[89.98563385 66.56700134]
[88.86997986 51.60855103]
[87.75433350 36.65009689]
[73.31882477 34.60791779]
[59.63179779 29.60362434]
[47.29370880 21.85945129]
[36.84526062 11.71776676]
[28.74371910 -0.37405634]
[23.34291458 -13.88337803]
[20.87776947 -28.21575165]
[21.45409203 -42.74108124]
[25.04403114 -56.82132339]
[31.48742104 -69.83851624]
[40.49891281 -81.22189331]
[51.68061829 -90.47291565]
[64.53968048 -97.18711090]
[78.50998688 -101.07174683]
[77.61717224 -116.04515076]
[73.98252106 -124.42531586]
[76.82421112 -131.24781799]
[76.15442657 -146.23286438]
[75.48464203 -161.21789551]
[74.81485748 -176.20294189]
[65.84042358 -185.46696472]
[65.59105682 -197.96183777]
[73.65512848 -206.97833252]
[73.20852661 -221.97167969]
[72.76191711 -236.96502686]
[58.36190414 -241.69950867]
[46.45151901 -251.07600403]
[38.46900558 -263.96224976]
[35.37829590 -278.80215454]
[37.55259705 -293.80377197]
[44.72935867 -307.15554810]
[56.04195404 -317.24520874]
[70.12432861 -322.85433960]
[85.27596283 -323.30566406]
[99.66722870 -318.54467773]
[111.56031799 -309.14624023]
[119.51906586 -296.24530029]
[122.58242798 -281.39971924]
[120.38047791 -266.40213013]
[113.17912292 -253.06361389]
[101.84795380 -242.99482727]
[87.75527191 -237.41163635]
[88.20187378 -222.41828918]
[88.64848328 -207.42494202]
[98.66268921 -193.01373291]
[89.79989624 -176.87272644]
[90.46968079 -161.88768005]
[91.13946533 -146.90264893]
[91.80924988 -131.91760254]
[92.59057617 -116.93796539]
[93.48339081 -101.96456146]
[108.74237823 -99.51754761]
[123.08390808 -93.74171448]
[135.79118347 -84.92240143]
[146.22836304 -73.49715424]
[153.87232971 -60.03400803]
[158.33897400 -45.20324707]
[159.40243530 -29.74403381]
[157.00656128 -14.42757320]
[151.26785278 -0.01863539]
[142.46980286 12.76262856]
[131.04888916 23.27667809]
[117.57290649 30.99658775]
[102.71278381 35.53445053]
[103.82843781 50.49290466]
[104.94408417 65.45135498]
[113.60656738 77.56790161]
[106.91710663 91.90532684]
[109.25259399 106.72239685]
[112.79226685 121.29876709]
[116.33193970 135.87513733]
[119.87161255 150.45152283]
[123.62790680 164.97357178]
[127.60000610 179.43811035]
[131.57209778 193.90263367]
[135.54420471 208.36715698]
[138.43197632 193.64775085]
[144.84342957 180.08702087]
[154.38650513 168.51422119]
[166.47763062 159.63702393]
[180.37742615 153.99826050]
[195.23591614 151.94276428]
[210.14451599 153.59620667]
[224.19152832 158.85749817]
[236.51800537 167.40490723]
[246.37014771 178.71575928]
[253.14550781 192.09837341]
[256.42977905 206.73440552]
[256.02212524 221.72886658]
[251.94744873 236.16482544]
[244.45494080 249.15953064]
[234.00276184 259.91833496]
[221.23007202 267.78335571]
[206.91793823 272.27365112]
[191.94152832 273.11459351]
[177.21665955 270.25476074]
[163.64378357 263.86907959]
[152.05287170 254.34802246]
[143.15270996 242.27378845]
[137.48754883 228.38470459]
[136.37190247 243.34315491]
[135.25625610 258.30160522]
[134.14059448 273.26007080]
[133.02494812 288.21850586]
[146.78497314 297.38659668]
[154.00257874 312.15823364]
[152.79289246 328.46020508]
[143.58050537 341.85003662]
[128.95785522 348.72686768]
[128.06504822 363.70025635]
[127.17222595 378.67367554]
[126.27941132 393.64706421]
[125.38659668 408.62048340]
[124.49378204 423.59387207]
[123.60096741 438.56729126]
[122.70815277 453.54071045]
[121.81533051 468.51409912]
[120.92251587 483.48751831]
[120.02970123 498.46090698]
[134.77313232 501.34445190]
[149.00064087 506.16744995]
[162.45834351 512.84381104]
[174.90606689 521.25439453]
[186.12164307 531.24908447]
[195.90495300 542.64953613]
[204.08139038 555.25231934]
[210.50502014 568.83245850]
[215.06121826 583.14764404]
[217.66867065 597.94238281]
[218.28085327 612.95263672]
[216.88682556 627.91058350]
[213.51147461 642.54925537]
[208.21504211 656.60742188]
[201.09204102 669.83410645]
[192.26959229 681.99340820]
[181.90513611 692.86822510]
[170.18365479 702.26452637]
[157.31431580 710.01458740]
[143.52680969 715.98010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 147]
[47 146]
[48 145]
[49 144]
[52 143]
[53 142]
[54 141]
[55 140]
[67 139]
[69 137]
[70 136]
[71 135]
[85 122]
[86 121]
[88 120]
[89 119]
[90 118]
[91 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
