%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-4.30817652 669.95111084]
[-17.95580482 663.11700439]
[-27.27989006 651.03295898]
[-30.42912865 636.09826660]
[-26.77823639 621.27825928]
[-17.05210114 609.51538086]
[-3.18185186 603.14520264]
[-2.95852423 588.14685059]
[-2.73519659 573.14849854]
[-2.51186872 558.15020752]
[-2.28854108 543.15185547]
[-2.06521344 528.15350342]
[-5.10877895 521.41864014]
[-1.72524977 512.93395996]
[-1.27864385 497.94064331]
[-0.83203793 482.94726562]
[-10.89322472 474.89730835]
[-14.53522873 462.33474731]
[-10.21320915 449.78363037]
[0.70682341 441.89898682]
[1.37660849 426.91394043]
[2.04639363 411.92892456]
[2.71617889 396.94387817]
[3.38596392 381.95883179]
[-4.80271101 394.52648926]
[-17.13389587 403.06707764]
[-31.77832985 406.31369019]
[-46.56360245 403.78472900]
[-59.29640198 395.85528564]
[-68.08789825 383.70169067]
[-71.63391876 369.12686157]
[-69.40843964 354.29287720]
[-61.74158859 341.40026855]
[-49.77070618 332.36157227]
[-35.27159882 328.51763916]
[-20.39511871 330.43869019]
[-7.34810972 337.83972168]
[1.93398643 349.62289429]
[6.07406044 364.03826904]
[9.83036137 349.51620483]
[2.07356477 336.85256958]
[5.67611551 322.07162476]
[19.01149559 314.02145386]
[22.76779747 299.49938965]
[26.52409744 284.97735596]
[30.28039742 270.45529175]
[34.03669739 255.93322754]
[32.66837311 248.67033386]
[37.95853806 241.22373962]
[41.93063736 226.75921631]
[45.90273285 212.29469299]
[49.87482834 197.83016968]
[38.13417435 207.16595459]
[23.31348801 209.47837830]
[9.28686142 204.16294861]
[-0.27917913 192.60911560]
[-2.88409376 177.83703613]
[2.15303612 163.70808411]
[13.51551723 153.91554260]
[28.23322296 151.01913452]
[42.45898056 155.77600098]
[52.47421646 166.94270325]
[55.66100311 181.59939575]
[61.73483658 167.88412476]
[67.80867004 154.16886902]
[73.88250732 140.45359802]
[79.95633698 126.73832703]
[86.03017426 113.02306366]
[80.90879822 99.46881104]
[86.77592468 86.22029877]
[100.25456238 80.90310669]
[106.32839203 67.18783569]
[106.94191742 58.07403183]
[112.59611511 53.31464005]
[118.87347412 39.69132233]
[125.15083313 26.06800652]
[128.58189392 11.46568489]
[129.02850342 -3.52766490]
[121.70551300 -17.55208778]
[129.81832886 -30.04334831]
[130.26492310 -45.03669739]
[130.59989929 -60.03295898]
[119.11026764 -50.38991547]
[104.15583801 -51.55822372]
[94.30318451 -62.86862946]
[95.19635773 -77.84201050]
[106.32371521 -87.90093994]
[121.31098938 -87.28321075]
[131.57244873 -76.34355927]
[133.13298035 -91.26216125]
[134.58239746 -106.19197083]
[135.92062378 -121.13215637]
[137.25886536 -136.07234192]
[138.59709167 -151.01252747]
[139.93533325 -165.95271301]
[125.60379791 -170.59544373]
[112.66496277 -178.31127930]
[101.76782227 -188.71321106]
[93.45898438 -201.27947998]
[88.15520477 -215.37974548]
[86.12252808 -230.30676270]
[87.46290588 -245.31179810]
[92.10910797 -259.64221191]
[99.82807922 -272.57916260]
[110.23265076 -283.47378540]
[122.80092621 -291.77960205]
[136.90248108 -297.07995605]
[151.82998657 -299.10900879]
[166.83470154 -297.76501465]
[181.16398621 -293.11532593]
[194.09907532 -285.39321899]
[204.99118042 -274.98599243]
[213.29393005 -262.41571045]
[218.59088135 -248.31288147]
[220.61631775 -233.38487244]
[219.26867676 -218.38049316]
[214.61552429 -204.05233765]
[206.89027405 -191.11911011]
[196.48043823 -180.22953796]
[183.90814209 -171.92984009]
[169.80401611 -166.63630676]
[154.87551880 -164.61447144]
[153.53727722 -149.67428589]
[152.19905090 -134.73411560]
[150.86080933 -119.79392242]
[149.52258301 -104.85373688]
[152.05679321 -97.91114807]
[148.05157471 -89.70163727]
[146.49105835 -74.78303528]
[145.59823608 -59.80963135]
[148.64181519 -53.07475662]
[145.25828552 -44.59009171]
[144.81167603 -29.59674263]
[152.16661072 -16.64474487]
[144.02185059 -3.08105898]
[143.57524109 11.91229057]
[150.60044861 -1.34087896]
[160.27651978 -12.80271149]
[172.16326904 -21.95177078]
[185.71992493 -28.37183380]
[200.32974243 -31.77083206]
[215.32807922 -31.99413109]
[230.03260803 -29.03157806]
[243.77438354 -23.01794243]
[255.92822266 -14.22680950]
[265.94122314 -3.05811548]
[273.35787964 9.98003864]
[277.84072876 24.29450417]
[279.18588257 39.23406982]
[277.33212280 54.11907959]
[272.36380005 68.27236938]
[264.50689697 81.05006409]
[254.11891174 91.87084961]
[241.67237854 100.24246216]
[227.73355103 105.78405762]
[212.93655396 108.24350739]
[197.95455933 107.50894165]
[183.46913147 103.61377716]
[170.13926697 96.73520660]
[158.57138062 87.18617249]
[149.29174805 75.40107727]
[142.72251892 61.91608047]
[139.16255188 47.34464645]
[138.77415466 32.34536743]
[132.49679565 45.96868515]
[126.21942902 59.59199905]
[120.04366302 73.26167297]
[113.96982574 86.97693634]
[119.09120178 100.53118896]
[113.22407532 113.77970123]
[99.74543762 119.09689331]
[93.67160797 132.81216431]
[87.59777069 146.52743530]
[81.52393341 160.24269104]
[75.45010376 173.95796204]
[69.37626648 187.67323303]
[64.33935547 201.80226135]
[60.36725616 216.26678467]
[56.39516068 230.73130798]
[52.42306519 245.19583130]
[48.55875778 259.68951416]
[44.80245590 274.21157837]
[41.04615784 288.73364258]
[37.28985596 303.25570679]
[33.53355408 317.77777100]
[41.29302216 331.28436279]
[37.27672577 345.95828247]
[24.35242081 353.27252197]
[20.59612083 367.79458618]
[18.37100220 382.62863159]
[17.70121765 397.61364746]
[17.03143311 412.59869385]
[16.36164665 427.58374023]
[15.69186211 442.56878662]
[27.73131752 455.26016235]
[26.88369179 472.39480591]
[14.16131210 483.39389038]
[13.71470642 498.38723755]
[13.26809978 513.38055420]
[12.93312359 528.37683105]
[12.70979595 543.37518311]
[12.48646832 558.37353516]
[12.26314068 573.37182617]
[12.03981304 588.37017822]
[11.81648540 603.36853027]
[25.49092102 610.14886475]
[34.86252213 622.19604492]
[38.07054901 637.11822510]
[34.47804260 651.95257568]
[24.79830551 663.75366211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[14 199]
[15 198]
[16 197]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[39 189]
[40 188]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[49 180]
[50 179]
[51 178]
[52 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[71 168]
[72 167]
[74 166]
[75 165]
[76 164]
[77 136]
[78 135]
[80 133]
[81 132]
[82 130]
[89 129]
[90 128]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
