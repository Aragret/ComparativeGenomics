%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[178.68183899 500.68780518]
[170.93202209 486.23541260]
[179.80207825 472.44213867]
[180.02540588 457.44378662]
[180.24873352 442.44546509]
[180.47206116 427.44711304]
[172.92510986 414.60604858]
[180.86701965 400.92260742]
[173.32006836 388.08154297]
[181.26196289 374.39810181]
[181.48529053 359.39978027]
[181.70861816 344.40142822]
[181.93194580 329.40310669]
[182.15527344 314.40475464]
[180.15126038 299.53924561]
[175.96424866 285.13543701]
[170.92733765 271.00640869]
[158.82714844 262.32110596]
[160.54809570 246.59378052]
[154.47427368 232.87850952]
[148.19691467 219.25520325]
[141.91954041 205.63188171]
[135.64218140 192.00857544]
[129.36482239 178.38525391]
[123.08746338 164.76193237]
[116.81010437 151.13862610]
[110.33060455 137.61027527]
[103.65041351 124.17990112]
[96.97022247 110.74951935]
[90.19022369 97.36924744]
[83.31081390 84.03981781]
[76.43140411 70.71038818]
[69.55198669 57.38096237]
[62.67257690 44.05153275]
[55.79316330 30.72210312]
[48.91375351 17.39267349]
[42.03433990 4.06324434]
[28.82961464 -4.65144491]
[29.86812401 -19.50980186]
[26.13303566 -21.72409248]
[23.55603027 -24.71132660]
[22.23788834 -28.01252365]
[22.11998558 -31.18312454]
[23.00279045 -33.84372711]
[10.34018421 -43.32892227]
[12.26123810 -58.09912491]
[6.18740416 -71.81439209]
[-8.28209305 -77.58252716]
[-14.24644470 -91.57828522]
[-8.65823650 -105.33718872]
[-14.73207092 -119.05245972]
[-20.80590439 -132.76773071]
[-26.87973785 -146.48298645]
[-32.95357132 -160.19825745]
[-39.12934113 -173.86791992]
[-45.40670013 -187.49124146]
[-51.68406296 -201.11456299]
[-57.96142197 -214.73786926]
[-62.22464752 -217.74984741]
[-64.66245270 -221.70085144]
[-65.22283173 -225.73831177]
[-64.19969940 -229.11254883]
[-69.86248016 -243.00257874]
[-75.52526855 -256.89260864]
[-90.32951355 -267.84323120]
[-87.26535034 -285.12261963]
[-93.13430786 -298.92681885]
[-99.00326538 -312.73098755]
[-104.87223053 -326.53515625]
[-119.35705566 -322.55102539]
[-134.24368286 -320.53317261]
[-149.26643372 -320.51754761]
[-164.15722656 -322.50448608]
[-178.65029907 -326.45852661]
[-192.48701477 -332.30905151]
[-205.42044067 -339.95169067]
[-217.21975708 -349.25006104]
[-227.67440796 -360.03817749]
[-236.59779358 -372.12356567]
[-243.83068848 -385.29052734]
[-249.24400330 -399.30407715]
[-252.74113464 -413.91412354]
[-254.25967407 -428.85992432]
[-253.77250671 -443.87478638]
[-251.28833008 -458.69073486]
[-246.85150146 -473.04336548]
[-240.54116821 -486.67654419]
[-232.46997070 -499.34695435]
[-222.78193665 -510.82846069]
[-211.64996338 -520.91619873]
[-199.27272034 -529.43017578]
[-185.87107849 -536.21832275]
[-171.68420410 -541.15960693]
[-156.96530151 -544.16583252]
[-141.97703552 -545.18334961]
[-126.98689270 -544.19396973]
[-112.26238251 -541.21533203]
[-98.06627655 -536.30065918]
[-84.65193939 -529.53759766]
[-72.25874329 -521.04687500]
[-61.10787964 -510.98001099]
[-51.39833450 -499.51669312]
[-43.30339432 -486.86141968]
[-36.96751785 -473.24011230]
[-32.50378036 -458.89584351]
[-29.99184036 -444.08456421]
[-29.47652435 -429.07064819]
[-30.96703339 -414.12200928]
[-34.43676376 -399.50543213]
[-39.82379532 -385.48175049]
[-47.03199005 -372.30126953]
[-55.93271255 -360.19918823]
[-66.36711121 -349.39144897]
[-78.14897919 -340.07098389]
[-91.06805420 -332.40411377]
[-85.19908905 -318.59994507]
[-79.33013153 -304.79577637]
[-73.46116638 -290.99157715]
[-62.36388397 -286.17736816]
[-57.36138153 -274.72491455]
[-61.63524246 -262.55538940]
[-55.97245789 -248.66535950]
[-50.30966949 -234.77534485]
[-44.33810806 -221.01524353]
[-38.06074524 -207.39192200]
[-31.78338623 -193.76860046]
[-25.50602531 -180.14529419]
[-19.85182571 -175.38589478]
[-19.23830605 -166.27209473]
[-13.16447163 -152.55682373]
[-7.09063768 -138.84155273]
[-1.01680374 -125.12628937]
[5.05703020 -111.41102600]
[19.00095749 -106.30196381]
[25.35606766 -92.47925568]
[19.90266991 -77.88822174]
[25.97650528 -64.17295837]
[38.20466995 -55.66876602]
[36.71805573 -39.91756058]
[43.19755173 -26.38921356]
[55.91021729 -18.62793541]
[55.36376953 -2.81616807]
[62.24318314 10.51326084]
[69.12259674 23.84268951]
[76.00200653 37.17211914]
[82.88141632 50.50154877]
[89.76083374 63.83097839]
[96.64024353 77.16040802]
[103.51965332 90.48983765]
[109.72109985 95.63907623]
[110.40059662 104.06932831]
[117.08078766 117.49970245]
[123.76098633 130.93008423]
[129.05049133 134.89651489]
[131.21752930 140.15019226]
[130.43342590 144.86125183]
[136.71078491 158.48457336]
[142.98814392 172.10789490]
[149.26550293 185.73120117]
[155.54286194 199.35452271]
[161.82022095 212.97784424]
[168.09757996 226.60115051]
[173.26664734 230.72332764]
[175.27630615 236.03918457]
[174.35227966 240.72482300]
[186.87226868 250.39749146]
[184.73152161 265.13745117]
[189.40159607 250.88296509]
[201.49041748 242.00263977]
[216.48916626 241.80860901]
[228.80366516 250.37326050]
[233.84091187 264.50216675]
[229.72215271 278.92559814]
[217.98356628 288.26400757]
[203.00335693 289.03436279]
[190.36804199 280.94842529]
[194.55505371 295.35223389]
[197.38751221 280.62207031]
[204.20391846 267.26031494]
[214.46673584 256.32073975]
[227.36656189 248.66603088]
[241.88607788 244.89990234]
[256.88021851 245.31938171]
[271.16647339 249.89137268]
[283.61816406 258.25531006]
[293.25329590 269.75155640]
[299.31204224 283.47351074]
[301.31652832 298.33895874]
[299.10870361 313.17559814]
[292.86270142 326.81329346]
[283.07107544 338.17657471]
[270.50604248 346.36926270]
[256.15853882 350.74523926]
[241.16006470 350.95938110]
[226.69346619 346.99484253]
[213.89962769 339.16427612]
[203.78755188 328.08520508]
[197.15361023 314.62808228]
[196.93028259 329.62643433]
[196.70695496 344.62475586]
[196.48362732 359.62310791]
[196.26029968 374.62142944]
[203.79129028 388.53527832]
[195.86535645 401.14593506]
[203.39633179 415.05978394]
[195.47039795 427.67044067]
[195.24707031 442.66879272]
[195.02374268 457.66711426]
[194.80041504 472.66546631]
[203.25584412 486.71670532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[8 204]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 177]
[16 176]
[17 167]
[19 165]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[27 153]
[28 152]
[29 151]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[39 140]
[44 139]
[46 137]
[47 136]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 127]
[56 126]
[57 125]
[58 124]
[62 123]
[63 122]
[64 121]
[66 118]
[67 117]
[68 116]
[69 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
