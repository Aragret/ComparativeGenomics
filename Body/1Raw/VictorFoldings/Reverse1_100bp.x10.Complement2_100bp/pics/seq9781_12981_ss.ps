%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[22.34213829 606.05389404]
[7.54765558 602.44238281]
[-4.49486113 593.12048340]
[-11.69897366 579.70330811]
[-12.81652451 564.51544189]
[-7.65389252 550.18829346]
[2.89446545 539.20410156]
[17.00098228 533.46600342]
[17.44758797 518.47265625]
[17.89419556 503.47927856]
[8.75551128 488.49758911]
[18.56332016 472.91271973]
[18.78664780 457.91436768]
[19.00997543 442.91604614]
[11.39376450 455.83862305]
[-0.33100066 465.19436646]
[-14.62172413 469.75234985]
[-29.59821701 468.91290283]
[-43.29006195 462.78643799]
[-53.89586258 452.17904663]
[-60.02024460 438.48626709]
[-60.85743713 423.50964355]
[-56.29729462 409.21963501]
[-46.93978500 397.49627686]
[-34.01604462 389.88201904]
[-19.22641754 387.37863159]
[-4.51673222 390.31549072]
[8.17769909 398.30618286]
[17.18670654 410.29943848]
[21.32522964 424.71966553]
[24.86490250 410.14328003]
[28.40457535 395.56689453]
[31.94424820 380.99053955]
[19.06287575 369.56649780]
[13.71430397 353.10726929]
[17.45780754 336.11932373]
[29.35018921 323.30206299]
[46.18135834 318.24789429]
[49.28546906 303.57257080]
[44.34944534 289.51965332]
[54.77507782 277.61935425]
[57.87918854 262.94406128]
[60.98329926 248.26875305]
[64.08740997 233.59346008]
[67.19152069 218.91815186]
[56.02156067 209.06434631]
[51.25186920 194.84794617]
[54.25834656 180.05513000]
[64.33170319 168.67863464]
[78.84157562 163.84016418]
[81.94568634 149.16487122]
[85.04979706 134.48956299]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[97.84139252 75.64156342]
[101.16365051 61.01410294]
[104.04892731 46.29421234]
[106.49465179 31.49494171]
[108.94037628 16.69567108]
[111.38610840 1.89639974]
[106.00244141 -12.98065472]
[115.71136475 -24.27605629]
[117.82598877 -39.12625504]
[119.60845947 -54.01996994]
[121.39092255 -68.91368866]
[123.17338562 -83.80740356]
[124.95585632 -98.70112610]
[124.73252869 -113.69946289]
[122.50740814 -128.53350830]
[120.28229523 -143.36755371]
[118.05717468 -158.20158386]
[115.83205414 -173.03562927]
[103.40653992 -182.42947388]
[101.36126709 -197.50500488]
[110.39343262 -209.29293823]
[108.16831970 -224.12698364]
[105.94319916 -238.96102905]
[103.71808624 -253.79507446]
[101.49296570 -268.62911987]
[86.46193695 -268.74984741]
[71.63486481 -271.22061157]
[57.37689590 -275.98049927]
[44.03913116 -282.91235352]
[31.95003319 -291.84545898]
[21.40730286 -302.55981445]
[12.67056561 -314.79156494]
[5.95497274 -328.23950195]
[1.42590058 -342.57247925]
[-0.80511826 -357.43750000]
[-0.68314296 -372.46853638]
[1.78882277 -387.29537964]
[6.54990482 -401.55297852]
[13.48285675 -414.89016724]
[22.41694832 -426.97851562]
[33.13217163 -437.52035522]
[45.36465073 -446.25610352]
[58.81315231 -452.97058105]
[73.14649200 -457.49847412]
[88.01170349 -459.72827148]
[103.04271698 -459.60504150]
[117.86937714 -457.13186646]
[132.12657166 -452.36959839]
[145.46318054 -445.43554688]
[157.55081177 -436.50045776]
[168.09176636 -425.78436279]
[176.82649231 -413.55117798]
[183.53985596 -400.10211182]
[188.06657410 -385.76840210]
[190.29513550 -370.90298462]
[190.17068481 -355.87200928]
[187.69625854 -341.04553223]
[182.93283081 -326.78875732]
[175.99768066 -313.45269775]
[167.06158447 -301.36581421]
[156.34463501 -290.82574463]
[144.11070251 -282.09201050]
[130.66110229 -275.37976074]
[116.32701111 -270.85424805]
[118.55212402 -256.02020264]
[120.77724457 -241.18614197]
[123.00236511 -226.35211182]
[125.22747803 -211.51806641]
[137.32072449 -202.89894104]
[139.78862000 -187.88681030]
[130.66610718 -175.26075745]
[132.89122009 -160.42671204]
[135.11633301 -145.59266663]
[137.34144592 -130.75862122]
[139.56657410 -115.92457581]
[144.52607727 -130.08096313]
[153.56735229 -142.04989624]
[165.82859802 -150.69059753]
[180.14118958 -155.17947388]
[195.14091492 -155.08868408]
[209.39810181 -150.42686462]
[221.55384827 -141.63836670]
[230.44955444 -129.56083679]
[235.23731995 -115.34545898]
[235.46083069 -100.34712219]
[231.09875488 -85.99538422]
[222.56687927 -73.65816498]
[210.67840576 -64.51136017]
[196.56645203 -59.42678833]
[181.57609558 -58.88908386]
[167.13610840 -62.94949341]
[154.62283325 -71.22100067]
[145.22894287 -82.91522980]
[139.84956360 -96.91865540]
[138.06710815 -82.02494049]
[136.28463745 -67.13122559]
[134.50216675 -52.23750305]
[132.71971130 -37.34378815]
[134.59983826 -34.36092758]
[135.12860107 -30.31921577]
[133.82408142 -25.86371231]
[130.51063538 -21.83032799]
[136.06922913 -8.01181698]
[126.18537903 4.34212732]
[123.73964691 19.14139748]
[121.29392242 33.94067001]
[118.84819794 48.73994064]
[120.36914062 51.09469604]
[121.04897308 54.19379807]
[120.59951782 57.71989822]
[118.85268402 61.25728607]
[115.79111481 64.33636475]
[112.46884918 78.96382141]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[99.72509766 137.59367371]
[96.62098694 152.26898193]
[93.51687622 166.94427490]
[104.82479095 177.24371338]
[109.42878723 191.72473145]
[106.18782043 206.46795654]
[96.07011414 217.53538513]
[81.86682129 222.02226257]
[78.76271057 236.69757080]
[75.65859985 251.37286377]
[72.55448914 266.04815674]
[69.45037842 280.72348022]
[74.16437531 295.82608032]
[63.96077347 306.67669678]
[60.85666275 321.35198975]
[71.23905945 329.03219604]
[77.92131042 340.02865601]
[79.94092560 352.68948364]
[77.03276062 365.12820435]
[69.66326141 375.50500488]
[58.95602417 382.29882812]
[46.52062225 384.53021240]
[42.98094940 399.10656738]
[39.44127655 413.68295288]
[35.90160370 428.25933838]
[34.00831223 443.13937378]
[33.78498459 458.13769531]
[33.56165695 473.13604736]
[41.96877670 482.91781616]
[41.47399521 495.40536499]
[32.88754654 503.92590332]
[32.44093704 518.91925049]
[31.99433327 533.91259766]
[45.73430252 540.48016357]
[55.61016846 552.07275391]
[59.91088104 566.68176270]
[57.89131165 581.77618408]
[49.90136719 594.74078369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[12 200]
[13 199]
[14 198]
[30 197]
[31 196]
[32 195]
[33 194]
[38 187]
[39 186]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[56 170]
[57 169]
[58 168]
[59 163]
[60 162]
[61 161]
[62 160]
[64 158]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
