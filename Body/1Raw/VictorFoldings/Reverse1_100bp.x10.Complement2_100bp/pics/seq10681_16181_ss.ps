%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[139.99185181 717.68493652]
[152.91772461 709.68554688]
[150.47200012 694.88623047]
[148.02627563 680.08697510]
[145.58053589 665.28771973]
[141.38850403 659.20092773]
[143.21028137 650.25006104]
[140.98516846 635.41601562]
[138.76004028 620.58197021]
[126.66680908 611.96282959]
[124.19890594 596.95068359]
[133.32142639 584.32464600]
[131.09631348 569.49060059]
[128.87118530 554.65655518]
[126.26829529 552.27807617]
[124.68813324 548.52062988]
[124.76624298 543.87872314]
[126.89333344 539.11193848]
[125.33281708 524.19329834]
[123.77229309 509.27471924]
[114.75289917 497.42144775]
[121.01251221 482.89120483]
[119.45198822 467.97259521]
[117.89146423 453.05401611]
[116.33094025 438.13540649]
[114.77041626 423.21679688]
[113.20989990 408.29818726]
[111.64937592 393.37957764]
[100.95453644 390.60696411]
[91.58885193 384.69601440]
[84.44997406 376.19415283]
[80.22795868 365.89801025]
[79.33854675 354.77877808]
[81.88229370 343.89062500]
[87.63350677 334.27078247]
[96.06015778 326.84072876]
[106.37306976 322.31784058]
[105.70328522 307.33279419]
[105.03350067 292.34774780]
[104.25217438 277.36810303]
[103.35935974 262.39471436]
[102.46654510 247.42131042]
[101.57373047 232.44789124]
[100.68091583 217.47448730]
[99.78810120 202.50108337]
[98.89527893 187.52767944]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[80.37390900 70.46527863]
[66.07073975 74.98406982]
[51.80704880 70.34218597]
[42.90283585 58.27093887]
[42.67915344 43.27260971]
[51.21942520 30.94119644]
[65.33834839 25.87601662]
[79.76990509 29.96625519]
[89.13190460 41.68744659]
[89.80169678 26.70240974]
[90.47148132 11.71737003]
[91.14126587 -3.26766849]
[88.73421478 -7.89942980]
[88.37995148 -12.52844620]
[89.73366547 -16.37324905]
[92.19037628 -18.90246201]
[93.52861023 -33.84264755]
[94.86684418 -48.78283310]
[96.20507812 -63.72301865]
[88.07186127 -80.24368286]
[98.71957397 -94.19334412]
[99.27778625 -109.18295288]
[99.27778625 -124.18295288]
[99.27778625 -139.18295288]
[91.54048920 -152.98312378]
[99.27778625 -165.71040344]
[99.27778625 -180.71040344]
[99.27778625 -195.71040344]
[98.71957397 -210.70001221]
[97.60392761 -225.65846252]
[96.48828125 -240.61691284]
[87.24199677 -249.60963440]
[86.62071991 -262.09152222]
[94.41276550 -271.34414673]
[93.51995087 -286.31753540]
[92.62713623 -301.29095459]
[77.79962158 -304.01278687]
[64.05464172 -310.20462036]
[52.19129562 -319.50646973]
[42.89931107 -331.37753296]
[36.71891403 -345.12768555]
[34.00941849 -359.95745850]
[34.92835617 -375.00466919]
[39.42229843 -389.39453125]
[47.22997284 -402.29040527]
[57.89745331 -412.94256592]
[70.80454254 -420.73165894]
[85.20085144 -425.20492554]
[100.24938202 -426.10220337]
[115.07524109 -423.37139893]
[128.81646729 -417.17123413]
[140.67416382 -407.86218262]
[149.95895386 -395.98547363]
[156.13101196 -382.23159790]
[158.83151245 -367.40017700]
[157.90345764 -352.35351562]
[153.40078735 -337.96640015]
[145.58529663 -325.07525635]
[134.91136169 -314.42956543]
[121.99954987 -306.64828491]
[107.60054016 -302.18374634]
[108.49335480 -287.21035767]
[109.38616943 -272.23693848]
[119.82501984 -258.13031006]
[111.44673157 -241.73255920]
[112.56237793 -226.77410889]
[113.67803192 -211.81565857]
[125.29510498 -221.30477905]
[139.98861694 -218.28802490]
[146.92704773 -204.98922729]
[140.99565125 -191.21176147]
[126.56682587 -187.11186218]
[114.27778625 -195.71040344]
[114.27778625 -180.71040344]
[114.27778625 -165.71040344]
[122.01508331 -152.98312378]
[114.27778625 -139.18295288]
[114.27778625 -124.18295288]
[114.27778625 -109.18295288]
[126.56845093 -117.78176117]
[140.99688721 -113.68050385]
[146.92698669 -99.90248108]
[139.98728943 -86.60433197]
[125.29350281 -83.58895874]
[113.67803192 -93.07769775]
[121.33145142 -83.71011353]
[120.52441406 -71.23884583]
[111.14526367 -62.38478470]
[109.80702972 -47.44459915]
[108.46879578 -32.50441360]
[107.13056183 -17.56422806]
[106.12630463 -2.59788346]
[105.45652008 12.38715553]
[104.78673553 27.37219429]
[104.11694336 42.35723114]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[116.60848999 179.77081299]
[113.86869049 186.63485718]
[114.76150513 201.60827637]
[115.65431976 216.58168030]
[116.54713440 231.55508423]
[117.43994904 246.52848816]
[118.33277130 261.50189209]
[119.22558594 276.47531128]
[122.86022949 284.85546875]
[120.01853943 291.67797852]
[120.68832397 306.66299438]
[121.35810852 321.64804077]
[138.79124451 329.77026367]
[149.63331604 345.55612183]
[150.94529724 364.57971191]
[142.44619751 381.55819702]
[126.56797791 391.81906128]
[128.12849426 406.73767090]
[129.68902588 421.65628052]
[131.24954224 436.57489014]
[132.81007385 451.49346924]
[134.37059021 466.41207886]
[135.93112183 481.33068848]
[145.06213379 494.25103760]
[138.69090271 507.71417236]
[140.25141907 522.63281250]
[141.81193542 537.55139160]
[143.70523071 552.43145752]
[145.93034363 567.26550293]
[148.15547180 582.09954834]
[160.58099365 591.49334717]
[162.62625122 606.56890869]
[153.59408569 618.35681152]
[155.81921387 633.19085693]
[158.04432678 648.02490234]
[160.37980652 662.84197998]
[162.82554626 677.64123535]
[165.27127075 692.44055176]
[167.71699524 707.23980713]
[182.52926636 710.65521240]
[194.90411377 719.48309326]
[202.95445251 732.37725830]
[205.45268250 747.37152100]
[202.01780701 762.17932129]
[193.17364502 774.54254150]
[180.26885986 782.57586670]
[165.27134705 785.05438232]
[150.46810913 781.60003662]
[138.11653137 772.73962402]
[130.10014343 759.82427979]
[127.64138031 744.82348633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[7 194]
[8 193]
[9 192]
[12 189]
[13 188]
[14 187]
[18 186]
[19 185]
[20 184]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[37 171]
[38 170]
[39 169]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[53 153]
[54 152]
[55 151]
[64 150]
[65 149]
[66 148]
[67 147]
[71 146]
[72 145]
[73 144]
[74 143]
[76 140]
[77 134]
[78 133]
[79 132]
[81 130]
[82 129]
[83 128]
[84 122]
[85 121]
[86 120]
[89 118]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
