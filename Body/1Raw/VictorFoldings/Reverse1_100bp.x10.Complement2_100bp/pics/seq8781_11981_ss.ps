%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[68.25166321 539.57055664]
[68.95368958 554.63568115]
[65.88630676 569.40191650]
[59.24234009 582.94110107]
[49.43943024 594.40203857]
[37.09379578 603.06439209]
[22.98149490 608.38360596]
[7.98963928 610.02526855]
[-6.93937016 607.88623047]
[-20.86708450 602.10095215]
[-32.91799545 593.03308105]
[-42.33457184 581.25262451]
[-48.52487946 567.50012207]
[-51.09979248 552.64007568]
[-49.89744949 537.60662842]
[-44.99342728 523.34472656]
[-36.69600296 510.75094604]
[-25.52675247 500.61691284]
[-12.18778992 493.57965088]
[2.48238873 490.08157349]
[17.56160355 490.34252930]
[21.53369904 475.87799072]
[25.50579643 461.41348267]
[29.47789192 446.94894409]
[18.16495514 437.22869873]
[12.16955662 423.50411987]
[12.72993660 408.47592163]
[19.78847122 395.12686157]
[31.99249077 386.12969971]
[46.95318604 383.31207275]
[50.92528152 368.84753418]
[54.89737701 354.38302612]
[58.86947250 339.91848755]
[62.84156799 325.45397949]
[66.81366730 310.98944092]
[70.78575897 296.52493286]
[74.75785828 282.06039429]
[76.87248230 267.21020508]
[77.09580994 252.21186829]
[69.54885864 239.37080383]
[77.49076080 225.68736267]
[77.71408844 210.68902588]
[77.93742371 195.69068909]
[68.90872192 207.66911316]
[55.13933945 213.61924744]
[40.22854996 211.98573303]
[28.07400131 203.19557190]
[21.85286140 189.54649353]
[23.19132042 174.60632324]
[31.73951149 162.28041077]
[45.26295471 155.79067993]
[60.22665787 156.83357239]
[72.71914673 165.13644409]
[79.47472382 178.52810669]
[81.92044830 163.72883606]
[84.36617279 148.92956543]
[86.81190491 134.13029480]
[89.25762939 119.33102417]
[91.70336151 104.53175354]
[89.69337463 99.68675995]
[90.54102325 94.06050110]
[94.44853210 89.33098602]
[89.51020050 74.30023956]
[99.55112457 63.29891586]
[102.43640137 48.57902527]
[105.32167053 33.85913467]
[95.29807281 19.52223206]
[98.67809296 2.70288777]
[112.89133453 -6.28725052]
[115.55712891 -21.04846764]
[118.22292328 -35.80968475]
[120.88871765 -50.57090378]
[123.55451202 -65.33212280]
[118.39294434 -80.28768158]
[128.26896667 -91.43727875]
[130.93475342 -106.19849396]
[133.60055542 -120.95970917]
[136.26634216 -135.72093201]
[123.35818481 -128.08029175]
[108.79436493 -131.67126465]
[100.91770172 -144.43678284]
[104.24031067 -159.06416321]
[116.85884857 -167.17417908]
[131.54484558 -164.12106323]
[139.88529968 -151.65469360]
[143.85739136 -166.11921692]
[147.82949829 -180.58374023]
[151.80158997 -195.04826355]
[155.77368164 -209.51278687]
[159.74578857 -223.97731018]
[145.87413025 -229.73756409]
[132.83383179 -237.19100952]
[120.83055878 -246.22010803]
[110.05361176 -256.68246460]
[100.67297363 -268.41305542]
[92.83657074 -281.22686768]
[86.66800690 -294.92184448]
[82.26456451 -309.28195190]
[79.69570160 -324.08074951]
[79.00192261 -339.08480835]
[80.19416809 -354.05749512]
[83.25363922 -368.76269531]
[88.13208771 -382.96847534]
[94.75257111 -396.45077515]
[103.01066589 -408.99697876]
[112.77613831 -420.40917969]
[123.89497375 -430.50744629]
[136.19180298 -439.13247681]
[149.47270203 -446.14825439]
[163.52821350 -451.44409180]
[178.13662720 -454.93652344]
[193.06759644 -456.57046509]
[208.08560181 -456.32009888]
[222.95379639 -454.18942261]
[237.43769836 -450.21200562]
[251.30886841 -444.45056152]
[264.34854126 -436.99603271]
[276.35104370 -427.96591187]
[287.12710571 -417.50265503]
[296.50677490 -405.77127075]
[304.34210205 -392.95678711]
[310.50952148 -379.26132202]
[314.91174316 -364.90081787]
[317.47937012 -350.10183716]
[318.17187500 -335.09771729]
[316.97836304 -320.12509155]
[313.91766357 -305.42016602]
[309.03802490 -291.21481323]
[302.41641235 -277.73306274]
[294.15725708 -265.18756104]
[284.39080811 -253.77615356]
[273.27111816 -243.67883301]
[260.97357178 -235.05484009]
[247.69207764 -228.04019165]
[233.63613892 -222.74551392]
[219.02740479 -219.25431824]
[204.09631348 -217.62164307]
[189.07832336 -217.87327576]
[174.21031189 -220.00521851]
[170.23820496 -205.54069519]
[166.26611328 -191.07617188]
[162.29402161 -176.61164856]
[158.32191467 -162.14710999]
[154.34982300 -147.68258667]
[151.02757263 -133.05513000]
[148.36177063 -118.29391479]
[145.69596863 -103.53269958]
[143.03018188 -88.77148438]
[148.38243103 -74.87174225]
[138.31573486 -62.66632462]
[135.64993286 -47.90510559]
[132.98414612 -33.14389038]
[130.31834412 -18.38267136]
[127.65254974 -3.62145495]
[136.40827942 5.83194017]
[138.14643860 18.79577065]
[132.01039124 30.56689262]
[120.04156494 36.74440765]
[117.15628815 51.46429825]
[114.27101898 66.18418884]
[119.41572571 80.16207123]
[109.16842651 92.21626282]
[106.50263214 106.97747803]
[104.05690002 121.77674866]
[101.61117554 136.57601929]
[99.16544342 151.37528992]
[96.71971893 166.17456055]
[94.27399445 180.97383118]
[92.93576050 195.91401672]
[92.71243286 210.91235352]
[92.48910522 225.91069031]
[100.02008057 239.82453918]
[92.09414673 252.43519592]
[91.87081909 267.43353271]
[99.18640137 254.33840942]
[110.31352997 244.27923584]
[124.07792664 238.31756592]
[139.02699280 237.08256531]
[153.58312988 240.70454407]
[166.21020508 248.80128479]
[175.57562256 260.51831055]
[180.69105530 274.61911011]
[181.01663208 289.61557007]
[176.51802063 303.92510986]
[167.66996765 316.03756714]
[155.40620422 324.67471313]
[141.02098083 328.92504883]
[126.03239441 328.34002686]
[112.02223206 322.98135376]
[100.46900940 313.41461182]
[92.59196472 300.64932251]
[89.22238159 286.03250122]
[85.25028992 300.49700928]
[81.27819061 314.96154785]
[77.30609131 329.42608643]
[73.33399963 343.89059448]
[69.36190033 358.35513306]
[65.38980865 372.81964111]
[61.41770935 387.28417969]
[72.84126282 397.34716797]
[78.73882294 411.31518555]
[77.98999023 426.39694214]
[70.79677582 439.60369873]
[58.63295746 448.34161377]
[43.94241714 450.92105103]
[39.97032166 465.38555908]
[35.99822235 479.85009766]
[32.02612686 494.31460571]
[45.12382889 501.79132080]
[55.95009232 512.29095459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 174]
[39 173]
[41 171]
[42 170]
[43 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[62 162]
[64 160]
[65 159]
[66 158]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[75 148]
[76 147]
[77 146]
[78 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
