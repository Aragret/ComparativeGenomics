%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[260.30059814 480.61413574]
[267.94943237 467.69226074]
[276.99700928 455.70803833]
[287.32952881 444.81219482]
[277.66870117 433.33749390]
[268.00790405 421.86279297]
[258.34710693 410.38809204]
[248.68627930 398.91339111]
[239.02546692 387.43869019]
[235.16145325 401.93246460]
[221.48255920 408.08776855]
[208.07235718 401.36715698]
[204.81636047 386.72482300]
[214.11476135 374.95452881]
[229.11161804 374.73220825]
[220.33102417 362.57077026]
[211.55041504 350.40930176]
[202.76980591 338.24786377]
[199.31616211 352.84484863]
[186.62539673 360.84140015]
[171.96737671 357.65667725]
[163.73886108 345.11508179]
[166.65353394 330.40100098]
[179.04173279 321.94329834]
[193.80613708 324.58645630]
[186.14553833 311.69012451]
[178.48493958 298.79379272]
[170.82434082 285.89746094]
[163.16374207 273.00112915]
[150.01165771 266.01028442]
[149.61599731 250.19403076]
[149.06510925 265.18389893]
[142.14157104 278.49047852]
[130.18223572 287.54443359]
[115.49625397 290.59762573]
[100.91925812 287.06051636]
[89.26583862 277.61605835]
[82.78609467 264.08782959]
[82.73115540 249.08792114]
[89.11162567 235.51258850]
[100.69554901 225.98301697]
[115.24623871 222.33920288]
[129.95419312 225.28472900]
[141.98036194 234.25180054]
[136.73364258 220.19934082]
[131.48692322 206.14686584]
[126.24021149 192.09439087]
[114.53990173 182.87744141]
[116.96141052 167.24264526]
[111.71469116 153.19018555]
[106.46797180 139.13771057]
[101.22125244 125.08523560]
[95.97453308 111.03276825]
[93.08859253 125.75252533]
[84.53187561 138.07254028]
[71.74634552 145.91665649]
[56.88659286 147.96301270]
[42.45673370 143.86677551]
[30.88846397 134.31820679]
[24.13123512 120.92642212]
[23.32376099 105.94817352]
[28.60211563 91.90755463]
[39.07680130 81.17065430]
[52.98265076 75.54683685]
[67.97628784 75.98381042]
[81.53101349 82.40793610]
[91.36342621 93.73808289]
[88.91770172 78.93881226]
[86.47197723 64.13954163]
[84.02624512 49.34027100]
[73.30207825 59.82798386]
[58.39801788 58.13414383]
[50.30079269 45.50738907]
[54.97937393 31.25568962]
[68.98488617 25.88487053]
[81.99204254 33.35274124]
[70.14768219 23.23597527]
[69.00334930 8.06544018]
[78.72113800 -3.16399884]
[77.38289642 -18.10418320]
[68.44525909 -31.15903854]
[75.01623535 -44.52584457]
[73.67800140 -59.46603012]
[72.33976746 -74.40621185]
[58.50766373 -80.93462372]
[49.85756683 -93.42752838]
[48.63023376 -108.47279358]
[55.05548096 -122.02167511]
[67.31723022 -130.47833252]
[65.97899628 -145.41851807]
[57.04136276 -158.47337341]
[63.61233521 -171.84017944]
[62.27410126 -186.78036499]
[60.93586731 -201.72055054]
[46.27957916 -205.58952332]
[33.83221436 -214.24047852]
[25.09685326 -226.62875366]
[21.12833214 -241.25839233]
[22.40586853 -256.36282349]
[28.77519608 -270.11810303]
[39.46718597 -280.86318970]
[53.19072723 -287.30059814]
[68.28864288 -288.65295410]
[82.93777466 -284.75698853]
[95.36917114 -276.08309937]
[104.08168793 -263.67877197]
[108.02324677 -249.04182434]
[106.71787262 -233.93977356]
[100.32321167 -220.19625854]
[89.61143494 -209.47088623]
[75.87605286 -203.05877686]
[77.21428680 -188.11859131]
[78.55252075 -173.17840576]
[87.39443970 -161.19218445]
[80.91918182 -146.75674438]
[82.25741577 -131.81655884]
[95.82688904 -125.67368317]
[104.55776215 -113.48237610]
[106.02380371 -98.45849609]
[99.73164368 -84.62717438]
[87.27995300 -75.74445343]
[88.61818695 -60.80426407]
[89.95642090 -45.86407852]
[98.79833984 -33.87784958]
[92.32308197 -19.44241714]
[93.66131592 -4.50223303]
[105.22010040 4.82140493]
[106.79008484 19.95381355]
[96.93222809 32.01450729]
[98.82551575 46.89454269]
[101.27124786 61.69381332]
[103.71697235 76.49308014]
[106.16269684 91.29235840]
[110.02700806 105.78604889]
[115.27372742 119.83851624]
[120.52043915 133.89099121]
[125.76715851 147.94346619]
[131.01388550 161.99592590]
[143.08946228 172.21800232]
[140.29267883 186.84767151]
[145.53939819 200.90014648]
[150.78611755 214.95262146]
[156.03283691 229.00509644]
[162.51232910 242.53343201]
[176.21235657 250.44671631]
[176.06007385 265.34054565]
[183.72067261 278.23687744]
[191.38125610 291.13320923]
[199.04185486 304.02951050]
[206.70245361 316.92584229]
[214.93125916 329.46725464]
[223.71186829 341.62869263]
[232.49247742 353.79016113]
[241.27307129 365.95162964]
[250.50016785 377.77789307]
[260.16098022 389.25259399]
[269.82180786 400.72729492]
[279.48260498 412.20199585]
[289.14340210 423.67669678]
[298.80422974 435.15139771]
[311.30126953 426.82650757]
[324.65185547 419.95318604]
[338.68804932 414.61795044]
[353.23336792 410.88781738]
[368.10485840 408.80975342]
[383.11553955 408.40985107]
[398.07659912 409.69314575]
[412.79989624 412.64352417]
[427.10025024 417.22387695]
[440.79785156 423.37658691]
[453.72042847 431.02429199]
[465.70544434 440.07077026]
[476.60220337 450.40231323]
[486.27365112 461.88894653]
[494.59817505 474.38626099]
[501.47106934 487.73703003]
[506.80590820 501.77340698]
[510.53558350 516.31884766]
[512.61322021 531.19036865]
[513.01269531 546.20104980]
[511.72891235 561.16210938]
[508.77810669 575.88531494]
[504.19732666 590.18548584]
[498.04421997 603.88293457]
[490.39614868 616.80529785]
[481.34927368 628.79003906]
[471.01742554 639.68646240]
[459.53048706 649.35760498]
[447.03292847 657.68176270]
[433.68194580 664.55426025]
[419.64541626 669.88867188]
[405.09988403 673.61791992]
[390.22827148 675.69506836]
[375.21755981 676.09405518]
[360.25659180 674.80987549]
[345.53347778 671.85864258]
[331.23339844 667.27740479]
[317.53616333 661.12390137]
[304.61404419 653.47546387]
[292.62954712 644.42822266]
[281.73342896 634.09600830]
[272.06265259 622.60882568]
[263.73889160 610.11102295]
[256.86679077 596.75982666]
[251.53279114 582.72314453]
[247.80397034 568.17749023]
[245.72723389 553.30578613]
[245.32867432 538.29510498]
[246.61332703 523.33416748]
[249.56503296 508.61114502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[15 154]
[16 153]
[17 152]
[18 151]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[31 144]
[44 143]
[45 142]
[46 141]
[47 140]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[67 133]
[68 132]
[69 131]
[70 130]
[76 129]
[79 126]
[80 125]
[82 123]
[83 122]
[84 121]
[89 116]
[90 115]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
