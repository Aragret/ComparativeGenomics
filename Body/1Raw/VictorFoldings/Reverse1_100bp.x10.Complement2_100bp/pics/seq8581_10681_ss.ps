%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[72.20978546 556.81445312]
[64.21984100 543.84991455]
[62.20027542 528.75549316]
[66.50098419 514.14642334]
[76.37685394 502.55389404]
[90.11682129 495.98632812]
[89.67021942 480.99298096]
[89.22360992 465.99960327]
[88.77700043 451.00625610]
[88.33039856 436.01290894]
[87.88378906 421.01956177]
[87.43718719 406.02621460]
[86.43292236 391.05987549]
[84.87240601 376.14126587]
[82.37831116 373.64889526]
[80.96749878 369.82467651]
[81.25280762 365.19091797]
[83.59062958 360.52383423]
[82.69780731 345.55041504]
[81.80499268 330.57702637]
[80.91217804 315.60360718]
[72.31206512 327.89337158]
[58.47357941 333.68096924]
[43.68471909 331.17303467]
[32.52798080 321.14672852]
[28.46039391 306.70877075]
[32.74235153 292.33291626]
[44.04703903 282.47369385]
[58.87157440 280.18609619]
[72.62242126 286.17895508]
[81.03879547 298.59555054]
[82.15444946 283.63711548]
[83.27009583 268.67864990]
[76.50083923 255.41116333]
[85.24311829 242.22468567]
[86.35876465 227.26623535]
[87.47441101 212.30776978]
[88.59006500 197.34931946]
[89.37138367 182.36968994]
[89.81799316 167.37634277]
[90.26459503 152.38298035]
[87.32164001 145.60354614]
[90.83111572 137.17019653]
[91.50090027 122.18515778]
[92.17069244 107.20011902]
[91.72408295 92.20677185]
[90.16355896 77.28816223]
[88.27027130 62.40813065]
[86.04515076 47.57408524]
[83.82003021 32.74004364]
[81.59491730 17.90599823]
[79.03908539 3.12534547]
[76.15380859 -11.59454632]
[73.26853943 -26.31443787]
[70.38326263 -41.03432846]
[67.49799347 -55.75421906]
[64.61272430 -70.47411346]
[52.19129944 -84.06785583]
[58.52196503 -100.43518829]
[55.41785431 -115.11048889]
[45.05302429 -122.78728485]
[42.76972580 -135.07427979]
[49.25576401 -145.28495789]
[46.37049103 -160.00485229]
[41.64883041 -167.82429504]
[43.55355453 -174.96528625]
[39.58146667 -180.25054932]
[38.96704102 -185.90028381]
[41.03499985 -190.20523071]
[38.80988312 -205.03927612]
[36.58476639 -219.87332153]
[34.24927902 -234.69039917]
[31.80355263 -249.48966980]
[29.35782433 -264.28894043]
[26.91209793 -279.08819580]
[11.90520096 -278.47775269]
[-3.06296635 -279.71612549]
[-17.76548958 -282.78457642]
[-31.97948265 -287.63659668]
[-45.48946381 -294.19860840]
[-58.09062958 -302.37115479]
[-69.59194183 -312.03030396]
[-79.81905365 -323.02966309]
[-88.61691284 -335.20248413]
[-95.85215759 -348.36419678]
[-101.41509247 -362.31530762]
[-105.22139740 -376.84429932]
[-107.21335602 -391.73092651]
[-107.36077881 -406.74951172]
[-105.66143036 -421.67236328]
[-102.14107513 -436.27328491]
[-96.85307312 -450.33090210]
[-89.87759399 -463.63211060]
[-81.32038879 -475.97528076]
[-71.31117249 -487.17327881]
[-60.00168610 -497.05636597]
[-47.56338120 -505.47470093]
[-34.18481827 -512.30065918]
[-20.06880951 -517.43072510]
[-5.42935562 -520.78723145]
[9.51161671 -522.31921387]
[24.52760506 -522.00347900]
[39.39097214 -519.84478760]
[53.87639236 -515.87585449]
[67.76426697 -510.15689087]
[80.84407043 -502.77459717]
[92.91749573 -493.84082031]
[103.80153656 -483.49108887]
[113.33117676 -471.88223267]
[121.36196136 -459.19024658]
[127.77213287 -445.60757446]
[132.46452332 -431.34008789]
[135.36799622 -416.60409546]
[136.43853760 -401.62298584]
[135.65991211 -386.62387085]
[133.04393005 -371.83413696]
[128.63023376 -357.47799683]
[122.48575592 -343.77307129]
[114.70363617 -330.92712402]
[105.40184784 -319.13491821]
[94.72140503 -308.57519531]
[82.82421875 -299.40805054]
[69.89064789 -291.77243042]
[56.11676025 -285.78414917]
[41.71136856 -281.53393555]
[44.15709686 -266.73464966]
[46.60282135 -251.93539429]
[49.04854965 -237.13612366]
[53.24058533 -231.04936218]
[51.41881180 -222.09844971]
[53.64392853 -207.26440430]
[55.86904526 -192.43035889]
[58.31477356 -177.63108826]
[61.09038162 -162.89012146]
[63.97565460 -148.17022705]
[76.20558167 -135.58468628]
[70.09315491 -118.21459961]
[73.19726562 -103.53929901]
[83.16129303 -96.68038940]
[85.86748505 -84.47955322]
[79.33261108 -73.35938263]
[82.21788788 -58.63949203]
[85.10315704 -43.91960144]
[87.98842621 -29.19971085]
[90.87370300 -14.47981834]
[93.75897217 0.24007274]
[96.46547699 2.49997854]
[98.21184540 6.18308353]
[98.34107971 10.82383728]
[96.42896271 15.68088150]
[98.65407562 30.51492500]
[100.87919617 45.34896851]
[103.10430908 60.18301392]
[105.70720673 62.56151581]
[107.28736877 66.31892395]
[107.20925903 70.96082306]
[105.08216095 75.72764587]
[106.64268494 90.64624786]
[114.18399811 77.67980194]
[127.14875793 70.13560486]
[142.14801025 69.98567963]
[155.26098633 77.26921844]
[163.05998230 90.08232117]
[163.50636292 105.07567596]
[156.48344421 118.33005524]
[143.82699585 126.38079834]
[128.84539795 127.12345886]
[115.45478058 120.36389923]
[107.15573120 107.86990356]
[106.48593903 122.85494232]
[105.81615448 137.83998108]
[105.25794983 152.82958984]
[104.81134033 167.82293701]
[104.36473083 182.81629944]
[106.84047699 187.41169739]
[107.26361847 192.03492737]
[105.96729279 195.89945984]
[103.54851532 198.46496582]
[102.43286896 213.42343140]
[101.31721497 228.38188171]
[100.20156860 243.34033203]
[106.89102936 257.67776489]
[98.22854614 269.79431152]
[97.11289978 284.75274658]
[95.99725342 299.71121216]
[95.88558197 314.71078491]
[96.77840424 329.68420410]
[97.67121887 344.65759277]
[98.56403351 359.63101196]
[99.79100800 374.58074951]
[101.35153198 389.49935913]
[112.68093109 379.66854858]
[127.45774078 382.24649048]
[134.78904724 395.33282471]
[129.27049255 409.28076172]
[114.97013855 413.80844116]
[102.43053436 405.57962036]
[102.87714386 420.57296753]
[103.32374573 435.56631470]
[103.77035522 450.55966187]
[104.21695709 465.55300903]
[104.66356659 480.54635620]
[105.11016846 495.53970337]
[119.21669006 501.27783203]
[129.76504517 512.26202393]
[134.92767334 526.58917236]
[133.81013489 541.77697754]
[126.60601807 555.19421387]
[114.56349945 564.51605225]
[99.76901245 568.12762451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[13 191]
[14 190]
[18 189]
[19 188]
[20 187]
[21 186]
[31 185]
[32 184]
[33 183]
[35 181]
[36 180]
[37 179]
[38 178]
[39 174]
[40 173]
[41 172]
[43 171]
[44 170]
[45 169]
[46 158]
[47 157]
[48 153]
[49 152]
[50 151]
[51 150]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[59 138]
[60 137]
[63 135]
[64 134]
[66 133]
[69 132]
[70 131]
[71 130]
[72 128]
[73 127]
[74 126]
[75 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
