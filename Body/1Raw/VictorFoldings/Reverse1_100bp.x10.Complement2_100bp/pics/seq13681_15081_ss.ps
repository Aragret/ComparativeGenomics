%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[65.95205688 620.62225342]
[53.51369476 612.21191406]
[42.05758286 602.50598145]
[31.71804428 591.61834717]
[22.61630058 579.67657471]
[14.85906506 566.82073975]
[8.53728962 553.20153809]
[3.72509265 538.97869873]
[0.47889474 524.31890869]
[-1.16324413 509.39404297]
[-1.18207061 494.37915039]
[0.42263600 479.45025635]
[3.63206124 464.78237915]
[8.40857697 450.54748535]
[14.69617939 436.91247559]
[22.42115021 424.03723145]
[31.49291992 412.07269287]
[41.80512619 401.15911865]
[53.23685837 391.42453003]
[65.65409088 382.98297119]
[78.91123962 375.93350220]
[92.85286713 370.35870361]
[107.31552124 366.32397461]
[104.86978912 351.52471924]
[102.42406464 336.72543335]
[99.97833252 321.92617798]
[97.42250061 307.14550781]
[94.75670624 292.38430786]
[92.09091187 277.62307739]
[82.21489716 266.47348022]
[87.37646484 251.51791382]
[84.71067047 236.75669861]
[80.05056000 251.01445007]
[71.06611633 263.02609253]
[58.70549774 271.52404785]
[44.27313614 275.61148071]
[29.29212379 274.85702515]
[15.34343529 269.34030151]
[3.89911294 259.64352417]
[-3.83309817 246.79000854]
[-7.03719854 232.13621521]
[-5.37505245 217.22859192]
[0.97793043 203.64036560]
[11.35130405 192.80555725]
[24.65034294 185.86758423]
[39.47156525 183.55860901]
[54.25085449 186.12231445]
[67.42851257 193.28816223]
[77.61387634 204.29989624]
[83.73210907 217.99562073]
[76.96285248 204.72813416]
[85.70513153 191.54165649]
[86.82077789 176.58320618]
[87.93642426 161.62474060]
[81.16716766 148.35725403]
[89.90944672 135.17077637]
[91.02509308 120.21232605]
[92.14074707 105.25386810]
[89.70652771 100.60752106]
[90.04884338 94.92807770]
[93.51882935 89.86881256]
[95.07935333 74.95020294]
[96.63987732 60.03160095]
[98.20039368 45.11299515]
[99.76091766 30.19439125]
[97.85276794 26.29401588]
[97.33690643 22.38269806]
[98.04581451 18.89947319]
[99.68659210 16.18387413]
[101.88426971 14.44365978]
[104.32999420 -0.35561129]
[106.77571869 -15.15488243]
[109.22145081 -29.95415306]
[111.66717529 -44.75342560]
[112.78282928 -59.71187592]
[112.55950165 -74.71021271]
[112.33617401 -89.70854950]
[112.11283875 -104.70688629]
[104.17093658 -118.39033508]
[111.71788788 -131.23139954]
[100.65879059 -142.20108032]
[100.64595795 -157.41470337]
[111.17203522 -167.89027405]
[110.94870758 -182.88861084]
[110.72537994 -197.88694763]
[110.50204468 -212.88528442]
[110.27871704 -227.88362122]
[109.83211517 -242.87696838]
[99.56463623 -258.16293335]
[108.25320435 -273.41006470]
[107.36038971 -288.38348389]
[106.46757507 -303.35687256]
[105.57476044 -318.33029175]
[90.85042572 -321.70233154]
[77.67321777 -329.08731079]
[67.11136627 -339.88656616]
[60.02105331 -353.22463989]
[56.97707367 -368.02029419]
[58.22618484 -383.07406616]
[63.66712189 -397.16564941]
[72.85881805 -409.15270996]
[85.05614471 -418.06347656]
[99.27031708 -423.17562866]
[114.34905243 -424.07473755]
[129.06999207 -420.68789673]
[142.23976135 -413.28967285]
[152.79077148 -402.47982788]
[159.86767578 -389.13461304]
[162.89678955 -374.33593750]
[161.63255310 -359.28341675]
[156.17745972 -345.19729614]
[146.97373962 -333.21948242]
[134.76745605 -324.32098389]
[120.54816437 -319.22311401]
[121.44097900 -304.24969482]
[122.33379364 -289.27630615]
[123.22660828 -274.30288696]
[132.06294250 -266.04177856]
[132.92930603 -253.57450867]
[124.81715393 -243.54675293]
[127.67456055 -239.71997070]
[128.15834045 -234.05755615]
[125.27706146 -228.10694885]
[125.50038910 -213.10861206]
[125.72371674 -198.11027527]
[125.94704437 -183.11193848]
[126.17037201 -168.11360168]
[137.00367737 -157.95608521]
[137.44381714 -142.74880981]
[126.71622467 -131.45472717]
[134.64216614 -118.84405518]
[127.11118317 -104.93021393]
[127.33451080 -89.93187714]
[127.55783844 -74.93354034]
[127.78116608 -59.93520355]
[135.72163391 -72.66111755]
[148.35083008 -80.75453949]
[163.23023987 -82.65276337]
[177.48687744 -77.98927307]
[188.36802673 -67.66450500]
[193.77268982 -53.67201996]
[192.65731812 -38.71354675]
[185.23727417 -25.67733002]
[172.94525146 -17.08045769]
[158.15464783 -14.58285332]
[143.72129822 -18.66676521]
[132.43205261 -28.54365158]
[126.46644592 -42.30769730]
[124.02072144 -27.50842476]
[121.57498932 -12.70915508]
[119.12926483 2.09011602]
[116.68354034 16.88938713]
[114.67952728 31.75491524]
[113.11900330 46.67351913]
[111.55847931 61.59212494]
[109.99795532 76.51072693]
[108.43743134 91.42933655]
[107.09919739 106.36952209]
[105.98355103 121.32797241]
[104.86790466 136.28642273]
[111.55735779 150.62385559]
[102.89488220 162.74040222]
[101.77922821 177.69885254]
[100.66358185 192.65730286]
[107.35304260 206.99472046]
[98.69055939 219.11126709]
[99.47188568 234.09091187]
[102.13768005 248.85212708]
[112.20437622 261.05755615]
[106.85212708 274.95727539]
[109.51792145 289.71850586]
[112.18372345 304.47970581]
[116.78843689 312.36859131]
[114.77760315 319.48043823]
[117.22333527 334.27972412]
[119.66905975 349.07897949]
[122.11479187 363.87826538]
[137.10656738 363.04534912]
[152.10052490 363.83822632]
[166.92083740 366.24765015]
[181.39378357 370.24530029]
[195.34963989 375.78436279]
[208.62480164 382.79986572]
[221.06361389 391.20956421]
[232.52024841 400.91488647]
[242.86038208 411.80197144]
[251.96276855 423.74322510]
[259.72070312 436.59866333]
[266.04321289 450.21749878]
[270.85617065 464.44012451]
[274.10314941 479.09973145]
[275.74609375 494.02447510]
[275.76571655 509.03936768]
[274.16183472 523.96838379]
[270.95318604 538.63641357]
[266.17742920 552.87158203]
[259.89056396 566.50689697]
[252.16629028 579.38256836]
[243.09516907 591.34759521]
[232.78355408 602.26171875]
[221.35234070 611.99694824]
[208.93556213 620.43914795]
[195.67878723 627.48931885]
[181.73745728 633.06488037]
[167.27502441 637.10040283]
[152.46105957 639.54852295]
[137.46922302 640.38067627]
[122.47531891 639.58697510]
[107.65512848 637.17675781]
[93.18240356 633.17828369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 177]
[24 176]
[25 175]
[26 174]
[27 172]
[28 171]
[29 170]
[31 168]
[32 167]
[50 166]
[52 164]
[53 163]
[54 162]
[56 160]
[57 159]
[58 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 135]
[76 134]
[77 133]
[78 132]
[80 130]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 120]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
