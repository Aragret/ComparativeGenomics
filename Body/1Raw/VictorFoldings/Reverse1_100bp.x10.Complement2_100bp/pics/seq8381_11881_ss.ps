%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[76.89780426 476.37277222]
[64.97694397 486.74911499]
[49.21643066 485.57366943]
[38.96669388 473.54376221]
[40.30872726 457.79653931]
[52.44632339 447.67459106]
[53.56197357 432.71612549]
[54.67761993 417.75765991]
[55.79327011 402.79922485]
[56.90891647 387.84075928]
[48.44831848 372.46594238]
[58.94224548 357.33456421]
[59.83506012 342.36114502]
[60.72787857 327.38772583]
[61.62069321 312.41433716]
[48.84000397 320.26632690]
[34.68126297 315.31356812]
[29.58176613 301.20700073]
[37.30067062 288.34548950]
[52.14789200 286.21005249]
[63.17798996 296.37332153]
[56.09569931 286.56680298]
[57.64361572 274.16567993]
[67.53313446 265.88558960]
[69.75825500 251.05154419]
[71.98336792 236.21749878]
[74.20848846 221.38345337]
[65.17632294 209.59550476]
[67.22159576 194.51998901]
[79.64710999 185.12614441]
[81.87223053 170.29209900]
[84.09734344 155.45805359]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[91.01380920 57.18966293]
[100.55348969 45.75096512]
[102.77860260 30.91691971]
[105.00372314 16.08287621]
[91.32695007 9.69336987]
[80.01618958 -0.28104857]
[71.98244476 -13.02561665]
[67.86956024 -27.50292587]
[68.00263214 -42.53736115]
[72.36231995 -56.91057205]
[80.58713531 -69.46019745]
[92.00337219 -79.17387390]
[105.68027496 -85.27088165]
[120.50596619 -87.26492310]
[122.73108673 -102.09896851]
[124.95619965 -116.93301392]
[127.18132019 -131.76705933]
[120.15641785 -142.58433533]
[122.31511688 -154.89384460]
[131.96293640 -162.19082642]
[134.40866089 -176.99009705]
[136.85440063 -191.78936768]
[139.30012512 -206.58863831]
[141.63560486 -221.40570068]
[143.86073303 -236.23974609]
[145.31015015 -251.16955566]
[145.97993469 -266.15460205]
[146.64971924 -281.13964844]
[147.31950378 -296.12466431]
[147.98928833 -311.10971069]
[133.09684753 -312.96862793]
[118.39919281 -316.00488281]
[103.98922729 -320.19927979]
[89.95806122 -325.52529907]
[76.39440155 -331.94924927]
[63.38401413 -339.43057251]
[51.00914764 -347.92190552]
[39.34804535 -357.36956787]
[28.47442818 -367.71386719]
[18.45704651 -378.88940430]
[9.35923672 -390.82546997]
[1.23851585 -403.44665527]
[-5.85377264 -416.67312622]
[-11.87278843 -430.42126465]
[-16.78047752 -444.60415649]
[-20.54581070 -459.13214111]
[-23.14498329 -473.91336060]
[-24.56155968 -488.85437012]
[-24.78658485 -503.86068726]
[-23.81863785 -518.83740234]
[-21.66383743 -533.68994141]
[-18.33580589 -548.32427979]
[-13.85558510 -562.64794922]
[-8.25150204 -576.57043457]
[-1.55898595 -590.00360107]
[6.17964888 -602.86254883]
[14.91547585 -615.06610107]
[24.59326363 -626.53692627]
[35.15182495 -637.20263672]
[46.52440643 -646.99572754]
[58.63910294 -655.85424805]
[71.41932678 -663.72229004]
[84.78426361 -670.55010986]
[98.64942169 -676.29443359]
[112.92714691 -680.91900635]
[127.52716064 -684.39459229]
[142.35716248 -686.69921875]
[157.32337952 -687.81829834]
[172.33120728 -687.74475098]
[187.28573608 -686.47906494]
[202.09243774 -684.02923584]
[216.65768433 -680.41070557]
[230.88940430 -675.64642334]
[244.69761658 -669.76654053]
[257.99499512 -662.80810547]
[270.69750977 -654.81518555]
[282.72479248 -645.83831787]
[294.00085449 -635.93426514]
[304.45440674 -625.16564941]
[314.01931763 -613.60046387]
[322.63513184 -601.31195068]
[330.24737549 -588.37774658]
[336.80792236 -574.87963867]
[342.27532959 -560.90295410]
[346.61495972 -546.53607178]
[349.79940796 -531.86975098]
[351.80856323 -516.99688721]
[352.62969971 -502.01135254]
[352.25762939 -487.00796509]
[350.69470215 -472.08157349]
[347.95080566 -457.32653809]
[344.04327393 -442.83615112]
[338.99682617 -428.70202637]
[332.84338379 -415.01351929]
[325.62182617 -401.85717773]
[317.37780762 -389.31619263]
[308.16345215 -377.46984863]
[298.03704834 -366.39303589]
[287.06256104 -356.15579224]
[275.30944824 -346.82281494]
[262.85195923 -338.45318604]
[249.76887512 -331.09973145]
[236.14292908 -324.80899048]
[222.06024170 -319.62072754]
[207.60986328 -315.56774902]
[192.88314819 -312.67568970]
[177.97322083 -310.96279907]
[162.97431946 -310.43994141]
[162.30453491 -295.45489502]
[161.63475037 -280.46984863]
[160.96496582 -265.48480225]
[160.29518127 -250.49977112]
[171.30538940 -260.68679810]
[186.28117371 -261.53884888]
[198.37579346 -252.66642761]
[202.05976868 -238.12585449]
[195.64881897 -224.56488037]
[182.07395935 -218.18342590]
[167.54142761 -221.89897156]
[158.69476318 -234.01463318]
[156.46965027 -219.18058777]
[158.58615112 -212.09947205]
[154.09939575 -204.14291382]
[151.65367126 -189.34364319]
[149.20793152 -174.54437256]
[146.76220703 -159.74510193]
[153.81739807 -143.67677307]
[142.01536560 -129.54193115]
[139.79023743 -114.70789337]
[137.56512451 -99.87384796]
[135.34001160 -85.03980255]
[148.92816162 -78.78366852]
[160.21429443 -68.94218445]
[168.27809143 -56.30649185]
[172.45887756 -41.89601517]
[172.40960693 -26.87623978]
[168.12571716 -12.46442986]
[159.94619751 0.16900952]
[148.52676392 9.99558735]
[134.78730774 16.21245384]
[119.83776855 18.30799294]
[117.61264801 33.14203644]
[115.38753510 47.97608185]
[121.15125275 61.71030045]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[98.93138885 157.68316650]
[96.70626831 172.51721191]
[94.48115540 187.35125732]
[103.60367584 199.97732544]
[101.13577271 214.98945618]
[89.04253387 223.60856628]
[86.81741333 238.44261169]
[84.59230042 253.27665710]
[82.36717987 268.11068726]
[89.50265503 285.08618164]
[78.04351807 298.37734985]
[76.59410095 313.30715942]
[75.70128632 328.28054810]
[74.80846405 343.25396729]
[73.91564941 358.22735596]
[81.87760925 368.37478638]
[80.82572174 380.82778931]
[71.86737061 388.95642090]
[70.75172424 403.91485596]
[69.63607788 418.87332153]
[68.52042389 433.83178711]
[67.40477753 448.79022217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[12 203]
[13 202]
[14 201]
[15 200]
[21 199]
[24 197]
[25 196]
[26 195]
[27 194]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[37 184]
[38 183]
[40 181]
[41 180]
[42 179]
[52 169]
[53 168]
[54 167]
[55 166]
[58 164]
[59 163]
[60 162]
[61 161]
[62 159]
[63 158]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
