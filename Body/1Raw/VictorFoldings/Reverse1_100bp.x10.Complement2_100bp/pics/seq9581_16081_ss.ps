%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[85.35758209 443.07540894]
[90.99422455 428.71466064]
[103.51346588 419.69952393]
[102.62064362 404.72613525]
[101.72782898 389.75271606]
[93.24671173 377.50854492]
[100.14888763 363.27230835]
[99.25607300 348.29891968]
[90.77494812 336.05471802]
[97.67713165 321.81848145]
[96.78431702 306.84509277]
[95.89150238 291.87167358]
[94.99868774 276.89828491]
[92.08461761 273.11447144]
[91.51658630 267.45986938]
[94.30895233 261.46704102]
[93.86235046 246.47367859]
[93.41574097 231.48033142]
[85.30293274 218.98907471]
[92.62592316 204.96464539]
[92.17931366 189.97129822]
[91.73271179 174.97795105]
[89.43090057 172.30699158]
[88.30842590 168.38842773]
[88.93759155 163.78871155]
[91.61605835 159.30842590]
[91.83938599 144.31008911]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[83.74071503 99.87895203]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[92.50000000 40.57332230]
[92.50000000 25.57332039]
[89.53043365 19.66627121]
[89.92986298 13.99727821]
[92.72998047 10.12837791]
[93.17658234 -4.86497211]
[93.62319183 -19.85832214]
[90.95739746 -34.61953735]
[85.29460907 -48.50956726]
[79.63182068 -62.39959335]
[73.96903229 -76.28961945]
[68.30625153 -90.17964935]
[64.11742401 -75.77639008]
[52.87678146 -65.84422302]
[38.06735992 -63.46072769]
[24.27801895 -69.36446381]
[15.78153515 -81.72608185]
[15.21063614 -96.71521759]
[22.74222183 -109.68730927]
[36.04254913 -116.62282562]
[50.99036407 -115.37271118]
[62.95408249 -106.32411957]
[59.19778061 -120.84618378]
[55.44147873 -135.36824036]
[51.08729172 -140.34344482]
[50.05435944 -145.93182373]
[51.79640579 -150.37866211]
[48.47414780 -165.00611877]
[43.52176285 -172.68151855]
[45.21303177 -179.87605286]
[42.10892105 -194.55136108]
[39.00481033 -209.22665405]
[35.90069962 -223.90196228]
[32.79658890 -238.57727051]
[29.47433090 -253.20472717]
[25.93465805 -267.78109741]
[22.39498520 -282.35748291]
[18.85531425 -296.93383789]
[3.94960499 -295.10726929]
[-11.06736946 -295.02352905]
[-25.99252129 -296.68377686]
[-40.62400436 -300.06552124]
[-54.76395035 -305.12301636]
[-68.22112274 -311.78793335]
[-80.81353760 -319.97009277]
[-92.37088776 -329.55883789]
[-102.73688507 -340.42449951]
[-111.77133179 -352.42013550]
[-119.35205078 -365.38351440]
[-125.37651825 -379.13934326]
[-129.76327515 -393.50152588]
[-132.45297241 -408.27590942]
[-133.40924072 -423.26263428]
[-132.61917114 -438.25903320]
[-130.09341431 -453.06231689]
[-125.86614990 -467.47229004]
[-119.99453735 -481.29403687]
[-112.55799103 -494.34063721]
[-103.65707397 -506.43569946]
[-93.41217041 -517.41558838]
[-81.96182251 -527.13189697]
[-69.46089172 -535.45312500]
[-56.07842636 -542.26678467]
[-41.99541473 -547.48077393]
[-27.40231895 -551.02447510]
[-12.49648952 -552.85009766]
[2.52049065 -552.93280029]
[17.44553185 -551.27160645]
[32.07678986 -547.88885498]
[46.21639633 -542.83038330]
[59.67312622 -536.16461182]
[72.26499176 -527.98162842]
[83.82170868 -518.39208984]
[94.18697357 -507.52572632]
[103.22061920 -495.52951050]
[110.80047607 -482.56561279]
[116.82402802 -468.80938721]
[121.20981598 -454.44689941]
[123.89852905 -439.67236328]
[124.85380554 -424.68554688]
[124.06272888 -409.68920898]
[121.53598785 -394.88607788]
[117.30776215 -380.47640991]
[111.43522644 -366.65505981]
[103.99781036 -353.60894775]
[95.09609222 -341.51446533]
[84.85044861 -330.53524780]
[73.39945221 -320.81973267]
[60.89796448 -312.49932861]
[47.51504517 -305.68655396]
[33.43169022 -300.47351074]
[36.97136307 -285.89715576]
[40.51103210 -271.32077026]
[44.05070496 -256.74438477]
[47.59084320 -253.53869629]
[49.15476608 -248.07507324]
[47.47189331 -241.68136597]
[50.57600403 -227.00607300]
[53.68011475 -212.33076477]
[56.78422165 -197.65547180]
[59.88833237 -182.98016357]
[63.10160828 -168.32836914]
[66.42386627 -153.70091248]
[69.96353912 -139.12454224]
[73.71984100 -124.60248566]
[77.47614288 -110.08042145]
[82.19627380 -95.84243011]
[87.85906219 -81.95240784]
[93.52185059 -68.06237793]
[99.18463135 -54.17235184]
[104.84741974 -40.28232574]
[105.91023254 -55.24462509]
[110.01930237 -69.67083740]
[116.99991608 -82.94754791]
[126.55525208 -94.51022339]
[138.27902222 -103.86721802]
[151.67271423 -110.62065887]
[166.16682434 -114.48339844]
[181.14505005 -115.29118347]
[195.97053528 -113.00966644]
[210.01286316 -107.73586273]
[222.67495728 -99.69400787]
[233.41841125 -89.22605896]
[241.78642273 -76.77710724]
[247.42318726 -62.87649536]
[250.08898926 -48.11528397]
[249.67051697 -33.12112045]
[246.18554688 -18.53157234]
[239.78225708 -4.96698952]
[230.73292542 6.99585295]
[219.42233276 16.84828949]
[206.33140564 24.17138863]
[192.01679993 28.65377045]
[177.08714294 30.10483932]
[162.17727661 28.46289825]
[147.92117310 23.79776001]
[134.92501831 16.30779076]
[123.74138641 6.31146669]
[114.84583282 -5.76616287]
[108.61653900 -19.41171646]
[108.16993713 -4.41836596]
[107.72332764 10.57498360]
[107.50000000 25.57332039]
[107.50000000 40.57332230]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[115.22412872 94.28992462]
[115.13742828 105.93611145]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[106.83772278 144.53341675]
[106.61439514 159.53175354]
[106.72605896 174.53134155]
[107.17266846 189.52468872]
[107.61927032 204.51803589]
[115.76402283 218.08172607]
[108.40909576 231.03372192]
[108.85569763 246.02706909]
[109.30230713 261.02041626]
[109.97209167 276.00546265]
[110.86490631 290.97888184]
[111.75772095 305.95227051]
[112.65053558 320.92568970]
[121.19551849 334.24084473]
[114.22947693 347.40609741]
[115.12229919 362.37948608]
[123.66728210 375.69467163]
[116.70124054 388.85992432]
[117.59405518 403.83331299]
[118.48686981 418.80673218]
[131.98867798 426.27029419]
[139.29188538 439.85949707]
[138.06608582 455.23806763]
[128.70240784 467.49880981]
[114.18877411 472.72927856]
[99.15643311 469.26052856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[7 200]
[8 199]
[10 197]
[11 196]
[12 195]
[13 194]
[16 193]
[17 192]
[18 191]
[20 189]
[21 188]
[22 187]
[26 186]
[27 185]
[28 184]
[29 183]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[38 175]
[39 174]
[40 173]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[55 139]
[56 138]
[57 137]
[60 136]
[61 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 127]
[69 126]
[70 125]
[71 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
