%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[76.51239014 506.10012817]
[61.71404266 508.79244995]
[46.67277527 508.79895020]
[31.87210464 506.11944580]
[17.78780746 500.83999634]
[4.87264013 493.13037109]
[-6.45823097 483.23840332]
[-15.84056377 471.48205566]
[-22.97275543 458.23925781]
[-27.62553787 443.93572998]
[-29.64933968 429.03121948]
[-28.97910500 414.00491333]
[-25.63637924 399.33978271]
[-19.72861862 385.50726318]
[-11.44573212 372.95205688]
[-1.05398047 362.07769775]
[11.11258507 353.23382568]
[24.66285896 346.70465088]
[39.16125488 342.70013428]
[54.14171219 341.34896851]
[55.47994995 326.40878296]
[48.90897369 313.04196167]
[57.84661102 299.98712158]
[59.18484497 285.04693604]
[60.52307892 270.10675049]
[58.20254898 265.93252563]
[58.47960663 260.25622559]
[62.13006973 254.74391174]
[63.91253662 239.85018921]
[65.69499969 224.95646667]
[67.47747040 210.06275940]
[69.25993347 195.16903687]
[71.04239655 180.27531433]
[61.17232895 191.57052612]
[47.21725082 197.07106018]
[32.29476929 195.54808044]
[19.73859787 187.34182739]
[12.35382175 174.28559875]
[11.79021835 159.29618835]
[18.17369843 145.72227478]
[30.07817459 136.59629822]
[44.84415817 133.95703125]
[59.17288971 138.39408875]
[69.86329651 148.91621399]
[74.52710724 163.17277527]
[78.71411896 148.76899719]
[82.79378510 134.33444214]
[86.76588440 119.86991119]
[90.73797607 105.40538788]
[92.52044678 90.51167297]
[92.07383728 75.51831818]
[82.03507996 60.08119583]
[90.94969940 44.96509171]
[90.27991486 29.98005486]
[89.61012268 14.99501514]
[88.94033813 0.00997661]
[88.27055359 -14.97506237]
[86.48809052 -29.86878014]
[83.60281372 -44.58867264]
[80.71754456 -59.30856323]
[77.83227539 -74.02845001]
[74.94699860 -88.74834442]
[71.19069672 -103.27040100]
[66.57669067 -117.54313660]
[61.96268082 -131.81587219]
[57.34867096 -146.08860779]
[52.73466110 -160.36134338]
[36.58598709 -165.39288330]
[26.71635628 -178.92401123]
[26.85534096 -195.50540161]
[36.75008774 -208.60392761]
[31.92408752 -222.80639648]
[27.09809113 -237.00885010]
[22.27209282 -251.21130371]
[17.44609451 -265.41375732]
[5.68021107 -275.99084473]
[8.91133595 -290.53076172]
[-5.95141745 -288.23516846]
[-20.98699188 -288.55554199]
[-35.73847198 -291.48214722]
[-49.75757599 -296.92602539]
[-62.61828232 -304.72177124]
[-73.92976379 -314.63244629]
[-83.34828186 -326.35687256]
[-90.58761597 -339.53881836]
[-95.42777252 -353.77761841]
[-97.72166443 -368.64062500]
[-97.39957428 -383.67617798]
[-94.47130585 -398.42733765]
[-89.02584076 -412.44580078]
[-81.22865295 -425.30563354]
[-71.31669617 -436.61599731]
[-59.59117889 -446.03317261]
[-46.40843201 -453.27102661]
[-32.16906357 -458.10955811]
[-17.30578804 -460.40176392]
[-2.27028775 -460.07797241]
[12.48052788 -457.14804077]
[26.49839783 -451.70095825]
[39.35733414 -443.90231323]
[50.66656876 -433.98907471]
[60.08242798 -422.26251221]
[67.31877136 -409.07894897]
[72.15569305 -394.83901978]
[74.44621277 -379.97549438]
[74.12071991 -364.94003296]
[71.18910980 -350.18954468]
[65.74045563 -336.17227173]
[57.94035339 -323.31423950]
[48.02582932 -312.00613403]
[36.29817963 -302.59158325]
[23.11379242 -295.35675049]
[34.53448868 -285.79553223]
[31.64855003 -270.23974609]
[36.47454834 -256.03729248]
[41.30054474 -241.83483887]
[46.12654495 -227.63238525]
[50.95254135 -213.42993164]
[64.01596832 -210.67510986]
[74.09313965 -201.75352478]
[78.48097992 -188.91543579]
[75.93217468 -175.47959900]
[67.00739288 -164.97534180]
[71.62140656 -150.70260620]
[76.23541260 -136.42988586]
[80.84942627 -122.15715027]
[85.46343231 -107.88441467]
[91.38661194 -121.66541290]
[104.21949768 -129.43182373]
[119.17574310 -128.28695679]
[130.67703247 -118.65781403]
[134.43368530 -104.13584900]
[129.04454041 -90.13737488]
[116.51963806 -81.88349152]
[101.53044128 -82.45268250]
[89.66689301 -91.63362122]
[92.55216217 -76.91372681]
[95.43743896 -62.19383621]
[98.32270813 -47.47394180]
[101.20798492 -32.75405121]
[107.56241608 -46.34159088]
[119.80241394 -55.01236725]
[134.72846985 -56.49986267]
[148.43896484 -50.41525269]
[157.34999084 -38.34903336]
[159.13223267 -23.45528793]
[153.31980896 -9.62720776]
[141.43209839 -0.47941756]
[126.57648468 1.59687114]
[112.63621521 -3.94107795]
[103.25559235 -15.64484692]
[103.92537689 -0.65980852]
[104.59516144 14.32523060]
[105.26495361 29.31026840]
[105.93473816 44.29530716]
[114.64709473 52.68705368]
[115.32774353 65.16585541]
[107.06719208 75.07171631]
[107.51379395 90.06506348]
[113.94472504 76.51356506]
[123.89000702 65.28452301]
[136.56530762 57.26350784]
[150.97100830 53.08308411]
[165.97100830 53.07294464]
[180.38233948 57.23388290]
[193.06846619 65.23775482]
[203.02893066 76.45333862]
[209.47817993 89.99613190]
[211.90760803 104.79808044]
[210.12562561 119.69185638]
[204.27276611 133.50286865]
[194.81060791 145.14192200]
[182.48536682 153.69111633]
[168.26908875 158.47621155]
[153.28289795 159.11985779]
[138.70869446 155.57127380]
[125.69583893 148.11033630]
[115.27059174 137.32542419]
[108.25513458 124.06709290]
[105.20249939 109.37748718]
[101.23040771 123.84201050]
[97.25830841 138.30653381]
[98.00353241 147.41050720]
[93.11790466 152.95599365]
[88.93089294 167.35978699]
[85.93611908 182.05778503]
[84.15364838 196.95150757]
[82.37118530 211.84521484]
[80.58872223 226.73893738]
[78.80625153 241.63265991]
[77.02378845 256.52636719]
[75.46326447 271.44497681]
[74.12503052 286.38516235]
[72.78679657 301.32534790]
[79.26205444 315.76077271]
[70.42013550 327.74700928]
[69.08190155 342.68719482]
[83.58375549 346.67916870]
[97.13967133 353.19662476]
[109.31388092 362.02996826]
[119.71503448 372.89532471]
[128.00877380 385.44338989]
[133.92849731 399.27078247]
[137.28390503 413.93301392]
[137.96713257 428.95874023]
[135.95622253 443.86499023]
[131.31582642 458.17254639]
[124.19508362 471.42150879]
[114.82292175 483.18597412]
[103.50061035 493.08773804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 197]
[21 196]
[23 194]
[24 193]
[25 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[45 185]
[46 184]
[47 182]
[48 181]
[49 180]
[50 159]
[51 158]
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
