%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[169.69158936 693.09179688]
[155.37471008 697.75231934]
[140.40165710 699.33392334]
[125.42701721 697.76757812]
[111.10539246 693.12164307]
[98.06286621 685.59924316]
[86.86961365 675.52923584]
[78.01494598 663.35186768]
[71.88595581 649.59942627]
[68.75057220 634.87316895]
[68.74586487 619.81683350]
[71.87203217 605.08856201]
[77.99242401 591.33233643]
[86.83946991 579.14941406]
[98.02642822 569.07244873]
[111.06423950 561.54187012]
[125.38295746 556.88702393]
[140.35662842 555.31121826]
[141.91714478 540.39263916]
[143.47767639 525.47406006]
[145.03819275 510.55541992]
[146.59872437 495.63684082]
[148.15924072 480.71823120]
[148.15924072 465.71823120]
[146.59872437 450.79962158]
[145.03819275 435.88101196]
[143.47767639 420.96240234]
[141.91714478 406.04379272]
[140.35662842 391.12521362]
[129.29829407 377.49874878]
[136.93603516 360.74325562]
[135.15356445 345.84951782]
[133.37109375 330.95581055]
[131.03561401 316.13873291]
[128.15034485 301.41885376]
[125.26506805 286.69897461]
[122.37979126 271.97906494]
[108.78529358 270.91171265]
[95.92005157 266.35281372]
[84.66567230 258.60778809]
[75.79518890 248.20060730]
[69.91996765 235.83833313]
[67.44757080 222.36314392]
[68.55351257 208.69493103]
[73.16878510 195.76850891]
[80.98413849 184.46968079]
[91.47080231 175.57450867]
[103.91624451 169.69607544]
[101.47052002 154.89680481]
[99.02479553 140.09753418]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.58226776 81.01788330]
[85.69699860 66.29799652]
[75.44969940 54.24380493]
[80.59440613 40.26591873]
[77.70912933 25.54602814]
[74.71435547 10.84802437]
[71.61024475 -3.82727814]
[68.50613403 -18.50258064]
[64.80114746 -3.96734452]
[58.19366837 9.49895382]
[48.96464539 21.32372093]
[37.50650024 31.00415993]
[24.30644226 38.12865829]
[9.92574215 42.39427185]
[-5.02412367 43.61962891]
[-19.90748024 41.75262833]
[-34.09148026 36.87265396]
[-46.97301102 29.18720245]
[-58.00434494 19.02306366]
[-66.71642303 6.81242609]
[-72.73880005 -6.92551136]
[-75.81541443 -21.60660362]
[-75.81542969 -36.60660553]
[-72.73885345 -51.28770447]
[-66.71650696 -65.02565765]
[-58.00445938 -77.23631287]
[-46.97315216 -87.40048218]
[-34.09163666 -95.08596039]
[-19.90764999 -99.96597290]
[-5.02429819 -101.83300781]
[9.92557144 -100.60768890]
[24.30628014 -96.34210205]
[37.50635529 -89.21764374]
[48.96452332 -79.53722382]
[58.19357681 -67.71248627]
[64.80109406 -54.24620056]
[68.50613403 -39.71080017]
[71.61024475 -54.38610458]
[74.71435547 -69.06140900]
[77.81846619 -83.73670959]
[80.92257690 -98.41201019]
[76.20858002 -113.51461792]
[86.41218567 -124.36522675]
[87.97270966 -139.28382874]
[87.97270966 -154.28382874]
[87.97270966 -169.28382874]
[87.97270966 -184.28382874]
[74.63157654 -191.89369202]
[66.89660645 -205.16265869]
[66.84846497 -220.52148438]
[74.50009918 -233.83869934]
[87.79325867 -241.53202820]
[103.15215302 -241.53202820]
[116.44531250 -233.83869934]
[124.09694672 -220.52148438]
[124.04880524 -205.16265869]
[116.31383514 -191.89369202]
[102.97270966 -184.28382874]
[102.97270966 -169.28382874]
[102.97270966 -154.28382874]
[102.97270966 -139.28382874]
[110.59204102 -152.20458984]
[122.52956390 -161.28727722]
[137.01441956 -165.18457031]
[151.89787292 -163.31831360]
[164.97204590 -155.96533203]
[174.29745483 -144.21643066]
[178.49073792 -129.81448364]
[176.92985535 -114.89591217]
[169.84632874 -101.67382050]
[158.29098511 -92.10961151]
[143.97798157 -87.62209320]
[129.03056335 -88.87694550]
[115.66609192 -95.68803406]
[105.86711121 -107.04496765]
[101.08748627 -121.26111603]
[106.02351379 -107.20818329]
[95.59787750 -95.30789948]
[92.49376678 -80.63259888]
[89.38965607 -65.95729828]
[86.28554535 -51.28199387]
[83.18143463 -36.60668945]
[83.18143463 -21.60669136]
[86.28554535 -6.93138838]
[89.38965607 7.74391413]
[93.84929657 13.63741779]
[92.42902374 22.66075516]
[95.31429291 37.38064575]
[105.35521698 48.38196945]
[100.41688538 63.41271973]
[103.30216217 78.13261414]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[113.82406616 137.65180969]
[116.26979065 152.45108032]
[118.71551514 167.25035095]
[135.00849915 169.53977966]
[149.78207397 176.73916626]
[161.59802246 188.13481140]
[169.30998230 202.60516357]
[172.17472839 218.73117065]
[169.92370605 234.93540955]
[162.78822327 249.63644409]
[151.47573853 261.40307617]
[137.09968567 269.09381104]
[139.98495483 283.81369019]
[142.87022400 298.53356934]
[145.75550842 313.25347900]
[156.16265869 302.45111084]
[171.11054993 303.70043945]
[179.58012390 316.08053589]
[175.32794189 330.46520996]
[161.48855591 336.25064087]
[148.26481628 329.17333984]
[150.04728699 344.06707764]
[151.82974243 358.96078491]
[161.46835327 367.53167725]
[162.64636230 379.97338867]
[155.27523804 389.56466675]
[156.83575439 404.48327637]
[158.39627075 419.40188599]
[159.95680237 434.32049561]
[161.51731873 449.23910522]
[163.07785034 464.15771484]
[169.31163025 450.51437378]
[180.23945618 440.23904419]
[194.24026489 434.85598755]
[209.23710632 435.16372681]
[223.00529480 441.11660767]
[233.50239563 451.83160400]
[239.17123413 465.71914673]
[239.17086792 480.71914673]
[233.50134277 494.60644531]
[223.00372314 505.32089233]
[209.23524475 511.27313232]
[194.23838806 511.58013916]
[180.23783875 506.19638062]
[169.31051636 495.92050171]
[163.07785034 482.27874756]
[161.51731873 497.19735718]
[159.95680237 512.11596680]
[158.39627075 527.03454590]
[156.83575439 541.95318604]
[155.27523804 556.87176514]
[169.59867859 561.51208496]
[182.64416504 569.02929688]
[193.84138489 579.09490967]
[202.70083618 591.26879883]
[208.83523560 605.01879883]
[211.97640991 619.74383545]
[211.98704529 634.80023193]
[208.86666870 649.52966309]
[202.75169373 663.28833008]
[193.90943909 675.47473145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[31 172]
[32 171]
[33 170]
[34 164]
[35 163]
[36 162]
[37 161]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 145]
[54 144]
[55 143]
[57 141]
[58 140]
[59 138]
[60 137]
[61 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[96 129]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
