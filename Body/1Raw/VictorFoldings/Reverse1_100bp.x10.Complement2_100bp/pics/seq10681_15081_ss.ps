%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[144.10523987 483.57733154]
[154.59506226 472.80886841]
[166.67649841 463.86264038]
[159.79708862 450.53320312]
[152.91767883 437.20379639]
[146.03826904 423.87435913]
[133.32560730 416.11306763]
[133.87205505 400.30130005]
[126.99263763 386.97189331]
[115.56802368 382.99636841]
[109.72758484 371.94769287]
[113.08448029 359.49401855]
[110.47293854 358.47518921]
[108.10762024 356.36050415]
[106.40793610 353.23858643]
[105.75351715 349.34805298]
[106.43331909 345.05947876]
[100.56435394 331.25531006]
[94.69539642 317.45111084]
[88.82643127 303.64694214]
[87.95516205 318.62161255]
[84.21832275 333.14868164]
[77.75563049 346.68508911]
[68.80869293 358.72470093]
[57.71199417 368.81741333]
[44.88039398 376.58596802]
[30.79361725 381.73986816]
[15.97830200 384.08642578]
[0.98833269 383.53796387]
[-13.61588097 380.11499023]
[-27.28834915 373.94540405]
[-39.51791763 365.25991821]
[-49.84737396 354.38323975]
[-57.89054489 341.72198486]
[-63.34672928 327.74951172]
[-66.01194000 312.98818970]
[-65.78654480 297.98986816]
[-62.67897034 283.31530762]
[-56.80538559 269.51309204]
[-48.38538742 257.09924316]
[-37.73375702 246.53785706]
[-25.24871826 238.22378540]
[-11.39703369 232.46784973]
[3.30344415 229.48524475]
[18.30312538 229.38746643]
[33.04123688 232.17817688]
[46.96678162 237.75305176]
[59.55914688 245.90365601]
[70.34754944 256.32528687]
[78.92867279 268.62829590]
[84.97977448 282.34698486]
[85.64955902 267.36193848]
[85.87288666 252.36360168]
[85.64955902 237.36526489]
[85.42623138 222.36692810]
[85.20290375 207.36859131]
[74.00547791 217.34944153]
[59.02288818 216.62690735]
[48.83785248 205.61486816]
[49.28481674 190.62152100]
[60.10774231 180.23574829]
[75.10676575 180.40698242]
[85.68939972 191.03627014]
[86.80504608 176.07780457]
[87.92069244 161.11935425]
[89.03634644 146.16090393]
[90.15199280 131.20245361]
[75.73242950 121.94677734]
[67.96792603 106.67250061]
[68.98778534 89.56837463]
[78.51233673 75.32498169]
[93.92958832 67.84838867]
[94.59937286 52.86334610]
[95.26915741 37.87830734]
[95.71576691 22.88495827]
[95.93909454 7.88662052]
[92.93779755 -0.74066448]
[96.27906036 -7.33291674]
[93.40654755 -16.00393105]
[96.84558105 -22.54570580]
[97.51536560 -37.53074265]
[90.40199280 -51.66263962]
[98.69987488 -64.03173065]
[99.36965942 -79.01676941]
[100.03944397 -94.00180817]
[91.92729187 -104.02955627]
[92.79365540 -116.49684143]
[101.62998962 -124.75794220]
[102.52280426 -139.73135376]
[93.90131378 -156.00253296]
[104.12897491 -170.26303101]
[104.79875946 -185.24807739]
[105.46854401 -200.23310852]
[98.35517120 -214.36500549]
[106.65305328 -226.73410034]
[92.22467804 -231.12417603]
[79.34178925 -238.96522522]
[68.81422424 -249.76434326]
[61.30374527 -262.84271240]
[57.28247070 -277.37817383]
[57.00318527 -292.45706177]
[60.48344040 -307.13150024]
[67.50446320 -320.47900391]
[77.62491608 -331.66055298]
[90.20860291 -339.97329712]
[104.46451569 -344.89465332]
[119.49651337 -346.11526489]
[134.35966492 -343.55844116]
[148.11967468 -337.38485718]
[159.91156006 -327.98260498]
[168.99407959 -315.94271851]
[174.79629517 -302.02206421]
[176.95349121 -287.09567261]
[175.33004761 -272.10183716]
[170.02801514 -257.98306274]
[161.38069153 -245.62690735]
[149.93165588 -235.81007385]
[136.40060425 -229.14964294]
[121.63809204 -226.06431580]
[128.79937744 -213.00424194]
[120.45358276 -199.56332397]
[119.78379822 -184.57829285]
[119.11401367 -169.59324646]
[127.04295349 -160.45768738]
[126.60758209 -147.96792603]
[117.49621582 -138.83853149]
[116.60339355 -123.86512756]
[125.29196930 -108.61797333]
[115.02449036 -93.33202362]
[114.35469818 -78.34698486]
[113.68491364 -63.36194611]
[120.84619904 -50.30187988]
[112.50040436 -36.86095810]
[111.83061981 -21.87592125]
[111.27240753 -6.88631058]
[110.93743134 8.10994816]
[110.71410370 23.10828590]
[113.33866882 27.09836006]
[113.48456573 32.77953339]
[110.25419617 38.54809189]
[109.58441162 53.53313065]
[108.91462708 68.51817322]
[120.13629913 74.21035767]
[128.38002014 83.71656799]
[132.42665100 95.63092041]
[131.67770386 108.19141388]
[126.24396515 119.54048920]
[116.92901611 127.99972534]
[105.11044312 132.31809998]
[103.99479675 147.27655029]
[102.87915039 162.23500061]
[101.76349640 177.19346619]
[100.64785004 192.15191650]
[100.20124817 207.14526367]
[100.42457581 222.14360046]
[100.64790344 237.14193726]
[100.87123108 252.14027405]
[103.22934723 255.78627014]
[104.20633698 259.60858154]
[103.91636658 263.15136719]
[102.60991669 266.04269409]
[100.63459778 268.03173828]
[99.96481323 283.01675415]
[102.63061523 297.77798462]
[108.49957275 311.58215332]
[114.36853027 325.38632202]
[120.23749542 339.19052124]
[126.51485443 352.81384277]
[142.09255981 362.63302612]
[140.32206726 380.09246826]
[147.20147705 393.42190552]
[160.40620422 402.13659668]
[159.36769104 416.99493408]
[166.24710083 430.32437134]
[173.12652588 443.65380859]
[180.00593567 456.98324585]
[194.29702759 452.31838989]
[209.15138245 450.00656128]
[224.18420410 450.10760498]
[239.00613403 452.61889648]
[253.23323059 457.47540283]
[266.49697876 464.55136108]
[278.45385742 473.66342163]
[288.79409790 484.57559204]
[297.24987793 497.00521851]
[303.60217285 510.63037109]
[307.68646240 525.09808350]
[309.39694214 540.03363037]
[308.68930054 555.05010986]
[305.58187866 569.75860596]
[300.15515137 583.77813721]
[292.54968262 596.74554443]
[282.96249390 608.32489014]
[271.64190674 618.21636963]
[258.88116455 626.16363525]
[245.01075745 631.96087646]
[230.38999939 635.45794678]
[215.39758301 636.56427002]
[200.42187500 635.25122070]
[185.85076904 631.55273438]
[172.06167603 625.56463623]
[159.41178894 617.44201660]
[148.22875977 607.39532471]
[138.80224609 595.68475342]
[131.37644958 582.61364746]
[126.14367676 568.52062988]
[123.23949432 553.77062988]
[122.73912048 538.74578857]
[124.65551758 523.83526611]
[128.93904114 509.42529297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 176]
[4 175]
[5 174]
[6 173]
[8 171]
[9 170]
[12 168]
[17 167]
[18 166]
[19 165]
[20 164]
[51 163]
[52 162]
[53 157]
[54 156]
[55 155]
[56 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[72 142]
[73 141]
[74 140]
[75 137]
[76 136]
[78 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[88 127]
[89 126]
[91 123]
[92 122]
[93 121]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
