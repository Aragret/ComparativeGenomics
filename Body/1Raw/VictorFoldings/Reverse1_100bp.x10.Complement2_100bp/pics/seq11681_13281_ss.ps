%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[10.32086468 893.31304932]
[-3.84475112 898.27624512]
[-18.39358139 901.96801758]
[-33.21176147 904.35949707]
[-48.18331528 905.43194580]
[-63.19106674 905.17706299]
[-78.11756134 903.59674072]
[-92.84597015 900.70336914]
[-107.26103210 896.51965332]
[-121.24992371 891.07824707]
[-134.70315552 884.42181396]
[-147.51542664 876.60241699]
[-159.58648682 867.68127441]
[-170.82185364 857.72814941]
[-181.13357544 846.82098389]
[-190.44097900 835.04516602]
[-198.67118835 822.49285889]
[-205.75981140 809.26220703]
[-211.65135193 795.45690918]
[-216.29971313 781.18487549]
[-219.66850281 766.55786133]
[-221.73136902 751.69036865]
[-222.47216797 736.69879150]
[-221.88508606 721.70031738]
[-219.97473145 706.81250000]
[-216.75604248 692.15173340]
[-212.25422668 677.83282471]
[-206.50450134 663.96783447]
[-199.55187988 650.66522217]
[-191.45077515 638.02917480]
[-182.26457214 626.15856934]
[-172.06520081 615.14630127]
[-160.93244934 605.07855225]
[-148.95347595 596.03411865]
[-136.22201538 588.08380127]
[-122.83773041 581.28979492]
[-108.90535736 575.70532227]
[-94.53393555 571.37402344]
[-79.83596039 568.32983398]
[-64.92644501 566.59661865]
[-49.92209625 566.18786621]
[-34.94033432 567.10681152]
[-20.09842110 569.34625244]
[-16.55874825 554.76989746]
[-13.01907635 540.19354248]
[-9.47940350 525.61712646]
[-5.93973112 511.04077148]
[-2.40005875 496.46438599]
[1.13961375 481.88803101]
[-12.55529404 474.54162598]
[-23.89456367 463.89797974]
[-32.10385895 450.67599487]
[-36.62054062 435.77099609]
[-37.13223648 420.19393921]
[-33.59843063 405.00296021]
[-26.25359726 391.23141479]
[-15.59167576 379.81771851]
[-2.33283615 371.54119873]
[12.62515450 366.96908569]
[28.26772308 366.41751099]
[31.58998299 351.79006958]
[34.91224289 337.16259766]
[28.73308945 326.76333618]
[31.38120651 314.54977417]
[41.97000504 307.18499756]
[45.50967789 292.60861206]
[49.04935074 278.03222656]
[52.58902359 263.45587158]
[56.12869644 248.87948608]
[59.66836929 234.30310059]
[63.20804214 219.72673035]
[52.33641815 209.54470825]
[47.99211884 195.19261169]
[51.43770218 180.49586487]
[61.84531021 169.42434692]
[76.49281311 165.02003479]
[80.03248596 150.44366455]
[83.57215881 135.86727905]
[79.05672455 121.67361450]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[91.32932281 71.13504791]
[101.85147095 60.59304428]
[105.39114380 46.01667023]
[101.12889099 30.78040314]
[111.65103912 20.23840523]
[115.19071198 5.66202927]
[118.73038483 -8.91434574]
[120.29090881 -23.83295059]
[119.84429932 -38.82630157]
[119.39769745 -53.81965256]
[118.95108795 -68.81300354]
[108.91233063 -84.25012970]
[117.82695007 -99.36622620]
[117.15715790 -114.35126495]
[102.76427460 -119.16887665]
[91.08612823 -128.86347961]
[83.70209503 -142.12396240]
[81.61079407 -157.15695190]
[85.09506989 -171.92936707]
[93.68370056 -184.44335938]
[106.21513367 -193.00650024]
[120.99461365 -196.46072388]
[136.02331543 -194.33883667]
[149.26875305 -186.92784119]
[158.93957520 -175.22999573]
[163.72789001 -160.82733154]
[162.98609924 -145.66770935]
[156.81455994 -131.80133057]
[146.04788208 -121.10351562]
[132.14219666 -115.02105713]
[132.81198120 -100.03601837]
[141.52433777 -91.64427185]
[142.20498657 -79.16546631]
[133.94444275 -69.25960541]
[134.39105225 -54.26625824]
[134.83764648 -39.27290726]
[135.28425598 -24.27955627]
[141.89085388 -37.74629211]
[152.29032898 -48.55604553]
[165.49148560 -55.67850113]
[180.23608398 -58.43478775]
[195.11872864 -56.56220245]
[208.72093201 -50.23921967]
[219.74621582 -40.06851196]
[227.14369202 -27.01948166]
[230.20831299 -12.33588123]
[228.64796448 2.58274174]
[222.61137390 16.31443977]
[212.67390442 27.55039406]
[199.78273010 35.21966553]
[185.16656494 38.59127045]
[170.21853638 37.34384537]
[156.36335754 31.59628868]
[144.92166138 21.89641953]
[136.98397827 9.16876984]
[133.30676270 -5.37467384]
[129.76708984 9.20170116]
[126.22741699 23.77807617]
[130.74284363 37.97174454]
[119.96751404 49.55634308]
[116.42784119 64.13272095]
[120.94327545 78.32638550]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[108.67067719 128.86495972]
[98.14852905 139.40695190]
[94.60885620 153.98333740]
[91.06918335 168.55970764]
[102.06543732 179.19125366]
[106.23622894 193.80293274]
[102.55774689 208.44311523]
[92.11500549 219.20439148]
[77.78441620 223.26640320]
[74.24474335 237.84277344]
[70.70507050 252.41915894]
[67.16539764 266.99554443]
[63.62572479 281.57189941]
[60.08605194 296.14828491]
[56.54638290 310.72467041]
[62.13891983 328.26904297]
[49.53970337 340.48486328]
[46.21744156 355.11233521]
[42.89518356 369.73977661]
[55.81069183 376.33688354]
[66.76082611 385.83175659]
[75.10988617 397.66714478]
[80.37463379 411.15017700]
[82.25222015 425.49279785]
[80.63763428 439.85787964]
[75.62955475 453.40811157]
[67.52433014 465.35470581]
[56.79844666 475.00344849]
[44.08052826 481.79495239]
[30.11448097 485.33709717]
[15.71598911 485.42770386]
[12.17631721 500.00405884]
[8.63664436 514.58044434]
[5.09697199 529.15679932]
[1.55729938 543.73321533]
[-1.98237300 558.30957031]
[-5.52204561 572.88592529]
[8.69398308 577.70281982]
[22.42866325 583.75726318]
[35.57449722 591.00189209]
[48.02860260 599.38000488]
[59.69350433 608.82604980]
[70.47791290 619.26605225]
[80.29741669 630.61834717]
[89.07516479 642.79412842]
[96.74246216 655.69799805]
[103.23929596 669.22900391]
[108.51482391 683.28131104]
[112.52775574 697.74481201]
[115.24668121 712.50646973]
[116.65032196 727.45056152]
[116.72769165 742.46032715]
[115.47818756 757.41815186]
[112.91159058 772.20697021]
[109.04798126 786.71112061]
[103.91759491 800.81701660]
[97.56060028 814.41430664]
[90.02674103 827.39654541]
[81.37497711 839.66217041]
[71.67302704 851.11511230]
[60.99682236 861.66577148]
[49.42992020 871.23150635]
[37.06284714 879.73760986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 184]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[60 166]
[61 165]
[62 164]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[76 151]
[77 150]
[78 149]
[80 147]
[82 145]
[84 143]
[85 142]
[87 140]
[88 139]
[89 138]
[90 119]
[91 118]
[92 117]
[93 116]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
