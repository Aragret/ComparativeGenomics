%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[83.10932922 581.66571045]
[74.79045105 569.04479980]
[70.56283569 554.53210449]
[70.80240631 539.41809082]
[75.48784637 525.04663086]
[84.20254517 512.69567871]
[96.17159271 503.46350098]
[110.33070374 498.17098999]
[109.43788910 483.19757080]
[108.54507446 468.22418213]
[107.65225983 453.25076294]
[106.75944519 438.27734375]
[105.86662292 423.30395508]
[104.97380829 408.33053589]
[104.08099365 393.35714722]
[103.18817902 378.38372803]
[102.18392181 363.41738892]
[101.06826782 348.45892334]
[92.40579224 336.34237671]
[99.09524536 322.00497437]
[97.97959900 307.04650879]
[96.86395264 292.08807373]
[95.74830627 277.12960815]
[94.63265228 262.17114258]
[93.51700592 247.21270752]
[82.09832001 237.71800232]
[80.75380707 222.56390381]
[90.79013824 210.65130615]
[82.12766266 198.53475952]
[88.81712341 184.19734192]
[87.70146942 169.23889160]
[80.18836212 182.22169495]
[67.55191803 190.30378723]
[52.61515045 191.67961121]
[38.71496582 186.04179382]
[28.95670891 174.64985657]
[25.52039528 160.04876709]
[29.17370605 145.50045776]
[39.10048294 134.25505066]
[53.08306122 128.82481384]
[67.99769592 130.42285156]
[80.51241302 138.69218445]
[87.83140564 151.78541565]
[89.16963959 136.84523010]
[90.50787354 121.90505219]
[79.47817230 112.19779968]
[76.22195435 97.87013245]
[81.97264862 84.34924316]
[94.55194092 76.75671387]
[95.89017487 61.81652832]
[97.22840881 46.87634659]
[98.56664276 31.93615913]
[99.90487671 16.99597549]
[101.24311066 2.05578995]
[102.58134460 -12.88439465]
[103.91957855 -27.82457924]
[88.16371155 -35.61429214]
[76.63074493 -48.83091354]
[71.06900787 -65.42969513]
[72.30577850 -82.85636902]
[80.12435913 -98.44025421]
[93.30145264 -109.80349731]
[109.79849243 -115.22389221]
[110.46827698 -130.20893860]
[111.13806152 -145.19396973]
[111.80784607 -160.17901611]
[112.47763062 -175.16404724]
[113.14742279 -190.14909363]
[113.81720734 -205.13412476]
[114.48699188 -220.11917114]
[100.76865387 -226.60630798]
[90.60650635 -237.82119751]
[85.52600861 -252.03395081]
[86.27203369 -267.06826782]
[92.69979095 -280.63473511]
[103.80165100 -290.67935181]
[117.86497498 -295.69454956]
[110.75160217 -309.82644653]
[119.04949188 -322.19552612]
[119.71927643 -337.18057251]
[120.38906097 -352.16558838]
[121.05884552 -367.15063477]
[112.19605255 -383.29165649]
[122.21025848 -397.70285034]
[122.65686798 -412.69619751]
[123.10346985 -427.68954468]
[123.55007935 -442.68289185]
[113.24672699 -451.35787964]
[109.87018585 -464.19570923]
[114.43646240 -476.45260620]
[125.06851196 -483.73193359]
[125.73829651 -498.71697998]
[126.40808105 -513.70202637]
[115.02030945 -521.46795654]
[109.00459290 -533.74920654]
[109.83618164 -547.29095459]
[117.19112396 -558.56256104]
[129.05871582 -564.67828369]
[129.95153809 -579.65167236]
[130.84434509 -594.62512207]
[117.15640259 -601.23632812]
[107.04412842 -612.58581543]
[102.04959106 -626.94281006]
[102.93440247 -642.11798096]
[109.56364441 -655.79718018]
[120.92640686 -665.89453125]
[135.28994751 -670.87017822]
[150.46392822 -669.96539307]
[164.13444519 -663.31817627]
[174.21681213 -651.94213867]
[179.17356873 -637.57208252]
[178.24884033 -622.39929199]
[171.58361816 -608.73754883]
[160.19433594 -598.67010498]
[145.81774902 -593.73229980]
[144.92494202 -578.75885010]
[144.03211975 -563.78546143]
[157.04222107 -553.77471924]
[161.56709290 -537.82208252]
[155.63291931 -522.16046143]
[141.39311218 -513.03222656]
[140.72332764 -498.04721069]
[140.05354309 -483.06216431]
[151.92262268 -471.14730835]
[151.49346924 -453.99707031]
[138.54342651 -442.23629761]
[138.09681702 -427.24295044]
[137.65022278 -412.24960327]
[137.20361328 -397.25625610]
[145.26768494 -388.23974609]
[145.01832581 -375.74487305]
[136.04388428 -366.48086548]
[135.37409973 -351.49581909]
[134.70431519 -336.51077271]
[134.03453064 -321.52572632]
[141.19580078 -308.46566772]
[132.85002136 -295.02474976]
[146.40982056 -288.77487183]
[156.57127380 -277.77987671]
[161.76306152 -263.69406128]
[161.16482544 -248.65312195]
[154.83657837 -234.95031738]
[143.71441650 -224.68676758]
[129.47203064 -219.44938660]
[128.80224609 -204.46434021]
[128.13246155 -189.47930908]
[127.46266937 -174.49426270]
[126.79288483 -159.50923157]
[126.12310028 -144.52418518]
[125.45331573 -129.53915405]
[124.78353119 -114.55410767]
[136.59478760 -110.21237946]
[146.72439575 -102.71586609]
[154.35005188 -92.66062927]
[158.84916687 -80.85095978]
[159.84974670 -68.23502350]
[157.26113892 -55.82875824]
[151.28210449 -44.63405228]
[142.38565063 -35.55783081]
[131.28153992 -29.33860016]
[118.85976410 -26.48634529]
[117.52153015 -11.54616070]
[116.18329620 3.39402413]
[114.84506226 18.33420944]
[113.50682831 33.27439499]
[112.16859436 48.21458054]
[110.83036041 63.15476608]
[109.49212646 78.09494781]
[120.52182770 87.80220032]
[123.77804565 102.12986755]
[118.02735138 115.65075684]
[105.44805908 123.24328613]
[104.10982513 138.18347168]
[102.77159119 153.12365723]
[102.65992737 168.12324524]
[103.77557373 183.08169556]
[112.51785278 196.26817322]
[105.74859619 209.53565979]
[117.44101715 219.82765198]
[118.35935211 235.01354980]
[108.47545624 246.09704590]
[109.59111023 261.05551147]
[110.70675659 276.01394653]
[111.82240295 290.97241211]
[112.93805695 305.93087769]
[114.05370331 320.88931274]
[122.79598236 334.07580566]
[116.02672577 347.34329224]
[117.14237213 362.30175781]
[120.90138245 370.62686157]
[118.16158295 377.49090576]
[119.05439758 392.46432495]
[119.94721222 407.43774414]
[120.84003448 422.41113281]
[121.73284912 437.38455200]
[122.62566376 452.35794067]
[123.51847839 467.33135986]
[124.41129303 482.30474854]
[125.30410767 497.27816772]
[139.99182129 500.85064697]
[152.97312927 508.59515381]
[163.09375000 519.82299805]
[169.45376587 533.53582764]
[171.48765564 548.51428223]
[169.01455688 563.42651367]
[162.25437927 576.94659424]
[151.80822754 587.87219238]
[138.60498047 595.23193359]
[123.81864929 598.37133789]
[108.76403046 597.01123047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 189]
[18 188]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[28 178]
[30 176]
[31 175]
[43 174]
[44 173]
[45 172]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[77 137]
[79 135]
[80 134]
[81 133]
[82 132]
[84 129]
[85 128]
[86 127]
[87 126]
[91 123]
[92 122]
[93 121]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
