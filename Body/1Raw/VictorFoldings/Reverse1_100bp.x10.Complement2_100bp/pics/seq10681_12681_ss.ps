%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[81.87319183 610.46392822]
[68.69274902 603.26440430]
[56.47624207 594.52862549]
[45.40182495 584.38391113]
[35.63098907 572.97833252]
[27.30622292 560.47808838]
[20.54892921 547.06555176]
[15.45764923 532.93627930]
[12.10662651 518.29632568]
[10.54473114 503.35919189]
[10.79473782 488.34271240]
[12.85300255 473.46585083]
[16.68950844 458.94555664]
[22.24830818 444.99362183]
[29.44833946 431.81344604]
[38.18460464 419.59725952]
[48.32970047 408.52322388]
[59.73568344 398.75280762]
[72.23622131 390.42849731]
[85.64901733 383.67172241]
[99.77847290 378.58096313]
[114.41854858 375.23049927]
[112.85802460 360.31188965]
[111.29750061 345.39328003]
[109.73697662 330.47467041]
[108.17645264 315.55606079]
[99.15705872 303.70281982]
[105.41667938 289.17257690]
[103.85615540 274.25396729]
[102.29563141 259.33535767]
[100.73510742 244.41676331]
[99.17458344 229.49815369]
[97.61405945 214.57954407]
[95.11997223 212.08718872]
[93.70915985 208.26296997]
[93.99446869 203.62919617]
[96.33228302 198.96211243]
[95.43946838 183.98870850]
[94.54665375 169.01530457]
[93.65383911 154.04188538]
[91.27352142 151.44065857]
[90.03488159 147.55725098]
[90.52680969 142.94084167]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[83.00694275 68.99988556]
[82.94363403 56.50269699]
[91.14105988 47.60726166]
[90.91773224 32.60892487]
[90.69440460 17.61058807]
[84.12545013 31.09572220]
[74.20321655 42.34513474]
[61.64399338 50.54671478]
[47.35444641 55.10839462]
[32.36615372 55.70085144]
[17.76112556 52.28132248]
[4.59371519 45.09666443]
[-6.18551064 34.66554260]
[-13.79839039 21.74098969]
[-17.69534492 7.25604105]
[-17.59504700 -7.74362373]
[-13.50474072 -22.17516518]
[-5.71970654 -34.99675751]
[5.19804621 -45.28280258]
[18.46035576 -52.29073334]
[33.10980606 -55.51465225]
[48.08883667 -54.72181320]
[62.31610489 -49.96945572]
[74.76452637 -41.60065460]
[84.53543854 -30.21956444]
[90.92347717 -16.64779282]
[93.46751404 -1.86393511]
[97.86851501 -16.20378304]
[102.26951599 -30.54362869]
[106.67050934 -44.88347626]
[111.07151031 -59.22332382]
[115.47251129 -73.56317139]
[119.87350464 -87.90301514]
[124.27450562 -102.24286652]
[128.67550659 -116.58271027]
[125.32769012 -132.04565430]
[136.45864868 -141.94267273]
[140.85964966 -156.28253174]
[145.26065063 -170.62237549]
[149.34031677 -185.05693054]
[153.09661865 -199.57897949]
[156.85292053 -214.10104370]
[160.60922241 -228.62310791]
[146.69577026 -234.28872681]
[133.66163635 -241.75833130]
[121.73945618 -250.89862061]
[111.14196777 -261.54647827]
[102.05831146 -273.51187134]
[94.65059662 -286.58126831]
[89.05101013 -300.52142334]
[85.35949707 -315.08358765]
[83.64192963 -330.00784302]
[83.92895508 -345.02786255]
[86.21546173 -359.87561035]
[90.46063995 -374.28607178]
[96.58872223 -388.00213623]
[104.49035645 -400.77896118]
[114.02452850 -412.38858032]
[125.02108002 -422.62377930]
[137.28376770 -431.30191040]
[150.59376526 -438.26806641]
[164.71351624 -443.39797974]
[179.39105225 -446.60009766]
[194.36442566 -447.81723022]
[209.36642456 -447.02767944]
[224.12931824 -444.24557495]
[238.38966370 -439.52047729]
[251.89294434 -432.93679810]
[264.39819336 -424.61199951]
[275.68222046 -414.69464111]
[285.54364014 -403.36169434]
[293.80651855 -390.81546021]
[300.32336426 -377.27978516]
[304.97784424 -362.99624634]
[307.68695068 -348.21978760]
[308.40231323 -333.21405029]
[307.11114502 -318.24688721]
[303.83648682 -303.58535767]
[298.63684082 -289.49114990]
[291.60491943 -276.21575928]
[282.86627197 -263.99615479]
[272.57681274 -253.05033875]
[260.92019653 -243.57368469]
[248.10444641 -235.73533630]
[234.35827637 -229.67514038]
[219.92697144 -225.50126648]
[205.06811523 -223.28820801]
[190.04685974 -223.07545471]
[175.13127136 -224.86680603]
[171.37496948 -210.34474182]
[167.61866760 -195.82267761]
[163.86236572 -181.30062866]
[165.32713318 -178.09332275]
[165.31118774 -174.01719666]
[163.42309570 -169.77592468]
[159.60049438 -166.22137451]
[155.19949341 -151.88153076]
[150.79849243 -137.54168701]
[154.46110535 -123.10441589]
[143.01535034 -112.18171692]
[138.61434937 -97.84186554]
[134.21334839 -83.50202179]
[129.81234741 -69.16217041]
[125.41135406 -54.82232666]
[121.01036072 -40.48247910]
[116.60935974 -26.14263153]
[112.20836639 -11.80278397]
[107.80736542 2.53706288]
[105.69274139 17.38726044]
[105.91606903 32.38559723]
[106.13939667 47.38393402]
[115.93793488 61.94263077]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[108.62724304 153.14907837]
[109.52005768 168.12248230]
[110.41287231 183.09588623]
[111.30568695 198.06929016]
[112.53266907 213.01902771]
[114.09318542 227.93763733]
[115.65370941 242.85623169]
[117.21423340 257.77484131]
[118.77475739 272.69345093]
[120.33528137 287.61206055]
[129.46629333 300.53237915]
[123.09506226 313.99554443]
[124.65558624 328.91415405]
[126.21610260 343.83276367]
[127.77662659 358.75137329]
[129.33715820 373.66995239]
[144.35366821 373.91830444]
[159.23075867 375.97488403]
[173.75146484 379.80975342]
[187.70404053 385.36700439]
[200.88502502 392.56555176]
[213.10218811 401.30044556]
[224.17736816 411.44430542]
[233.94905090 422.84918213]
[242.27474976 435.34878540]
[249.03305054 448.76083374]
[254.12538147 462.88970947]
[257.47750854 477.52941895]
[259.04052734 492.46643066]
[258.79162598 507.48294067]
[256.73446655 522.35992432]
[252.89906311 536.88049316]
[247.34130859 550.83288574]
[240.14225769 564.01361084]
[231.40690613 576.23040771]
[221.26263428 587.30523682]
[209.85739136 597.07647705]
[197.35746765 605.40173340]
[183.94517517 612.15948486]
[169.81610107 617.25134277]
[155.17628479 620.60290527]
[140.23921204 622.16534424]
[125.22271729 621.91589355]
[110.34577942 619.85821533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[37 170]
[38 169]
[39 168]
[40 167]
[44 166]
[45 165]
[46 164]
[47 162]
[48 161]
[51 159]
[52 158]
[53 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[85 146]
[86 145]
[87 144]
[88 140]
[89 139]
[90 138]
[91 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
