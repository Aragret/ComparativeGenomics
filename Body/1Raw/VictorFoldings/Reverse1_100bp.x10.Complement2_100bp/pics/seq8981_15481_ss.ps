%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-35.79935455 636.04663086]
[-37.98290253 650.94018555]
[-43.12012100 665.08917236]
[-51.00064468 677.91424561]
[-61.30177307 688.89019775]
[-73.60167694 697.56756592]
[-87.39669037 703.59106445]
[-102.12191010 706.71398926]
[-117.17435455 706.80853271]
[-131.93762207 703.87072754]
[-145.80717468 698.02087402]
[-158.21507263 689.49865723]
[-168.65321350 678.65289307]
[-176.69413757 665.92779541]
[-182.00862122 651.84442139]
[-184.37899780 636.97949219]
[-183.70822144 621.94171143]
[-180.02375793 607.34686279]
[-173.47648621 593.79260254]
[-164.33450317 581.83392334]
[-152.97216797 571.96063232]
[-139.85478210 564.57696533]
[-125.51946259 559.98522949]
[-110.55326080 558.37353516]
[-95.56901550 559.80786133]
[-91.16801453 545.46801758]
[-86.76702118 531.12817383]
[-82.36602020 516.78833008]
[-96.63866425 521.40258789]
[-109.22879028 513.24853516]
[-110.85543060 498.33700562]
[-100.31948090 487.66021729]
[-85.38765717 489.08871460]
[-77.06737518 501.56784058]
[-71.61202240 487.59503174]
[-66.15666199 473.62222290]
[-66.65223694 466.24822998]
[-60.51466751 459.48300171]
[-54.85187912 445.59298706]
[-49.18909454 431.70294189]
[-61.16678619 423.53015137]
[-71.18195343 413.03576660]
[-78.79277802 400.67907715]
[-83.66271973 387.00167847]
[-85.57545471 372.60354614]
[-84.44443512 358.11694336]
[-80.31683350 344.17849731]
[-73.37155914 331.40127563]
[-63.91151810 320.34786987]
[-52.35039139 311.50549316]
[-39.19456863 305.26464844]
[-25.02093124 301.90179443]
[-10.45159531 301.56716919]
[3.87342334 304.27795410]
[9.74238396 290.47375488]
[15.61134529 276.66958618]
[21.48030663 262.86541748]
[27.34926605 249.06123352]
[33.21822739 235.25706482]
[27.42578888 221.58287048]
[33.18110275 207.49987793]
[47.56311798 201.51693726]
[53.43207932 187.71276855]
[59.30104065 173.90858459]
[65.16999817 160.10441589]
[63.02925491 145.36445618]
[75.54923248 135.69177246]
[74.62520599 131.00613403]
[76.63486481 125.69028473]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[110.85011292 58.53121185]
[117.02588654 44.86154175]
[122.79191589 31.01405525]
[128.24726868 17.04125786]
[133.70263672 3.06846046]
[131.51417542 -12.60065651]
[143.35040283 -21.64237976]
[148.80577087 -35.61517715]
[144.35119629 -47.71970749]
[149.18263245 -59.24537277]
[160.20701599 -64.22428894]
[165.86979675 -78.11431885]
[171.53257751 -92.00434875]
[177.19537354 -105.89437103]
[182.85815430 -119.78440094]
[188.52095032 -133.67442322]
[194.18373108 -147.56445312]
[199.84651184 -161.45448303]
[200.18841553 -170.58250427]
[205.69839478 -175.50813293]
[211.56736755 -189.31231689]
[217.43632507 -203.11650085]
[220.64959717 -217.76828003]
[221.09620667 -232.76162720]
[221.54280090 -247.75497437]
[221.98941040 -262.74832153]
[208.41743469 -269.73147583]
[199.22624207 -281.91690063]
[196.24073792 -296.88519287]
[200.05371094 -311.66436768]
[209.90808105 -323.32000732]
[223.84725952 -329.53790283]
[239.10360718 -329.08346558]
[252.64796448 -322.04693604]
[261.79110718 -309.82540894]
[264.71765137 -294.84548950]
[260.84649658 -280.08142090]
[250.94631958 -268.46466064]
[236.98275757 -262.30172729]
[236.53616333 -247.30838013]
[236.08955383 -232.31501770]
[235.64294434 -217.32167053]
[242.67866516 -230.56925964]
[252.54406738 -241.86854553]
[264.72164917 -250.62677002]
[278.57257080 -256.38452148]
[293.37026978 -258.83975220]
[308.33850098 -257.86361694]
[322.69201660 -253.50740051]
[335.67785645 -245.99958801]
[346.61486816 -235.73400879]
[354.92926025 -223.24917603]
[360.18490601 -209.20004272]
[362.10610962 -194.32359314]
[360.59207153 -179.40019226]
[355.72219849 -165.21272278]
[347.75198364 -152.50540161]
[337.09954834 -141.94485474]
[324.32363892 -134.08505249]
[310.09451294 -129.33831787]
[295.15853882 -127.95362854]
[280.29928589 -130.00364685]
[266.29623413 -135.38082886]
[253.88392639 -143.80310059]
[243.71348572 -154.82862854]
[236.31846619 -167.87905884]
[232.08677673 -182.26977539]
[231.24049377 -197.24752808]
[225.37153625 -183.44335938]
[219.50257874 -169.63917542]
[213.73654175 -155.79168701]
[208.07376099 -141.90167236]
[202.41096497 -128.01164246]
[196.74818420 -114.12161255]
[191.08540344 -100.23158264]
[185.42260742 -86.34156036]
[179.75982666 -72.45153046]
[174.09703064 -58.56150436]
[177.41812134 -41.32963562]
[162.77856445 -30.15982056]
[157.32321167 -16.18702316]
[159.90187073 -1.51733458]
[147.67543030 8.52381802]
[142.22007751 22.49661636]
[136.76470947 36.46941376]
[137.83796692 39.82805252]
[137.33776855 43.87340164]
[134.95906067 47.86026001]
[130.74114990 50.93537521]
[130.90696716 58.32417297]
[124.47342682 64.80857086]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[89.35340881 141.56074524]
[91.07437134 157.28807068]
[78.97417450 165.97337341]
[73.10521698 179.77755737]
[67.23625183 193.58172607]
[61.36729431 207.38591003]
[67.03732300 221.89411926]
[60.88871765 235.80992126]
[47.02240372 241.12602234]
[41.15344238 254.93019104]
[35.28448105 268.73437500]
[29.41552162 282.53854370]
[23.54656029 296.34271240]
[17.67760086 310.14691162]
[30.28763390 319.22448730]
[40.56334686 330.86959839]
[47.99430084 344.49911499]
[52.21240616 359.43142700]
[53.01015091 374.92056274]
[50.35082245 390.19348145]
[44.37016678 404.48858643]
[35.36946869 417.09375000]
[23.80038834 427.38174438]
[10.24227238 434.84152222]
[-4.62683439 439.10357666]
[-20.06411171 439.95816040]
[-35.29906464 437.36575317]
[-40.96185303 451.25576782]
[-46.62463760 465.14578247]
[-52.18386459 479.07760620]
[-57.63922119 493.05038452]
[-63.09457779 507.02319336]
[-68.02617645 521.18933105]
[-72.42716980 535.52917480]
[-76.82817078 549.86901855]
[-81.22916412 564.20886230]
[-68.02009583 571.42724609]
[-56.53469086 581.15716553]
[-47.24327850 593.00006104]
[-40.52632523 606.47100830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[28 203]
[34 202]
[35 201]
[36 200]
[38 199]
[39 198]
[40 197]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[62 176]
[63 175]
[64 174]
[65 173]
[67 171]
[70 170]
[71 169]
[73 167]
[74 166]
[75 165]
[76 163]
[77 159]
[78 158]
[79 157]
[81 155]
[82 154]
[85 152]
[86 151]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[94 144]
[95 143]
[96 142]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
