%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[3.80512190 522.34808350]
[5.53811264 537.26562500]
[5.49455452 552.28338623]
[3.67505884 567.19067383]
[0.10516871 581.77807617]
[-5.16499996 595.84082031]
[-12.06146336 609.18157959]
[-20.48740387 621.61297607]
[-30.32453728 632.96051025]
[-41.43476105 643.06494141]
[-53.66210938 651.78436279]
[-66.83493042 658.99639893]
[-80.76829529 664.59973145]
[-95.26660156 668.51580811]
[-110.12631226 670.68957520]
[-125.13882446 671.09057617]
[-140.09338379 669.71307373]
[-154.78005981 666.57653809]
[-168.99266052 661.72491455]
[-182.53167725 655.22631836]
[-195.20703125 647.17205811]
[-206.84078979 637.67510986]
[-217.26963806 626.86883545]
[-226.34715271 614.90490723]
[-233.94590759 601.95135498]
[-239.95922852 588.18994141]
[-244.30270386 573.81390381]
[-246.91534424 559.02502441]
[-247.76049805 544.03094482]
[-246.82626343 529.04217529]
[-244.12579346 514.26910400]
[-239.69697571 499.91912842]
[-233.60198975 486.19369507]
[-225.92639160 473.28549194]
[-216.77793884 461.37573242]
[-206.28507996 450.63159180]
[-194.59509277 441.20394897]
[-181.87210083 433.22512817]
[-168.29470825 426.80709839]
[-154.05352783 422.04000854]
[-139.34848022 418.99078369]
[-124.38599396 417.70220947]
[-109.37612915 418.19238281]
[-94.52959442 420.45440674]
[-80.05481720 424.45654297]
[-66.15499115 430.14260864]
[-53.02526093 437.43276978]
[-44.24465942 425.27130127]
[-35.46405792 413.10986328]
[-38.08402252 398.49237061]
[-29.35248566 386.03384399]
[-14.00254154 383.38488770]
[-5.22193813 371.22341919]
[3.55866528 359.06198120]
[12.33926868 346.90051270]
[20.09565926 334.06158447]
[26.77585411 320.63119507]
[33.45605087 307.20080566]
[40.13624573 293.77044678]
[46.81643677 280.34005737]
[53.49663162 266.90969849]
[60.17682648 253.47930908]
[65.00282288 239.27685547]
[67.88809967 224.55696106]
[70.77336884 209.83708191]
[73.65864563 195.11718750]
[76.54391479 180.39729309]
[79.42919159 165.67739868]
[82.31446075 150.95750427]
[85.19972992 136.23762512]
[88.08500671 121.51773071]
[90.97027588 106.79783630]
[79.10783386 115.97837830]
[64.11865997 116.54827881]
[51.59336090 108.29499054]
[46.20355606 94.29677582]
[49.95951080 79.77462769]
[61.46034622 70.14494324]
[76.41653442 68.99936676]
[89.24979401 76.76515961]
[95.17373657 90.54704285]
[99.78775024 76.27430725]
[104.40175629 62.00157547]
[109.01576233 47.72883987]
[113.62977600 33.45610809]
[118.24378204 19.18337440]
[122.32344818 4.74882078]
[125.86312103 -9.82755470]
[129.40280151 -24.40393066]
[132.94247437 -38.98030472]
[136.48214722 -53.55668259]
[139.03797913 -68.33733368]
[140.59849548 -83.25593567]
[142.15901184 -98.17454529]
[143.27467346 -113.13299561]
[143.94445801 -128.11804199]
[144.61424255 -143.10307312]
[145.28402710 -158.08811951]
[131.18856812 -163.61955261]
[119.65451050 -173.42996216]
[111.93298340 -186.45520020]
[108.86156464 -201.28237915]
[110.77340698 -216.30314636]
[117.46113586 -229.88818359]
[128.19932556 -240.56385803]
[141.82315063 -247.17218018]
[156.85482788 -248.99630737]
[171.66381836 -245.83839417]
[184.64376831 -238.04096985]
[194.38668823 -226.44984436]
[199.83575439 -212.32234192]
[200.39988708 -197.19090271]
[196.01789856 -182.69686890]
[187.16510010 -170.41246033]
[174.80180359 -161.67018127]
[160.26905823 -157.41833496]
[159.59927368 -142.43328857]
[158.92948914 -127.44824982]
[158.25970459 -112.46321106]
[160.04969788 -110.30587769]
[161.09298706 -107.30951691]
[161.06571960 -103.75498962]
[159.75161743 -100.03509521]
[157.07762146 -96.61402130]
[155.51710510 -81.69541931]
[153.95657349 -66.77680969]
[164.44543457 -77.49987030]
[179.04238892 -80.95366669]
[193.22442627 -76.06801605]
[202.59709167 -64.35677338]
[204.25616455 -49.44880295]
[197.68754578 -35.96350479]
[184.92660522 -28.07944107]
[169.92745972 -28.23957443]
[157.33775330 -36.39428711]
[151.05851746 -50.01700974]
[147.51884460 -35.44063187]
[143.97917175 -20.86425781]
[140.43949890 -6.28788233]
[136.89982605 8.28849316]
[150.87251282 2.83286047]
[163.92565918 10.22308540]
[166.43696594 25.01136971]
[156.55519104 36.29634094]
[141.56481934 35.75913620]
[132.51651001 23.79738235]
[127.90251160 38.07011795]
[123.28849792 52.34284973]
[118.67449188 66.61558533]
[114.06047821 80.88831329]
[109.44647217 95.16104889]
[105.69017029 109.68310547]
[102.80490112 124.40299988]
[99.91962433 139.12289429]
[97.03435516 153.84278870]
[94.14907837 168.56266785]
[91.26380920 183.28256226]
[88.37853241 198.00245667]
[85.49326324 212.72235107]
[82.60798645 227.44224548]
[79.72271729 242.16212463]
[89.14789581 230.49311829]
[101.68328094 222.25514221]
[116.13408661 218.23342896]
[131.12295532 218.81127930]
[145.22123718 223.93363953]
[157.08517456 233.11224365]
[165.58396912 245.47227478]
[169.90759277 259.83566284]
[169.64390564 274.83334351]
[164.81808472 289.03585815]
[155.89006042 301.08947754]
[143.71081543 309.84539795]
[129.44119263 314.46902466]
[114.44127655 314.51962280]
[100.14076233 309.99243164]
[87.90270233 301.31893921]
[78.89353180 289.32580566]
[73.97194672 275.15618896]
[73.60720062 260.15951538]
[66.92700958 273.58987427]
[60.24681473 287.02026367]
[53.56661987 300.45062256]
[46.88642502 313.88101196]
[40.20623016 327.31140137]
[33.52603531 340.74176025]
[46.61587143 333.41671753]
[61.60769653 332.92163086]
[75.15230560 339.36706543]
[84.22379303 351.31311035]
[86.79556274 366.09100342]
[82.29308319 380.39929199]
[71.72221375 391.04150391]
[57.44451141 395.64013672]
[42.64965820 393.16781616]
[30.64286041 384.17691040]
[24.10646439 370.67596436]
[24.50072479 355.68112183]
[15.72012138 367.84255981]
[6.93951797 380.00402832]
[-1.84108531 392.16549683]
[0.47478628 407.56918335]
[-8.60323811 419.77755737]
[-23.30260086 421.89047241]
[-32.08320236 434.05191040]
[-40.86380768 446.21337891]
[-29.81238174 456.38208008]
[-20.04124069 467.78649902]
[-11.68755341 480.26657104]
[-4.86859369 493.64709473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 206]
[48 205]
[49 204]
[52 201]
[53 200]
[54 199]
[55 198]
[56 186]
[57 185]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 126]
[93 125]
[94 124]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
